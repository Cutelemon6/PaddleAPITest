2025-03-05 15:22:10.619658 test begin: paddle.broadcast_to(Tensor([2, 0, 141, 85],"bool"), list[2,8,141,85,], )

W0305 15:22:13.646670 137255 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0305 15:22:13.647946 137255 gpu_resources.cc:164] device: 0, cuDNN Version: 8.6.
[torch error] paddle.broadcast_to(Tensor([2, 0, 141, 85],"bool"), list[2,8,141,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 141, 85].  Tensor sizes: [2, 0, 141, 85]
2025-03-05 15:22:56.673963 test begin: paddle.broadcast_to(Tensor([2, 0, 142, 121],"bool"), list[2,8,142,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 142, 121],"bool"), list[2,8,142,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 142, 121].  Tensor sizes: [2, 0, 142, 121]
2025-03-05 15:22:56.677122 test begin: paddle.broadcast_to(Tensor([2, 0, 142, 129],"bool"), list[2,8,142,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 142, 129],"bool"), list[2,8,142,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 142, 129].  Tensor sizes: [2, 0, 142, 129]
2025-03-05 15:22:56.678171 test begin: paddle.broadcast_to(Tensor([2, 0, 142, 142],"bool"), list[2,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 142, 142],"bool"), list[2,8,142,142,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 142, 142].  Tensor sizes: [2, 0, 142, 142]
2025-03-05 15:22:56.679029 test begin: paddle.broadcast_to(Tensor([2, 0, 142, 181],"bool"), list[2,8,142,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 142, 181],"bool"), list[2,8,142,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 142, 181].  Tensor sizes: [2, 0, 142, 181]
2025-03-05 15:22:56.679720 test begin: paddle.broadcast_to(Tensor([2, 0, 142, 85],"bool"), list[2,8,142,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 142, 85],"bool"), list[2,8,142,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 142, 85].  Tensor sizes: [2, 0, 142, 85]
2025-03-05 15:22:56.680317 test begin: paddle.broadcast_to(Tensor([2, 0, 143, 121],"bool"), list[2,8,143,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 143, 121],"bool"), list[2,8,143,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 143, 121].  Tensor sizes: [2, 0, 143, 121]
2025-03-05 15:22:56.680955 test begin: paddle.broadcast_to(Tensor([2, 0, 143, 129],"bool"), list[2,8,143,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 143, 129],"bool"), list[2,8,143,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 143, 129].  Tensor sizes: [2, 0, 143, 129]
2025-03-05 15:22:56.681519 test begin: paddle.broadcast_to(Tensor([2, 0, 143, 143],"bool"), list[2,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 143, 143],"bool"), list[2,8,143,143,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 143, 143].  Tensor sizes: [2, 0, 143, 143]
2025-03-05 15:22:56.682106 test begin: paddle.broadcast_to(Tensor([2, 0, 143, 181],"bool"), list[2,8,143,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 143, 181],"bool"), list[2,8,143,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 143, 181].  Tensor sizes: [2, 0, 143, 181]
2025-03-05 15:22:56.682681 test begin: paddle.broadcast_to(Tensor([2, 0, 144, 121],"bool"), list[2,8,144,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 144, 121],"bool"), list[2,8,144,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 144, 121].  Tensor sizes: [2, 0, 144, 121]
2025-03-05 15:22:56.683237 test begin: paddle.broadcast_to(Tensor([2, 0, 144, 129],"bool"), list[2,8,144,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 144, 129],"bool"), list[2,8,144,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 144, 129].  Tensor sizes: [2, 0, 144, 129]
2025-03-05 15:22:56.683807 test begin: paddle.broadcast_to(Tensor([2, 0, 144, 144],"bool"), list[2,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 144, 144],"bool"), list[2,8,144,144,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 144, 144].  Tensor sizes: [2, 0, 144, 144]
2025-03-05 15:22:56.684382 test begin: paddle.broadcast_to(Tensor([2, 0, 144, 181],"bool"), list[2,8,144,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 144, 181],"bool"), list[2,8,144,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 144, 181].  Tensor sizes: [2, 0, 144, 181]
2025-03-05 15:22:56.685021 test begin: paddle.broadcast_to(Tensor([2, 0, 145, 121],"bool"), list[2,8,145,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 145, 121],"bool"), list[2,8,145,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 145, 121].  Tensor sizes: [2, 0, 145, 121]
2025-03-05 15:22:56.685602 test begin: paddle.broadcast_to(Tensor([2, 0, 145, 129],"bool"), list[2,8,145,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 145, 129],"bool"), list[2,8,145,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 145, 129].  Tensor sizes: [2, 0, 145, 129]
2025-03-05 15:22:56.686157 test begin: paddle.broadcast_to(Tensor([2, 0, 145, 145],"bool"), list[2,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 145, 145],"bool"), list[2,8,145,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 145, 145].  Tensor sizes: [2, 0, 145, 145]
2025-03-05 15:22:56.686702 test begin: paddle.broadcast_to(Tensor([2, 0, 145, 181],"bool"), list[2,8,145,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 145, 181],"bool"), list[2,8,145,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 145, 181].  Tensor sizes: [2, 0, 145, 181]
2025-03-05 15:22:56.687224 test begin: paddle.broadcast_to(Tensor([2, 0, 146, 121],"bool"), list[2,8,146,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 146, 121],"bool"), list[2,8,146,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 146, 121].  Tensor sizes: [2, 0, 146, 121]
2025-03-05 15:22:56.687763 test begin: paddle.broadcast_to(Tensor([2, 0, 146, 129],"bool"), list[2,8,146,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 146, 129],"bool"), list[2,8,146,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 146, 129].  Tensor sizes: [2, 0, 146, 129]
2025-03-05 15:22:56.688277 test begin: paddle.broadcast_to(Tensor([2, 0, 146, 146],"bool"), list[2,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 146, 146],"bool"), list[2,8,146,146,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 146, 146].  Tensor sizes: [2, 0, 146, 146]
2025-03-05 15:22:56.688932 test begin: paddle.broadcast_to(Tensor([2, 0, 146, 181],"bool"), list[2,8,146,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 146, 181],"bool"), list[2,8,146,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 146, 181].  Tensor sizes: [2, 0, 146, 181]
2025-03-05 15:22:56.689484 test begin: paddle.broadcast_to(Tensor([2, 0, 147, 121],"bool"), list[2,8,147,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 147, 121],"bool"), list[2,8,147,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 147, 121].  Tensor sizes: [2, 0, 147, 121]
2025-03-05 15:22:56.690078 test begin: paddle.broadcast_to(Tensor([2, 0, 147, 129],"bool"), list[2,8,147,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 147, 129],"bool"), list[2,8,147,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 147, 129].  Tensor sizes: [2, 0, 147, 129]
2025-03-05 15:22:56.690642 test begin: paddle.broadcast_to(Tensor([2, 0, 147, 147],"bool"), list[2,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 147, 147],"bool"), list[2,8,147,147,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 147, 147].  Tensor sizes: [2, 0, 147, 147]
2025-03-05 15:22:56.691180 test begin: paddle.broadcast_to(Tensor([2, 0, 147, 181],"bool"), list[2,8,147,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 147, 181],"bool"), list[2,8,147,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 147, 181].  Tensor sizes: [2, 0, 147, 181]
2025-03-05 15:22:56.691711 test begin: paddle.broadcast_to(Tensor([2, 0, 148, 121],"bool"), list[2,8,148,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 148, 121],"bool"), list[2,8,148,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 148, 121].  Tensor sizes: [2, 0, 148, 121]
2025-03-05 15:22:56.692241 test begin: paddle.broadcast_to(Tensor([2, 0, 148, 129],"bool"), list[2,8,148,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 148, 129],"bool"), list[2,8,148,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 148, 129].  Tensor sizes: [2, 0, 148, 129]
2025-03-05 15:22:56.692783 test begin: paddle.broadcast_to(Tensor([2, 0, 148, 148],"bool"), list[2,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 148, 148],"bool"), list[2,8,148,148,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 148, 148].  Tensor sizes: [2, 0, 148, 148]
2025-03-05 15:22:56.693305 test begin: paddle.broadcast_to(Tensor([2, 0, 148, 181],"bool"), list[2,8,148,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 148, 181],"bool"), list[2,8,148,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 148, 181].  Tensor sizes: [2, 0, 148, 181]
2025-03-05 15:22:56.693847 test begin: paddle.broadcast_to(Tensor([2, 0, 149, 121],"bool"), list[2,8,149,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 149, 121],"bool"), list[2,8,149,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 149, 121].  Tensor sizes: [2, 0, 149, 121]
2025-03-05 15:22:56.694402 test begin: paddle.broadcast_to(Tensor([2, 0, 149, 129],"bool"), list[2,8,149,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 149, 129],"bool"), list[2,8,149,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 149, 129].  Tensor sizes: [2, 0, 149, 129]
2025-03-05 15:22:56.694948 test begin: paddle.broadcast_to(Tensor([2, 0, 149, 149],"bool"), list[2,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 149, 149],"bool"), list[2,8,149,149,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 149, 149].  Tensor sizes: [2, 0, 149, 149]
2025-03-05 15:22:56.695468 test begin: paddle.broadcast_to(Tensor([2, 0, 149, 181],"bool"), list[2,8,149,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 149, 181],"bool"), list[2,8,149,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 149, 181].  Tensor sizes: [2, 0, 149, 181]
2025-03-05 15:22:56.696015 test begin: paddle.broadcast_to(Tensor([2, 0, 15, 121],"bool"), list[2,8,15,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 15, 121],"bool"), list[2,8,15,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 15, 121].  Tensor sizes: [2, 0, 15, 121]
2025-03-05 15:22:56.696533 test begin: paddle.broadcast_to(Tensor([2, 0, 15, 129],"bool"), list[2,8,15,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 15, 129],"bool"), list[2,8,15,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 15, 129].  Tensor sizes: [2, 0, 15, 129]
2025-03-05 15:22:56.697060 test begin: paddle.broadcast_to(Tensor([2, 0, 15, 15],"bool"), list[2,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 15, 15],"bool"), list[2,8,15,15,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 15, 15].  Tensor sizes: [2, 0, 15, 15]
2025-03-05 15:22:56.697572 test begin: paddle.broadcast_to(Tensor([2, 0, 15, 161],"bool"), list[2,8,15,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 15, 161],"bool"), list[2,8,15,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 15, 161].  Tensor sizes: [2, 0, 15, 161]
2025-03-05 15:22:56.698112 test begin: paddle.broadcast_to(Tensor([2, 0, 15, 17],"bool"), list[2,8,15,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 15, 17],"bool"), list[2,8,15,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 15, 17].  Tensor sizes: [2, 0, 15, 17]
2025-03-05 15:22:56.698639 test begin: paddle.broadcast_to(Tensor([2, 0, 15, 181],"bool"), list[2,8,15,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 15, 181],"bool"), list[2,8,15,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 15, 181].  Tensor sizes: [2, 0, 15, 181]
2025-03-05 15:22:56.699157 test begin: paddle.broadcast_to(Tensor([2, 0, 15, 41],"bool"), list[2,8,15,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 15, 41],"bool"), list[2,8,15,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 15, 41].  Tensor sizes: [2, 0, 15, 41]
2025-03-05 15:22:56.699691 test begin: paddle.broadcast_to(Tensor([2, 0, 15, 57],"bool"), list[2,8,15,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 15, 57],"bool"), list[2,8,15,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 15, 57].  Tensor sizes: [2, 0, 15, 57]
2025-03-05 15:22:56.700221 test begin: paddle.broadcast_to(Tensor([2, 0, 15, 81],"bool"), list[2,8,15,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 15, 81],"bool"), list[2,8,15,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 15, 81].  Tensor sizes: [2, 0, 15, 81]
2025-03-05 15:22:56.700752 test begin: paddle.broadcast_to(Tensor([2, 0, 15, 85],"bool"), list[2,8,15,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 15, 85],"bool"), list[2,8,15,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 15, 85].  Tensor sizes: [2, 0, 15, 85]
2025-03-05 15:22:56.701270 test begin: paddle.broadcast_to(Tensor([2, 0, 150, 121],"bool"), list[2,8,150,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 150, 121],"bool"), list[2,8,150,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 150, 121].  Tensor sizes: [2, 0, 150, 121]
2025-03-05 15:22:56.701796 test begin: paddle.broadcast_to(Tensor([2, 0, 150, 129],"bool"), list[2,8,150,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 150, 129],"bool"), list[2,8,150,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 150, 129].  Tensor sizes: [2, 0, 150, 129]
2025-03-05 15:22:56.702339 test begin: paddle.broadcast_to(Tensor([2, 0, 150, 150],"bool"), list[2,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 150, 150],"bool"), list[2,8,150,150,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 150, 150].  Tensor sizes: [2, 0, 150, 150]
2025-03-05 15:22:56.702861 test begin: paddle.broadcast_to(Tensor([2, 0, 150, 181],"bool"), list[2,8,150,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 150, 181],"bool"), list[2,8,150,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 150, 181].  Tensor sizes: [2, 0, 150, 181]
2025-03-05 15:22:56.703376 test begin: paddle.broadcast_to(Tensor([2, 0, 151, 121],"bool"), list[2,8,151,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 151, 121],"bool"), list[2,8,151,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 151, 121].  Tensor sizes: [2, 0, 151, 121]
2025-03-05 15:22:56.703962 test begin: paddle.broadcast_to(Tensor([2, 0, 151, 129],"bool"), list[2,8,151,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 151, 129],"bool"), list[2,8,151,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 151, 129].  Tensor sizes: [2, 0, 151, 129]
2025-03-05 15:22:56.704490 test begin: paddle.broadcast_to(Tensor([2, 0, 151, 151],"bool"), list[2,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 151, 151],"bool"), list[2,8,151,151,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 151, 151].  Tensor sizes: [2, 0, 151, 151]
2025-03-05 15:22:56.705010 test begin: paddle.broadcast_to(Tensor([2, 0, 151, 181],"bool"), list[2,8,151,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 151, 181],"bool"), list[2,8,151,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 151, 181].  Tensor sizes: [2, 0, 151, 181]
2025-03-05 15:22:56.705538 test begin: paddle.broadcast_to(Tensor([2, 0, 152, 121],"bool"), list[2,8,152,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 152, 121],"bool"), list[2,8,152,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 152, 121].  Tensor sizes: [2, 0, 152, 121]
2025-03-05 15:22:56.706066 test begin: paddle.broadcast_to(Tensor([2, 0, 152, 129],"bool"), list[2,8,152,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 152, 129],"bool"), list[2,8,152,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 152, 129].  Tensor sizes: [2, 0, 152, 129]
2025-03-05 15:22:56.706657 test begin: paddle.broadcast_to(Tensor([2, 0, 152, 152],"bool"), list[2,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 152, 152],"bool"), list[2,8,152,152,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 152, 152].  Tensor sizes: [2, 0, 152, 152]
2025-03-05 15:22:56.707238 test begin: paddle.broadcast_to(Tensor([2, 0, 152, 181],"bool"), list[2,8,152,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 152, 181],"bool"), list[2,8,152,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 152, 181].  Tensor sizes: [2, 0, 152, 181]
2025-03-05 15:22:56.707796 test begin: paddle.broadcast_to(Tensor([2, 0, 153, 121],"bool"), list[2,8,153,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 153, 121],"bool"), list[2,8,153,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 153, 121].  Tensor sizes: [2, 0, 153, 121]
2025-03-05 15:22:56.708322 test begin: paddle.broadcast_to(Tensor([2, 0, 153, 129],"bool"), list[2,8,153,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 153, 129],"bool"), list[2,8,153,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 153, 129].  Tensor sizes: [2, 0, 153, 129]
2025-03-05 15:22:56.708843 test begin: paddle.broadcast_to(Tensor([2, 0, 153, 153],"bool"), list[2,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 153, 153],"bool"), list[2,8,153,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 153, 153].  Tensor sizes: [2, 0, 153, 153]
2025-03-05 15:22:56.709455 test begin: paddle.broadcast_to(Tensor([2, 0, 153, 181],"bool"), list[2,8,153,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 153, 181],"bool"), list[2,8,153,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 153, 181].  Tensor sizes: [2, 0, 153, 181]
2025-03-05 15:22:56.710029 test begin: paddle.broadcast_to(Tensor([2, 0, 154, 121],"bool"), list[2,8,154,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 154, 121],"bool"), list[2,8,154,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 154, 121].  Tensor sizes: [2, 0, 154, 121]
2025-03-05 15:22:56.710589 test begin: paddle.broadcast_to(Tensor([2, 0, 154, 129],"bool"), list[2,8,154,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 154, 129],"bool"), list[2,8,154,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 154, 129].  Tensor sizes: [2, 0, 154, 129]
2025-03-05 15:22:56.711139 test begin: paddle.broadcast_to(Tensor([2, 0, 154, 154],"bool"), list[2,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 154, 154],"bool"), list[2,8,154,154,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 154, 154].  Tensor sizes: [2, 0, 154, 154]
2025-03-05 15:22:56.711681 test begin: paddle.broadcast_to(Tensor([2, 0, 154, 181],"bool"), list[2,8,154,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 154, 181],"bool"), list[2,8,154,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 154, 181].  Tensor sizes: [2, 0, 154, 181]
2025-03-05 15:22:56.712197 test begin: paddle.broadcast_to(Tensor([2, 0, 155, 121],"bool"), list[2,8,155,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 155, 121],"bool"), list[2,8,155,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 155, 121].  Tensor sizes: [2, 0, 155, 121]
2025-03-05 15:22:56.712723 test begin: paddle.broadcast_to(Tensor([2, 0, 155, 129],"bool"), list[2,8,155,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 155, 129],"bool"), list[2,8,155,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 155, 129].  Tensor sizes: [2, 0, 155, 129]
2025-03-05 15:22:56.713235 test begin: paddle.broadcast_to(Tensor([2, 0, 155, 155],"bool"), list[2,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 155, 155],"bool"), list[2,8,155,155,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 155, 155].  Tensor sizes: [2, 0, 155, 155]
2025-03-05 15:22:56.713816 test begin: paddle.broadcast_to(Tensor([2, 0, 155, 181],"bool"), list[2,8,155,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 155, 181],"bool"), list[2,8,155,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 155, 181].  Tensor sizes: [2, 0, 155, 181]
2025-03-05 15:22:56.714371 test begin: paddle.broadcast_to(Tensor([2, 0, 156, 121],"bool"), list[2,8,156,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 156, 121],"bool"), list[2,8,156,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 156, 121].  Tensor sizes: [2, 0, 156, 121]
2025-03-05 15:22:56.714922 test begin: paddle.broadcast_to(Tensor([2, 0, 156, 129],"bool"), list[2,8,156,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 156, 129],"bool"), list[2,8,156,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 156, 129].  Tensor sizes: [2, 0, 156, 129]
2025-03-05 15:22:56.715453 test begin: paddle.broadcast_to(Tensor([2, 0, 156, 156],"bool"), list[2,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 156, 156],"bool"), list[2,8,156,156,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 156, 156].  Tensor sizes: [2, 0, 156, 156]
2025-03-05 15:22:56.715996 test begin: paddle.broadcast_to(Tensor([2, 0, 156, 181],"bool"), list[2,8,156,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 156, 181],"bool"), list[2,8,156,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 156, 181].  Tensor sizes: [2, 0, 156, 181]
2025-03-05 15:22:56.716525 test begin: paddle.broadcast_to(Tensor([2, 0, 157, 121],"bool"), list[2,8,157,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 157, 121],"bool"), list[2,8,157,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 157, 121].  Tensor sizes: [2, 0, 157, 121]
2025-03-05 15:22:56.717050 test begin: paddle.broadcast_to(Tensor([2, 0, 157, 129],"bool"), list[2,8,157,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 157, 129],"bool"), list[2,8,157,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 157, 129].  Tensor sizes: [2, 0, 157, 129]
2025-03-05 15:22:56.717569 test begin: paddle.broadcast_to(Tensor([2, 0, 157, 157],"bool"), list[2,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 157, 157],"bool"), list[2,8,157,157,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 157, 157].  Tensor sizes: [2, 0, 157, 157]
2025-03-05 15:22:56.718100 test begin: paddle.broadcast_to(Tensor([2, 0, 157, 181],"bool"), list[2,8,157,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 157, 181],"bool"), list[2,8,157,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 157, 181].  Tensor sizes: [2, 0, 157, 181]
2025-03-05 15:22:56.718623 test begin: paddle.broadcast_to(Tensor([2, 0, 158, 121],"bool"), list[2,8,158,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 158, 121],"bool"), list[2,8,158,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 158, 121].  Tensor sizes: [2, 0, 158, 121]
2025-03-05 15:22:56.719142 test begin: paddle.broadcast_to(Tensor([2, 0, 158, 129],"bool"), list[2,8,158,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 158, 129],"bool"), list[2,8,158,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 158, 129].  Tensor sizes: [2, 0, 158, 129]
2025-03-05 15:22:56.719684 test begin: paddle.broadcast_to(Tensor([2, 0, 158, 158],"bool"), list[2,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 158, 158],"bool"), list[2,8,158,158,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 158, 158].  Tensor sizes: [2, 0, 158, 158]
2025-03-05 15:22:56.720225 test begin: paddle.broadcast_to(Tensor([2, 0, 158, 181],"bool"), list[2,8,158,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 158, 181],"bool"), list[2,8,158,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 158, 181].  Tensor sizes: [2, 0, 158, 181]
2025-03-05 15:22:56.720753 test begin: paddle.broadcast_to(Tensor([2, 0, 159, 121],"bool"), list[2,8,159,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 159, 121],"bool"), list[2,8,159,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 159, 121].  Tensor sizes: [2, 0, 159, 121]
2025-03-05 15:22:56.721282 test begin: paddle.broadcast_to(Tensor([2, 0, 159, 129],"bool"), list[2,8,159,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 159, 129],"bool"), list[2,8,159,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 159, 129].  Tensor sizes: [2, 0, 159, 129]
2025-03-05 15:22:56.721817 test begin: paddle.broadcast_to(Tensor([2, 0, 159, 159],"bool"), list[2,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 159, 159],"bool"), list[2,8,159,159,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 159, 159].  Tensor sizes: [2, 0, 159, 159]
2025-03-05 15:22:56.722335 test begin: paddle.broadcast_to(Tensor([2, 0, 159, 181],"bool"), list[2,8,159,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 159, 181],"bool"), list[2,8,159,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 159, 181].  Tensor sizes: [2, 0, 159, 181]
2025-03-05 15:22:56.722862 test begin: paddle.broadcast_to(Tensor([2, 0, 16, 121],"bool"), list[2,8,16,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 16, 121],"bool"), list[2,8,16,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 16, 121].  Tensor sizes: [2, 0, 16, 121]
2025-03-05 15:22:56.723389 test begin: paddle.broadcast_to(Tensor([2, 0, 16, 129],"bool"), list[2,8,16,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 16, 129],"bool"), list[2,8,16,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 16, 129].  Tensor sizes: [2, 0, 16, 129]
2025-03-05 15:22:56.724010 test begin: paddle.broadcast_to(Tensor([2, 0, 16, 161],"bool"), list[2,8,16,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 16, 161],"bool"), list[2,8,16,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 16, 161].  Tensor sizes: [2, 0, 16, 161]
2025-03-05 15:22:56.724752 test begin: paddle.broadcast_to(Tensor([2, 0, 16, 16],"bool"), list[2,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 16, 16],"bool"), list[2,8,16,16,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 16, 16].  Tensor sizes: [2, 0, 16, 16]
2025-03-05 15:22:56.725347 test begin: paddle.broadcast_to(Tensor([2, 0, 16, 17],"bool"), list[2,8,16,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 16, 17],"bool"), list[2,8,16,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 16, 17].  Tensor sizes: [2, 0, 16, 17]
2025-03-05 15:22:56.726007 test begin: paddle.broadcast_to(Tensor([2, 0, 16, 181],"bool"), list[2,8,16,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 16, 181],"bool"), list[2,8,16,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 16, 181].  Tensor sizes: [2, 0, 16, 181]
2025-03-05 15:22:56.726546 test begin: paddle.broadcast_to(Tensor([2, 0, 16, 41],"bool"), list[2,8,16,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 16, 41],"bool"), list[2,8,16,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 16, 41].  Tensor sizes: [2, 0, 16, 41]
2025-03-05 15:22:56.727084 test begin: paddle.broadcast_to(Tensor([2, 0, 16, 57],"bool"), list[2,8,16,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 16, 57],"bool"), list[2,8,16,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 16, 57].  Tensor sizes: [2, 0, 16, 57]
2025-03-05 15:22:56.727614 test begin: paddle.broadcast_to(Tensor([2, 0, 16, 81],"bool"), list[2,8,16,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 16, 81],"bool"), list[2,8,16,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 16, 81].  Tensor sizes: [2, 0, 16, 81]
2025-03-05 15:22:56.728129 test begin: paddle.broadcast_to(Tensor([2, 0, 16, 85],"bool"), list[2,8,16,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 16, 85],"bool"), list[2,8,16,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 16, 85].  Tensor sizes: [2, 0, 16, 85]
2025-03-05 15:22:56.728650 test begin: paddle.broadcast_to(Tensor([2, 0, 160, 121],"bool"), list[2,8,160,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 160, 121],"bool"), list[2,8,160,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 160, 121].  Tensor sizes: [2, 0, 160, 121]
2025-03-05 15:22:56.729253 test begin: paddle.broadcast_to(Tensor([2, 0, 160, 129],"bool"), list[2,8,160,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 160, 129],"bool"), list[2,8,160,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 160, 129].  Tensor sizes: [2, 0, 160, 129]
2025-03-05 15:22:56.729827 test begin: paddle.broadcast_to(Tensor([2, 0, 160, 160],"bool"), list[2,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 160, 160],"bool"), list[2,8,160,160,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 160, 160].  Tensor sizes: [2, 0, 160, 160]
2025-03-05 15:22:56.730357 test begin: paddle.broadcast_to(Tensor([2, 0, 160, 181],"bool"), list[2,8,160,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 160, 181],"bool"), list[2,8,160,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 160, 181].  Tensor sizes: [2, 0, 160, 181]
2025-03-05 15:22:56.730896 test begin: paddle.broadcast_to(Tensor([2, 0, 161, 121],"bool"), list[2,8,161,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 161, 121],"bool"), list[2,8,161,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 161, 121].  Tensor sizes: [2, 0, 161, 121]
2025-03-05 15:22:56.731413 test begin: paddle.broadcast_to(Tensor([2, 0, 161, 129],"bool"), list[2,8,161,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 161, 129],"bool"), list[2,8,161,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 161, 129].  Tensor sizes: [2, 0, 161, 129]
2025-03-05 15:22:56.731941 test begin: paddle.broadcast_to(Tensor([2, 0, 161, 161],"bool"), list[2,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 161, 161],"bool"), list[2,8,161,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 161, 161].  Tensor sizes: [2, 0, 161, 161]
2025-03-05 15:22:56.732479 test begin: paddle.broadcast_to(Tensor([2, 0, 161, 181],"bool"), list[2,8,161,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 161, 181],"bool"), list[2,8,161,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 161, 181].  Tensor sizes: [2, 0, 161, 181]
2025-03-05 15:22:56.733020 test begin: paddle.broadcast_to(Tensor([2, 0, 162, 121],"bool"), list[2,8,162,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 162, 121],"bool"), list[2,8,162,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 162, 121].  Tensor sizes: [2, 0, 162, 121]
2025-03-05 15:22:56.733540 test begin: paddle.broadcast_to(Tensor([2, 0, 162, 129],"bool"), list[2,8,162,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 162, 129],"bool"), list[2,8,162,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 162, 129].  Tensor sizes: [2, 0, 162, 129]
2025-03-05 15:22:56.734070 test begin: paddle.broadcast_to(Tensor([2, 0, 162, 162],"bool"), list[2,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 162, 162],"bool"), list[2,8,162,162,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 162, 162].  Tensor sizes: [2, 0, 162, 162]
2025-03-05 15:22:56.734605 test begin: paddle.broadcast_to(Tensor([2, 0, 162, 181],"bool"), list[2,8,162,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 162, 181],"bool"), list[2,8,162,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 162, 181].  Tensor sizes: [2, 0, 162, 181]
2025-03-05 15:22:56.735136 test begin: paddle.broadcast_to(Tensor([2, 0, 163, 121],"bool"), list[2,8,163,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 163, 121],"bool"), list[2,8,163,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 163, 121].  Tensor sizes: [2, 0, 163, 121]
2025-03-05 15:22:56.735727 test begin: paddle.broadcast_to(Tensor([2, 0, 163, 129],"bool"), list[2,8,163,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 163, 129],"bool"), list[2,8,163,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 163, 129].  Tensor sizes: [2, 0, 163, 129]
2025-03-05 15:22:56.736326 test begin: paddle.broadcast_to(Tensor([2, 0, 163, 163],"bool"), list[2,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 163, 163],"bool"), list[2,8,163,163,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 163, 163].  Tensor sizes: [2, 0, 163, 163]
2025-03-05 15:22:56.736946 test begin: paddle.broadcast_to(Tensor([2, 0, 163, 181],"bool"), list[2,8,163,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 163, 181],"bool"), list[2,8,163,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 163, 181].  Tensor sizes: [2, 0, 163, 181]
2025-03-05 15:22:56.737500 test begin: paddle.broadcast_to(Tensor([2, 0, 164, 129],"bool"), list[2,8,164,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 164, 129],"bool"), list[2,8,164,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 164, 129].  Tensor sizes: [2, 0, 164, 129]
2025-03-05 15:22:56.738045 test begin: paddle.broadcast_to(Tensor([2, 0, 164, 164],"bool"), list[2,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 164, 164],"bool"), list[2,8,164,164,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 164, 164].  Tensor sizes: [2, 0, 164, 164]
2025-03-05 15:22:56.738591 test begin: paddle.broadcast_to(Tensor([2, 0, 164, 181],"bool"), list[2,8,164,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 164, 181],"bool"), list[2,8,164,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 164, 181].  Tensor sizes: [2, 0, 164, 181]
2025-03-05 15:22:56.739118 test begin: paddle.broadcast_to(Tensor([2, 0, 165, 129],"bool"), list[2,8,165,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 165, 129],"bool"), list[2,8,165,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 165, 129].  Tensor sizes: [2, 0, 165, 129]
2025-03-05 15:22:56.739659 test begin: paddle.broadcast_to(Tensor([2, 0, 165, 165],"bool"), list[2,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 165, 165],"bool"), list[2,8,165,165,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 165, 165].  Tensor sizes: [2, 0, 165, 165]
2025-03-05 15:22:56.740219 test begin: paddle.broadcast_to(Tensor([2, 0, 165, 181],"bool"), list[2,8,165,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 165, 181],"bool"), list[2,8,165,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 165, 181].  Tensor sizes: [2, 0, 165, 181]
2025-03-05 15:22:56.740748 test begin: paddle.broadcast_to(Tensor([2, 0, 166, 166],"bool"), list[2,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 166, 166],"bool"), list[2,8,166,166,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 166, 166].  Tensor sizes: [2, 0, 166, 166]
2025-03-05 15:22:56.741268 test begin: paddle.broadcast_to(Tensor([2, 0, 166, 181],"bool"), list[2,8,166,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 166, 181],"bool"), list[2,8,166,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 166, 181].  Tensor sizes: [2, 0, 166, 181]
2025-03-05 15:22:56.741801 test begin: paddle.broadcast_to(Tensor([2, 0, 167, 167],"bool"), list[2,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 167, 167],"bool"), list[2,8,167,167,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 167, 167].  Tensor sizes: [2, 0, 167, 167]
2025-03-05 15:22:56.742322 test begin: paddle.broadcast_to(Tensor([2, 0, 167, 181],"bool"), list[2,8,167,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 167, 181],"bool"), list[2,8,167,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 167, 181].  Tensor sizes: [2, 0, 167, 181]
2025-03-05 15:22:56.742887 test begin: paddle.broadcast_to(Tensor([2, 0, 168, 168],"bool"), list[2,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 168, 168],"bool"), list[2,8,168,168,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 168, 168].  Tensor sizes: [2, 0, 168, 168]
2025-03-05 15:22:56.743424 test begin: paddle.broadcast_to(Tensor([2, 0, 168, 181],"bool"), list[2,8,168,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 168, 181],"bool"), list[2,8,168,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 168, 181].  Tensor sizes: [2, 0, 168, 181]
2025-03-05 15:22:56.743947 test begin: paddle.broadcast_to(Tensor([2, 0, 169, 169],"bool"), list[2,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 169, 169],"bool"), list[2,8,169,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 169, 169].  Tensor sizes: [2, 0, 169, 169]
2025-03-05 15:22:56.744526 test begin: paddle.broadcast_to(Tensor([2, 0, 169, 181],"bool"), list[2,8,169,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 169, 181],"bool"), list[2,8,169,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 169, 181].  Tensor sizes: [2, 0, 169, 181]
2025-03-05 15:22:56.745059 test begin: paddle.broadcast_to(Tensor([2, 0, 17, 121],"bool"), list[2,8,17,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 17, 121],"bool"), list[2,8,17,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 17, 121].  Tensor sizes: [2, 0, 17, 121]
2025-03-05 15:22:56.745579 test begin: paddle.broadcast_to(Tensor([2, 0, 17, 129],"bool"), list[2,8,17,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 17, 129],"bool"), list[2,8,17,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 17, 129].  Tensor sizes: [2, 0, 17, 129]
2025-03-05 15:22:56.746108 test begin: paddle.broadcast_to(Tensor([2, 0, 17, 161],"bool"), list[2,8,17,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 17, 161],"bool"), list[2,8,17,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 17, 161].  Tensor sizes: [2, 0, 17, 161]
2025-03-05 15:22:56.746634 test begin: paddle.broadcast_to(Tensor([2, 0, 17, 17],"bool"), list[2,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 17, 17],"bool"), list[2,8,17,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 17, 17].  Tensor sizes: [2, 0, 17, 17]
2025-03-05 15:22:56.747175 test begin: paddle.broadcast_to(Tensor([2, 0, 17, 181],"bool"), list[2,8,17,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 17, 181],"bool"), list[2,8,17,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 17, 181].  Tensor sizes: [2, 0, 17, 181]
2025-03-05 15:22:56.747711 test begin: paddle.broadcast_to(Tensor([2, 0, 17, 41],"bool"), list[2,8,17,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 17, 41],"bool"), list[2,8,17,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 17, 41].  Tensor sizes: [2, 0, 17, 41]
2025-03-05 15:22:56.748236 test begin: paddle.broadcast_to(Tensor([2, 0, 17, 57],"bool"), list[2,8,17,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 17, 57],"bool"), list[2,8,17,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 17, 57].  Tensor sizes: [2, 0, 17, 57]
2025-03-05 15:22:56.748820 test begin: paddle.broadcast_to(Tensor([2, 0, 17, 81],"bool"), list[2,8,17,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 17, 81],"bool"), list[2,8,17,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 17, 81].  Tensor sizes: [2, 0, 17, 81]
2025-03-05 15:22:56.749347 test begin: paddle.broadcast_to(Tensor([2, 0, 17, 85],"bool"), list[2,8,17,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 17, 85],"bool"), list[2,8,17,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 17, 85].  Tensor sizes: [2, 0, 17, 85]
2025-03-05 15:22:56.749940 test begin: paddle.broadcast_to(Tensor([2, 0, 170, 170],"bool"), list[2,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 170, 170],"bool"), list[2,8,170,170,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 170, 170].  Tensor sizes: [2, 0, 170, 170]
2025-03-05 15:22:56.750569 test begin: paddle.broadcast_to(Tensor([2, 0, 170, 181],"bool"), list[2,8,170,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 170, 181],"bool"), list[2,8,170,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 170, 181].  Tensor sizes: [2, 0, 170, 181]
2025-03-05 15:22:56.751155 test begin: paddle.broadcast_to(Tensor([2, 0, 171, 171],"bool"), list[2,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 171, 171],"bool"), list[2,8,171,171,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 171, 171].  Tensor sizes: [2, 0, 171, 171]
2025-03-05 15:22:56.751709 test begin: paddle.broadcast_to(Tensor([2, 0, 171, 181],"bool"), list[2,8,171,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 171, 181],"bool"), list[2,8,171,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 171, 181].  Tensor sizes: [2, 0, 171, 181]
2025-03-05 15:22:56.752288 test begin: paddle.broadcast_to(Tensor([2, 0, 172, 172],"bool"), list[2,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 172, 172],"bool"), list[2,8,172,172,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 172, 172].  Tensor sizes: [2, 0, 172, 172]
2025-03-05 15:22:56.752889 test begin: paddle.broadcast_to(Tensor([2, 0, 172, 181],"bool"), list[2,8,172,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 172, 181],"bool"), list[2,8,172,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 172, 181].  Tensor sizes: [2, 0, 172, 181]
2025-03-05 15:22:56.753552 test begin: paddle.broadcast_to(Tensor([2, 0, 173, 173],"bool"), list[2,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 173, 173],"bool"), list[2,8,173,173,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 173, 173].  Tensor sizes: [2, 0, 173, 173]
2025-03-05 15:22:56.754133 test begin: paddle.broadcast_to(Tensor([2, 0, 173, 181],"bool"), list[2,8,173,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 173, 181],"bool"), list[2,8,173,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 173, 181].  Tensor sizes: [2, 0, 173, 181]
2025-03-05 15:22:56.754692 test begin: paddle.broadcast_to(Tensor([2, 0, 174, 174],"bool"), list[2,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 174, 174],"bool"), list[2,8,174,174,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 174, 174].  Tensor sizes: [2, 0, 174, 174]
2025-03-05 15:22:56.755238 test begin: paddle.broadcast_to(Tensor([2, 0, 174, 181],"bool"), list[2,8,174,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 174, 181],"bool"), list[2,8,174,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 174, 181].  Tensor sizes: [2, 0, 174, 181]
2025-03-05 15:22:56.755790 test begin: paddle.broadcast_to(Tensor([2, 0, 175, 175],"bool"), list[2,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 175, 175],"bool"), list[2,8,175,175,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 175, 175].  Tensor sizes: [2, 0, 175, 175]
2025-03-05 15:22:56.756351 test begin: paddle.broadcast_to(Tensor([2, 0, 175, 181],"bool"), list[2,8,175,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 175, 181],"bool"), list[2,8,175,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 175, 181].  Tensor sizes: [2, 0, 175, 181]
2025-03-05 15:22:56.756919 test begin: paddle.broadcast_to(Tensor([2, 0, 176, 176],"bool"), list[2,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 176, 176],"bool"), list[2,8,176,176,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 176, 176].  Tensor sizes: [2, 0, 176, 176]
2025-03-05 15:22:56.757492 test begin: paddle.broadcast_to(Tensor([2, 0, 176, 181],"bool"), list[2,8,176,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 176, 181],"bool"), list[2,8,176,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 176, 181].  Tensor sizes: [2, 0, 176, 181]
2025-03-05 15:22:56.758073 test begin: paddle.broadcast_to(Tensor([2, 0, 177, 177],"bool"), list[2,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 177, 177],"bool"), list[2,8,177,177,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 177, 177].  Tensor sizes: [2, 0, 177, 177]
2025-03-05 15:22:56.758612 test begin: paddle.broadcast_to(Tensor([2, 0, 177, 181],"bool"), list[2,8,177,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 177, 181],"bool"), list[2,8,177,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 177, 181].  Tensor sizes: [2, 0, 177, 181]
2025-03-05 15:22:56.759131 test begin: paddle.broadcast_to(Tensor([2, 0, 178, 178],"bool"), list[2,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 178, 178],"bool"), list[2,8,178,178,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 178, 178].  Tensor sizes: [2, 0, 178, 178]
2025-03-05 15:22:56.762223 test begin: paddle.broadcast_to(Tensor([2, 0, 178, 181],"bool"), list[2,8,178,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 178, 181],"bool"), list[2,8,178,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 178, 181].  Tensor sizes: [2, 0, 178, 181]
2025-03-05 15:22:56.763204 test begin: paddle.broadcast_to(Tensor([2, 0, 179, 179],"bool"), list[2,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 179, 179],"bool"), list[2,8,179,179,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 179, 179].  Tensor sizes: [2, 0, 179, 179]
2025-03-05 15:22:56.763756 test begin: paddle.broadcast_to(Tensor([2, 0, 179, 181],"bool"), list[2,8,179,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 179, 181],"bool"), list[2,8,179,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 179, 181].  Tensor sizes: [2, 0, 179, 181]
2025-03-05 15:22:56.764287 test begin: paddle.broadcast_to(Tensor([2, 0, 18, 121],"bool"), list[2,8,18,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 18, 121],"bool"), list[2,8,18,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 18, 121].  Tensor sizes: [2, 0, 18, 121]
2025-03-05 15:22:56.764818 test begin: paddle.broadcast_to(Tensor([2, 0, 18, 129],"bool"), list[2,8,18,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 18, 129],"bool"), list[2,8,18,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 18, 129].  Tensor sizes: [2, 0, 18, 129]
2025-03-05 15:22:56.765341 test begin: paddle.broadcast_to(Tensor([2, 0, 18, 161],"bool"), list[2,8,18,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 18, 161],"bool"), list[2,8,18,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 18, 161].  Tensor sizes: [2, 0, 18, 161]
2025-03-05 15:22:56.765899 test begin: paddle.broadcast_to(Tensor([2, 0, 18, 17],"bool"), list[2,8,18,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 18, 17],"bool"), list[2,8,18,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 18, 17].  Tensor sizes: [2, 0, 18, 17]
2025-03-05 15:22:56.766416 test begin: paddle.broadcast_to(Tensor([2, 0, 18, 181],"bool"), list[2,8,18,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 18, 181],"bool"), list[2,8,18,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 18, 181].  Tensor sizes: [2, 0, 18, 181]
2025-03-05 15:22:56.766938 test begin: paddle.broadcast_to(Tensor([2, 0, 18, 18],"bool"), list[2,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 18, 18],"bool"), list[2,8,18,18,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 18, 18].  Tensor sizes: [2, 0, 18, 18]
2025-03-05 15:22:56.767451 test begin: paddle.broadcast_to(Tensor([2, 0, 18, 41],"bool"), list[2,8,18,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 18, 41],"bool"), list[2,8,18,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 18, 41].  Tensor sizes: [2, 0, 18, 41]
2025-03-05 15:22:56.768033 test begin: paddle.broadcast_to(Tensor([2, 0, 18, 57],"bool"), list[2,8,18,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 18, 57],"bool"), list[2,8,18,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 18, 57].  Tensor sizes: [2, 0, 18, 57]
2025-03-05 15:22:56.768549 test begin: paddle.broadcast_to(Tensor([2, 0, 18, 81],"bool"), list[2,8,18,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 18, 81],"bool"), list[2,8,18,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 18, 81].  Tensor sizes: [2, 0, 18, 81]
2025-03-05 15:22:56.769073 test begin: paddle.broadcast_to(Tensor([2, 0, 18, 85],"bool"), list[2,8,18,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 18, 85],"bool"), list[2,8,18,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 18, 85].  Tensor sizes: [2, 0, 18, 85]
2025-03-05 15:22:56.769596 test begin: paddle.broadcast_to(Tensor([2, 0, 180, 180],"bool"), list[2,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 180, 180],"bool"), list[2,8,180,180,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 180, 180].  Tensor sizes: [2, 0, 180, 180]
2025-03-05 15:22:56.770116 test begin: paddle.broadcast_to(Tensor([2, 0, 180, 181],"bool"), list[2,8,180,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 180, 181],"bool"), list[2,8,180,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 180, 181].  Tensor sizes: [2, 0, 180, 181]
2025-03-05 15:22:56.770640 test begin: paddle.broadcast_to(Tensor([2, 0, 181, 181],"bool"), list[2,8,181,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 181, 181],"bool"), list[2,8,181,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 181, 181].  Tensor sizes: [2, 0, 181, 181]
2025-03-05 15:22:56.771158 test begin: paddle.broadcast_to(Tensor([2, 0, 182, 181],"bool"), list[2,8,182,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 182, 181],"bool"), list[2,8,182,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 182, 181].  Tensor sizes: [2, 0, 182, 181]
2025-03-05 15:22:56.771683 test begin: paddle.broadcast_to(Tensor([2, 0, 182, 182],"bool"), list[2,8,182,182,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 182, 182],"bool"), list[2,8,182,182,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 182, 182].  Tensor sizes: [2, 0, 182, 182]
2025-03-05 15:22:56.772212 test begin: paddle.broadcast_to(Tensor([2, 0, 183, 181],"bool"), list[2,8,183,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 183, 181],"bool"), list[2,8,183,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 183, 181].  Tensor sizes: [2, 0, 183, 181]
2025-03-05 15:22:56.772734 test begin: paddle.broadcast_to(Tensor([2, 0, 183, 183],"bool"), list[2,8,183,183,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 183, 183],"bool"), list[2,8,183,183,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 183, 183].  Tensor sizes: [2, 0, 183, 183]
2025-03-05 15:22:56.773245 test begin: paddle.broadcast_to(Tensor([2, 0, 184, 181],"bool"), list[2,8,184,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 184, 181],"bool"), list[2,8,184,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 184, 181].  Tensor sizes: [2, 0, 184, 181]
2025-03-05 15:22:56.773779 test begin: paddle.broadcast_to(Tensor([2, 0, 184, 184],"bool"), list[2,8,184,184,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 184, 184],"bool"), list[2,8,184,184,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 184, 184].  Tensor sizes: [2, 0, 184, 184]
2025-03-05 15:22:56.774333 test begin: paddle.broadcast_to(Tensor([2, 0, 185, 181],"bool"), list[2,8,185,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 185, 181],"bool"), list[2,8,185,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 185, 181].  Tensor sizes: [2, 0, 185, 181]
2025-03-05 15:22:56.774878 test begin: paddle.broadcast_to(Tensor([2, 0, 185, 185],"bool"), list[2,8,185,185,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 185, 185],"bool"), list[2,8,185,185,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 185, 185].  Tensor sizes: [2, 0, 185, 185]
2025-03-05 15:22:56.775390 test begin: paddle.broadcast_to(Tensor([2, 0, 186, 181],"bool"), list[2,8,186,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 186, 181],"bool"), list[2,8,186,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 186, 181].  Tensor sizes: [2, 0, 186, 181]
2025-03-05 15:22:56.775926 test begin: paddle.broadcast_to(Tensor([2, 0, 186, 186],"bool"), list[2,8,186,186,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 186, 186],"bool"), list[2,8,186,186,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 186, 186].  Tensor sizes: [2, 0, 186, 186]
2025-03-05 15:22:56.776447 test begin: paddle.broadcast_to(Tensor([2, 0, 187, 181],"bool"), list[2,8,187,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 187, 181],"bool"), list[2,8,187,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 187, 181].  Tensor sizes: [2, 0, 187, 181]
2025-03-05 15:22:56.776970 test begin: paddle.broadcast_to(Tensor([2, 0, 187, 187],"bool"), list[2,8,187,187,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 187, 187],"bool"), list[2,8,187,187,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 187, 187].  Tensor sizes: [2, 0, 187, 187]
2025-03-05 15:22:56.777479 test begin: paddle.broadcast_to(Tensor([2, 0, 188, 181],"bool"), list[2,8,188,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 188, 181],"bool"), list[2,8,188,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 188, 181].  Tensor sizes: [2, 0, 188, 181]
2025-03-05 15:22:56.778014 test begin: paddle.broadcast_to(Tensor([2, 0, 188, 188],"bool"), list[2,8,188,188,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 188, 188],"bool"), list[2,8,188,188,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 188, 188].  Tensor sizes: [2, 0, 188, 188]
2025-03-05 15:22:56.778610 test begin: paddle.broadcast_to(Tensor([2, 0, 189, 181],"bool"), list[2,8,189,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 189, 181],"bool"), list[2,8,189,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 189, 181].  Tensor sizes: [2, 0, 189, 181]
2025-03-05 15:22:56.779170 test begin: paddle.broadcast_to(Tensor([2, 0, 189, 189],"bool"), list[2,8,189,189,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 189, 189],"bool"), list[2,8,189,189,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 189, 189].  Tensor sizes: [2, 0, 189, 189]
2025-03-05 15:22:56.779806 test begin: paddle.broadcast_to(Tensor([2, 0, 19, 121],"bool"), list[2,8,19,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 19, 121],"bool"), list[2,8,19,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 19, 121].  Tensor sizes: [2, 0, 19, 121]
2025-03-05 15:22:56.780340 test begin: paddle.broadcast_to(Tensor([2, 0, 19, 129],"bool"), list[2,8,19,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 19, 129],"bool"), list[2,8,19,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 19, 129].  Tensor sizes: [2, 0, 19, 129]
2025-03-05 15:22:56.780869 test begin: paddle.broadcast_to(Tensor([2, 0, 19, 161],"bool"), list[2,8,19,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 19, 161],"bool"), list[2,8,19,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 19, 161].  Tensor sizes: [2, 0, 19, 161]
2025-03-05 15:22:56.781383 test begin: paddle.broadcast_to(Tensor([2, 0, 19, 17],"bool"), list[2,8,19,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 19, 17],"bool"), list[2,8,19,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 19, 17].  Tensor sizes: [2, 0, 19, 17]
2025-03-05 15:22:56.781901 test begin: paddle.broadcast_to(Tensor([2, 0, 19, 181],"bool"), list[2,8,19,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 19, 181],"bool"), list[2,8,19,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 19, 181].  Tensor sizes: [2, 0, 19, 181]
2025-03-05 15:22:56.782418 test begin: paddle.broadcast_to(Tensor([2, 0, 19, 19],"bool"), list[2,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 19, 19],"bool"), list[2,8,19,19,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 19, 19].  Tensor sizes: [2, 0, 19, 19]
2025-03-05 15:22:56.782942 test begin: paddle.broadcast_to(Tensor([2, 0, 19, 41],"bool"), list[2,8,19,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 19, 41],"bool"), list[2,8,19,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 19, 41].  Tensor sizes: [2, 0, 19, 41]
2025-03-05 15:22:56.783468 test begin: paddle.broadcast_to(Tensor([2, 0, 19, 57],"bool"), list[2,8,19,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 19, 57],"bool"), list[2,8,19,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 19, 57].  Tensor sizes: [2, 0, 19, 57]
2025-03-05 15:22:56.784039 test begin: paddle.broadcast_to(Tensor([2, 0, 19, 81],"bool"), list[2,8,19,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 19, 81],"bool"), list[2,8,19,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 19, 81].  Tensor sizes: [2, 0, 19, 81]
2025-03-05 15:22:56.784593 test begin: paddle.broadcast_to(Tensor([2, 0, 19, 85],"bool"), list[2,8,19,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 19, 85],"bool"), list[2,8,19,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 19, 85].  Tensor sizes: [2, 0, 19, 85]
2025-03-05 15:22:56.785192 test begin: paddle.broadcast_to(Tensor([2, 0, 190, 181],"bool"), list[2,8,190,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 190, 181],"bool"), list[2,8,190,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 190, 181].  Tensor sizes: [2, 0, 190, 181]
2025-03-05 15:22:56.785737 test begin: paddle.broadcast_to(Tensor([2, 0, 190, 190],"bool"), list[2,8,190,190,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 190, 190],"bool"), list[2,8,190,190,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 190, 190].  Tensor sizes: [2, 0, 190, 190]
2025-03-05 15:22:56.786256 test begin: paddle.broadcast_to(Tensor([2, 0, 191, 181],"bool"), list[2,8,191,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 191, 181],"bool"), list[2,8,191,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 191, 181].  Tensor sizes: [2, 0, 191, 181]
2025-03-05 15:22:56.786776 test begin: paddle.broadcast_to(Tensor([2, 0, 191, 191],"bool"), list[2,8,191,191,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 191, 191],"bool"), list[2,8,191,191,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 191, 191].  Tensor sizes: [2, 0, 191, 191]
2025-03-05 15:22:56.787282 test begin: paddle.broadcast_to(Tensor([2, 0, 192, 181],"bool"), list[2,8,192,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 192, 181],"bool"), list[2,8,192,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 192, 181].  Tensor sizes: [2, 0, 192, 181]
2025-03-05 15:22:56.787812 test begin: paddle.broadcast_to(Tensor([2, 0, 192, 192],"bool"), list[2,8,192,192,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 192, 192],"bool"), list[2,8,192,192,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 192, 192].  Tensor sizes: [2, 0, 192, 192]
2025-03-05 15:22:56.788334 test begin: paddle.broadcast_to(Tensor([2, 0, 193, 181],"bool"), list[2,8,193,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 193, 181],"bool"), list[2,8,193,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 193, 181].  Tensor sizes: [2, 0, 193, 181]
2025-03-05 15:22:56.788877 test begin: paddle.broadcast_to(Tensor([2, 0, 193, 193],"bool"), list[2,8,193,193,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 193, 193],"bool"), list[2,8,193,193,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 193, 193].  Tensor sizes: [2, 0, 193, 193]
2025-03-05 15:22:56.789388 test begin: paddle.broadcast_to(Tensor([2, 0, 194, 181],"bool"), list[2,8,194,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 194, 181],"bool"), list[2,8,194,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 194, 181].  Tensor sizes: [2, 0, 194, 181]
2025-03-05 15:22:56.789918 test begin: paddle.broadcast_to(Tensor([2, 0, 194, 194],"bool"), list[2,8,194,194,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 194, 194],"bool"), list[2,8,194,194,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 194, 194].  Tensor sizes: [2, 0, 194, 194]
2025-03-05 15:22:56.790426 test begin: paddle.broadcast_to(Tensor([2, 0, 195, 181],"bool"), list[2,8,195,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 195, 181],"bool"), list[2,8,195,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 195, 181].  Tensor sizes: [2, 0, 195, 181]
2025-03-05 15:22:56.790956 test begin: paddle.broadcast_to(Tensor([2, 0, 195, 195],"bool"), list[2,8,195,195,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 195, 195],"bool"), list[2,8,195,195,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 195, 195].  Tensor sizes: [2, 0, 195, 195]
2025-03-05 15:22:56.791466 test begin: paddle.broadcast_to(Tensor([2, 0, 196, 181],"bool"), list[2,8,196,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 196, 181],"bool"), list[2,8,196,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 196, 181].  Tensor sizes: [2, 0, 196, 181]
2025-03-05 15:22:56.791993 test begin: paddle.broadcast_to(Tensor([2, 0, 196, 196],"bool"), list[2,8,196,196,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 196, 196],"bool"), list[2,8,196,196,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 196, 196].  Tensor sizes: [2, 0, 196, 196]
2025-03-05 15:22:56.792504 test begin: paddle.broadcast_to(Tensor([2, 0, 197, 181],"bool"), list[2,8,197,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 197, 181],"bool"), list[2,8,197,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 197, 181].  Tensor sizes: [2, 0, 197, 181]
2025-03-05 15:22:56.793646 test begin: paddle.broadcast_to(Tensor([2, 0, 197, 197],"bool"), list[2,8,197,197,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 197, 197],"bool"), list[2,8,197,197,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 197, 197].  Tensor sizes: [2, 0, 197, 197]
2025-03-05 15:22:56.794425 test begin: paddle.broadcast_to(Tensor([2, 0, 198, 181],"bool"), list[2,8,198,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 198, 181],"bool"), list[2,8,198,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 198, 181].  Tensor sizes: [2, 0, 198, 181]
2025-03-05 15:22:56.795201 test begin: paddle.broadcast_to(Tensor([2, 0, 198, 198],"bool"), list[2,8,198,198,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 198, 198],"bool"), list[2,8,198,198,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 198, 198].  Tensor sizes: [2, 0, 198, 198]
2025-03-05 15:22:56.795865 test begin: paddle.broadcast_to(Tensor([2, 0, 199, 181],"bool"), list[2,8,199,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 199, 181],"bool"), list[2,8,199,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 199, 181].  Tensor sizes: [2, 0, 199, 181]
2025-03-05 15:22:56.796483 test begin: paddle.broadcast_to(Tensor([2, 0, 199, 199],"bool"), list[2,8,199,199,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 199, 199],"bool"), list[2,8,199,199,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 199, 199].  Tensor sizes: [2, 0, 199, 199]
2025-03-05 15:22:56.797114 test begin: paddle.broadcast_to(Tensor([2, 0, 2, 121],"bool"), list[2,8,2,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 2, 121],"bool"), list[2,8,2,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 2, 121].  Tensor sizes: [2, 0, 2, 121]
2025-03-05 15:22:56.797733 test begin: paddle.broadcast_to(Tensor([2, 0, 2, 129],"bool"), list[2,8,2,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 2, 129],"bool"), list[2,8,2,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 2, 129].  Tensor sizes: [2, 0, 2, 129]
2025-03-05 15:22:56.798344 test begin: paddle.broadcast_to(Tensor([2, 0, 2, 161],"bool"), list[2,8,2,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 2, 161],"bool"), list[2,8,2,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 2, 161].  Tensor sizes: [2, 0, 2, 161]
2025-03-05 15:22:56.798967 test begin: paddle.broadcast_to(Tensor([2, 0, 2, 17],"bool"), list[2,8,2,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 2, 17],"bool"), list[2,8,2,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 2, 17].  Tensor sizes: [2, 0, 2, 17]
2025-03-05 15:22:56.799673 test begin: paddle.broadcast_to(Tensor([2, 0, 2, 181],"bool"), list[2,8,2,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 2, 181],"bool"), list[2,8,2,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 2, 181].  Tensor sizes: [2, 0, 2, 181]
2025-03-05 15:22:56.800281 test begin: paddle.broadcast_to(Tensor([2, 0, 2, 2],"bool"), list[2,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 2, 2],"bool"), list[2,8,2,2,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 2, 2].  Tensor sizes: [2, 0, 2, 2]
2025-03-05 15:22:56.800901 test begin: paddle.broadcast_to(Tensor([2, 0, 2, 41],"bool"), list[2,8,2,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 2, 41],"bool"), list[2,8,2,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 2, 41].  Tensor sizes: [2, 0, 2, 41]
2025-03-05 15:22:56.801511 test begin: paddle.broadcast_to(Tensor([2, 0, 2, 57],"bool"), list[2,8,2,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 2, 57],"bool"), list[2,8,2,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 2, 57].  Tensor sizes: [2, 0, 2, 57]
2025-03-05 15:22:56.802128 test begin: paddle.broadcast_to(Tensor([2, 0, 2, 81],"bool"), list[2,8,2,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 2, 81],"bool"), list[2,8,2,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 2, 81].  Tensor sizes: [2, 0, 2, 81]
2025-03-05 15:22:56.802733 test begin: paddle.broadcast_to(Tensor([2, 0, 2, 85],"bool"), list[2,8,2,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 2, 85],"bool"), list[2,8,2,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 2, 85].  Tensor sizes: [2, 0, 2, 85]
2025-03-05 15:22:56.803383 test begin: paddle.broadcast_to(Tensor([2, 0, 2, 9],"bool"), list[2,8,2,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 2, 9],"bool"), list[2,8,2,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 2, 9].  Tensor sizes: [2, 0, 2, 9]
2025-03-05 15:22:56.804007 test begin: paddle.broadcast_to(Tensor([2, 0, 20, 121],"bool"), list[2,8,20,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 20, 121],"bool"), list[2,8,20,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 20, 121].  Tensor sizes: [2, 0, 20, 121]
2025-03-05 15:22:56.804632 test begin: paddle.broadcast_to(Tensor([2, 0, 20, 129],"bool"), list[2,8,20,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 20, 129],"bool"), list[2,8,20,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 20, 129].  Tensor sizes: [2, 0, 20, 129]
2025-03-05 15:22:56.805238 test begin: paddle.broadcast_to(Tensor([2, 0, 20, 161],"bool"), list[2,8,20,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 20, 161],"bool"), list[2,8,20,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 20, 161].  Tensor sizes: [2, 0, 20, 161]
2025-03-05 15:22:56.805850 test begin: paddle.broadcast_to(Tensor([2, 0, 20, 17],"bool"), list[2,8,20,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 20, 17],"bool"), list[2,8,20,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 20, 17].  Tensor sizes: [2, 0, 20, 17]
2025-03-05 15:22:56.806452 test begin: paddle.broadcast_to(Tensor([2, 0, 20, 181],"bool"), list[2,8,20,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 20, 181],"bool"), list[2,8,20,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 20, 181].  Tensor sizes: [2, 0, 20, 181]
2025-03-05 15:22:56.807066 test begin: paddle.broadcast_to(Tensor([2, 0, 20, 20],"bool"), list[2,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 20, 20],"bool"), list[2,8,20,20,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 20, 20].  Tensor sizes: [2, 0, 20, 20]
2025-03-05 15:22:56.807672 test begin: paddle.broadcast_to(Tensor([2, 0, 20, 41],"bool"), list[2,8,20,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 20, 41],"bool"), list[2,8,20,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 20, 41].  Tensor sizes: [2, 0, 20, 41]
2025-03-05 15:22:56.808325 test begin: paddle.broadcast_to(Tensor([2, 0, 20, 57],"bool"), list[2,8,20,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 20, 57],"bool"), list[2,8,20,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 20, 57].  Tensor sizes: [2, 0, 20, 57]
2025-03-05 15:22:56.808951 test begin: paddle.broadcast_to(Tensor([2, 0, 20, 81],"bool"), list[2,8,20,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 20, 81],"bool"), list[2,8,20,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 20, 81].  Tensor sizes: [2, 0, 20, 81]
2025-03-05 15:22:56.809552 test begin: paddle.broadcast_to(Tensor([2, 0, 20, 85],"bool"), list[2,8,20,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 20, 85],"bool"), list[2,8,20,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 20, 85].  Tensor sizes: [2, 0, 20, 85]
2025-03-05 15:22:56.810169 test begin: paddle.broadcast_to(Tensor([2, 0, 200, 181],"bool"), list[2,8,200,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 200, 181],"bool"), list[2,8,200,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 200, 181].  Tensor sizes: [2, 0, 200, 181]
2025-03-05 15:22:56.810780 test begin: paddle.broadcast_to(Tensor([2, 0, 200, 200],"bool"), list[2,8,200,200,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 200, 200],"bool"), list[2,8,200,200,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 200, 200].  Tensor sizes: [2, 0, 200, 200]
2025-03-05 15:22:56.811414 test begin: paddle.broadcast_to(Tensor([2, 0, 201, 181],"bool"), list[2,8,201,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 201, 181],"bool"), list[2,8,201,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 201, 181].  Tensor sizes: [2, 0, 201, 181]
2025-03-05 15:22:56.812034 test begin: paddle.broadcast_to(Tensor([2, 0, 201, 201],"bool"), list[2,8,201,201,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 201, 201],"bool"), list[2,8,201,201,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 201, 201].  Tensor sizes: [2, 0, 201, 201]
2025-03-05 15:22:56.812699 test begin: paddle.broadcast_to(Tensor([2, 0, 202, 181],"bool"), list[2,8,202,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 202, 181],"bool"), list[2,8,202,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 202, 181].  Tensor sizes: [2, 0, 202, 181]
2025-03-05 15:22:56.813390 test begin: paddle.broadcast_to(Tensor([2, 0, 202, 202],"bool"), list[2,8,202,202,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 202, 202],"bool"), list[2,8,202,202,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 202, 202].  Tensor sizes: [2, 0, 202, 202]
2025-03-05 15:22:56.814026 test begin: paddle.broadcast_to(Tensor([2, 0, 203, 181],"bool"), list[2,8,203,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 203, 181],"bool"), list[2,8,203,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 203, 181].  Tensor sizes: [2, 0, 203, 181]
2025-03-05 15:22:56.814842 test begin: paddle.broadcast_to(Tensor([2, 0, 203, 203],"bool"), list[2,8,203,203,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 203, 203],"bool"), list[2,8,203,203,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 203, 203].  Tensor sizes: [2, 0, 203, 203]
2025-03-05 15:22:56.815976 test begin: paddle.broadcast_to(Tensor([2, 0, 204, 181],"bool"), list[2,8,204,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 204, 181],"bool"), list[2,8,204,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 204, 181].  Tensor sizes: [2, 0, 204, 181]
2025-03-05 15:22:56.816693 test begin: paddle.broadcast_to(Tensor([2, 0, 204, 204],"bool"), list[2,8,204,204,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 204, 204],"bool"), list[2,8,204,204,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 204, 204].  Tensor sizes: [2, 0, 204, 204]
2025-03-05 15:22:56.817439 test begin: paddle.broadcast_to(Tensor([2, 0, 205, 181],"bool"), list[2,8,205,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 205, 181],"bool"), list[2,8,205,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 205, 181].  Tensor sizes: [2, 0, 205, 181]
2025-03-05 15:22:56.818078 test begin: paddle.broadcast_to(Tensor([2, 0, 205, 205],"bool"), list[2,8,205,205,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 205, 205],"bool"), list[2,8,205,205,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 205, 205].  Tensor sizes: [2, 0, 205, 205]
2025-03-05 15:22:56.818717 test begin: paddle.broadcast_to(Tensor([2, 0, 206, 181],"bool"), list[2,8,206,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 206, 181],"bool"), list[2,8,206,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 206, 181].  Tensor sizes: [2, 0, 206, 181]
2025-03-05 15:22:56.819342 test begin: paddle.broadcast_to(Tensor([2, 0, 206, 206],"bool"), list[2,8,206,206,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 206, 206],"bool"), list[2,8,206,206,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 206, 206].  Tensor sizes: [2, 0, 206, 206]
2025-03-05 15:22:56.819954 test begin: paddle.broadcast_to(Tensor([2, 0, 207, 181],"bool"), list[2,8,207,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 207, 181],"bool"), list[2,8,207,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 207, 181].  Tensor sizes: [2, 0, 207, 181]
2025-03-05 15:22:56.820563 test begin: paddle.broadcast_to(Tensor([2, 0, 207, 207],"bool"), list[2,8,207,207,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 207, 207],"bool"), list[2,8,207,207,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 207, 207].  Tensor sizes: [2, 0, 207, 207]
2025-03-05 15:22:56.821176 test begin: paddle.broadcast_to(Tensor([2, 0, 208, 181],"bool"), list[2,8,208,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 208, 181],"bool"), list[2,8,208,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 208, 181].  Tensor sizes: [2, 0, 208, 181]
2025-03-05 15:22:56.821789 test begin: paddle.broadcast_to(Tensor([2, 0, 208, 208],"bool"), list[2,8,208,208,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 208, 208],"bool"), list[2,8,208,208,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 208, 208].  Tensor sizes: [2, 0, 208, 208]
2025-03-05 15:22:56.822394 test begin: paddle.broadcast_to(Tensor([2, 0, 209, 181],"bool"), list[2,8,209,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 209, 181],"bool"), list[2,8,209,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 209, 181].  Tensor sizes: [2, 0, 209, 181]
2025-03-05 15:22:56.823009 test begin: paddle.broadcast_to(Tensor([2, 0, 209, 209],"bool"), list[2,8,209,209,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 209, 209],"bool"), list[2,8,209,209,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 209, 209].  Tensor sizes: [2, 0, 209, 209]
2025-03-05 15:22:56.823621 test begin: paddle.broadcast_to(Tensor([2, 0, 21, 121],"bool"), list[2,8,21,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 21, 121],"bool"), list[2,8,21,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 21, 121].  Tensor sizes: [2, 0, 21, 121]
2025-03-05 15:22:56.824225 test begin: paddle.broadcast_to(Tensor([2, 0, 21, 129],"bool"), list[2,8,21,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 21, 129],"bool"), list[2,8,21,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 21, 129].  Tensor sizes: [2, 0, 21, 129]
2025-03-05 15:22:56.824827 test begin: paddle.broadcast_to(Tensor([2, 0, 21, 161],"bool"), list[2,8,21,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 21, 161],"bool"), list[2,8,21,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 21, 161].  Tensor sizes: [2, 0, 21, 161]
2025-03-05 15:22:56.825420 test begin: paddle.broadcast_to(Tensor([2, 0, 21, 17],"bool"), list[2,8,21,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 21, 17],"bool"), list[2,8,21,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 21, 17].  Tensor sizes: [2, 0, 21, 17]
2025-03-05 15:22:56.826091 test begin: paddle.broadcast_to(Tensor([2, 0, 21, 181],"bool"), list[2,8,21,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 21, 181],"bool"), list[2,8,21,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 21, 181].  Tensor sizes: [2, 0, 21, 181]
2025-03-05 15:22:56.826758 test begin: paddle.broadcast_to(Tensor([2, 0, 21, 21],"bool"), list[2,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 21, 21],"bool"), list[2,8,21,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 21, 21].  Tensor sizes: [2, 0, 21, 21]
2025-03-05 15:22:56.827361 test begin: paddle.broadcast_to(Tensor([2, 0, 21, 41],"bool"), list[2,8,21,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 21, 41],"bool"), list[2,8,21,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 21, 41].  Tensor sizes: [2, 0, 21, 41]
2025-03-05 15:22:56.828001 test begin: paddle.broadcast_to(Tensor([2, 0, 21, 57],"bool"), list[2,8,21,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 21, 57],"bool"), list[2,8,21,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 21, 57].  Tensor sizes: [2, 0, 21, 57]
2025-03-05 15:22:56.828621 test begin: paddle.broadcast_to(Tensor([2, 0, 21, 81],"bool"), list[2,8,21,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 21, 81],"bool"), list[2,8,21,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 21, 81].  Tensor sizes: [2, 0, 21, 81]
2025-03-05 15:22:56.829291 test begin: paddle.broadcast_to(Tensor([2, 0, 21, 85],"bool"), list[2,8,21,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 21, 85],"bool"), list[2,8,21,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 21, 85].  Tensor sizes: [2, 0, 21, 85]
2025-03-05 15:22:56.829922 test begin: paddle.broadcast_to(Tensor([2, 0, 22, 121],"bool"), list[2,8,22,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 22, 121],"bool"), list[2,8,22,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 22, 121].  Tensor sizes: [2, 0, 22, 121]
2025-03-05 15:22:56.830635 test begin: paddle.broadcast_to(Tensor([2, 0, 22, 129],"bool"), list[2,8,22,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 22, 129],"bool"), list[2,8,22,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 22, 129].  Tensor sizes: [2, 0, 22, 129]
2025-03-05 15:22:56.831497 test begin: paddle.broadcast_to(Tensor([2, 0, 22, 161],"bool"), list[2,8,22,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 22, 161],"bool"), list[2,8,22,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 22, 161].  Tensor sizes: [2, 0, 22, 161]
2025-03-05 15:22:56.832103 test begin: paddle.broadcast_to(Tensor([2, 0, 22, 17],"bool"), list[2,8,22,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 22, 17],"bool"), list[2,8,22,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 22, 17].  Tensor sizes: [2, 0, 22, 17]
2025-03-05 15:22:56.832651 test begin: paddle.broadcast_to(Tensor([2, 0, 22, 181],"bool"), list[2,8,22,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 22, 181],"bool"), list[2,8,22,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 22, 181].  Tensor sizes: [2, 0, 22, 181]
2025-03-05 15:22:56.833184 test begin: paddle.broadcast_to(Tensor([2, 0, 22, 22],"bool"), list[2,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 22, 22],"bool"), list[2,8,22,22,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 22, 22].  Tensor sizes: [2, 0, 22, 22]
2025-03-05 15:22:56.833725 test begin: paddle.broadcast_to(Tensor([2, 0, 22, 41],"bool"), list[2,8,22,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 22, 41],"bool"), list[2,8,22,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 22, 41].  Tensor sizes: [2, 0, 22, 41]
2025-03-05 15:22:56.834364 test begin: paddle.broadcast_to(Tensor([2, 0, 22, 57],"bool"), list[2,8,22,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 22, 57],"bool"), list[2,8,22,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 22, 57].  Tensor sizes: [2, 0, 22, 57]
2025-03-05 15:22:56.835013 test begin: paddle.broadcast_to(Tensor([2, 0, 22, 81],"bool"), list[2,8,22,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 22, 81],"bool"), list[2,8,22,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 22, 81].  Tensor sizes: [2, 0, 22, 81]
2025-03-05 15:22:56.835653 test begin: paddle.broadcast_to(Tensor([2, 0, 22, 85],"bool"), list[2,8,22,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 22, 85],"bool"), list[2,8,22,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 22, 85].  Tensor sizes: [2, 0, 22, 85]
2025-03-05 15:22:56.836256 test begin: paddle.broadcast_to(Tensor([2, 0, 23, 121],"bool"), list[2,8,23,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 23, 121],"bool"), list[2,8,23,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 23, 121].  Tensor sizes: [2, 0, 23, 121]
2025-03-05 15:22:56.836862 test begin: paddle.broadcast_to(Tensor([2, 0, 23, 129],"bool"), list[2,8,23,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 23, 129],"bool"), list[2,8,23,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 23, 129].  Tensor sizes: [2, 0, 23, 129]
2025-03-05 15:22:56.837480 test begin: paddle.broadcast_to(Tensor([2, 0, 23, 161],"bool"), list[2,8,23,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 23, 161],"bool"), list[2,8,23,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 23, 161].  Tensor sizes: [2, 0, 23, 161]
2025-03-05 15:22:56.838101 test begin: paddle.broadcast_to(Tensor([2, 0, 23, 17],"bool"), list[2,8,23,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 23, 17],"bool"), list[2,8,23,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 23, 17].  Tensor sizes: [2, 0, 23, 17]
2025-03-05 15:22:56.838740 test begin: paddle.broadcast_to(Tensor([2, 0, 23, 181],"bool"), list[2,8,23,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 23, 181],"bool"), list[2,8,23,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 23, 181].  Tensor sizes: [2, 0, 23, 181]
2025-03-05 15:22:56.839385 test begin: paddle.broadcast_to(Tensor([2, 0, 23, 23],"bool"), list[2,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 23, 23],"bool"), list[2,8,23,23,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 23, 23].  Tensor sizes: [2, 0, 23, 23]
2025-03-05 15:22:56.840023 test begin: paddle.broadcast_to(Tensor([2, 0, 23, 41],"bool"), list[2,8,23,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 23, 41],"bool"), list[2,8,23,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 23, 41].  Tensor sizes: [2, 0, 23, 41]
2025-03-05 15:22:56.840654 test begin: paddle.broadcast_to(Tensor([2, 0, 23, 57],"bool"), list[2,8,23,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 23, 57],"bool"), list[2,8,23,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 23, 57].  Tensor sizes: [2, 0, 23, 57]
2025-03-05 15:22:56.841261 test begin: paddle.broadcast_to(Tensor([2, 0, 23, 81],"bool"), list[2,8,23,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 23, 81],"bool"), list[2,8,23,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 23, 81].  Tensor sizes: [2, 0, 23, 81]
2025-03-05 15:22:56.841881 test begin: paddle.broadcast_to(Tensor([2, 0, 23, 85],"bool"), list[2,8,23,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 23, 85],"bool"), list[2,8,23,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 23, 85].  Tensor sizes: [2, 0, 23, 85]
2025-03-05 15:22:56.842549 test begin: paddle.broadcast_to(Tensor([2, 0, 24, 121],"bool"), list[2,8,24,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 24, 121],"bool"), list[2,8,24,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 24, 121].  Tensor sizes: [2, 0, 24, 121]
2025-03-05 15:22:56.843170 test begin: paddle.broadcast_to(Tensor([2, 0, 24, 129],"bool"), list[2,8,24,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 24, 129],"bool"), list[2,8,24,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 24, 129].  Tensor sizes: [2, 0, 24, 129]
2025-03-05 15:22:56.843818 test begin: paddle.broadcast_to(Tensor([2, 0, 24, 161],"bool"), list[2,8,24,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 24, 161],"bool"), list[2,8,24,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 24, 161].  Tensor sizes: [2, 0, 24, 161]
2025-03-05 15:22:56.844433 test begin: paddle.broadcast_to(Tensor([2, 0, 24, 17],"bool"), list[2,8,24,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 24, 17],"bool"), list[2,8,24,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 24, 17].  Tensor sizes: [2, 0, 24, 17]
2025-03-05 15:22:56.845083 test begin: paddle.broadcast_to(Tensor([2, 0, 24, 181],"bool"), list[2,8,24,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 24, 181],"bool"), list[2,8,24,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 24, 181].  Tensor sizes: [2, 0, 24, 181]
2025-03-05 15:22:56.845723 test begin: paddle.broadcast_to(Tensor([2, 0, 24, 24],"bool"), list[2,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 24, 24],"bool"), list[2,8,24,24,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 24, 24].  Tensor sizes: [2, 0, 24, 24]
2025-03-05 15:22:56.846326 test begin: paddle.broadcast_to(Tensor([2, 0, 24, 41],"bool"), list[2,8,24,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 24, 41],"bool"), list[2,8,24,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 24, 41].  Tensor sizes: [2, 0, 24, 41]
2025-03-05 15:22:56.847022 test begin: paddle.broadcast_to(Tensor([2, 0, 24, 57],"bool"), list[2,8,24,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 24, 57],"bool"), list[2,8,24,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 24, 57].  Tensor sizes: [2, 0, 24, 57]
2025-03-05 15:22:56.847652 test begin: paddle.broadcast_to(Tensor([2, 0, 24, 81],"bool"), list[2,8,24,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 24, 81],"bool"), list[2,8,24,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 24, 81].  Tensor sizes: [2, 0, 24, 81]
2025-03-05 15:22:56.848263 test begin: paddle.broadcast_to(Tensor([2, 0, 24, 85],"bool"), list[2,8,24,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 24, 85],"bool"), list[2,8,24,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 24, 85].  Tensor sizes: [2, 0, 24, 85]
2025-03-05 15:22:56.848886 test begin: paddle.broadcast_to(Tensor([2, 0, 25, 121],"bool"), list[2,8,25,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 25, 121],"bool"), list[2,8,25,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 25, 121].  Tensor sizes: [2, 0, 25, 121]
2025-03-05 15:22:56.849497 test begin: paddle.broadcast_to(Tensor([2, 0, 25, 129],"bool"), list[2,8,25,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 25, 129],"bool"), list[2,8,25,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 25, 129].  Tensor sizes: [2, 0, 25, 129]
2025-03-05 15:22:56.850112 test begin: paddle.broadcast_to(Tensor([2, 0, 25, 161],"bool"), list[2,8,25,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 25, 161],"bool"), list[2,8,25,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 25, 161].  Tensor sizes: [2, 0, 25, 161]
2025-03-05 15:22:56.850710 test begin: paddle.broadcast_to(Tensor([2, 0, 25, 17],"bool"), list[2,8,25,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 25, 17],"bool"), list[2,8,25,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 25, 17].  Tensor sizes: [2, 0, 25, 17]
2025-03-05 15:22:56.851296 test begin: paddle.broadcast_to(Tensor([2, 0, 25, 181],"bool"), list[2,8,25,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 25, 181],"bool"), list[2,8,25,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 25, 181].  Tensor sizes: [2, 0, 25, 181]
2025-03-05 15:22:56.851889 test begin: paddle.broadcast_to(Tensor([2, 0, 25, 25],"bool"), list[2,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 25, 25],"bool"), list[2,8,25,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 25, 25].  Tensor sizes: [2, 0, 25, 25]
2025-03-05 15:22:56.852482 test begin: paddle.broadcast_to(Tensor([2, 0, 25, 41],"bool"), list[2,8,25,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 25, 41],"bool"), list[2,8,25,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 25, 41].  Tensor sizes: [2, 0, 25, 41]
2025-03-05 15:22:56.853225 test begin: paddle.broadcast_to(Tensor([2, 0, 25, 57],"bool"), list[2,8,25,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 25, 57],"bool"), list[2,8,25,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 25, 57].  Tensor sizes: [2, 0, 25, 57]
2025-03-05 15:22:56.853895 test begin: paddle.broadcast_to(Tensor([2, 0, 25, 81],"bool"), list[2,8,25,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 25, 81],"bool"), list[2,8,25,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 25, 81].  Tensor sizes: [2, 0, 25, 81]
2025-03-05 15:22:56.854607 test begin: paddle.broadcast_to(Tensor([2, 0, 25, 85],"bool"), list[2,8,25,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 25, 85],"bool"), list[2,8,25,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 25, 85].  Tensor sizes: [2, 0, 25, 85]
2025-03-05 15:22:56.855179 test begin: paddle.broadcast_to(Tensor([2, 0, 26, 121],"bool"), list[2,8,26,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 26, 121],"bool"), list[2,8,26,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 26, 121].  Tensor sizes: [2, 0, 26, 121]
2025-03-05 15:22:56.855715 test begin: paddle.broadcast_to(Tensor([2, 0, 26, 129],"bool"), list[2,8,26,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 26, 129],"bool"), list[2,8,26,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 26, 129].  Tensor sizes: [2, 0, 26, 129]
2025-03-05 15:22:56.856231 test begin: paddle.broadcast_to(Tensor([2, 0, 26, 161],"bool"), list[2,8,26,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 26, 161],"bool"), list[2,8,26,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 26, 161].  Tensor sizes: [2, 0, 26, 161]
2025-03-05 15:22:56.856757 test begin: paddle.broadcast_to(Tensor([2, 0, 26, 17],"bool"), list[2,8,26,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 26, 17],"bool"), list[2,8,26,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 26, 17].  Tensor sizes: [2, 0, 26, 17]
2025-03-05 15:22:56.857280 test begin: paddle.broadcast_to(Tensor([2, 0, 26, 181],"bool"), list[2,8,26,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 26, 181],"bool"), list[2,8,26,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 26, 181].  Tensor sizes: [2, 0, 26, 181]
2025-03-05 15:22:56.857803 test begin: paddle.broadcast_to(Tensor([2, 0, 26, 26],"bool"), list[2,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 26, 26],"bool"), list[2,8,26,26,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 26, 26].  Tensor sizes: [2, 0, 26, 26]
2025-03-05 15:22:56.858326 test begin: paddle.broadcast_to(Tensor([2, 0, 26, 41],"bool"), list[2,8,26,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 26, 41],"bool"), list[2,8,26,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 26, 41].  Tensor sizes: [2, 0, 26, 41]
2025-03-05 15:22:56.858850 test begin: paddle.broadcast_to(Tensor([2, 0, 26, 57],"bool"), list[2,8,26,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 26, 57],"bool"), list[2,8,26,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 26, 57].  Tensor sizes: [2, 0, 26, 57]
2025-03-05 15:22:56.859368 test begin: paddle.broadcast_to(Tensor([2, 0, 26, 81],"bool"), list[2,8,26,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 26, 81],"bool"), list[2,8,26,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 26, 81].  Tensor sizes: [2, 0, 26, 81]
2025-03-05 15:22:56.859882 test begin: paddle.broadcast_to(Tensor([2, 0, 26, 85],"bool"), list[2,8,26,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 26, 85],"bool"), list[2,8,26,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 26, 85].  Tensor sizes: [2, 0, 26, 85]
2025-03-05 15:22:56.860393 test begin: paddle.broadcast_to(Tensor([2, 0, 27, 121],"bool"), list[2,8,27,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 27, 121],"bool"), list[2,8,27,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 27, 121].  Tensor sizes: [2, 0, 27, 121]
2025-03-05 15:22:56.860920 test begin: paddle.broadcast_to(Tensor([2, 0, 27, 129],"bool"), list[2,8,27,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 27, 129],"bool"), list[2,8,27,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 27, 129].  Tensor sizes: [2, 0, 27, 129]
2025-03-05 15:22:56.861432 test begin: paddle.broadcast_to(Tensor([2, 0, 27, 161],"bool"), list[2,8,27,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 27, 161],"bool"), list[2,8,27,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 27, 161].  Tensor sizes: [2, 0, 27, 161]
2025-03-05 15:22:56.861945 test begin: paddle.broadcast_to(Tensor([2, 0, 27, 17],"bool"), list[2,8,27,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 27, 17],"bool"), list[2,8,27,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 27, 17].  Tensor sizes: [2, 0, 27, 17]
2025-03-05 15:22:56.862841 test begin: paddle.broadcast_to(Tensor([2, 0, 27, 181],"bool"), list[2,8,27,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 27, 181],"bool"), list[2,8,27,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 27, 181].  Tensor sizes: [2, 0, 27, 181]
2025-03-05 15:22:56.863559 test begin: paddle.broadcast_to(Tensor([2, 0, 27, 27],"bool"), list[2,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 27, 27],"bool"), list[2,8,27,27,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 27, 27].  Tensor sizes: [2, 0, 27, 27]
2025-03-05 15:22:56.864192 test begin: paddle.broadcast_to(Tensor([2, 0, 27, 41],"bool"), list[2,8,27,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 27, 41],"bool"), list[2,8,27,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 27, 41].  Tensor sizes: [2, 0, 27, 41]
2025-03-05 15:22:56.864814 test begin: paddle.broadcast_to(Tensor([2, 0, 27, 57],"bool"), list[2,8,27,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 27, 57],"bool"), list[2,8,27,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 27, 57].  Tensor sizes: [2, 0, 27, 57]
2025-03-05 15:22:56.865422 test begin: paddle.broadcast_to(Tensor([2, 0, 27, 81],"bool"), list[2,8,27,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 27, 81],"bool"), list[2,8,27,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 27, 81].  Tensor sizes: [2, 0, 27, 81]
2025-03-05 15:22:56.866092 test begin: paddle.broadcast_to(Tensor([2, 0, 27, 85],"bool"), list[2,8,27,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 27, 85],"bool"), list[2,8,27,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 27, 85].  Tensor sizes: [2, 0, 27, 85]
2025-03-05 15:22:56.866739 test begin: paddle.broadcast_to(Tensor([2, 0, 28, 121],"bool"), list[2,8,28,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 28, 121],"bool"), list[2,8,28,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 28, 121].  Tensor sizes: [2, 0, 28, 121]
2025-03-05 15:22:56.867359 test begin: paddle.broadcast_to(Tensor([2, 0, 28, 129],"bool"), list[2,8,28,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 28, 129],"bool"), list[2,8,28,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 28, 129].  Tensor sizes: [2, 0, 28, 129]
2025-03-05 15:22:56.867982 test begin: paddle.broadcast_to(Tensor([2, 0, 28, 161],"bool"), list[2,8,28,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 28, 161],"bool"), list[2,8,28,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 28, 161].  Tensor sizes: [2, 0, 28, 161]
2025-03-05 15:22:56.872399 test begin: paddle.broadcast_to(Tensor([2, 0, 28, 17],"bool"), list[2,8,28,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 28, 17],"bool"), list[2,8,28,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 28, 17].  Tensor sizes: [2, 0, 28, 17]
2025-03-05 15:22:56.873083 test begin: paddle.broadcast_to(Tensor([2, 0, 28, 181],"bool"), list[2,8,28,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 28, 181],"bool"), list[2,8,28,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 28, 181].  Tensor sizes: [2, 0, 28, 181]
2025-03-05 15:22:56.873720 test begin: paddle.broadcast_to(Tensor([2, 0, 28, 28],"bool"), list[2,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 28, 28],"bool"), list[2,8,28,28,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 28, 28].  Tensor sizes: [2, 0, 28, 28]
2025-03-05 15:22:56.874738 test begin: paddle.broadcast_to(Tensor([2, 0, 28, 41],"bool"), list[2,8,28,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 28, 41],"bool"), list[2,8,28,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 28, 41].  Tensor sizes: [2, 0, 28, 41]
2025-03-05 15:22:56.875503 test begin: paddle.broadcast_to(Tensor([2, 0, 28, 57],"bool"), list[2,8,28,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 28, 57],"bool"), list[2,8,28,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 28, 57].  Tensor sizes: [2, 0, 28, 57]
2025-03-05 15:22:56.876200 test begin: paddle.broadcast_to(Tensor([2, 0, 28, 81],"bool"), list[2,8,28,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 28, 81],"bool"), list[2,8,28,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 28, 81].  Tensor sizes: [2, 0, 28, 81]
2025-03-05 15:22:56.876906 test begin: paddle.broadcast_to(Tensor([2, 0, 28, 85],"bool"), list[2,8,28,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 28, 85],"bool"), list[2,8,28,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 28, 85].  Tensor sizes: [2, 0, 28, 85]
2025-03-05 15:22:56.877695 test begin: paddle.broadcast_to(Tensor([2, 0, 29, 121],"bool"), list[2,8,29,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 29, 121],"bool"), list[2,8,29,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 29, 121].  Tensor sizes: [2, 0, 29, 121]
2025-03-05 15:22:56.878276 test begin: paddle.broadcast_to(Tensor([2, 0, 29, 129],"bool"), list[2,8,29,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 29, 129],"bool"), list[2,8,29,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 29, 129].  Tensor sizes: [2, 0, 29, 129]
2025-03-05 15:22:56.878914 test begin: paddle.broadcast_to(Tensor([2, 0, 29, 161],"bool"), list[2,8,29,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 29, 161],"bool"), list[2,8,29,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 29, 161].  Tensor sizes: [2, 0, 29, 161]
2025-03-05 15:22:56.879498 test begin: paddle.broadcast_to(Tensor([2, 0, 29, 17],"bool"), list[2,8,29,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 29, 17],"bool"), list[2,8,29,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 29, 17].  Tensor sizes: [2, 0, 29, 17]
2025-03-05 15:22:56.880150 test begin: paddle.broadcast_to(Tensor([2, 0, 29, 181],"bool"), list[2,8,29,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 29, 181],"bool"), list[2,8,29,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 29, 181].  Tensor sizes: [2, 0, 29, 181]
2025-03-05 15:22:56.880734 test begin: paddle.broadcast_to(Tensor([2, 0, 29, 29],"bool"), list[2,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 29, 29],"bool"), list[2,8,29,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 29, 29].  Tensor sizes: [2, 0, 29, 29]
2025-03-05 15:22:56.881312 test begin: paddle.broadcast_to(Tensor([2, 0, 29, 41],"bool"), list[2,8,29,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 29, 41],"bool"), list[2,8,29,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 29, 41].  Tensor sizes: [2, 0, 29, 41]
2025-03-05 15:22:56.881865 test begin: paddle.broadcast_to(Tensor([2, 0, 29, 57],"bool"), list[2,8,29,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 29, 57],"bool"), list[2,8,29,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 29, 57].  Tensor sizes: [2, 0, 29, 57]
2025-03-05 15:22:56.882395 test begin: paddle.broadcast_to(Tensor([2, 0, 29, 81],"bool"), list[2,8,29,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 29, 81],"bool"), list[2,8,29,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 29, 81].  Tensor sizes: [2, 0, 29, 81]
2025-03-05 15:22:56.882926 test begin: paddle.broadcast_to(Tensor([2, 0, 29, 85],"bool"), list[2,8,29,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 29, 85],"bool"), list[2,8,29,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 29, 85].  Tensor sizes: [2, 0, 29, 85]
2025-03-05 15:22:56.883486 test begin: paddle.broadcast_to(Tensor([2, 0, 3, 121],"bool"), list[2,8,3,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 3, 121],"bool"), list[2,8,3,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 3, 121].  Tensor sizes: [2, 0, 3, 121]
2025-03-05 15:22:56.884047 test begin: paddle.broadcast_to(Tensor([2, 0, 3, 129],"bool"), list[2,8,3,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 3, 129],"bool"), list[2,8,3,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 3, 129].  Tensor sizes: [2, 0, 3, 129]
2025-03-05 15:22:56.884570 test begin: paddle.broadcast_to(Tensor([2, 0, 3, 161],"bool"), list[2,8,3,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 3, 161],"bool"), list[2,8,3,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 3, 161].  Tensor sizes: [2, 0, 3, 161]
2025-03-05 15:22:56.885125 test begin: paddle.broadcast_to(Tensor([2, 0, 3, 17],"bool"), list[2,8,3,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 3, 17],"bool"), list[2,8,3,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 3, 17].  Tensor sizes: [2, 0, 3, 17]
2025-03-05 15:22:56.885650 test begin: paddle.broadcast_to(Tensor([2, 0, 3, 181],"bool"), list[2,8,3,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 3, 181],"bool"), list[2,8,3,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 3, 181].  Tensor sizes: [2, 0, 3, 181]
2025-03-05 15:22:56.886179 test begin: paddle.broadcast_to(Tensor([2, 0, 3, 3],"bool"), list[2,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 3, 3],"bool"), list[2,8,3,3,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 3, 3].  Tensor sizes: [2, 0, 3, 3]
2025-03-05 15:22:56.886710 test begin: paddle.broadcast_to(Tensor([2, 0, 3, 41],"bool"), list[2,8,3,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 3, 41],"bool"), list[2,8,3,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 3, 41].  Tensor sizes: [2, 0, 3, 41]
2025-03-05 15:22:56.887228 test begin: paddle.broadcast_to(Tensor([2, 0, 3, 57],"bool"), list[2,8,3,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 3, 57],"bool"), list[2,8,3,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 3, 57].  Tensor sizes: [2, 0, 3, 57]
2025-03-05 15:22:56.887791 test begin: paddle.broadcast_to(Tensor([2, 0, 3, 81],"bool"), list[2,8,3,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 3, 81],"bool"), list[2,8,3,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 3, 81].  Tensor sizes: [2, 0, 3, 81]
2025-03-05 15:22:56.888325 test begin: paddle.broadcast_to(Tensor([2, 0, 3, 85],"bool"), list[2,8,3,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 3, 85],"bool"), list[2,8,3,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 3, 85].  Tensor sizes: [2, 0, 3, 85]
2025-03-05 15:22:56.888912 test begin: paddle.broadcast_to(Tensor([2, 0, 3, 9],"bool"), list[2,8,3,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 3, 9],"bool"), list[2,8,3,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 3, 9].  Tensor sizes: [2, 0, 3, 9]
2025-03-05 15:22:56.889511 test begin: paddle.broadcast_to(Tensor([2, 0, 30, 121],"bool"), list[2,8,30,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 30, 121],"bool"), list[2,8,30,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 30, 121].  Tensor sizes: [2, 0, 30, 121]
2025-03-05 15:22:56.890089 test begin: paddle.broadcast_to(Tensor([2, 0, 30, 129],"bool"), list[2,8,30,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 30, 129],"bool"), list[2,8,30,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 30, 129].  Tensor sizes: [2, 0, 30, 129]
2025-03-05 15:22:56.890702 test begin: paddle.broadcast_to(Tensor([2, 0, 30, 161],"bool"), list[2,8,30,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 30, 161],"bool"), list[2,8,30,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 30, 161].  Tensor sizes: [2, 0, 30, 161]
2025-03-05 15:22:56.891230 test begin: paddle.broadcast_to(Tensor([2, 0, 30, 17],"bool"), list[2,8,30,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 30, 17],"bool"), list[2,8,30,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 30, 17].  Tensor sizes: [2, 0, 30, 17]
2025-03-05 15:22:56.891802 test begin: paddle.broadcast_to(Tensor([2, 0, 30, 181],"bool"), list[2,8,30,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 30, 181],"bool"), list[2,8,30,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 30, 181].  Tensor sizes: [2, 0, 30, 181]
2025-03-05 15:22:56.892375 test begin: paddle.broadcast_to(Tensor([2, 0, 30, 30],"bool"), list[2,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 30, 30],"bool"), list[2,8,30,30,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 30, 30].  Tensor sizes: [2, 0, 30, 30]
2025-03-05 15:22:56.892973 test begin: paddle.broadcast_to(Tensor([2, 0, 30, 41],"bool"), list[2,8,30,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 30, 41],"bool"), list[2,8,30,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 30, 41].  Tensor sizes: [2, 0, 30, 41]
2025-03-05 15:22:56.893529 test begin: paddle.broadcast_to(Tensor([2, 0, 30, 57],"bool"), list[2,8,30,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 30, 57],"bool"), list[2,8,30,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 30, 57].  Tensor sizes: [2, 0, 30, 57]
2025-03-05 15:22:56.894089 test begin: paddle.broadcast_to(Tensor([2, 0, 30, 81],"bool"), list[2,8,30,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 30, 81],"bool"), list[2,8,30,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 30, 81].  Tensor sizes: [2, 0, 30, 81]
2025-03-05 15:22:56.894647 test begin: paddle.broadcast_to(Tensor([2, 0, 30, 85],"bool"), list[2,8,30,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 30, 85],"bool"), list[2,8,30,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 30, 85].  Tensor sizes: [2, 0, 30, 85]
2025-03-05 15:22:56.895200 test begin: paddle.broadcast_to(Tensor([2, 0, 31, 121],"bool"), list[2,8,31,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 31, 121],"bool"), list[2,8,31,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 31, 121].  Tensor sizes: [2, 0, 31, 121]
2025-03-05 15:22:56.895738 test begin: paddle.broadcast_to(Tensor([2, 0, 31, 129],"bool"), list[2,8,31,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 31, 129],"bool"), list[2,8,31,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 31, 129].  Tensor sizes: [2, 0, 31, 129]
2025-03-05 15:22:56.896273 test begin: paddle.broadcast_to(Tensor([2, 0, 31, 161],"bool"), list[2,8,31,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 31, 161],"bool"), list[2,8,31,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 31, 161].  Tensor sizes: [2, 0, 31, 161]
2025-03-05 15:22:56.896807 test begin: paddle.broadcast_to(Tensor([2, 0, 31, 17],"bool"), list[2,8,31,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 31, 17],"bool"), list[2,8,31,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 31, 17].  Tensor sizes: [2, 0, 31, 17]
2025-03-05 15:22:56.897364 test begin: paddle.broadcast_to(Tensor([2, 0, 31, 181],"bool"), list[2,8,31,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 31, 181],"bool"), list[2,8,31,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 31, 181].  Tensor sizes: [2, 0, 31, 181]
2025-03-05 15:22:56.897931 test begin: paddle.broadcast_to(Tensor([2, 0, 31, 31],"bool"), list[2,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 31, 31],"bool"), list[2,8,31,31,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 31, 31].  Tensor sizes: [2, 0, 31, 31]
2025-03-05 15:22:56.898478 test begin: paddle.broadcast_to(Tensor([2, 0, 31, 41],"bool"), list[2,8,31,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 31, 41],"bool"), list[2,8,31,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 31, 41].  Tensor sizes: [2, 0, 31, 41]
2025-03-05 15:22:56.899029 test begin: paddle.broadcast_to(Tensor([2, 0, 31, 57],"bool"), list[2,8,31,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 31, 57],"bool"), list[2,8,31,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 31, 57].  Tensor sizes: [2, 0, 31, 57]
2025-03-05 15:22:56.899608 test begin: paddle.broadcast_to(Tensor([2, 0, 31, 81],"bool"), list[2,8,31,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 31, 81],"bool"), list[2,8,31,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 31, 81].  Tensor sizes: [2, 0, 31, 81]
2025-03-05 15:22:56.900133 test begin: paddle.broadcast_to(Tensor([2, 0, 31, 85],"bool"), list[2,8,31,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 31, 85],"bool"), list[2,8,31,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 31, 85].  Tensor sizes: [2, 0, 31, 85]
2025-03-05 15:22:56.900660 test begin: paddle.broadcast_to(Tensor([2, 0, 32, 121],"bool"), list[2,8,32,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 32, 121],"bool"), list[2,8,32,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 32, 121].  Tensor sizes: [2, 0, 32, 121]
2025-03-05 15:22:56.901206 test begin: paddle.broadcast_to(Tensor([2, 0, 32, 129],"bool"), list[2,8,32,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 32, 129],"bool"), list[2,8,32,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 32, 129].  Tensor sizes: [2, 0, 32, 129]
2025-03-05 15:22:56.901736 test begin: paddle.broadcast_to(Tensor([2, 0, 32, 161],"bool"), list[2,8,32,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 32, 161],"bool"), list[2,8,32,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 32, 161].  Tensor sizes: [2, 0, 32, 161]
2025-03-05 15:22:56.902260 test begin: paddle.broadcast_to(Tensor([2, 0, 32, 17],"bool"), list[2,8,32,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 32, 17],"bool"), list[2,8,32,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 32, 17].  Tensor sizes: [2, 0, 32, 17]
2025-03-05 15:22:56.902782 test begin: paddle.broadcast_to(Tensor([2, 0, 32, 181],"bool"), list[2,8,32,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 32, 181],"bool"), list[2,8,32,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 32, 181].  Tensor sizes: [2, 0, 32, 181]
2025-03-05 15:22:56.903322 test begin: paddle.broadcast_to(Tensor([2, 0, 32, 32],"bool"), list[2,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 32, 32],"bool"), list[2,8,32,32,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 32, 32].  Tensor sizes: [2, 0, 32, 32]
2025-03-05 15:22:56.903851 test begin: paddle.broadcast_to(Tensor([2, 0, 32, 41],"bool"), list[2,8,32,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 32, 41],"bool"), list[2,8,32,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 32, 41].  Tensor sizes: [2, 0, 32, 41]
2025-03-05 15:22:56.904366 test begin: paddle.broadcast_to(Tensor([2, 0, 32, 57],"bool"), list[2,8,32,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 32, 57],"bool"), list[2,8,32,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 32, 57].  Tensor sizes: [2, 0, 32, 57]
2025-03-05 15:22:56.904887 test begin: paddle.broadcast_to(Tensor([2, 0, 32, 81],"bool"), list[2,8,32,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 32, 81],"bool"), list[2,8,32,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 32, 81].  Tensor sizes: [2, 0, 32, 81]
2025-03-05 15:22:56.905409 test begin: paddle.broadcast_to(Tensor([2, 0, 32, 85],"bool"), list[2,8,32,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 32, 85],"bool"), list[2,8,32,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 32, 85].  Tensor sizes: [2, 0, 32, 85]
2025-03-05 15:22:56.905929 test begin: paddle.broadcast_to(Tensor([2, 0, 33, 121],"bool"), list[2,8,33,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 33, 121],"bool"), list[2,8,33,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 33, 121].  Tensor sizes: [2, 0, 33, 121]
2025-03-05 15:22:56.906452 test begin: paddle.broadcast_to(Tensor([2, 0, 33, 129],"bool"), list[2,8,33,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 33, 129],"bool"), list[2,8,33,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 33, 129].  Tensor sizes: [2, 0, 33, 129]
2025-03-05 15:22:56.909769 test begin: paddle.broadcast_to(Tensor([2, 0, 33, 161],"bool"), list[2,8,33,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 33, 161],"bool"), list[2,8,33,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 33, 161].  Tensor sizes: [2, 0, 33, 161]
2025-03-05 15:22:56.910804 test begin: paddle.broadcast_to(Tensor([2, 0, 33, 17],"bool"), list[2,8,33,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 33, 17],"bool"), list[2,8,33,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 33, 17].  Tensor sizes: [2, 0, 33, 17]
2025-03-05 15:22:56.911349 test begin: paddle.broadcast_to(Tensor([2, 0, 33, 181],"bool"), list[2,8,33,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 33, 181],"bool"), list[2,8,33,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 33, 181].  Tensor sizes: [2, 0, 33, 181]
2025-03-05 15:22:56.911931 test begin: paddle.broadcast_to(Tensor([2, 0, 33, 33],"bool"), list[2,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 33, 33],"bool"), list[2,8,33,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 33, 33].  Tensor sizes: [2, 0, 33, 33]
2025-03-05 15:22:56.912479 test begin: paddle.broadcast_to(Tensor([2, 0, 33, 41],"bool"), list[2,8,33,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 33, 41],"bool"), list[2,8,33,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 33, 41].  Tensor sizes: [2, 0, 33, 41]
2025-03-05 15:22:56.913011 test begin: paddle.broadcast_to(Tensor([2, 0, 33, 57],"bool"), list[2,8,33,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 33, 57],"bool"), list[2,8,33,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 33, 57].  Tensor sizes: [2, 0, 33, 57]
2025-03-05 15:22:56.913531 test begin: paddle.broadcast_to(Tensor([2, 0, 33, 81],"bool"), list[2,8,33,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 33, 81],"bool"), list[2,8,33,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 33, 81].  Tensor sizes: [2, 0, 33, 81]
2025-03-05 15:22:56.914087 test begin: paddle.broadcast_to(Tensor([2, 0, 33, 85],"bool"), list[2,8,33,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 33, 85],"bool"), list[2,8,33,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 33, 85].  Tensor sizes: [2, 0, 33, 85]
2025-03-05 15:22:56.914636 test begin: paddle.broadcast_to(Tensor([2, 0, 34, 121],"bool"), list[2,8,34,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 34, 121],"bool"), list[2,8,34,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 34, 121].  Tensor sizes: [2, 0, 34, 121]
2025-03-05 15:22:56.915163 test begin: paddle.broadcast_to(Tensor([2, 0, 34, 129],"bool"), list[2,8,34,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 34, 129],"bool"), list[2,8,34,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 34, 129].  Tensor sizes: [2, 0, 34, 129]
2025-03-05 15:22:56.915693 test begin: paddle.broadcast_to(Tensor([2, 0, 34, 161],"bool"), list[2,8,34,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 34, 161],"bool"), list[2,8,34,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 34, 161].  Tensor sizes: [2, 0, 34, 161]
2025-03-05 15:22:56.916247 test begin: paddle.broadcast_to(Tensor([2, 0, 34, 17],"bool"), list[2,8,34,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 34, 17],"bool"), list[2,8,34,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 34, 17].  Tensor sizes: [2, 0, 34, 17]
2025-03-05 15:22:56.916783 test begin: paddle.broadcast_to(Tensor([2, 0, 34, 181],"bool"), list[2,8,34,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 34, 181],"bool"), list[2,8,34,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 34, 181].  Tensor sizes: [2, 0, 34, 181]
2025-03-05 15:22:56.917317 test begin: paddle.broadcast_to(Tensor([2, 0, 34, 34],"bool"), list[2,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 34, 34],"bool"), list[2,8,34,34,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 34, 34].  Tensor sizes: [2, 0, 34, 34]
2025-03-05 15:22:56.917847 test begin: paddle.broadcast_to(Tensor([2, 0, 34, 41],"bool"), list[2,8,34,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 34, 41],"bool"), list[2,8,34,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 34, 41].  Tensor sizes: [2, 0, 34, 41]
2025-03-05 15:22:56.918361 test begin: paddle.broadcast_to(Tensor([2, 0, 34, 57],"bool"), list[2,8,34,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 34, 57],"bool"), list[2,8,34,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 34, 57].  Tensor sizes: [2, 0, 34, 57]
2025-03-05 15:22:56.918895 test begin: paddle.broadcast_to(Tensor([2, 0, 34, 81],"bool"), list[2,8,34,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 34, 81],"bool"), list[2,8,34,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 34, 81].  Tensor sizes: [2, 0, 34, 81]
2025-03-05 15:22:56.919424 test begin: paddle.broadcast_to(Tensor([2, 0, 34, 85],"bool"), list[2,8,34,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 34, 85],"bool"), list[2,8,34,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 34, 85].  Tensor sizes: [2, 0, 34, 85]
2025-03-05 15:22:56.920020 test begin: paddle.broadcast_to(Tensor([2, 0, 35, 121],"bool"), list[2,8,35,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 35, 121],"bool"), list[2,8,35,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 35, 121].  Tensor sizes: [2, 0, 35, 121]
2025-03-05 15:22:56.920539 test begin: paddle.broadcast_to(Tensor([2, 0, 35, 129],"bool"), list[2,8,35,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 35, 129],"bool"), list[2,8,35,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 35, 129].  Tensor sizes: [2, 0, 35, 129]
2025-03-05 15:22:56.921060 test begin: paddle.broadcast_to(Tensor([2, 0, 35, 161],"bool"), list[2,8,35,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 35, 161],"bool"), list[2,8,35,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 35, 161].  Tensor sizes: [2, 0, 35, 161]
2025-03-05 15:22:56.921566 test begin: paddle.broadcast_to(Tensor([2, 0, 35, 17],"bool"), list[2,8,35,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 35, 17],"bool"), list[2,8,35,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 35, 17].  Tensor sizes: [2, 0, 35, 17]
2025-03-05 15:22:56.922096 test begin: paddle.broadcast_to(Tensor([2, 0, 35, 181],"bool"), list[2,8,35,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 35, 181],"bool"), list[2,8,35,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 35, 181].  Tensor sizes: [2, 0, 35, 181]
2025-03-05 15:22:56.922617 test begin: paddle.broadcast_to(Tensor([2, 0, 35, 35],"bool"), list[2,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 35, 35],"bool"), list[2,8,35,35,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 35, 35].  Tensor sizes: [2, 0, 35, 35]
2025-03-05 15:22:56.923137 test begin: paddle.broadcast_to(Tensor([2, 0, 35, 41],"bool"), list[2,8,35,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 35, 41],"bool"), list[2,8,35,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 35, 41].  Tensor sizes: [2, 0, 35, 41]
2025-03-05 15:22:56.923652 test begin: paddle.broadcast_to(Tensor([2, 0, 35, 57],"bool"), list[2,8,35,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 35, 57],"bool"), list[2,8,35,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 35, 57].  Tensor sizes: [2, 0, 35, 57]
2025-03-05 15:22:56.924169 test begin: paddle.broadcast_to(Tensor([2, 0, 35, 81],"bool"), list[2,8,35,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 35, 81],"bool"), list[2,8,35,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 35, 81].  Tensor sizes: [2, 0, 35, 81]
2025-03-05 15:22:56.924688 test begin: paddle.broadcast_to(Tensor([2, 0, 35, 85],"bool"), list[2,8,35,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 35, 85],"bool"), list[2,8,35,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 35, 85].  Tensor sizes: [2, 0, 35, 85]
2025-03-05 15:22:56.925209 test begin: paddle.broadcast_to(Tensor([2, 0, 36, 121],"bool"), list[2,8,36,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 36, 121],"bool"), list[2,8,36,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 36, 121].  Tensor sizes: [2, 0, 36, 121]
2025-03-05 15:22:56.925721 test begin: paddle.broadcast_to(Tensor([2, 0, 36, 129],"bool"), list[2,8,36,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 36, 129],"bool"), list[2,8,36,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 36, 129].  Tensor sizes: [2, 0, 36, 129]
2025-03-05 15:22:56.926356 test begin: paddle.broadcast_to(Tensor([2, 0, 36, 161],"bool"), list[2,8,36,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 36, 161],"bool"), list[2,8,36,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 36, 161].  Tensor sizes: [2, 0, 36, 161]
2025-03-05 15:22:56.927403 test begin: paddle.broadcast_to(Tensor([2, 0, 36, 181],"bool"), list[2,8,36,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 36, 181],"bool"), list[2,8,36,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 36, 181].  Tensor sizes: [2, 0, 36, 181]
2025-03-05 15:22:56.928089 test begin: paddle.broadcast_to(Tensor([2, 0, 36, 36],"bool"), list[2,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 36, 36],"bool"), list[2,8,36,36,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 36, 36].  Tensor sizes: [2, 0, 36, 36]
2025-03-05 15:22:56.928725 test begin: paddle.broadcast_to(Tensor([2, 0, 36, 41],"bool"), list[2,8,36,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 36, 41],"bool"), list[2,8,36,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 36, 41].  Tensor sizes: [2, 0, 36, 41]
2025-03-05 15:22:56.929342 test begin: paddle.broadcast_to(Tensor([2, 0, 36, 57],"bool"), list[2,8,36,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 36, 57],"bool"), list[2,8,36,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 36, 57].  Tensor sizes: [2, 0, 36, 57]
2025-03-05 15:22:56.929974 test begin: paddle.broadcast_to(Tensor([2, 0, 36, 81],"bool"), list[2,8,36,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 36, 81],"bool"), list[2,8,36,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 36, 81].  Tensor sizes: [2, 0, 36, 81]
2025-03-05 15:22:56.930575 test begin: paddle.broadcast_to(Tensor([2, 0, 36, 85],"bool"), list[2,8,36,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 36, 85],"bool"), list[2,8,36,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 36, 85].  Tensor sizes: [2, 0, 36, 85]
2025-03-05 15:22:56.931180 test begin: paddle.broadcast_to(Tensor([2, 0, 37, 121],"bool"), list[2,8,37,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 37, 121],"bool"), list[2,8,37,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 37, 121].  Tensor sizes: [2, 0, 37, 121]
2025-03-05 15:22:56.931841 test begin: paddle.broadcast_to(Tensor([2, 0, 37, 129],"bool"), list[2,8,37,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 37, 129],"bool"), list[2,8,37,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 37, 129].  Tensor sizes: [2, 0, 37, 129]
2025-03-05 15:22:56.932448 test begin: paddle.broadcast_to(Tensor([2, 0, 37, 161],"bool"), list[2,8,37,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 37, 161],"bool"), list[2,8,37,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 37, 161].  Tensor sizes: [2, 0, 37, 161]
2025-03-05 15:22:56.933060 test begin: paddle.broadcast_to(Tensor([2, 0, 37, 181],"bool"), list[2,8,37,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 37, 181],"bool"), list[2,8,37,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 37, 181].  Tensor sizes: [2, 0, 37, 181]
2025-03-05 15:22:56.933679 test begin: paddle.broadcast_to(Tensor([2, 0, 37, 37],"bool"), list[2,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 37, 37],"bool"), list[2,8,37,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 37, 37].  Tensor sizes: [2, 0, 37, 37]
2025-03-05 15:22:56.934290 test begin: paddle.broadcast_to(Tensor([2, 0, 37, 41],"bool"), list[2,8,37,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 37, 41],"bool"), list[2,8,37,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 37, 41].  Tensor sizes: [2, 0, 37, 41]
2025-03-05 15:22:56.934908 test begin: paddle.broadcast_to(Tensor([2, 0, 37, 57],"bool"), list[2,8,37,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 37, 57],"bool"), list[2,8,37,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 37, 57].  Tensor sizes: [2, 0, 37, 57]
2025-03-05 15:22:56.935512 test begin: paddle.broadcast_to(Tensor([2, 0, 37, 81],"bool"), list[2,8,37,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 37, 81],"bool"), list[2,8,37,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 37, 81].  Tensor sizes: [2, 0, 37, 81]
2025-03-05 15:22:56.936308 test begin: paddle.broadcast_to(Tensor([2, 0, 37, 85],"bool"), list[2,8,37,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 37, 85],"bool"), list[2,8,37,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 37, 85].  Tensor sizes: [2, 0, 37, 85]
2025-03-05 15:22:56.936974 test begin: paddle.broadcast_to(Tensor([2, 0, 38, 121],"bool"), list[2,8,38,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 38, 121],"bool"), list[2,8,38,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 38, 121].  Tensor sizes: [2, 0, 38, 121]
2025-03-05 15:22:56.937521 test begin: paddle.broadcast_to(Tensor([2, 0, 38, 129],"bool"), list[2,8,38,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 38, 129],"bool"), list[2,8,38,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 38, 129].  Tensor sizes: [2, 0, 38, 129]
2025-03-05 15:22:56.938079 test begin: paddle.broadcast_to(Tensor([2, 0, 38, 161],"bool"), list[2,8,38,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 38, 161],"bool"), list[2,8,38,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 38, 161].  Tensor sizes: [2, 0, 38, 161]
2025-03-05 15:22:56.938617 test begin: paddle.broadcast_to(Tensor([2, 0, 38, 181],"bool"), list[2,8,38,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 38, 181],"bool"), list[2,8,38,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 38, 181].  Tensor sizes: [2, 0, 38, 181]
2025-03-05 15:22:56.939142 test begin: paddle.broadcast_to(Tensor([2, 0, 38, 38],"bool"), list[2,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 38, 38],"bool"), list[2,8,38,38,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 38, 38].  Tensor sizes: [2, 0, 38, 38]
2025-03-05 15:22:56.939663 test begin: paddle.broadcast_to(Tensor([2, 0, 38, 41],"bool"), list[2,8,38,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 38, 41],"bool"), list[2,8,38,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 38, 41].  Tensor sizes: [2, 0, 38, 41]
2025-03-05 15:22:56.940215 test begin: paddle.broadcast_to(Tensor([2, 0, 38, 57],"bool"), list[2,8,38,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 38, 57],"bool"), list[2,8,38,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 38, 57].  Tensor sizes: [2, 0, 38, 57]
2025-03-05 15:22:56.940780 test begin: paddle.broadcast_to(Tensor([2, 0, 38, 81],"bool"), list[2,8,38,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 38, 81],"bool"), list[2,8,38,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 38, 81].  Tensor sizes: [2, 0, 38, 81]
2025-03-05 15:22:56.941312 test begin: paddle.broadcast_to(Tensor([2, 0, 38, 85],"bool"), list[2,8,38,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 38, 85],"bool"), list[2,8,38,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 38, 85].  Tensor sizes: [2, 0, 38, 85]
2025-03-05 15:22:56.941845 test begin: paddle.broadcast_to(Tensor([2, 0, 39, 121],"bool"), list[2,8,39,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 39, 121],"bool"), list[2,8,39,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 39, 121].  Tensor sizes: [2, 0, 39, 121]
2025-03-05 15:22:56.942373 test begin: paddle.broadcast_to(Tensor([2, 0, 39, 129],"bool"), list[2,8,39,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 39, 129],"bool"), list[2,8,39,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 39, 129].  Tensor sizes: [2, 0, 39, 129]
2025-03-05 15:22:56.942971 test begin: paddle.broadcast_to(Tensor([2, 0, 39, 161],"bool"), list[2,8,39,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 39, 161],"bool"), list[2,8,39,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 39, 161].  Tensor sizes: [2, 0, 39, 161]
2025-03-05 15:22:56.943490 test begin: paddle.broadcast_to(Tensor([2, 0, 39, 181],"bool"), list[2,8,39,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 39, 181],"bool"), list[2,8,39,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 39, 181].  Tensor sizes: [2, 0, 39, 181]
2025-03-05 15:22:56.944021 test begin: paddle.broadcast_to(Tensor([2, 0, 39, 39],"bool"), list[2,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 39, 39],"bool"), list[2,8,39,39,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 39, 39].  Tensor sizes: [2, 0, 39, 39]
2025-03-05 15:22:56.944539 test begin: paddle.broadcast_to(Tensor([2, 0, 39, 41],"bool"), list[2,8,39,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 39, 41],"bool"), list[2,8,39,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 39, 41].  Tensor sizes: [2, 0, 39, 41]
2025-03-05 15:22:56.945069 test begin: paddle.broadcast_to(Tensor([2, 0, 39, 57],"bool"), list[2,8,39,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 39, 57],"bool"), list[2,8,39,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 39, 57].  Tensor sizes: [2, 0, 39, 57]
2025-03-05 15:22:56.945614 test begin: paddle.broadcast_to(Tensor([2, 0, 39, 81],"bool"), list[2,8,39,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 39, 81],"bool"), list[2,8,39,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 39, 81].  Tensor sizes: [2, 0, 39, 81]
2025-03-05 15:22:56.946144 test begin: paddle.broadcast_to(Tensor([2, 0, 39, 85],"bool"), list[2,8,39,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 39, 85],"bool"), list[2,8,39,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 39, 85].  Tensor sizes: [2, 0, 39, 85]
2025-03-05 15:22:56.946688 test begin: paddle.broadcast_to(Tensor([2, 0, 4, 121],"bool"), list[2,8,4,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 4, 121],"bool"), list[2,8,4,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 4, 121].  Tensor sizes: [2, 0, 4, 121]
2025-03-05 15:22:56.947243 test begin: paddle.broadcast_to(Tensor([2, 0, 4, 129],"bool"), list[2,8,4,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 4, 129],"bool"), list[2,8,4,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 4, 129].  Tensor sizes: [2, 0, 4, 129]
2025-03-05 15:22:56.947781 test begin: paddle.broadcast_to(Tensor([2, 0, 4, 161],"bool"), list[2,8,4,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 4, 161],"bool"), list[2,8,4,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 4, 161].  Tensor sizes: [2, 0, 4, 161]
2025-03-05 15:22:56.948315 test begin: paddle.broadcast_to(Tensor([2, 0, 4, 17],"bool"), list[2,8,4,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 4, 17],"bool"), list[2,8,4,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 4, 17].  Tensor sizes: [2, 0, 4, 17]
2025-03-05 15:22:56.948857 test begin: paddle.broadcast_to(Tensor([2, 0, 4, 181],"bool"), list[2,8,4,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 4, 181],"bool"), list[2,8,4,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 4, 181].  Tensor sizes: [2, 0, 4, 181]
2025-03-05 15:22:56.949402 test begin: paddle.broadcast_to(Tensor([2, 0, 4, 41],"bool"), list[2,8,4,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 4, 41],"bool"), list[2,8,4,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 4, 41].  Tensor sizes: [2, 0, 4, 41]
2025-03-05 15:22:56.949949 test begin: paddle.broadcast_to(Tensor([2, 0, 4, 4],"bool"), list[2,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 4, 4],"bool"), list[2,8,4,4,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 4, 4].  Tensor sizes: [2, 0, 4, 4]
2025-03-05 15:22:56.950486 test begin: paddle.broadcast_to(Tensor([2, 0, 4, 57],"bool"), list[2,8,4,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 4, 57],"bool"), list[2,8,4,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 4, 57].  Tensor sizes: [2, 0, 4, 57]
2025-03-05 15:22:56.951021 test begin: paddle.broadcast_to(Tensor([2, 0, 4, 81],"bool"), list[2,8,4,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 4, 81],"bool"), list[2,8,4,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 4, 81].  Tensor sizes: [2, 0, 4, 81]
2025-03-05 15:22:56.951549 test begin: paddle.broadcast_to(Tensor([2, 0, 4, 85],"bool"), list[2,8,4,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 4, 85],"bool"), list[2,8,4,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 4, 85].  Tensor sizes: [2, 0, 4, 85]
2025-03-05 15:22:56.952086 test begin: paddle.broadcast_to(Tensor([2, 0, 4, 9],"bool"), list[2,8,4,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 4, 9],"bool"), list[2,8,4,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 4, 9].  Tensor sizes: [2, 0, 4, 9]
2025-03-05 15:22:56.952609 test begin: paddle.broadcast_to(Tensor([2, 0, 40, 121],"bool"), list[2,8,40,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 40, 121],"bool"), list[2,8,40,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 40, 121].  Tensor sizes: [2, 0, 40, 121]
2025-03-05 15:22:56.953140 test begin: paddle.broadcast_to(Tensor([2, 0, 40, 129],"bool"), list[2,8,40,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 40, 129],"bool"), list[2,8,40,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 40, 129].  Tensor sizes: [2, 0, 40, 129]
2025-03-05 15:22:56.953673 test begin: paddle.broadcast_to(Tensor([2, 0, 40, 161],"bool"), list[2,8,40,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 40, 161],"bool"), list[2,8,40,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 40, 161].  Tensor sizes: [2, 0, 40, 161]
2025-03-05 15:22:56.954200 test begin: paddle.broadcast_to(Tensor([2, 0, 40, 181],"bool"), list[2,8,40,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 40, 181],"bool"), list[2,8,40,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 40, 181].  Tensor sizes: [2, 0, 40, 181]
2025-03-05 15:22:56.954723 test begin: paddle.broadcast_to(Tensor([2, 0, 40, 40],"bool"), list[2,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 40, 40],"bool"), list[2,8,40,40,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 40, 40].  Tensor sizes: [2, 0, 40, 40]
2025-03-05 15:22:56.955253 test begin: paddle.broadcast_to(Tensor([2, 0, 40, 41],"bool"), list[2,8,40,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 40, 41],"bool"), list[2,8,40,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 40, 41].  Tensor sizes: [2, 0, 40, 41]
2025-03-05 15:22:56.955814 test begin: paddle.broadcast_to(Tensor([2, 0, 40, 57],"bool"), list[2,8,40,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 40, 57],"bool"), list[2,8,40,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 40, 57].  Tensor sizes: [2, 0, 40, 57]
2025-03-05 15:22:56.956351 test begin: paddle.broadcast_to(Tensor([2, 0, 40, 81],"bool"), list[2,8,40,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 40, 81],"bool"), list[2,8,40,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 40, 81].  Tensor sizes: [2, 0, 40, 81]
2025-03-05 15:22:56.956893 test begin: paddle.broadcast_to(Tensor([2, 0, 40, 85],"bool"), list[2,8,40,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 40, 85],"bool"), list[2,8,40,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 40, 85].  Tensor sizes: [2, 0, 40, 85]
2025-03-05 15:22:56.957408 test begin: paddle.broadcast_to(Tensor([2, 0, 41, 121],"bool"), list[2,8,41,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 41, 121],"bool"), list[2,8,41,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 41, 121].  Tensor sizes: [2, 0, 41, 121]
2025-03-05 15:22:56.957974 test begin: paddle.broadcast_to(Tensor([2, 0, 41, 129],"bool"), list[2,8,41,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 41, 129],"bool"), list[2,8,41,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 41, 129].  Tensor sizes: [2, 0, 41, 129]
2025-03-05 15:22:56.958498 test begin: paddle.broadcast_to(Tensor([2, 0, 41, 161],"bool"), list[2,8,41,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 41, 161],"bool"), list[2,8,41,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 41, 161].  Tensor sizes: [2, 0, 41, 161]
2025-03-05 15:22:56.959027 test begin: paddle.broadcast_to(Tensor([2, 0, 41, 181],"bool"), list[2,8,41,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 41, 181],"bool"), list[2,8,41,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 41, 181].  Tensor sizes: [2, 0, 41, 181]
2025-03-05 15:22:56.959547 test begin: paddle.broadcast_to(Tensor([2, 0, 41, 41],"bool"), list[2,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 41, 41],"bool"), list[2,8,41,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 41, 41].  Tensor sizes: [2, 0, 41, 41]
2025-03-05 15:22:56.960069 test begin: paddle.broadcast_to(Tensor([2, 0, 41, 57],"bool"), list[2,8,41,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 41, 57],"bool"), list[2,8,41,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 41, 57].  Tensor sizes: [2, 0, 41, 57]
2025-03-05 15:22:56.960643 test begin: paddle.broadcast_to(Tensor([2, 0, 41, 81],"bool"), list[2,8,41,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 41, 81],"bool"), list[2,8,41,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 41, 81].  Tensor sizes: [2, 0, 41, 81]
2025-03-05 15:22:56.961187 test begin: paddle.broadcast_to(Tensor([2, 0, 41, 85],"bool"), list[2,8,41,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 41, 85],"bool"), list[2,8,41,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 41, 85].  Tensor sizes: [2, 0, 41, 85]
2025-03-05 15:22:56.961778 test begin: paddle.broadcast_to(Tensor([2, 0, 42, 121],"bool"), list[2,8,42,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 42, 121],"bool"), list[2,8,42,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 42, 121].  Tensor sizes: [2, 0, 42, 121]
2025-03-05 15:22:56.962307 test begin: paddle.broadcast_to(Tensor([2, 0, 42, 129],"bool"), list[2,8,42,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 42, 129],"bool"), list[2,8,42,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 42, 129].  Tensor sizes: [2, 0, 42, 129]
2025-03-05 15:22:56.962838 test begin: paddle.broadcast_to(Tensor([2, 0, 42, 161],"bool"), list[2,8,42,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 42, 161],"bool"), list[2,8,42,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 42, 161].  Tensor sizes: [2, 0, 42, 161]
2025-03-05 15:22:56.963363 test begin: paddle.broadcast_to(Tensor([2, 0, 42, 181],"bool"), list[2,8,42,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 42, 181],"bool"), list[2,8,42,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 42, 181].  Tensor sizes: [2, 0, 42, 181]
2025-03-05 15:22:56.963889 test begin: paddle.broadcast_to(Tensor([2, 0, 42, 41],"bool"), list[2,8,42,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 42, 41],"bool"), list[2,8,42,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 42, 41].  Tensor sizes: [2, 0, 42, 41]
2025-03-05 15:22:56.964438 test begin: paddle.broadcast_to(Tensor([2, 0, 42, 42],"bool"), list[2,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 42, 42],"bool"), list[2,8,42,42,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 42, 42].  Tensor sizes: [2, 0, 42, 42]
2025-03-05 15:22:56.964978 test begin: paddle.broadcast_to(Tensor([2, 0, 42, 57],"bool"), list[2,8,42,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 42, 57],"bool"), list[2,8,42,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 42, 57].  Tensor sizes: [2, 0, 42, 57]
2025-03-05 15:22:56.965528 test begin: paddle.broadcast_to(Tensor([2, 0, 42, 81],"bool"), list[2,8,42,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 42, 81],"bool"), list[2,8,42,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 42, 81].  Tensor sizes: [2, 0, 42, 81]
2025-03-05 15:22:56.966060 test begin: paddle.broadcast_to(Tensor([2, 0, 42, 85],"bool"), list[2,8,42,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 42, 85],"bool"), list[2,8,42,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 42, 85].  Tensor sizes: [2, 0, 42, 85]
2025-03-05 15:22:56.966598 test begin: paddle.broadcast_to(Tensor([2, 0, 43, 121],"bool"), list[2,8,43,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 43, 121],"bool"), list[2,8,43,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 43, 121].  Tensor sizes: [2, 0, 43, 121]
2025-03-05 15:22:56.967123 test begin: paddle.broadcast_to(Tensor([2, 0, 43, 129],"bool"), list[2,8,43,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 43, 129],"bool"), list[2,8,43,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 43, 129].  Tensor sizes: [2, 0, 43, 129]
2025-03-05 15:22:56.967646 test begin: paddle.broadcast_to(Tensor([2, 0, 43, 161],"bool"), list[2,8,43,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 43, 161],"bool"), list[2,8,43,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 43, 161].  Tensor sizes: [2, 0, 43, 161]
2025-03-05 15:22:56.968176 test begin: paddle.broadcast_to(Tensor([2, 0, 43, 181],"bool"), list[2,8,43,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 43, 181],"bool"), list[2,8,43,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 43, 181].  Tensor sizes: [2, 0, 43, 181]
2025-03-05 15:22:56.968729 test begin: paddle.broadcast_to(Tensor([2, 0, 43, 41],"bool"), list[2,8,43,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 43, 41],"bool"), list[2,8,43,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 43, 41].  Tensor sizes: [2, 0, 43, 41]
2025-03-05 15:22:56.969258 test begin: paddle.broadcast_to(Tensor([2, 0, 43, 43],"bool"), list[2,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 43, 43],"bool"), list[2,8,43,43,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 43, 43].  Tensor sizes: [2, 0, 43, 43]
2025-03-05 15:22:56.969781 test begin: paddle.broadcast_to(Tensor([2, 0, 43, 57],"bool"), list[2,8,43,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 43, 57],"bool"), list[2,8,43,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 43, 57].  Tensor sizes: [2, 0, 43, 57]
2025-03-05 15:22:56.970289 test begin: paddle.broadcast_to(Tensor([2, 0, 43, 81],"bool"), list[2,8,43,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 43, 81],"bool"), list[2,8,43,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 43, 81].  Tensor sizes: [2, 0, 43, 81]
2025-03-05 15:22:56.970806 test begin: paddle.broadcast_to(Tensor([2, 0, 43, 85],"bool"), list[2,8,43,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 43, 85],"bool"), list[2,8,43,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 43, 85].  Tensor sizes: [2, 0, 43, 85]
2025-03-05 15:22:56.971336 test begin: paddle.broadcast_to(Tensor([2, 0, 44, 121],"bool"), list[2,8,44,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 44, 121],"bool"), list[2,8,44,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 44, 121].  Tensor sizes: [2, 0, 44, 121]
2025-03-05 15:22:56.971880 test begin: paddle.broadcast_to(Tensor([2, 0, 44, 129],"bool"), list[2,8,44,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 44, 129],"bool"), list[2,8,44,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 44, 129].  Tensor sizes: [2, 0, 44, 129]
2025-03-05 15:22:56.972404 test begin: paddle.broadcast_to(Tensor([2, 0, 44, 161],"bool"), list[2,8,44,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 44, 161],"bool"), list[2,8,44,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 44, 161].  Tensor sizes: [2, 0, 44, 161]
2025-03-05 15:22:56.972947 test begin: paddle.broadcast_to(Tensor([2, 0, 44, 181],"bool"), list[2,8,44,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 44, 181],"bool"), list[2,8,44,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 44, 181].  Tensor sizes: [2, 0, 44, 181]
2025-03-05 15:22:56.973473 test begin: paddle.broadcast_to(Tensor([2, 0, 44, 41],"bool"), list[2,8,44,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 44, 41],"bool"), list[2,8,44,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 44, 41].  Tensor sizes: [2, 0, 44, 41]
2025-03-05 15:22:56.974003 test begin: paddle.broadcast_to(Tensor([2, 0, 44, 44],"bool"), list[2,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 44, 44],"bool"), list[2,8,44,44,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 44, 44].  Tensor sizes: [2, 0, 44, 44]
2025-03-05 15:22:56.974518 test begin: paddle.broadcast_to(Tensor([2, 0, 44, 57],"bool"), list[2,8,44,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 44, 57],"bool"), list[2,8,44,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 44, 57].  Tensor sizes: [2, 0, 44, 57]
2025-03-05 15:22:56.975044 test begin: paddle.broadcast_to(Tensor([2, 0, 44, 81],"bool"), list[2,8,44,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 44, 81],"bool"), list[2,8,44,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 44, 81].  Tensor sizes: [2, 0, 44, 81]
2025-03-05 15:22:56.975562 test begin: paddle.broadcast_to(Tensor([2, 0, 44, 85],"bool"), list[2,8,44,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 44, 85],"bool"), list[2,8,44,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 44, 85].  Tensor sizes: [2, 0, 44, 85]
2025-03-05 15:22:56.976554 test begin: paddle.broadcast_to(Tensor([2, 0, 45, 121],"bool"), list[2,8,45,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 45, 121],"bool"), list[2,8,45,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 45, 121].  Tensor sizes: [2, 0, 45, 121]
2025-03-05 15:22:56.977146 test begin: paddle.broadcast_to(Tensor([2, 0, 45, 129],"bool"), list[2,8,45,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 45, 129],"bool"), list[2,8,45,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 45, 129].  Tensor sizes: [2, 0, 45, 129]
2025-03-05 15:22:56.977764 test begin: paddle.broadcast_to(Tensor([2, 0, 45, 161],"bool"), list[2,8,45,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 45, 161],"bool"), list[2,8,45,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 45, 161].  Tensor sizes: [2, 0, 45, 161]
2025-03-05 15:22:56.978331 test begin: paddle.broadcast_to(Tensor([2, 0, 45, 181],"bool"), list[2,8,45,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 45, 181],"bool"), list[2,8,45,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 45, 181].  Tensor sizes: [2, 0, 45, 181]
2025-03-05 15:22:56.978877 test begin: paddle.broadcast_to(Tensor([2, 0, 45, 41],"bool"), list[2,8,45,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 45, 41],"bool"), list[2,8,45,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 45, 41].  Tensor sizes: [2, 0, 45, 41]
2025-03-05 15:22:56.979398 test begin: paddle.broadcast_to(Tensor([2, 0, 45, 45],"bool"), list[2,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 45, 45],"bool"), list[2,8,45,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 45, 45].  Tensor sizes: [2, 0, 45, 45]
2025-03-05 15:22:56.979980 test begin: paddle.broadcast_to(Tensor([2, 0, 45, 57],"bool"), list[2,8,45,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 45, 57],"bool"), list[2,8,45,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 45, 57].  Tensor sizes: [2, 0, 45, 57]
2025-03-05 15:22:56.980546 test begin: paddle.broadcast_to(Tensor([2, 0, 45, 81],"bool"), list[2,8,45,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 45, 81],"bool"), list[2,8,45,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 45, 81].  Tensor sizes: [2, 0, 45, 81]
2025-03-05 15:22:56.981082 test begin: paddle.broadcast_to(Tensor([2, 0, 45, 85],"bool"), list[2,8,45,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 45, 85],"bool"), list[2,8,45,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 45, 85].  Tensor sizes: [2, 0, 45, 85]
2025-03-05 15:22:56.981605 test begin: paddle.broadcast_to(Tensor([2, 0, 46, 121],"bool"), list[2,8,46,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 46, 121],"bool"), list[2,8,46,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 46, 121].  Tensor sizes: [2, 0, 46, 121]
2025-03-05 15:22:56.982126 test begin: paddle.broadcast_to(Tensor([2, 0, 46, 129],"bool"), list[2,8,46,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 46, 129],"bool"), list[2,8,46,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 46, 129].  Tensor sizes: [2, 0, 46, 129]
2025-03-05 15:22:56.982746 test begin: paddle.broadcast_to(Tensor([2, 0, 46, 161],"bool"), list[2,8,46,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 46, 161],"bool"), list[2,8,46,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 46, 161].  Tensor sizes: [2, 0, 46, 161]
2025-03-05 15:22:56.983692 test begin: paddle.broadcast_to(Tensor([2, 0, 46, 181],"bool"), list[2,8,46,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 46, 181],"bool"), list[2,8,46,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 46, 181].  Tensor sizes: [2, 0, 46, 181]
2025-03-05 15:22:56.984269 test begin: paddle.broadcast_to(Tensor([2, 0, 46, 41],"bool"), list[2,8,46,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 46, 41],"bool"), list[2,8,46,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 46, 41].  Tensor sizes: [2, 0, 46, 41]
2025-03-05 15:22:56.984830 test begin: paddle.broadcast_to(Tensor([2, 0, 46, 46],"bool"), list[2,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 46, 46],"bool"), list[2,8,46,46,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 46, 46].  Tensor sizes: [2, 0, 46, 46]
2025-03-05 15:22:56.985363 test begin: paddle.broadcast_to(Tensor([2, 0, 46, 57],"bool"), list[2,8,46,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 46, 57],"bool"), list[2,8,46,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 46, 57].  Tensor sizes: [2, 0, 46, 57]
2025-03-05 15:22:56.985940 test begin: paddle.broadcast_to(Tensor([2, 0, 46, 81],"bool"), list[2,8,46,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 46, 81],"bool"), list[2,8,46,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 46, 81].  Tensor sizes: [2, 0, 46, 81]
2025-03-05 15:22:56.986473 test begin: paddle.broadcast_to(Tensor([2, 0, 46, 85],"bool"), list[2,8,46,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 46, 85],"bool"), list[2,8,46,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 46, 85].  Tensor sizes: [2, 0, 46, 85]
2025-03-05 15:22:56.987011 test begin: paddle.broadcast_to(Tensor([2, 0, 47, 121],"bool"), list[2,8,47,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 47, 121],"bool"), list[2,8,47,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 47, 121].  Tensor sizes: [2, 0, 47, 121]
2025-03-05 15:22:56.987537 test begin: paddle.broadcast_to(Tensor([2, 0, 47, 129],"bool"), list[2,8,47,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 47, 129],"bool"), list[2,8,47,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 47, 129].  Tensor sizes: [2, 0, 47, 129]
2025-03-05 15:22:56.988076 test begin: paddle.broadcast_to(Tensor([2, 0, 47, 161],"bool"), list[2,8,47,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 47, 161],"bool"), list[2,8,47,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 47, 161].  Tensor sizes: [2, 0, 47, 161]
2025-03-05 15:22:56.988605 test begin: paddle.broadcast_to(Tensor([2, 0, 47, 181],"bool"), list[2,8,47,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 47, 181],"bool"), list[2,8,47,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 47, 181].  Tensor sizes: [2, 0, 47, 181]
2025-03-05 15:22:56.989137 test begin: paddle.broadcast_to(Tensor([2, 0, 47, 41],"bool"), list[2,8,47,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 47, 41],"bool"), list[2,8,47,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 47, 41].  Tensor sizes: [2, 0, 47, 41]
2025-03-05 15:22:56.989663 test begin: paddle.broadcast_to(Tensor([2, 0, 47, 47],"bool"), list[2,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 47, 47],"bool"), list[2,8,47,47,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 47, 47].  Tensor sizes: [2, 0, 47, 47]
2025-03-05 15:22:56.990189 test begin: paddle.broadcast_to(Tensor([2, 0, 47, 57],"bool"), list[2,8,47,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 47, 57],"bool"), list[2,8,47,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 47, 57].  Tensor sizes: [2, 0, 47, 57]
2025-03-05 15:22:56.990721 test begin: paddle.broadcast_to(Tensor([2, 0, 47, 81],"bool"), list[2,8,47,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 47, 81],"bool"), list[2,8,47,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 47, 81].  Tensor sizes: [2, 0, 47, 81]
2025-03-05 15:22:56.991249 test begin: paddle.broadcast_to(Tensor([2, 0, 47, 85],"bool"), list[2,8,47,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 47, 85],"bool"), list[2,8,47,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 47, 85].  Tensor sizes: [2, 0, 47, 85]
2025-03-05 15:22:56.991778 test begin: paddle.broadcast_to(Tensor([2, 0, 48, 121],"bool"), list[2,8,48,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 48, 121],"bool"), list[2,8,48,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 48, 121].  Tensor sizes: [2, 0, 48, 121]
2025-03-05 15:22:56.992293 test begin: paddle.broadcast_to(Tensor([2, 0, 48, 129],"bool"), list[2,8,48,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 48, 129],"bool"), list[2,8,48,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 48, 129].  Tensor sizes: [2, 0, 48, 129]
2025-03-05 15:22:56.992870 test begin: paddle.broadcast_to(Tensor([2, 0, 48, 161],"bool"), list[2,8,48,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 48, 161],"bool"), list[2,8,48,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 48, 161].  Tensor sizes: [2, 0, 48, 161]
2025-03-05 15:22:56.993400 test begin: paddle.broadcast_to(Tensor([2, 0, 48, 181],"bool"), list[2,8,48,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 48, 181],"bool"), list[2,8,48,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 48, 181].  Tensor sizes: [2, 0, 48, 181]
2025-03-05 15:22:56.993931 test begin: paddle.broadcast_to(Tensor([2, 0, 48, 48],"bool"), list[2,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 48, 48],"bool"), list[2,8,48,48,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 48, 48].  Tensor sizes: [2, 0, 48, 48]
2025-03-05 15:22:56.994451 test begin: paddle.broadcast_to(Tensor([2, 0, 48, 57],"bool"), list[2,8,48,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 48, 57],"bool"), list[2,8,48,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 48, 57].  Tensor sizes: [2, 0, 48, 57]
2025-03-05 15:22:56.995023 test begin: paddle.broadcast_to(Tensor([2, 0, 48, 81],"bool"), list[2,8,48,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 48, 81],"bool"), list[2,8,48,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 48, 81].  Tensor sizes: [2, 0, 48, 81]
2025-03-05 15:22:56.995554 test begin: paddle.broadcast_to(Tensor([2, 0, 48, 85],"bool"), list[2,8,48,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 48, 85],"bool"), list[2,8,48,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 48, 85].  Tensor sizes: [2, 0, 48, 85]
2025-03-05 15:22:56.996093 test begin: paddle.broadcast_to(Tensor([2, 0, 49, 121],"bool"), list[2,8,49,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 49, 121],"bool"), list[2,8,49,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 49, 121].  Tensor sizes: [2, 0, 49, 121]
2025-03-05 15:22:56.996612 test begin: paddle.broadcast_to(Tensor([2, 0, 49, 129],"bool"), list[2,8,49,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 49, 129],"bool"), list[2,8,49,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 49, 129].  Tensor sizes: [2, 0, 49, 129]
2025-03-05 15:22:56.997142 test begin: paddle.broadcast_to(Tensor([2, 0, 49, 161],"bool"), list[2,8,49,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 49, 161],"bool"), list[2,8,49,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 49, 161].  Tensor sizes: [2, 0, 49, 161]
2025-03-05 15:22:56.997670 test begin: paddle.broadcast_to(Tensor([2, 0, 49, 181],"bool"), list[2,8,49,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 49, 181],"bool"), list[2,8,49,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 49, 181].  Tensor sizes: [2, 0, 49, 181]
2025-03-05 15:22:56.998185 test begin: paddle.broadcast_to(Tensor([2, 0, 49, 49],"bool"), list[2,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 49, 49],"bool"), list[2,8,49,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 49, 49].  Tensor sizes: [2, 0, 49, 49]
2025-03-05 15:22:56.998702 test begin: paddle.broadcast_to(Tensor([2, 0, 49, 57],"bool"), list[2,8,49,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 49, 57],"bool"), list[2,8,49,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 49, 57].  Tensor sizes: [2, 0, 49, 57]
2025-03-05 15:22:56.999222 test begin: paddle.broadcast_to(Tensor([2, 0, 49, 81],"bool"), list[2,8,49,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 49, 81],"bool"), list[2,8,49,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 49, 81].  Tensor sizes: [2, 0, 49, 81]
2025-03-05 15:22:56.999756 test begin: paddle.broadcast_to(Tensor([2, 0, 49, 85],"bool"), list[2,8,49,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 49, 85],"bool"), list[2,8,49,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 49, 85].  Tensor sizes: [2, 0, 49, 85]
2025-03-05 15:22:57.000293 test begin: paddle.broadcast_to(Tensor([2, 0, 4],"bool"), list[2,2,4,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 4],"bool"), list[2,2,4,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 2, 4].  Tensor sizes: [2, 0, 4]
2025-03-05 15:22:57.000815 test begin: paddle.broadcast_to(Tensor([2, 0, 4],"float32"), list[3,2,2,4,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 4],"float32"), list[3,2,2,4,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 2, 2, 4].  Tensor sizes: [2, 0, 4]
2025-03-05 15:22:57.001373 test begin: paddle.broadcast_to(Tensor([2, 0, 4],"float64"), tuple(2,3,4,), )

[torch error] paddle.broadcast_to(Tensor([2, 0, 4],"float64"), tuple(2,3,4,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 3, 4].  Tensor sizes: [2, 0, 4]
2025-03-05 15:22:57.001922 test begin: paddle.broadcast_to(Tensor([2, 0, 5, 121],"bool"), list[2,8,5,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 5, 121],"bool"), list[2,8,5,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 5, 121].  Tensor sizes: [2, 0, 5, 121]
2025-03-05 15:22:57.002466 test begin: paddle.broadcast_to(Tensor([2, 0, 5, 129],"bool"), list[2,8,5,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 5, 129],"bool"), list[2,8,5,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 5, 129].  Tensor sizes: [2, 0, 5, 129]
2025-03-05 15:22:57.003014 test begin: paddle.broadcast_to(Tensor([2, 0, 5, 161],"bool"), list[2,8,5,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 5, 161],"bool"), list[2,8,5,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 5, 161].  Tensor sizes: [2, 0, 5, 161]
2025-03-05 15:22:57.003549 test begin: paddle.broadcast_to(Tensor([2, 0, 5, 17],"bool"), list[2,8,5,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 5, 17],"bool"), list[2,8,5,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 5, 17].  Tensor sizes: [2, 0, 5, 17]
2025-03-05 15:22:57.004094 test begin: paddle.broadcast_to(Tensor([2, 0, 5, 181],"bool"), list[2,8,5,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 5, 181],"bool"), list[2,8,5,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 5, 181].  Tensor sizes: [2, 0, 5, 181]
2025-03-05 15:22:57.004607 test begin: paddle.broadcast_to(Tensor([2, 0, 5, 41],"bool"), list[2,8,5,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 5, 41],"bool"), list[2,8,5,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 5, 41].  Tensor sizes: [2, 0, 5, 41]
2025-03-05 15:22:57.005164 test begin: paddle.broadcast_to(Tensor([2, 0, 5, 57],"bool"), list[2,8,5,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 5, 57],"bool"), list[2,8,5,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 5, 57].  Tensor sizes: [2, 0, 5, 57]
2025-03-05 15:22:57.005705 test begin: paddle.broadcast_to(Tensor([2, 0, 5, 5],"bool"), list[2,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 5, 5],"bool"), list[2,8,5,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 5, 5].  Tensor sizes: [2, 0, 5, 5]
2025-03-05 15:22:57.006280 test begin: paddle.broadcast_to(Tensor([2, 0, 5, 81],"bool"), list[2,8,5,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 5, 81],"bool"), list[2,8,5,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 5, 81].  Tensor sizes: [2, 0, 5, 81]
2025-03-05 15:22:57.006828 test begin: paddle.broadcast_to(Tensor([2, 0, 5, 85],"bool"), list[2,8,5,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 5, 85],"bool"), list[2,8,5,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 5, 85].  Tensor sizes: [2, 0, 5, 85]
2025-03-05 15:22:57.007353 test begin: paddle.broadcast_to(Tensor([2, 0, 5, 9],"bool"), list[2,8,5,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 5, 9],"bool"), list[2,8,5,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 5, 9].  Tensor sizes: [2, 0, 5, 9]
2025-03-05 15:22:57.008136 test begin: paddle.broadcast_to(Tensor([2, 0, 50, 121],"bool"), list[2,8,50,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 50, 121],"bool"), list[2,8,50,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 50, 121].  Tensor sizes: [2, 0, 50, 121]
2025-03-05 15:22:57.008778 test begin: paddle.broadcast_to(Tensor([2, 0, 50, 129],"bool"), list[2,8,50,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 50, 129],"bool"), list[2,8,50,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 50, 129].  Tensor sizes: [2, 0, 50, 129]
2025-03-05 15:22:57.009388 test begin: paddle.broadcast_to(Tensor([2, 0, 50, 161],"bool"), list[2,8,50,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 50, 161],"bool"), list[2,8,50,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 50, 161].  Tensor sizes: [2, 0, 50, 161]
2025-03-05 15:22:57.010010 test begin: paddle.broadcast_to(Tensor([2, 0, 50, 181],"bool"), list[2,8,50,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 50, 181],"bool"), list[2,8,50,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 50, 181].  Tensor sizes: [2, 0, 50, 181]
2025-03-05 15:22:57.010622 test begin: paddle.broadcast_to(Tensor([2, 0, 50, 50],"bool"), list[2,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 50, 50],"bool"), list[2,8,50,50,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 50, 50].  Tensor sizes: [2, 0, 50, 50]
2025-03-05 15:22:57.011238 test begin: paddle.broadcast_to(Tensor([2, 0, 50, 57],"bool"), list[2,8,50,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 50, 57],"bool"), list[2,8,50,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 50, 57].  Tensor sizes: [2, 0, 50, 57]
2025-03-05 15:22:57.011849 test begin: paddle.broadcast_to(Tensor([2, 0, 50, 81],"bool"), list[2,8,50,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 50, 81],"bool"), list[2,8,50,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 50, 81].  Tensor sizes: [2, 0, 50, 81]
2025-03-05 15:22:57.012469 test begin: paddle.broadcast_to(Tensor([2, 0, 50, 85],"bool"), list[2,8,50,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 50, 85],"bool"), list[2,8,50,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 50, 85].  Tensor sizes: [2, 0, 50, 85]
2025-03-05 15:22:57.013075 test begin: paddle.broadcast_to(Tensor([2, 0, 51, 121],"bool"), list[2,8,51,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 51, 121],"bool"), list[2,8,51,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 51, 121].  Tensor sizes: [2, 0, 51, 121]
2025-03-05 15:22:57.013693 test begin: paddle.broadcast_to(Tensor([2, 0, 51, 129],"bool"), list[2,8,51,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 51, 129],"bool"), list[2,8,51,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 51, 129].  Tensor sizes: [2, 0, 51, 129]
2025-03-05 15:22:57.014306 test begin: paddle.broadcast_to(Tensor([2, 0, 51, 161],"bool"), list[2,8,51,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 51, 161],"bool"), list[2,8,51,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 51, 161].  Tensor sizes: [2, 0, 51, 161]
2025-03-05 15:22:57.014996 test begin: paddle.broadcast_to(Tensor([2, 0, 51, 181],"bool"), list[2,8,51,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 51, 181],"bool"), list[2,8,51,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 51, 181].  Tensor sizes: [2, 0, 51, 181]
2025-03-05 15:22:57.015658 test begin: paddle.broadcast_to(Tensor([2, 0, 51, 51],"bool"), list[2,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 51, 51],"bool"), list[2,8,51,51,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 51, 51].  Tensor sizes: [2, 0, 51, 51]
2025-03-05 15:22:57.016277 test begin: paddle.broadcast_to(Tensor([2, 0, 51, 57],"bool"), list[2,8,51,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 51, 57],"bool"), list[2,8,51,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 51, 57].  Tensor sizes: [2, 0, 51, 57]
2025-03-05 15:22:57.016918 test begin: paddle.broadcast_to(Tensor([2, 0, 51, 81],"bool"), list[2,8,51,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 51, 81],"bool"), list[2,8,51,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 51, 81].  Tensor sizes: [2, 0, 51, 81]
2025-03-05 15:22:57.017549 test begin: paddle.broadcast_to(Tensor([2, 0, 51, 85],"bool"), list[2,8,51,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 51, 85],"bool"), list[2,8,51,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 51, 85].  Tensor sizes: [2, 0, 51, 85]
2025-03-05 15:22:57.018168 test begin: paddle.broadcast_to(Tensor([2, 0, 52, 121],"bool"), list[2,8,52,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 52, 121],"bool"), list[2,8,52,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 52, 121].  Tensor sizes: [2, 0, 52, 121]
2025-03-05 15:22:57.018785 test begin: paddle.broadcast_to(Tensor([2, 0, 52, 129],"bool"), list[2,8,52,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 52, 129],"bool"), list[2,8,52,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 52, 129].  Tensor sizes: [2, 0, 52, 129]
2025-03-05 15:22:57.019427 test begin: paddle.broadcast_to(Tensor([2, 0, 52, 161],"bool"), list[2,8,52,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 52, 161],"bool"), list[2,8,52,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 52, 161].  Tensor sizes: [2, 0, 52, 161]
2025-03-05 15:22:57.020052 test begin: paddle.broadcast_to(Tensor([2, 0, 52, 181],"bool"), list[2,8,52,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 52, 181],"bool"), list[2,8,52,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 52, 181].  Tensor sizes: [2, 0, 52, 181]
2025-03-05 15:22:57.020673 test begin: paddle.broadcast_to(Tensor([2, 0, 52, 52],"bool"), list[2,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 52, 52],"bool"), list[2,8,52,52,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 52, 52].  Tensor sizes: [2, 0, 52, 52]
2025-03-05 15:22:57.021330 test begin: paddle.broadcast_to(Tensor([2, 0, 52, 57],"bool"), list[2,8,52,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 52, 57],"bool"), list[2,8,52,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 52, 57].  Tensor sizes: [2, 0, 52, 57]
2025-03-05 15:22:57.021972 test begin: paddle.broadcast_to(Tensor([2, 0, 52, 81],"bool"), list[2,8,52,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 52, 81],"bool"), list[2,8,52,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 52, 81].  Tensor sizes: [2, 0, 52, 81]
2025-03-05 15:22:57.022611 test begin: paddle.broadcast_to(Tensor([2, 0, 52, 85],"bool"), list[2,8,52,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 52, 85],"bool"), list[2,8,52,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 52, 85].  Tensor sizes: [2, 0, 52, 85]
2025-03-05 15:22:57.023236 test begin: paddle.broadcast_to(Tensor([2, 0, 53, 121],"bool"), list[2,8,53,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 53, 121],"bool"), list[2,8,53,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 53, 121].  Tensor sizes: [2, 0, 53, 121]
2025-03-05 15:22:57.023870 test begin: paddle.broadcast_to(Tensor([2, 0, 53, 129],"bool"), list[2,8,53,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 53, 129],"bool"), list[2,8,53,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 53, 129].  Tensor sizes: [2, 0, 53, 129]
2025-03-05 15:22:57.024511 test begin: paddle.broadcast_to(Tensor([2, 0, 53, 161],"bool"), list[2,8,53,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 53, 161],"bool"), list[2,8,53,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 53, 161].  Tensor sizes: [2, 0, 53, 161]
2025-03-05 15:22:57.025149 test begin: paddle.broadcast_to(Tensor([2, 0, 53, 181],"bool"), list[2,8,53,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 53, 181],"bool"), list[2,8,53,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 53, 181].  Tensor sizes: [2, 0, 53, 181]
2025-03-05 15:22:57.025769 test begin: paddle.broadcast_to(Tensor([2, 0, 53, 53],"bool"), list[2,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 53, 53],"bool"), list[2,8,53,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 53, 53].  Tensor sizes: [2, 0, 53, 53]
2025-03-05 15:22:57.026380 test begin: paddle.broadcast_to(Tensor([2, 0, 53, 57],"bool"), list[2,8,53,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 53, 57],"bool"), list[2,8,53,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 53, 57].  Tensor sizes: [2, 0, 53, 57]
2025-03-05 15:22:57.026998 test begin: paddle.broadcast_to(Tensor([2, 0, 53, 81],"bool"), list[2,8,53,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 53, 81],"bool"), list[2,8,53,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 53, 81].  Tensor sizes: [2, 0, 53, 81]
2025-03-05 15:22:57.027609 test begin: paddle.broadcast_to(Tensor([2, 0, 53, 85],"bool"), list[2,8,53,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 53, 85],"bool"), list[2,8,53,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 53, 85].  Tensor sizes: [2, 0, 53, 85]
2025-03-05 15:22:57.028240 test begin: paddle.broadcast_to(Tensor([2, 0, 54, 121],"bool"), list[2,8,54,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 54, 121],"bool"), list[2,8,54,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 54, 121].  Tensor sizes: [2, 0, 54, 121]
2025-03-05 15:22:57.028859 test begin: paddle.broadcast_to(Tensor([2, 0, 54, 129],"bool"), list[2,8,54,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 54, 129],"bool"), list[2,8,54,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 54, 129].  Tensor sizes: [2, 0, 54, 129]
2025-03-05 15:22:57.029460 test begin: paddle.broadcast_to(Tensor([2, 0, 54, 161],"bool"), list[2,8,54,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 54, 161],"bool"), list[2,8,54,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 54, 161].  Tensor sizes: [2, 0, 54, 161]
2025-03-05 15:22:57.030092 test begin: paddle.broadcast_to(Tensor([2, 0, 54, 181],"bool"), list[2,8,54,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 54, 181],"bool"), list[2,8,54,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 54, 181].  Tensor sizes: [2, 0, 54, 181]
2025-03-05 15:22:57.030717 test begin: paddle.broadcast_to(Tensor([2, 0, 54, 54],"bool"), list[2,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 54, 54],"bool"), list[2,8,54,54,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 54, 54].  Tensor sizes: [2, 0, 54, 54]
2025-03-05 15:22:57.031333 test begin: paddle.broadcast_to(Tensor([2, 0, 54, 57],"bool"), list[2,8,54,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 54, 57],"bool"), list[2,8,54,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 54, 57].  Tensor sizes: [2, 0, 54, 57]
2025-03-05 15:22:57.031952 test begin: paddle.broadcast_to(Tensor([2, 0, 54, 81],"bool"), list[2,8,54,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 54, 81],"bool"), list[2,8,54,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 54, 81].  Tensor sizes: [2, 0, 54, 81]
2025-03-05 15:22:57.032549 test begin: paddle.broadcast_to(Tensor([2, 0, 54, 85],"bool"), list[2,8,54,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 54, 85],"bool"), list[2,8,54,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 54, 85].  Tensor sizes: [2, 0, 54, 85]
2025-03-05 15:22:57.033158 test begin: paddle.broadcast_to(Tensor([2, 0, 55, 121],"bool"), list[2,8,55,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 55, 121],"bool"), list[2,8,55,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 55, 121].  Tensor sizes: [2, 0, 55, 121]
2025-03-05 15:22:57.033757 test begin: paddle.broadcast_to(Tensor([2, 0, 55, 129],"bool"), list[2,8,55,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 55, 129],"bool"), list[2,8,55,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 55, 129].  Tensor sizes: [2, 0, 55, 129]
2025-03-05 15:22:57.034362 test begin: paddle.broadcast_to(Tensor([2, 0, 55, 161],"bool"), list[2,8,55,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 55, 161],"bool"), list[2,8,55,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 55, 161].  Tensor sizes: [2, 0, 55, 161]
2025-03-05 15:22:57.034974 test begin: paddle.broadcast_to(Tensor([2, 0, 55, 181],"bool"), list[2,8,55,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 55, 181],"bool"), list[2,8,55,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 55, 181].  Tensor sizes: [2, 0, 55, 181]
2025-03-05 15:22:57.035578 test begin: paddle.broadcast_to(Tensor([2, 0, 55, 55],"bool"), list[2,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 55, 55],"bool"), list[2,8,55,55,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 55, 55].  Tensor sizes: [2, 0, 55, 55]
2025-03-05 15:22:57.039324 test begin: paddle.broadcast_to(Tensor([2, 0, 55, 57],"bool"), list[2,8,55,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 55, 57],"bool"), list[2,8,55,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 55, 57].  Tensor sizes: [2, 0, 55, 57]
2025-03-05 15:22:57.040573 test begin: paddle.broadcast_to(Tensor([2, 0, 55, 81],"bool"), list[2,8,55,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 55, 81],"bool"), list[2,8,55,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 55, 81].  Tensor sizes: [2, 0, 55, 81]
2025-03-05 15:22:57.041197 test begin: paddle.broadcast_to(Tensor([2, 0, 55, 85],"bool"), list[2,8,55,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 55, 85],"bool"), list[2,8,55,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 55, 85].  Tensor sizes: [2, 0, 55, 85]
2025-03-05 15:22:57.041836 test begin: paddle.broadcast_to(Tensor([2, 0, 56, 121],"bool"), list[2,8,56,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 56, 121],"bool"), list[2,8,56,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 56, 121].  Tensor sizes: [2, 0, 56, 121]
2025-03-05 15:22:57.042446 test begin: paddle.broadcast_to(Tensor([2, 0, 56, 129],"bool"), list[2,8,56,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 56, 129],"bool"), list[2,8,56,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 56, 129].  Tensor sizes: [2, 0, 56, 129]
2025-03-05 15:22:57.043068 test begin: paddle.broadcast_to(Tensor([2, 0, 56, 161],"bool"), list[2,8,56,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 56, 161],"bool"), list[2,8,56,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 56, 161].  Tensor sizes: [2, 0, 56, 161]
2025-03-05 15:22:57.043683 test begin: paddle.broadcast_to(Tensor([2, 0, 56, 181],"bool"), list[2,8,56,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 56, 181],"bool"), list[2,8,56,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 56, 181].  Tensor sizes: [2, 0, 56, 181]
2025-03-05 15:22:57.044292 test begin: paddle.broadcast_to(Tensor([2, 0, 56, 56],"bool"), list[2,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 56, 56],"bool"), list[2,8,56,56,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 56, 56].  Tensor sizes: [2, 0, 56, 56]
2025-03-05 15:22:57.045172 test begin: paddle.broadcast_to(Tensor([2, 0, 56, 57],"bool"), list[2,8,56,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 56, 57],"bool"), list[2,8,56,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 56, 57].  Tensor sizes: [2, 0, 56, 57]
2025-03-05 15:22:57.045778 test begin: paddle.broadcast_to(Tensor([2, 0, 56, 81],"bool"), list[2,8,56,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 56, 81],"bool"), list[2,8,56,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 56, 81].  Tensor sizes: [2, 0, 56, 81]
2025-03-05 15:22:57.046380 test begin: paddle.broadcast_to(Tensor([2, 0, 56, 85],"bool"), list[2,8,56,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 56, 85],"bool"), list[2,8,56,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 56, 85].  Tensor sizes: [2, 0, 56, 85]
2025-03-05 15:22:57.046938 test begin: paddle.broadcast_to(Tensor([2, 0, 57, 121],"bool"), list[2,8,57,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 57, 121],"bool"), list[2,8,57,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 57, 121].  Tensor sizes: [2, 0, 57, 121]
2025-03-05 15:22:57.047459 test begin: paddle.broadcast_to(Tensor([2, 0, 57, 129],"bool"), list[2,8,57,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 57, 129],"bool"), list[2,8,57,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 57, 129].  Tensor sizes: [2, 0, 57, 129]
2025-03-05 15:22:57.047993 test begin: paddle.broadcast_to(Tensor([2, 0, 57, 161],"bool"), list[2,8,57,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 57, 161],"bool"), list[2,8,57,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 57, 161].  Tensor sizes: [2, 0, 57, 161]
2025-03-05 15:22:57.048529 test begin: paddle.broadcast_to(Tensor([2, 0, 57, 181],"bool"), list[2,8,57,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 57, 181],"bool"), list[2,8,57,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 57, 181].  Tensor sizes: [2, 0, 57, 181]
2025-03-05 15:22:57.049086 test begin: paddle.broadcast_to(Tensor([2, 0, 57, 57],"bool"), list[2,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 57, 57],"bool"), list[2,8,57,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 57, 57].  Tensor sizes: [2, 0, 57, 57]
2025-03-05 15:22:57.049632 test begin: paddle.broadcast_to(Tensor([2, 0, 57, 81],"bool"), list[2,8,57,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 57, 81],"bool"), list[2,8,57,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 57, 81].  Tensor sizes: [2, 0, 57, 81]
2025-03-05 15:22:57.050164 test begin: paddle.broadcast_to(Tensor([2, 0, 57, 85],"bool"), list[2,8,57,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 57, 85],"bool"), list[2,8,57,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 57, 85].  Tensor sizes: [2, 0, 57, 85]
2025-03-05 15:22:57.050685 test begin: paddle.broadcast_to(Tensor([2, 0, 58, 121],"bool"), list[2,8,58,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 58, 121],"bool"), list[2,8,58,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 58, 121].  Tensor sizes: [2, 0, 58, 121]
2025-03-05 15:22:57.051195 test begin: paddle.broadcast_to(Tensor([2, 0, 58, 129],"bool"), list[2,8,58,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 58, 129],"bool"), list[2,8,58,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 58, 129].  Tensor sizes: [2, 0, 58, 129]
2025-03-05 15:22:57.051718 test begin: paddle.broadcast_to(Tensor([2, 0, 58, 161],"bool"), list[2,8,58,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 58, 161],"bool"), list[2,8,58,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 58, 161].  Tensor sizes: [2, 0, 58, 161]
2025-03-05 15:22:57.052228 test begin: paddle.broadcast_to(Tensor([2, 0, 58, 181],"bool"), list[2,8,58,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 58, 181],"bool"), list[2,8,58,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 58, 181].  Tensor sizes: [2, 0, 58, 181]
2025-03-05 15:22:57.052748 test begin: paddle.broadcast_to(Tensor([2, 0, 58, 57],"bool"), list[2,8,58,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 58, 57],"bool"), list[2,8,58,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 58, 57].  Tensor sizes: [2, 0, 58, 57]
2025-03-05 15:22:57.053267 test begin: paddle.broadcast_to(Tensor([2, 0, 58, 58],"bool"), list[2,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 58, 58],"bool"), list[2,8,58,58,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 58, 58].  Tensor sizes: [2, 0, 58, 58]
2025-03-05 15:22:57.053805 test begin: paddle.broadcast_to(Tensor([2, 0, 58, 81],"bool"), list[2,8,58,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 58, 81],"bool"), list[2,8,58,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 58, 81].  Tensor sizes: [2, 0, 58, 81]
2025-03-05 15:22:57.054319 test begin: paddle.broadcast_to(Tensor([2, 0, 58, 85],"bool"), list[2,8,58,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 58, 85],"bool"), list[2,8,58,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 58, 85].  Tensor sizes: [2, 0, 58, 85]
2025-03-05 15:22:57.054853 test begin: paddle.broadcast_to(Tensor([2, 0, 59, 121],"bool"), list[2,8,59,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 59, 121],"bool"), list[2,8,59,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 59, 121].  Tensor sizes: [2, 0, 59, 121]
2025-03-05 15:22:57.055381 test begin: paddle.broadcast_to(Tensor([2, 0, 59, 129],"bool"), list[2,8,59,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 59, 129],"bool"), list[2,8,59,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 59, 129].  Tensor sizes: [2, 0, 59, 129]
2025-03-05 15:22:57.055905 test begin: paddle.broadcast_to(Tensor([2, 0, 59, 161],"bool"), list[2,8,59,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 59, 161],"bool"), list[2,8,59,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 59, 161].  Tensor sizes: [2, 0, 59, 161]
2025-03-05 15:22:57.056428 test begin: paddle.broadcast_to(Tensor([2, 0, 59, 181],"bool"), list[2,8,59,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 59, 181],"bool"), list[2,8,59,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 59, 181].  Tensor sizes: [2, 0, 59, 181]
2025-03-05 15:22:57.056959 test begin: paddle.broadcast_to(Tensor([2, 0, 59, 57],"bool"), list[2,8,59,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 59, 57],"bool"), list[2,8,59,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 59, 57].  Tensor sizes: [2, 0, 59, 57]
2025-03-05 15:22:57.057470 test begin: paddle.broadcast_to(Tensor([2, 0, 59, 59],"bool"), list[2,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 59, 59],"bool"), list[2,8,59,59,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 59, 59].  Tensor sizes: [2, 0, 59, 59]
2025-03-05 15:22:57.058001 test begin: paddle.broadcast_to(Tensor([2, 0, 59, 81],"bool"), list[2,8,59,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 59, 81],"bool"), list[2,8,59,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 59, 81].  Tensor sizes: [2, 0, 59, 81]
2025-03-05 15:22:57.058508 test begin: paddle.broadcast_to(Tensor([2, 0, 59, 85],"bool"), list[2,8,59,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 59, 85],"bool"), list[2,8,59,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 59, 85].  Tensor sizes: [2, 0, 59, 85]
2025-03-05 15:22:57.059038 test begin: paddle.broadcast_to(Tensor([2, 0, 5],"int32"), list[2,4,5,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 5],"int32"), list[2,4,5,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 4, 5].  Tensor sizes: [2, 0, 5]
2025-03-05 15:22:57.059852 test begin: paddle.broadcast_to(Tensor([2, 0, 5],"int32"), list[6,2,4,5,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 5],"int32"), list[6,2,4,5,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 2, 4, 5].  Tensor sizes: [2, 0, 5]
2025-03-05 15:22:57.060405 test begin: paddle.broadcast_to(Tensor([2, 0, 6, 121],"bool"), list[2,8,6,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 6, 121],"bool"), list[2,8,6,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 6, 121].  Tensor sizes: [2, 0, 6, 121]
2025-03-05 15:22:57.060949 test begin: paddle.broadcast_to(Tensor([2, 0, 6, 129],"bool"), list[2,8,6,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 6, 129],"bool"), list[2,8,6,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 6, 129].  Tensor sizes: [2, 0, 6, 129]
2025-03-05 15:22:57.061473 test begin: paddle.broadcast_to(Tensor([2, 0, 6, 161],"bool"), list[2,8,6,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 6, 161],"bool"), list[2,8,6,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 6, 161].  Tensor sizes: [2, 0, 6, 161]
2025-03-05 15:22:57.062005 test begin: paddle.broadcast_to(Tensor([2, 0, 6, 17],"bool"), list[2,8,6,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 6, 17],"bool"), list[2,8,6,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 6, 17].  Tensor sizes: [2, 0, 6, 17]
2025-03-05 15:22:57.062523 test begin: paddle.broadcast_to(Tensor([2, 0, 6, 181],"bool"), list[2,8,6,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 6, 181],"bool"), list[2,8,6,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 6, 181].  Tensor sizes: [2, 0, 6, 181]
2025-03-05 15:22:57.063049 test begin: paddle.broadcast_to(Tensor([2, 0, 6, 41],"bool"), list[2,8,6,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 6, 41],"bool"), list[2,8,6,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 6, 41].  Tensor sizes: [2, 0, 6, 41]
2025-03-05 15:22:57.063563 test begin: paddle.broadcast_to(Tensor([2, 0, 6, 57],"bool"), list[2,8,6,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 6, 57],"bool"), list[2,8,6,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 6, 57].  Tensor sizes: [2, 0, 6, 57]
2025-03-05 15:22:57.064086 test begin: paddle.broadcast_to(Tensor([2, 0, 6, 6],"bool"), list[2,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 6, 6],"bool"), list[2,8,6,6,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 6, 6].  Tensor sizes: [2, 0, 6, 6]
2025-03-05 15:22:57.064608 test begin: paddle.broadcast_to(Tensor([2, 0, 6, 81],"bool"), list[2,8,6,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 6, 81],"bool"), list[2,8,6,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 6, 81].  Tensor sizes: [2, 0, 6, 81]
2025-03-05 15:22:57.065131 test begin: paddle.broadcast_to(Tensor([2, 0, 6, 85],"bool"), list[2,8,6,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 6, 85],"bool"), list[2,8,6,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 6, 85].  Tensor sizes: [2, 0, 6, 85]
2025-03-05 15:22:57.065666 test begin: paddle.broadcast_to(Tensor([2, 0, 6, 9],"bool"), list[2,8,6,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 6, 9],"bool"), list[2,8,6,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 6, 9].  Tensor sizes: [2, 0, 6, 9]
2025-03-05 15:22:57.066250 test begin: paddle.broadcast_to(Tensor([2, 0, 60, 121],"bool"), list[2,8,60,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 60, 121],"bool"), list[2,8,60,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 60, 121].  Tensor sizes: [2, 0, 60, 121]
2025-03-05 15:22:57.066815 test begin: paddle.broadcast_to(Tensor([2, 0, 60, 129],"bool"), list[2,8,60,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 60, 129],"bool"), list[2,8,60,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 60, 129].  Tensor sizes: [2, 0, 60, 129]
2025-03-05 15:22:57.067349 test begin: paddle.broadcast_to(Tensor([2, 0, 60, 161],"bool"), list[2,8,60,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 60, 161],"bool"), list[2,8,60,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 60, 161].  Tensor sizes: [2, 0, 60, 161]
2025-03-05 15:22:57.067882 test begin: paddle.broadcast_to(Tensor([2, 0, 60, 181],"bool"), list[2,8,60,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 60, 181],"bool"), list[2,8,60,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 60, 181].  Tensor sizes: [2, 0, 60, 181]
2025-03-05 15:22:57.068398 test begin: paddle.broadcast_to(Tensor([2, 0, 60, 57],"bool"), list[2,8,60,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 60, 57],"bool"), list[2,8,60,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 60, 57].  Tensor sizes: [2, 0, 60, 57]
2025-03-05 15:22:57.068956 test begin: paddle.broadcast_to(Tensor([2, 0, 60, 60],"bool"), list[2,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 60, 60],"bool"), list[2,8,60,60,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 60, 60].  Tensor sizes: [2, 0, 60, 60]
2025-03-05 15:22:57.069486 test begin: paddle.broadcast_to(Tensor([2, 0, 60, 81],"bool"), list[2,8,60,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 60, 81],"bool"), list[2,8,60,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 60, 81].  Tensor sizes: [2, 0, 60, 81]
2025-03-05 15:22:57.070020 test begin: paddle.broadcast_to(Tensor([2, 0, 60, 85],"bool"), list[2,8,60,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 60, 85],"bool"), list[2,8,60,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 60, 85].  Tensor sizes: [2, 0, 60, 85]
2025-03-05 15:22:57.070541 test begin: paddle.broadcast_to(Tensor([2, 0, 61, 121],"bool"), list[2,8,61,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 61, 121],"bool"), list[2,8,61,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 61, 121].  Tensor sizes: [2, 0, 61, 121]
2025-03-05 15:22:57.071061 test begin: paddle.broadcast_to(Tensor([2, 0, 61, 129],"bool"), list[2,8,61,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 61, 129],"bool"), list[2,8,61,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 61, 129].  Tensor sizes: [2, 0, 61, 129]
2025-03-05 15:22:57.071617 test begin: paddle.broadcast_to(Tensor([2, 0, 61, 161],"bool"), list[2,8,61,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 61, 161],"bool"), list[2,8,61,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 61, 161].  Tensor sizes: [2, 0, 61, 161]
2025-03-05 15:22:57.072168 test begin: paddle.broadcast_to(Tensor([2, 0, 61, 181],"bool"), list[2,8,61,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 61, 181],"bool"), list[2,8,61,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 61, 181].  Tensor sizes: [2, 0, 61, 181]
2025-03-05 15:22:57.072722 test begin: paddle.broadcast_to(Tensor([2, 0, 61, 57],"bool"), list[2,8,61,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 61, 57],"bool"), list[2,8,61,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 61, 57].  Tensor sizes: [2, 0, 61, 57]
2025-03-05 15:22:57.073268 test begin: paddle.broadcast_to(Tensor([2, 0, 61, 61],"bool"), list[2,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 61, 61],"bool"), list[2,8,61,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 61, 61].  Tensor sizes: [2, 0, 61, 61]
2025-03-05 15:22:57.073809 test begin: paddle.broadcast_to(Tensor([2, 0, 61, 81],"bool"), list[2,8,61,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 61, 81],"bool"), list[2,8,61,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 61, 81].  Tensor sizes: [2, 0, 61, 81]
2025-03-05 15:22:57.074330 test begin: paddle.broadcast_to(Tensor([2, 0, 61, 85],"bool"), list[2,8,61,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 61, 85],"bool"), list[2,8,61,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 61, 85].  Tensor sizes: [2, 0, 61, 85]
2025-03-05 15:22:57.074860 test begin: paddle.broadcast_to(Tensor([2, 0, 62, 121],"bool"), list[2,8,62,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 62, 121],"bool"), list[2,8,62,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 62, 121].  Tensor sizes: [2, 0, 62, 121]
2025-03-05 15:22:57.075423 test begin: paddle.broadcast_to(Tensor([2, 0, 62, 129],"bool"), list[2,8,62,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 62, 129],"bool"), list[2,8,62,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 62, 129].  Tensor sizes: [2, 0, 62, 129]
2025-03-05 15:22:57.075984 test begin: paddle.broadcast_to(Tensor([2, 0, 62, 161],"bool"), list[2,8,62,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 62, 161],"bool"), list[2,8,62,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 62, 161].  Tensor sizes: [2, 0, 62, 161]
2025-03-05 15:22:57.076532 test begin: paddle.broadcast_to(Tensor([2, 0, 62, 181],"bool"), list[2,8,62,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 62, 181],"bool"), list[2,8,62,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 62, 181].  Tensor sizes: [2, 0, 62, 181]
2025-03-05 15:22:57.077082 test begin: paddle.broadcast_to(Tensor([2, 0, 62, 57],"bool"), list[2,8,62,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 62, 57],"bool"), list[2,8,62,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 62, 57].  Tensor sizes: [2, 0, 62, 57]
2025-03-05 15:22:57.077640 test begin: paddle.broadcast_to(Tensor([2, 0, 62, 62],"bool"), list[2,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 62, 62],"bool"), list[2,8,62,62,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 62, 62].  Tensor sizes: [2, 0, 62, 62]
2025-03-05 15:22:57.078180 test begin: paddle.broadcast_to(Tensor([2, 0, 62, 81],"bool"), list[2,8,62,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 62, 81],"bool"), list[2,8,62,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 62, 81].  Tensor sizes: [2, 0, 62, 81]
2025-03-05 15:22:57.078714 test begin: paddle.broadcast_to(Tensor([2, 0, 62, 85],"bool"), list[2,8,62,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 62, 85],"bool"), list[2,8,62,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 62, 85].  Tensor sizes: [2, 0, 62, 85]
2025-03-05 15:22:57.079235 test begin: paddle.broadcast_to(Tensor([2, 0, 63, 121],"bool"), list[2,8,63,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 63, 121],"bool"), list[2,8,63,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 63, 121].  Tensor sizes: [2, 0, 63, 121]
2025-03-05 15:22:57.079800 test begin: paddle.broadcast_to(Tensor([2, 0, 63, 129],"bool"), list[2,8,63,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 63, 129],"bool"), list[2,8,63,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 63, 129].  Tensor sizes: [2, 0, 63, 129]
2025-03-05 15:22:57.080332 test begin: paddle.broadcast_to(Tensor([2, 0, 63, 161],"bool"), list[2,8,63,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 63, 161],"bool"), list[2,8,63,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 63, 161].  Tensor sizes: [2, 0, 63, 161]
2025-03-05 15:22:57.080853 test begin: paddle.broadcast_to(Tensor([2, 0, 63, 181],"bool"), list[2,8,63,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 63, 181],"bool"), list[2,8,63,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 63, 181].  Tensor sizes: [2, 0, 63, 181]
2025-03-05 15:22:57.081369 test begin: paddle.broadcast_to(Tensor([2, 0, 63, 57],"bool"), list[2,8,63,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 63, 57],"bool"), list[2,8,63,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 63, 57].  Tensor sizes: [2, 0, 63, 57]
2025-03-05 15:22:57.081920 test begin: paddle.broadcast_to(Tensor([2, 0, 63, 63],"bool"), list[2,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 63, 63],"bool"), list[2,8,63,63,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 63, 63].  Tensor sizes: [2, 0, 63, 63]
2025-03-05 15:22:57.082475 test begin: paddle.broadcast_to(Tensor([2, 0, 63, 81],"bool"), list[2,8,63,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 63, 81],"bool"), list[2,8,63,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 63, 81].  Tensor sizes: [2, 0, 63, 81]
2025-03-05 15:22:57.083026 test begin: paddle.broadcast_to(Tensor([2, 0, 63, 85],"bool"), list[2,8,63,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 63, 85],"bool"), list[2,8,63,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 63, 85].  Tensor sizes: [2, 0, 63, 85]
2025-03-05 15:22:57.083616 test begin: paddle.broadcast_to(Tensor([2, 0, 64, 121],"bool"), list[2,8,64,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 64, 121],"bool"), list[2,8,64,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 64, 121].  Tensor sizes: [2, 0, 64, 121]
2025-03-05 15:22:57.084165 test begin: paddle.broadcast_to(Tensor([2, 0, 64, 129],"bool"), list[2,8,64,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 64, 129],"bool"), list[2,8,64,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 64, 129].  Tensor sizes: [2, 0, 64, 129]
2025-03-05 15:22:57.084710 test begin: paddle.broadcast_to(Tensor([2, 0, 64, 161],"bool"), list[2,8,64,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 64, 161],"bool"), list[2,8,64,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 64, 161].  Tensor sizes: [2, 0, 64, 161]
2025-03-05 15:22:57.085231 test begin: paddle.broadcast_to(Tensor([2, 0, 64, 181],"bool"), list[2,8,64,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 64, 181],"bool"), list[2,8,64,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 64, 181].  Tensor sizes: [2, 0, 64, 181]
2025-03-05 15:22:57.085763 test begin: paddle.broadcast_to(Tensor([2, 0, 64, 57],"bool"), list[2,8,64,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 64, 57],"bool"), list[2,8,64,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 64, 57].  Tensor sizes: [2, 0, 64, 57]
2025-03-05 15:22:57.086273 test begin: paddle.broadcast_to(Tensor([2, 0, 64, 64],"bool"), list[2,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 64, 64],"bool"), list[2,8,64,64,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 64, 64].  Tensor sizes: [2, 0, 64, 64]
2025-03-05 15:22:57.086811 test begin: paddle.broadcast_to(Tensor([2, 0, 64, 81],"bool"), list[2,8,64,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 64, 81],"bool"), list[2,8,64,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 64, 81].  Tensor sizes: [2, 0, 64, 81]
2025-03-05 15:22:57.087334 test begin: paddle.broadcast_to(Tensor([2, 0, 64, 85],"bool"), list[2,8,64,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 64, 85],"bool"), list[2,8,64,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 64, 85].  Tensor sizes: [2, 0, 64, 85]
2025-03-05 15:22:57.087858 test begin: paddle.broadcast_to(Tensor([2, 0, 64],"bfloat16"), tuple(2,114,64,), )

[torch error] paddle.broadcast_to(Tensor([2, 0, 64],"bfloat16"), tuple(2,114,64,), ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 114, 64].  Tensor sizes: [2, 0, 64]
2025-03-05 15:22:57.088513 test begin: paddle.broadcast_to(Tensor([2, 0, 64],"int64"), tuple(2,14,64,), )

[torch error] paddle.broadcast_to(Tensor([2, 0, 64],"int64"), tuple(2,14,64,), ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 14, 64].  Tensor sizes: [2, 0, 64]
2025-03-05 15:22:57.089089 test begin: paddle.broadcast_to(Tensor([2, 0, 65, 121],"bool"), list[2,8,65,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 65, 121],"bool"), list[2,8,65,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 65, 121].  Tensor sizes: [2, 0, 65, 121]
2025-03-05 15:22:57.089617 test begin: paddle.broadcast_to(Tensor([2, 0, 65, 129],"bool"), list[2,8,65,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 65, 129],"bool"), list[2,8,65,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 65, 129].  Tensor sizes: [2, 0, 65, 129]
2025-03-05 15:22:57.090198 test begin: paddle.broadcast_to(Tensor([2, 0, 65, 161],"bool"), list[2,8,65,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 65, 161],"bool"), list[2,8,65,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 65, 161].  Tensor sizes: [2, 0, 65, 161]
2025-03-05 15:22:57.090755 test begin: paddle.broadcast_to(Tensor([2, 0, 65, 181],"bool"), list[2,8,65,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 65, 181],"bool"), list[2,8,65,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 65, 181].  Tensor sizes: [2, 0, 65, 181]
2025-03-05 15:22:57.091274 test begin: paddle.broadcast_to(Tensor([2, 0, 65, 57],"bool"), list[2,8,65,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 65, 57],"bool"), list[2,8,65,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 65, 57].  Tensor sizes: [2, 0, 65, 57]
2025-03-05 15:22:57.091801 test begin: paddle.broadcast_to(Tensor([2, 0, 65, 65],"bool"), list[2,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 65, 65],"bool"), list[2,8,65,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 65, 65].  Tensor sizes: [2, 0, 65, 65]
2025-03-05 15:22:57.092353 test begin: paddle.broadcast_to(Tensor([2, 0, 65, 81],"bool"), list[2,8,65,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 65, 81],"bool"), list[2,8,65,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 65, 81].  Tensor sizes: [2, 0, 65, 81]
2025-03-05 15:22:57.093299 test begin: paddle.broadcast_to(Tensor([2, 0, 65, 85],"bool"), list[2,8,65,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 65, 85],"bool"), list[2,8,65,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 65, 85].  Tensor sizes: [2, 0, 65, 85]
2025-03-05 15:22:57.093997 test begin: paddle.broadcast_to(Tensor([2, 0, 66, 121],"bool"), list[2,8,66,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 66, 121],"bool"), list[2,8,66,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 66, 121].  Tensor sizes: [2, 0, 66, 121]
2025-03-05 15:22:57.094627 test begin: paddle.broadcast_to(Tensor([2, 0, 66, 129],"bool"), list[2,8,66,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 66, 129],"bool"), list[2,8,66,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 66, 129].  Tensor sizes: [2, 0, 66, 129]
2025-03-05 15:22:57.095233 test begin: paddle.broadcast_to(Tensor([2, 0, 66, 161],"bool"), list[2,8,66,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 66, 161],"bool"), list[2,8,66,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 66, 161].  Tensor sizes: [2, 0, 66, 161]
2025-03-05 15:22:57.095844 test begin: paddle.broadcast_to(Tensor([2, 0, 66, 181],"bool"), list[2,8,66,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 66, 181],"bool"), list[2,8,66,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 66, 181].  Tensor sizes: [2, 0, 66, 181]
2025-03-05 15:22:57.096436 test begin: paddle.broadcast_to(Tensor([2, 0, 66, 57],"bool"), list[2,8,66,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 66, 57],"bool"), list[2,8,66,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 66, 57].  Tensor sizes: [2, 0, 66, 57]
2025-03-05 15:22:57.097092 test begin: paddle.broadcast_to(Tensor([2, 0, 66, 66],"bool"), list[2,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 66, 66],"bool"), list[2,8,66,66,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 66, 66].  Tensor sizes: [2, 0, 66, 66]
2025-03-05 15:22:57.097698 test begin: paddle.broadcast_to(Tensor([2, 0, 66, 81],"bool"), list[2,8,66,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 66, 81],"bool"), list[2,8,66,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 66, 81].  Tensor sizes: [2, 0, 66, 81]
2025-03-05 15:22:57.098298 test begin: paddle.broadcast_to(Tensor([2, 0, 66, 85],"bool"), list[2,8,66,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 66, 85],"bool"), list[2,8,66,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 66, 85].  Tensor sizes: [2, 0, 66, 85]
2025-03-05 15:22:57.098908 test begin: paddle.broadcast_to(Tensor([2, 0, 67, 121],"bool"), list[2,8,67,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 67, 121],"bool"), list[2,8,67,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 67, 121].  Tensor sizes: [2, 0, 67, 121]
2025-03-05 15:22:57.099534 test begin: paddle.broadcast_to(Tensor([2, 0, 67, 129],"bool"), list[2,8,67,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 67, 129],"bool"), list[2,8,67,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 67, 129].  Tensor sizes: [2, 0, 67, 129]
2025-03-05 15:22:57.100141 test begin: paddle.broadcast_to(Tensor([2, 0, 67, 161],"bool"), list[2,8,67,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 67, 161],"bool"), list[2,8,67,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 67, 161].  Tensor sizes: [2, 0, 67, 161]
2025-03-05 15:22:57.100753 test begin: paddle.broadcast_to(Tensor([2, 0, 67, 181],"bool"), list[2,8,67,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 67, 181],"bool"), list[2,8,67,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 67, 181].  Tensor sizes: [2, 0, 67, 181]
2025-03-05 15:22:57.101349 test begin: paddle.broadcast_to(Tensor([2, 0, 67, 67],"bool"), list[2,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 67, 67],"bool"), list[2,8,67,67,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 67, 67].  Tensor sizes: [2, 0, 67, 67]
2025-03-05 15:22:57.101948 test begin: paddle.broadcast_to(Tensor([2, 0, 67, 81],"bool"), list[2,8,67,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 67, 81],"bool"), list[2,8,67,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 67, 81].  Tensor sizes: [2, 0, 67, 81]
2025-03-05 15:22:57.102545 test begin: paddle.broadcast_to(Tensor([2, 0, 67, 85],"bool"), list[2,8,67,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 67, 85],"bool"), list[2,8,67,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 67, 85].  Tensor sizes: [2, 0, 67, 85]
2025-03-05 15:22:57.103139 test begin: paddle.broadcast_to(Tensor([2, 0, 68, 121],"bool"), list[2,8,68,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 68, 121],"bool"), list[2,8,68,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 68, 121].  Tensor sizes: [2, 0, 68, 121]
2025-03-05 15:22:57.103737 test begin: paddle.broadcast_to(Tensor([2, 0, 68, 129],"bool"), list[2,8,68,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 68, 129],"bool"), list[2,8,68,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 68, 129].  Tensor sizes: [2, 0, 68, 129]
2025-03-05 15:22:57.104339 test begin: paddle.broadcast_to(Tensor([2, 0, 68, 161],"bool"), list[2,8,68,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 68, 161],"bool"), list[2,8,68,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 68, 161].  Tensor sizes: [2, 0, 68, 161]
2025-03-05 15:22:57.104937 test begin: paddle.broadcast_to(Tensor([2, 0, 68, 181],"bool"), list[2,8,68,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 68, 181],"bool"), list[2,8,68,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 68, 181].  Tensor sizes: [2, 0, 68, 181]
2025-03-05 15:22:57.105530 test begin: paddle.broadcast_to(Tensor([2, 0, 68, 68],"bool"), list[2,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 68, 68],"bool"), list[2,8,68,68,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 68, 68].  Tensor sizes: [2, 0, 68, 68]
2025-03-05 15:22:57.106139 test begin: paddle.broadcast_to(Tensor([2, 0, 68, 81],"bool"), list[2,8,68,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 68, 81],"bool"), list[2,8,68,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 68, 81].  Tensor sizes: [2, 0, 68, 81]
2025-03-05 15:22:57.106743 test begin: paddle.broadcast_to(Tensor([2, 0, 68, 85],"bool"), list[2,8,68,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 68, 85],"bool"), list[2,8,68,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 68, 85].  Tensor sizes: [2, 0, 68, 85]
2025-03-05 15:22:57.107328 test begin: paddle.broadcast_to(Tensor([2, 0, 69, 121],"bool"), list[2,8,69,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 69, 121],"bool"), list[2,8,69,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 69, 121].  Tensor sizes: [2, 0, 69, 121]
2025-03-05 15:22:57.107928 test begin: paddle.broadcast_to(Tensor([2, 0, 69, 129],"bool"), list[2,8,69,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 69, 129],"bool"), list[2,8,69,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 69, 129].  Tensor sizes: [2, 0, 69, 129]
2025-03-05 15:22:57.108506 test begin: paddle.broadcast_to(Tensor([2, 0, 69, 161],"bool"), list[2,8,69,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 69, 161],"bool"), list[2,8,69,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 69, 161].  Tensor sizes: [2, 0, 69, 161]
2025-03-05 15:22:57.109107 test begin: paddle.broadcast_to(Tensor([2, 0, 69, 181],"bool"), list[2,8,69,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 69, 181],"bool"), list[2,8,69,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 69, 181].  Tensor sizes: [2, 0, 69, 181]
2025-03-05 15:22:57.109764 test begin: paddle.broadcast_to(Tensor([2, 0, 69, 69],"bool"), list[2,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 69, 69],"bool"), list[2,8,69,69,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 69, 69].  Tensor sizes: [2, 0, 69, 69]
2025-03-05 15:22:57.110349 test begin: paddle.broadcast_to(Tensor([2, 0, 69, 81],"bool"), list[2,8,69,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 69, 81],"bool"), list[2,8,69,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 69, 81].  Tensor sizes: [2, 0, 69, 81]
2025-03-05 15:22:57.110948 test begin: paddle.broadcast_to(Tensor([2, 0, 69, 85],"bool"), list[2,8,69,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 69, 85],"bool"), list[2,8,69,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 69, 85].  Tensor sizes: [2, 0, 69, 85]
2025-03-05 15:22:57.111535 test begin: paddle.broadcast_to(Tensor([2, 0, 7, 121],"bool"), list[2,8,7,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 7, 121],"bool"), list[2,8,7,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 7, 121].  Tensor sizes: [2, 0, 7, 121]
2025-03-05 15:22:57.112134 test begin: paddle.broadcast_to(Tensor([2, 0, 7, 129],"bool"), list[2,8,7,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 7, 129],"bool"), list[2,8,7,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 7, 129].  Tensor sizes: [2, 0, 7, 129]
2025-03-05 15:22:57.112910 test begin: paddle.broadcast_to(Tensor([2, 0, 7, 161],"bool"), list[2,8,7,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 7, 161],"bool"), list[2,8,7,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 7, 161].  Tensor sizes: [2, 0, 7, 161]
2025-03-05 15:22:57.113498 test begin: paddle.broadcast_to(Tensor([2, 0, 7, 17],"bool"), list[2,8,7,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 7, 17],"bool"), list[2,8,7,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 7, 17].  Tensor sizes: [2, 0, 7, 17]
2025-03-05 15:22:57.114044 test begin: paddle.broadcast_to(Tensor([2, 0, 7, 181],"bool"), list[2,8,7,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 7, 181],"bool"), list[2,8,7,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 7, 181].  Tensor sizes: [2, 0, 7, 181]
2025-03-05 15:22:57.114570 test begin: paddle.broadcast_to(Tensor([2, 0, 7, 41],"bool"), list[2,8,7,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 7, 41],"bool"), list[2,8,7,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 7, 41].  Tensor sizes: [2, 0, 7, 41]
2025-03-05 15:22:57.115109 test begin: paddle.broadcast_to(Tensor([2, 0, 7, 57],"bool"), list[2,8,7,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 7, 57],"bool"), list[2,8,7,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 7, 57].  Tensor sizes: [2, 0, 7, 57]
2025-03-05 15:22:57.115653 test begin: paddle.broadcast_to(Tensor([2, 0, 7, 7],"bool"), list[2,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 7, 7],"bool"), list[2,8,7,7,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 7, 7].  Tensor sizes: [2, 0, 7, 7]
2025-03-05 15:22:57.119745 test begin: paddle.broadcast_to(Tensor([2, 0, 7, 81],"bool"), list[2,8,7,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 7, 81],"bool"), list[2,8,7,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 7, 81].  Tensor sizes: [2, 0, 7, 81]
2025-03-05 15:22:57.120925 test begin: paddle.broadcast_to(Tensor([2, 0, 7, 85],"bool"), list[2,8,7,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 7, 85],"bool"), list[2,8,7,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 7, 85].  Tensor sizes: [2, 0, 7, 85]
2025-03-05 15:22:57.121462 test begin: paddle.broadcast_to(Tensor([2, 0, 7, 9],"bool"), list[2,8,7,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 7, 9],"bool"), list[2,8,7,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 7, 9].  Tensor sizes: [2, 0, 7, 9]
2025-03-05 15:22:57.121985 test begin: paddle.broadcast_to(Tensor([2, 0, 70, 121],"bool"), list[2,8,70,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 70, 121],"bool"), list[2,8,70,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 70, 121].  Tensor sizes: [2, 0, 70, 121]
2025-03-05 15:22:57.122971 test begin: paddle.broadcast_to(Tensor([2, 0, 70, 129],"bool"), list[2,8,70,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 70, 129],"bool"), list[2,8,70,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 70, 129].  Tensor sizes: [2, 0, 70, 129]
2025-03-05 15:22:57.123753 test begin: paddle.broadcast_to(Tensor([2, 0, 70, 161],"bool"), list[2,8,70,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 70, 161],"bool"), list[2,8,70,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 70, 161].  Tensor sizes: [2, 0, 70, 161]
2025-03-05 15:22:57.124339 test begin: paddle.broadcast_to(Tensor([2, 0, 70, 181],"bool"), list[2,8,70,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 70, 181],"bool"), list[2,8,70,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 70, 181].  Tensor sizes: [2, 0, 70, 181]
2025-03-05 15:22:57.124890 test begin: paddle.broadcast_to(Tensor([2, 0, 70, 70],"bool"), list[2,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 70, 70],"bool"), list[2,8,70,70,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 70, 70].  Tensor sizes: [2, 0, 70, 70]
2025-03-05 15:22:57.125420 test begin: paddle.broadcast_to(Tensor([2, 0, 70, 81],"bool"), list[2,8,70,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 70, 81],"bool"), list[2,8,70,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 70, 81].  Tensor sizes: [2, 0, 70, 81]
2025-03-05 15:22:57.125953 test begin: paddle.broadcast_to(Tensor([2, 0, 70, 85],"bool"), list[2,8,70,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 70, 85],"bool"), list[2,8,70,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 70, 85].  Tensor sizes: [2, 0, 70, 85]
2025-03-05 15:22:57.126473 test begin: paddle.broadcast_to(Tensor([2, 0, 71, 121],"bool"), list[2,8,71,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 71, 121],"bool"), list[2,8,71,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 71, 121].  Tensor sizes: [2, 0, 71, 121]
2025-03-05 15:22:57.126997 test begin: paddle.broadcast_to(Tensor([2, 0, 71, 129],"bool"), list[2,8,71,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 71, 129],"bool"), list[2,8,71,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 71, 129].  Tensor sizes: [2, 0, 71, 129]
2025-03-05 15:22:57.127506 test begin: paddle.broadcast_to(Tensor([2, 0, 71, 161],"bool"), list[2,8,71,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 71, 161],"bool"), list[2,8,71,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 71, 161].  Tensor sizes: [2, 0, 71, 161]
2025-03-05 15:22:57.128026 test begin: paddle.broadcast_to(Tensor([2, 0, 71, 181],"bool"), list[2,8,71,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 71, 181],"bool"), list[2,8,71,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 71, 181].  Tensor sizes: [2, 0, 71, 181]
2025-03-05 15:22:57.128526 test begin: paddle.broadcast_to(Tensor([2, 0, 71, 71],"bool"), list[2,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 71, 71],"bool"), list[2,8,71,71,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 71, 71].  Tensor sizes: [2, 0, 71, 71]
2025-03-05 15:22:57.129043 test begin: paddle.broadcast_to(Tensor([2, 0, 71, 81],"bool"), list[2,8,71,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 71, 81],"bool"), list[2,8,71,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 71, 81].  Tensor sizes: [2, 0, 71, 81]
2025-03-05 15:22:57.129556 test begin: paddle.broadcast_to(Tensor([2, 0, 71, 85],"bool"), list[2,8,71,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 71, 85],"bool"), list[2,8,71,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 71, 85].  Tensor sizes: [2, 0, 71, 85]
2025-03-05 15:22:57.130128 test begin: paddle.broadcast_to(Tensor([2, 0, 72, 121],"bool"), list[2,8,72,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 72, 121],"bool"), list[2,8,72,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 72, 121].  Tensor sizes: [2, 0, 72, 121]
2025-03-05 15:22:57.130664 test begin: paddle.broadcast_to(Tensor([2, 0, 72, 129],"bool"), list[2,8,72,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 72, 129],"bool"), list[2,8,72,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 72, 129].  Tensor sizes: [2, 0, 72, 129]
2025-03-05 15:22:57.131190 test begin: paddle.broadcast_to(Tensor([2, 0, 72, 161],"bool"), list[2,8,72,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 72, 161],"bool"), list[2,8,72,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 72, 161].  Tensor sizes: [2, 0, 72, 161]
2025-03-05 15:22:57.131714 test begin: paddle.broadcast_to(Tensor([2, 0, 72, 181],"bool"), list[2,8,72,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 72, 181],"bool"), list[2,8,72,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 72, 181].  Tensor sizes: [2, 0, 72, 181]
2025-03-05 15:22:57.132239 test begin: paddle.broadcast_to(Tensor([2, 0, 72, 72],"bool"), list[2,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 72, 72],"bool"), list[2,8,72,72,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 72, 72].  Tensor sizes: [2, 0, 72, 72]
2025-03-05 15:22:57.132768 test begin: paddle.broadcast_to(Tensor([2, 0, 72, 81],"bool"), list[2,8,72,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 72, 81],"bool"), list[2,8,72,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 72, 81].  Tensor sizes: [2, 0, 72, 81]
2025-03-05 15:22:57.133292 test begin: paddle.broadcast_to(Tensor([2, 0, 72, 85],"bool"), list[2,8,72,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 72, 85],"bool"), list[2,8,72,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 72, 85].  Tensor sizes: [2, 0, 72, 85]
2025-03-05 15:22:57.133821 test begin: paddle.broadcast_to(Tensor([2, 0, 73, 121],"bool"), list[2,8,73,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 73, 121],"bool"), list[2,8,73,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 73, 121].  Tensor sizes: [2, 0, 73, 121]
2025-03-05 15:22:57.134341 test begin: paddle.broadcast_to(Tensor([2, 0, 73, 129],"bool"), list[2,8,73,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 73, 129],"bool"), list[2,8,73,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 73, 129].  Tensor sizes: [2, 0, 73, 129]
2025-03-05 15:22:57.134863 test begin: paddle.broadcast_to(Tensor([2, 0, 73, 161],"bool"), list[2,8,73,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 73, 161],"bool"), list[2,8,73,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 73, 161].  Tensor sizes: [2, 0, 73, 161]
2025-03-05 15:22:57.135454 test begin: paddle.broadcast_to(Tensor([2, 0, 73, 181],"bool"), list[2,8,73,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 73, 181],"bool"), list[2,8,73,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 73, 181].  Tensor sizes: [2, 0, 73, 181]
2025-03-05 15:22:57.136212 test begin: paddle.broadcast_to(Tensor([2, 0, 73, 73],"bool"), list[2,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 73, 73],"bool"), list[2,8,73,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 73, 73].  Tensor sizes: [2, 0, 73, 73]
2025-03-05 15:22:57.136791 test begin: paddle.broadcast_to(Tensor([2, 0, 73, 81],"bool"), list[2,8,73,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 73, 81],"bool"), list[2,8,73,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 73, 81].  Tensor sizes: [2, 0, 73, 81]
2025-03-05 15:22:57.137321 test begin: paddle.broadcast_to(Tensor([2, 0, 73, 85],"bool"), list[2,8,73,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 73, 85],"bool"), list[2,8,73,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 73, 85].  Tensor sizes: [2, 0, 73, 85]
2025-03-05 15:22:57.137860 test begin: paddle.broadcast_to(Tensor([2, 0, 74, 121],"bool"), list[2,8,74,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 74, 121],"bool"), list[2,8,74,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 74, 121].  Tensor sizes: [2, 0, 74, 121]
2025-03-05 15:22:57.138384 test begin: paddle.broadcast_to(Tensor([2, 0, 74, 129],"bool"), list[2,8,74,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 74, 129],"bool"), list[2,8,74,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 74, 129].  Tensor sizes: [2, 0, 74, 129]
2025-03-05 15:22:57.138903 test begin: paddle.broadcast_to(Tensor([2, 0, 74, 161],"bool"), list[2,8,74,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 74, 161],"bool"), list[2,8,74,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 74, 161].  Tensor sizes: [2, 0, 74, 161]
2025-03-05 15:22:57.139418 test begin: paddle.broadcast_to(Tensor([2, 0, 74, 181],"bool"), list[2,8,74,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 74, 181],"bool"), list[2,8,74,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 74, 181].  Tensor sizes: [2, 0, 74, 181]
2025-03-05 15:22:57.139935 test begin: paddle.broadcast_to(Tensor([2, 0, 74, 74],"bool"), list[2,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 74, 74],"bool"), list[2,8,74,74,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 74, 74].  Tensor sizes: [2, 0, 74, 74]
2025-03-05 15:22:57.140443 test begin: paddle.broadcast_to(Tensor([2, 0, 74, 81],"bool"), list[2,8,74,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 74, 81],"bool"), list[2,8,74,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 74, 81].  Tensor sizes: [2, 0, 74, 81]
2025-03-05 15:22:57.140956 test begin: paddle.broadcast_to(Tensor([2, 0, 74, 85],"bool"), list[2,8,74,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 74, 85],"bool"), list[2,8,74,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 74, 85].  Tensor sizes: [2, 0, 74, 85]
2025-03-05 15:22:57.141467 test begin: paddle.broadcast_to(Tensor([2, 0, 75, 121],"bool"), list[2,8,75,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 75, 121],"bool"), list[2,8,75,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 75, 121].  Tensor sizes: [2, 0, 75, 121]
2025-03-05 15:22:57.141981 test begin: paddle.broadcast_to(Tensor([2, 0, 75, 129],"bool"), list[2,8,75,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 75, 129],"bool"), list[2,8,75,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 75, 129].  Tensor sizes: [2, 0, 75, 129]
2025-03-05 15:22:57.142510 test begin: paddle.broadcast_to(Tensor([2, 0, 75, 161],"bool"), list[2,8,75,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 75, 161],"bool"), list[2,8,75,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 75, 161].  Tensor sizes: [2, 0, 75, 161]
2025-03-05 15:22:57.143035 test begin: paddle.broadcast_to(Tensor([2, 0, 75, 181],"bool"), list[2,8,75,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 75, 181],"bool"), list[2,8,75,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 75, 181].  Tensor sizes: [2, 0, 75, 181]
2025-03-05 15:22:57.143543 test begin: paddle.broadcast_to(Tensor([2, 0, 75, 75],"bool"), list[2,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 75, 75],"bool"), list[2,8,75,75,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 75, 75].  Tensor sizes: [2, 0, 75, 75]
2025-03-05 15:22:57.144062 test begin: paddle.broadcast_to(Tensor([2, 0, 75, 81],"bool"), list[2,8,75,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 75, 81],"bool"), list[2,8,75,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 75, 81].  Tensor sizes: [2, 0, 75, 81]
2025-03-05 15:22:57.144579 test begin: paddle.broadcast_to(Tensor([2, 0, 75, 85],"bool"), list[2,8,75,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 75, 85],"bool"), list[2,8,75,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 75, 85].  Tensor sizes: [2, 0, 75, 85]
2025-03-05 15:22:57.145118 test begin: paddle.broadcast_to(Tensor([2, 0, 76, 121],"bool"), list[2,8,76,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 76, 121],"bool"), list[2,8,76,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 76, 121].  Tensor sizes: [2, 0, 76, 121]
2025-03-05 15:22:57.145665 test begin: paddle.broadcast_to(Tensor([2, 0, 76, 129],"bool"), list[2,8,76,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 76, 129],"bool"), list[2,8,76,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 76, 129].  Tensor sizes: [2, 0, 76, 129]
2025-03-05 15:22:57.146197 test begin: paddle.broadcast_to(Tensor([2, 0, 76, 161],"bool"), list[2,8,76,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 76, 161],"bool"), list[2,8,76,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 76, 161].  Tensor sizes: [2, 0, 76, 161]
2025-03-05 15:22:57.146726 test begin: paddle.broadcast_to(Tensor([2, 0, 76, 181],"bool"), list[2,8,76,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 76, 181],"bool"), list[2,8,76,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 76, 181].  Tensor sizes: [2, 0, 76, 181]
2025-03-05 15:22:57.147281 test begin: paddle.broadcast_to(Tensor([2, 0, 76, 76],"bool"), list[2,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 76, 76],"bool"), list[2,8,76,76,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 76, 76].  Tensor sizes: [2, 0, 76, 76]
2025-03-05 15:22:57.147838 test begin: paddle.broadcast_to(Tensor([2, 0, 76, 81],"bool"), list[2,8,76,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 76, 81],"bool"), list[2,8,76,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 76, 81].  Tensor sizes: [2, 0, 76, 81]
2025-03-05 15:22:57.148370 test begin: paddle.broadcast_to(Tensor([2, 0, 76, 85],"bool"), list[2,8,76,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 76, 85],"bool"), list[2,8,76,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 76, 85].  Tensor sizes: [2, 0, 76, 85]
2025-03-05 15:22:57.148906 test begin: paddle.broadcast_to(Tensor([2, 0, 768],"bfloat16"), tuple(2,302,768,), )

[torch error] paddle.broadcast_to(Tensor([2, 0, 768],"bfloat16"), tuple(2,302,768,), ) 
 The expanded size of the tensor (302) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 302, 768].  Tensor sizes: [2, 0, 768]
2025-03-05 15:22:57.149463 test begin: paddle.broadcast_to(Tensor([2, 0, 768],"int64"), tuple(2,14,768,), )

[torch error] paddle.broadcast_to(Tensor([2, 0, 768],"int64"), tuple(2,14,768,), ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 14, 768].  Tensor sizes: [2, 0, 768]
2025-03-05 15:22:57.150070 test begin: paddle.broadcast_to(Tensor([2, 0, 77, 121],"bool"), list[2,8,77,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 77, 121],"bool"), list[2,8,77,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 77, 121].  Tensor sizes: [2, 0, 77, 121]
2025-03-05 15:22:57.150623 test begin: paddle.broadcast_to(Tensor([2, 0, 77, 129],"bool"), list[2,8,77,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 77, 129],"bool"), list[2,8,77,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 77, 129].  Tensor sizes: [2, 0, 77, 129]
2025-03-05 15:22:57.151166 test begin: paddle.broadcast_to(Tensor([2, 0, 77, 161],"bool"), list[2,8,77,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 77, 161],"bool"), list[2,8,77,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 77, 161].  Tensor sizes: [2, 0, 77, 161]
2025-03-05 15:22:57.151713 test begin: paddle.broadcast_to(Tensor([2, 0, 77, 181],"bool"), list[2,8,77,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 77, 181],"bool"), list[2,8,77,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 77, 181].  Tensor sizes: [2, 0, 77, 181]
2025-03-05 15:22:57.152314 test begin: paddle.broadcast_to(Tensor([2, 0, 77, 77],"bool"), list[2,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 77, 77],"bool"), list[2,8,77,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 77, 77].  Tensor sizes: [2, 0, 77, 77]
2025-03-05 15:22:57.153269 test begin: paddle.broadcast_to(Tensor([2, 0, 77, 81],"bool"), list[2,8,77,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 77, 81],"bool"), list[2,8,77,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 77, 81].  Tensor sizes: [2, 0, 77, 81]
2025-03-05 15:22:57.153960 test begin: paddle.broadcast_to(Tensor([2, 0, 77, 85],"bool"), list[2,8,77,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 77, 85],"bool"), list[2,8,77,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 77, 85].  Tensor sizes: [2, 0, 77, 85]
2025-03-05 15:22:57.154548 test begin: paddle.broadcast_to(Tensor([2, 0, 78, 121],"bool"), list[2,8,78,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 78, 121],"bool"), list[2,8,78,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 78, 121].  Tensor sizes: [2, 0, 78, 121]
2025-03-05 15:22:57.155107 test begin: paddle.broadcast_to(Tensor([2, 0, 78, 129],"bool"), list[2,8,78,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 78, 129],"bool"), list[2,8,78,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 78, 129].  Tensor sizes: [2, 0, 78, 129]
2025-03-05 15:22:57.155668 test begin: paddle.broadcast_to(Tensor([2, 0, 78, 161],"bool"), list[2,8,78,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 78, 161],"bool"), list[2,8,78,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 78, 161].  Tensor sizes: [2, 0, 78, 161]
2025-03-05 15:22:57.156203 test begin: paddle.broadcast_to(Tensor([2, 0, 78, 181],"bool"), list[2,8,78,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 78, 181],"bool"), list[2,8,78,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 78, 181].  Tensor sizes: [2, 0, 78, 181]
2025-03-05 15:22:57.156728 test begin: paddle.broadcast_to(Tensor([2, 0, 78, 78],"bool"), list[2,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 78, 78],"bool"), list[2,8,78,78,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 78, 78].  Tensor sizes: [2, 0, 78, 78]
2025-03-05 15:22:57.157266 test begin: paddle.broadcast_to(Tensor([2, 0, 78, 81],"bool"), list[2,8,78,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 78, 81],"bool"), list[2,8,78,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 78, 81].  Tensor sizes: [2, 0, 78, 81]
2025-03-05 15:22:57.157801 test begin: paddle.broadcast_to(Tensor([2, 0, 78, 85],"bool"), list[2,8,78,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 78, 85],"bool"), list[2,8,78,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 78, 85].  Tensor sizes: [2, 0, 78, 85]
2025-03-05 15:22:57.158367 test begin: paddle.broadcast_to(Tensor([2, 0, 79, 121],"bool"), list[2,8,79,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 79, 121],"bool"), list[2,8,79,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 79, 121].  Tensor sizes: [2, 0, 79, 121]
2025-03-05 15:22:57.158925 test begin: paddle.broadcast_to(Tensor([2, 0, 79, 129],"bool"), list[2,8,79,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 79, 129],"bool"), list[2,8,79,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 79, 129].  Tensor sizes: [2, 0, 79, 129]
2025-03-05 15:22:57.159613 test begin: paddle.broadcast_to(Tensor([2, 0, 79, 161],"bool"), list[2,8,79,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 79, 161],"bool"), list[2,8,79,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 79, 161].  Tensor sizes: [2, 0, 79, 161]
2025-03-05 15:22:57.160249 test begin: paddle.broadcast_to(Tensor([2, 0, 79, 181],"bool"), list[2,8,79,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 79, 181],"bool"), list[2,8,79,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 79, 181].  Tensor sizes: [2, 0, 79, 181]
2025-03-05 15:22:57.160855 test begin: paddle.broadcast_to(Tensor([2, 0, 79, 79],"bool"), list[2,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 79, 79],"bool"), list[2,8,79,79,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 79, 79].  Tensor sizes: [2, 0, 79, 79]
2025-03-05 15:22:57.161468 test begin: paddle.broadcast_to(Tensor([2, 0, 79, 81],"bool"), list[2,8,79,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 79, 81],"bool"), list[2,8,79,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 79, 81].  Tensor sizes: [2, 0, 79, 81]
2025-03-05 15:22:57.162061 test begin: paddle.broadcast_to(Tensor([2, 0, 79, 85],"bool"), list[2,8,79,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 79, 85],"bool"), list[2,8,79,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 79, 85].  Tensor sizes: [2, 0, 79, 85]
2025-03-05 15:22:57.162618 test begin: paddle.broadcast_to(Tensor([2, 0, 8, 121],"bool"), list[2,8,8,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 8, 121],"bool"), list[2,8,8,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 8, 121].  Tensor sizes: [2, 0, 8, 121]
2025-03-05 15:22:57.163295 test begin: paddle.broadcast_to(Tensor([2, 0, 8, 129],"bool"), list[2,8,8,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 8, 129],"bool"), list[2,8,8,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 8, 129].  Tensor sizes: [2, 0, 8, 129]
2025-03-05 15:22:57.163898 test begin: paddle.broadcast_to(Tensor([2, 0, 8, 161],"bool"), list[2,8,8,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 8, 161],"bool"), list[2,8,8,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 8, 161].  Tensor sizes: [2, 0, 8, 161]
2025-03-05 15:22:57.164440 test begin: paddle.broadcast_to(Tensor([2, 0, 8, 17],"bool"), list[2,8,8,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 8, 17],"bool"), list[2,8,8,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 8, 17].  Tensor sizes: [2, 0, 8, 17]
2025-03-05 15:22:57.165106 test begin: paddle.broadcast_to(Tensor([2, 0, 8, 181],"bool"), list[2,8,8,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 8, 181],"bool"), list[2,8,8,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 8, 181].  Tensor sizes: [2, 0, 8, 181]
2025-03-05 15:22:57.165660 test begin: paddle.broadcast_to(Tensor([2, 0, 8, 41],"bool"), list[2,8,8,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 8, 41],"bool"), list[2,8,8,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 8, 41].  Tensor sizes: [2, 0, 8, 41]
2025-03-05 15:22:57.166182 test begin: paddle.broadcast_to(Tensor([2, 0, 8, 57],"bool"), list[2,8,8,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 8, 57],"bool"), list[2,8,8,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 8, 57].  Tensor sizes: [2, 0, 8, 57]
2025-03-05 15:22:57.166700 test begin: paddle.broadcast_to(Tensor([2, 0, 8, 81],"bool"), list[2,8,8,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 8, 81],"bool"), list[2,8,8,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 8, 81].  Tensor sizes: [2, 0, 8, 81]
2025-03-05 15:22:57.167211 test begin: paddle.broadcast_to(Tensor([2, 0, 8, 85],"bool"), list[2,8,8,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 8, 85],"bool"), list[2,8,8,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 8, 85].  Tensor sizes: [2, 0, 8, 85]
2025-03-05 15:22:57.167729 test begin: paddle.broadcast_to(Tensor([2, 0, 8, 8],"bool"), list[2,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 8, 8],"bool"), list[2,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 8, 8].  Tensor sizes: [2, 0, 8, 8]
2025-03-05 15:22:57.168240 test begin: paddle.broadcast_to(Tensor([2, 0, 8, 9],"bool"), list[2,8,8,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 8, 9],"bool"), list[2,8,8,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 8, 9].  Tensor sizes: [2, 0, 8, 9]
2025-03-05 15:22:57.168784 test begin: paddle.broadcast_to(Tensor([2, 0, 80, 121],"bool"), list[2,8,80,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 80, 121],"bool"), list[2,8,80,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 80, 121].  Tensor sizes: [2, 0, 80, 121]
2025-03-05 15:22:57.169444 test begin: paddle.broadcast_to(Tensor([2, 0, 80, 129],"bool"), list[2,8,80,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 80, 129],"bool"), list[2,8,80,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 80, 129].  Tensor sizes: [2, 0, 80, 129]
2025-03-05 15:22:57.170069 test begin: paddle.broadcast_to(Tensor([2, 0, 80, 161],"bool"), list[2,8,80,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 80, 161],"bool"), list[2,8,80,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 80, 161].  Tensor sizes: [2, 0, 80, 161]
2025-03-05 15:22:57.170871 test begin: paddle.broadcast_to(Tensor([2, 0, 80, 181],"bool"), list[2,8,80,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 80, 181],"bool"), list[2,8,80,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 80, 181].  Tensor sizes: [2, 0, 80, 181]
2025-03-05 15:22:57.171902 test begin: paddle.broadcast_to(Tensor([2, 0, 80, 80],"bool"), list[2,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 80, 80],"bool"), list[2,8,80,80,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 80, 80].  Tensor sizes: [2, 0, 80, 80]
2025-03-05 15:22:57.172515 test begin: paddle.broadcast_to(Tensor([2, 0, 80, 81],"bool"), list[2,8,80,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 80, 81],"bool"), list[2,8,80,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 80, 81].  Tensor sizes: [2, 0, 80, 81]
2025-03-05 15:22:57.173096 test begin: paddle.broadcast_to(Tensor([2, 0, 80, 85],"bool"), list[2,8,80,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 80, 85],"bool"), list[2,8,80,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 80, 85].  Tensor sizes: [2, 0, 80, 85]
2025-03-05 15:22:57.173660 test begin: paddle.broadcast_to(Tensor([2, 0, 81, 121],"bool"), list[2,8,81,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 81, 121],"bool"), list[2,8,81,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 81, 121].  Tensor sizes: [2, 0, 81, 121]
2025-03-05 15:22:57.174215 test begin: paddle.broadcast_to(Tensor([2, 0, 81, 129],"bool"), list[2,8,81,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 81, 129],"bool"), list[2,8,81,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 81, 129].  Tensor sizes: [2, 0, 81, 129]
2025-03-05 15:22:57.174828 test begin: paddle.broadcast_to(Tensor([2, 0, 81, 161],"bool"), list[2,8,81,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 81, 161],"bool"), list[2,8,81,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 81, 161].  Tensor sizes: [2, 0, 81, 161]
2025-03-05 15:22:57.175394 test begin: paddle.broadcast_to(Tensor([2, 0, 81, 181],"bool"), list[2,8,81,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 81, 181],"bool"), list[2,8,81,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 81, 181].  Tensor sizes: [2, 0, 81, 181]
2025-03-05 15:22:57.175985 test begin: paddle.broadcast_to(Tensor([2, 0, 81, 81],"bool"), list[2,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 81, 81],"bool"), list[2,8,81,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 81, 81].  Tensor sizes: [2, 0, 81, 81]
2025-03-05 15:22:57.176547 test begin: paddle.broadcast_to(Tensor([2, 0, 81, 85],"bool"), list[2,8,81,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 81, 85],"bool"), list[2,8,81,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 81, 85].  Tensor sizes: [2, 0, 81, 85]
2025-03-05 15:22:57.177100 test begin: paddle.broadcast_to(Tensor([2, 0, 82, 121],"bool"), list[2,8,82,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 82, 121],"bool"), list[2,8,82,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 82, 121].  Tensor sizes: [2, 0, 82, 121]
2025-03-05 15:22:57.177636 test begin: paddle.broadcast_to(Tensor([2, 0, 82, 129],"bool"), list[2,8,82,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 82, 129],"bool"), list[2,8,82,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 82, 129].  Tensor sizes: [2, 0, 82, 129]
2025-03-05 15:22:57.178163 test begin: paddle.broadcast_to(Tensor([2, 0, 82, 161],"bool"), list[2,8,82,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 82, 161],"bool"), list[2,8,82,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 82, 161].  Tensor sizes: [2, 0, 82, 161]
2025-03-05 15:22:57.178700 test begin: paddle.broadcast_to(Tensor([2, 0, 82, 181],"bool"), list[2,8,82,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 82, 181],"bool"), list[2,8,82,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 82, 181].  Tensor sizes: [2, 0, 82, 181]
2025-03-05 15:22:57.179242 test begin: paddle.broadcast_to(Tensor([2, 0, 82, 81],"bool"), list[2,8,82,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 82, 81],"bool"), list[2,8,82,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 82, 81].  Tensor sizes: [2, 0, 82, 81]
2025-03-05 15:22:57.179794 test begin: paddle.broadcast_to(Tensor([2, 0, 82, 82],"bool"), list[2,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 82, 82],"bool"), list[2,8,82,82,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 82, 82].  Tensor sizes: [2, 0, 82, 82]
2025-03-05 15:22:57.180332 test begin: paddle.broadcast_to(Tensor([2, 0, 82, 85],"bool"), list[2,8,82,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 82, 85],"bool"), list[2,8,82,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 82, 85].  Tensor sizes: [2, 0, 82, 85]
2025-03-05 15:22:57.180868 test begin: paddle.broadcast_to(Tensor([2, 0, 83, 121],"bool"), list[2,8,83,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 83, 121],"bool"), list[2,8,83,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 83, 121].  Tensor sizes: [2, 0, 83, 121]
2025-03-05 15:22:57.181392 test begin: paddle.broadcast_to(Tensor([2, 0, 83, 129],"bool"), list[2,8,83,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 83, 129],"bool"), list[2,8,83,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 83, 129].  Tensor sizes: [2, 0, 83, 129]
2025-03-05 15:22:57.181930 test begin: paddle.broadcast_to(Tensor([2, 0, 83, 161],"bool"), list[2,8,83,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 83, 161],"bool"), list[2,8,83,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 83, 161].  Tensor sizes: [2, 0, 83, 161]
2025-03-05 15:22:57.182512 test begin: paddle.broadcast_to(Tensor([2, 0, 83, 181],"bool"), list[2,8,83,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 83, 181],"bool"), list[2,8,83,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 83, 181].  Tensor sizes: [2, 0, 83, 181]
2025-03-05 15:22:57.183072 test begin: paddle.broadcast_to(Tensor([2, 0, 83, 81],"bool"), list[2,8,83,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 83, 81],"bool"), list[2,8,83,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 83, 81].  Tensor sizes: [2, 0, 83, 81]
2025-03-05 15:22:57.183666 test begin: paddle.broadcast_to(Tensor([2, 0, 83, 83],"bool"), list[2,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 83, 83],"bool"), list[2,8,83,83,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 83, 83].  Tensor sizes: [2, 0, 83, 83]
2025-03-05 15:22:57.184230 test begin: paddle.broadcast_to(Tensor([2, 0, 83, 85],"bool"), list[2,8,83,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 83, 85],"bool"), list[2,8,83,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 83, 85].  Tensor sizes: [2, 0, 83, 85]
2025-03-05 15:22:57.184781 test begin: paddle.broadcast_to(Tensor([2, 0, 84, 121],"bool"), list[2,8,84,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 84, 121],"bool"), list[2,8,84,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 84, 121].  Tensor sizes: [2, 0, 84, 121]
2025-03-05 15:22:57.185332 test begin: paddle.broadcast_to(Tensor([2, 0, 84, 129],"bool"), list[2,8,84,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 84, 129],"bool"), list[2,8,84,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 84, 129].  Tensor sizes: [2, 0, 84, 129]
2025-03-05 15:22:57.185924 test begin: paddle.broadcast_to(Tensor([2, 0, 84, 161],"bool"), list[2,8,84,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 84, 161],"bool"), list[2,8,84,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 84, 161].  Tensor sizes: [2, 0, 84, 161]
2025-03-05 15:22:57.186466 test begin: paddle.broadcast_to(Tensor([2, 0, 84, 181],"bool"), list[2,8,84,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 84, 181],"bool"), list[2,8,84,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 84, 181].  Tensor sizes: [2, 0, 84, 181]
2025-03-05 15:22:57.187047 test begin: paddle.broadcast_to(Tensor([2, 0, 84, 81],"bool"), list[2,8,84,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 84, 81],"bool"), list[2,8,84,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 84, 81].  Tensor sizes: [2, 0, 84, 81]
2025-03-05 15:22:57.187617 test begin: paddle.broadcast_to(Tensor([2, 0, 84, 84],"bool"), list[2,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 84, 84],"bool"), list[2,8,84,84,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 84, 84].  Tensor sizes: [2, 0, 84, 84]
2025-03-05 15:22:57.188162 test begin: paddle.broadcast_to(Tensor([2, 0, 84, 85],"bool"), list[2,8,84,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 84, 85],"bool"), list[2,8,84,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 84, 85].  Tensor sizes: [2, 0, 84, 85]
2025-03-05 15:22:57.188721 test begin: paddle.broadcast_to(Tensor([2, 0, 85, 121],"bool"), list[2,8,85,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 85, 121],"bool"), list[2,8,85,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 85, 121].  Tensor sizes: [2, 0, 85, 121]
2025-03-05 15:22:57.189256 test begin: paddle.broadcast_to(Tensor([2, 0, 85, 129],"bool"), list[2,8,85,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 85, 129],"bool"), list[2,8,85,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 85, 129].  Tensor sizes: [2, 0, 85, 129]
2025-03-05 15:22:57.189794 test begin: paddle.broadcast_to(Tensor([2, 0, 85, 161],"bool"), list[2,8,85,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 85, 161],"bool"), list[2,8,85,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 85, 161].  Tensor sizes: [2, 0, 85, 161]
2025-03-05 15:22:57.190319 test begin: paddle.broadcast_to(Tensor([2, 0, 85, 181],"bool"), list[2,8,85,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 85, 181],"bool"), list[2,8,85,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 85, 181].  Tensor sizes: [2, 0, 85, 181]
2025-03-05 15:22:57.190871 test begin: paddle.broadcast_to(Tensor([2, 0, 85, 81],"bool"), list[2,8,85,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 85, 81],"bool"), list[2,8,85,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 85, 81].  Tensor sizes: [2, 0, 85, 81]
2025-03-05 15:22:57.191399 test begin: paddle.broadcast_to(Tensor([2, 0, 85, 85],"bool"), list[2,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 85, 85],"bool"), list[2,8,85,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 85, 85].  Tensor sizes: [2, 0, 85, 85]
2025-03-05 15:22:57.191960 test begin: paddle.broadcast_to(Tensor([2, 0, 86, 121],"bool"), list[2,8,86,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 86, 121],"bool"), list[2,8,86,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 86, 121].  Tensor sizes: [2, 0, 86, 121]
2025-03-05 15:22:57.196699 test begin: paddle.broadcast_to(Tensor([2, 0, 86, 129],"bool"), list[2,8,86,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 86, 129],"bool"), list[2,8,86,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 86, 129].  Tensor sizes: [2, 0, 86, 129]
2025-03-05 15:22:57.198080 test begin: paddle.broadcast_to(Tensor([2, 0, 86, 161],"bool"), list[2,8,86,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 86, 161],"bool"), list[2,8,86,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 86, 161].  Tensor sizes: [2, 0, 86, 161]
2025-03-05 15:22:57.198772 test begin: paddle.broadcast_to(Tensor([2, 0, 86, 181],"bool"), list[2,8,86,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 86, 181],"bool"), list[2,8,86,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 86, 181].  Tensor sizes: [2, 0, 86, 181]
2025-03-05 15:22:57.199421 test begin: paddle.broadcast_to(Tensor([2, 0, 86, 81],"bool"), list[2,8,86,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 86, 81],"bool"), list[2,8,86,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 86, 81].  Tensor sizes: [2, 0, 86, 81]
2025-03-05 15:22:57.200081 test begin: paddle.broadcast_to(Tensor([2, 0, 86, 85],"bool"), list[2,8,86,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 86, 85],"bool"), list[2,8,86,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 86, 85].  Tensor sizes: [2, 0, 86, 85]
2025-03-05 15:22:57.200731 test begin: paddle.broadcast_to(Tensor([2, 0, 86, 86],"bool"), list[2,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 86, 86],"bool"), list[2,8,86,86,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 86, 86].  Tensor sizes: [2, 0, 86, 86]
2025-03-05 15:22:57.201349 test begin: paddle.broadcast_to(Tensor([2, 0, 87, 121],"bool"), list[2,8,87,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 87, 121],"bool"), list[2,8,87,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 87, 121].  Tensor sizes: [2, 0, 87, 121]
2025-03-05 15:22:57.201988 test begin: paddle.broadcast_to(Tensor([2, 0, 87, 129],"bool"), list[2,8,87,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 87, 129],"bool"), list[2,8,87,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 87, 129].  Tensor sizes: [2, 0, 87, 129]
2025-03-05 15:22:57.202713 test begin: paddle.broadcast_to(Tensor([2, 0, 87, 161],"bool"), list[2,8,87,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 87, 161],"bool"), list[2,8,87,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 87, 161].  Tensor sizes: [2, 0, 87, 161]
2025-03-05 15:22:57.203350 test begin: paddle.broadcast_to(Tensor([2, 0, 87, 181],"bool"), list[2,8,87,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 87, 181],"bool"), list[2,8,87,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 87, 181].  Tensor sizes: [2, 0, 87, 181]
2025-03-05 15:22:57.204031 test begin: paddle.broadcast_to(Tensor([2, 0, 87, 81],"bool"), list[2,8,87,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 87, 81],"bool"), list[2,8,87,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 87, 81].  Tensor sizes: [2, 0, 87, 81]
2025-03-05 15:22:57.204686 test begin: paddle.broadcast_to(Tensor([2, 0, 87, 85],"bool"), list[2,8,87,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 87, 85],"bool"), list[2,8,87,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 87, 85].  Tensor sizes: [2, 0, 87, 85]
2025-03-05 15:22:57.205324 test begin: paddle.broadcast_to(Tensor([2, 0, 87, 87],"bool"), list[2,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 87, 87],"bool"), list[2,8,87,87,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 87, 87].  Tensor sizes: [2, 0, 87, 87]
2025-03-05 15:22:57.205964 test begin: paddle.broadcast_to(Tensor([2, 0, 88, 121],"bool"), list[2,8,88,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 88, 121],"bool"), list[2,8,88,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 88, 121].  Tensor sizes: [2, 0, 88, 121]
2025-03-05 15:22:57.206606 test begin: paddle.broadcast_to(Tensor([2, 0, 88, 129],"bool"), list[2,8,88,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 88, 129],"bool"), list[2,8,88,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 88, 129].  Tensor sizes: [2, 0, 88, 129]
2025-03-05 15:22:57.207263 test begin: paddle.broadcast_to(Tensor([2, 0, 88, 161],"bool"), list[2,8,88,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 88, 161],"bool"), list[2,8,88,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 88, 161].  Tensor sizes: [2, 0, 88, 161]
2025-03-05 15:22:57.207942 test begin: paddle.broadcast_to(Tensor([2, 0, 88, 181],"bool"), list[2,8,88,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 88, 181],"bool"), list[2,8,88,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 88, 181].  Tensor sizes: [2, 0, 88, 181]
2025-03-05 15:22:57.208600 test begin: paddle.broadcast_to(Tensor([2, 0, 88, 81],"bool"), list[2,8,88,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 88, 81],"bool"), list[2,8,88,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 88, 81].  Tensor sizes: [2, 0, 88, 81]
2025-03-05 15:22:57.209240 test begin: paddle.broadcast_to(Tensor([2, 0, 88, 85],"bool"), list[2,8,88,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 88, 85],"bool"), list[2,8,88,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 88, 85].  Tensor sizes: [2, 0, 88, 85]
2025-03-05 15:22:57.209889 test begin: paddle.broadcast_to(Tensor([2, 0, 88, 88],"bool"), list[2,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 88, 88],"bool"), list[2,8,88,88,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 88, 88].  Tensor sizes: [2, 0, 88, 88]
2025-03-05 15:22:57.210539 test begin: paddle.broadcast_to(Tensor([2, 0, 89, 121],"bool"), list[2,8,89,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 89, 121],"bool"), list[2,8,89,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 89, 121].  Tensor sizes: [2, 0, 89, 121]
2025-03-05 15:22:57.211192 test begin: paddle.broadcast_to(Tensor([2, 0, 89, 129],"bool"), list[2,8,89,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 89, 129],"bool"), list[2,8,89,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 89, 129].  Tensor sizes: [2, 0, 89, 129]
2025-03-05 15:22:57.211819 test begin: paddle.broadcast_to(Tensor([2, 0, 89, 161],"bool"), list[2,8,89,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 89, 161],"bool"), list[2,8,89,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 89, 161].  Tensor sizes: [2, 0, 89, 161]
2025-03-05 15:22:57.212449 test begin: paddle.broadcast_to(Tensor([2, 0, 89, 181],"bool"), list[2,8,89,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 89, 181],"bool"), list[2,8,89,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 89, 181].  Tensor sizes: [2, 0, 89, 181]
2025-03-05 15:22:57.213098 test begin: paddle.broadcast_to(Tensor([2, 0, 89, 81],"bool"), list[2,8,89,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 89, 81],"bool"), list[2,8,89,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 89, 81].  Tensor sizes: [2, 0, 89, 81]
2025-03-05 15:22:57.213738 test begin: paddle.broadcast_to(Tensor([2, 0, 89, 85],"bool"), list[2,8,89,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 89, 85],"bool"), list[2,8,89,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 89, 85].  Tensor sizes: [2, 0, 89, 85]
2025-03-05 15:22:57.214362 test begin: paddle.broadcast_to(Tensor([2, 0, 89, 89],"bool"), list[2,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 89, 89],"bool"), list[2,8,89,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 89, 89].  Tensor sizes: [2, 0, 89, 89]
2025-03-05 15:22:57.215012 test begin: paddle.broadcast_to(Tensor([2, 0, 9, 121],"bool"), list[2,8,9,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 9, 121],"bool"), list[2,8,9,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 9, 121].  Tensor sizes: [2, 0, 9, 121]
2025-03-05 15:22:57.215683 test begin: paddle.broadcast_to(Tensor([2, 0, 9, 129],"bool"), list[2,8,9,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 9, 129],"bool"), list[2,8,9,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 9, 129].  Tensor sizes: [2, 0, 9, 129]
2025-03-05 15:22:57.216322 test begin: paddle.broadcast_to(Tensor([2, 0, 9, 161],"bool"), list[2,8,9,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 9, 161],"bool"), list[2,8,9,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 9, 161].  Tensor sizes: [2, 0, 9, 161]
2025-03-05 15:22:57.216960 test begin: paddle.broadcast_to(Tensor([2, 0, 9, 17],"bool"), list[2,8,9,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 9, 17],"bool"), list[2,8,9,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 9, 17].  Tensor sizes: [2, 0, 9, 17]
2025-03-05 15:22:57.217612 test begin: paddle.broadcast_to(Tensor([2, 0, 9, 181],"bool"), list[2,8,9,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 9, 181],"bool"), list[2,8,9,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 9, 181].  Tensor sizes: [2, 0, 9, 181]
2025-03-05 15:22:57.218279 test begin: paddle.broadcast_to(Tensor([2, 0, 9, 41],"bool"), list[2,8,9,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 9, 41],"bool"), list[2,8,9,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 9, 41].  Tensor sizes: [2, 0, 9, 41]
2025-03-05 15:22:57.218981 test begin: paddle.broadcast_to(Tensor([2, 0, 9, 57],"bool"), list[2,8,9,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 9, 57],"bool"), list[2,8,9,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 9, 57].  Tensor sizes: [2, 0, 9, 57]
2025-03-05 15:22:57.219644 test begin: paddle.broadcast_to(Tensor([2, 0, 9, 81],"bool"), list[2,8,9,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 9, 81],"bool"), list[2,8,9,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 9, 81].  Tensor sizes: [2, 0, 9, 81]
2025-03-05 15:22:57.220294 test begin: paddle.broadcast_to(Tensor([2, 0, 9, 85],"bool"), list[2,8,9,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 9, 85],"bool"), list[2,8,9,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 9, 85].  Tensor sizes: [2, 0, 9, 85]
2025-03-05 15:22:57.220981 test begin: paddle.broadcast_to(Tensor([2, 0, 9, 9],"bool"), list[2,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 9, 9],"bool"), list[2,8,9,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 9, 9].  Tensor sizes: [2, 0, 9, 9]
2025-03-05 15:22:57.221838 test begin: paddle.broadcast_to(Tensor([2, 0, 90, 121],"bool"), list[2,8,90,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 90, 121],"bool"), list[2,8,90,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 90, 121].  Tensor sizes: [2, 0, 90, 121]
2025-03-05 15:22:57.222429 test begin: paddle.broadcast_to(Tensor([2, 0, 90, 129],"bool"), list[2,8,90,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 90, 129],"bool"), list[2,8,90,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 90, 129].  Tensor sizes: [2, 0, 90, 129]
2025-03-05 15:22:57.223003 test begin: paddle.broadcast_to(Tensor([2, 0, 90, 161],"bool"), list[2,8,90,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 90, 161],"bool"), list[2,8,90,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 90, 161].  Tensor sizes: [2, 0, 90, 161]
2025-03-05 15:22:57.223562 test begin: paddle.broadcast_to(Tensor([2, 0, 90, 181],"bool"), list[2,8,90,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 90, 181],"bool"), list[2,8,90,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 90, 181].  Tensor sizes: [2, 0, 90, 181]
2025-03-05 15:22:57.224120 test begin: paddle.broadcast_to(Tensor([2, 0, 90, 81],"bool"), list[2,8,90,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 90, 81],"bool"), list[2,8,90,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 90, 81].  Tensor sizes: [2, 0, 90, 81]
2025-03-05 15:22:57.224666 test begin: paddle.broadcast_to(Tensor([2, 0, 90, 85],"bool"), list[2,8,90,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 90, 85],"bool"), list[2,8,90,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 90, 85].  Tensor sizes: [2, 0, 90, 85]
2025-03-05 15:22:57.225208 test begin: paddle.broadcast_to(Tensor([2, 0, 90, 90],"bool"), list[2,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 90, 90],"bool"), list[2,8,90,90,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 90, 90].  Tensor sizes: [2, 0, 90, 90]
2025-03-05 15:22:57.225746 test begin: paddle.broadcast_to(Tensor([2, 0, 91, 121],"bool"), list[2,8,91,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 91, 121],"bool"), list[2,8,91,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 91, 121].  Tensor sizes: [2, 0, 91, 121]
2025-03-05 15:22:57.226280 test begin: paddle.broadcast_to(Tensor([2, 0, 91, 129],"bool"), list[2,8,91,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 91, 129],"bool"), list[2,8,91,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 91, 129].  Tensor sizes: [2, 0, 91, 129]
2025-03-05 15:22:57.226824 test begin: paddle.broadcast_to(Tensor([2, 0, 91, 161],"bool"), list[2,8,91,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 91, 161],"bool"), list[2,8,91,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 91, 161].  Tensor sizes: [2, 0, 91, 161]
2025-03-05 15:22:57.227354 test begin: paddle.broadcast_to(Tensor([2, 0, 91, 181],"bool"), list[2,8,91,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 91, 181],"bool"), list[2,8,91,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 91, 181].  Tensor sizes: [2, 0, 91, 181]
2025-03-05 15:22:57.227903 test begin: paddle.broadcast_to(Tensor([2, 0, 91, 81],"bool"), list[2,8,91,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 91, 81],"bool"), list[2,8,91,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 91, 81].  Tensor sizes: [2, 0, 91, 81]
2025-03-05 15:22:57.228433 test begin: paddle.broadcast_to(Tensor([2, 0, 91, 85],"bool"), list[2,8,91,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 91, 85],"bool"), list[2,8,91,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 91, 85].  Tensor sizes: [2, 0, 91, 85]
2025-03-05 15:22:57.228983 test begin: paddle.broadcast_to(Tensor([2, 0, 91, 91],"bool"), list[2,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 91, 91],"bool"), list[2,8,91,91,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 91, 91].  Tensor sizes: [2, 0, 91, 91]
2025-03-05 15:22:57.229518 test begin: paddle.broadcast_to(Tensor([2, 0, 92, 121],"bool"), list[2,8,92,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 92, 121],"bool"), list[2,8,92,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 92, 121].  Tensor sizes: [2, 0, 92, 121]
2025-03-05 15:22:57.230145 test begin: paddle.broadcast_to(Tensor([2, 0, 92, 129],"bool"), list[2,8,92,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 92, 129],"bool"), list[2,8,92,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 92, 129].  Tensor sizes: [2, 0, 92, 129]
2025-03-05 15:22:57.230700 test begin: paddle.broadcast_to(Tensor([2, 0, 92, 161],"bool"), list[2,8,92,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 92, 161],"bool"), list[2,8,92,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 92, 161].  Tensor sizes: [2, 0, 92, 161]
2025-03-05 15:22:57.231238 test begin: paddle.broadcast_to(Tensor([2, 0, 92, 181],"bool"), list[2,8,92,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 92, 181],"bool"), list[2,8,92,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 92, 181].  Tensor sizes: [2, 0, 92, 181]
2025-03-05 15:22:57.231827 test begin: paddle.broadcast_to(Tensor([2, 0, 92, 81],"bool"), list[2,8,92,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 92, 81],"bool"), list[2,8,92,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 92, 81].  Tensor sizes: [2, 0, 92, 81]
2025-03-05 15:22:57.232366 test begin: paddle.broadcast_to(Tensor([2, 0, 92, 85],"bool"), list[2,8,92,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 92, 85],"bool"), list[2,8,92,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 92, 85].  Tensor sizes: [2, 0, 92, 85]
2025-03-05 15:22:57.232915 test begin: paddle.broadcast_to(Tensor([2, 0, 92, 92],"bool"), list[2,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 92, 92],"bool"), list[2,8,92,92,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 92, 92].  Tensor sizes: [2, 0, 92, 92]
2025-03-05 15:22:57.233452 test begin: paddle.broadcast_to(Tensor([2, 0, 93, 121],"bool"), list[2,8,93,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 93, 121],"bool"), list[2,8,93,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 93, 121].  Tensor sizes: [2, 0, 93, 121]
2025-03-05 15:22:57.234003 test begin: paddle.broadcast_to(Tensor([2, 0, 93, 129],"bool"), list[2,8,93,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 93, 129],"bool"), list[2,8,93,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 93, 129].  Tensor sizes: [2, 0, 93, 129]
2025-03-05 15:22:57.234541 test begin: paddle.broadcast_to(Tensor([2, 0, 93, 161],"bool"), list[2,8,93,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 93, 161],"bool"), list[2,8,93,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 93, 161].  Tensor sizes: [2, 0, 93, 161]
2025-03-05 15:22:57.235102 test begin: paddle.broadcast_to(Tensor([2, 0, 93, 181],"bool"), list[2,8,93,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 93, 181],"bool"), list[2,8,93,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 93, 181].  Tensor sizes: [2, 0, 93, 181]
2025-03-05 15:22:57.235649 test begin: paddle.broadcast_to(Tensor([2, 0, 93, 81],"bool"), list[2,8,93,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 93, 81],"bool"), list[2,8,93,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 93, 81].  Tensor sizes: [2, 0, 93, 81]
2025-03-05 15:22:57.236190 test begin: paddle.broadcast_to(Tensor([2, 0, 93, 85],"bool"), list[2,8,93,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 93, 85],"bool"), list[2,8,93,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 93, 85].  Tensor sizes: [2, 0, 93, 85]
2025-03-05 15:22:57.236800 test begin: paddle.broadcast_to(Tensor([2, 0, 93, 93],"bool"), list[2,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 93, 93],"bool"), list[2,8,93,93,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 93, 93].  Tensor sizes: [2, 0, 93, 93]
2025-03-05 15:22:57.237379 test begin: paddle.broadcast_to(Tensor([2, 0, 94, 121],"bool"), list[2,8,94,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 94, 121],"bool"), list[2,8,94,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 94, 121].  Tensor sizes: [2, 0, 94, 121]
2025-03-05 15:22:57.237931 test begin: paddle.broadcast_to(Tensor([2, 0, 94, 129],"bool"), list[2,8,94,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 94, 129],"bool"), list[2,8,94,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 94, 129].  Tensor sizes: [2, 0, 94, 129]
2025-03-05 15:22:57.238468 test begin: paddle.broadcast_to(Tensor([2, 0, 94, 161],"bool"), list[2,8,94,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 94, 161],"bool"), list[2,8,94,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 94, 161].  Tensor sizes: [2, 0, 94, 161]
2025-03-05 15:22:57.239074 test begin: paddle.broadcast_to(Tensor([2, 0, 94, 181],"bool"), list[2,8,94,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 94, 181],"bool"), list[2,8,94,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 94, 181].  Tensor sizes: [2, 0, 94, 181]
2025-03-05 15:22:57.239638 test begin: paddle.broadcast_to(Tensor([2, 0, 94, 81],"bool"), list[2,8,94,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 94, 81],"bool"), list[2,8,94,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 94, 81].  Tensor sizes: [2, 0, 94, 81]
2025-03-05 15:22:57.240190 test begin: paddle.broadcast_to(Tensor([2, 0, 94, 85],"bool"), list[2,8,94,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 94, 85],"bool"), list[2,8,94,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 94, 85].  Tensor sizes: [2, 0, 94, 85]
2025-03-05 15:22:57.240732 test begin: paddle.broadcast_to(Tensor([2, 0, 94, 94],"bool"), list[2,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 94, 94],"bool"), list[2,8,94,94,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 94, 94].  Tensor sizes: [2, 0, 94, 94]
2025-03-05 15:22:57.241274 test begin: paddle.broadcast_to(Tensor([2, 0, 95, 121],"bool"), list[2,8,95,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 95, 121],"bool"), list[2,8,95,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 95, 121].  Tensor sizes: [2, 0, 95, 121]
2025-03-05 15:22:57.241830 test begin: paddle.broadcast_to(Tensor([2, 0, 95, 129],"bool"), list[2,8,95,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 95, 129],"bool"), list[2,8,95,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 95, 129].  Tensor sizes: [2, 0, 95, 129]
2025-03-05 15:22:57.242389 test begin: paddle.broadcast_to(Tensor([2, 0, 95, 161],"bool"), list[2,8,95,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 95, 161],"bool"), list[2,8,95,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 95, 161].  Tensor sizes: [2, 0, 95, 161]
2025-03-05 15:22:57.242944 test begin: paddle.broadcast_to(Tensor([2, 0, 95, 181],"bool"), list[2,8,95,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 95, 181],"bool"), list[2,8,95,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 95, 181].  Tensor sizes: [2, 0, 95, 181]
2025-03-05 15:22:57.243483 test begin: paddle.broadcast_to(Tensor([2, 0, 95, 81],"bool"), list[2,8,95,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 95, 81],"bool"), list[2,8,95,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 95, 81].  Tensor sizes: [2, 0, 95, 81]
2025-03-05 15:22:57.244036 test begin: paddle.broadcast_to(Tensor([2, 0, 95, 85],"bool"), list[2,8,95,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 95, 85],"bool"), list[2,8,95,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 95, 85].  Tensor sizes: [2, 0, 95, 85]
2025-03-05 15:22:57.244565 test begin: paddle.broadcast_to(Tensor([2, 0, 95, 95],"bool"), list[2,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 95, 95],"bool"), list[2,8,95,95,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 95, 95].  Tensor sizes: [2, 0, 95, 95]
2025-03-05 15:22:57.245169 test begin: paddle.broadcast_to(Tensor([2, 0, 96, 121],"bool"), list[2,8,96,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 96, 121],"bool"), list[2,8,96,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 96, 121].  Tensor sizes: [2, 0, 96, 121]
2025-03-05 15:22:57.245710 test begin: paddle.broadcast_to(Tensor([2, 0, 96, 129],"bool"), list[2,8,96,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 96, 129],"bool"), list[2,8,96,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 96, 129].  Tensor sizes: [2, 0, 96, 129]
2025-03-05 15:22:57.246246 test begin: paddle.broadcast_to(Tensor([2, 0, 96, 161],"bool"), list[2,8,96,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 96, 161],"bool"), list[2,8,96,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 96, 161].  Tensor sizes: [2, 0, 96, 161]
2025-03-05 15:22:57.246787 test begin: paddle.broadcast_to(Tensor([2, 0, 96, 181],"bool"), list[2,8,96,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 96, 181],"bool"), list[2,8,96,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 96, 181].  Tensor sizes: [2, 0, 96, 181]
2025-03-05 15:22:57.247321 test begin: paddle.broadcast_to(Tensor([2, 0, 96, 81],"bool"), list[2,8,96,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 96, 81],"bool"), list[2,8,96,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 96, 81].  Tensor sizes: [2, 0, 96, 81]
2025-03-05 15:22:57.247874 test begin: paddle.broadcast_to(Tensor([2, 0, 96, 85],"bool"), list[2,8,96,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 96, 85],"bool"), list[2,8,96,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 96, 85].  Tensor sizes: [2, 0, 96, 85]
2025-03-05 15:22:57.248427 test begin: paddle.broadcast_to(Tensor([2, 0, 96, 96],"bool"), list[2,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 96, 96],"bool"), list[2,8,96,96,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 96, 96].  Tensor sizes: [2, 0, 96, 96]
2025-03-05 15:22:57.248978 test begin: paddle.broadcast_to(Tensor([2, 0, 97, 121],"bool"), list[2,8,97,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 97, 121],"bool"), list[2,8,97,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 97, 121].  Tensor sizes: [2, 0, 97, 121]
2025-03-05 15:22:57.249532 test begin: paddle.broadcast_to(Tensor([2, 0, 97, 129],"bool"), list[2,8,97,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 97, 129],"bool"), list[2,8,97,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 97, 129].  Tensor sizes: [2, 0, 97, 129]
2025-03-05 15:22:57.250083 test begin: paddle.broadcast_to(Tensor([2, 0, 97, 161],"bool"), list[2,8,97,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 97, 161],"bool"), list[2,8,97,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 97, 161].  Tensor sizes: [2, 0, 97, 161]
2025-03-05 15:22:57.250641 test begin: paddle.broadcast_to(Tensor([2, 0, 97, 181],"bool"), list[2,8,97,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 97, 181],"bool"), list[2,8,97,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 97, 181].  Tensor sizes: [2, 0, 97, 181]
2025-03-05 15:22:57.251201 test begin: paddle.broadcast_to(Tensor([2, 0, 97, 81],"bool"), list[2,8,97,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 97, 81],"bool"), list[2,8,97,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 97, 81].  Tensor sizes: [2, 0, 97, 81]
2025-03-05 15:22:57.251758 test begin: paddle.broadcast_to(Tensor([2, 0, 97, 85],"bool"), list[2,8,97,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 97, 85],"bool"), list[2,8,97,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 97, 85].  Tensor sizes: [2, 0, 97, 85]
2025-03-05 15:22:57.252302 test begin: paddle.broadcast_to(Tensor([2, 0, 97, 97],"bool"), list[2,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 97, 97],"bool"), list[2,8,97,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 97, 97].  Tensor sizes: [2, 0, 97, 97]
2025-03-05 15:22:57.252862 test begin: paddle.broadcast_to(Tensor([2, 0, 98, 121],"bool"), list[2,8,98,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 98, 121],"bool"), list[2,8,98,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 98, 121].  Tensor sizes: [2, 0, 98, 121]
2025-03-05 15:22:57.253414 test begin: paddle.broadcast_to(Tensor([2, 0, 98, 129],"bool"), list[2,8,98,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 98, 129],"bool"), list[2,8,98,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 98, 129].  Tensor sizes: [2, 0, 98, 129]
2025-03-05 15:22:57.253975 test begin: paddle.broadcast_to(Tensor([2, 0, 98, 161],"bool"), list[2,8,98,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 98, 161],"bool"), list[2,8,98,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 98, 161].  Tensor sizes: [2, 0, 98, 161]
2025-03-05 15:22:57.254517 test begin: paddle.broadcast_to(Tensor([2, 0, 98, 181],"bool"), list[2,8,98,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 98, 181],"bool"), list[2,8,98,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 98, 181].  Tensor sizes: [2, 0, 98, 181]
2025-03-05 15:22:57.255052 test begin: paddle.broadcast_to(Tensor([2, 0, 98, 81],"bool"), list[2,8,98,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 98, 81],"bool"), list[2,8,98,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 98, 81].  Tensor sizes: [2, 0, 98, 81]
2025-03-05 15:22:57.255580 test begin: paddle.broadcast_to(Tensor([2, 0, 98, 85],"bool"), list[2,8,98,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 98, 85],"bool"), list[2,8,98,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 98, 85].  Tensor sizes: [2, 0, 98, 85]
2025-03-05 15:22:57.256118 test begin: paddle.broadcast_to(Tensor([2, 0, 98, 98],"bool"), list[2,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 98, 98],"bool"), list[2,8,98,98,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 98, 98].  Tensor sizes: [2, 0, 98, 98]
2025-03-05 15:22:57.256737 test begin: paddle.broadcast_to(Tensor([2, 0, 99, 121],"bool"), list[2,8,99,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 99, 121],"bool"), list[2,8,99,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 99, 121].  Tensor sizes: [2, 0, 99, 121]
2025-03-05 15:22:57.257280 test begin: paddle.broadcast_to(Tensor([2, 0, 99, 129],"bool"), list[2,8,99,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 99, 129],"bool"), list[2,8,99,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 99, 129].  Tensor sizes: [2, 0, 99, 129]
2025-03-05 15:22:57.257881 test begin: paddle.broadcast_to(Tensor([2, 0, 99, 161],"bool"), list[2,8,99,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 99, 161],"bool"), list[2,8,99,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 99, 161].  Tensor sizes: [2, 0, 99, 161]
2025-03-05 15:22:57.258424 test begin: paddle.broadcast_to(Tensor([2, 0, 99, 181],"bool"), list[2,8,99,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 99, 181],"bool"), list[2,8,99,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 99, 181].  Tensor sizes: [2, 0, 99, 181]
2025-03-05 15:22:57.258985 test begin: paddle.broadcast_to(Tensor([2, 0, 99, 81],"bool"), list[2,8,99,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 99, 81],"bool"), list[2,8,99,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 99, 81].  Tensor sizes: [2, 0, 99, 81]
2025-03-05 15:22:57.259547 test begin: paddle.broadcast_to(Tensor([2, 0, 99, 85],"bool"), list[2,8,99,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 99, 85],"bool"), list[2,8,99,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 99, 85].  Tensor sizes: [2, 0, 99, 85]
2025-03-05 15:22:57.260108 test begin: paddle.broadcast_to(Tensor([2, 0, 99, 99],"bool"), list[2,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([2, 0, 99, 99],"bool"), list[2,8,99,99,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 8, 99, 99].  Tensor sizes: [2, 0, 99, 99]
2025-03-05 15:22:57.260644 test begin: paddle.broadcast_to(Tensor([2, 0],"bool"), list[1,2,2,], )

[torch error] paddle.broadcast_to(Tensor([2, 0],"bool"), list[1,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [1, 2, 2].  Tensor sizes: [2, 0]
2025-03-05 15:22:57.261178 test begin: paddle.broadcast_to(Tensor([2, 0],"bool"), list[2,2,4,], )

[torch error] paddle.broadcast_to(Tensor([2, 0],"bool"), list[2,2,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 2, 4].  Tensor sizes: [2, 0]
2025-03-05 15:22:57.261701 test begin: paddle.broadcast_to(Tensor([2, 0],"bool"), list[2,2,], )

[torch error] paddle.broadcast_to(Tensor([2, 0],"bool"), list[2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 2].  Tensor sizes: [2, 0]
2025-03-05 15:22:57.262223 test begin: paddle.broadcast_to(Tensor([2, 0],"float32"), tuple(2,2,), )

[torch error] paddle.broadcast_to(Tensor([2, 0],"float32"), tuple(2,2,), ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 2].  Tensor sizes: [2, 0]
2025-03-05 15:22:57.262756 test begin: paddle.broadcast_to(Tensor([2, 0],"float32"), tuple(2,3,), )

[torch error] paddle.broadcast_to(Tensor([2, 0],"float32"), tuple(2,3,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 3].  Tensor sizes: [2, 0]
2025-03-05 15:22:57.263276 test begin: paddle.broadcast_to(Tensor([2, 0],"float32"), tuple(2,4,), )

[torch error] paddle.broadcast_to(Tensor([2, 0],"float32"), tuple(2,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 4].  Tensor sizes: [2, 0]
2025-03-05 15:22:57.263799 test begin: paddle.broadcast_to(Tensor([2, 0],"float32"), tuple(2,799,), )

[torch error] paddle.broadcast_to(Tensor([2, 0],"float32"), tuple(2,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 799].  Tensor sizes: [2, 0]
2025-03-05 15:22:57.264313 test begin: paddle.broadcast_to(Tensor([2, 0],"float64"), tuple(2,3,), )

[torch error] paddle.broadcast_to(Tensor([2, 0],"float64"), tuple(2,3,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 3].  Tensor sizes: [2, 0]
2025-03-05 15:22:57.264843 test begin: paddle.broadcast_to(Tensor([2, 0],"int32"), tuple(2,1,), )

[torch error] paddle.broadcast_to(Tensor([2, 0],"int32"), tuple(2,1,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 1].  Tensor sizes: [2, 0]
2025-03-05 15:22:57.265451 test begin: paddle.broadcast_to(Tensor([2, 0],"int64"), tuple(2,2,), )

[torch error] paddle.broadcast_to(Tensor([2, 0],"int64"), tuple(2,2,), ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 2].  Tensor sizes: [2, 0]
2025-03-05 15:22:57.266026 test begin: paddle.broadcast_to(Tensor([2, 0],"int64"), tuple(2,4,), )

[torch error] paddle.broadcast_to(Tensor([2, 0],"int64"), tuple(2,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 4].  Tensor sizes: [2, 0]
2025-03-05 15:22:57.266563 test begin: paddle.broadcast_to(Tensor([2, 0],"int64"), tuple(2,799,), )

[torch error] paddle.broadcast_to(Tensor([2, 0],"int64"), tuple(2,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 799].  Tensor sizes: [2, 0]
2025-03-05 15:22:57.267125 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 100],"bool"), list[2,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 100],"bool"), list[2,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 100, 100].  Tensor sizes: [2, 1, 0, 100]
2025-03-05 15:22:57.267668 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 101],"bool"), list[2,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 101],"bool"), list[2,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 101, 101].  Tensor sizes: [2, 1, 0, 101]
2025-03-05 15:22:57.268220 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 102],"bool"), list[2,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 102],"bool"), list[2,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 102, 102].  Tensor sizes: [2, 1, 0, 102]
2025-03-05 15:22:57.268769 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 103],"bool"), list[2,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 103],"bool"), list[2,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 103, 103].  Tensor sizes: [2, 1, 0, 103]
2025-03-05 15:22:57.269295 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 104],"bool"), list[2,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 104],"bool"), list[2,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 104, 104].  Tensor sizes: [2, 1, 0, 104]
2025-03-05 15:22:57.269832 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 105],"bool"), list[2,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 105],"bool"), list[2,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 105, 105].  Tensor sizes: [2, 1, 0, 105]
2025-03-05 15:22:57.270375 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 106],"bool"), list[2,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 106],"bool"), list[2,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 106, 106].  Tensor sizes: [2, 1, 0, 106]
2025-03-05 15:22:57.270980 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 107],"bool"), list[2,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 107],"bool"), list[2,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 107, 107].  Tensor sizes: [2, 1, 0, 107]
2025-03-05 15:22:57.271519 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 108],"bool"), list[2,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 108],"bool"), list[2,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 108, 108].  Tensor sizes: [2, 1, 0, 108]
2025-03-05 15:22:57.272069 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 109],"bool"), list[2,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 109],"bool"), list[2,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 109, 109].  Tensor sizes: [2, 1, 0, 109]
2025-03-05 15:22:57.272612 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 10],"bool"), list[2,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 10],"bool"), list[2,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 10, 10].  Tensor sizes: [2, 1, 0, 10]
2025-03-05 15:22:57.273168 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 110],"bool"), list[2,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 110],"bool"), list[2,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 110, 110].  Tensor sizes: [2, 1, 0, 110]
2025-03-05 15:22:57.273723 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 111],"bool"), list[2,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 111],"bool"), list[2,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 111, 111].  Tensor sizes: [2, 1, 0, 111]
2025-03-05 15:22:57.274263 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 112],"bool"), list[2,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 112],"bool"), list[2,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 112, 112].  Tensor sizes: [2, 1, 0, 112]
2025-03-05 15:22:57.274820 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 113],"bool"), list[2,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 113],"bool"), list[2,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 113, 113].  Tensor sizes: [2, 1, 0, 113]
2025-03-05 15:22:57.275362 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 114],"bool"), list[2,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 114],"bool"), list[2,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 114, 114].  Tensor sizes: [2, 1, 0, 114]
2025-03-05 15:22:57.275911 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 115],"bool"), list[2,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 115],"bool"), list[2,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 115, 115].  Tensor sizes: [2, 1, 0, 115]
2025-03-05 15:22:57.276453 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 116],"bool"), list[2,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 116],"bool"), list[2,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 116, 116].  Tensor sizes: [2, 1, 0, 116]
2025-03-05 15:22:57.277014 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 117],"bool"), list[2,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 117],"bool"), list[2,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 117, 117].  Tensor sizes: [2, 1, 0, 117]
2025-03-05 15:22:57.277552 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 118],"bool"), list[2,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 118],"bool"), list[2,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 118, 118].  Tensor sizes: [2, 1, 0, 118]
2025-03-05 15:22:57.278097 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 119],"bool"), list[2,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 119],"bool"), list[2,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 119, 119].  Tensor sizes: [2, 1, 0, 119]
2025-03-05 15:22:57.278634 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 11],"bool"), list[2,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 11],"bool"), list[2,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 11, 11].  Tensor sizes: [2, 1, 0, 11]
2025-03-05 15:22:57.279169 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 120],"bool"), list[2,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 120],"bool"), list[2,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 120, 120].  Tensor sizes: [2, 1, 0, 120]
2025-03-05 15:22:57.279702 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,1,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,1,121,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 1, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.280222 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,10,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,10,121,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 10, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.280749 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,100,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,100,121,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 100, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.281269 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,101,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,101,121,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 101, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.281799 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,102,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,102,121,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 102, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.282334 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,103,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,103,121,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 103, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.282876 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,104,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,104,121,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 104, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.283406 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,105,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,105,121,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 105, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.283962 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,106,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,106,121,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 106, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.284643 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,107,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,107,121,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 107, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.285307 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,108,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,108,121,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 108, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.285889 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,109,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,109,121,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 109, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.286463 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,11,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,11,121,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 11, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.287065 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,110,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,110,121,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 110, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.287677 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,111,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,111,121,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 111, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.288203 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,112,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,112,121,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 112, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.288787 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,113,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,113,121,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 113, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.289530 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,114,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,114,121,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 114, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.291863 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,115,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,115,121,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 115, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.292513 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,116,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,116,121,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 116, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.293152 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,117,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,117,121,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 117, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.293796 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,118,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,118,121,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 118, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.294432 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,119,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,119,121,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 119, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.295073 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,12,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,12,121,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 12, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.295745 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,120,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,120,121,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 120, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.296365 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 121, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.296990 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,122,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,122,121,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 122, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.297623 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,123,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,123,121,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 123, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.298246 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,124,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,124,121,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 124, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.298891 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,125,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,125,121,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 125, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.299553 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,126,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,126,121,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 126, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.300197 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,127,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,127,121,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 127, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.300862 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,128,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,128,121,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 128, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.301912 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,129,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,129,121,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 129, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.302601 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,13,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,13,121,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 13, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.303253 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,130,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,130,121,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 130, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.304006 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,131,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,131,121,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 131, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.304676 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,132,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,132,121,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 132, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.305305 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,133,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,133,121,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 133, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.305947 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,134,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,134,121,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 134, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.306577 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,135,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,135,121,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 135, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.307221 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,136,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,136,121,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 136, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.307852 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,137,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,137,121,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 137, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.308478 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,138,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,138,121,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 138, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.309188 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,139,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,139,121,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 139, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.309819 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,14,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,14,121,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 14, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.310463 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,140,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,140,121,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 140, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.311094 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,141,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,141,121,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 141, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.311708 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,142,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,142,121,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 142, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.312320 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,143,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,143,121,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 143, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.312948 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,144,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,144,121,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 144, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.313575 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,145,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,145,121,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 145, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.314646 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,146,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,146,121,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 146, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.315407 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,147,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,147,121,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 147, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.316020 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,148,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,148,121,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 148, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.316717 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,149,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,149,121,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 149, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.317320 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,15,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,15,121,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 15, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.317918 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,150,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,150,121,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 150, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.318519 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,151,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,151,121,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 151, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.319118 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,152,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,152,121,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 152, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.319769 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,153,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,153,121,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 153, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.320376 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,154,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,154,121,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 154, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.320995 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,155,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,155,121,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 155, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.321704 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,156,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,156,121,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 156, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.322412 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,157,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,157,121,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 157, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.323034 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,158,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,158,121,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 158, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.323674 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,159,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,159,121,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 159, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.324286 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,16,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,16,121,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 16, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.324966 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,160,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,160,121,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 160, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.325677 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,161,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,161,121,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 161, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.326423 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,162,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,162,121,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 162, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.327107 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,163,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,163,121,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 163, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.327741 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,17,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,17,121,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 17, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.328355 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,18,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,18,121,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 18, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.328968 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,19,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,19,121,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 19, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.329597 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,2,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,2,121,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 2, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.330227 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,20,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,20,121,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 20, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.330854 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,21,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,21,121,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 21, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.331542 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,22,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,22,121,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 22, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.332443 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,23,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,23,121,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 23, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.333076 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,24,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,24,121,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 24, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.333712 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,25,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,25,121,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 25, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.334295 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,26,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,26,121,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 26, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.334842 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,27,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,27,121,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 27, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.335379 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,28,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,28,121,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 28, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.335923 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,29,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,29,121,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 29, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.336467 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,3,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,3,121,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 3, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.342676 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,30,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,30,121,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 30, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.343384 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,31,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,31,121,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 31, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.343964 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,32,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,32,121,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 32, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.344504 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,33,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,33,121,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 33, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.345098 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,34,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,34,121,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 34, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.345754 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,35,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,35,121,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 35, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.346313 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,36,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,36,121,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 36, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.347007 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,37,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,37,121,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 37, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.347564 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,38,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,38,121,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 38, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.348118 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,39,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,39,121,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 39, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.348660 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,4,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,4,121,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 4, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.349330 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,40,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,40,121,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 40, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.350048 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,41,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,41,121,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 41, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.350777 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,42,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,42,121,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 42, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.351506 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,43,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,43,121,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 43, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.352219 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,44,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,44,121,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 44, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.352790 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,45,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,45,121,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 45, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.353354 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,46,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,46,121,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 46, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.353964 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,47,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,47,121,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 47, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.360686 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,48,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,48,121,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 48, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.361307 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,49,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,49,121,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 49, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.361852 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,5,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,5,121,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 5, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.362433 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,50,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,50,121,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 50, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.363441 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,51,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,51,121,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 51, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.364055 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,52,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,52,121,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 52, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.364631 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,53,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,53,121,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 53, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.365168 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,54,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,54,121,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 54, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.366260 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,55,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,55,121,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 55, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.366953 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,56,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,56,121,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 56, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.367504 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,57,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,57,121,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 57, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.368028 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,58,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,58,121,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 58, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.368588 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,59,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,59,121,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 59, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.369162 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,6,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,6,121,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 6, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.369743 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,60,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,60,121,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 60, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.370276 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,61,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,61,121,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 61, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.370793 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,62,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,62,121,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 62, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.371322 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,63,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,63,121,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 63, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.371926 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,64,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,64,121,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 64, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.372761 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,65,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,65,121,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 65, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.373415 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,66,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,66,121,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 66, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.373959 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,67,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,67,121,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 67, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.374481 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,68,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,68,121,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 68, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.375054 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,69,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,69,121,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 69, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.375572 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,7,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,7,121,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 7, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.376095 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,70,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,70,121,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 70, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.376634 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,71,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,71,121,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 71, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.377161 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,72,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,72,121,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 72, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.377734 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,73,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,73,121,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 73, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.378258 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,74,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,74,121,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 74, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.378778 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,75,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,75,121,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 75, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.379286 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,76,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,76,121,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 76, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.379804 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,77,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,77,121,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 77, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.380326 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,78,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,78,121,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 78, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.380964 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,79,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,79,121,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 79, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.382085 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,8,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,8,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 8, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.382666 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,80,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,80,121,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 80, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.383225 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,81,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,81,121,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 81, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.383834 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,82,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,82,121,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 82, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.384391 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,83,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,83,121,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 83, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.384992 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,84,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,84,121,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 84, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.385558 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,85,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,85,121,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 85, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.386133 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,86,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,86,121,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 86, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.386725 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,87,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,87,121,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 87, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.387253 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,88,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,88,121,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 88, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.387852 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,89,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,89,121,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 89, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.388429 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,9,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,9,121,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 9, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.389078 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,90,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,90,121,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 90, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.389640 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,91,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,91,121,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 91, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.390179 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,92,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,92,121,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 92, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.390727 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,93,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,93,121,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 93, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.391268 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,94,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,94,121,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 94, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.391809 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,95,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,95,121,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 95, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.392342 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,96,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,96,121,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 96, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.392888 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,97,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,97,121,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 97, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.393412 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,98,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,98,121,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 98, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.393953 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,99,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 121],"bool"), list[2,8,99,121,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 99, 121].  Tensor sizes: [2, 1, 0, 121]
2025-03-05 15:22:57.394484 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 122],"bool"), list[2,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 122],"bool"), list[2,8,122,122,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 122, 122].  Tensor sizes: [2, 1, 0, 122]
2025-03-05 15:22:57.395031 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 123],"bool"), list[2,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 123],"bool"), list[2,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 123, 123].  Tensor sizes: [2, 1, 0, 123]
2025-03-05 15:22:57.395562 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 124],"bool"), list[2,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 124],"bool"), list[2,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 124, 124].  Tensor sizes: [2, 1, 0, 124]
2025-03-05 15:22:57.396121 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 125],"bool"), list[2,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 125],"bool"), list[2,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 125, 125].  Tensor sizes: [2, 1, 0, 125]
2025-03-05 15:22:57.396695 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 126],"bool"), list[2,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 126],"bool"), list[2,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 126, 126].  Tensor sizes: [2, 1, 0, 126]
2025-03-05 15:22:57.397241 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 127],"bool"), list[2,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 127],"bool"), list[2,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 127, 127].  Tensor sizes: [2, 1, 0, 127]
2025-03-05 15:22:57.397811 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 128],"bool"), list[2,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 128],"bool"), list[2,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 128, 128].  Tensor sizes: [2, 1, 0, 128]
2025-03-05 15:22:57.398402 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,1,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,1,129,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 1, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.398947 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,10,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,10,129,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 10, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.399495 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,100,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,100,129,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 100, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.400036 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,101,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,101,129,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 101, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.400579 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,102,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,102,129,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 102, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.401150 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,103,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,103,129,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 103, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.401692 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,104,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,104,129,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 104, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.402212 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,105,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,105,129,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 105, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.402740 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,106,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,106,129,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 106, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.403262 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,107,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,107,129,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 107, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.403877 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,108,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,108,129,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 108, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.404405 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,109,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,109,129,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 109, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.404957 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,11,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,11,129,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 11, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.405483 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,110,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,110,129,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 110, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.406042 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,111,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,111,129,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 111, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.406576 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,112,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,112,129,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 112, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.407112 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,113,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,113,129,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 113, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.407642 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,114,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,114,129,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 114, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.408180 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,115,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,115,129,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 115, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.408755 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,116,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,116,129,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 116, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.409292 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,117,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,117,129,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 117, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.409829 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,118,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,118,129,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 118, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.410360 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,119,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,119,129,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 119, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.410892 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,12,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,12,129,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 12, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.411415 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,120,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,120,129,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 120, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.411995 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,121,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,121,129,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 121, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.412522 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,122,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,122,129,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 122, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.413064 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,123,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,123,129,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 123, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.413589 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,124,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,124,129,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 124, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.414115 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,125,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,125,129,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 125, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.414630 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,126,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,126,129,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 126, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.415169 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,127,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,127,129,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 127, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.415712 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,128,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,128,129,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 128, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.416237 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 129, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.416768 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,13,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,13,129,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 13, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.417305 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,130,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,130,129,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 130, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.417896 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,131,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,131,129,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 131, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.418427 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,132,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,132,129,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 132, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.418966 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,133,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,133,129,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 133, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.419498 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,134,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,134,129,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 134, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.420030 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,135,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,135,129,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 135, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.420560 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,136,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,136,129,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 136, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.421101 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,137,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,137,129,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 137, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.421632 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,138,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,138,129,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 138, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.422164 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,139,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,139,129,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 139, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.422703 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,14,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,14,129,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 14, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.423231 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,140,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,140,129,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 140, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.423768 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,141,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,141,129,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 141, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.424288 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,142,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,142,129,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 142, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.424883 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,143,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,143,129,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 143, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.425405 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,144,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,144,129,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 144, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.425964 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,145,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,145,129,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 145, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.426563 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,146,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,146,129,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 146, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.427109 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,147,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,147,129,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 147, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.427663 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,148,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,148,129,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 148, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.428181 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,149,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,149,129,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 149, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.428704 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,15,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,15,129,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 15, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.429225 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,150,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,150,129,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 150, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.429745 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,151,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,151,129,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 151, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.430262 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,152,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,152,129,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 152, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.430783 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,153,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,153,129,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 153, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.431307 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,154,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,154,129,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 154, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.431839 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,155,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,155,129,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 155, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.432361 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,156,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,156,129,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 156, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.432883 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,157,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,157,129,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 157, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.433398 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,158,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,158,129,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 158, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.434029 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,159,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,159,129,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 159, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.435005 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,16,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,16,129,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 16, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.435672 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,160,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,160,129,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 160, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.436312 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,161,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,161,129,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 161, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.437065 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,162,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,162,129,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 162, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.439563 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,163,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,163,129,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 163, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.440591 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,164,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,164,129,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 164, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.441226 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,165,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,165,129,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 165, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.441853 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,17,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,17,129,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 17, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.442461 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,18,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,18,129,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 18, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.443080 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,19,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,19,129,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 19, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.443823 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,2,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,2,129,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 2, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.444530 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,20,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,20,129,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 20, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.445210 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,21,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,21,129,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 21, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.445918 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,22,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,22,129,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 22, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.446653 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,23,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,23,129,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 23, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.447379 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,24,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,24,129,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 24, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.448081 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,25,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,25,129,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 25, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.448784 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,26,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,26,129,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 26, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.449510 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,27,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,27,129,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 27, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.450246 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,28,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,28,129,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 28, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.450900 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,29,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,29,129,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 29, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.451462 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,3,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,3,129,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 3, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.452072 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,30,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,30,129,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 30, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.452771 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,31,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,31,129,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 31, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.453416 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,32,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,32,129,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 32, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.454058 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,33,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,33,129,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 33, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.454692 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,34,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,34,129,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 34, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.455334 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,35,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,35,129,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 35, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.455974 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,36,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,36,129,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 36, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.456613 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,37,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,37,129,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 37, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.462227 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,38,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,38,129,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 38, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.463519 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,39,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,39,129,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 39, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.464624 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,4,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,4,129,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 4, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.465956 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,40,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,40,129,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 40, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.466766 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,41,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,41,129,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 41, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.467403 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,42,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,42,129,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 42, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.469944 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,43,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,43,129,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 43, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.470771 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,44,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,44,129,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 44, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.471496 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,45,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,45,129,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 45, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.472155 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,46,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,46,129,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 46, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.472690 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,47,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,47,129,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 47, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.473217 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,48,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,48,129,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 48, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.473741 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,49,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,49,129,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 49, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.474251 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,5,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,5,129,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 5, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.474780 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,50,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,50,129,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 50, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.475306 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,51,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,51,129,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 51, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.475837 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,52,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,52,129,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 52, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.476483 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,53,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,53,129,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 53, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.477011 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,54,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,54,129,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 54, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.477522 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,55,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,55,129,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 55, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.478112 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,56,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,56,129,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 56, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.478638 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,57,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,57,129,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 57, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.479181 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,58,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,58,129,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 58, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.479704 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,59,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,59,129,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 59, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.480255 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,6,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,6,129,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 6, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.480851 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,60,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,60,129,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 60, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.481360 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,61,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,61,129,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 61, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.481872 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,62,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,62,129,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 62, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.482501 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,63,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,63,129,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 63, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.483057 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,64,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,64,129,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 64, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.483571 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,65,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,65,129,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 65, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.484163 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,66,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,66,129,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 66, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.484736 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,67,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,67,129,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 67, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.485280 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,68,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,68,129,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 68, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.485937 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,69,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,69,129,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 69, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.486577 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,7,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,7,129,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 7, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.487129 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,70,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,70,129,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 70, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.487664 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,71,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,71,129,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 71, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.488189 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,72,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,72,129,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 72, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.488709 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,73,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,73,129,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 73, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.489217 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,74,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,74,129,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 74, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.489811 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,75,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,75,129,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 75, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.490426 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,76,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,76,129,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 76, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.491068 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,77,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,77,129,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 77, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.491730 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,78,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,78,129,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 78, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.492255 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,79,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,79,129,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 79, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.492884 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,8,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,8,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 8, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.493941 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,80,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,80,129,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 80, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.494644 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,81,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,81,129,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 81, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.495182 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,82,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,82,129,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 82, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.495714 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,83,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,83,129,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 83, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.496235 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,84,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,84,129,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 84, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.496847 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,85,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,85,129,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 85, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.497367 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,86,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,86,129,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 86, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.497931 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,87,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,87,129,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 87, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.498505 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,88,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,88,129,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 88, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.499037 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,89,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,89,129,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 89, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.499551 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,9,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,9,129,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 9, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.500094 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,90,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,90,129,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 90, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.500686 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,91,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,91,129,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 91, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.501505 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,92,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,92,129,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 92, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.502087 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,93,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,93,129,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 93, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.502649 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,94,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,94,129,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 94, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.503201 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,95,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,95,129,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 95, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.503761 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,96,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,96,129,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 96, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.504366 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,97,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,97,129,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 97, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.505034 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,98,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,98,129,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 98, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.505701 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,99,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 129],"bool"), list[2,8,99,129,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 99, 129].  Tensor sizes: [2, 1, 0, 129]
2025-03-05 15:22:57.506354 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 12],"bool"), list[2,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 12],"bool"), list[2,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 12, 12].  Tensor sizes: [2, 1, 0, 12]
2025-03-05 15:22:57.507007 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 130],"bool"), list[2,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 130],"bool"), list[2,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 130, 130].  Tensor sizes: [2, 1, 0, 130]
2025-03-05 15:22:57.507600 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 131],"bool"), list[2,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 131],"bool"), list[2,8,131,131,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 131, 131].  Tensor sizes: [2, 1, 0, 131]
2025-03-05 15:22:57.508159 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 132],"bool"), list[2,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 132],"bool"), list[2,8,132,132,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 132, 132].  Tensor sizes: [2, 1, 0, 132]
2025-03-05 15:22:57.508740 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 133],"bool"), list[2,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 133],"bool"), list[2,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 133, 133].  Tensor sizes: [2, 1, 0, 133]
2025-03-05 15:22:57.509428 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 134],"bool"), list[2,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 134],"bool"), list[2,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 134, 134].  Tensor sizes: [2, 1, 0, 134]
2025-03-05 15:22:57.509974 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 135],"bool"), list[2,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 135],"bool"), list[2,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 135, 135].  Tensor sizes: [2, 1, 0, 135]
2025-03-05 15:22:57.510497 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 136],"bool"), list[2,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 136],"bool"), list[2,8,136,136,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 136, 136].  Tensor sizes: [2, 1, 0, 136]
2025-03-05 15:22:57.511027 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 137],"bool"), list[2,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 137],"bool"), list[2,8,137,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 137, 137].  Tensor sizes: [2, 1, 0, 137]
2025-03-05 15:22:57.511550 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 138],"bool"), list[2,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 138],"bool"), list[2,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 138, 138].  Tensor sizes: [2, 1, 0, 138]
2025-03-05 15:22:57.512090 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 139],"bool"), list[2,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 139],"bool"), list[2,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 139, 139].  Tensor sizes: [2, 1, 0, 139]
2025-03-05 15:22:57.512641 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 13],"bool"), list[2,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 13],"bool"), list[2,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 13, 13].  Tensor sizes: [2, 1, 0, 13]
2025-03-05 15:22:57.513180 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 140],"bool"), list[2,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 140],"bool"), list[2,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 140, 140].  Tensor sizes: [2, 1, 0, 140]
2025-03-05 15:22:57.513721 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 141],"bool"), list[2,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 141],"bool"), list[2,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 141, 141].  Tensor sizes: [2, 1, 0, 141]
2025-03-05 15:22:57.514265 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 142],"bool"), list[2,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 142],"bool"), list[2,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 142, 142].  Tensor sizes: [2, 1, 0, 142]
2025-03-05 15:22:57.514968 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 143],"bool"), list[2,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 143],"bool"), list[2,8,143,143,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 143, 143].  Tensor sizes: [2, 1, 0, 143]
2025-03-05 15:22:57.515539 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 144],"bool"), list[2,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 144],"bool"), list[2,8,144,144,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 144, 144].  Tensor sizes: [2, 1, 0, 144]
2025-03-05 15:22:57.516086 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 145],"bool"), list[2,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 145],"bool"), list[2,8,145,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 145, 145].  Tensor sizes: [2, 1, 0, 145]
2025-03-05 15:22:57.516610 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 146],"bool"), list[2,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 146],"bool"), list[2,8,146,146,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 146, 146].  Tensor sizes: [2, 1, 0, 146]
2025-03-05 15:22:57.517148 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 147],"bool"), list[2,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 147],"bool"), list[2,8,147,147,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 147, 147].  Tensor sizes: [2, 1, 0, 147]
2025-03-05 15:22:57.517689 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 148],"bool"), list[2,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 148],"bool"), list[2,8,148,148,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 148, 148].  Tensor sizes: [2, 1, 0, 148]
2025-03-05 15:22:57.518213 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 149],"bool"), list[2,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 149],"bool"), list[2,8,149,149,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 149, 149].  Tensor sizes: [2, 1, 0, 149]
2025-03-05 15:22:57.518749 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 14],"bool"), list[2,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 14],"bool"), list[2,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 14, 14].  Tensor sizes: [2, 1, 0, 14]
2025-03-05 15:22:57.519292 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 150],"bool"), list[2,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 150],"bool"), list[2,8,150,150,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 150, 150].  Tensor sizes: [2, 1, 0, 150]
2025-03-05 15:22:57.519833 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 151],"bool"), list[2,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 151],"bool"), list[2,8,151,151,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 151, 151].  Tensor sizes: [2, 1, 0, 151]
2025-03-05 15:22:57.520377 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 152],"bool"), list[2,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 152],"bool"), list[2,8,152,152,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 152, 152].  Tensor sizes: [2, 1, 0, 152]
2025-03-05 15:22:57.520928 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 153],"bool"), list[2,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 153],"bool"), list[2,8,153,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 153, 153].  Tensor sizes: [2, 1, 0, 153]
2025-03-05 15:22:57.521460 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 154],"bool"), list[2,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 154],"bool"), list[2,8,154,154,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 154, 154].  Tensor sizes: [2, 1, 0, 154]
2025-03-05 15:22:57.521995 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 155],"bool"), list[2,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 155],"bool"), list[2,8,155,155,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 155, 155].  Tensor sizes: [2, 1, 0, 155]
2025-03-05 15:22:57.522520 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 156],"bool"), list[2,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 156],"bool"), list[2,8,156,156,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 156, 156].  Tensor sizes: [2, 1, 0, 156]
2025-03-05 15:22:57.523057 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 157],"bool"), list[2,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 157],"bool"), list[2,8,157,157,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 157, 157].  Tensor sizes: [2, 1, 0, 157]
2025-03-05 15:22:57.523727 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 158],"bool"), list[2,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 158],"bool"), list[2,8,158,158,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 158, 158].  Tensor sizes: [2, 1, 0, 158]
2025-03-05 15:22:57.524460 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 159],"bool"), list[2,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 159],"bool"), list[2,8,159,159,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 159, 159].  Tensor sizes: [2, 1, 0, 159]
2025-03-05 15:22:57.525172 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 15],"bool"), list[2,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 15],"bool"), list[2,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 15, 15].  Tensor sizes: [2, 1, 0, 15]
2025-03-05 15:22:57.525799 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 160],"bool"), list[2,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 160],"bool"), list[2,8,160,160,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 160, 160].  Tensor sizes: [2, 1, 0, 160]
2025-03-05 15:22:57.526422 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,1,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,1,161,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 1, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.527066 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,10,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,10,161,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 10, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.527603 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,100,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,100,161,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 100, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.528165 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,101,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,101,161,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 101, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.528695 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,102,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,102,161,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 102, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.529217 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,103,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,103,161,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 103, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.529744 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,104,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,104,161,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 104, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.530387 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,105,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,105,161,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 105, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.531017 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,106,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,106,161,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 106, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.531560 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,107,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,107,161,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 107, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.532088 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,108,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,108,161,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 108, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.532594 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,109,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,109,161,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 109, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.533112 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,11,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,11,161,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 11, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.533631 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,110,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,110,161,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 110, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.534143 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,111,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,111,161,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 111, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.534659 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,112,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,112,161,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 112, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.535165 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,113,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,113,161,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 113, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.535750 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,114,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,114,161,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 114, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.536278 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,115,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,115,161,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 115, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.536827 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,116,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,116,161,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 116, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.537364 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,117,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,117,161,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 117, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.537895 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,118,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,118,161,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 118, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.538438 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,119,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,119,161,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 119, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.538969 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,12,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,12,161,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 12, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.539502 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,120,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,120,161,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 120, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.540037 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,121,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,121,161,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 121, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.540561 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,122,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,122,161,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 122, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.541083 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,123,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,123,161,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 123, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.541628 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,124,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,124,161,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 124, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.542180 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,125,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,125,161,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 125, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.542713 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,126,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,126,161,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 126, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.543236 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,127,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,127,161,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 127, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.543768 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,128,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,128,161,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 128, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.544285 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,129,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,129,161,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 129, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.544824 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,13,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,13,161,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 13, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.545347 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,130,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,130,161,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 130, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.545862 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,131,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,131,161,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 131, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.546384 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,132,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,132,161,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 132, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.546933 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,133,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,133,161,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 133, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.547454 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,134,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,134,161,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 134, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.547977 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,135,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,135,161,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 135, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.548519 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,14,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,14,161,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 14, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.549098 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,15,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,15,161,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 15, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.549622 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,16,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,16,161,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 16, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.550141 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,161,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 161, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.550658 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,17,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,17,161,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 17, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.551176 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,18,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,18,161,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 18, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.551695 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,19,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,19,161,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 19, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.552203 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,2,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,2,161,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 2, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.552737 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,20,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,20,161,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 20, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.553267 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,21,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,21,161,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 21, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.553797 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,22,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,22,161,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 22, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.554314 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,23,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,23,161,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 23, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.554835 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,24,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,24,161,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 24, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.555341 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,25,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,25,161,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 25, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.555852 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,26,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,26,161,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 26, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.556371 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,27,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,27,161,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 27, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.556898 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,28,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,28,161,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 28, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.557406 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,29,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,29,161,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 29, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.557923 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,3,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,3,161,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 3, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.558423 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,30,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,30,161,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 30, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.559781 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,31,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,31,161,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 31, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.560381 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,32,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,32,161,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 32, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.560945 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,33,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,33,161,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 33, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.561473 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,34,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,34,161,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 34, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.562059 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,35,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,35,161,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 35, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.562568 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,36,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,36,161,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 36, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.563107 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,37,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,37,161,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 37, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.563628 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,38,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,38,161,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 38, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.564154 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,39,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,39,161,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 39, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.564671 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,4,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,4,161,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 4, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.565196 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,40,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,40,161,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 40, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.565717 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,41,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,41,161,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 41, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.566237 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,42,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,42,161,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 42, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.566807 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,43,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,43,161,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 43, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.567329 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,44,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,44,161,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 44, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.567857 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,45,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,45,161,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 45, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.568528 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,46,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,46,161,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 46, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.569111 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,47,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,47,161,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 47, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.569648 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,48,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,48,161,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 48, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.570198 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,49,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,49,161,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 49, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.570730 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,5,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,5,161,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 5, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.571243 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,50,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,50,161,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 50, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.571776 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,51,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,51,161,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 51, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.572294 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,52,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,52,161,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 52, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.572821 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,53,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,53,161,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 53, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.573325 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,54,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,54,161,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 54, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.573849 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,55,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,55,161,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 55, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.574430 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,56,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,56,161,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 56, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.575007 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,57,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,57,161,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 57, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.575523 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,58,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,58,161,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 58, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.576058 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,59,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,59,161,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 59, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.576554 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,6,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,6,161,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 6, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.577084 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,60,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,60,161,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 60, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.577599 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,61,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,61,161,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 61, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.578116 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,62,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,62,161,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 62, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.578625 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,63,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,63,161,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 63, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.579161 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,64,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,64,161,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 64, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.579683 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,65,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,65,161,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 65, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.580195 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,66,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,66,161,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 66, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.580755 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,67,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,67,161,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 67, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.581269 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,68,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,68,161,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 68, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.581799 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,69,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,69,161,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 69, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.582337 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,7,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,7,161,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 7, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.582865 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,70,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,70,161,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 70, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.583382 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,71,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,71,161,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 71, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.583920 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,72,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,72,161,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 72, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.584431 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,73,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,73,161,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 73, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.584959 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,74,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,74,161,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 74, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.585494 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,75,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,75,161,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 75, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.586032 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,76,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,76,161,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 76, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.586556 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,77,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,77,161,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 77, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.587079 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,78,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,78,161,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 78, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.587602 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,79,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,79,161,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 79, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.588144 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,8,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,8,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 8, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.588739 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,80,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,80,161,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 80, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.589265 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,81,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,81,161,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 81, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.589795 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,82,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,82,161,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 82, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.590317 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,83,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,83,161,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 83, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.590841 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,84,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,84,161,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 84, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.591360 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,85,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,85,161,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 85, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.591880 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,86,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,86,161,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 86, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.592398 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,87,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,87,161,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 87, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.592968 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,88,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,88,161,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 88, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.593483 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,89,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,89,161,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 89, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.594020 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,9,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,9,161,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 9, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.594536 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,90,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,90,161,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 90, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.595056 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,91,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,91,161,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 91, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.595567 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,92,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,92,161,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 92, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.596081 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,93,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,93,161,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 93, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.596610 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,94,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,94,161,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 94, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.597122 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,95,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,95,161,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 95, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.597667 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,96,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,96,161,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 96, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.598182 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,97,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,97,161,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 97, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.598697 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,98,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,98,161,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 98, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.599208 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,99,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 161],"bool"), list[2,8,99,161,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 99, 161].  Tensor sizes: [2, 1, 0, 161]
2025-03-05 15:22:57.599712 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 162],"bool"), list[2,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 162],"bool"), list[2,8,162,162,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 162, 162].  Tensor sizes: [2, 1, 0, 162]
2025-03-05 15:22:57.600231 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 163],"bool"), list[2,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 163],"bool"), list[2,8,163,163,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 163, 163].  Tensor sizes: [2, 1, 0, 163]
2025-03-05 15:22:57.600806 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 164],"bool"), list[2,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 164],"bool"), list[2,8,164,164,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 164, 164].  Tensor sizes: [2, 1, 0, 164]
2025-03-05 15:22:57.601311 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 165],"bool"), list[2,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 165],"bool"), list[2,8,165,165,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 165, 165].  Tensor sizes: [2, 1, 0, 165]
2025-03-05 15:22:57.601864 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 166],"bool"), list[2,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 166],"bool"), list[2,8,166,166,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 166, 166].  Tensor sizes: [2, 1, 0, 166]
2025-03-05 15:22:57.602397 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 167],"bool"), list[2,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 167],"bool"), list[2,8,167,167,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 167, 167].  Tensor sizes: [2, 1, 0, 167]
2025-03-05 15:22:57.602928 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 168],"bool"), list[2,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 168],"bool"), list[2,8,168,168,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 168, 168].  Tensor sizes: [2, 1, 0, 168]
2025-03-05 15:22:57.603883 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 169],"bool"), list[2,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 169],"bool"), list[2,8,169,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 169, 169].  Tensor sizes: [2, 1, 0, 169]
2025-03-05 15:22:57.604545 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 16],"bool"), list[2,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 16],"bool"), list[2,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 16, 16].  Tensor sizes: [2, 1, 0, 16]
2025-03-05 15:22:57.605206 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 170],"bool"), list[2,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 170],"bool"), list[2,8,170,170,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 170, 170].  Tensor sizes: [2, 1, 0, 170]
2025-03-05 15:22:57.605858 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 171],"bool"), list[2,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 171],"bool"), list[2,8,171,171,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 171, 171].  Tensor sizes: [2, 1, 0, 171]
2025-03-05 15:22:57.606758 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 172],"bool"), list[2,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 172],"bool"), list[2,8,172,172,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 172, 172].  Tensor sizes: [2, 1, 0, 172]
2025-03-05 15:22:57.607470 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 173],"bool"), list[2,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 173],"bool"), list[2,8,173,173,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 173, 173].  Tensor sizes: [2, 1, 0, 173]
2025-03-05 15:22:57.610064 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 174],"bool"), list[2,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 174],"bool"), list[2,8,174,174,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 174, 174].  Tensor sizes: [2, 1, 0, 174]
2025-03-05 15:22:57.611448 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 175],"bool"), list[2,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 175],"bool"), list[2,8,175,175,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 175, 175].  Tensor sizes: [2, 1, 0, 175]
2025-03-05 15:22:57.612131 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 176],"bool"), list[2,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 176],"bool"), list[2,8,176,176,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 176, 176].  Tensor sizes: [2, 1, 0, 176]
2025-03-05 15:22:57.612792 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 177],"bool"), list[2,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 177],"bool"), list[2,8,177,177,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 177, 177].  Tensor sizes: [2, 1, 0, 177]
2025-03-05 15:22:57.613553 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 178],"bool"), list[2,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 178],"bool"), list[2,8,178,178,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 178, 178].  Tensor sizes: [2, 1, 0, 178]
2025-03-05 15:22:57.614305 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 179],"bool"), list[2,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 179],"bool"), list[2,8,179,179,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 179, 179].  Tensor sizes: [2, 1, 0, 179]
2025-03-05 15:22:57.615150 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,1,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,1,17,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 1, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.616119 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,10,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,10,17,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 10, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.616894 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,11,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,11,17,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 11, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.617660 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,12,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,12,17,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 12, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.618397 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,13,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,13,17,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 13, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.619183 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,14,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,14,17,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 14, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.620101 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,15,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,15,17,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 15, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.620758 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,16,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,16,17,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 16, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.621305 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 17, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.621835 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,18,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,18,17,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 18, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.622363 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,19,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,19,17,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 19, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.622892 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,2,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,2,17,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 2, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.623418 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,20,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,20,17,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 20, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.623947 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,21,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,21,17,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 21, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.624463 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,22,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,22,17,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 22, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.624983 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,23,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,23,17,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 23, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.625678 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,24,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,24,17,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 24, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.626255 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,25,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,25,17,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 25, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.626791 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,26,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,26,17,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 26, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.627511 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,27,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,27,17,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 27, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.628112 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,28,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,28,17,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 28, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.628660 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,29,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,29,17,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 29, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.629180 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,3,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,3,17,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 3, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.629706 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,30,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,30,17,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 30, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.630215 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,31,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,31,17,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 31, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.630760 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,32,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,32,17,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 32, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.631360 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,33,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,33,17,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 33, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.631906 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,34,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,34,17,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 34, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.632431 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,35,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,35,17,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 35, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.633047 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,4,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,4,17,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 4, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.633557 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,5,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,5,17,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 5, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.634091 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,6,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,6,17,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 6, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.634624 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,7,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,7,17,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 7, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.635183 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,8,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,8,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 8, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.635733 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,9,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 17],"bool"), list[2,8,9,17,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 9, 17].  Tensor sizes: [2, 1, 0, 17]
2025-03-05 15:22:57.636246 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 180],"bool"), list[2,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 180],"bool"), list[2,8,180,180,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 180, 180].  Tensor sizes: [2, 1, 0, 180]
2025-03-05 15:22:57.636773 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,1,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,1,181,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 1, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.637284 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,10,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,10,181,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 10, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.637860 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,100,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,100,181,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 100, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.638398 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,101,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,101,181,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 101, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.638924 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,102,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,102,181,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 102, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.639447 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,103,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,103,181,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 103, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.639971 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,104,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,104,181,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 104, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.640476 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,105,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,105,181,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 105, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.641011 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,106,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,106,181,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 106, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.641519 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,107,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,107,181,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 107, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.642084 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,108,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,108,181,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 108, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.642607 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,109,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,109,181,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 109, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.643128 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,11,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,11,181,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 11, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.643680 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,110,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,110,181,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 110, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.644218 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,111,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,111,181,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 111, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.644750 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,112,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,112,181,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 112, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.645265 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,113,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,113,181,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 113, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.645791 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,114,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,114,181,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 114, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.646328 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,115,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,115,181,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 115, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.646873 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,116,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,116,181,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 116, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.647392 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,117,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,117,181,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 117, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.647915 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,118,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,118,181,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 118, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.648443 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,119,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,119,181,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 119, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.649021 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,12,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,12,181,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 12, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.649544 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,120,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,120,181,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 120, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.650071 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,121,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,121,181,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 121, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.650597 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,122,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,122,181,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 122, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.651130 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,123,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,123,181,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 123, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.651768 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,124,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,124,181,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 124, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.652302 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,125,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,125,181,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 125, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.652835 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,126,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,126,181,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 126, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.653395 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,127,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,127,181,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 127, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.654006 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,128,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,128,181,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 128, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.654537 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,129,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,129,181,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 129, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.655067 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,13,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,13,181,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 13, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.655576 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,130,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,130,181,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 130, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.656133 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,131,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,131,181,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 131, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.656655 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,132,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,132,181,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 132, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.657172 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,133,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,133,181,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 133, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.657687 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,134,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,134,181,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 134, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.658197 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,135,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,135,181,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 135, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.658722 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,136,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,136,181,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 136, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.659236 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,137,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,137,181,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 137, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.659757 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,138,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,138,181,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 138, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.660361 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,139,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,139,181,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 139, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.661268 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,14,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,14,181,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 14, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.661945 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,140,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,140,181,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 140, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.662597 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,141,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,141,181,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 141, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.663261 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,142,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,142,181,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 142, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.663904 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,143,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,143,181,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 143, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.664802 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,144,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,144,181,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 144, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.665394 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,145,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,145,181,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 145, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.665986 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,146,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,146,181,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 146, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.666536 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,147,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,147,181,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 147, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.667213 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,148,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,148,181,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 148, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.667833 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,149,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,149,181,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 149, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.668387 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,15,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,15,181,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 15, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.668935 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,150,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,150,181,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 150, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.669522 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,151,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,151,181,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 151, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.670122 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,152,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,152,181,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 152, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.670677 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,153,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,153,181,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 153, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.671230 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,154,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,154,181,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 154, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.671775 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,155,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,155,181,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 155, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.672315 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,156,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,156,181,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 156, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.672850 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,157,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,157,181,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 157, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.673383 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,158,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,158,181,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 158, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.673941 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,159,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,159,181,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 159, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.674475 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,16,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,16,181,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 16, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.675021 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,160,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,160,181,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 160, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.675561 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,161,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,161,181,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 161, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.676107 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,162,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,162,181,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 162, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.676649 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,163,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,163,181,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 163, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.677184 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,164,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,164,181,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 164, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.677724 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,165,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,165,181,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 165, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.678252 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,166,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,166,181,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 166, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.678789 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,167,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,167,181,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 167, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.679389 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,168,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,168,181,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 168, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.680060 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,169,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,169,181,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 169, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.680639 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,17,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,17,181,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 17, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.681191 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,170,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,170,181,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 170, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.681727 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,171,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,171,181,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 171, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.682262 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,172,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,172,181,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 172, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.682793 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,173,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,173,181,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 173, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.683314 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,174,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,174,181,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 174, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.683858 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,175,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,175,181,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 175, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.684386 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,176,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,176,181,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 176, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.684923 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,177,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,177,181,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 177, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.688344 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,178,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,178,181,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 178, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.689366 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,179,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,179,181,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 179, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.689909 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,18,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,18,181,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 18, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.690429 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,180,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,180,181,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 180, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.690969 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,181,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,181,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 181, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.691492 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,182,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,182,181,], ) 
 The expanded size of the tensor (182) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 182, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.692038 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,183,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,183,181,], ) 
 The expanded size of the tensor (183) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 183, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.692927 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,184,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,184,181,], ) 
 The expanded size of the tensor (184) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 184, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.693637 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,185,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,185,181,], ) 
 The expanded size of the tensor (185) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 185, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.694183 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,186,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,186,181,], ) 
 The expanded size of the tensor (186) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 186, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.694725 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,187,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,187,181,], ) 
 The expanded size of the tensor (187) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 187, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.695297 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,188,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,188,181,], ) 
 The expanded size of the tensor (188) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 188, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.695834 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,189,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,189,181,], ) 
 The expanded size of the tensor (189) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 189, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.696355 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,19,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,19,181,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 19, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.696889 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,190,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,190,181,], ) 
 The expanded size of the tensor (190) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 190, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.697567 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,191,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,191,181,], ) 
 The expanded size of the tensor (191) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 191, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.698195 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,192,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,192,181,], ) 
 The expanded size of the tensor (192) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 192, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.698851 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,193,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,193,181,], ) 
 The expanded size of the tensor (193) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 193, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.699376 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,194,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,194,181,], ) 
 The expanded size of the tensor (194) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 194, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.699932 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,195,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,195,181,], ) 
 The expanded size of the tensor (195) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 195, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.700670 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,196,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,196,181,], ) 
 The expanded size of the tensor (196) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 196, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.701300 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,197,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,197,181,], ) 
 The expanded size of the tensor (197) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 197, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.701909 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,198,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,198,181,], ) 
 The expanded size of the tensor (198) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 198, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.702513 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,199,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,199,181,], ) 
 The expanded size of the tensor (199) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 199, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.703126 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,2,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,2,181,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 2, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.703728 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,20,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,20,181,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 20, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.704334 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,200,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,200,181,], ) 
 The expanded size of the tensor (200) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 200, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.704908 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,201,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,201,181,], ) 
 The expanded size of the tensor (201) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 201, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.705443 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,202,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,202,181,], ) 
 The expanded size of the tensor (202) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 202, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.705944 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,203,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,203,181,], ) 
 The expanded size of the tensor (203) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 203, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.706462 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,204,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,204,181,], ) 
 The expanded size of the tensor (204) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 204, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.706980 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,205,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,205,181,], ) 
 The expanded size of the tensor (205) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 205, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.707488 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,206,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,206,181,], ) 
 The expanded size of the tensor (206) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 206, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.708198 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,207,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,207,181,], ) 
 The expanded size of the tensor (207) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 207, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.708816 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,208,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,208,181,], ) 
 The expanded size of the tensor (208) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 208, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.709406 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,209,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,209,181,], ) 
 The expanded size of the tensor (209) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 209, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.710006 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,21,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,21,181,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 21, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.710611 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,22,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,22,181,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 22, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.711221 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,23,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,23,181,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 23, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.711829 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,24,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,24,181,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 24, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.712542 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,25,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,25,181,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 25, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.713201 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,26,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,26,181,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 26, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.713750 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,27,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,27,181,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 27, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.714275 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,28,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,28,181,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 28, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.714792 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,29,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,29,181,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 29, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.715305 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,3,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,3,181,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 3, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.715825 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,30,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,30,181,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 30, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.716341 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,31,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,31,181,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 31, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.716861 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,32,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,32,181,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 32, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.717368 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,33,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,33,181,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 33, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.717911 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,34,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,34,181,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 34, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.718426 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,35,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,35,181,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 35, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.718945 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,36,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,36,181,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 36, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.719459 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,37,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,37,181,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 37, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.720055 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,38,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,38,181,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 38, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.720592 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,39,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,39,181,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 39, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.721124 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,4,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,4,181,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 4, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.721650 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,40,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,40,181,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 40, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.722178 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,41,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,41,181,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 41, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.722727 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,42,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,42,181,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 42, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.723278 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,43,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,43,181,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 43, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.723806 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,44,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,44,181,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 44, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.724341 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,45,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,45,181,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 45, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.724865 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,46,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,46,181,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 46, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.725382 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,47,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,47,181,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 47, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.726764 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,48,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,48,181,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 48, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.727336 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,49,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,49,181,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 49, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.727882 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,5,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,5,181,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 5, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.728436 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,50,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,50,181,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 50, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.728987 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,51,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,51,181,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 51, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.729512 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,52,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,52,181,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 52, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.730038 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,53,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,53,181,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 53, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.730550 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,54,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,54,181,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 54, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.731088 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,55,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,55,181,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 55, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.731602 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,56,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,56,181,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 56, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.732124 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,57,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,57,181,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 57, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.732645 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,58,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,58,181,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 58, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.733205 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,59,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,59,181,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 59, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.733734 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,6,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,6,181,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 6, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.734260 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,60,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,60,181,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 60, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.734839 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,61,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,61,181,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 61, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.735346 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,62,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,62,181,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 62, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.735859 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,63,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,63,181,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 63, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.736362 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,64,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,64,181,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 64, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.736888 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,65,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,65,181,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 65, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.737403 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,66,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,66,181,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 66, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.737910 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,67,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,67,181,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 67, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.738421 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,68,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,68,181,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 68, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.738973 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,69,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,69,181,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 69, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.743011 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,7,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,7,181,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 7, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.743554 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,70,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,70,181,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 70, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.744080 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,71,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,71,181,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 71, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.744598 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,72,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,72,181,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 72, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.745112 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,73,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,73,181,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 73, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.745628 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,74,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,74,181,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 74, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.746150 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,75,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,75,181,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 75, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.746703 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,76,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,76,181,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 76, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.747233 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,77,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,77,181,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 77, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.747772 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,78,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,78,181,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 78, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.748297 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,79,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,79,181,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 79, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.748902 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,8,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,8,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 8, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.749416 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,80,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,80,181,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 80, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.749939 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,81,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,81,181,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 81, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.750462 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,82,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,82,181,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 82, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.750979 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,83,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,83,181,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 83, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.751483 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,84,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,84,181,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 84, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.751998 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,85,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,85,181,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 85, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.752513 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,86,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,86,181,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 86, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.753041 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,87,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,87,181,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 87, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.753545 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,88,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,88,181,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 88, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.754065 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,89,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,89,181,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 89, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.754576 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,9,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,9,181,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 9, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.755090 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,90,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,90,181,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 90, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.755601 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,91,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,91,181,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 91, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.756123 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,92,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,92,181,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 92, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.756652 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,93,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,93,181,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 93, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.757184 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,94,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,94,181,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 94, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.757713 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,95,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,95,181,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 95, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.758231 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,96,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,96,181,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 96, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.758795 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,97,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,97,181,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 97, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.759313 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,98,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,98,181,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 98, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.759895 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,99,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 181],"bool"), list[2,8,99,181,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 99, 181].  Tensor sizes: [2, 1, 0, 181]
2025-03-05 15:22:57.760410 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 182],"bool"), list[2,8,182,182,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 182],"bool"), list[2,8,182,182,], ) 
 The expanded size of the tensor (182) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 182, 182].  Tensor sizes: [2, 1, 0, 182]
2025-03-05 15:22:57.760930 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 183],"bool"), list[2,8,183,183,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 183],"bool"), list[2,8,183,183,], ) 
 The expanded size of the tensor (183) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 183, 183].  Tensor sizes: [2, 1, 0, 183]
2025-03-05 15:22:57.761439 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 184],"bool"), list[2,8,184,184,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 184],"bool"), list[2,8,184,184,], ) 
 The expanded size of the tensor (184) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 184, 184].  Tensor sizes: [2, 1, 0, 184]
2025-03-05 15:22:57.761961 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 185],"bool"), list[2,8,185,185,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 185],"bool"), list[2,8,185,185,], ) 
 The expanded size of the tensor (185) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 185, 185].  Tensor sizes: [2, 1, 0, 185]
2025-03-05 15:22:57.762499 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 186],"bool"), list[2,8,186,186,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 186],"bool"), list[2,8,186,186,], ) 
 The expanded size of the tensor (186) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 186, 186].  Tensor sizes: [2, 1, 0, 186]
2025-03-05 15:22:57.763019 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 187],"bool"), list[2,8,187,187,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 187],"bool"), list[2,8,187,187,], ) 
 The expanded size of the tensor (187) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 187, 187].  Tensor sizes: [2, 1, 0, 187]
2025-03-05 15:22:57.763526 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 188],"bool"), list[2,8,188,188,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 188],"bool"), list[2,8,188,188,], ) 
 The expanded size of the tensor (188) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 188, 188].  Tensor sizes: [2, 1, 0, 188]
2025-03-05 15:22:57.764062 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 189],"bool"), list[2,8,189,189,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 189],"bool"), list[2,8,189,189,], ) 
 The expanded size of the tensor (189) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 189, 189].  Tensor sizes: [2, 1, 0, 189]
2025-03-05 15:22:57.764560 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 18],"bool"), list[2,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 18],"bool"), list[2,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 18, 18].  Tensor sizes: [2, 1, 0, 18]
2025-03-05 15:22:57.765092 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 190],"bool"), list[2,8,190,190,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 190],"bool"), list[2,8,190,190,], ) 
 The expanded size of the tensor (190) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 190, 190].  Tensor sizes: [2, 1, 0, 190]
2025-03-05 15:22:57.765611 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 191],"bool"), list[2,8,191,191,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 191],"bool"), list[2,8,191,191,], ) 
 The expanded size of the tensor (191) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 191, 191].  Tensor sizes: [2, 1, 0, 191]
2025-03-05 15:22:57.766147 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 192],"bool"), list[2,8,192,192,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 192],"bool"), list[2,8,192,192,], ) 
 The expanded size of the tensor (192) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 192, 192].  Tensor sizes: [2, 1, 0, 192]
2025-03-05 15:22:57.766668 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 193],"bool"), list[2,8,193,193,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 193],"bool"), list[2,8,193,193,], ) 
 The expanded size of the tensor (193) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 193, 193].  Tensor sizes: [2, 1, 0, 193]
2025-03-05 15:22:57.767184 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 194],"bool"), list[2,8,194,194,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 194],"bool"), list[2,8,194,194,], ) 
 The expanded size of the tensor (194) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 194, 194].  Tensor sizes: [2, 1, 0, 194]
2025-03-05 15:22:57.767699 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 195],"bool"), list[2,8,195,195,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 195],"bool"), list[2,8,195,195,], ) 
 The expanded size of the tensor (195) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 195, 195].  Tensor sizes: [2, 1, 0, 195]
2025-03-05 15:22:57.768204 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 196],"bool"), list[2,8,196,196,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 196],"bool"), list[2,8,196,196,], ) 
 The expanded size of the tensor (196) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 196, 196].  Tensor sizes: [2, 1, 0, 196]
2025-03-05 15:22:57.768725 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 197],"bool"), list[2,8,197,197,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 197],"bool"), list[2,8,197,197,], ) 
 The expanded size of the tensor (197) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 197, 197].  Tensor sizes: [2, 1, 0, 197]
2025-03-05 15:22:57.769237 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 198],"bool"), list[2,8,198,198,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 198],"bool"), list[2,8,198,198,], ) 
 The expanded size of the tensor (198) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 198, 198].  Tensor sizes: [2, 1, 0, 198]
2025-03-05 15:22:57.769770 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 199],"bool"), list[2,8,199,199,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 199],"bool"), list[2,8,199,199,], ) 
 The expanded size of the tensor (199) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 199, 199].  Tensor sizes: [2, 1, 0, 199]
2025-03-05 15:22:57.770311 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 19],"bool"), list[2,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 19],"bool"), list[2,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 19, 19].  Tensor sizes: [2, 1, 0, 19]
2025-03-05 15:22:57.770828 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 1],"bool"), list[2,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 1],"bool"), list[2,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 1, 1].  Tensor sizes: [2, 1, 0, 1]
2025-03-05 15:22:57.771358 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 200],"bool"), list[2,8,200,200,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 200],"bool"), list[2,8,200,200,], ) 
 The expanded size of the tensor (200) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 200, 200].  Tensor sizes: [2, 1, 0, 200]
2025-03-05 15:22:57.771880 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 201],"bool"), list[2,8,201,201,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 201],"bool"), list[2,8,201,201,], ) 
 The expanded size of the tensor (201) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 201, 201].  Tensor sizes: [2, 1, 0, 201]
2025-03-05 15:22:57.772395 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 202],"bool"), list[2,8,202,202,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 202],"bool"), list[2,8,202,202,], ) 
 The expanded size of the tensor (202) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 202, 202].  Tensor sizes: [2, 1, 0, 202]
2025-03-05 15:22:57.772922 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 203],"bool"), list[2,8,203,203,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 203],"bool"), list[2,8,203,203,], ) 
 The expanded size of the tensor (203) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 203, 203].  Tensor sizes: [2, 1, 0, 203]
2025-03-05 15:22:57.773442 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 204],"bool"), list[2,8,204,204,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 204],"bool"), list[2,8,204,204,], ) 
 The expanded size of the tensor (204) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 204, 204].  Tensor sizes: [2, 1, 0, 204]
2025-03-05 15:22:57.773962 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 205],"bool"), list[2,8,205,205,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 205],"bool"), list[2,8,205,205,], ) 
 The expanded size of the tensor (205) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 205, 205].  Tensor sizes: [2, 1, 0, 205]
2025-03-05 15:22:57.774467 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 206],"bool"), list[2,8,206,206,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 206],"bool"), list[2,8,206,206,], ) 
 The expanded size of the tensor (206) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 206, 206].  Tensor sizes: [2, 1, 0, 206]
2025-03-05 15:22:57.778407 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 207],"bool"), list[2,8,207,207,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 207],"bool"), list[2,8,207,207,], ) 
 The expanded size of the tensor (207) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 207, 207].  Tensor sizes: [2, 1, 0, 207]
2025-03-05 15:22:57.779471 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 208],"bool"), list[2,8,208,208,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 208],"bool"), list[2,8,208,208,], ) 
 The expanded size of the tensor (208) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 208, 208].  Tensor sizes: [2, 1, 0, 208]
2025-03-05 15:22:57.780016 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 209],"bool"), list[2,8,209,209,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 209],"bool"), list[2,8,209,209,], ) 
 The expanded size of the tensor (209) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 209, 209].  Tensor sizes: [2, 1, 0, 209]
2025-03-05 15:22:57.780524 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 20],"bool"), list[2,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 20],"bool"), list[2,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 20, 20].  Tensor sizes: [2, 1, 0, 20]
2025-03-05 15:22:57.781036 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 21],"bool"), list[2,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 21],"bool"), list[2,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 21, 21].  Tensor sizes: [2, 1, 0, 21]
2025-03-05 15:22:57.781536 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 22],"bool"), list[2,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 22],"bool"), list[2,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 22, 22].  Tensor sizes: [2, 1, 0, 22]
2025-03-05 15:22:57.782062 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 23],"bool"), list[2,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 23],"bool"), list[2,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 23, 23].  Tensor sizes: [2, 1, 0, 23]
2025-03-05 15:22:57.782568 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 24],"bool"), list[2,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 24],"bool"), list[2,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 24, 24].  Tensor sizes: [2, 1, 0, 24]
2025-03-05 15:22:57.783083 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 25],"bool"), list[2,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 25],"bool"), list[2,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 25, 25].  Tensor sizes: [2, 1, 0, 25]
2025-03-05 15:22:57.783600 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 26],"bool"), list[2,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 26],"bool"), list[2,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 26, 26].  Tensor sizes: [2, 1, 0, 26]
2025-03-05 15:22:57.784118 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 27],"bool"), list[2,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 27],"bool"), list[2,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 27, 27].  Tensor sizes: [2, 1, 0, 27]
2025-03-05 15:22:57.784630 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 28],"bool"), list[2,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 28],"bool"), list[2,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 28, 28].  Tensor sizes: [2, 1, 0, 28]
2025-03-05 15:22:57.785156 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 29],"bool"), list[2,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 29],"bool"), list[2,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 29, 29].  Tensor sizes: [2, 1, 0, 29]
2025-03-05 15:22:57.785691 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 2],"bool"), list[2,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 2],"bool"), list[2,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 2, 2].  Tensor sizes: [2, 1, 0, 2]
2025-03-05 15:22:57.786201 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 30],"bool"), list[2,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 30],"bool"), list[2,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 30, 30].  Tensor sizes: [2, 1, 0, 30]
2025-03-05 15:22:57.786722 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 31],"bool"), list[2,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 31],"bool"), list[2,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 31, 31].  Tensor sizes: [2, 1, 0, 31]
2025-03-05 15:22:57.787228 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 32],"bool"), list[2,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 32],"bool"), list[2,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 32, 32].  Tensor sizes: [2, 1, 0, 32]
2025-03-05 15:22:57.787746 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 33],"bool"), list[2,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 33],"bool"), list[2,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 33, 33].  Tensor sizes: [2, 1, 0, 33]
2025-03-05 15:22:57.788259 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 34],"bool"), list[2,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 34],"bool"), list[2,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 34, 34].  Tensor sizes: [2, 1, 0, 34]
2025-03-05 15:22:57.788779 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 35],"bool"), list[2,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 35],"bool"), list[2,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 35, 35].  Tensor sizes: [2, 1, 0, 35]
2025-03-05 15:22:57.789295 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 36],"bool"), list[2,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 36],"bool"), list[2,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 36, 36].  Tensor sizes: [2, 1, 0, 36]
2025-03-05 15:22:57.789839 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 37],"bool"), list[2,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 37],"bool"), list[2,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 37, 37].  Tensor sizes: [2, 1, 0, 37]
2025-03-05 15:22:57.790388 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 38],"bool"), list[2,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 38],"bool"), list[2,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 38, 38].  Tensor sizes: [2, 1, 0, 38]
2025-03-05 15:22:57.790916 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 39],"bool"), list[2,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 39],"bool"), list[2,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 39, 39].  Tensor sizes: [2, 1, 0, 39]
2025-03-05 15:22:57.791425 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 3],"bool"), list[2,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 3],"bool"), list[2,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 3, 3].  Tensor sizes: [2, 1, 0, 3]
2025-03-05 15:22:57.791958 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 40],"bool"), list[2,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 40],"bool"), list[2,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 40, 40].  Tensor sizes: [2, 1, 0, 40]
2025-03-05 15:22:57.792510 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,1,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,1,41,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 1, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.793045 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,10,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,10,41,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 10, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.793558 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,11,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,11,41,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 11, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.794082 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,12,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,12,41,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 12, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.794646 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,13,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,13,41,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 13, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.795184 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,14,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,14,41,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 14, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.795712 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,15,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,15,41,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 15, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.796232 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,16,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,16,41,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 16, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.796751 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,17,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,17,41,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 17, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.797260 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,18,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,18,41,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 18, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.797789 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,19,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,19,41,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 19, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.798314 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,2,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,2,41,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 2, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.798832 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,20,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,20,41,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 20, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.799339 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,21,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,21,41,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 21, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.799850 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,22,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,22,41,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 22, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.800356 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,23,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,23,41,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 23, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.800946 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,24,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,24,41,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 24, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.801473 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,25,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,25,41,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 25, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.802047 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,26,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,26,41,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 26, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.803845 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,27,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,27,41,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 27, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.804374 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,28,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,28,41,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 28, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.804900 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,29,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,29,41,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 29, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.805415 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,3,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,3,41,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 3, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.805934 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,30,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,30,41,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 30, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.806442 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,31,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,31,41,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 31, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.806962 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,32,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,32,41,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 32, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.807467 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,33,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,33,41,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 33, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.807992 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,34,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,34,41,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 34, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.808496 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,35,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,35,41,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 35, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.809010 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,36,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,36,41,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 36, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.809517 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,37,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,37,41,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 37, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.810027 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,38,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,38,41,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 38, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.810536 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,39,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,39,41,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 39, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.811054 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,4,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,4,41,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 4, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.811573 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,40,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,40,41,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 40, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.812142 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 41, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.812730 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,42,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,42,41,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 42, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.813313 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,43,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,43,41,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 43, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.813849 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,44,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,44,41,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 44, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.814377 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,45,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,45,41,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 45, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.814898 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,46,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,46,41,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 46, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.815407 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,47,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,47,41,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 47, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.815922 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,5,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,5,41,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 5, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.816431 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,6,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,6,41,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 6, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.816957 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,7,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,7,41,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 7, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.817475 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,8,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,8,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 8, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.817994 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,9,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 41],"bool"), list[2,8,9,41,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 9, 41].  Tensor sizes: [2, 1, 0, 41]
2025-03-05 15:22:57.818501 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 42],"bool"), list[2,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 42],"bool"), list[2,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 42, 42].  Tensor sizes: [2, 1, 0, 42]
2025-03-05 15:22:57.819287 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 43],"bool"), list[2,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 43],"bool"), list[2,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 43, 43].  Tensor sizes: [2, 1, 0, 43]
2025-03-05 15:22:57.819974 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 44],"bool"), list[2,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 44],"bool"), list[2,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 44, 44].  Tensor sizes: [2, 1, 0, 44]
2025-03-05 15:22:57.820559 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 45],"bool"), list[2,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 45],"bool"), list[2,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 45, 45].  Tensor sizes: [2, 1, 0, 45]
2025-03-05 15:22:57.821111 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 46],"bool"), list[2,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 46],"bool"), list[2,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 46, 46].  Tensor sizes: [2, 1, 0, 46]
2025-03-05 15:22:57.821649 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 47],"bool"), list[2,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 47],"bool"), list[2,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 47, 47].  Tensor sizes: [2, 1, 0, 47]
2025-03-05 15:22:57.822189 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 48],"bool"), list[2,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 48],"bool"), list[2,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 48, 48].  Tensor sizes: [2, 1, 0, 48]
2025-03-05 15:22:57.822718 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 49],"bool"), list[2,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 49],"bool"), list[2,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 49, 49].  Tensor sizes: [2, 1, 0, 49]
2025-03-05 15:22:57.823244 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 4],"bool"), list[2,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 4],"bool"), list[2,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 4, 4].  Tensor sizes: [2, 1, 0, 4]
2025-03-05 15:22:57.823769 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 50],"bool"), list[2,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 50],"bool"), list[2,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 50, 50].  Tensor sizes: [2, 1, 0, 50]
2025-03-05 15:22:57.824305 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 51],"bool"), list[2,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 51],"bool"), list[2,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 51, 51].  Tensor sizes: [2, 1, 0, 51]
2025-03-05 15:22:57.824823 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 52],"bool"), list[2,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 52],"bool"), list[2,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 52, 52].  Tensor sizes: [2, 1, 0, 52]
2025-03-05 15:22:57.825353 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 53],"bool"), list[2,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 53],"bool"), list[2,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 53, 53].  Tensor sizes: [2, 1, 0, 53]
2025-03-05 15:22:57.825946 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 54],"bool"), list[2,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 54],"bool"), list[2,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 54, 54].  Tensor sizes: [2, 1, 0, 54]
2025-03-05 15:22:57.826550 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 55],"bool"), list[2,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 55],"bool"), list[2,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 55, 55].  Tensor sizes: [2, 1, 0, 55]
2025-03-05 15:22:57.827378 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 56],"bool"), list[2,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 56],"bool"), list[2,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 56, 56].  Tensor sizes: [2, 1, 0, 56]
2025-03-05 15:22:57.827949 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,1,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,1,57,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 1, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.828478 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,10,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,10,57,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 10, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.829012 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,11,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,11,57,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 11, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.829534 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,12,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,12,57,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 12, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.830065 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,13,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,13,57,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 13, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.830600 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,14,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,14,57,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 14, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.831121 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,15,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,15,57,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 15, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.831635 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,16,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,16,57,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 16, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.832167 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,17,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,17,57,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 17, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.832691 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,18,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,18,57,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 18, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.833222 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,19,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,19,57,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 19, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.833742 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,2,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,2,57,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 2, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.834263 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,20,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,20,57,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 20, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.834835 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,21,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,21,57,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 21, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.835361 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,22,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,22,57,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 22, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.835875 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,23,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,23,57,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 23, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.836383 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,24,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,24,57,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 24, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.836911 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,25,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,25,57,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 25, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.837429 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,26,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,26,57,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 26, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.837958 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,27,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,27,57,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 27, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.838477 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,28,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,28,57,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 28, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.838999 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,29,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,29,57,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 29, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.839515 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,3,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,3,57,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 3, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.840042 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,30,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,30,57,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 30, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.840570 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,31,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,31,57,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 31, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.841098 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,32,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,32,57,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 32, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.841607 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,33,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,33,57,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 33, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.842132 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,34,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,34,57,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 34, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.842663 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,35,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,35,57,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 35, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.843655 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,36,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,36,57,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 36, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.844455 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,37,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,37,57,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 37, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.845157 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,38,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,38,57,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 38, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.845742 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,39,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,39,57,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 39, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.846269 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,4,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,4,57,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 4, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.846818 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,40,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,40,57,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 40, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.847350 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,41,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,41,57,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 41, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.847887 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,42,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,42,57,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 42, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.848409 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,43,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,43,57,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 43, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.848933 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,44,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,44,57,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 44, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.849445 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,45,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,45,57,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 45, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.849989 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,46,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,46,57,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 46, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.850508 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,47,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,47,57,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 47, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.851093 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,48,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,48,57,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 48, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.851658 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,49,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,49,57,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 49, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.852190 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,5,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,5,57,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 5, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.852718 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,50,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,50,57,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 50, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.853245 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,51,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,51,57,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 51, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.853764 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,52,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,52,57,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 52, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.854285 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,53,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,53,57,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 53, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.854828 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,54,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,54,57,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 54, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.855366 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,55,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,55,57,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 55, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.855905 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,56,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,56,57,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 56, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.856424 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 57, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.856934 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,58,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,58,57,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 58, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.857441 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,59,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,59,57,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 59, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.857959 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,6,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,6,57,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 6, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.858476 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,60,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,60,57,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 60, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.859002 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,61,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,61,57,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 61, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.859509 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,62,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,62,57,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 62, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.860104 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,63,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,63,57,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 63, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.860744 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,64,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,64,57,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 64, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.861649 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,65,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,65,57,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 65, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.862308 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,66,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,66,57,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 66, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.862979 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,7,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,7,57,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 7, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.863667 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,8,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,8,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 8, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.864313 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,9,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 57],"bool"), list[2,8,9,57,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 9, 57].  Tensor sizes: [2, 1, 0, 57]
2025-03-05 15:22:57.865135 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 58],"bool"), list[2,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 58],"bool"), list[2,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 58, 58].  Tensor sizes: [2, 1, 0, 58]
2025-03-05 15:22:57.865801 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 59],"bool"), list[2,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 59],"bool"), list[2,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 59, 59].  Tensor sizes: [2, 1, 0, 59]
2025-03-05 15:22:57.866472 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 5],"bool"), list[2,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 5],"bool"), list[2,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 5, 5].  Tensor sizes: [2, 1, 0, 5]
2025-03-05 15:22:57.867104 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 60],"bool"), list[2,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 60],"bool"), list[2,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 60, 60].  Tensor sizes: [2, 1, 0, 60]
2025-03-05 15:22:57.867645 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 61],"bool"), list[2,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 61],"bool"), list[2,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 61, 61].  Tensor sizes: [2, 1, 0, 61]
2025-03-05 15:22:57.868177 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 62],"bool"), list[2,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 62],"bool"), list[2,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 62, 62].  Tensor sizes: [2, 1, 0, 62]
2025-03-05 15:22:57.868709 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 63],"bool"), list[2,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 63],"bool"), list[2,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 63, 63].  Tensor sizes: [2, 1, 0, 63]
2025-03-05 15:22:57.869226 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 64],"bool"), list[2,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 64],"bool"), list[2,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 64, 64].  Tensor sizes: [2, 1, 0, 64]
2025-03-05 15:22:57.869761 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 65],"bool"), list[2,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 65],"bool"), list[2,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 65, 65].  Tensor sizes: [2, 1, 0, 65]
2025-03-05 15:22:57.870352 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 66],"bool"), list[2,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 66],"bool"), list[2,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 66, 66].  Tensor sizes: [2, 1, 0, 66]
2025-03-05 15:22:57.870975 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 67],"bool"), list[2,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 67],"bool"), list[2,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 67, 67].  Tensor sizes: [2, 1, 0, 67]
2025-03-05 15:22:57.871505 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 68],"bool"), list[2,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 68],"bool"), list[2,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 68, 68].  Tensor sizes: [2, 1, 0, 68]
2025-03-05 15:22:57.872070 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 69],"bool"), list[2,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 69],"bool"), list[2,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 69, 69].  Tensor sizes: [2, 1, 0, 69]
2025-03-05 15:22:57.872609 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 6],"bool"), list[2,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 6],"bool"), list[2,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 6, 6].  Tensor sizes: [2, 1, 0, 6]
2025-03-05 15:22:57.873129 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 70],"bool"), list[2,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 70],"bool"), list[2,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 70, 70].  Tensor sizes: [2, 1, 0, 70]
2025-03-05 15:22:57.873657 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 71],"bool"), list[2,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 71],"bool"), list[2,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 71, 71].  Tensor sizes: [2, 1, 0, 71]
2025-03-05 15:22:57.874178 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 72],"bool"), list[2,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 72],"bool"), list[2,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 72, 72].  Tensor sizes: [2, 1, 0, 72]
2025-03-05 15:22:57.874714 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 73],"bool"), list[2,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 73],"bool"), list[2,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 73, 73].  Tensor sizes: [2, 1, 0, 73]
2025-03-05 15:22:57.875252 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 74],"bool"), list[2,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 74],"bool"), list[2,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 74, 74].  Tensor sizes: [2, 1, 0, 74]
2025-03-05 15:22:57.875780 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 75],"bool"), list[2,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 75],"bool"), list[2,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 75, 75].  Tensor sizes: [2, 1, 0, 75]
2025-03-05 15:22:57.876313 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 76],"bool"), list[2,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 76],"bool"), list[2,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 76, 76].  Tensor sizes: [2, 1, 0, 76]
2025-03-05 15:22:57.876883 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 77],"bool"), list[2,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 77],"bool"), list[2,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 77, 77].  Tensor sizes: [2, 1, 0, 77]
2025-03-05 15:22:57.877455 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 78],"bool"), list[2,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 78],"bool"), list[2,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 78, 78].  Tensor sizes: [2, 1, 0, 78]
2025-03-05 15:22:57.878008 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 79],"bool"), list[2,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 79],"bool"), list[2,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 79, 79].  Tensor sizes: [2, 1, 0, 79]
2025-03-05 15:22:57.878568 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 7],"bool"), list[2,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 7],"bool"), list[2,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 7, 7].  Tensor sizes: [2, 1, 0, 7]
2025-03-05 15:22:57.879136 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 80],"bool"), list[2,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 80],"bool"), list[2,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 80, 80].  Tensor sizes: [2, 1, 0, 80]
2025-03-05 15:22:57.879674 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,1,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,1,81,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 1, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.880198 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,10,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,10,81,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 10, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.880763 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,100,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,100,81,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 100, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.881302 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,101,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,101,81,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 101, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.881855 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,102,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,102,81,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 102, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.882408 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,103,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,103,81,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 103, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.882940 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,104,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,104,81,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 104, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.883715 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,105,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,105,81,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 105, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.884314 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,106,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,106,81,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 106, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.890123 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,107,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,107,81,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 107, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.890795 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,108,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,108,81,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 108, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.891390 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,109,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,109,81,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 109, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.891932 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,11,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,11,81,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 11, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.892460 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,110,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,110,81,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 110, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.892985 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,111,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,111,81,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 111, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.893541 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,112,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,112,81,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 112, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.894088 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,113,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,113,81,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 113, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.894623 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,114,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,114,81,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 114, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.895168 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,115,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,115,81,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 115, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.895773 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,116,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,116,81,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 116, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.896300 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,117,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,117,81,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 117, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.896859 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,118,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,118,81,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 118, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.897456 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,119,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,119,81,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 119, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.898100 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,12,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,12,81,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 12, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.898697 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,120,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,120,81,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 120, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.899267 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,121,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,121,81,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 121, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.899816 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,122,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,122,81,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 122, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.900343 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,123,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,123,81,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 123, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.900948 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,124,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,124,81,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 124, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.901648 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,125,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,125,81,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 125, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.902279 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,126,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,126,81,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 126, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.903296 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,127,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,127,81,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 127, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.903997 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,128,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,128,81,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 128, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.904555 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,129,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,129,81,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 129, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.905164 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,13,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,13,81,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 13, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.905765 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,130,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,130,81,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 130, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.906300 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,131,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,131,81,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 131, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.906843 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,132,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,132,81,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 132, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.907386 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,133,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,133,81,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 133, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.907964 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,134,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,134,81,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 134, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.908624 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,135,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,135,81,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 135, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.909217 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,136,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,136,81,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 136, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.909831 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,137,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,137,81,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 137, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.910363 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,138,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,138,81,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 138, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.910982 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,139,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,139,81,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 139, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.911627 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,14,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,14,81,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 14, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.912187 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,140,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,140,81,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 140, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.912856 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,141,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,141,81,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 141, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.913415 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,15,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,15,81,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 15, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.914012 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,16,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,16,81,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 16, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.914572 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,17,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,17,81,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 17, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.915205 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,18,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,18,81,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 18, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.915759 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,19,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,19,81,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 19, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.916280 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,2,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,2,81,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 2, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.916809 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,20,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,20,81,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 20, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.917339 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,21,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,21,81,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 21, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.917876 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,22,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,22,81,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 22, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.918517 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,23,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,23,81,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 23, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.919066 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,24,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,24,81,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 24, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.919599 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,25,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,25,81,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 25, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.920150 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,26,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,26,81,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 26, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.920795 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,27,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,27,81,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 27, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.921996 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,28,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,28,81,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 28, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.922663 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,29,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,29,81,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 29, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.923295 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,3,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,3,81,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 3, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.923935 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,30,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,30,81,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 30, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.924547 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,31,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,31,81,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 31, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.925160 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,32,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,32,81,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 32, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.925764 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,33,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,33,81,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 33, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.926372 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,34,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,34,81,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 34, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.927001 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,35,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,35,81,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 35, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.927621 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,36,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,36,81,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 36, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.928234 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,37,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,37,81,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 37, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.928855 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,38,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,38,81,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 38, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.929464 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,39,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,39,81,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 39, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.930055 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,4,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,4,81,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 4, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.930646 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,40,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,40,81,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 40, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.931266 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,41,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,41,81,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 41, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.931872 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,42,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,42,81,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 42, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.932490 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,43,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,43,81,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 43, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.933104 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,44,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,44,81,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 44, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.933801 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,45,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,45,81,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 45, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.934424 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,46,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,46,81,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 46, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.935046 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,47,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,47,81,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 47, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.935651 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,48,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,48,81,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 48, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.936253 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,49,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,49,81,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 49, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.936855 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,5,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,5,81,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 5, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.937451 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,50,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,50,81,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 50, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.938057 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,51,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,51,81,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 51, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.938654 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,52,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,52,81,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 52, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.939243 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,53,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,53,81,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 53, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.939845 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,54,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,54,81,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 54, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.940452 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,55,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,55,81,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 55, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.941085 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,56,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,56,81,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 56, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.941693 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,57,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,57,81,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 57, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.942294 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,58,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,58,81,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 58, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.942897 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,59,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,59,81,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 59, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.943504 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,6,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,6,81,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 6, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.944113 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,60,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,60,81,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 60, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.944711 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,61,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,61,81,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 61, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.948530 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,62,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,62,81,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 62, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.949808 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,63,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,63,81,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 63, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.950463 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,64,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,64,81,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 64, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.951114 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,65,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,65,81,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 65, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.951742 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,66,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,66,81,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 66, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.952355 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,67,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,67,81,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 67, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.953024 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,68,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,68,81,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 68, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.953643 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,69,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,69,81,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 69, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.954252 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,7,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,7,81,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 7, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.954881 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,70,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,70,81,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 70, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.955492 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,71,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,71,81,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 71, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.956118 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,72,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,72,81,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 72, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.956726 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,73,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,73,81,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 73, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.957324 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,74,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,74,81,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 74, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.957933 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,75,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,75,81,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 75, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.958521 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,76,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,76,81,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 76, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.959129 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,77,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,77,81,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 77, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.959730 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,78,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,78,81,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 78, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.960318 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,79,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,79,81,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 79, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.960910 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,8,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,8,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 8, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.961508 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,80,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,80,81,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 80, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.962165 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 81, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.962765 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,82,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,82,81,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 82, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.963357 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,83,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,83,81,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 83, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.963952 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,84,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,84,81,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 84, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.964544 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,85,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,85,81,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 85, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.965150 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,86,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,86,81,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 86, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.965752 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,87,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,87,81,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 87, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.966337 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,88,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,88,81,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 88, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.966942 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,89,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,89,81,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 89, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.967525 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,9,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,9,81,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 9, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.968116 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,90,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,90,81,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 90, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.968733 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,91,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,91,81,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 91, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.969356 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,92,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,92,81,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 92, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.975309 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,93,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,93,81,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 93, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.976235 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,94,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,94,81,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 94, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.976763 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,95,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,95,81,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 95, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.977467 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,96,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,96,81,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 96, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.978018 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,97,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,97,81,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 97, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.978519 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,98,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,98,81,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 98, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.979096 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,99,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 81],"bool"), list[2,8,99,81,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 99, 81].  Tensor sizes: [2, 1, 0, 81]
2025-03-05 15:22:57.979642 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 82],"bool"), list[2,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 82],"bool"), list[2,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 82, 82].  Tensor sizes: [2, 1, 0, 82]
2025-03-05 15:22:57.980169 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 83],"bool"), list[2,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 83],"bool"), list[2,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 83, 83].  Tensor sizes: [2, 1, 0, 83]
2025-03-05 15:22:57.980702 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 84],"bool"), list[2,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 84],"bool"), list[2,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 84, 84].  Tensor sizes: [2, 1, 0, 84]
2025-03-05 15:22:57.981229 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,1,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,1,85,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 1, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.984094 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,10,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,10,85,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 10, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.984749 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,100,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,100,85,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 100, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.985280 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,101,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,101,85,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 101, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.985807 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,102,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,102,85,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 102, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.986336 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,103,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,103,85,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 103, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.986856 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,104,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,104,85,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 104, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.987388 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,105,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,105,85,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 105, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.987908 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,106,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,106,85,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 106, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.988452 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,107,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,107,85,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 107, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.989073 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,108,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,108,85,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 108, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.990335 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,109,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,109,85,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 109, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.990993 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,11,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,11,85,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 11, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.991557 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,110,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,110,85,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 110, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.992144 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,111,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,111,85,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 111, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.992677 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,112,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,112,85,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 112, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.993266 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,113,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,113,85,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 113, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.993824 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,114,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,114,85,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 114, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.994349 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,115,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,115,85,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 115, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.994885 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,116,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,116,85,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 116, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.995435 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,117,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,117,85,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 117, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.995991 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,118,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,118,85,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 118, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.996538 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,119,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,119,85,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 119, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.997087 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,12,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,12,85,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 12, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.997605 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,120,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,120,85,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 120, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.998124 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,121,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,121,85,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 121, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.998646 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,122,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,122,85,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 122, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.999192 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,123,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,123,85,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 123, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:57.999732 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,124,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,124,85,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 124, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.000251 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,125,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,125,85,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 125, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.000797 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,126,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,126,85,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 126, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.001330 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,127,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,127,85,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 127, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.001894 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,128,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,128,85,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 128, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.002443 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,129,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,129,85,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 129, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.002982 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,13,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,13,85,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 13, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.003513 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,130,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,130,85,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 130, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.004057 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,131,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,131,85,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 131, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.004569 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,132,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,132,85,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 132, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.005098 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,133,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,133,85,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 133, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.005631 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,134,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,134,85,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 134, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.006170 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,135,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,135,85,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 135, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.006769 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,136,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,136,85,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 136, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.007289 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,137,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,137,85,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 137, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.007823 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,138,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,138,85,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 138, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.008344 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,139,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,139,85,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 139, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.008883 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,14,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,14,85,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 14, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.009395 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,140,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,140,85,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 140, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.009960 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,141,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,141,85,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 141, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.010483 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,142,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,142,85,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 142, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.011046 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,15,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,15,85,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 15, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.011942 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,16,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,16,85,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 16, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.012711 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,17,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,17,85,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 17, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.013278 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,18,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,18,85,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 18, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.013826 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,19,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,19,85,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 19, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.014339 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,2,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,2,85,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 2, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.014891 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,20,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,20,85,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 20, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.015480 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,21,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,21,85,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 21, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.016024 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,22,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,22,85,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 22, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.016531 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,23,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,23,85,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 23, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.017097 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,24,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,24,85,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 24, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.017613 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,25,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,25,85,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 25, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.018135 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,26,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,26,85,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 26, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.018648 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,27,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,27,85,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 27, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.019159 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,28,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,28,85,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 28, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.019680 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,29,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,29,85,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 29, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.020191 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,3,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,3,85,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 3, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.020712 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,30,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,30,85,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 30, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.021218 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,31,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,31,85,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 31, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.021736 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,32,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,32,85,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 32, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.022236 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,33,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,33,85,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 33, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.022750 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,34,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,34,85,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 34, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.023263 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,35,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,35,85,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 35, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.024564 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,36,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,36,85,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 36, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.025126 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,37,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,37,85,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 37, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.025643 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,38,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,38,85,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 38, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.026154 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,39,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,39,85,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 39, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.026715 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,4,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,4,85,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 4, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.027287 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,40,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,40,85,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 40, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.027822 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,41,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,41,85,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 41, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.028332 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,42,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,42,85,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 42, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.028841 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,43,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,43,85,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 43, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.029336 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,44,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,44,85,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 44, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.029850 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,45,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,45,85,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 45, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.030357 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,46,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,46,85,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 46, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.030869 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,47,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,47,85,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 47, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.031372 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,48,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,48,85,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 48, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.031910 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,49,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,49,85,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 49, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.032438 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,5,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,5,85,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 5, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.032965 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,50,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,50,85,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 50, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.033485 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,51,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,51,85,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 51, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.034013 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,52,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,52,85,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 52, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.034530 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,53,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,53,85,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 53, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.035119 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,54,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,54,85,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 54, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.035650 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,55,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,55,85,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 55, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.036167 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,56,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,56,85,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 56, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.036694 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,57,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,57,85,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 57, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.037199 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,58,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,58,85,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 58, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.037708 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,59,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,59,85,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 59, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.038213 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,6,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,6,85,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 6, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.038750 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,60,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,60,85,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 60, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.039290 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,61,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,61,85,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 61, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.039850 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,62,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,62,85,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 62, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.040384 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,63,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,63,85,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 63, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.040993 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,64,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,64,85,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 64, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.042202 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,65,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,65,85,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 65, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.042833 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,66,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,66,85,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 66, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.043444 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,67,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,67,85,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 67, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.043994 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,68,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,68,85,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 68, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.044545 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,69,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,69,85,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 69, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.045073 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,7,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,7,85,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 7, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.045597 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,70,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,70,85,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 70, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.046120 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,71,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,71,85,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 71, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.046673 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,72,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,72,85,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 72, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.047198 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,73,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,73,85,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 73, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.047747 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,74,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,74,85,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 74, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.048295 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,75,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,75,85,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 75, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.048850 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,76,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,76,85,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 76, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.049368 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,77,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,77,85,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 77, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.049882 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,78,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,78,85,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 78, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.050393 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,79,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,79,85,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 79, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.050900 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,8,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,8,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 8, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.051400 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,80,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,80,85,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 80, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.051909 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,81,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,81,85,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 81, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.052435 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,82,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,82,85,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 82, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.053007 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,83,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,83,85,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 83, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.053544 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,84,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,84,85,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 84, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.054087 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 85, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.054627 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,86,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,86,85,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 86, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.055151 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,87,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,87,85,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 87, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.055672 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,88,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,88,85,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 88, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.056190 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,89,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,89,85,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 89, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.056719 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,9,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,9,85,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 9, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.057249 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,90,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,90,85,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 90, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.057777 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,91,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,91,85,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 91, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.058295 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,92,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,92,85,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 92, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.058813 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,93,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,93,85,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 93, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.059326 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,94,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,94,85,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 94, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.059851 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,95,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,95,85,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 95, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.060375 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,96,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,96,85,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 96, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.060894 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,97,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,97,85,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 97, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.061404 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,98,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,98,85,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 98, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.061918 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,99,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 85],"bool"), list[2,8,99,85,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 99, 85].  Tensor sizes: [2, 1, 0, 85]
2025-03-05 15:22:58.062427 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 86],"bool"), list[2,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 86],"bool"), list[2,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 86, 86].  Tensor sizes: [2, 1, 0, 86]
2025-03-05 15:22:58.062947 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 87],"bool"), list[2,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 87],"bool"), list[2,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 87, 87].  Tensor sizes: [2, 1, 0, 87]
2025-03-05 15:22:58.063474 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 88],"bool"), list[2,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 88],"bool"), list[2,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 88, 88].  Tensor sizes: [2, 1, 0, 88]
2025-03-05 15:22:58.063988 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 89],"bool"), list[2,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 89],"bool"), list[2,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 89, 89].  Tensor sizes: [2, 1, 0, 89]
2025-03-05 15:22:58.064544 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 8],"bool"), list[2,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 8],"bool"), list[2,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 8, 8].  Tensor sizes: [2, 1, 0, 8]
2025-03-05 15:22:58.065082 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 90],"bool"), list[2,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 90],"bool"), list[2,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 90, 90].  Tensor sizes: [2, 1, 0, 90]
2025-03-05 15:22:58.065676 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 91],"bool"), list[2,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 91],"bool"), list[2,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 91, 91].  Tensor sizes: [2, 1, 0, 91]
2025-03-05 15:22:58.066185 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 92],"bool"), list[2,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 92],"bool"), list[2,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 92, 92].  Tensor sizes: [2, 1, 0, 92]
2025-03-05 15:22:58.066696 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 93],"bool"), list[2,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 93],"bool"), list[2,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 93, 93].  Tensor sizes: [2, 1, 0, 93]
2025-03-05 15:22:58.067201 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 94],"bool"), list[2,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 94],"bool"), list[2,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 94, 94].  Tensor sizes: [2, 1, 0, 94]
2025-03-05 15:22:58.067711 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 95],"bool"), list[2,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 95],"bool"), list[2,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 95, 95].  Tensor sizes: [2, 1, 0, 95]
2025-03-05 15:22:58.068222 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 96],"bool"), list[2,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 96],"bool"), list[2,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 96, 96].  Tensor sizes: [2, 1, 0, 96]
2025-03-05 15:22:58.068740 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 97],"bool"), list[2,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 97],"bool"), list[2,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 97, 97].  Tensor sizes: [2, 1, 0, 97]
2025-03-05 15:22:58.069255 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 98],"bool"), list[2,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 98],"bool"), list[2,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 98, 98].  Tensor sizes: [2, 1, 0, 98]
2025-03-05 15:22:58.069772 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 99],"bool"), list[2,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 99],"bool"), list[2,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 99, 99].  Tensor sizes: [2, 1, 0, 99]
2025-03-05 15:22:58.070277 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,1,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,1,9,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 1, 9].  Tensor sizes: [2, 1, 0, 9]
2025-03-05 15:22:58.070796 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,10,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,10,9,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 10, 9].  Tensor sizes: [2, 1, 0, 9]
2025-03-05 15:22:58.071319 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,11,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,11,9,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 11, 9].  Tensor sizes: [2, 1, 0, 9]
2025-03-05 15:22:58.071854 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,2,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,2,9,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 2, 9].  Tensor sizes: [2, 1, 0, 9]
2025-03-05 15:22:58.072367 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,3,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,3,9,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 3, 9].  Tensor sizes: [2, 1, 0, 9]
2025-03-05 15:22:58.072914 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,4,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,4,9,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 4, 9].  Tensor sizes: [2, 1, 0, 9]
2025-03-05 15:22:58.073412 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,5,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,5,9,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 5, 9].  Tensor sizes: [2, 1, 0, 9]
2025-03-05 15:22:58.073919 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,6,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,6,9,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 6, 9].  Tensor sizes: [2, 1, 0, 9]
2025-03-05 15:22:58.074427 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,7,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,7,9,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 7, 9].  Tensor sizes: [2, 1, 0, 9]
2025-03-05 15:22:58.074936 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,8,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,8,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 8, 9].  Tensor sizes: [2, 1, 0, 9]
2025-03-05 15:22:58.075443 test begin: paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0, 9],"bool"), list[2,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 9, 9].  Tensor sizes: [2, 1, 0, 9]
2025-03-05 15:22:58.075965 test begin: paddle.broadcast_to(Tensor([2, 1, 0],"bool"), list[2,1,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0],"bool"), list[2,1,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 1, 3549].  Tensor sizes: [2, 1, 0]
2025-03-05 15:22:58.076470 test begin: paddle.broadcast_to(Tensor([2, 1, 0],"bool"), list[2,2,4,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0],"bool"), list[2,2,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 2, 4].  Tensor sizes: [2, 1, 0]
2025-03-05 15:22:58.076965 test begin: paddle.broadcast_to(Tensor([2, 1, 0],"float32"), list[2,2,4,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0],"float32"), list[2,2,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 2, 4].  Tensor sizes: [2, 1, 0]
2025-03-05 15:22:58.077462 test begin: paddle.broadcast_to(Tensor([2, 1, 0],"int32"), list[6,2,4,5,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 0],"int32"), list[6,2,4,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 2, 4, 5].  Tensor sizes: [2, 1, 0]
2025-03-05 15:22:58.078052 test begin: paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 1, 1].  Tensor sizes: [2, 1, 1, 0]
2025-03-05 15:22:58.078559 test begin: paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 1, 121].  Tensor sizes: [2, 1, 1, 0]
2025-03-05 15:22:58.079127 test begin: paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 1, 129].  Tensor sizes: [2, 1, 1, 0]
2025-03-05 15:22:58.079654 test begin: paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 1, 161].  Tensor sizes: [2, 1, 1, 0]
2025-03-05 15:22:58.080180 test begin: paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 1, 17].  Tensor sizes: [2, 1, 1, 0]
2025-03-05 15:22:58.080701 test begin: paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 1, 181].  Tensor sizes: [2, 1, 1, 0]
2025-03-05 15:22:58.081208 test begin: paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 1, 41].  Tensor sizes: [2, 1, 1, 0]
2025-03-05 15:22:58.081722 test begin: paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 1, 57].  Tensor sizes: [2, 1, 1, 0]
2025-03-05 15:22:58.082231 test begin: paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 1, 81].  Tensor sizes: [2, 1, 1, 0]
2025-03-05 15:22:58.082740 test begin: paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 1, 85].  Tensor sizes: [2, 1, 1, 0]
2025-03-05 15:22:58.083733 test begin: paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 1, 0],"bool"), list[2,8,1,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 1, 9].  Tensor sizes: [2, 1, 1, 0]
2025-03-05 15:22:58.084383 test begin: paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 10, 10].  Tensor sizes: [2, 1, 10, 0]
2025-03-05 15:22:58.085207 test begin: paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 10, 121].  Tensor sizes: [2, 1, 10, 0]
2025-03-05 15:22:58.085881 test begin: paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 10, 129].  Tensor sizes: [2, 1, 10, 0]
2025-03-05 15:22:58.086489 test begin: paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 10, 161].  Tensor sizes: [2, 1, 10, 0]
2025-03-05 15:22:58.087102 test begin: paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 10, 17].  Tensor sizes: [2, 1, 10, 0]
2025-03-05 15:22:58.087712 test begin: paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 10, 181].  Tensor sizes: [2, 1, 10, 0]
2025-03-05 15:22:58.088333 test begin: paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 10, 41].  Tensor sizes: [2, 1, 10, 0]
2025-03-05 15:22:58.089373 test begin: paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 10, 57].  Tensor sizes: [2, 1, 10, 0]
2025-03-05 15:22:58.090172 test begin: paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 10, 81].  Tensor sizes: [2, 1, 10, 0]
2025-03-05 15:22:58.090829 test begin: paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 10, 85].  Tensor sizes: [2, 1, 10, 0]
2025-03-05 15:22:58.091456 test begin: paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 10, 0],"bool"), list[2,8,10,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 10, 9].  Tensor sizes: [2, 1, 10, 0]
2025-03-05 15:22:58.092084 test begin: paddle.broadcast_to(Tensor([2, 1, 100, 0],"bool"), list[2,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 100, 0],"bool"), list[2,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 100, 100].  Tensor sizes: [2, 1, 100, 0]
2025-03-05 15:22:58.092745 test begin: paddle.broadcast_to(Tensor([2, 1, 100, 0],"bool"), list[2,8,100,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 100, 0],"bool"), list[2,8,100,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 100, 121].  Tensor sizes: [2, 1, 100, 0]
2025-03-05 15:22:58.093394 test begin: paddle.broadcast_to(Tensor([2, 1, 100, 0],"bool"), list[2,8,100,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 100, 0],"bool"), list[2,8,100,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 100, 129].  Tensor sizes: [2, 1, 100, 0]
2025-03-05 15:22:58.094048 test begin: paddle.broadcast_to(Tensor([2, 1, 100, 0],"bool"), list[2,8,100,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 100, 0],"bool"), list[2,8,100,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 100, 161].  Tensor sizes: [2, 1, 100, 0]
2025-03-05 15:22:58.094739 test begin: paddle.broadcast_to(Tensor([2, 1, 100, 0],"bool"), list[2,8,100,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 100, 0],"bool"), list[2,8,100,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 100, 181].  Tensor sizes: [2, 1, 100, 0]
2025-03-05 15:22:58.095555 test begin: paddle.broadcast_to(Tensor([2, 1, 100, 0],"bool"), list[2,8,100,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 100, 0],"bool"), list[2,8,100,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 100, 81].  Tensor sizes: [2, 1, 100, 0]
2025-03-05 15:22:58.096224 test begin: paddle.broadcast_to(Tensor([2, 1, 100, 0],"bool"), list[2,8,100,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 100, 0],"bool"), list[2,8,100,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 100, 85].  Tensor sizes: [2, 1, 100, 0]
2025-03-05 15:22:58.096867 test begin: paddle.broadcast_to(Tensor([2, 1, 101, 0],"bool"), list[2,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 101, 0],"bool"), list[2,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 101, 101].  Tensor sizes: [2, 1, 101, 0]
2025-03-05 15:22:58.097514 test begin: paddle.broadcast_to(Tensor([2, 1, 101, 0],"bool"), list[2,8,101,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 101, 0],"bool"), list[2,8,101,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 101, 121].  Tensor sizes: [2, 1, 101, 0]
2025-03-05 15:22:58.098173 test begin: paddle.broadcast_to(Tensor([2, 1, 101, 0],"bool"), list[2,8,101,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 101, 0],"bool"), list[2,8,101,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 101, 129].  Tensor sizes: [2, 1, 101, 0]
2025-03-05 15:22:58.098820 test begin: paddle.broadcast_to(Tensor([2, 1, 101, 0],"bool"), list[2,8,101,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 101, 0],"bool"), list[2,8,101,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 101, 161].  Tensor sizes: [2, 1, 101, 0]
2025-03-05 15:22:58.099446 test begin: paddle.broadcast_to(Tensor([2, 1, 101, 0],"bool"), list[2,8,101,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 101, 0],"bool"), list[2,8,101,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 101, 181].  Tensor sizes: [2, 1, 101, 0]
2025-03-05 15:22:58.100096 test begin: paddle.broadcast_to(Tensor([2, 1, 101, 0],"bool"), list[2,8,101,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 101, 0],"bool"), list[2,8,101,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 101, 81].  Tensor sizes: [2, 1, 101, 0]
2025-03-05 15:22:58.100733 test begin: paddle.broadcast_to(Tensor([2, 1, 101, 0],"bool"), list[2,8,101,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 101, 0],"bool"), list[2,8,101,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 101, 85].  Tensor sizes: [2, 1, 101, 0]
2025-03-05 15:22:58.101361 test begin: paddle.broadcast_to(Tensor([2, 1, 102, 0],"bool"), list[2,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 102, 0],"bool"), list[2,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 102, 102].  Tensor sizes: [2, 1, 102, 0]
2025-03-05 15:22:58.102003 test begin: paddle.broadcast_to(Tensor([2, 1, 102, 0],"bool"), list[2,8,102,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 102, 0],"bool"), list[2,8,102,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 102, 121].  Tensor sizes: [2, 1, 102, 0]
2025-03-05 15:22:58.102639 test begin: paddle.broadcast_to(Tensor([2, 1, 102, 0],"bool"), list[2,8,102,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 102, 0],"bool"), list[2,8,102,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 102, 129].  Tensor sizes: [2, 1, 102, 0]
2025-03-05 15:22:58.103269 test begin: paddle.broadcast_to(Tensor([2, 1, 102, 0],"bool"), list[2,8,102,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 102, 0],"bool"), list[2,8,102,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 102, 161].  Tensor sizes: [2, 1, 102, 0]
2025-03-05 15:22:58.103903 test begin: paddle.broadcast_to(Tensor([2, 1, 102, 0],"bool"), list[2,8,102,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 102, 0],"bool"), list[2,8,102,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 102, 181].  Tensor sizes: [2, 1, 102, 0]
2025-03-05 15:22:58.104534 test begin: paddle.broadcast_to(Tensor([2, 1, 102, 0],"bool"), list[2,8,102,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 102, 0],"bool"), list[2,8,102,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 102, 81].  Tensor sizes: [2, 1, 102, 0]
2025-03-05 15:22:58.105204 test begin: paddle.broadcast_to(Tensor([2, 1, 102, 0],"bool"), list[2,8,102,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 102, 0],"bool"), list[2,8,102,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 102, 85].  Tensor sizes: [2, 1, 102, 0]
2025-03-05 15:22:58.105917 test begin: paddle.broadcast_to(Tensor([2, 1, 103, 0],"bool"), list[2,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 103, 0],"bool"), list[2,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 103, 103].  Tensor sizes: [2, 1, 103, 0]
2025-03-05 15:22:58.106588 test begin: paddle.broadcast_to(Tensor([2, 1, 103, 0],"bool"), list[2,8,103,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 103, 0],"bool"), list[2,8,103,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 103, 121].  Tensor sizes: [2, 1, 103, 0]
2025-03-05 15:22:58.107127 test begin: paddle.broadcast_to(Tensor([2, 1, 103, 0],"bool"), list[2,8,103,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 103, 0],"bool"), list[2,8,103,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 103, 129].  Tensor sizes: [2, 1, 103, 0]
2025-03-05 15:22:58.107974 test begin: paddle.broadcast_to(Tensor([2, 1, 103, 0],"bool"), list[2,8,103,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 103, 0],"bool"), list[2,8,103,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 103, 161].  Tensor sizes: [2, 1, 103, 0]
2025-03-05 15:22:58.108723 test begin: paddle.broadcast_to(Tensor([2, 1, 103, 0],"bool"), list[2,8,103,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 103, 0],"bool"), list[2,8,103,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 103, 181].  Tensor sizes: [2, 1, 103, 0]
2025-03-05 15:22:58.109400 test begin: paddle.broadcast_to(Tensor([2, 1, 103, 0],"bool"), list[2,8,103,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 103, 0],"bool"), list[2,8,103,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 103, 81].  Tensor sizes: [2, 1, 103, 0]
2025-03-05 15:22:58.110038 test begin: paddle.broadcast_to(Tensor([2, 1, 103, 0],"bool"), list[2,8,103,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 103, 0],"bool"), list[2,8,103,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 103, 85].  Tensor sizes: [2, 1, 103, 0]
2025-03-05 15:22:58.110690 test begin: paddle.broadcast_to(Tensor([2, 1, 104, 0],"bool"), list[2,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 104, 0],"bool"), list[2,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 104, 104].  Tensor sizes: [2, 1, 104, 0]
2025-03-05 15:22:58.111294 test begin: paddle.broadcast_to(Tensor([2, 1, 104, 0],"bool"), list[2,8,104,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 104, 0],"bool"), list[2,8,104,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 104, 121].  Tensor sizes: [2, 1, 104, 0]
2025-03-05 15:22:58.111890 test begin: paddle.broadcast_to(Tensor([2, 1, 104, 0],"bool"), list[2,8,104,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 104, 0],"bool"), list[2,8,104,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 104, 129].  Tensor sizes: [2, 1, 104, 0]
2025-03-05 15:22:58.112472 test begin: paddle.broadcast_to(Tensor([2, 1, 104, 0],"bool"), list[2,8,104,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 104, 0],"bool"), list[2,8,104,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 104, 161].  Tensor sizes: [2, 1, 104, 0]
2025-03-05 15:22:58.113071 test begin: paddle.broadcast_to(Tensor([2, 1, 104, 0],"bool"), list[2,8,104,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 104, 0],"bool"), list[2,8,104,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 104, 181].  Tensor sizes: [2, 1, 104, 0]
2025-03-05 15:22:58.113727 test begin: paddle.broadcast_to(Tensor([2, 1, 104, 0],"bool"), list[2,8,104,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 104, 0],"bool"), list[2,8,104,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 104, 81].  Tensor sizes: [2, 1, 104, 0]
2025-03-05 15:22:58.114346 test begin: paddle.broadcast_to(Tensor([2, 1, 104, 0],"bool"), list[2,8,104,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 104, 0],"bool"), list[2,8,104,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 104, 85].  Tensor sizes: [2, 1, 104, 0]
2025-03-05 15:22:58.115114 test begin: paddle.broadcast_to(Tensor([2, 1, 105, 0],"bool"), list[2,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 105, 0],"bool"), list[2,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 105, 105].  Tensor sizes: [2, 1, 105, 0]
2025-03-05 15:22:58.115938 test begin: paddle.broadcast_to(Tensor([2, 1, 105, 0],"bool"), list[2,8,105,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 105, 0],"bool"), list[2,8,105,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 105, 121].  Tensor sizes: [2, 1, 105, 0]
2025-03-05 15:22:58.116500 test begin: paddle.broadcast_to(Tensor([2, 1, 105, 0],"bool"), list[2,8,105,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 105, 0],"bool"), list[2,8,105,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 105, 129].  Tensor sizes: [2, 1, 105, 0]
2025-03-05 15:22:58.117039 test begin: paddle.broadcast_to(Tensor([2, 1, 105, 0],"bool"), list[2,8,105,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 105, 0],"bool"), list[2,8,105,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 105, 161].  Tensor sizes: [2, 1, 105, 0]
2025-03-05 15:22:58.117574 test begin: paddle.broadcast_to(Tensor([2, 1, 105, 0],"bool"), list[2,8,105,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 105, 0],"bool"), list[2,8,105,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 105, 181].  Tensor sizes: [2, 1, 105, 0]
2025-03-05 15:22:58.118129 test begin: paddle.broadcast_to(Tensor([2, 1, 105, 0],"bool"), list[2,8,105,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 105, 0],"bool"), list[2,8,105,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 105, 81].  Tensor sizes: [2, 1, 105, 0]
2025-03-05 15:22:58.118666 test begin: paddle.broadcast_to(Tensor([2, 1, 105, 0],"bool"), list[2,8,105,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 105, 0],"bool"), list[2,8,105,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 105, 85].  Tensor sizes: [2, 1, 105, 0]
2025-03-05 15:22:58.119191 test begin: paddle.broadcast_to(Tensor([2, 1, 106, 0],"bool"), list[2,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 106, 0],"bool"), list[2,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 106, 106].  Tensor sizes: [2, 1, 106, 0]
2025-03-05 15:22:58.119724 test begin: paddle.broadcast_to(Tensor([2, 1, 106, 0],"bool"), list[2,8,106,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 106, 0],"bool"), list[2,8,106,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 106, 121].  Tensor sizes: [2, 1, 106, 0]
2025-03-05 15:22:58.120246 test begin: paddle.broadcast_to(Tensor([2, 1, 106, 0],"bool"), list[2,8,106,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 106, 0],"bool"), list[2,8,106,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 106, 129].  Tensor sizes: [2, 1, 106, 0]
2025-03-05 15:22:58.120770 test begin: paddle.broadcast_to(Tensor([2, 1, 106, 0],"bool"), list[2,8,106,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 106, 0],"bool"), list[2,8,106,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 106, 161].  Tensor sizes: [2, 1, 106, 0]
2025-03-05 15:22:58.121299 test begin: paddle.broadcast_to(Tensor([2, 1, 106, 0],"bool"), list[2,8,106,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 106, 0],"bool"), list[2,8,106,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 106, 181].  Tensor sizes: [2, 1, 106, 0]
2025-03-05 15:22:58.121819 test begin: paddle.broadcast_to(Tensor([2, 1, 106, 0],"bool"), list[2,8,106,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 106, 0],"bool"), list[2,8,106,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 106, 81].  Tensor sizes: [2, 1, 106, 0]
2025-03-05 15:22:58.122338 test begin: paddle.broadcast_to(Tensor([2, 1, 106, 0],"bool"), list[2,8,106,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 106, 0],"bool"), list[2,8,106,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 106, 85].  Tensor sizes: [2, 1, 106, 0]
2025-03-05 15:22:58.122856 test begin: paddle.broadcast_to(Tensor([2, 1, 107, 0],"bool"), list[2,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 107, 0],"bool"), list[2,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 107, 107].  Tensor sizes: [2, 1, 107, 0]
2025-03-05 15:22:58.123463 test begin: paddle.broadcast_to(Tensor([2, 1, 107, 0],"bool"), list[2,8,107,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 107, 0],"bool"), list[2,8,107,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 107, 121].  Tensor sizes: [2, 1, 107, 0]
2025-03-05 15:22:58.124339 test begin: paddle.broadcast_to(Tensor([2, 1, 107, 0],"bool"), list[2,8,107,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 107, 0],"bool"), list[2,8,107,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 107, 129].  Tensor sizes: [2, 1, 107, 0]
2025-03-05 15:22:58.124995 test begin: paddle.broadcast_to(Tensor([2, 1, 107, 0],"bool"), list[2,8,107,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 107, 0],"bool"), list[2,8,107,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 107, 161].  Tensor sizes: [2, 1, 107, 0]
2025-03-05 15:22:58.125719 test begin: paddle.broadcast_to(Tensor([2, 1, 107, 0],"bool"), list[2,8,107,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 107, 0],"bool"), list[2,8,107,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 107, 181].  Tensor sizes: [2, 1, 107, 0]
2025-03-05 15:22:58.126377 test begin: paddle.broadcast_to(Tensor([2, 1, 107, 0],"bool"), list[2,8,107,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 107, 0],"bool"), list[2,8,107,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 107, 81].  Tensor sizes: [2, 1, 107, 0]
2025-03-05 15:22:58.127033 test begin: paddle.broadcast_to(Tensor([2, 1, 107, 0],"bool"), list[2,8,107,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 107, 0],"bool"), list[2,8,107,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 107, 85].  Tensor sizes: [2, 1, 107, 0]
2025-03-05 15:22:58.127740 test begin: paddle.broadcast_to(Tensor([2, 1, 108, 0],"bool"), list[2,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 108, 0],"bool"), list[2,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 108, 108].  Tensor sizes: [2, 1, 108, 0]
2025-03-05 15:22:58.128371 test begin: paddle.broadcast_to(Tensor([2, 1, 108, 0],"bool"), list[2,8,108,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 108, 0],"bool"), list[2,8,108,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 108, 121].  Tensor sizes: [2, 1, 108, 0]
2025-03-05 15:22:58.128991 test begin: paddle.broadcast_to(Tensor([2, 1, 108, 0],"bool"), list[2,8,108,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 108, 0],"bool"), list[2,8,108,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 108, 129].  Tensor sizes: [2, 1, 108, 0]
2025-03-05 15:22:58.129602 test begin: paddle.broadcast_to(Tensor([2, 1, 108, 0],"bool"), list[2,8,108,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 108, 0],"bool"), list[2,8,108,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 108, 161].  Tensor sizes: [2, 1, 108, 0]
2025-03-05 15:22:58.130197 test begin: paddle.broadcast_to(Tensor([2, 1, 108, 0],"bool"), list[2,8,108,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 108, 0],"bool"), list[2,8,108,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 108, 181].  Tensor sizes: [2, 1, 108, 0]
2025-03-05 15:22:58.130815 test begin: paddle.broadcast_to(Tensor([2, 1, 108, 0],"bool"), list[2,8,108,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 108, 0],"bool"), list[2,8,108,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 108, 81].  Tensor sizes: [2, 1, 108, 0]
2025-03-05 15:22:58.131401 test begin: paddle.broadcast_to(Tensor([2, 1, 108, 0],"bool"), list[2,8,108,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 108, 0],"bool"), list[2,8,108,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 108, 85].  Tensor sizes: [2, 1, 108, 0]
2025-03-05 15:22:58.132003 test begin: paddle.broadcast_to(Tensor([2, 1, 109, 0],"bool"), list[2,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 109, 0],"bool"), list[2,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 109, 109].  Tensor sizes: [2, 1, 109, 0]
2025-03-05 15:22:58.132616 test begin: paddle.broadcast_to(Tensor([2, 1, 109, 0],"bool"), list[2,8,109,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 109, 0],"bool"), list[2,8,109,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 109, 121].  Tensor sizes: [2, 1, 109, 0]
2025-03-05 15:22:58.133288 test begin: paddle.broadcast_to(Tensor([2, 1, 109, 0],"bool"), list[2,8,109,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 109, 0],"bool"), list[2,8,109,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 109, 129].  Tensor sizes: [2, 1, 109, 0]
2025-03-05 15:22:58.133932 test begin: paddle.broadcast_to(Tensor([2, 1, 109, 0],"bool"), list[2,8,109,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 109, 0],"bool"), list[2,8,109,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 109, 161].  Tensor sizes: [2, 1, 109, 0]
2025-03-05 15:22:58.134548 test begin: paddle.broadcast_to(Tensor([2, 1, 109, 0],"bool"), list[2,8,109,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 109, 0],"bool"), list[2,8,109,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 109, 181].  Tensor sizes: [2, 1, 109, 0]
2025-03-05 15:22:58.135094 test begin: paddle.broadcast_to(Tensor([2, 1, 109, 0],"bool"), list[2,8,109,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 109, 0],"bool"), list[2,8,109,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 109, 81].  Tensor sizes: [2, 1, 109, 0]
2025-03-05 15:22:58.135648 test begin: paddle.broadcast_to(Tensor([2, 1, 109, 0],"bool"), list[2,8,109,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 109, 0],"bool"), list[2,8,109,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 109, 85].  Tensor sizes: [2, 1, 109, 0]
2025-03-05 15:22:58.136173 test begin: paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 11, 11].  Tensor sizes: [2, 1, 11, 0]
2025-03-05 15:22:58.136693 test begin: paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 11, 121].  Tensor sizes: [2, 1, 11, 0]
2025-03-05 15:22:58.137205 test begin: paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 11, 129].  Tensor sizes: [2, 1, 11, 0]
2025-03-05 15:22:58.137747 test begin: paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 11, 161].  Tensor sizes: [2, 1, 11, 0]
2025-03-05 15:22:58.138249 test begin: paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 11, 17].  Tensor sizes: [2, 1, 11, 0]
2025-03-05 15:22:58.138887 test begin: paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 11, 181].  Tensor sizes: [2, 1, 11, 0]
2025-03-05 15:22:58.139498 test begin: paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 11, 41].  Tensor sizes: [2, 1, 11, 0]
2025-03-05 15:22:58.140102 test begin: paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 11, 57].  Tensor sizes: [2, 1, 11, 0]
2025-03-05 15:22:58.140719 test begin: paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 11, 81].  Tensor sizes: [2, 1, 11, 0]
2025-03-05 15:22:58.143209 test begin: paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 11, 85].  Tensor sizes: [2, 1, 11, 0]
2025-03-05 15:22:58.143850 test begin: paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 11, 0],"bool"), list[2,8,11,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 11, 9].  Tensor sizes: [2, 1, 11, 0]
2025-03-05 15:22:58.144457 test begin: paddle.broadcast_to(Tensor([2, 1, 110, 0],"bool"), list[2,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 110, 0],"bool"), list[2,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 110, 110].  Tensor sizes: [2, 1, 110, 0]
2025-03-05 15:22:58.145082 test begin: paddle.broadcast_to(Tensor([2, 1, 110, 0],"bool"), list[2,8,110,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 110, 0],"bool"), list[2,8,110,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 110, 121].  Tensor sizes: [2, 1, 110, 0]
2025-03-05 15:22:58.145689 test begin: paddle.broadcast_to(Tensor([2, 1, 110, 0],"bool"), list[2,8,110,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 110, 0],"bool"), list[2,8,110,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 110, 129].  Tensor sizes: [2, 1, 110, 0]
2025-03-05 15:22:58.146305 test begin: paddle.broadcast_to(Tensor([2, 1, 110, 0],"bool"), list[2,8,110,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 110, 0],"bool"), list[2,8,110,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 110, 161].  Tensor sizes: [2, 1, 110, 0]
2025-03-05 15:22:58.146908 test begin: paddle.broadcast_to(Tensor([2, 1, 110, 0],"bool"), list[2,8,110,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 110, 0],"bool"), list[2,8,110,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 110, 181].  Tensor sizes: [2, 1, 110, 0]
2025-03-05 15:22:58.147506 test begin: paddle.broadcast_to(Tensor([2, 1, 110, 0],"bool"), list[2,8,110,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 110, 0],"bool"), list[2,8,110,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 110, 81].  Tensor sizes: [2, 1, 110, 0]
2025-03-05 15:22:58.148114 test begin: paddle.broadcast_to(Tensor([2, 1, 110, 0],"bool"), list[2,8,110,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 110, 0],"bool"), list[2,8,110,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 110, 85].  Tensor sizes: [2, 1, 110, 0]
2025-03-05 15:22:58.148728 test begin: paddle.broadcast_to(Tensor([2, 1, 111, 0],"bool"), list[2,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 111, 0],"bool"), list[2,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 111, 111].  Tensor sizes: [2, 1, 111, 0]
2025-03-05 15:22:58.149354 test begin: paddle.broadcast_to(Tensor([2, 1, 111, 0],"bool"), list[2,8,111,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 111, 0],"bool"), list[2,8,111,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 111, 121].  Tensor sizes: [2, 1, 111, 0]
2025-03-05 15:22:58.149964 test begin: paddle.broadcast_to(Tensor([2, 1, 111, 0],"bool"), list[2,8,111,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 111, 0],"bool"), list[2,8,111,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 111, 129].  Tensor sizes: [2, 1, 111, 0]
2025-03-05 15:22:58.150632 test begin: paddle.broadcast_to(Tensor([2, 1, 111, 0],"bool"), list[2,8,111,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 111, 0],"bool"), list[2,8,111,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 111, 161].  Tensor sizes: [2, 1, 111, 0]
2025-03-05 15:22:58.151289 test begin: paddle.broadcast_to(Tensor([2, 1, 111, 0],"bool"), list[2,8,111,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 111, 0],"bool"), list[2,8,111,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 111, 181].  Tensor sizes: [2, 1, 111, 0]
2025-03-05 15:22:58.151912 test begin: paddle.broadcast_to(Tensor([2, 1, 111, 0],"bool"), list[2,8,111,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 111, 0],"bool"), list[2,8,111,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 111, 81].  Tensor sizes: [2, 1, 111, 0]
2025-03-05 15:22:58.152514 test begin: paddle.broadcast_to(Tensor([2, 1, 111, 0],"bool"), list[2,8,111,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 111, 0],"bool"), list[2,8,111,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 111, 85].  Tensor sizes: [2, 1, 111, 0]
2025-03-05 15:22:58.153135 test begin: paddle.broadcast_to(Tensor([2, 1, 112, 0],"bool"), list[2,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 112, 0],"bool"), list[2,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 112, 112].  Tensor sizes: [2, 1, 112, 0]
2025-03-05 15:22:58.153748 test begin: paddle.broadcast_to(Tensor([2, 1, 112, 0],"bool"), list[2,8,112,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 112, 0],"bool"), list[2,8,112,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 112, 121].  Tensor sizes: [2, 1, 112, 0]
2025-03-05 15:22:58.154358 test begin: paddle.broadcast_to(Tensor([2, 1, 112, 0],"bool"), list[2,8,112,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 112, 0],"bool"), list[2,8,112,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 112, 129].  Tensor sizes: [2, 1, 112, 0]
2025-03-05 15:22:58.154955 test begin: paddle.broadcast_to(Tensor([2, 1, 112, 0],"bool"), list[2,8,112,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 112, 0],"bool"), list[2,8,112,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 112, 161].  Tensor sizes: [2, 1, 112, 0]
2025-03-05 15:22:58.155651 test begin: paddle.broadcast_to(Tensor([2, 1, 112, 0],"bool"), list[2,8,112,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 112, 0],"bool"), list[2,8,112,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 112, 181].  Tensor sizes: [2, 1, 112, 0]
2025-03-05 15:22:58.156287 test begin: paddle.broadcast_to(Tensor([2, 1, 112, 0],"bool"), list[2,8,112,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 112, 0],"bool"), list[2,8,112,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 112, 81].  Tensor sizes: [2, 1, 112, 0]
2025-03-05 15:22:58.156817 test begin: paddle.broadcast_to(Tensor([2, 1, 112, 0],"bool"), list[2,8,112,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 112, 0],"bool"), list[2,8,112,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 112, 85].  Tensor sizes: [2, 1, 112, 0]
2025-03-05 15:22:58.157346 test begin: paddle.broadcast_to(Tensor([2, 1, 113, 0],"bool"), list[2,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 113, 0],"bool"), list[2,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 113, 113].  Tensor sizes: [2, 1, 113, 0]
2025-03-05 15:22:58.157864 test begin: paddle.broadcast_to(Tensor([2, 1, 113, 0],"bool"), list[2,8,113,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 113, 0],"bool"), list[2,8,113,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 113, 121].  Tensor sizes: [2, 1, 113, 0]
2025-03-05 15:22:58.158368 test begin: paddle.broadcast_to(Tensor([2, 1, 113, 0],"bool"), list[2,8,113,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 113, 0],"bool"), list[2,8,113,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 113, 129].  Tensor sizes: [2, 1, 113, 0]
2025-03-05 15:22:58.158877 test begin: paddle.broadcast_to(Tensor([2, 1, 113, 0],"bool"), list[2,8,113,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 113, 0],"bool"), list[2,8,113,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 113, 161].  Tensor sizes: [2, 1, 113, 0]
2025-03-05 15:22:58.159393 test begin: paddle.broadcast_to(Tensor([2, 1, 113, 0],"bool"), list[2,8,113,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 113, 0],"bool"), list[2,8,113,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 113, 181].  Tensor sizes: [2, 1, 113, 0]
2025-03-05 15:22:58.159965 test begin: paddle.broadcast_to(Tensor([2, 1, 113, 0],"bool"), list[2,8,113,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 113, 0],"bool"), list[2,8,113,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 113, 81].  Tensor sizes: [2, 1, 113, 0]
2025-03-05 15:22:58.160517 test begin: paddle.broadcast_to(Tensor([2, 1, 113, 0],"bool"), list[2,8,113,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 113, 0],"bool"), list[2,8,113,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 113, 85].  Tensor sizes: [2, 1, 113, 0]
2025-03-05 15:22:58.161069 test begin: paddle.broadcast_to(Tensor([2, 1, 114, 0],"bool"), list[2,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 114, 0],"bool"), list[2,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 114, 114].  Tensor sizes: [2, 1, 114, 0]
2025-03-05 15:22:58.161580 test begin: paddle.broadcast_to(Tensor([2, 1, 114, 0],"bool"), list[2,8,114,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 114, 0],"bool"), list[2,8,114,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 114, 121].  Tensor sizes: [2, 1, 114, 0]
2025-03-05 15:22:58.162099 test begin: paddle.broadcast_to(Tensor([2, 1, 114, 0],"bool"), list[2,8,114,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 114, 0],"bool"), list[2,8,114,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 114, 129].  Tensor sizes: [2, 1, 114, 0]
2025-03-05 15:22:58.162618 test begin: paddle.broadcast_to(Tensor([2, 1, 114, 0],"bool"), list[2,8,114,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 114, 0],"bool"), list[2,8,114,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 114, 161].  Tensor sizes: [2, 1, 114, 0]
2025-03-05 15:22:58.163134 test begin: paddle.broadcast_to(Tensor([2, 1, 114, 0],"bool"), list[2,8,114,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 114, 0],"bool"), list[2,8,114,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 114, 181].  Tensor sizes: [2, 1, 114, 0]
2025-03-05 15:22:58.163641 test begin: paddle.broadcast_to(Tensor([2, 1, 114, 0],"bool"), list[2,8,114,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 114, 0],"bool"), list[2,8,114,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 114, 81].  Tensor sizes: [2, 1, 114, 0]
2025-03-05 15:22:58.164176 test begin: paddle.broadcast_to(Tensor([2, 1, 114, 0],"bool"), list[2,8,114,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 114, 0],"bool"), list[2,8,114,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 114, 85].  Tensor sizes: [2, 1, 114, 0]
2025-03-05 15:22:58.164696 test begin: paddle.broadcast_to(Tensor([2, 1, 115, 0],"bool"), list[2,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 115, 0],"bool"), list[2,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 115, 115].  Tensor sizes: [2, 1, 115, 0]
2025-03-05 15:22:58.165200 test begin: paddle.broadcast_to(Tensor([2, 1, 115, 0],"bool"), list[2,8,115,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 115, 0],"bool"), list[2,8,115,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 115, 121].  Tensor sizes: [2, 1, 115, 0]
2025-03-05 15:22:58.165711 test begin: paddle.broadcast_to(Tensor([2, 1, 115, 0],"bool"), list[2,8,115,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 115, 0],"bool"), list[2,8,115,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 115, 129].  Tensor sizes: [2, 1, 115, 0]
2025-03-05 15:22:58.166215 test begin: paddle.broadcast_to(Tensor([2, 1, 115, 0],"bool"), list[2,8,115,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 115, 0],"bool"), list[2,8,115,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 115, 161].  Tensor sizes: [2, 1, 115, 0]
2025-03-05 15:22:58.166737 test begin: paddle.broadcast_to(Tensor([2, 1, 115, 0],"bool"), list[2,8,115,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 115, 0],"bool"), list[2,8,115,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 115, 181].  Tensor sizes: [2, 1, 115, 0]
2025-03-05 15:22:58.167240 test begin: paddle.broadcast_to(Tensor([2, 1, 115, 0],"bool"), list[2,8,115,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 115, 0],"bool"), list[2,8,115,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 115, 81].  Tensor sizes: [2, 1, 115, 0]
2025-03-05 15:22:58.167750 test begin: paddle.broadcast_to(Tensor([2, 1, 115, 0],"bool"), list[2,8,115,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 115, 0],"bool"), list[2,8,115,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 115, 85].  Tensor sizes: [2, 1, 115, 0]
2025-03-05 15:22:58.168688 test begin: paddle.broadcast_to(Tensor([2, 1, 116, 0],"bool"), list[2,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 116, 0],"bool"), list[2,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 116, 116].  Tensor sizes: [2, 1, 116, 0]
2025-03-05 15:22:58.169386 test begin: paddle.broadcast_to(Tensor([2, 1, 116, 0],"bool"), list[2,8,116,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 116, 0],"bool"), list[2,8,116,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 116, 121].  Tensor sizes: [2, 1, 116, 0]
2025-03-05 15:22:58.169952 test begin: paddle.broadcast_to(Tensor([2, 1, 116, 0],"bool"), list[2,8,116,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 116, 0],"bool"), list[2,8,116,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 116, 129].  Tensor sizes: [2, 1, 116, 0]
2025-03-05 15:22:58.170476 test begin: paddle.broadcast_to(Tensor([2, 1, 116, 0],"bool"), list[2,8,116,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 116, 0],"bool"), list[2,8,116,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 116, 161].  Tensor sizes: [2, 1, 116, 0]
2025-03-05 15:22:58.171011 test begin: paddle.broadcast_to(Tensor([2, 1, 116, 0],"bool"), list[2,8,116,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 116, 0],"bool"), list[2,8,116,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 116, 181].  Tensor sizes: [2, 1, 116, 0]
2025-03-05 15:22:58.171527 test begin: paddle.broadcast_to(Tensor([2, 1, 116, 0],"bool"), list[2,8,116,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 116, 0],"bool"), list[2,8,116,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 116, 81].  Tensor sizes: [2, 1, 116, 0]
2025-03-05 15:22:58.172065 test begin: paddle.broadcast_to(Tensor([2, 1, 116, 0],"bool"), list[2,8,116,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 116, 0],"bool"), list[2,8,116,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 116, 85].  Tensor sizes: [2, 1, 116, 0]
2025-03-05 15:22:58.172568 test begin: paddle.broadcast_to(Tensor([2, 1, 117, 0],"bool"), list[2,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 117, 0],"bool"), list[2,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 117, 117].  Tensor sizes: [2, 1, 117, 0]
2025-03-05 15:22:58.173138 test begin: paddle.broadcast_to(Tensor([2, 1, 117, 0],"bool"), list[2,8,117,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 117, 0],"bool"), list[2,8,117,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 117, 121].  Tensor sizes: [2, 1, 117, 0]
2025-03-05 15:22:58.173671 test begin: paddle.broadcast_to(Tensor([2, 1, 117, 0],"bool"), list[2,8,117,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 117, 0],"bool"), list[2,8,117,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 117, 129].  Tensor sizes: [2, 1, 117, 0]
2025-03-05 15:22:58.174177 test begin: paddle.broadcast_to(Tensor([2, 1, 117, 0],"bool"), list[2,8,117,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 117, 0],"bool"), list[2,8,117,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 117, 161].  Tensor sizes: [2, 1, 117, 0]
2025-03-05 15:22:58.174685 test begin: paddle.broadcast_to(Tensor([2, 1, 117, 0],"bool"), list[2,8,117,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 117, 0],"bool"), list[2,8,117,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 117, 181].  Tensor sizes: [2, 1, 117, 0]
2025-03-05 15:22:58.175200 test begin: paddle.broadcast_to(Tensor([2, 1, 117, 0],"bool"), list[2,8,117,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 117, 0],"bool"), list[2,8,117,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 117, 81].  Tensor sizes: [2, 1, 117, 0]
2025-03-05 15:22:58.175735 test begin: paddle.broadcast_to(Tensor([2, 1, 117, 0],"bool"), list[2,8,117,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 117, 0],"bool"), list[2,8,117,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 117, 85].  Tensor sizes: [2, 1, 117, 0]
2025-03-05 15:22:58.176265 test begin: paddle.broadcast_to(Tensor([2, 1, 118, 0],"bool"), list[2,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 118, 0],"bool"), list[2,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 118, 118].  Tensor sizes: [2, 1, 118, 0]
2025-03-05 15:22:58.176797 test begin: paddle.broadcast_to(Tensor([2, 1, 118, 0],"bool"), list[2,8,118,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 118, 0],"bool"), list[2,8,118,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 118, 121].  Tensor sizes: [2, 1, 118, 0]
2025-03-05 15:22:58.177333 test begin: paddle.broadcast_to(Tensor([2, 1, 118, 0],"bool"), list[2,8,118,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 118, 0],"bool"), list[2,8,118,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 118, 129].  Tensor sizes: [2, 1, 118, 0]
2025-03-05 15:22:58.177846 test begin: paddle.broadcast_to(Tensor([2, 1, 118, 0],"bool"), list[2,8,118,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 118, 0],"bool"), list[2,8,118,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 118, 161].  Tensor sizes: [2, 1, 118, 0]
2025-03-05 15:22:58.178345 test begin: paddle.broadcast_to(Tensor([2, 1, 118, 0],"bool"), list[2,8,118,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 118, 0],"bool"), list[2,8,118,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 118, 181].  Tensor sizes: [2, 1, 118, 0]
2025-03-05 15:22:58.178874 test begin: paddle.broadcast_to(Tensor([2, 1, 118, 0],"bool"), list[2,8,118,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 118, 0],"bool"), list[2,8,118,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 118, 81].  Tensor sizes: [2, 1, 118, 0]
2025-03-05 15:22:58.179394 test begin: paddle.broadcast_to(Tensor([2, 1, 118, 0],"bool"), list[2,8,118,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 118, 0],"bool"), list[2,8,118,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 118, 85].  Tensor sizes: [2, 1, 118, 0]
2025-03-05 15:22:58.179926 test begin: paddle.broadcast_to(Tensor([2, 1, 119, 0],"bool"), list[2,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 119, 0],"bool"), list[2,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 119, 119].  Tensor sizes: [2, 1, 119, 0]
2025-03-05 15:22:58.180436 test begin: paddle.broadcast_to(Tensor([2, 1, 119, 0],"bool"), list[2,8,119,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 119, 0],"bool"), list[2,8,119,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 119, 121].  Tensor sizes: [2, 1, 119, 0]
2025-03-05 15:22:58.180943 test begin: paddle.broadcast_to(Tensor([2, 1, 119, 0],"bool"), list[2,8,119,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 119, 0],"bool"), list[2,8,119,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 119, 129].  Tensor sizes: [2, 1, 119, 0]
2025-03-05 15:22:58.181455 test begin: paddle.broadcast_to(Tensor([2, 1, 119, 0],"bool"), list[2,8,119,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 119, 0],"bool"), list[2,8,119,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 119, 161].  Tensor sizes: [2, 1, 119, 0]
2025-03-05 15:22:58.181964 test begin: paddle.broadcast_to(Tensor([2, 1, 119, 0],"bool"), list[2,8,119,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 119, 0],"bool"), list[2,8,119,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 119, 181].  Tensor sizes: [2, 1, 119, 0]
2025-03-05 15:22:58.182478 test begin: paddle.broadcast_to(Tensor([2, 1, 119, 0],"bool"), list[2,8,119,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 119, 0],"bool"), list[2,8,119,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 119, 81].  Tensor sizes: [2, 1, 119, 0]
2025-03-05 15:22:58.182990 test begin: paddle.broadcast_to(Tensor([2, 1, 119, 0],"bool"), list[2,8,119,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 119, 0],"bool"), list[2,8,119,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 119, 85].  Tensor sizes: [2, 1, 119, 0]
2025-03-05 15:22:58.183496 test begin: paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 12, 12].  Tensor sizes: [2, 1, 12, 0]
2025-03-05 15:22:58.184013 test begin: paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 12, 121].  Tensor sizes: [2, 1, 12, 0]
2025-03-05 15:22:58.184517 test begin: paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 12, 129].  Tensor sizes: [2, 1, 12, 0]
2025-03-05 15:22:58.185040 test begin: paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 12, 161].  Tensor sizes: [2, 1, 12, 0]
2025-03-05 15:22:58.185543 test begin: paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 12, 17].  Tensor sizes: [2, 1, 12, 0]
2025-03-05 15:22:58.186053 test begin: paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 12, 181].  Tensor sizes: [2, 1, 12, 0]
2025-03-05 15:22:58.186550 test begin: paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 12, 41].  Tensor sizes: [2, 1, 12, 0]
2025-03-05 15:22:58.187084 test begin: paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 12, 57].  Tensor sizes: [2, 1, 12, 0]
2025-03-05 15:22:58.187614 test begin: paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 12, 81].  Tensor sizes: [2, 1, 12, 0]
2025-03-05 15:22:58.188122 test begin: paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 12, 0],"bool"), list[2,8,12,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 12, 85].  Tensor sizes: [2, 1, 12, 0]
2025-03-05 15:22:58.188653 test begin: paddle.broadcast_to(Tensor([2, 1, 120, 0],"bool"), list[2,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 120, 0],"bool"), list[2,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 120, 120].  Tensor sizes: [2, 1, 120, 0]
2025-03-05 15:22:58.189184 test begin: paddle.broadcast_to(Tensor([2, 1, 120, 0],"bool"), list[2,8,120,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 120, 0],"bool"), list[2,8,120,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 120, 121].  Tensor sizes: [2, 1, 120, 0]
2025-03-05 15:22:58.189750 test begin: paddle.broadcast_to(Tensor([2, 1, 120, 0],"bool"), list[2,8,120,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 120, 0],"bool"), list[2,8,120,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 120, 129].  Tensor sizes: [2, 1, 120, 0]
2025-03-05 15:22:58.190274 test begin: paddle.broadcast_to(Tensor([2, 1, 120, 0],"bool"), list[2,8,120,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 120, 0],"bool"), list[2,8,120,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 120, 161].  Tensor sizes: [2, 1, 120, 0]
2025-03-05 15:22:58.190791 test begin: paddle.broadcast_to(Tensor([2, 1, 120, 0],"bool"), list[2,8,120,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 120, 0],"bool"), list[2,8,120,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 120, 181].  Tensor sizes: [2, 1, 120, 0]
2025-03-05 15:22:58.191315 test begin: paddle.broadcast_to(Tensor([2, 1, 120, 0],"bool"), list[2,8,120,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 120, 0],"bool"), list[2,8,120,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 120, 81].  Tensor sizes: [2, 1, 120, 0]
2025-03-05 15:22:58.191843 test begin: paddle.broadcast_to(Tensor([2, 1, 120, 0],"bool"), list[2,8,120,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 120, 0],"bool"), list[2,8,120,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 120, 85].  Tensor sizes: [2, 1, 120, 0]
2025-03-05 15:22:58.192352 test begin: paddle.broadcast_to(Tensor([2, 1, 121, 0],"bool"), list[2,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 121, 0],"bool"), list[2,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 121, 121].  Tensor sizes: [2, 1, 121, 0]
2025-03-05 15:22:58.192868 test begin: paddle.broadcast_to(Tensor([2, 1, 121, 0],"bool"), list[2,8,121,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 121, 0],"bool"), list[2,8,121,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 121, 129].  Tensor sizes: [2, 1, 121, 0]
2025-03-05 15:22:58.193405 test begin: paddle.broadcast_to(Tensor([2, 1, 121, 0],"bool"), list[2,8,121,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 121, 0],"bool"), list[2,8,121,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 121, 161].  Tensor sizes: [2, 1, 121, 0]
2025-03-05 15:22:58.193928 test begin: paddle.broadcast_to(Tensor([2, 1, 121, 0],"bool"), list[2,8,121,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 121, 0],"bool"), list[2,8,121,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 121, 181].  Tensor sizes: [2, 1, 121, 0]
2025-03-05 15:22:58.194441 test begin: paddle.broadcast_to(Tensor([2, 1, 121, 0],"bool"), list[2,8,121,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 121, 0],"bool"), list[2,8,121,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 121, 81].  Tensor sizes: [2, 1, 121, 0]
2025-03-05 15:22:58.194964 test begin: paddle.broadcast_to(Tensor([2, 1, 121, 0],"bool"), list[2,8,121,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 121, 0],"bool"), list[2,8,121,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 121, 85].  Tensor sizes: [2, 1, 121, 0]
2025-03-05 15:22:58.195482 test begin: paddle.broadcast_to(Tensor([2, 1, 122, 0],"bool"), list[2,8,122,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 122, 0],"bool"), list[2,8,122,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 122, 121].  Tensor sizes: [2, 1, 122, 0]
2025-03-05 15:22:58.196004 test begin: paddle.broadcast_to(Tensor([2, 1, 122, 0],"bool"), list[2,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 122, 0],"bool"), list[2,8,122,122,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 122, 122].  Tensor sizes: [2, 1, 122, 0]
2025-03-05 15:22:58.196507 test begin: paddle.broadcast_to(Tensor([2, 1, 122, 0],"bool"), list[2,8,122,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 122, 0],"bool"), list[2,8,122,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 122, 129].  Tensor sizes: [2, 1, 122, 0]
2025-03-05 15:22:58.197025 test begin: paddle.broadcast_to(Tensor([2, 1, 122, 0],"bool"), list[2,8,122,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 122, 0],"bool"), list[2,8,122,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 122, 161].  Tensor sizes: [2, 1, 122, 0]
2025-03-05 15:22:58.197543 test begin: paddle.broadcast_to(Tensor([2, 1, 122, 0],"bool"), list[2,8,122,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 122, 0],"bool"), list[2,8,122,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 122, 181].  Tensor sizes: [2, 1, 122, 0]
2025-03-05 15:22:58.198077 test begin: paddle.broadcast_to(Tensor([2, 1, 122, 0],"bool"), list[2,8,122,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 122, 0],"bool"), list[2,8,122,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 122, 81].  Tensor sizes: [2, 1, 122, 0]
2025-03-05 15:22:58.198605 test begin: paddle.broadcast_to(Tensor([2, 1, 122, 0],"bool"), list[2,8,122,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 122, 0],"bool"), list[2,8,122,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 122, 85].  Tensor sizes: [2, 1, 122, 0]
2025-03-05 15:22:58.199123 test begin: paddle.broadcast_to(Tensor([2, 1, 123, 0],"bool"), list[2,8,123,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 123, 0],"bool"), list[2,8,123,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 123, 121].  Tensor sizes: [2, 1, 123, 0]
2025-03-05 15:22:58.199637 test begin: paddle.broadcast_to(Tensor([2, 1, 123, 0],"bool"), list[2,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 123, 0],"bool"), list[2,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 123, 123].  Tensor sizes: [2, 1, 123, 0]
2025-03-05 15:22:58.200142 test begin: paddle.broadcast_to(Tensor([2, 1, 123, 0],"bool"), list[2,8,123,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 123, 0],"bool"), list[2,8,123,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 123, 129].  Tensor sizes: [2, 1, 123, 0]
2025-03-05 15:22:58.200667 test begin: paddle.broadcast_to(Tensor([2, 1, 123, 0],"bool"), list[2,8,123,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 123, 0],"bool"), list[2,8,123,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 123, 161].  Tensor sizes: [2, 1, 123, 0]
2025-03-05 15:22:58.201182 test begin: paddle.broadcast_to(Tensor([2, 1, 123, 0],"bool"), list[2,8,123,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 123, 0],"bool"), list[2,8,123,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 123, 181].  Tensor sizes: [2, 1, 123, 0]
2025-03-05 15:22:58.201698 test begin: paddle.broadcast_to(Tensor([2, 1, 123, 0],"bool"), list[2,8,123,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 123, 0],"bool"), list[2,8,123,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 123, 81].  Tensor sizes: [2, 1, 123, 0]
2025-03-05 15:22:58.202197 test begin: paddle.broadcast_to(Tensor([2, 1, 123, 0],"bool"), list[2,8,123,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 123, 0],"bool"), list[2,8,123,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 123, 85].  Tensor sizes: [2, 1, 123, 0]
2025-03-05 15:22:58.202722 test begin: paddle.broadcast_to(Tensor([2, 1, 124, 0],"bool"), list[2,8,124,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 124, 0],"bool"), list[2,8,124,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 124, 121].  Tensor sizes: [2, 1, 124, 0]
2025-03-05 15:22:58.203237 test begin: paddle.broadcast_to(Tensor([2, 1, 124, 0],"bool"), list[2,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 124, 0],"bool"), list[2,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 124, 124].  Tensor sizes: [2, 1, 124, 0]
2025-03-05 15:22:58.203827 test begin: paddle.broadcast_to(Tensor([2, 1, 124, 0],"bool"), list[2,8,124,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 124, 0],"bool"), list[2,8,124,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 124, 129].  Tensor sizes: [2, 1, 124, 0]
2025-03-05 15:22:58.204342 test begin: paddle.broadcast_to(Tensor([2, 1, 124, 0],"bool"), list[2,8,124,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 124, 0],"bool"), list[2,8,124,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 124, 161].  Tensor sizes: [2, 1, 124, 0]
2025-03-05 15:22:58.204882 test begin: paddle.broadcast_to(Tensor([2, 1, 124, 0],"bool"), list[2,8,124,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 124, 0],"bool"), list[2,8,124,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 124, 181].  Tensor sizes: [2, 1, 124, 0]
2025-03-05 15:22:58.205400 test begin: paddle.broadcast_to(Tensor([2, 1, 124, 0],"bool"), list[2,8,124,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 124, 0],"bool"), list[2,8,124,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 124, 81].  Tensor sizes: [2, 1, 124, 0]
2025-03-05 15:22:58.205922 test begin: paddle.broadcast_to(Tensor([2, 1, 124, 0],"bool"), list[2,8,124,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 124, 0],"bool"), list[2,8,124,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 124, 85].  Tensor sizes: [2, 1, 124, 0]
2025-03-05 15:22:58.206436 test begin: paddle.broadcast_to(Tensor([2, 1, 125, 0],"bool"), list[2,8,125,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 125, 0],"bool"), list[2,8,125,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 125, 121].  Tensor sizes: [2, 1, 125, 0]
2025-03-05 15:22:58.206970 test begin: paddle.broadcast_to(Tensor([2, 1, 125, 0],"bool"), list[2,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 125, 0],"bool"), list[2,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 125, 125].  Tensor sizes: [2, 1, 125, 0]
2025-03-05 15:22:58.207497 test begin: paddle.broadcast_to(Tensor([2, 1, 125, 0],"bool"), list[2,8,125,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 125, 0],"bool"), list[2,8,125,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 125, 129].  Tensor sizes: [2, 1, 125, 0]
2025-03-05 15:22:58.208025 test begin: paddle.broadcast_to(Tensor([2, 1, 125, 0],"bool"), list[2,8,125,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 125, 0],"bool"), list[2,8,125,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 125, 161].  Tensor sizes: [2, 1, 125, 0]
2025-03-05 15:22:58.208532 test begin: paddle.broadcast_to(Tensor([2, 1, 125, 0],"bool"), list[2,8,125,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 125, 0],"bool"), list[2,8,125,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 125, 181].  Tensor sizes: [2, 1, 125, 0]
2025-03-05 15:22:58.209045 test begin: paddle.broadcast_to(Tensor([2, 1, 125, 0],"bool"), list[2,8,125,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 125, 0],"bool"), list[2,8,125,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 125, 81].  Tensor sizes: [2, 1, 125, 0]
2025-03-05 15:22:58.209549 test begin: paddle.broadcast_to(Tensor([2, 1, 125, 0],"bool"), list[2,8,125,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 125, 0],"bool"), list[2,8,125,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 125, 85].  Tensor sizes: [2, 1, 125, 0]
2025-03-05 15:22:58.210077 test begin: paddle.broadcast_to(Tensor([2, 1, 126, 0],"bool"), list[2,8,126,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 126, 0],"bool"), list[2,8,126,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 126, 121].  Tensor sizes: [2, 1, 126, 0]
2025-03-05 15:22:58.210610 test begin: paddle.broadcast_to(Tensor([2, 1, 126, 0],"bool"), list[2,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 126, 0],"bool"), list[2,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 126, 126].  Tensor sizes: [2, 1, 126, 0]
2025-03-05 15:22:58.211133 test begin: paddle.broadcast_to(Tensor([2, 1, 126, 0],"bool"), list[2,8,126,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 126, 0],"bool"), list[2,8,126,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 126, 129].  Tensor sizes: [2, 1, 126, 0]
2025-03-05 15:22:58.211653 test begin: paddle.broadcast_to(Tensor([2, 1, 126, 0],"bool"), list[2,8,126,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 126, 0],"bool"), list[2,8,126,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 126, 161].  Tensor sizes: [2, 1, 126, 0]
2025-03-05 15:22:58.212178 test begin: paddle.broadcast_to(Tensor([2, 1, 126, 0],"bool"), list[2,8,126,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 126, 0],"bool"), list[2,8,126,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 126, 181].  Tensor sizes: [2, 1, 126, 0]
2025-03-05 15:22:58.212694 test begin: paddle.broadcast_to(Tensor([2, 1, 126, 0],"bool"), list[2,8,126,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 126, 0],"bool"), list[2,8,126,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 126, 81].  Tensor sizes: [2, 1, 126, 0]
2025-03-05 15:22:58.213222 test begin: paddle.broadcast_to(Tensor([2, 1, 126, 0],"bool"), list[2,8,126,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 126, 0],"bool"), list[2,8,126,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 126, 85].  Tensor sizes: [2, 1, 126, 0]
2025-03-05 15:22:58.213749 test begin: paddle.broadcast_to(Tensor([2, 1, 127, 0],"bool"), list[2,8,127,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 127, 0],"bool"), list[2,8,127,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 127, 121].  Tensor sizes: [2, 1, 127, 0]
2025-03-05 15:22:58.214261 test begin: paddle.broadcast_to(Tensor([2, 1, 127, 0],"bool"), list[2,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 127, 0],"bool"), list[2,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 127, 127].  Tensor sizes: [2, 1, 127, 0]
2025-03-05 15:22:58.214772 test begin: paddle.broadcast_to(Tensor([2, 1, 127, 0],"bool"), list[2,8,127,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 127, 0],"bool"), list[2,8,127,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 127, 129].  Tensor sizes: [2, 1, 127, 0]
2025-03-05 15:22:58.215282 test begin: paddle.broadcast_to(Tensor([2, 1, 127, 0],"bool"), list[2,8,127,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 127, 0],"bool"), list[2,8,127,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 127, 161].  Tensor sizes: [2, 1, 127, 0]
2025-03-05 15:22:58.215794 test begin: paddle.broadcast_to(Tensor([2, 1, 127, 0],"bool"), list[2,8,127,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 127, 0],"bool"), list[2,8,127,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 127, 181].  Tensor sizes: [2, 1, 127, 0]
2025-03-05 15:22:58.216297 test begin: paddle.broadcast_to(Tensor([2, 1, 127, 0],"bool"), list[2,8,127,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 127, 0],"bool"), list[2,8,127,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 127, 81].  Tensor sizes: [2, 1, 127, 0]
2025-03-05 15:22:58.216839 test begin: paddle.broadcast_to(Tensor([2, 1, 127, 0],"bool"), list[2,8,127,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 127, 0],"bool"), list[2,8,127,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 127, 85].  Tensor sizes: [2, 1, 127, 0]
2025-03-05 15:22:58.217364 test begin: paddle.broadcast_to(Tensor([2, 1, 128, 0],"bool"), list[2,8,128,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 128, 0],"bool"), list[2,8,128,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 128, 121].  Tensor sizes: [2, 1, 128, 0]
2025-03-05 15:22:58.217881 test begin: paddle.broadcast_to(Tensor([2, 1, 128, 0],"bool"), list[2,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 128, 0],"bool"), list[2,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 128, 128].  Tensor sizes: [2, 1, 128, 0]
2025-03-05 15:22:58.218392 test begin: paddle.broadcast_to(Tensor([2, 1, 128, 0],"bool"), list[2,8,128,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 128, 0],"bool"), list[2,8,128,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 128, 129].  Tensor sizes: [2, 1, 128, 0]
2025-03-05 15:22:58.218918 test begin: paddle.broadcast_to(Tensor([2, 1, 128, 0],"bool"), list[2,8,128,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 128, 0],"bool"), list[2,8,128,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 128, 161].  Tensor sizes: [2, 1, 128, 0]
2025-03-05 15:22:58.219432 test begin: paddle.broadcast_to(Tensor([2, 1, 128, 0],"bool"), list[2,8,128,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 128, 0],"bool"), list[2,8,128,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 128, 181].  Tensor sizes: [2, 1, 128, 0]
2025-03-05 15:22:58.219964 test begin: paddle.broadcast_to(Tensor([2, 1, 128, 0],"bool"), list[2,8,128,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 128, 0],"bool"), list[2,8,128,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 128, 81].  Tensor sizes: [2, 1, 128, 0]
2025-03-05 15:22:58.220478 test begin: paddle.broadcast_to(Tensor([2, 1, 128, 0],"bool"), list[2,8,128,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 128, 0],"bool"), list[2,8,128,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 128, 85].  Tensor sizes: [2, 1, 128, 0]
2025-03-05 15:22:58.220997 test begin: paddle.broadcast_to(Tensor([2, 1, 129, 0],"bool"), list[2,8,129,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 129, 0],"bool"), list[2,8,129,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 129, 121].  Tensor sizes: [2, 1, 129, 0]
2025-03-05 15:22:58.221507 test begin: paddle.broadcast_to(Tensor([2, 1, 129, 0],"bool"), list[2,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 129, 0],"bool"), list[2,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 129, 129].  Tensor sizes: [2, 1, 129, 0]
2025-03-05 15:22:58.222033 test begin: paddle.broadcast_to(Tensor([2, 1, 129, 0],"bool"), list[2,8,129,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 129, 0],"bool"), list[2,8,129,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 129, 161].  Tensor sizes: [2, 1, 129, 0]
2025-03-05 15:22:58.222552 test begin: paddle.broadcast_to(Tensor([2, 1, 129, 0],"bool"), list[2,8,129,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 129, 0],"bool"), list[2,8,129,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 129, 181].  Tensor sizes: [2, 1, 129, 0]
2025-03-05 15:22:58.223068 test begin: paddle.broadcast_to(Tensor([2, 1, 129, 0],"bool"), list[2,8,129,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 129, 0],"bool"), list[2,8,129,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 129, 81].  Tensor sizes: [2, 1, 129, 0]
2025-03-05 15:22:58.223634 test begin: paddle.broadcast_to(Tensor([2, 1, 129, 0],"bool"), list[2,8,129,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 129, 0],"bool"), list[2,8,129,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 129, 85].  Tensor sizes: [2, 1, 129, 0]
2025-03-05 15:22:58.224148 test begin: paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 13, 121].  Tensor sizes: [2, 1, 13, 0]
2025-03-05 15:22:58.226854 test begin: paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 13, 129].  Tensor sizes: [2, 1, 13, 0]
2025-03-05 15:22:58.229658 test begin: paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 13, 13].  Tensor sizes: [2, 1, 13, 0]
2025-03-05 15:22:58.230192 test begin: paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 13, 161].  Tensor sizes: [2, 1, 13, 0]
2025-03-05 15:22:58.230716 test begin: paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 13, 17].  Tensor sizes: [2, 1, 13, 0]
2025-03-05 15:22:58.231227 test begin: paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 13, 181].  Tensor sizes: [2, 1, 13, 0]
2025-03-05 15:22:58.231748 test begin: paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 13, 41].  Tensor sizes: [2, 1, 13, 0]
2025-03-05 15:22:58.232267 test begin: paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 13, 57].  Tensor sizes: [2, 1, 13, 0]
2025-03-05 15:22:58.232805 test begin: paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 13, 81].  Tensor sizes: [2, 1, 13, 0]
2025-03-05 15:22:58.233321 test begin: paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 13, 0],"bool"), list[2,8,13,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 13, 85].  Tensor sizes: [2, 1, 13, 0]
2025-03-05 15:22:58.233849 test begin: paddle.broadcast_to(Tensor([2, 1, 130, 0],"bool"), list[2,8,130,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 130, 0],"bool"), list[2,8,130,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 130, 121].  Tensor sizes: [2, 1, 130, 0]
2025-03-05 15:22:58.234363 test begin: paddle.broadcast_to(Tensor([2, 1, 130, 0],"bool"), list[2,8,130,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 130, 0],"bool"), list[2,8,130,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 130, 129].  Tensor sizes: [2, 1, 130, 0]
2025-03-05 15:22:58.234943 test begin: paddle.broadcast_to(Tensor([2, 1, 130, 0],"bool"), list[2,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 130, 0],"bool"), list[2,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 130, 130].  Tensor sizes: [2, 1, 130, 0]
2025-03-05 15:22:58.235468 test begin: paddle.broadcast_to(Tensor([2, 1, 130, 0],"bool"), list[2,8,130,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 130, 0],"bool"), list[2,8,130,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 130, 161].  Tensor sizes: [2, 1, 130, 0]
2025-03-05 15:22:58.236007 test begin: paddle.broadcast_to(Tensor([2, 1, 130, 0],"bool"), list[2,8,130,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 130, 0],"bool"), list[2,8,130,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 130, 181].  Tensor sizes: [2, 1, 130, 0]
2025-03-05 15:22:58.236533 test begin: paddle.broadcast_to(Tensor([2, 1, 130, 0],"bool"), list[2,8,130,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 130, 0],"bool"), list[2,8,130,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 130, 81].  Tensor sizes: [2, 1, 130, 0]
2025-03-05 15:22:58.237062 test begin: paddle.broadcast_to(Tensor([2, 1, 130, 0],"bool"), list[2,8,130,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 130, 0],"bool"), list[2,8,130,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 130, 85].  Tensor sizes: [2, 1, 130, 0]
2025-03-05 15:22:58.237572 test begin: paddle.broadcast_to(Tensor([2, 1, 131, 0],"bool"), list[2,8,131,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 131, 0],"bool"), list[2,8,131,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 131, 121].  Tensor sizes: [2, 1, 131, 0]
2025-03-05 15:22:58.238100 test begin: paddle.broadcast_to(Tensor([2, 1, 131, 0],"bool"), list[2,8,131,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 131, 0],"bool"), list[2,8,131,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 131, 129].  Tensor sizes: [2, 1, 131, 0]
2025-03-05 15:22:58.238627 test begin: paddle.broadcast_to(Tensor([2, 1, 131, 0],"bool"), list[2,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 131, 0],"bool"), list[2,8,131,131,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 131, 131].  Tensor sizes: [2, 1, 131, 0]
2025-03-05 15:22:58.239154 test begin: paddle.broadcast_to(Tensor([2, 1, 131, 0],"bool"), list[2,8,131,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 131, 0],"bool"), list[2,8,131,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 131, 161].  Tensor sizes: [2, 1, 131, 0]
2025-03-05 15:22:58.239696 test begin: paddle.broadcast_to(Tensor([2, 1, 131, 0],"bool"), list[2,8,131,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 131, 0],"bool"), list[2,8,131,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 131, 181].  Tensor sizes: [2, 1, 131, 0]
2025-03-05 15:22:58.240222 test begin: paddle.broadcast_to(Tensor([2, 1, 131, 0],"bool"), list[2,8,131,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 131, 0],"bool"), list[2,8,131,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 131, 81].  Tensor sizes: [2, 1, 131, 0]
2025-03-05 15:22:58.240752 test begin: paddle.broadcast_to(Tensor([2, 1, 131, 0],"bool"), list[2,8,131,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 131, 0],"bool"), list[2,8,131,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 131, 85].  Tensor sizes: [2, 1, 131, 0]
2025-03-05 15:22:58.241266 test begin: paddle.broadcast_to(Tensor([2, 1, 132, 0],"bool"), list[2,8,132,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 132, 0],"bool"), list[2,8,132,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 132, 121].  Tensor sizes: [2, 1, 132, 0]
2025-03-05 15:22:58.241790 test begin: paddle.broadcast_to(Tensor([2, 1, 132, 0],"bool"), list[2,8,132,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 132, 0],"bool"), list[2,8,132,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 132, 129].  Tensor sizes: [2, 1, 132, 0]
2025-03-05 15:22:58.242302 test begin: paddle.broadcast_to(Tensor([2, 1, 132, 0],"bool"), list[2,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 132, 0],"bool"), list[2,8,132,132,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 132, 132].  Tensor sizes: [2, 1, 132, 0]
2025-03-05 15:22:58.242823 test begin: paddle.broadcast_to(Tensor([2, 1, 132, 0],"bool"), list[2,8,132,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 132, 0],"bool"), list[2,8,132,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 132, 161].  Tensor sizes: [2, 1, 132, 0]
2025-03-05 15:22:58.243341 test begin: paddle.broadcast_to(Tensor([2, 1, 132, 0],"bool"), list[2,8,132,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 132, 0],"bool"), list[2,8,132,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 132, 181].  Tensor sizes: [2, 1, 132, 0]
2025-03-05 15:22:58.243863 test begin: paddle.broadcast_to(Tensor([2, 1, 132, 0],"bool"), list[2,8,132,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 132, 0],"bool"), list[2,8,132,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 132, 81].  Tensor sizes: [2, 1, 132, 0]
2025-03-05 15:22:58.244368 test begin: paddle.broadcast_to(Tensor([2, 1, 132, 0],"bool"), list[2,8,132,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 132, 0],"bool"), list[2,8,132,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 132, 85].  Tensor sizes: [2, 1, 132, 0]
2025-03-05 15:22:58.244887 test begin: paddle.broadcast_to(Tensor([2, 1, 133, 0],"bool"), list[2,8,133,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 133, 0],"bool"), list[2,8,133,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 133, 121].  Tensor sizes: [2, 1, 133, 0]
2025-03-05 15:22:58.245394 test begin: paddle.broadcast_to(Tensor([2, 1, 133, 0],"bool"), list[2,8,133,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 133, 0],"bool"), list[2,8,133,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 133, 129].  Tensor sizes: [2, 1, 133, 0]
2025-03-05 15:22:58.245912 test begin: paddle.broadcast_to(Tensor([2, 1, 133, 0],"bool"), list[2,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 133, 0],"bool"), list[2,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 133, 133].  Tensor sizes: [2, 1, 133, 0]
2025-03-05 15:22:58.246422 test begin: paddle.broadcast_to(Tensor([2, 1, 133, 0],"bool"), list[2,8,133,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 133, 0],"bool"), list[2,8,133,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 133, 161].  Tensor sizes: [2, 1, 133, 0]
2025-03-05 15:22:58.246975 test begin: paddle.broadcast_to(Tensor([2, 1, 133, 0],"bool"), list[2,8,133,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 133, 0],"bool"), list[2,8,133,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 133, 181].  Tensor sizes: [2, 1, 133, 0]
2025-03-05 15:22:58.247494 test begin: paddle.broadcast_to(Tensor([2, 1, 133, 0],"bool"), list[2,8,133,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 133, 0],"bool"), list[2,8,133,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 133, 81].  Tensor sizes: [2, 1, 133, 0]
2025-03-05 15:22:58.249269 test begin: paddle.broadcast_to(Tensor([2, 1, 133, 0],"bool"), list[2,8,133,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 133, 0],"bool"), list[2,8,133,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 133, 85].  Tensor sizes: [2, 1, 133, 0]
2025-03-05 15:22:58.250018 test begin: paddle.broadcast_to(Tensor([2, 1, 134, 0],"bool"), list[2,8,134,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 134, 0],"bool"), list[2,8,134,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 134, 121].  Tensor sizes: [2, 1, 134, 0]
2025-03-05 15:22:58.250599 test begin: paddle.broadcast_to(Tensor([2, 1, 134, 0],"bool"), list[2,8,134,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 134, 0],"bool"), list[2,8,134,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 134, 129].  Tensor sizes: [2, 1, 134, 0]
2025-03-05 15:22:58.251178 test begin: paddle.broadcast_to(Tensor([2, 1, 134, 0],"bool"), list[2,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 134, 0],"bool"), list[2,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 134, 134].  Tensor sizes: [2, 1, 134, 0]
2025-03-05 15:22:58.251734 test begin: paddle.broadcast_to(Tensor([2, 1, 134, 0],"bool"), list[2,8,134,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 134, 0],"bool"), list[2,8,134,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 134, 161].  Tensor sizes: [2, 1, 134, 0]
2025-03-05 15:22:58.252316 test begin: paddle.broadcast_to(Tensor([2, 1, 134, 0],"bool"), list[2,8,134,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 134, 0],"bool"), list[2,8,134,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 134, 181].  Tensor sizes: [2, 1, 134, 0]
2025-03-05 15:22:58.252863 test begin: paddle.broadcast_to(Tensor([2, 1, 134, 0],"bool"), list[2,8,134,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 134, 0],"bool"), list[2,8,134,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 134, 81].  Tensor sizes: [2, 1, 134, 0]
2025-03-05 15:22:58.253395 test begin: paddle.broadcast_to(Tensor([2, 1, 134, 0],"bool"), list[2,8,134,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 134, 0],"bool"), list[2,8,134,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 134, 85].  Tensor sizes: [2, 1, 134, 0]
2025-03-05 15:22:58.253916 test begin: paddle.broadcast_to(Tensor([2, 1, 135, 0],"bool"), list[2,8,135,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 135, 0],"bool"), list[2,8,135,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 135, 121].  Tensor sizes: [2, 1, 135, 0]
2025-03-05 15:22:58.254434 test begin: paddle.broadcast_to(Tensor([2, 1, 135, 0],"bool"), list[2,8,135,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 135, 0],"bool"), list[2,8,135,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 135, 129].  Tensor sizes: [2, 1, 135, 0]
2025-03-05 15:22:58.254961 test begin: paddle.broadcast_to(Tensor([2, 1, 135, 0],"bool"), list[2,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 135, 0],"bool"), list[2,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 135, 135].  Tensor sizes: [2, 1, 135, 0]
2025-03-05 15:22:58.255477 test begin: paddle.broadcast_to(Tensor([2, 1, 135, 0],"bool"), list[2,8,135,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 135, 0],"bool"), list[2,8,135,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 135, 161].  Tensor sizes: [2, 1, 135, 0]
2025-03-05 15:22:58.256044 test begin: paddle.broadcast_to(Tensor([2, 1, 135, 0],"bool"), list[2,8,135,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 135, 0],"bool"), list[2,8,135,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 135, 181].  Tensor sizes: [2, 1, 135, 0]
2025-03-05 15:22:58.256574 test begin: paddle.broadcast_to(Tensor([2, 1, 135, 0],"bool"), list[2,8,135,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 135, 0],"bool"), list[2,8,135,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 135, 81].  Tensor sizes: [2, 1, 135, 0]
2025-03-05 15:22:58.257103 test begin: paddle.broadcast_to(Tensor([2, 1, 135, 0],"bool"), list[2,8,135,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 135, 0],"bool"), list[2,8,135,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 135, 85].  Tensor sizes: [2, 1, 135, 0]
2025-03-05 15:22:58.257653 test begin: paddle.broadcast_to(Tensor([2, 1, 136, 0],"bool"), list[2,8,136,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 136, 0],"bool"), list[2,8,136,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 136, 121].  Tensor sizes: [2, 1, 136, 0]
2025-03-05 15:22:58.258202 test begin: paddle.broadcast_to(Tensor([2, 1, 136, 0],"bool"), list[2,8,136,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 136, 0],"bool"), list[2,8,136,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 136, 129].  Tensor sizes: [2, 1, 136, 0]
2025-03-05 15:22:58.258805 test begin: paddle.broadcast_to(Tensor([2, 1, 136, 0],"bool"), list[2,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 136, 0],"bool"), list[2,8,136,136,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 136, 136].  Tensor sizes: [2, 1, 136, 0]
2025-03-05 15:22:58.259600 test begin: paddle.broadcast_to(Tensor([2, 1, 136, 0],"bool"), list[2,8,136,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 136, 0],"bool"), list[2,8,136,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 136, 181].  Tensor sizes: [2, 1, 136, 0]
2025-03-05 15:22:58.260171 test begin: paddle.broadcast_to(Tensor([2, 1, 136, 0],"bool"), list[2,8,136,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 136, 0],"bool"), list[2,8,136,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 136, 81].  Tensor sizes: [2, 1, 136, 0]
2025-03-05 15:22:58.260737 test begin: paddle.broadcast_to(Tensor([2, 1, 136, 0],"bool"), list[2,8,136,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 136, 0],"bool"), list[2,8,136,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 136, 85].  Tensor sizes: [2, 1, 136, 0]
2025-03-05 15:22:58.261266 test begin: paddle.broadcast_to(Tensor([2, 1, 137, 0],"bool"), list[2,8,137,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 137, 0],"bool"), list[2,8,137,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 137, 121].  Tensor sizes: [2, 1, 137, 0]
2025-03-05 15:22:58.261793 test begin: paddle.broadcast_to(Tensor([2, 1, 137, 0],"bool"), list[2,8,137,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 137, 0],"bool"), list[2,8,137,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 137, 129].  Tensor sizes: [2, 1, 137, 0]
2025-03-05 15:22:58.262306 test begin: paddle.broadcast_to(Tensor([2, 1, 137, 0],"bool"), list[2,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 137, 0],"bool"), list[2,8,137,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 137, 137].  Tensor sizes: [2, 1, 137, 0]
2025-03-05 15:22:58.262827 test begin: paddle.broadcast_to(Tensor([2, 1, 137, 0],"bool"), list[2,8,137,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 137, 0],"bool"), list[2,8,137,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 137, 181].  Tensor sizes: [2, 1, 137, 0]
2025-03-05 15:22:58.263331 test begin: paddle.broadcast_to(Tensor([2, 1, 137, 0],"bool"), list[2,8,137,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 137, 0],"bool"), list[2,8,137,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 137, 81].  Tensor sizes: [2, 1, 137, 0]
2025-03-05 15:22:58.263853 test begin: paddle.broadcast_to(Tensor([2, 1, 137, 0],"bool"), list[2,8,137,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 137, 0],"bool"), list[2,8,137,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 137, 85].  Tensor sizes: [2, 1, 137, 0]
2025-03-05 15:22:58.264369 test begin: paddle.broadcast_to(Tensor([2, 1, 138, 0],"bool"), list[2,8,138,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 138, 0],"bool"), list[2,8,138,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 138, 121].  Tensor sizes: [2, 1, 138, 0]
2025-03-05 15:22:58.264887 test begin: paddle.broadcast_to(Tensor([2, 1, 138, 0],"bool"), list[2,8,138,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 138, 0],"bool"), list[2,8,138,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 138, 129].  Tensor sizes: [2, 1, 138, 0]
2025-03-05 15:22:58.265398 test begin: paddle.broadcast_to(Tensor([2, 1, 138, 0],"bool"), list[2,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 138, 0],"bool"), list[2,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 138, 138].  Tensor sizes: [2, 1, 138, 0]
2025-03-05 15:22:58.265925 test begin: paddle.broadcast_to(Tensor([2, 1, 138, 0],"bool"), list[2,8,138,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 138, 0],"bool"), list[2,8,138,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 138, 181].  Tensor sizes: [2, 1, 138, 0]
2025-03-05 15:22:58.266490 test begin: paddle.broadcast_to(Tensor([2, 1, 138, 0],"bool"), list[2,8,138,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 138, 0],"bool"), list[2,8,138,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 138, 81].  Tensor sizes: [2, 1, 138, 0]
2025-03-05 15:22:58.267022 test begin: paddle.broadcast_to(Tensor([2, 1, 138, 0],"bool"), list[2,8,138,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 138, 0],"bool"), list[2,8,138,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 138, 85].  Tensor sizes: [2, 1, 138, 0]
2025-03-05 15:22:58.267531 test begin: paddle.broadcast_to(Tensor([2, 1, 139, 0],"bool"), list[2,8,139,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 139, 0],"bool"), list[2,8,139,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 139, 121].  Tensor sizes: [2, 1, 139, 0]
2025-03-05 15:22:58.268053 test begin: paddle.broadcast_to(Tensor([2, 1, 139, 0],"bool"), list[2,8,139,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 139, 0],"bool"), list[2,8,139,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 139, 129].  Tensor sizes: [2, 1, 139, 0]
2025-03-05 15:22:58.268560 test begin: paddle.broadcast_to(Tensor([2, 1, 139, 0],"bool"), list[2,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 139, 0],"bool"), list[2,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 139, 139].  Tensor sizes: [2, 1, 139, 0]
2025-03-05 15:22:58.269084 test begin: paddle.broadcast_to(Tensor([2, 1, 139, 0],"bool"), list[2,8,139,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 139, 0],"bool"), list[2,8,139,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 139, 181].  Tensor sizes: [2, 1, 139, 0]
2025-03-05 15:22:58.269607 test begin: paddle.broadcast_to(Tensor([2, 1, 139, 0],"bool"), list[2,8,139,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 139, 0],"bool"), list[2,8,139,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 139, 81].  Tensor sizes: [2, 1, 139, 0]
2025-03-05 15:22:58.270112 test begin: paddle.broadcast_to(Tensor([2, 1, 139, 0],"bool"), list[2,8,139,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 139, 0],"bool"), list[2,8,139,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 139, 85].  Tensor sizes: [2, 1, 139, 0]
2025-03-05 15:22:58.270635 test begin: paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 14, 121].  Tensor sizes: [2, 1, 14, 0]
2025-03-05 15:22:58.271134 test begin: paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 14, 129].  Tensor sizes: [2, 1, 14, 0]
2025-03-05 15:22:58.271648 test begin: paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 14, 14].  Tensor sizes: [2, 1, 14, 0]
2025-03-05 15:22:58.272168 test begin: paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 14, 161].  Tensor sizes: [2, 1, 14, 0]
2025-03-05 15:22:58.272685 test begin: paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 14, 17].  Tensor sizes: [2, 1, 14, 0]
2025-03-05 15:22:58.273193 test begin: paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 14, 181].  Tensor sizes: [2, 1, 14, 0]
2025-03-05 15:22:58.273719 test begin: paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 14, 41].  Tensor sizes: [2, 1, 14, 0]
2025-03-05 15:22:58.274224 test begin: paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 14, 57].  Tensor sizes: [2, 1, 14, 0]
2025-03-05 15:22:58.274733 test begin: paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 14, 81].  Tensor sizes: [2, 1, 14, 0]
2025-03-05 15:22:58.275246 test begin: paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 14, 0],"bool"), list[2,8,14,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 14, 85].  Tensor sizes: [2, 1, 14, 0]
2025-03-05 15:22:58.275762 test begin: paddle.broadcast_to(Tensor([2, 1, 140, 0],"bool"), list[2,8,140,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 140, 0],"bool"), list[2,8,140,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 140, 121].  Tensor sizes: [2, 1, 140, 0]
2025-03-05 15:22:58.276281 test begin: paddle.broadcast_to(Tensor([2, 1, 140, 0],"bool"), list[2,8,140,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 140, 0],"bool"), list[2,8,140,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 140, 129].  Tensor sizes: [2, 1, 140, 0]
2025-03-05 15:22:58.276802 test begin: paddle.broadcast_to(Tensor([2, 1, 140, 0],"bool"), list[2,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 140, 0],"bool"), list[2,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 140, 140].  Tensor sizes: [2, 1, 140, 0]
2025-03-05 15:22:58.277311 test begin: paddle.broadcast_to(Tensor([2, 1, 140, 0],"bool"), list[2,8,140,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 140, 0],"bool"), list[2,8,140,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 140, 181].  Tensor sizes: [2, 1, 140, 0]
2025-03-05 15:22:58.277899 test begin: paddle.broadcast_to(Tensor([2, 1, 140, 0],"bool"), list[2,8,140,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 140, 0],"bool"), list[2,8,140,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 140, 81].  Tensor sizes: [2, 1, 140, 0]
2025-03-05 15:22:58.278453 test begin: paddle.broadcast_to(Tensor([2, 1, 140, 0],"bool"), list[2,8,140,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 140, 0],"bool"), list[2,8,140,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 140, 85].  Tensor sizes: [2, 1, 140, 0]
2025-03-05 15:22:58.278988 test begin: paddle.broadcast_to(Tensor([2, 1, 141, 0],"bool"), list[2,8,141,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 141, 0],"bool"), list[2,8,141,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 141, 121].  Tensor sizes: [2, 1, 141, 0]
2025-03-05 15:22:58.279503 test begin: paddle.broadcast_to(Tensor([2, 1, 141, 0],"bool"), list[2,8,141,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 141, 0],"bool"), list[2,8,141,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 141, 129].  Tensor sizes: [2, 1, 141, 0]
2025-03-05 15:22:58.280028 test begin: paddle.broadcast_to(Tensor([2, 1, 141, 0],"bool"), list[2,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 141, 0],"bool"), list[2,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 141, 141].  Tensor sizes: [2, 1, 141, 0]
2025-03-05 15:22:58.280535 test begin: paddle.broadcast_to(Tensor([2, 1, 141, 0],"bool"), list[2,8,141,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 141, 0],"bool"), list[2,8,141,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 141, 181].  Tensor sizes: [2, 1, 141, 0]
2025-03-05 15:22:58.281065 test begin: paddle.broadcast_to(Tensor([2, 1, 141, 0],"bool"), list[2,8,141,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 141, 0],"bool"), list[2,8,141,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 141, 81].  Tensor sizes: [2, 1, 141, 0]
2025-03-05 15:22:58.281593 test begin: paddle.broadcast_to(Tensor([2, 1, 141, 0],"bool"), list[2,8,141,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 141, 0],"bool"), list[2,8,141,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 141, 85].  Tensor sizes: [2, 1, 141, 0]
2025-03-05 15:22:58.282115 test begin: paddle.broadcast_to(Tensor([2, 1, 142, 0],"bool"), list[2,8,142,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 142, 0],"bool"), list[2,8,142,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 142, 121].  Tensor sizes: [2, 1, 142, 0]
2025-03-05 15:22:58.282627 test begin: paddle.broadcast_to(Tensor([2, 1, 142, 0],"bool"), list[2,8,142,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 142, 0],"bool"), list[2,8,142,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 142, 129].  Tensor sizes: [2, 1, 142, 0]
2025-03-05 15:22:58.283184 test begin: paddle.broadcast_to(Tensor([2, 1, 142, 0],"bool"), list[2,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 142, 0],"bool"), list[2,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 142, 142].  Tensor sizes: [2, 1, 142, 0]
2025-03-05 15:22:58.283713 test begin: paddle.broadcast_to(Tensor([2, 1, 142, 0],"bool"), list[2,8,142,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 142, 0],"bool"), list[2,8,142,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 142, 181].  Tensor sizes: [2, 1, 142, 0]
2025-03-05 15:22:58.284502 test begin: paddle.broadcast_to(Tensor([2, 1, 142, 0],"bool"), list[2,8,142,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 142, 0],"bool"), list[2,8,142,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 142, 85].  Tensor sizes: [2, 1, 142, 0]
2025-03-05 15:22:58.285212 test begin: paddle.broadcast_to(Tensor([2, 1, 143, 0],"bool"), list[2,8,143,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 143, 0],"bool"), list[2,8,143,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 143, 121].  Tensor sizes: [2, 1, 143, 0]
2025-03-05 15:22:58.285814 test begin: paddle.broadcast_to(Tensor([2, 1, 143, 0],"bool"), list[2,8,143,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 143, 0],"bool"), list[2,8,143,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 143, 129].  Tensor sizes: [2, 1, 143, 0]
2025-03-05 15:22:58.286369 test begin: paddle.broadcast_to(Tensor([2, 1, 143, 0],"bool"), list[2,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 143, 0],"bool"), list[2,8,143,143,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 143, 143].  Tensor sizes: [2, 1, 143, 0]
2025-03-05 15:22:58.286931 test begin: paddle.broadcast_to(Tensor([2, 1, 143, 0],"bool"), list[2,8,143,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 143, 0],"bool"), list[2,8,143,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 143, 181].  Tensor sizes: [2, 1, 143, 0]
2025-03-05 15:22:58.287484 test begin: paddle.broadcast_to(Tensor([2, 1, 144, 0],"bool"), list[2,8,144,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 144, 0],"bool"), list[2,8,144,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 144, 121].  Tensor sizes: [2, 1, 144, 0]
2025-03-05 15:22:58.288031 test begin: paddle.broadcast_to(Tensor([2, 1, 144, 0],"bool"), list[2,8,144,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 144, 0],"bool"), list[2,8,144,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 144, 129].  Tensor sizes: [2, 1, 144, 0]
2025-03-05 15:22:58.288565 test begin: paddle.broadcast_to(Tensor([2, 1, 144, 0],"bool"), list[2,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 144, 0],"bool"), list[2,8,144,144,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 144, 144].  Tensor sizes: [2, 1, 144, 0]
2025-03-05 15:22:58.289606 test begin: paddle.broadcast_to(Tensor([2, 1, 144, 0],"bool"), list[2,8,144,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 144, 0],"bool"), list[2,8,144,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 144, 181].  Tensor sizes: [2, 1, 144, 0]
2025-03-05 15:22:58.290289 test begin: paddle.broadcast_to(Tensor([2, 1, 145, 0],"bool"), list[2,8,145,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 145, 0],"bool"), list[2,8,145,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 145, 121].  Tensor sizes: [2, 1, 145, 0]
2025-03-05 15:22:58.290969 test begin: paddle.broadcast_to(Tensor([2, 1, 145, 0],"bool"), list[2,8,145,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 145, 0],"bool"), list[2,8,145,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 145, 129].  Tensor sizes: [2, 1, 145, 0]
2025-03-05 15:22:58.291660 test begin: paddle.broadcast_to(Tensor([2, 1, 145, 0],"bool"), list[2,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 145, 0],"bool"), list[2,8,145,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 145, 145].  Tensor sizes: [2, 1, 145, 0]
2025-03-05 15:22:58.292343 test begin: paddle.broadcast_to(Tensor([2, 1, 145, 0],"bool"), list[2,8,145,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 145, 0],"bool"), list[2,8,145,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 145, 181].  Tensor sizes: [2, 1, 145, 0]
2025-03-05 15:22:58.293069 test begin: paddle.broadcast_to(Tensor([2, 1, 146, 0],"bool"), list[2,8,146,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 146, 0],"bool"), list[2,8,146,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 146, 121].  Tensor sizes: [2, 1, 146, 0]
2025-03-05 15:22:58.293626 test begin: paddle.broadcast_to(Tensor([2, 1, 146, 0],"bool"), list[2,8,146,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 146, 0],"bool"), list[2,8,146,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 146, 129].  Tensor sizes: [2, 1, 146, 0]
2025-03-05 15:22:58.294160 test begin: paddle.broadcast_to(Tensor([2, 1, 146, 0],"bool"), list[2,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 146, 0],"bool"), list[2,8,146,146,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 146, 146].  Tensor sizes: [2, 1, 146, 0]
2025-03-05 15:22:58.294691 test begin: paddle.broadcast_to(Tensor([2, 1, 146, 0],"bool"), list[2,8,146,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 146, 0],"bool"), list[2,8,146,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 146, 181].  Tensor sizes: [2, 1, 146, 0]
2025-03-05 15:22:58.295225 test begin: paddle.broadcast_to(Tensor([2, 1, 147, 0],"bool"), list[2,8,147,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 147, 0],"bool"), list[2,8,147,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 147, 121].  Tensor sizes: [2, 1, 147, 0]
2025-03-05 15:22:58.295758 test begin: paddle.broadcast_to(Tensor([2, 1, 147, 0],"bool"), list[2,8,147,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 147, 0],"bool"), list[2,8,147,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 147, 129].  Tensor sizes: [2, 1, 147, 0]
2025-03-05 15:22:58.296292 test begin: paddle.broadcast_to(Tensor([2, 1, 147, 0],"bool"), list[2,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 147, 0],"bool"), list[2,8,147,147,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 147, 147].  Tensor sizes: [2, 1, 147, 0]
2025-03-05 15:22:58.296817 test begin: paddle.broadcast_to(Tensor([2, 1, 147, 0],"bool"), list[2,8,147,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 147, 0],"bool"), list[2,8,147,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 147, 181].  Tensor sizes: [2, 1, 147, 0]
2025-03-05 15:22:58.297334 test begin: paddle.broadcast_to(Tensor([2, 1, 148, 0],"bool"), list[2,8,148,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 148, 0],"bool"), list[2,8,148,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 148, 121].  Tensor sizes: [2, 1, 148, 0]
2025-03-05 15:22:58.297847 test begin: paddle.broadcast_to(Tensor([2, 1, 148, 0],"bool"), list[2,8,148,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 148, 0],"bool"), list[2,8,148,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 148, 129].  Tensor sizes: [2, 1, 148, 0]
2025-03-05 15:22:58.298365 test begin: paddle.broadcast_to(Tensor([2, 1, 148, 0],"bool"), list[2,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 148, 0],"bool"), list[2,8,148,148,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 148, 148].  Tensor sizes: [2, 1, 148, 0]
2025-03-05 15:22:58.298892 test begin: paddle.broadcast_to(Tensor([2, 1, 148, 0],"bool"), list[2,8,148,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 148, 0],"bool"), list[2,8,148,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 148, 181].  Tensor sizes: [2, 1, 148, 0]
2025-03-05 15:22:58.299419 test begin: paddle.broadcast_to(Tensor([2, 1, 149, 0],"bool"), list[2,8,149,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 149, 0],"bool"), list[2,8,149,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 149, 121].  Tensor sizes: [2, 1, 149, 0]
2025-03-05 15:22:58.299933 test begin: paddle.broadcast_to(Tensor([2, 1, 149, 0],"bool"), list[2,8,149,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 149, 0],"bool"), list[2,8,149,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 149, 129].  Tensor sizes: [2, 1, 149, 0]
2025-03-05 15:22:58.300444 test begin: paddle.broadcast_to(Tensor([2, 1, 149, 0],"bool"), list[2,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 149, 0],"bool"), list[2,8,149,149,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 149, 149].  Tensor sizes: [2, 1, 149, 0]
2025-03-05 15:22:58.300956 test begin: paddle.broadcast_to(Tensor([2, 1, 149, 0],"bool"), list[2,8,149,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 149, 0],"bool"), list[2,8,149,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 149, 181].  Tensor sizes: [2, 1, 149, 0]
2025-03-05 15:22:58.301472 test begin: paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 15, 121].  Tensor sizes: [2, 1, 15, 0]
2025-03-05 15:22:58.302024 test begin: paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 15, 129].  Tensor sizes: [2, 1, 15, 0]
2025-03-05 15:22:58.302540 test begin: paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 15, 15].  Tensor sizes: [2, 1, 15, 0]
2025-03-05 15:22:58.303067 test begin: paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 15, 161].  Tensor sizes: [2, 1, 15, 0]
2025-03-05 15:22:58.303580 test begin: paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 15, 17].  Tensor sizes: [2, 1, 15, 0]
2025-03-05 15:22:58.304104 test begin: paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 15, 181].  Tensor sizes: [2, 1, 15, 0]
2025-03-05 15:22:58.304619 test begin: paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 15, 41].  Tensor sizes: [2, 1, 15, 0]
2025-03-05 15:22:58.305129 test begin: paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 15, 57].  Tensor sizes: [2, 1, 15, 0]
2025-03-05 15:22:58.305640 test begin: paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 15, 81].  Tensor sizes: [2, 1, 15, 0]
2025-03-05 15:22:58.306148 test begin: paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 15, 0],"bool"), list[2,8,15,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 15, 85].  Tensor sizes: [2, 1, 15, 0]
2025-03-05 15:22:58.306666 test begin: paddle.broadcast_to(Tensor([2, 1, 150, 0],"bool"), list[2,8,150,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 150, 0],"bool"), list[2,8,150,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 150, 121].  Tensor sizes: [2, 1, 150, 0]
2025-03-05 15:22:58.307186 test begin: paddle.broadcast_to(Tensor([2, 1, 150, 0],"bool"), list[2,8,150,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 150, 0],"bool"), list[2,8,150,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 150, 129].  Tensor sizes: [2, 1, 150, 0]
2025-03-05 15:22:58.307741 test begin: paddle.broadcast_to(Tensor([2, 1, 150, 0],"bool"), list[2,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 150, 0],"bool"), list[2,8,150,150,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 150, 150].  Tensor sizes: [2, 1, 150, 0]
2025-03-05 15:22:58.308271 test begin: paddle.broadcast_to(Tensor([2, 1, 150, 0],"bool"), list[2,8,150,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 150, 0],"bool"), list[2,8,150,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 150, 181].  Tensor sizes: [2, 1, 150, 0]
2025-03-05 15:22:58.313548 test begin: paddle.broadcast_to(Tensor([2, 1, 151, 0],"bool"), list[2,8,151,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 151, 0],"bool"), list[2,8,151,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 151, 121].  Tensor sizes: [2, 1, 151, 0]
2025-03-05 15:22:58.315657 test begin: paddle.broadcast_to(Tensor([2, 1, 151, 0],"bool"), list[2,8,151,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 151, 0],"bool"), list[2,8,151,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 151, 129].  Tensor sizes: [2, 1, 151, 0]
2025-03-05 15:22:58.316201 test begin: paddle.broadcast_to(Tensor([2, 1, 151, 0],"bool"), list[2,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 151, 0],"bool"), list[2,8,151,151,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 151, 151].  Tensor sizes: [2, 1, 151, 0]
2025-03-05 15:22:58.316741 test begin: paddle.broadcast_to(Tensor([2, 1, 151, 0],"bool"), list[2,8,151,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 151, 0],"bool"), list[2,8,151,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 151, 181].  Tensor sizes: [2, 1, 151, 0]
2025-03-05 15:22:58.317596 test begin: paddle.broadcast_to(Tensor([2, 1, 152, 0],"bool"), list[2,8,152,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 152, 0],"bool"), list[2,8,152,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 152, 121].  Tensor sizes: [2, 1, 152, 0]
2025-03-05 15:22:58.318317 test begin: paddle.broadcast_to(Tensor([2, 1, 152, 0],"bool"), list[2,8,152,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 152, 0],"bool"), list[2,8,152,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 152, 129].  Tensor sizes: [2, 1, 152, 0]
2025-03-05 15:22:58.318990 test begin: paddle.broadcast_to(Tensor([2, 1, 152, 0],"bool"), list[2,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 152, 0],"bool"), list[2,8,152,152,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 152, 152].  Tensor sizes: [2, 1, 152, 0]
2025-03-05 15:22:58.319642 test begin: paddle.broadcast_to(Tensor([2, 1, 152, 0],"bool"), list[2,8,152,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 152, 0],"bool"), list[2,8,152,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 152, 181].  Tensor sizes: [2, 1, 152, 0]
2025-03-05 15:22:58.320261 test begin: paddle.broadcast_to(Tensor([2, 1, 153, 0],"bool"), list[2,8,153,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 153, 0],"bool"), list[2,8,153,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 153, 121].  Tensor sizes: [2, 1, 153, 0]
2025-03-05 15:22:58.320819 test begin: paddle.broadcast_to(Tensor([2, 1, 153, 0],"bool"), list[2,8,153,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 153, 0],"bool"), list[2,8,153,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 153, 129].  Tensor sizes: [2, 1, 153, 0]
2025-03-05 15:22:58.321352 test begin: paddle.broadcast_to(Tensor([2, 1, 153, 0],"bool"), list[2,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 153, 0],"bool"), list[2,8,153,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 153, 153].  Tensor sizes: [2, 1, 153, 0]
2025-03-05 15:22:58.321870 test begin: paddle.broadcast_to(Tensor([2, 1, 153, 0],"bool"), list[2,8,153,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 153, 0],"bool"), list[2,8,153,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 153, 181].  Tensor sizes: [2, 1, 153, 0]
2025-03-05 15:22:58.322382 test begin: paddle.broadcast_to(Tensor([2, 1, 154, 0],"bool"), list[2,8,154,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 154, 0],"bool"), list[2,8,154,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 154, 121].  Tensor sizes: [2, 1, 154, 0]
2025-03-05 15:22:58.322907 test begin: paddle.broadcast_to(Tensor([2, 1, 154, 0],"bool"), list[2,8,154,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 154, 0],"bool"), list[2,8,154,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 154, 129].  Tensor sizes: [2, 1, 154, 0]
2025-03-05 15:22:58.323418 test begin: paddle.broadcast_to(Tensor([2, 1, 154, 0],"bool"), list[2,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 154, 0],"bool"), list[2,8,154,154,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 154, 154].  Tensor sizes: [2, 1, 154, 0]
2025-03-05 15:22:58.323942 test begin: paddle.broadcast_to(Tensor([2, 1, 154, 0],"bool"), list[2,8,154,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 154, 0],"bool"), list[2,8,154,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 154, 181].  Tensor sizes: [2, 1, 154, 0]
2025-03-05 15:22:58.324477 test begin: paddle.broadcast_to(Tensor([2, 1, 155, 0],"bool"), list[2,8,155,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 155, 0],"bool"), list[2,8,155,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 155, 121].  Tensor sizes: [2, 1, 155, 0]
2025-03-05 15:22:58.325005 test begin: paddle.broadcast_to(Tensor([2, 1, 155, 0],"bool"), list[2,8,155,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 155, 0],"bool"), list[2,8,155,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 155, 129].  Tensor sizes: [2, 1, 155, 0]
2025-03-05 15:22:58.325530 test begin: paddle.broadcast_to(Tensor([2, 1, 155, 0],"bool"), list[2,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 155, 0],"bool"), list[2,8,155,155,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 155, 155].  Tensor sizes: [2, 1, 155, 0]
2025-03-05 15:22:58.326057 test begin: paddle.broadcast_to(Tensor([2, 1, 155, 0],"bool"), list[2,8,155,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 155, 0],"bool"), list[2,8,155,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 155, 181].  Tensor sizes: [2, 1, 155, 0]
2025-03-05 15:22:58.326630 test begin: paddle.broadcast_to(Tensor([2, 1, 156, 0],"bool"), list[2,8,156,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 156, 0],"bool"), list[2,8,156,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 156, 121].  Tensor sizes: [2, 1, 156, 0]
2025-03-05 15:22:58.327180 test begin: paddle.broadcast_to(Tensor([2, 1, 156, 0],"bool"), list[2,8,156,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 156, 0],"bool"), list[2,8,156,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 156, 129].  Tensor sizes: [2, 1, 156, 0]
2025-03-05 15:22:58.327730 test begin: paddle.broadcast_to(Tensor([2, 1, 156, 0],"bool"), list[2,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 156, 0],"bool"), list[2,8,156,156,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 156, 156].  Tensor sizes: [2, 1, 156, 0]
2025-03-05 15:22:58.328255 test begin: paddle.broadcast_to(Tensor([2, 1, 156, 0],"bool"), list[2,8,156,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 156, 0],"bool"), list[2,8,156,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 156, 181].  Tensor sizes: [2, 1, 156, 0]
2025-03-05 15:22:58.328832 test begin: paddle.broadcast_to(Tensor([2, 1, 157, 0],"bool"), list[2,8,157,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 157, 0],"bool"), list[2,8,157,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 157, 121].  Tensor sizes: [2, 1, 157, 0]
2025-03-05 15:22:58.329348 test begin: paddle.broadcast_to(Tensor([2, 1, 157, 0],"bool"), list[2,8,157,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 157, 0],"bool"), list[2,8,157,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 157, 129].  Tensor sizes: [2, 1, 157, 0]
2025-03-05 15:22:58.329869 test begin: paddle.broadcast_to(Tensor([2, 1, 157, 0],"bool"), list[2,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 157, 0],"bool"), list[2,8,157,157,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 157, 157].  Tensor sizes: [2, 1, 157, 0]
2025-03-05 15:22:58.330375 test begin: paddle.broadcast_to(Tensor([2, 1, 157, 0],"bool"), list[2,8,157,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 157, 0],"bool"), list[2,8,157,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 157, 181].  Tensor sizes: [2, 1, 157, 0]
2025-03-05 15:22:58.330906 test begin: paddle.broadcast_to(Tensor([2, 1, 158, 0],"bool"), list[2,8,158,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 158, 0],"bool"), list[2,8,158,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 158, 121].  Tensor sizes: [2, 1, 158, 0]
2025-03-05 15:22:58.331412 test begin: paddle.broadcast_to(Tensor([2, 1, 158, 0],"bool"), list[2,8,158,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 158, 0],"bool"), list[2,8,158,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 158, 129].  Tensor sizes: [2, 1, 158, 0]
2025-03-05 15:22:58.331928 test begin: paddle.broadcast_to(Tensor([2, 1, 158, 0],"bool"), list[2,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 158, 0],"bool"), list[2,8,158,158,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 158, 158].  Tensor sizes: [2, 1, 158, 0]
2025-03-05 15:22:58.332471 test begin: paddle.broadcast_to(Tensor([2, 1, 158, 0],"bool"), list[2,8,158,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 158, 0],"bool"), list[2,8,158,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 158, 181].  Tensor sizes: [2, 1, 158, 0]
2025-03-05 15:22:58.333021 test begin: paddle.broadcast_to(Tensor([2, 1, 159, 0],"bool"), list[2,8,159,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 159, 0],"bool"), list[2,8,159,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 159, 121].  Tensor sizes: [2, 1, 159, 0]
2025-03-05 15:22:58.333549 test begin: paddle.broadcast_to(Tensor([2, 1, 159, 0],"bool"), list[2,8,159,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 159, 0],"bool"), list[2,8,159,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 159, 129].  Tensor sizes: [2, 1, 159, 0]
2025-03-05 15:22:58.334106 test begin: paddle.broadcast_to(Tensor([2, 1, 159, 0],"bool"), list[2,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 159, 0],"bool"), list[2,8,159,159,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 159, 159].  Tensor sizes: [2, 1, 159, 0]
2025-03-05 15:22:58.334617 test begin: paddle.broadcast_to(Tensor([2, 1, 159, 0],"bool"), list[2,8,159,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 159, 0],"bool"), list[2,8,159,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 159, 181].  Tensor sizes: [2, 1, 159, 0]
2025-03-05 15:22:58.335145 test begin: paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 16, 121].  Tensor sizes: [2, 1, 16, 0]
2025-03-05 15:22:58.335675 test begin: paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 16, 129].  Tensor sizes: [2, 1, 16, 0]
2025-03-05 15:22:58.336187 test begin: paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 16, 16].  Tensor sizes: [2, 1, 16, 0]
2025-03-05 15:22:58.336700 test begin: paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 16, 161].  Tensor sizes: [2, 1, 16, 0]
2025-03-05 15:22:58.337211 test begin: paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 16, 17].  Tensor sizes: [2, 1, 16, 0]
2025-03-05 15:22:58.337739 test begin: paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 16, 181].  Tensor sizes: [2, 1, 16, 0]
2025-03-05 15:22:58.338251 test begin: paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 16, 41].  Tensor sizes: [2, 1, 16, 0]
2025-03-05 15:22:58.338772 test begin: paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 16, 57].  Tensor sizes: [2, 1, 16, 0]
2025-03-05 15:22:58.339300 test begin: paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 16, 81].  Tensor sizes: [2, 1, 16, 0]
2025-03-05 15:22:58.339882 test begin: paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 16, 0],"bool"), list[2,8,16,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 16, 85].  Tensor sizes: [2, 1, 16, 0]
2025-03-05 15:22:58.340469 test begin: paddle.broadcast_to(Tensor([2, 1, 160, 0],"bool"), list[2,8,160,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 160, 0],"bool"), list[2,8,160,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 160, 121].  Tensor sizes: [2, 1, 160, 0]
2025-03-05 15:22:58.341076 test begin: paddle.broadcast_to(Tensor([2, 1, 160, 0],"bool"), list[2,8,160,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 160, 0],"bool"), list[2,8,160,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 160, 129].  Tensor sizes: [2, 1, 160, 0]
2025-03-05 15:22:58.341625 test begin: paddle.broadcast_to(Tensor([2, 1, 160, 0],"bool"), list[2,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 160, 0],"bool"), list[2,8,160,160,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 160, 160].  Tensor sizes: [2, 1, 160, 0]
2025-03-05 15:22:58.342157 test begin: paddle.broadcast_to(Tensor([2, 1, 160, 0],"bool"), list[2,8,160,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 160, 0],"bool"), list[2,8,160,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 160, 181].  Tensor sizes: [2, 1, 160, 0]
2025-03-05 15:22:58.342695 test begin: paddle.broadcast_to(Tensor([2, 1, 161, 0],"bool"), list[2,8,161,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 161, 0],"bool"), list[2,8,161,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 161, 121].  Tensor sizes: [2, 1, 161, 0]
2025-03-05 15:22:58.343222 test begin: paddle.broadcast_to(Tensor([2, 1, 161, 0],"bool"), list[2,8,161,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 161, 0],"bool"), list[2,8,161,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 161, 129].  Tensor sizes: [2, 1, 161, 0]
2025-03-05 15:22:58.343753 test begin: paddle.broadcast_to(Tensor([2, 1, 161, 0],"bool"), list[2,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 161, 0],"bool"), list[2,8,161,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 161, 161].  Tensor sizes: [2, 1, 161, 0]
2025-03-05 15:22:58.344263 test begin: paddle.broadcast_to(Tensor([2, 1, 161, 0],"bool"), list[2,8,161,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 161, 0],"bool"), list[2,8,161,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 161, 181].  Tensor sizes: [2, 1, 161, 0]
2025-03-05 15:22:58.344790 test begin: paddle.broadcast_to(Tensor([2, 1, 162, 0],"bool"), list[2,8,162,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 162, 0],"bool"), list[2,8,162,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 162, 121].  Tensor sizes: [2, 1, 162, 0]
2025-03-05 15:22:58.345307 test begin: paddle.broadcast_to(Tensor([2, 1, 162, 0],"bool"), list[2,8,162,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 162, 0],"bool"), list[2,8,162,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 162, 129].  Tensor sizes: [2, 1, 162, 0]
2025-03-05 15:22:58.345835 test begin: paddle.broadcast_to(Tensor([2, 1, 162, 0],"bool"), list[2,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 162, 0],"bool"), list[2,8,162,162,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 162, 162].  Tensor sizes: [2, 1, 162, 0]
2025-03-05 15:22:58.346347 test begin: paddle.broadcast_to(Tensor([2, 1, 162, 0],"bool"), list[2,8,162,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 162, 0],"bool"), list[2,8,162,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 162, 181].  Tensor sizes: [2, 1, 162, 0]
2025-03-05 15:22:58.346870 test begin: paddle.broadcast_to(Tensor([2, 1, 163, 0],"bool"), list[2,8,163,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 163, 0],"bool"), list[2,8,163,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 163, 121].  Tensor sizes: [2, 1, 163, 0]
2025-03-05 15:22:58.347400 test begin: paddle.broadcast_to(Tensor([2, 1, 163, 0],"bool"), list[2,8,163,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 163, 0],"bool"), list[2,8,163,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 163, 129].  Tensor sizes: [2, 1, 163, 0]
2025-03-05 15:22:58.347935 test begin: paddle.broadcast_to(Tensor([2, 1, 163, 0],"bool"), list[2,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 163, 0],"bool"), list[2,8,163,163,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 163, 163].  Tensor sizes: [2, 1, 163, 0]
2025-03-05 15:22:58.348476 test begin: paddle.broadcast_to(Tensor([2, 1, 163, 0],"bool"), list[2,8,163,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 163, 0],"bool"), list[2,8,163,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 163, 181].  Tensor sizes: [2, 1, 163, 0]
2025-03-05 15:22:58.349014 test begin: paddle.broadcast_to(Tensor([2, 1, 164, 0],"bool"), list[2,8,164,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 164, 0],"bool"), list[2,8,164,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 164, 129].  Tensor sizes: [2, 1, 164, 0]
2025-03-05 15:22:58.349527 test begin: paddle.broadcast_to(Tensor([2, 1, 164, 0],"bool"), list[2,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 164, 0],"bool"), list[2,8,164,164,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 164, 164].  Tensor sizes: [2, 1, 164, 0]
2025-03-05 15:22:58.350058 test begin: paddle.broadcast_to(Tensor([2, 1, 164, 0],"bool"), list[2,8,164,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 164, 0],"bool"), list[2,8,164,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 164, 181].  Tensor sizes: [2, 1, 164, 0]
2025-03-05 15:22:58.350573 test begin: paddle.broadcast_to(Tensor([2, 1, 165, 0],"bool"), list[2,8,165,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 165, 0],"bool"), list[2,8,165,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 165, 129].  Tensor sizes: [2, 1, 165, 0]
2025-03-05 15:22:58.351112 test begin: paddle.broadcast_to(Tensor([2, 1, 165, 0],"bool"), list[2,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 165, 0],"bool"), list[2,8,165,165,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 165, 165].  Tensor sizes: [2, 1, 165, 0]
2025-03-05 15:22:58.351641 test begin: paddle.broadcast_to(Tensor([2, 1, 165, 0],"bool"), list[2,8,165,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 165, 0],"bool"), list[2,8,165,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 165, 181].  Tensor sizes: [2, 1, 165, 0]
2025-03-05 15:22:58.352163 test begin: paddle.broadcast_to(Tensor([2, 1, 166, 0],"bool"), list[2,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 166, 0],"bool"), list[2,8,166,166,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 166, 166].  Tensor sizes: [2, 1, 166, 0]
2025-03-05 15:22:58.352704 test begin: paddle.broadcast_to(Tensor([2, 1, 166, 0],"bool"), list[2,8,166,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 166, 0],"bool"), list[2,8,166,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 166, 181].  Tensor sizes: [2, 1, 166, 0]
2025-03-05 15:22:58.353221 test begin: paddle.broadcast_to(Tensor([2, 1, 167, 0],"bool"), list[2,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 167, 0],"bool"), list[2,8,167,167,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 167, 167].  Tensor sizes: [2, 1, 167, 0]
2025-03-05 15:22:58.353779 test begin: paddle.broadcast_to(Tensor([2, 1, 167, 0],"bool"), list[2,8,167,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 167, 0],"bool"), list[2,8,167,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 167, 181].  Tensor sizes: [2, 1, 167, 0]
2025-03-05 15:22:58.354298 test begin: paddle.broadcast_to(Tensor([2, 1, 168, 0],"bool"), list[2,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 168, 0],"bool"), list[2,8,168,168,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 168, 168].  Tensor sizes: [2, 1, 168, 0]
2025-03-05 15:22:58.354815 test begin: paddle.broadcast_to(Tensor([2, 1, 168, 0],"bool"), list[2,8,168,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 168, 0],"bool"), list[2,8,168,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 168, 181].  Tensor sizes: [2, 1, 168, 0]
2025-03-05 15:22:58.355326 test begin: paddle.broadcast_to(Tensor([2, 1, 169, 0],"bool"), list[2,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 169, 0],"bool"), list[2,8,169,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 169, 169].  Tensor sizes: [2, 1, 169, 0]
2025-03-05 15:22:58.355846 test begin: paddle.broadcast_to(Tensor([2, 1, 169, 0],"bool"), list[2,8,169,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 169, 0],"bool"), list[2,8,169,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 169, 181].  Tensor sizes: [2, 1, 169, 0]
2025-03-05 15:22:58.356357 test begin: paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 17, 121].  Tensor sizes: [2, 1, 17, 0]
2025-03-05 15:22:58.356883 test begin: paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 17, 129].  Tensor sizes: [2, 1, 17, 0]
2025-03-05 15:22:58.357408 test begin: paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 17, 161].  Tensor sizes: [2, 1, 17, 0]
2025-03-05 15:22:58.357920 test begin: paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 17, 17].  Tensor sizes: [2, 1, 17, 0]
2025-03-05 15:22:58.358435 test begin: paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 17, 181].  Tensor sizes: [2, 1, 17, 0]
2025-03-05 15:22:58.358944 test begin: paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 17, 41].  Tensor sizes: [2, 1, 17, 0]
2025-03-05 15:22:58.359838 test begin: paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 17, 57].  Tensor sizes: [2, 1, 17, 0]
2025-03-05 15:22:58.360501 test begin: paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 17, 81].  Tensor sizes: [2, 1, 17, 0]
2025-03-05 15:22:58.361079 test begin: paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 17, 0],"bool"), list[2,8,17,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 17, 85].  Tensor sizes: [2, 1, 17, 0]
2025-03-05 15:22:58.361626 test begin: paddle.broadcast_to(Tensor([2, 1, 170, 0],"bool"), list[2,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 170, 0],"bool"), list[2,8,170,170,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 170, 170].  Tensor sizes: [2, 1, 170, 0]
2025-03-05 15:22:58.362176 test begin: paddle.broadcast_to(Tensor([2, 1, 170, 0],"bool"), list[2,8,170,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 170, 0],"bool"), list[2,8,170,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 170, 181].  Tensor sizes: [2, 1, 170, 0]
2025-03-05 15:22:58.362698 test begin: paddle.broadcast_to(Tensor([2, 1, 171, 0],"bool"), list[2,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 171, 0],"bool"), list[2,8,171,171,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 171, 171].  Tensor sizes: [2, 1, 171, 0]
2025-03-05 15:22:58.363234 test begin: paddle.broadcast_to(Tensor([2, 1, 171, 0],"bool"), list[2,8,171,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 171, 0],"bool"), list[2,8,171,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 171, 181].  Tensor sizes: [2, 1, 171, 0]
2025-03-05 15:22:58.363758 test begin: paddle.broadcast_to(Tensor([2, 1, 172, 0],"bool"), list[2,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 172, 0],"bool"), list[2,8,172,172,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 172, 172].  Tensor sizes: [2, 1, 172, 0]
2025-03-05 15:22:58.364267 test begin: paddle.broadcast_to(Tensor([2, 1, 172, 0],"bool"), list[2,8,172,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 172, 0],"bool"), list[2,8,172,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 172, 181].  Tensor sizes: [2, 1, 172, 0]
2025-03-05 15:22:58.364792 test begin: paddle.broadcast_to(Tensor([2, 1, 173, 0],"bool"), list[2,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 173, 0],"bool"), list[2,8,173,173,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 173, 173].  Tensor sizes: [2, 1, 173, 0]
2025-03-05 15:22:58.365299 test begin: paddle.broadcast_to(Tensor([2, 1, 173, 0],"bool"), list[2,8,173,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 173, 0],"bool"), list[2,8,173,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 173, 181].  Tensor sizes: [2, 1, 173, 0]
2025-03-05 15:22:58.365825 test begin: paddle.broadcast_to(Tensor([2, 1, 174, 0],"bool"), list[2,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 174, 0],"bool"), list[2,8,174,174,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 174, 174].  Tensor sizes: [2, 1, 174, 0]
2025-03-05 15:22:58.366388 test begin: paddle.broadcast_to(Tensor([2, 1, 174, 0],"bool"), list[2,8,174,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 174, 0],"bool"), list[2,8,174,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 174, 181].  Tensor sizes: [2, 1, 174, 0]
2025-03-05 15:22:58.366991 test begin: paddle.broadcast_to(Tensor([2, 1, 175, 0],"bool"), list[2,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 175, 0],"bool"), list[2,8,175,175,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 175, 175].  Tensor sizes: [2, 1, 175, 0]
2025-03-05 15:22:58.367627 test begin: paddle.broadcast_to(Tensor([2, 1, 175, 0],"bool"), list[2,8,175,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 175, 0],"bool"), list[2,8,175,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 175, 181].  Tensor sizes: [2, 1, 175, 0]
2025-03-05 15:22:58.368163 test begin: paddle.broadcast_to(Tensor([2, 1, 176, 0],"bool"), list[2,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 176, 0],"bool"), list[2,8,176,176,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 176, 176].  Tensor sizes: [2, 1, 176, 0]
2025-03-05 15:22:58.368695 test begin: paddle.broadcast_to(Tensor([2, 1, 176, 0],"bool"), list[2,8,176,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 176, 0],"bool"), list[2,8,176,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 176, 181].  Tensor sizes: [2, 1, 176, 0]
2025-03-05 15:22:58.369214 test begin: paddle.broadcast_to(Tensor([2, 1, 177, 0],"bool"), list[2,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 177, 0],"bool"), list[2,8,177,177,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 177, 177].  Tensor sizes: [2, 1, 177, 0]
2025-03-05 15:22:58.369823 test begin: paddle.broadcast_to(Tensor([2, 1, 177, 0],"bool"), list[2,8,177,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 177, 0],"bool"), list[2,8,177,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 177, 181].  Tensor sizes: [2, 1, 177, 0]
2025-03-05 15:22:58.370354 test begin: paddle.broadcast_to(Tensor([2, 1, 178, 0],"bool"), list[2,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 178, 0],"bool"), list[2,8,178,178,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 178, 178].  Tensor sizes: [2, 1, 178, 0]
2025-03-05 15:22:58.370887 test begin: paddle.broadcast_to(Tensor([2, 1, 178, 0],"bool"), list[2,8,178,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 178, 0],"bool"), list[2,8,178,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 178, 181].  Tensor sizes: [2, 1, 178, 0]
2025-03-05 15:22:58.371415 test begin: paddle.broadcast_to(Tensor([2, 1, 179, 0],"bool"), list[2,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 179, 0],"bool"), list[2,8,179,179,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 179, 179].  Tensor sizes: [2, 1, 179, 0]
2025-03-05 15:22:58.371938 test begin: paddle.broadcast_to(Tensor([2, 1, 179, 0],"bool"), list[2,8,179,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 179, 0],"bool"), list[2,8,179,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 179, 181].  Tensor sizes: [2, 1, 179, 0]
2025-03-05 15:22:58.372527 test begin: paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 18, 121].  Tensor sizes: [2, 1, 18, 0]
2025-03-05 15:22:58.373063 test begin: paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 18, 129].  Tensor sizes: [2, 1, 18, 0]
2025-03-05 15:22:58.373577 test begin: paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 18, 161].  Tensor sizes: [2, 1, 18, 0]
2025-03-05 15:22:58.374101 test begin: paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 18, 17].  Tensor sizes: [2, 1, 18, 0]
2025-03-05 15:22:58.374619 test begin: paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 18, 18].  Tensor sizes: [2, 1, 18, 0]
2025-03-05 15:22:58.375129 test begin: paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 18, 181].  Tensor sizes: [2, 1, 18, 0]
2025-03-05 15:22:58.375715 test begin: paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 18, 41].  Tensor sizes: [2, 1, 18, 0]
2025-03-05 15:22:58.376274 test begin: paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 18, 57].  Tensor sizes: [2, 1, 18, 0]
2025-03-05 15:22:58.376851 test begin: paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 18, 81].  Tensor sizes: [2, 1, 18, 0]
2025-03-05 15:22:58.377374 test begin: paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 18, 0],"bool"), list[2,8,18,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 18, 85].  Tensor sizes: [2, 1, 18, 0]
2025-03-05 15:22:58.377907 test begin: paddle.broadcast_to(Tensor([2, 1, 180, 0],"bool"), list[2,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 180, 0],"bool"), list[2,8,180,180,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 180, 180].  Tensor sizes: [2, 1, 180, 0]
2025-03-05 15:22:58.378432 test begin: paddle.broadcast_to(Tensor([2, 1, 180, 0],"bool"), list[2,8,180,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 180, 0],"bool"), list[2,8,180,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 180, 181].  Tensor sizes: [2, 1, 180, 0]
2025-03-05 15:22:58.378957 test begin: paddle.broadcast_to(Tensor([2, 1, 181, 0],"bool"), list[2,8,181,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 181, 0],"bool"), list[2,8,181,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 181, 181].  Tensor sizes: [2, 1, 181, 0]
2025-03-05 15:22:58.379474 test begin: paddle.broadcast_to(Tensor([2, 1, 182, 0],"bool"), list[2,8,182,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 182, 0],"bool"), list[2,8,182,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 182, 181].  Tensor sizes: [2, 1, 182, 0]
2025-03-05 15:22:58.380008 test begin: paddle.broadcast_to(Tensor([2, 1, 182, 0],"bool"), list[2,8,182,182,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 182, 0],"bool"), list[2,8,182,182,], ) 
 The expanded size of the tensor (182) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 182, 182].  Tensor sizes: [2, 1, 182, 0]
2025-03-05 15:22:58.380521 test begin: paddle.broadcast_to(Tensor([2, 1, 183, 0],"bool"), list[2,8,183,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 183, 0],"bool"), list[2,8,183,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 183, 181].  Tensor sizes: [2, 1, 183, 0]
2025-03-05 15:22:58.381051 test begin: paddle.broadcast_to(Tensor([2, 1, 183, 0],"bool"), list[2,8,183,183,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 183, 0],"bool"), list[2,8,183,183,], ) 
 The expanded size of the tensor (183) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 183, 183].  Tensor sizes: [2, 1, 183, 0]
2025-03-05 15:22:58.381568 test begin: paddle.broadcast_to(Tensor([2, 1, 184, 0],"bool"), list[2,8,184,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 184, 0],"bool"), list[2,8,184,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 184, 181].  Tensor sizes: [2, 1, 184, 0]
2025-03-05 15:22:58.382096 test begin: paddle.broadcast_to(Tensor([2, 1, 184, 0],"bool"), list[2,8,184,184,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 184, 0],"bool"), list[2,8,184,184,], ) 
 The expanded size of the tensor (184) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 184, 184].  Tensor sizes: [2, 1, 184, 0]
2025-03-05 15:22:58.382611 test begin: paddle.broadcast_to(Tensor([2, 1, 185, 0],"bool"), list[2,8,185,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 185, 0],"bool"), list[2,8,185,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 185, 181].  Tensor sizes: [2, 1, 185, 0]
2025-03-05 15:22:58.383151 test begin: paddle.broadcast_to(Tensor([2, 1, 185, 0],"bool"), list[2,8,185,185,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 185, 0],"bool"), list[2,8,185,185,], ) 
 The expanded size of the tensor (185) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 185, 185].  Tensor sizes: [2, 1, 185, 0]
2025-03-05 15:22:58.383748 test begin: paddle.broadcast_to(Tensor([2, 1, 186, 0],"bool"), list[2,8,186,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 186, 0],"bool"), list[2,8,186,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 186, 181].  Tensor sizes: [2, 1, 186, 0]
2025-03-05 15:22:58.384790 test begin: paddle.broadcast_to(Tensor([2, 1, 186, 0],"bool"), list[2,8,186,186,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 186, 0],"bool"), list[2,8,186,186,], ) 
 The expanded size of the tensor (186) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 186, 186].  Tensor sizes: [2, 1, 186, 0]
2025-03-05 15:22:58.385383 test begin: paddle.broadcast_to(Tensor([2, 1, 187, 0],"bool"), list[2,8,187,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 187, 0],"bool"), list[2,8,187,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 187, 181].  Tensor sizes: [2, 1, 187, 0]
2025-03-05 15:22:58.385945 test begin: paddle.broadcast_to(Tensor([2, 1, 187, 0],"bool"), list[2,8,187,187,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 187, 0],"bool"), list[2,8,187,187,], ) 
 The expanded size of the tensor (187) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 187, 187].  Tensor sizes: [2, 1, 187, 0]
2025-03-05 15:22:58.386528 test begin: paddle.broadcast_to(Tensor([2, 1, 188, 0],"bool"), list[2,8,188,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 188, 0],"bool"), list[2,8,188,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 188, 181].  Tensor sizes: [2, 1, 188, 0]
2025-03-05 15:22:58.387087 test begin: paddle.broadcast_to(Tensor([2, 1, 188, 0],"bool"), list[2,8,188,188,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 188, 0],"bool"), list[2,8,188,188,], ) 
 The expanded size of the tensor (188) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 188, 188].  Tensor sizes: [2, 1, 188, 0]
2025-03-05 15:22:58.387624 test begin: paddle.broadcast_to(Tensor([2, 1, 189, 0],"bool"), list[2,8,189,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 189, 0],"bool"), list[2,8,189,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 189, 181].  Tensor sizes: [2, 1, 189, 0]
2025-03-05 15:22:58.388174 test begin: paddle.broadcast_to(Tensor([2, 1, 189, 0],"bool"), list[2,8,189,189,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 189, 0],"bool"), list[2,8,189,189,], ) 
 The expanded size of the tensor (189) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 189, 189].  Tensor sizes: [2, 1, 189, 0]
2025-03-05 15:22:58.388710 test begin: paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 19, 121].  Tensor sizes: [2, 1, 19, 0]
2025-03-05 15:22:58.389251 test begin: paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 19, 129].  Tensor sizes: [2, 1, 19, 0]
2025-03-05 15:22:58.389795 test begin: paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 19, 161].  Tensor sizes: [2, 1, 19, 0]
2025-03-05 15:22:58.390356 test begin: paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 19, 17].  Tensor sizes: [2, 1, 19, 0]
2025-03-05 15:22:58.390908 test begin: paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 19, 181].  Tensor sizes: [2, 1, 19, 0]
2025-03-05 15:22:58.391470 test begin: paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 19, 19].  Tensor sizes: [2, 1, 19, 0]
2025-03-05 15:22:58.392010 test begin: paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 19, 41].  Tensor sizes: [2, 1, 19, 0]
2025-03-05 15:22:58.392532 test begin: paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 19, 57].  Tensor sizes: [2, 1, 19, 0]
2025-03-05 15:22:58.393058 test begin: paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 19, 81].  Tensor sizes: [2, 1, 19, 0]
2025-03-05 15:22:58.393598 test begin: paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 19, 0],"bool"), list[2,8,19,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 19, 85].  Tensor sizes: [2, 1, 19, 0]
2025-03-05 15:22:58.394123 test begin: paddle.broadcast_to(Tensor([2, 1, 190, 0],"bool"), list[2,8,190,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 190, 0],"bool"), list[2,8,190,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 190, 181].  Tensor sizes: [2, 1, 190, 0]
2025-03-05 15:22:58.394672 test begin: paddle.broadcast_to(Tensor([2, 1, 190, 0],"bool"), list[2,8,190,190,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 190, 0],"bool"), list[2,8,190,190,], ) 
 The expanded size of the tensor (190) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 190, 190].  Tensor sizes: [2, 1, 190, 0]
2025-03-05 15:22:58.395204 test begin: paddle.broadcast_to(Tensor([2, 1, 191, 0],"bool"), list[2,8,191,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 191, 0],"bool"), list[2,8,191,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 191, 181].  Tensor sizes: [2, 1, 191, 0]
2025-03-05 15:22:58.395741 test begin: paddle.broadcast_to(Tensor([2, 1, 191, 0],"bool"), list[2,8,191,191,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 191, 0],"bool"), list[2,8,191,191,], ) 
 The expanded size of the tensor (191) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 191, 191].  Tensor sizes: [2, 1, 191, 0]
2025-03-05 15:22:58.396269 test begin: paddle.broadcast_to(Tensor([2, 1, 192, 0],"bool"), list[2,8,192,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 192, 0],"bool"), list[2,8,192,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 192, 181].  Tensor sizes: [2, 1, 192, 0]
2025-03-05 15:22:58.396813 test begin: paddle.broadcast_to(Tensor([2, 1, 192, 0],"bool"), list[2,8,192,192,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 192, 0],"bool"), list[2,8,192,192,], ) 
 The expanded size of the tensor (192) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 192, 192].  Tensor sizes: [2, 1, 192, 0]
2025-03-05 15:22:58.397342 test begin: paddle.broadcast_to(Tensor([2, 1, 193, 0],"bool"), list[2,8,193,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 193, 0],"bool"), list[2,8,193,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 193, 181].  Tensor sizes: [2, 1, 193, 0]
2025-03-05 15:22:58.397907 test begin: paddle.broadcast_to(Tensor([2, 1, 193, 0],"bool"), list[2,8,193,193,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 193, 0],"bool"), list[2,8,193,193,], ) 
 The expanded size of the tensor (193) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 193, 193].  Tensor sizes: [2, 1, 193, 0]
2025-03-05 15:22:58.398447 test begin: paddle.broadcast_to(Tensor([2, 1, 194, 0],"bool"), list[2,8,194,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 194, 0],"bool"), list[2,8,194,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 194, 181].  Tensor sizes: [2, 1, 194, 0]
2025-03-05 15:22:58.398991 test begin: paddle.broadcast_to(Tensor([2, 1, 194, 0],"bool"), list[2,8,194,194,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 194, 0],"bool"), list[2,8,194,194,], ) 
 The expanded size of the tensor (194) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 194, 194].  Tensor sizes: [2, 1, 194, 0]
2025-03-05 15:22:58.399512 test begin: paddle.broadcast_to(Tensor([2, 1, 195, 0],"bool"), list[2,8,195,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 195, 0],"bool"), list[2,8,195,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 195, 181].  Tensor sizes: [2, 1, 195, 0]
2025-03-05 15:22:58.400044 test begin: paddle.broadcast_to(Tensor([2, 1, 195, 0],"bool"), list[2,8,195,195,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 195, 0],"bool"), list[2,8,195,195,], ) 
 The expanded size of the tensor (195) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 195, 195].  Tensor sizes: [2, 1, 195, 0]
2025-03-05 15:22:58.400603 test begin: paddle.broadcast_to(Tensor([2, 1, 196, 0],"bool"), list[2,8,196,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 196, 0],"bool"), list[2,8,196,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 196, 181].  Tensor sizes: [2, 1, 196, 0]
2025-03-05 15:22:58.401172 test begin: paddle.broadcast_to(Tensor([2, 1, 196, 0],"bool"), list[2,8,196,196,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 196, 0],"bool"), list[2,8,196,196,], ) 
 The expanded size of the tensor (196) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 196, 196].  Tensor sizes: [2, 1, 196, 0]
2025-03-05 15:22:58.401712 test begin: paddle.broadcast_to(Tensor([2, 1, 197, 0],"bool"), list[2,8,197,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 197, 0],"bool"), list[2,8,197,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 197, 181].  Tensor sizes: [2, 1, 197, 0]
2025-03-05 15:22:58.402284 test begin: paddle.broadcast_to(Tensor([2, 1, 197, 0],"bool"), list[2,8,197,197,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 197, 0],"bool"), list[2,8,197,197,], ) 
 The expanded size of the tensor (197) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 197, 197].  Tensor sizes: [2, 1, 197, 0]
2025-03-05 15:22:58.402953 test begin: paddle.broadcast_to(Tensor([2, 1, 198, 0],"bool"), list[2,8,198,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 198, 0],"bool"), list[2,8,198,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 198, 181].  Tensor sizes: [2, 1, 198, 0]
2025-03-05 15:22:58.403469 test begin: paddle.broadcast_to(Tensor([2, 1, 198, 0],"bool"), list[2,8,198,198,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 198, 0],"bool"), list[2,8,198,198,], ) 
 The expanded size of the tensor (198) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 198, 198].  Tensor sizes: [2, 1, 198, 0]
2025-03-05 15:22:58.403992 test begin: paddle.broadcast_to(Tensor([2, 1, 199, 0],"bool"), list[2,8,199,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 199, 0],"bool"), list[2,8,199,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 199, 181].  Tensor sizes: [2, 1, 199, 0]
2025-03-05 15:22:58.404499 test begin: paddle.broadcast_to(Tensor([2, 1, 199, 0],"bool"), list[2,8,199,199,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 199, 0],"bool"), list[2,8,199,199,], ) 
 The expanded size of the tensor (199) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 199, 199].  Tensor sizes: [2, 1, 199, 0]
2025-03-05 15:22:58.405033 test begin: paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 2, 121].  Tensor sizes: [2, 1, 2, 0]
2025-03-05 15:22:58.405549 test begin: paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 2, 129].  Tensor sizes: [2, 1, 2, 0]
2025-03-05 15:22:58.406100 test begin: paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 2, 161].  Tensor sizes: [2, 1, 2, 0]
2025-03-05 15:22:58.406639 test begin: paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 2, 17].  Tensor sizes: [2, 1, 2, 0]
2025-03-05 15:22:58.407164 test begin: paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 2, 181].  Tensor sizes: [2, 1, 2, 0]
2025-03-05 15:22:58.407686 test begin: paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 2, 2].  Tensor sizes: [2, 1, 2, 0]
2025-03-05 15:22:58.408239 test begin: paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 2, 41].  Tensor sizes: [2, 1, 2, 0]
2025-03-05 15:22:58.408757 test begin: paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 2, 57].  Tensor sizes: [2, 1, 2, 0]
2025-03-05 15:22:58.409257 test begin: paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 2, 81].  Tensor sizes: [2, 1, 2, 0]
2025-03-05 15:22:58.409768 test begin: paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 2, 85].  Tensor sizes: [2, 1, 2, 0]
2025-03-05 15:22:58.410268 test begin: paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 2, 0],"bool"), list[2,8,2,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 2, 9].  Tensor sizes: [2, 1, 2, 0]
2025-03-05 15:22:58.410778 test begin: paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 20, 121].  Tensor sizes: [2, 1, 20, 0]
2025-03-05 15:22:58.411282 test begin: paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 20, 129].  Tensor sizes: [2, 1, 20, 0]
2025-03-05 15:22:58.411810 test begin: paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 20, 161].  Tensor sizes: [2, 1, 20, 0]
2025-03-05 15:22:58.412372 test begin: paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 20, 17].  Tensor sizes: [2, 1, 20, 0]
2025-03-05 15:22:58.412934 test begin: paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 20, 181].  Tensor sizes: [2, 1, 20, 0]
2025-03-05 15:22:58.413473 test begin: paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 20, 20].  Tensor sizes: [2, 1, 20, 0]
2025-03-05 15:22:58.414007 test begin: paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 20, 41].  Tensor sizes: [2, 1, 20, 0]
2025-03-05 15:22:58.414528 test begin: paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 20, 57].  Tensor sizes: [2, 1, 20, 0]
2025-03-05 15:22:58.415053 test begin: paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 20, 81].  Tensor sizes: [2, 1, 20, 0]
2025-03-05 15:22:58.415579 test begin: paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 20, 0],"bool"), list[2,8,20,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 20, 85].  Tensor sizes: [2, 1, 20, 0]
2025-03-05 15:22:58.416105 test begin: paddle.broadcast_to(Tensor([2, 1, 200, 0],"bool"), list[2,8,200,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 200, 0],"bool"), list[2,8,200,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 200, 181].  Tensor sizes: [2, 1, 200, 0]
2025-03-05 15:22:58.416688 test begin: paddle.broadcast_to(Tensor([2, 1, 200, 0],"bool"), list[2,8,200,200,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 200, 0],"bool"), list[2,8,200,200,], ) 
 The expanded size of the tensor (200) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 200, 200].  Tensor sizes: [2, 1, 200, 0]
2025-03-05 15:22:58.417215 test begin: paddle.broadcast_to(Tensor([2, 1, 201, 0],"bool"), list[2,8,201,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 201, 0],"bool"), list[2,8,201,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 201, 181].  Tensor sizes: [2, 1, 201, 0]
2025-03-05 15:22:58.417750 test begin: paddle.broadcast_to(Tensor([2, 1, 201, 0],"bool"), list[2,8,201,201,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 201, 0],"bool"), list[2,8,201,201,], ) 
 The expanded size of the tensor (201) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 201, 201].  Tensor sizes: [2, 1, 201, 0]
2025-03-05 15:22:58.418274 test begin: paddle.broadcast_to(Tensor([2, 1, 202, 0],"bool"), list[2,8,202,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 202, 0],"bool"), list[2,8,202,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 202, 181].  Tensor sizes: [2, 1, 202, 0]
2025-03-05 15:22:58.418819 test begin: paddle.broadcast_to(Tensor([2, 1, 202, 0],"bool"), list[2,8,202,202,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 202, 0],"bool"), list[2,8,202,202,], ) 
 The expanded size of the tensor (202) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 202, 202].  Tensor sizes: [2, 1, 202, 0]
2025-03-05 15:22:58.419341 test begin: paddle.broadcast_to(Tensor([2, 1, 203, 0],"bool"), list[2,8,203,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 203, 0],"bool"), list[2,8,203,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 203, 181].  Tensor sizes: [2, 1, 203, 0]
2025-03-05 15:22:58.419877 test begin: paddle.broadcast_to(Tensor([2, 1, 203, 0],"bool"), list[2,8,203,203,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 203, 0],"bool"), list[2,8,203,203,], ) 
 The expanded size of the tensor (203) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 203, 203].  Tensor sizes: [2, 1, 203, 0]
2025-03-05 15:22:58.427535 test begin: paddle.broadcast_to(Tensor([2, 1, 204, 0],"bool"), list[2,8,204,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 204, 0],"bool"), list[2,8,204,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 204, 181].  Tensor sizes: [2, 1, 204, 0]
2025-03-05 15:22:58.428120 test begin: paddle.broadcast_to(Tensor([2, 1, 204, 0],"bool"), list[2,8,204,204,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 204, 0],"bool"), list[2,8,204,204,], ) 
 The expanded size of the tensor (204) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 204, 204].  Tensor sizes: [2, 1, 204, 0]
2025-03-05 15:22:58.428660 test begin: paddle.broadcast_to(Tensor([2, 1, 205, 0],"bool"), list[2,8,205,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 205, 0],"bool"), list[2,8,205,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 205, 181].  Tensor sizes: [2, 1, 205, 0]
2025-03-05 15:22:58.429195 test begin: paddle.broadcast_to(Tensor([2, 1, 205, 0],"bool"), list[2,8,205,205,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 205, 0],"bool"), list[2,8,205,205,], ) 
 The expanded size of the tensor (205) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 205, 205].  Tensor sizes: [2, 1, 205, 0]
2025-03-05 15:22:58.429738 test begin: paddle.broadcast_to(Tensor([2, 1, 206, 0],"bool"), list[2,8,206,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 206, 0],"bool"), list[2,8,206,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 206, 181].  Tensor sizes: [2, 1, 206, 0]
2025-03-05 15:22:58.430661 test begin: paddle.broadcast_to(Tensor([2, 1, 206, 0],"bool"), list[2,8,206,206,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 206, 0],"bool"), list[2,8,206,206,], ) 
 The expanded size of the tensor (206) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 206, 206].  Tensor sizes: [2, 1, 206, 0]
2025-03-05 15:22:58.431286 test begin: paddle.broadcast_to(Tensor([2, 1, 207, 0],"bool"), list[2,8,207,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 207, 0],"bool"), list[2,8,207,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 207, 181].  Tensor sizes: [2, 1, 207, 0]
2025-03-05 15:22:58.432305 test begin: paddle.broadcast_to(Tensor([2, 1, 207, 0],"bool"), list[2,8,207,207,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 207, 0],"bool"), list[2,8,207,207,], ) 
 The expanded size of the tensor (207) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 207, 207].  Tensor sizes: [2, 1, 207, 0]
2025-03-05 15:22:58.433005 test begin: paddle.broadcast_to(Tensor([2, 1, 208, 0],"bool"), list[2,8,208,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 208, 0],"bool"), list[2,8,208,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 208, 181].  Tensor sizes: [2, 1, 208, 0]
2025-03-05 15:22:58.433560 test begin: paddle.broadcast_to(Tensor([2, 1, 208, 0],"bool"), list[2,8,208,208,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 208, 0],"bool"), list[2,8,208,208,], ) 
 The expanded size of the tensor (208) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 208, 208].  Tensor sizes: [2, 1, 208, 0]
2025-03-05 15:22:58.434093 test begin: paddle.broadcast_to(Tensor([2, 1, 209, 0],"bool"), list[2,8,209,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 209, 0],"bool"), list[2,8,209,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 209, 181].  Tensor sizes: [2, 1, 209, 0]
2025-03-05 15:22:58.434668 test begin: paddle.broadcast_to(Tensor([2, 1, 209, 0],"bool"), list[2,8,209,209,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 209, 0],"bool"), list[2,8,209,209,], ) 
 The expanded size of the tensor (209) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 209, 209].  Tensor sizes: [2, 1, 209, 0]
2025-03-05 15:22:58.435188 test begin: paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 21, 121].  Tensor sizes: [2, 1, 21, 0]
2025-03-05 15:22:58.435737 test begin: paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 21, 129].  Tensor sizes: [2, 1, 21, 0]
2025-03-05 15:22:58.436283 test begin: paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 21, 161].  Tensor sizes: [2, 1, 21, 0]
2025-03-05 15:22:58.436843 test begin: paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 21, 17].  Tensor sizes: [2, 1, 21, 0]
2025-03-05 15:22:58.437391 test begin: paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 21, 181].  Tensor sizes: [2, 1, 21, 0]
2025-03-05 15:22:58.437953 test begin: paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 21, 21].  Tensor sizes: [2, 1, 21, 0]
2025-03-05 15:22:58.438772 test begin: paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 21, 41].  Tensor sizes: [2, 1, 21, 0]
2025-03-05 15:22:58.439410 test begin: paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 21, 57].  Tensor sizes: [2, 1, 21, 0]
2025-03-05 15:22:58.440099 test begin: paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 21, 81].  Tensor sizes: [2, 1, 21, 0]
2025-03-05 15:22:58.440756 test begin: paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 21, 0],"bool"), list[2,8,21,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 21, 85].  Tensor sizes: [2, 1, 21, 0]
2025-03-05 15:22:58.441375 test begin: paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 22, 121].  Tensor sizes: [2, 1, 22, 0]
2025-03-05 15:22:58.442023 test begin: paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 22, 129].  Tensor sizes: [2, 1, 22, 0]
2025-03-05 15:22:58.442655 test begin: paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 22, 161].  Tensor sizes: [2, 1, 22, 0]
2025-03-05 15:22:58.443337 test begin: paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 22, 17].  Tensor sizes: [2, 1, 22, 0]
2025-03-05 15:22:58.443988 test begin: paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 22, 181].  Tensor sizes: [2, 1, 22, 0]
2025-03-05 15:22:58.444622 test begin: paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 22, 22].  Tensor sizes: [2, 1, 22, 0]
2025-03-05 15:22:58.445237 test begin: paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 22, 41].  Tensor sizes: [2, 1, 22, 0]
2025-03-05 15:22:58.445875 test begin: paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 22, 57].  Tensor sizes: [2, 1, 22, 0]
2025-03-05 15:22:58.446474 test begin: paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 22, 81].  Tensor sizes: [2, 1, 22, 0]
2025-03-05 15:22:58.447201 test begin: paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 22, 0],"bool"), list[2,8,22,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 22, 85].  Tensor sizes: [2, 1, 22, 0]
2025-03-05 15:22:58.447868 test begin: paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 23, 121].  Tensor sizes: [2, 1, 23, 0]
2025-03-05 15:22:58.448427 test begin: paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 23, 129].  Tensor sizes: [2, 1, 23, 0]
2025-03-05 15:22:58.449772 test begin: paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 23, 161].  Tensor sizes: [2, 1, 23, 0]
2025-03-05 15:22:58.450751 test begin: paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 23, 17].  Tensor sizes: [2, 1, 23, 0]
2025-03-05 15:22:58.451462 test begin: paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 23, 181].  Tensor sizes: [2, 1, 23, 0]
2025-03-05 15:22:58.452063 test begin: paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 23, 23].  Tensor sizes: [2, 1, 23, 0]
2025-03-05 15:22:58.452728 test begin: paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 23, 41].  Tensor sizes: [2, 1, 23, 0]
2025-03-05 15:22:58.453319 test begin: paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 23, 57].  Tensor sizes: [2, 1, 23, 0]
2025-03-05 15:22:58.453920 test begin: paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 23, 81].  Tensor sizes: [2, 1, 23, 0]
2025-03-05 15:22:58.454474 test begin: paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 23, 0],"bool"), list[2,8,23,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 23, 85].  Tensor sizes: [2, 1, 23, 0]
2025-03-05 15:22:58.455055 test begin: paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 24, 121].  Tensor sizes: [2, 1, 24, 0]
2025-03-05 15:22:58.455632 test begin: paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 24, 129].  Tensor sizes: [2, 1, 24, 0]
2025-03-05 15:22:58.456211 test begin: paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 24, 161].  Tensor sizes: [2, 1, 24, 0]
2025-03-05 15:22:58.456782 test begin: paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 24, 17].  Tensor sizes: [2, 1, 24, 0]
2025-03-05 15:22:58.457367 test begin: paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 24, 181].  Tensor sizes: [2, 1, 24, 0]
2025-03-05 15:22:58.457940 test begin: paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 24, 24].  Tensor sizes: [2, 1, 24, 0]
2025-03-05 15:22:58.458480 test begin: paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 24, 41].  Tensor sizes: [2, 1, 24, 0]
2025-03-05 15:22:58.459057 test begin: paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 24, 57].  Tensor sizes: [2, 1, 24, 0]
2025-03-05 15:22:58.459616 test begin: paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 24, 81].  Tensor sizes: [2, 1, 24, 0]
2025-03-05 15:22:58.460201 test begin: paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 24, 0],"bool"), list[2,8,24,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 24, 85].  Tensor sizes: [2, 1, 24, 0]
2025-03-05 15:22:58.460755 test begin: paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 25, 121].  Tensor sizes: [2, 1, 25, 0]
2025-03-05 15:22:58.461341 test begin: paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 25, 129].  Tensor sizes: [2, 1, 25, 0]
2025-03-05 15:22:58.461971 test begin: paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 25, 161].  Tensor sizes: [2, 1, 25, 0]
2025-03-05 15:22:58.462516 test begin: paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 25, 17].  Tensor sizes: [2, 1, 25, 0]
2025-03-05 15:22:58.463124 test begin: paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 25, 181].  Tensor sizes: [2, 1, 25, 0]
2025-03-05 15:22:58.463764 test begin: paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 25, 25].  Tensor sizes: [2, 1, 25, 0]
2025-03-05 15:22:58.464329 test begin: paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 25, 41].  Tensor sizes: [2, 1, 25, 0]
2025-03-05 15:22:58.464920 test begin: paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 25, 57].  Tensor sizes: [2, 1, 25, 0]
2025-03-05 15:22:58.465489 test begin: paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 25, 81].  Tensor sizes: [2, 1, 25, 0]
2025-03-05 15:22:58.466087 test begin: paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 25, 0],"bool"), list[2,8,25,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 25, 85].  Tensor sizes: [2, 1, 25, 0]
2025-03-05 15:22:58.466627 test begin: paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 26, 121].  Tensor sizes: [2, 1, 26, 0]
2025-03-05 15:22:58.467149 test begin: paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 26, 129].  Tensor sizes: [2, 1, 26, 0]
2025-03-05 15:22:58.467676 test begin: paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 26, 161].  Tensor sizes: [2, 1, 26, 0]
2025-03-05 15:22:58.468189 test begin: paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 26, 17].  Tensor sizes: [2, 1, 26, 0]
2025-03-05 15:22:58.468733 test begin: paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 26, 181].  Tensor sizes: [2, 1, 26, 0]
2025-03-05 15:22:58.469255 test begin: paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 26, 26].  Tensor sizes: [2, 1, 26, 0]
2025-03-05 15:22:58.469791 test begin: paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 26, 41].  Tensor sizes: [2, 1, 26, 0]
2025-03-05 15:22:58.470335 test begin: paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 26, 57].  Tensor sizes: [2, 1, 26, 0]
2025-03-05 15:22:58.470867 test begin: paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 26, 81].  Tensor sizes: [2, 1, 26, 0]
2025-03-05 15:22:58.471389 test begin: paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 26, 0],"bool"), list[2,8,26,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 26, 85].  Tensor sizes: [2, 1, 26, 0]
2025-03-05 15:22:58.471928 test begin: paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 27, 121].  Tensor sizes: [2, 1, 27, 0]
2025-03-05 15:22:58.472448 test begin: paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 27, 129].  Tensor sizes: [2, 1, 27, 0]
2025-03-05 15:22:58.473039 test begin: paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 27, 161].  Tensor sizes: [2, 1, 27, 0]
2025-03-05 15:22:58.473652 test begin: paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 27, 17].  Tensor sizes: [2, 1, 27, 0]
2025-03-05 15:22:58.474198 test begin: paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 27, 181].  Tensor sizes: [2, 1, 27, 0]
2025-03-05 15:22:58.474747 test begin: paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 27, 27].  Tensor sizes: [2, 1, 27, 0]
2025-03-05 15:22:58.475279 test begin: paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 27, 41].  Tensor sizes: [2, 1, 27, 0]
2025-03-05 15:22:58.475811 test begin: paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 27, 57].  Tensor sizes: [2, 1, 27, 0]
2025-03-05 15:22:58.476353 test begin: paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 27, 81].  Tensor sizes: [2, 1, 27, 0]
2025-03-05 15:22:58.476888 test begin: paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 27, 0],"bool"), list[2,8,27,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 27, 85].  Tensor sizes: [2, 1, 27, 0]
2025-03-05 15:22:58.477413 test begin: paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 28, 121].  Tensor sizes: [2, 1, 28, 0]
2025-03-05 15:22:58.477978 test begin: paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 28, 129].  Tensor sizes: [2, 1, 28, 0]
2025-03-05 15:22:58.478519 test begin: paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 28, 161].  Tensor sizes: [2, 1, 28, 0]
2025-03-05 15:22:58.479088 test begin: paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 28, 17].  Tensor sizes: [2, 1, 28, 0]
2025-03-05 15:22:58.479647 test begin: paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 28, 181].  Tensor sizes: [2, 1, 28, 0]
2025-03-05 15:22:58.480221 test begin: paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 28, 28].  Tensor sizes: [2, 1, 28, 0]
2025-03-05 15:22:58.480786 test begin: paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 28, 41].  Tensor sizes: [2, 1, 28, 0]
2025-03-05 15:22:58.481315 test begin: paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 28, 57].  Tensor sizes: [2, 1, 28, 0]
2025-03-05 15:22:58.481841 test begin: paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 28, 81].  Tensor sizes: [2, 1, 28, 0]
2025-03-05 15:22:58.482365 test begin: paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 28, 0],"bool"), list[2,8,28,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 28, 85].  Tensor sizes: [2, 1, 28, 0]
2025-03-05 15:22:58.482897 test begin: paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 29, 121].  Tensor sizes: [2, 1, 29, 0]
2025-03-05 15:22:58.483415 test begin: paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 29, 129].  Tensor sizes: [2, 1, 29, 0]
2025-03-05 15:22:58.483952 test begin: paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 29, 161].  Tensor sizes: [2, 1, 29, 0]
2025-03-05 15:22:58.484470 test begin: paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 29, 17].  Tensor sizes: [2, 1, 29, 0]
2025-03-05 15:22:58.485005 test begin: paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 29, 181].  Tensor sizes: [2, 1, 29, 0]
2025-03-05 15:22:58.485551 test begin: paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 29, 29].  Tensor sizes: [2, 1, 29, 0]
2025-03-05 15:22:58.486083 test begin: paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 29, 41].  Tensor sizes: [2, 1, 29, 0]
2025-03-05 15:22:58.486613 test begin: paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 29, 57].  Tensor sizes: [2, 1, 29, 0]
2025-03-05 15:22:58.487148 test begin: paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 29, 81].  Tensor sizes: [2, 1, 29, 0]
2025-03-05 15:22:58.487676 test begin: paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 29, 0],"bool"), list[2,8,29,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 29, 85].  Tensor sizes: [2, 1, 29, 0]
2025-03-05 15:22:58.488201 test begin: paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 3, 121].  Tensor sizes: [2, 1, 3, 0]
2025-03-05 15:22:58.488734 test begin: paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 3, 129].  Tensor sizes: [2, 1, 3, 0]
2025-03-05 15:22:58.489258 test begin: paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 3, 161].  Tensor sizes: [2, 1, 3, 0]
2025-03-05 15:22:58.489805 test begin: paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 3, 17].  Tensor sizes: [2, 1, 3, 0]
2025-03-05 15:22:58.490334 test begin: paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 3, 181].  Tensor sizes: [2, 1, 3, 0]
2025-03-05 15:22:58.490868 test begin: paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 3, 3].  Tensor sizes: [2, 1, 3, 0]
2025-03-05 15:22:58.491390 test begin: paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 3, 41].  Tensor sizes: [2, 1, 3, 0]
2025-03-05 15:22:58.491932 test begin: paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 3, 57].  Tensor sizes: [2, 1, 3, 0]
2025-03-05 15:22:58.492479 test begin: paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 3, 81].  Tensor sizes: [2, 1, 3, 0]
2025-03-05 15:22:58.493017 test begin: paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 3, 85].  Tensor sizes: [2, 1, 3, 0]
2025-03-05 15:22:58.493555 test begin: paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 3, 0],"bool"), list[2,8,3,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 3, 9].  Tensor sizes: [2, 1, 3, 0]
2025-03-05 15:22:58.494092 test begin: paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 30, 121].  Tensor sizes: [2, 1, 30, 0]
2025-03-05 15:22:58.494679 test begin: paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 30, 129].  Tensor sizes: [2, 1, 30, 0]
2025-03-05 15:22:58.495221 test begin: paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 30, 161].  Tensor sizes: [2, 1, 30, 0]
2025-03-05 15:22:58.495791 test begin: paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 30, 17].  Tensor sizes: [2, 1, 30, 0]
2025-03-05 15:22:58.496325 test begin: paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 30, 181].  Tensor sizes: [2, 1, 30, 0]
2025-03-05 15:22:58.496869 test begin: paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 30, 30].  Tensor sizes: [2, 1, 30, 0]
2025-03-05 15:22:58.497419 test begin: paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 30, 41].  Tensor sizes: [2, 1, 30, 0]
2025-03-05 15:22:58.497954 test begin: paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 30, 57].  Tensor sizes: [2, 1, 30, 0]
2025-03-05 15:22:58.498528 test begin: paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 30, 81].  Tensor sizes: [2, 1, 30, 0]
2025-03-05 15:22:58.499077 test begin: paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 30, 0],"bool"), list[2,8,30,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 30, 85].  Tensor sizes: [2, 1, 30, 0]
2025-03-05 15:22:58.499633 test begin: paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 31, 121].  Tensor sizes: [2, 1, 31, 0]
2025-03-05 15:22:58.500223 test begin: paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 31, 129].  Tensor sizes: [2, 1, 31, 0]
2025-03-05 15:22:58.500757 test begin: paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 31, 161].  Tensor sizes: [2, 1, 31, 0]
2025-03-05 15:22:58.501304 test begin: paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 31, 17].  Tensor sizes: [2, 1, 31, 0]
2025-03-05 15:22:58.501840 test begin: paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 31, 181].  Tensor sizes: [2, 1, 31, 0]
2025-03-05 15:22:58.502372 test begin: paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 31, 31].  Tensor sizes: [2, 1, 31, 0]
2025-03-05 15:22:58.502908 test begin: paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 31, 41].  Tensor sizes: [2, 1, 31, 0]
2025-03-05 15:22:58.503443 test begin: paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 31, 57].  Tensor sizes: [2, 1, 31, 0]
2025-03-05 15:22:58.503984 test begin: paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 31, 81].  Tensor sizes: [2, 1, 31, 0]
2025-03-05 15:22:58.504521 test begin: paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 31, 0],"bool"), list[2,8,31,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 31, 85].  Tensor sizes: [2, 1, 31, 0]
2025-03-05 15:22:58.505090 test begin: paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 32, 121].  Tensor sizes: [2, 1, 32, 0]
2025-03-05 15:22:58.505691 test begin: paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 32, 129].  Tensor sizes: [2, 1, 32, 0]
2025-03-05 15:22:58.506223 test begin: paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 32, 161].  Tensor sizes: [2, 1, 32, 0]
2025-03-05 15:22:58.506782 test begin: paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 32, 17].  Tensor sizes: [2, 1, 32, 0]
2025-03-05 15:22:58.507331 test begin: paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 32, 181].  Tensor sizes: [2, 1, 32, 0]
2025-03-05 15:22:58.507865 test begin: paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 32, 32].  Tensor sizes: [2, 1, 32, 0]
2025-03-05 15:22:58.508400 test begin: paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 32, 41].  Tensor sizes: [2, 1, 32, 0]
2025-03-05 15:22:58.508984 test begin: paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 32, 57].  Tensor sizes: [2, 1, 32, 0]
2025-03-05 15:22:58.509519 test begin: paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 32, 81].  Tensor sizes: [2, 1, 32, 0]
2025-03-05 15:22:58.510077 test begin: paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 32, 0],"bool"), list[2,8,32,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 32, 85].  Tensor sizes: [2, 1, 32, 0]
2025-03-05 15:22:58.510605 test begin: paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 33, 121].  Tensor sizes: [2, 1, 33, 0]
2025-03-05 15:22:58.511140 test begin: paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 33, 129].  Tensor sizes: [2, 1, 33, 0]
2025-03-05 15:22:58.511676 test begin: paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 33, 161].  Tensor sizes: [2, 1, 33, 0]
2025-03-05 15:22:58.512210 test begin: paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 33, 17].  Tensor sizes: [2, 1, 33, 0]
2025-03-05 15:22:58.512738 test begin: paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 33, 181].  Tensor sizes: [2, 1, 33, 0]
2025-03-05 15:22:58.513282 test begin: paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 33, 33].  Tensor sizes: [2, 1, 33, 0]
2025-03-05 15:22:58.513811 test begin: paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 33, 41].  Tensor sizes: [2, 1, 33, 0]
2025-03-05 15:22:58.514348 test begin: paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 33, 57].  Tensor sizes: [2, 1, 33, 0]
2025-03-05 15:22:58.514917 test begin: paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 33, 81].  Tensor sizes: [2, 1, 33, 0]
2025-03-05 15:22:58.515430 test begin: paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 33, 0],"bool"), list[2,8,33,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 33, 85].  Tensor sizes: [2, 1, 33, 0]
2025-03-05 15:22:58.515962 test begin: paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 34, 121].  Tensor sizes: [2, 1, 34, 0]
2025-03-05 15:22:58.516480 test begin: paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 34, 129].  Tensor sizes: [2, 1, 34, 0]
2025-03-05 15:22:58.517007 test begin: paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 34, 161].  Tensor sizes: [2, 1, 34, 0]
2025-03-05 15:22:58.517524 test begin: paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 34, 17].  Tensor sizes: [2, 1, 34, 0]
2025-03-05 15:22:58.518066 test begin: paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 34, 181].  Tensor sizes: [2, 1, 34, 0]
2025-03-05 15:22:58.518593 test begin: paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 34, 34].  Tensor sizes: [2, 1, 34, 0]
2025-03-05 15:22:58.519127 test begin: paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 34, 41].  Tensor sizes: [2, 1, 34, 0]
2025-03-05 15:22:58.519660 test begin: paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 34, 57].  Tensor sizes: [2, 1, 34, 0]
2025-03-05 15:22:58.520202 test begin: paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 34, 81].  Tensor sizes: [2, 1, 34, 0]
2025-03-05 15:22:58.520737 test begin: paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 34, 0],"bool"), list[2,8,34,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 34, 85].  Tensor sizes: [2, 1, 34, 0]
2025-03-05 15:22:58.521276 test begin: paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 35, 121].  Tensor sizes: [2, 1, 35, 0]
2025-03-05 15:22:58.521832 test begin: paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 35, 129].  Tensor sizes: [2, 1, 35, 0]
2025-03-05 15:22:58.522355 test begin: paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 35, 161].  Tensor sizes: [2, 1, 35, 0]
2025-03-05 15:22:58.522891 test begin: paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 35, 17].  Tensor sizes: [2, 1, 35, 0]
2025-03-05 15:22:58.523489 test begin: paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 35, 181].  Tensor sizes: [2, 1, 35, 0]
2025-03-05 15:22:58.524044 test begin: paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 35, 35].  Tensor sizes: [2, 1, 35, 0]
2025-03-05 15:22:58.524572 test begin: paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 35, 41].  Tensor sizes: [2, 1, 35, 0]
2025-03-05 15:22:58.525112 test begin: paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 35, 57].  Tensor sizes: [2, 1, 35, 0]
2025-03-05 15:22:58.525638 test begin: paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 35, 81].  Tensor sizes: [2, 1, 35, 0]
2025-03-05 15:22:58.526163 test begin: paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 35, 0],"bool"), list[2,8,35,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 35, 85].  Tensor sizes: [2, 1, 35, 0]
2025-03-05 15:22:58.526690 test begin: paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 36, 121].  Tensor sizes: [2, 1, 36, 0]
2025-03-05 15:22:58.527273 test begin: paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 36, 129].  Tensor sizes: [2, 1, 36, 0]
2025-03-05 15:22:58.527800 test begin: paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 36, 161].  Tensor sizes: [2, 1, 36, 0]
2025-03-05 15:22:58.528315 test begin: paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 36, 181].  Tensor sizes: [2, 1, 36, 0]
2025-03-05 15:22:58.528844 test begin: paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 36, 36].  Tensor sizes: [2, 1, 36, 0]
2025-03-05 15:22:58.529367 test begin: paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 36, 41].  Tensor sizes: [2, 1, 36, 0]
2025-03-05 15:22:58.529908 test begin: paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 36, 57].  Tensor sizes: [2, 1, 36, 0]
2025-03-05 15:22:58.530447 test begin: paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 36, 81].  Tensor sizes: [2, 1, 36, 0]
2025-03-05 15:22:58.531014 test begin: paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 36, 0],"bool"), list[2,8,36,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 36, 85].  Tensor sizes: [2, 1, 36, 0]
2025-03-05 15:22:58.531547 test begin: paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 37, 121].  Tensor sizes: [2, 1, 37, 0]
2025-03-05 15:22:58.532074 test begin: paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 37, 129].  Tensor sizes: [2, 1, 37, 0]
2025-03-05 15:22:58.532608 test begin: paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 37, 161].  Tensor sizes: [2, 1, 37, 0]
2025-03-05 15:22:58.533142 test begin: paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 37, 181].  Tensor sizes: [2, 1, 37, 0]
2025-03-05 15:22:58.533680 test begin: paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 37, 37].  Tensor sizes: [2, 1, 37, 0]
2025-03-05 15:22:58.534231 test begin: paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 37, 41].  Tensor sizes: [2, 1, 37, 0]
2025-03-05 15:22:58.534773 test begin: paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 37, 57].  Tensor sizes: [2, 1, 37, 0]
2025-03-05 15:22:58.535290 test begin: paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 37, 81].  Tensor sizes: [2, 1, 37, 0]
2025-03-05 15:22:58.535807 test begin: paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 37, 0],"bool"), list[2,8,37,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 37, 85].  Tensor sizes: [2, 1, 37, 0]
2025-03-05 15:22:58.536323 test begin: paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 38, 121].  Tensor sizes: [2, 1, 38, 0]
2025-03-05 15:22:58.536856 test begin: paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 38, 129].  Tensor sizes: [2, 1, 38, 0]
2025-03-05 15:22:58.537381 test begin: paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 38, 161].  Tensor sizes: [2, 1, 38, 0]
2025-03-05 15:22:58.537899 test begin: paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 38, 181].  Tensor sizes: [2, 1, 38, 0]
2025-03-05 15:22:58.538426 test begin: paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 38, 38].  Tensor sizes: [2, 1, 38, 0]
2025-03-05 15:22:58.538958 test begin: paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 38, 41].  Tensor sizes: [2, 1, 38, 0]
2025-03-05 15:22:58.539487 test begin: paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 38, 57].  Tensor sizes: [2, 1, 38, 0]
2025-03-05 15:22:58.540031 test begin: paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 38, 81].  Tensor sizes: [2, 1, 38, 0]
2025-03-05 15:22:58.540555 test begin: paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 38, 0],"bool"), list[2,8,38,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 38, 85].  Tensor sizes: [2, 1, 38, 0]
2025-03-05 15:22:58.541134 test begin: paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 39, 121].  Tensor sizes: [2, 1, 39, 0]
2025-03-05 15:22:58.541673 test begin: paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 39, 129].  Tensor sizes: [2, 1, 39, 0]
2025-03-05 15:22:58.542241 test begin: paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 39, 161].  Tensor sizes: [2, 1, 39, 0]
2025-03-05 15:22:58.542819 test begin: paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 39, 181].  Tensor sizes: [2, 1, 39, 0]
2025-03-05 15:22:58.543357 test begin: paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 39, 39].  Tensor sizes: [2, 1, 39, 0]
2025-03-05 15:22:58.543885 test begin: paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 39, 41].  Tensor sizes: [2, 1, 39, 0]
2025-03-05 15:22:58.544405 test begin: paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 39, 57].  Tensor sizes: [2, 1, 39, 0]
2025-03-05 15:22:58.544949 test begin: paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 39, 81].  Tensor sizes: [2, 1, 39, 0]
2025-03-05 15:22:58.545488 test begin: paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 39, 0],"bool"), list[2,8,39,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 39, 85].  Tensor sizes: [2, 1, 39, 0]
2025-03-05 15:22:58.546035 test begin: paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 4, 121].  Tensor sizes: [2, 1, 4, 0]
2025-03-05 15:22:58.546571 test begin: paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 4, 129].  Tensor sizes: [2, 1, 4, 0]
2025-03-05 15:22:58.547115 test begin: paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 4, 161].  Tensor sizes: [2, 1, 4, 0]
2025-03-05 15:22:58.547668 test begin: paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 4, 17].  Tensor sizes: [2, 1, 4, 0]
2025-03-05 15:22:58.548212 test begin: paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 4, 181].  Tensor sizes: [2, 1, 4, 0]
2025-03-05 15:22:58.548740 test begin: paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 4, 4].  Tensor sizes: [2, 1, 4, 0]
2025-03-05 15:22:58.549290 test begin: paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 4, 41].  Tensor sizes: [2, 1, 4, 0]
2025-03-05 15:22:58.549828 test begin: paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 4, 57].  Tensor sizes: [2, 1, 4, 0]
2025-03-05 15:22:58.550344 test begin: paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 4, 81].  Tensor sizes: [2, 1, 4, 0]
2025-03-05 15:22:58.550868 test begin: paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 4, 85].  Tensor sizes: [2, 1, 4, 0]
2025-03-05 15:22:58.551386 test begin: paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 4, 0],"bool"), list[2,8,4,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 4, 9].  Tensor sizes: [2, 1, 4, 0]
2025-03-05 15:22:58.551939 test begin: paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 40, 121].  Tensor sizes: [2, 1, 40, 0]
2025-03-05 15:22:58.552506 test begin: paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 40, 129].  Tensor sizes: [2, 1, 40, 0]
2025-03-05 15:22:58.553047 test begin: paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 40, 161].  Tensor sizes: [2, 1, 40, 0]
2025-03-05 15:22:58.553570 test begin: paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 40, 181].  Tensor sizes: [2, 1, 40, 0]
2025-03-05 15:22:58.554104 test begin: paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 40, 40].  Tensor sizes: [2, 1, 40, 0]
2025-03-05 15:22:58.554615 test begin: paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 40, 41].  Tensor sizes: [2, 1, 40, 0]
2025-03-05 15:22:58.555140 test begin: paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 40, 57].  Tensor sizes: [2, 1, 40, 0]
2025-03-05 15:22:58.555654 test begin: paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 40, 81].  Tensor sizes: [2, 1, 40, 0]
2025-03-05 15:22:58.556176 test begin: paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 40, 0],"bool"), list[2,8,40,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 40, 85].  Tensor sizes: [2, 1, 40, 0]
2025-03-05 15:22:58.556708 test begin: paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 41, 121].  Tensor sizes: [2, 1, 41, 0]
2025-03-05 15:22:58.557238 test begin: paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 41, 129].  Tensor sizes: [2, 1, 41, 0]
2025-03-05 15:22:58.557777 test begin: paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 41, 161].  Tensor sizes: [2, 1, 41, 0]
2025-03-05 15:22:58.558326 test begin: paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 41, 181].  Tensor sizes: [2, 1, 41, 0]
2025-03-05 15:22:58.559382 test begin: paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 41, 41].  Tensor sizes: [2, 1, 41, 0]
2025-03-05 15:22:58.559923 test begin: paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 41, 57].  Tensor sizes: [2, 1, 41, 0]
2025-03-05 15:22:58.560487 test begin: paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 41, 81].  Tensor sizes: [2, 1, 41, 0]
2025-03-05 15:22:58.561059 test begin: paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 41, 0],"bool"), list[2,8,41,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 41, 85].  Tensor sizes: [2, 1, 41, 0]
2025-03-05 15:22:58.561578 test begin: paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 42, 121].  Tensor sizes: [2, 1, 42, 0]
2025-03-05 15:22:58.562122 test begin: paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 42, 129].  Tensor sizes: [2, 1, 42, 0]
2025-03-05 15:22:58.562639 test begin: paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 42, 161].  Tensor sizes: [2, 1, 42, 0]
2025-03-05 15:22:58.563163 test begin: paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 42, 181].  Tensor sizes: [2, 1, 42, 0]
2025-03-05 15:22:58.563684 test begin: paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 42, 41].  Tensor sizes: [2, 1, 42, 0]
2025-03-05 15:22:58.564225 test begin: paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 42, 42].  Tensor sizes: [2, 1, 42, 0]
2025-03-05 15:22:58.564753 test begin: paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 42, 57].  Tensor sizes: [2, 1, 42, 0]
2025-03-05 15:22:58.565305 test begin: paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 42, 81].  Tensor sizes: [2, 1, 42, 0]
2025-03-05 15:22:58.565829 test begin: paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 42, 0],"bool"), list[2,8,42,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 42, 85].  Tensor sizes: [2, 1, 42, 0]
2025-03-05 15:22:58.566345 test begin: paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 43, 121].  Tensor sizes: [2, 1, 43, 0]
2025-03-05 15:22:58.566929 test begin: paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 43, 129].  Tensor sizes: [2, 1, 43, 0]
2025-03-05 15:22:58.567456 test begin: paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 43, 161].  Tensor sizes: [2, 1, 43, 0]
2025-03-05 15:22:58.568004 test begin: paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 43, 181].  Tensor sizes: [2, 1, 43, 0]
2025-03-05 15:22:58.568526 test begin: paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 43, 41].  Tensor sizes: [2, 1, 43, 0]
2025-03-05 15:22:58.569049 test begin: paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 43, 43].  Tensor sizes: [2, 1, 43, 0]
2025-03-05 15:22:58.569566 test begin: paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 43, 57].  Tensor sizes: [2, 1, 43, 0]
2025-03-05 15:22:58.570086 test begin: paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 43, 81].  Tensor sizes: [2, 1, 43, 0]
2025-03-05 15:22:58.570601 test begin: paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 43, 0],"bool"), list[2,8,43,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 43, 85].  Tensor sizes: [2, 1, 43, 0]
2025-03-05 15:22:58.571111 test begin: paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 44, 121].  Tensor sizes: [2, 1, 44, 0]
2025-03-05 15:22:58.571645 test begin: paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 44, 129].  Tensor sizes: [2, 1, 44, 0]
2025-03-05 15:22:58.572171 test begin: paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 44, 161].  Tensor sizes: [2, 1, 44, 0]
2025-03-05 15:22:58.572744 test begin: paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 44, 181].  Tensor sizes: [2, 1, 44, 0]
2025-03-05 15:22:58.573289 test begin: paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 44, 41].  Tensor sizes: [2, 1, 44, 0]
2025-03-05 15:22:58.573828 test begin: paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 44, 44].  Tensor sizes: [2, 1, 44, 0]
2025-03-05 15:22:58.574376 test begin: paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 44, 57].  Tensor sizes: [2, 1, 44, 0]
2025-03-05 15:22:58.574925 test begin: paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 44, 81].  Tensor sizes: [2, 1, 44, 0]
2025-03-05 15:22:58.575467 test begin: paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 44, 0],"bool"), list[2,8,44,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 44, 85].  Tensor sizes: [2, 1, 44, 0]
2025-03-05 15:22:58.576035 test begin: paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 45, 121].  Tensor sizes: [2, 1, 45, 0]
2025-03-05 15:22:58.576571 test begin: paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 45, 129].  Tensor sizes: [2, 1, 45, 0]
2025-03-05 15:22:58.577106 test begin: paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 45, 161].  Tensor sizes: [2, 1, 45, 0]
2025-03-05 15:22:58.577644 test begin: paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 45, 181].  Tensor sizes: [2, 1, 45, 0]
2025-03-05 15:22:58.578167 test begin: paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 45, 41].  Tensor sizes: [2, 1, 45, 0]
2025-03-05 15:22:58.578683 test begin: paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 45, 45].  Tensor sizes: [2, 1, 45, 0]
2025-03-05 15:22:58.579212 test begin: paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 45, 57].  Tensor sizes: [2, 1, 45, 0]
2025-03-05 15:22:58.579763 test begin: paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 45, 81].  Tensor sizes: [2, 1, 45, 0]
2025-03-05 15:22:58.580302 test begin: paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 45, 0],"bool"), list[2,8,45,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 45, 85].  Tensor sizes: [2, 1, 45, 0]
2025-03-05 15:22:58.580837 test begin: paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 46, 121].  Tensor sizes: [2, 1, 46, 0]
2025-03-05 15:22:58.581373 test begin: paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 46, 129].  Tensor sizes: [2, 1, 46, 0]
2025-03-05 15:22:58.581910 test begin: paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 46, 161].  Tensor sizes: [2, 1, 46, 0]
2025-03-05 15:22:58.582432 test begin: paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 46, 181].  Tensor sizes: [2, 1, 46, 0]
2025-03-05 15:22:58.582982 test begin: paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 46, 41].  Tensor sizes: [2, 1, 46, 0]
2025-03-05 15:22:58.583556 test begin: paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 46, 46].  Tensor sizes: [2, 1, 46, 0]
2025-03-05 15:22:58.584102 test begin: paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 46, 57].  Tensor sizes: [2, 1, 46, 0]
2025-03-05 15:22:58.584625 test begin: paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 46, 81].  Tensor sizes: [2, 1, 46, 0]
2025-03-05 15:22:58.585144 test begin: paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 46, 0],"bool"), list[2,8,46,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 46, 85].  Tensor sizes: [2, 1, 46, 0]
2025-03-05 15:22:58.585671 test begin: paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 47, 121].  Tensor sizes: [2, 1, 47, 0]
2025-03-05 15:22:58.586213 test begin: paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 47, 129].  Tensor sizes: [2, 1, 47, 0]
2025-03-05 15:22:58.586765 test begin: paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 47, 161].  Tensor sizes: [2, 1, 47, 0]
2025-03-05 15:22:58.587287 test begin: paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 47, 181].  Tensor sizes: [2, 1, 47, 0]
2025-03-05 15:22:58.587828 test begin: paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 47, 41].  Tensor sizes: [2, 1, 47, 0]
2025-03-05 15:22:58.588395 test begin: paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 47, 47].  Tensor sizes: [2, 1, 47, 0]
2025-03-05 15:22:58.588946 test begin: paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 47, 57].  Tensor sizes: [2, 1, 47, 0]
2025-03-05 15:22:58.589464 test begin: paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 47, 81].  Tensor sizes: [2, 1, 47, 0]
2025-03-05 15:22:58.590004 test begin: paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 47, 0],"bool"), list[2,8,47,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 47, 85].  Tensor sizes: [2, 1, 47, 0]
2025-03-05 15:22:58.590534 test begin: paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 48, 121].  Tensor sizes: [2, 1, 48, 0]
2025-03-05 15:22:58.591057 test begin: paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 48, 129].  Tensor sizes: [2, 1, 48, 0]
2025-03-05 15:22:58.591574 test begin: paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 48, 161].  Tensor sizes: [2, 1, 48, 0]
2025-03-05 15:22:58.592181 test begin: paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 48, 181].  Tensor sizes: [2, 1, 48, 0]
2025-03-05 15:22:58.592734 test begin: paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 48, 48].  Tensor sizes: [2, 1, 48, 0]
2025-03-05 15:22:58.593278 test begin: paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 48, 57].  Tensor sizes: [2, 1, 48, 0]
2025-03-05 15:22:58.593810 test begin: paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 48, 81].  Tensor sizes: [2, 1, 48, 0]
2025-03-05 15:22:58.594326 test begin: paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 48, 0],"bool"), list[2,8,48,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 48, 85].  Tensor sizes: [2, 1, 48, 0]
2025-03-05 15:22:58.594846 test begin: paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 49, 121].  Tensor sizes: [2, 1, 49, 0]
2025-03-05 15:22:58.595358 test begin: paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 49, 129].  Tensor sizes: [2, 1, 49, 0]
2025-03-05 15:22:58.595904 test begin: paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 49, 161].  Tensor sizes: [2, 1, 49, 0]
2025-03-05 15:22:58.596426 test begin: paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 49, 181].  Tensor sizes: [2, 1, 49, 0]
2025-03-05 15:22:58.596954 test begin: paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 49, 49].  Tensor sizes: [2, 1, 49, 0]
2025-03-05 15:22:58.597471 test begin: paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 49, 57].  Tensor sizes: [2, 1, 49, 0]
2025-03-05 15:22:58.598001 test begin: paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 49, 81].  Tensor sizes: [2, 1, 49, 0]
2025-03-05 15:22:58.598535 test begin: paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 49, 0],"bool"), list[2,8,49,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 49, 85].  Tensor sizes: [2, 1, 49, 0]
2025-03-05 15:22:58.599069 test begin: paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 5, 121].  Tensor sizes: [2, 1, 5, 0]
2025-03-05 15:22:58.599592 test begin: paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 5, 129].  Tensor sizes: [2, 1, 5, 0]
2025-03-05 15:22:58.600118 test begin: paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 5, 161].  Tensor sizes: [2, 1, 5, 0]
2025-03-05 15:22:58.600660 test begin: paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 5, 17].  Tensor sizes: [2, 1, 5, 0]
2025-03-05 15:22:58.601193 test begin: paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 5, 181].  Tensor sizes: [2, 1, 5, 0]
2025-03-05 15:22:58.601722 test begin: paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 5, 41].  Tensor sizes: [2, 1, 5, 0]
2025-03-05 15:22:58.602240 test begin: paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 5, 5].  Tensor sizes: [2, 1, 5, 0]
2025-03-05 15:22:58.602760 test begin: paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 5, 57].  Tensor sizes: [2, 1, 5, 0]
2025-03-05 15:22:58.603281 test begin: paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 5, 81].  Tensor sizes: [2, 1, 5, 0]
2025-03-05 15:22:58.603859 test begin: paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 5, 85].  Tensor sizes: [2, 1, 5, 0]
2025-03-05 15:22:58.604393 test begin: paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 5, 0],"bool"), list[2,8,5,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 5, 9].  Tensor sizes: [2, 1, 5, 0]
2025-03-05 15:22:58.604942 test begin: paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 50, 121].  Tensor sizes: [2, 1, 50, 0]
2025-03-05 15:22:58.605473 test begin: paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 50, 129].  Tensor sizes: [2, 1, 50, 0]
2025-03-05 15:22:58.606005 test begin: paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 50, 161].  Tensor sizes: [2, 1, 50, 0]
2025-03-05 15:22:58.606535 test begin: paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 50, 181].  Tensor sizes: [2, 1, 50, 0]
2025-03-05 15:22:58.607103 test begin: paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 50, 50].  Tensor sizes: [2, 1, 50, 0]
2025-03-05 15:22:58.607640 test begin: paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 50, 57].  Tensor sizes: [2, 1, 50, 0]
2025-03-05 15:22:58.608158 test begin: paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 50, 81].  Tensor sizes: [2, 1, 50, 0]
2025-03-05 15:22:58.608696 test begin: paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 50, 0],"bool"), list[2,8,50,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 50, 85].  Tensor sizes: [2, 1, 50, 0]
2025-03-05 15:22:58.609213 test begin: paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 51, 121].  Tensor sizes: [2, 1, 51, 0]
2025-03-05 15:22:58.609752 test begin: paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 51, 129].  Tensor sizes: [2, 1, 51, 0]
2025-03-05 15:22:58.610268 test begin: paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 51, 161].  Tensor sizes: [2, 1, 51, 0]
2025-03-05 15:22:58.610873 test begin: paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 51, 181].  Tensor sizes: [2, 1, 51, 0]
2025-03-05 15:22:58.611461 test begin: paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 51, 51].  Tensor sizes: [2, 1, 51, 0]
2025-03-05 15:22:58.612012 test begin: paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 51, 57].  Tensor sizes: [2, 1, 51, 0]
2025-03-05 15:22:58.612544 test begin: paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 51, 81].  Tensor sizes: [2, 1, 51, 0]
2025-03-05 15:22:58.613075 test begin: paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 51, 0],"bool"), list[2,8,51,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 51, 85].  Tensor sizes: [2, 1, 51, 0]
2025-03-05 15:22:58.613592 test begin: paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 52, 121].  Tensor sizes: [2, 1, 52, 0]
2025-03-05 15:22:58.614118 test begin: paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 52, 129].  Tensor sizes: [2, 1, 52, 0]
2025-03-05 15:22:58.614654 test begin: paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 52, 161].  Tensor sizes: [2, 1, 52, 0]
2025-03-05 15:22:58.615175 test begin: paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 52, 181].  Tensor sizes: [2, 1, 52, 0]
2025-03-05 15:22:58.615700 test begin: paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 52, 52].  Tensor sizes: [2, 1, 52, 0]
2025-03-05 15:22:58.616213 test begin: paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 52, 57].  Tensor sizes: [2, 1, 52, 0]
2025-03-05 15:22:58.616741 test begin: paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 52, 81].  Tensor sizes: [2, 1, 52, 0]
2025-03-05 15:22:58.617270 test begin: paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 52, 0],"bool"), list[2,8,52,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 52, 85].  Tensor sizes: [2, 1, 52, 0]
2025-03-05 15:22:58.617858 test begin: paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 53, 121].  Tensor sizes: [2, 1, 53, 0]
2025-03-05 15:22:58.618381 test begin: paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 53, 129].  Tensor sizes: [2, 1, 53, 0]
2025-03-05 15:22:58.618919 test begin: paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 53, 161].  Tensor sizes: [2, 1, 53, 0]
2025-03-05 15:22:58.619443 test begin: paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 53, 181].  Tensor sizes: [2, 1, 53, 0]
2025-03-05 15:22:58.619975 test begin: paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 53, 53].  Tensor sizes: [2, 1, 53, 0]
2025-03-05 15:22:58.620485 test begin: paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 53, 57].  Tensor sizes: [2, 1, 53, 0]
2025-03-05 15:22:58.620996 test begin: paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 53, 81].  Tensor sizes: [2, 1, 53, 0]
2025-03-05 15:22:58.621508 test begin: paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 53, 0],"bool"), list[2,8,53,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 53, 85].  Tensor sizes: [2, 1, 53, 0]
2025-03-05 15:22:58.622028 test begin: paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 54, 121].  Tensor sizes: [2, 1, 54, 0]
2025-03-05 15:22:58.622533 test begin: paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 54, 129].  Tensor sizes: [2, 1, 54, 0]
2025-03-05 15:22:58.623062 test begin: paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 54, 161].  Tensor sizes: [2, 1, 54, 0]
2025-03-05 15:22:58.623569 test begin: paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 54, 181].  Tensor sizes: [2, 1, 54, 0]
2025-03-05 15:22:58.624108 test begin: paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 54, 54].  Tensor sizes: [2, 1, 54, 0]
2025-03-05 15:22:58.624638 test begin: paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 54, 57].  Tensor sizes: [2, 1, 54, 0]
2025-03-05 15:22:58.625158 test begin: paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 54, 81].  Tensor sizes: [2, 1, 54, 0]
2025-03-05 15:22:58.625686 test begin: paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 54, 0],"bool"), list[2,8,54,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 54, 85].  Tensor sizes: [2, 1, 54, 0]
2025-03-05 15:22:58.626194 test begin: paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 55, 121].  Tensor sizes: [2, 1, 55, 0]
2025-03-05 15:22:58.626731 test begin: paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 55, 129].  Tensor sizes: [2, 1, 55, 0]
2025-03-05 15:22:58.627262 test begin: paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 55, 161].  Tensor sizes: [2, 1, 55, 0]
2025-03-05 15:22:58.627800 test begin: paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 55, 181].  Tensor sizes: [2, 1, 55, 0]
2025-03-05 15:22:58.628318 test begin: paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 55, 55].  Tensor sizes: [2, 1, 55, 0]
2025-03-05 15:22:58.628842 test begin: paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 55, 57].  Tensor sizes: [2, 1, 55, 0]
2025-03-05 15:22:58.629385 test begin: paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 55, 81].  Tensor sizes: [2, 1, 55, 0]
2025-03-05 15:22:58.629931 test begin: paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 55, 0],"bool"), list[2,8,55,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 55, 85].  Tensor sizes: [2, 1, 55, 0]
2025-03-05 15:22:58.630465 test begin: paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 56, 121].  Tensor sizes: [2, 1, 56, 0]
2025-03-05 15:22:58.631025 test begin: paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 56, 129].  Tensor sizes: [2, 1, 56, 0]
2025-03-05 15:22:58.631549 test begin: paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 56, 161].  Tensor sizes: [2, 1, 56, 0]
2025-03-05 15:22:58.632072 test begin: paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 56, 181].  Tensor sizes: [2, 1, 56, 0]
2025-03-05 15:22:58.632615 test begin: paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 56, 56].  Tensor sizes: [2, 1, 56, 0]
2025-03-05 15:22:58.633142 test begin: paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 56, 57].  Tensor sizes: [2, 1, 56, 0]
2025-03-05 15:22:58.633675 test begin: paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 56, 81].  Tensor sizes: [2, 1, 56, 0]
2025-03-05 15:22:58.634190 test begin: paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 56, 0],"bool"), list[2,8,56,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 56, 85].  Tensor sizes: [2, 1, 56, 0]
2025-03-05 15:22:58.634717 test begin: paddle.broadcast_to(Tensor([2, 1, 57, 0],"bool"), list[2,8,57,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 57, 0],"bool"), list[2,8,57,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 57, 121].  Tensor sizes: [2, 1, 57, 0]
2025-03-05 15:22:58.635250 test begin: paddle.broadcast_to(Tensor([2, 1, 57, 0],"bool"), list[2,8,57,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 57, 0],"bool"), list[2,8,57,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 57, 129].  Tensor sizes: [2, 1, 57, 0]
2025-03-05 15:22:58.635780 test begin: paddle.broadcast_to(Tensor([2, 1, 57, 0],"bool"), list[2,8,57,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 57, 0],"bool"), list[2,8,57,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 57, 161].  Tensor sizes: [2, 1, 57, 0]
2025-03-05 15:22:58.636303 test begin: paddle.broadcast_to(Tensor([2, 1, 57, 0],"bool"), list[2,8,57,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 57, 0],"bool"), list[2,8,57,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 57, 181].  Tensor sizes: [2, 1, 57, 0]
2025-03-05 15:22:58.636839 test begin: paddle.broadcast_to(Tensor([2, 1, 57, 0],"bool"), list[2,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 57, 0],"bool"), list[2,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 57, 57].  Tensor sizes: [2, 1, 57, 0]
2025-03-05 15:22:58.637368 test begin: paddle.broadcast_to(Tensor([2, 1, 57, 0],"bool"), list[2,8,57,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 57, 0],"bool"), list[2,8,57,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 57, 81].  Tensor sizes: [2, 1, 57, 0]
2025-03-05 15:22:58.637967 test begin: paddle.broadcast_to(Tensor([2, 1, 57, 0],"bool"), list[2,8,57,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 57, 0],"bool"), list[2,8,57,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 57, 85].  Tensor sizes: [2, 1, 57, 0]
2025-03-05 15:22:58.638482 test begin: paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 58, 121].  Tensor sizes: [2, 1, 58, 0]
2025-03-05 15:22:58.639017 test begin: paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 58, 129].  Tensor sizes: [2, 1, 58, 0]
2025-03-05 15:22:58.639546 test begin: paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 58, 161].  Tensor sizes: [2, 1, 58, 0]
2025-03-05 15:22:58.640092 test begin: paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 58, 181].  Tensor sizes: [2, 1, 58, 0]
2025-03-05 15:22:58.640625 test begin: paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 58, 57].  Tensor sizes: [2, 1, 58, 0]
2025-03-05 15:22:58.641163 test begin: paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 58, 58].  Tensor sizes: [2, 1, 58, 0]
2025-03-05 15:22:58.641716 test begin: paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 58, 81].  Tensor sizes: [2, 1, 58, 0]
2025-03-05 15:22:58.642254 test begin: paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 58, 0],"bool"), list[2,8,58,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 58, 85].  Tensor sizes: [2, 1, 58, 0]
2025-03-05 15:22:58.642789 test begin: paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 59, 121].  Tensor sizes: [2, 1, 59, 0]
2025-03-05 15:22:58.643312 test begin: paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 59, 129].  Tensor sizes: [2, 1, 59, 0]
2025-03-05 15:22:58.643840 test begin: paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 59, 161].  Tensor sizes: [2, 1, 59, 0]
2025-03-05 15:22:58.644359 test begin: paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 59, 181].  Tensor sizes: [2, 1, 59, 0]
2025-03-05 15:22:58.644886 test begin: paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 59, 57].  Tensor sizes: [2, 1, 59, 0]
2025-03-05 15:22:58.645402 test begin: paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 59, 59].  Tensor sizes: [2, 1, 59, 0]
2025-03-05 15:22:58.645935 test begin: paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 59, 81].  Tensor sizes: [2, 1, 59, 0]
2025-03-05 15:22:58.646472 test begin: paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 59, 0],"bool"), list[2,8,59,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 59, 85].  Tensor sizes: [2, 1, 59, 0]
2025-03-05 15:22:58.647012 test begin: paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 6, 121].  Tensor sizes: [2, 1, 6, 0]
2025-03-05 15:22:58.647553 test begin: paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 6, 129].  Tensor sizes: [2, 1, 6, 0]
2025-03-05 15:22:58.648089 test begin: paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 6, 161].  Tensor sizes: [2, 1, 6, 0]
2025-03-05 15:22:58.648622 test begin: paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 6, 17].  Tensor sizes: [2, 1, 6, 0]
2025-03-05 15:22:58.649152 test begin: paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 6, 181].  Tensor sizes: [2, 1, 6, 0]
2025-03-05 15:22:58.649687 test begin: paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 6, 41].  Tensor sizes: [2, 1, 6, 0]
2025-03-05 15:22:58.650231 test begin: paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 6, 57].  Tensor sizes: [2, 1, 6, 0]
2025-03-05 15:22:58.650757 test begin: paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 6, 6].  Tensor sizes: [2, 1, 6, 0]
2025-03-05 15:22:58.651303 test begin: paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 6, 81].  Tensor sizes: [2, 1, 6, 0]
2025-03-05 15:22:58.651848 test begin: paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 6, 85].  Tensor sizes: [2, 1, 6, 0]
2025-03-05 15:22:58.652356 test begin: paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 6, 0],"bool"), list[2,8,6,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 6, 9].  Tensor sizes: [2, 1, 6, 0]
2025-03-05 15:22:58.652880 test begin: paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 60, 121].  Tensor sizes: [2, 1, 60, 0]
2025-03-05 15:22:58.653395 test begin: paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 60, 129].  Tensor sizes: [2, 1, 60, 0]
2025-03-05 15:22:58.653933 test begin: paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 60, 161].  Tensor sizes: [2, 1, 60, 0]
2025-03-05 15:22:58.654469 test begin: paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 60, 181].  Tensor sizes: [2, 1, 60, 0]
2025-03-05 15:22:58.654994 test begin: paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 60, 57].  Tensor sizes: [2, 1, 60, 0]
2025-03-05 15:22:58.655543 test begin: paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 60, 60].  Tensor sizes: [2, 1, 60, 0]
2025-03-05 15:22:58.656069 test begin: paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 60, 81].  Tensor sizes: [2, 1, 60, 0]
2025-03-05 15:22:58.656579 test begin: paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 60, 0],"bool"), list[2,8,60,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 60, 85].  Tensor sizes: [2, 1, 60, 0]
2025-03-05 15:22:58.657093 test begin: paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 61, 121].  Tensor sizes: [2, 1, 61, 0]
2025-03-05 15:22:58.657653 test begin: paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 61, 129].  Tensor sizes: [2, 1, 61, 0]
2025-03-05 15:22:58.658171 test begin: paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 61, 161].  Tensor sizes: [2, 1, 61, 0]
2025-03-05 15:22:58.658718 test begin: paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 61, 181].  Tensor sizes: [2, 1, 61, 0]
2025-03-05 15:22:58.659244 test begin: paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 61, 57].  Tensor sizes: [2, 1, 61, 0]
2025-03-05 15:22:58.659776 test begin: paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 61, 61].  Tensor sizes: [2, 1, 61, 0]
2025-03-05 15:22:58.660298 test begin: paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 61, 81].  Tensor sizes: [2, 1, 61, 0]
2025-03-05 15:22:58.660827 test begin: paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 61, 0],"bool"), list[2,8,61,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 61, 85].  Tensor sizes: [2, 1, 61, 0]
2025-03-05 15:22:58.661344 test begin: paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 62, 121].  Tensor sizes: [2, 1, 62, 0]
2025-03-05 15:22:58.661861 test begin: paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 62, 129].  Tensor sizes: [2, 1, 62, 0]
2025-03-05 15:22:58.662382 test begin: paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 62, 161].  Tensor sizes: [2, 1, 62, 0]
2025-03-05 15:22:58.662907 test begin: paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 62, 181].  Tensor sizes: [2, 1, 62, 0]
2025-03-05 15:22:58.663435 test begin: paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 62, 57].  Tensor sizes: [2, 1, 62, 0]
2025-03-05 15:22:58.663982 test begin: paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 62, 62].  Tensor sizes: [2, 1, 62, 0]
2025-03-05 15:22:58.664505 test begin: paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 62, 81].  Tensor sizes: [2, 1, 62, 0]
2025-03-05 15:22:58.665054 test begin: paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 62, 0],"bool"), list[2,8,62,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 62, 85].  Tensor sizes: [2, 1, 62, 0]
2025-03-05 15:22:58.665576 test begin: paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 63, 121].  Tensor sizes: [2, 1, 63, 0]
2025-03-05 15:22:58.666122 test begin: paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 63, 129].  Tensor sizes: [2, 1, 63, 0]
2025-03-05 15:22:58.666653 test begin: paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 63, 161].  Tensor sizes: [2, 1, 63, 0]
2025-03-05 15:22:58.667177 test begin: paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 63, 181].  Tensor sizes: [2, 1, 63, 0]
2025-03-05 15:22:58.667706 test begin: paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 63, 57].  Tensor sizes: [2, 1, 63, 0]
2025-03-05 15:22:58.668252 test begin: paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 63, 63].  Tensor sizes: [2, 1, 63, 0]
2025-03-05 15:22:58.668780 test begin: paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 63, 81].  Tensor sizes: [2, 1, 63, 0]
2025-03-05 15:22:58.669309 test begin: paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 63, 0],"bool"), list[2,8,63,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 63, 85].  Tensor sizes: [2, 1, 63, 0]
2025-03-05 15:22:58.669834 test begin: paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 64, 121].  Tensor sizes: [2, 1, 64, 0]
2025-03-05 15:22:58.670381 test begin: paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 64, 129].  Tensor sizes: [2, 1, 64, 0]
2025-03-05 15:22:58.670908 test begin: paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 64, 161].  Tensor sizes: [2, 1, 64, 0]
2025-03-05 15:22:58.671426 test begin: paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 64, 181].  Tensor sizes: [2, 1, 64, 0]
2025-03-05 15:22:58.671963 test begin: paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 64, 57].  Tensor sizes: [2, 1, 64, 0]
2025-03-05 15:22:58.672488 test begin: paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 64, 64].  Tensor sizes: [2, 1, 64, 0]
2025-03-05 15:22:58.673012 test begin: paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 64, 81].  Tensor sizes: [2, 1, 64, 0]
2025-03-05 15:22:58.673538 test begin: paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 64, 0],"bool"), list[2,8,64,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 64, 85].  Tensor sizes: [2, 1, 64, 0]
2025-03-05 15:22:58.674071 test begin: paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 65, 121].  Tensor sizes: [2, 1, 65, 0]
2025-03-05 15:22:58.674655 test begin: paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 65, 129].  Tensor sizes: [2, 1, 65, 0]
2025-03-05 15:22:58.675181 test begin: paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 65, 161].  Tensor sizes: [2, 1, 65, 0]
2025-03-05 15:22:58.675715 test begin: paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 65, 181].  Tensor sizes: [2, 1, 65, 0]
2025-03-05 15:22:58.676239 test begin: paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 65, 57].  Tensor sizes: [2, 1, 65, 0]
2025-03-05 15:22:58.676755 test begin: paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 65, 65].  Tensor sizes: [2, 1, 65, 0]
2025-03-05 15:22:58.677265 test begin: paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 65, 81].  Tensor sizes: [2, 1, 65, 0]
2025-03-05 15:22:58.677787 test begin: paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 65, 0],"bool"), list[2,8,65,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 65, 85].  Tensor sizes: [2, 1, 65, 0]
2025-03-05 15:22:58.678322 test begin: paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 66, 121].  Tensor sizes: [2, 1, 66, 0]
2025-03-05 15:22:58.678849 test begin: paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 66, 129].  Tensor sizes: [2, 1, 66, 0]
2025-03-05 15:22:58.679396 test begin: paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 66, 161].  Tensor sizes: [2, 1, 66, 0]
2025-03-05 15:22:58.679932 test begin: paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 66, 181].  Tensor sizes: [2, 1, 66, 0]
2025-03-05 15:22:58.680465 test begin: paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 66, 57].  Tensor sizes: [2, 1, 66, 0]
2025-03-05 15:22:58.681759 test begin: paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 66, 66].  Tensor sizes: [2, 1, 66, 0]
2025-03-05 15:22:58.682299 test begin: paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 66, 81].  Tensor sizes: [2, 1, 66, 0]
2025-03-05 15:22:58.682836 test begin: paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 66, 0],"bool"), list[2,8,66,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 66, 85].  Tensor sizes: [2, 1, 66, 0]
2025-03-05 15:22:58.683360 test begin: paddle.broadcast_to(Tensor([2, 1, 67, 0],"bool"), list[2,8,67,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 67, 0],"bool"), list[2,8,67,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 67, 121].  Tensor sizes: [2, 1, 67, 0]
2025-03-05 15:22:58.683894 test begin: paddle.broadcast_to(Tensor([2, 1, 67, 0],"bool"), list[2,8,67,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 67, 0],"bool"), list[2,8,67,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 67, 129].  Tensor sizes: [2, 1, 67, 0]
2025-03-05 15:22:58.684412 test begin: paddle.broadcast_to(Tensor([2, 1, 67, 0],"bool"), list[2,8,67,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 67, 0],"bool"), list[2,8,67,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 67, 161].  Tensor sizes: [2, 1, 67, 0]
2025-03-05 15:22:58.684958 test begin: paddle.broadcast_to(Tensor([2, 1, 67, 0],"bool"), list[2,8,67,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 67, 0],"bool"), list[2,8,67,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 67, 181].  Tensor sizes: [2, 1, 67, 0]
2025-03-05 15:22:58.685484 test begin: paddle.broadcast_to(Tensor([2, 1, 67, 0],"bool"), list[2,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 67, 0],"bool"), list[2,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 67, 67].  Tensor sizes: [2, 1, 67, 0]
2025-03-05 15:22:58.686015 test begin: paddle.broadcast_to(Tensor([2, 1, 67, 0],"bool"), list[2,8,67,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 67, 0],"bool"), list[2,8,67,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 67, 81].  Tensor sizes: [2, 1, 67, 0]
2025-03-05 15:22:58.686541 test begin: paddle.broadcast_to(Tensor([2, 1, 67, 0],"bool"), list[2,8,67,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 67, 0],"bool"), list[2,8,67,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 67, 85].  Tensor sizes: [2, 1, 67, 0]
2025-03-05 15:22:58.687066 test begin: paddle.broadcast_to(Tensor([2, 1, 68, 0],"bool"), list[2,8,68,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 68, 0],"bool"), list[2,8,68,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 68, 121].  Tensor sizes: [2, 1, 68, 0]
2025-03-05 15:22:58.687599 test begin: paddle.broadcast_to(Tensor([2, 1, 68, 0],"bool"), list[2,8,68,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 68, 0],"bool"), list[2,8,68,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 68, 129].  Tensor sizes: [2, 1, 68, 0]
2025-03-05 15:22:58.688124 test begin: paddle.broadcast_to(Tensor([2, 1, 68, 0],"bool"), list[2,8,68,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 68, 0],"bool"), list[2,8,68,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 68, 161].  Tensor sizes: [2, 1, 68, 0]
2025-03-05 15:22:58.688649 test begin: paddle.broadcast_to(Tensor([2, 1, 68, 0],"bool"), list[2,8,68,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 68, 0],"bool"), list[2,8,68,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 68, 181].  Tensor sizes: [2, 1, 68, 0]
2025-03-05 15:22:58.689179 test begin: paddle.broadcast_to(Tensor([2, 1, 68, 0],"bool"), list[2,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 68, 0],"bool"), list[2,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 68, 68].  Tensor sizes: [2, 1, 68, 0]
2025-03-05 15:22:58.689707 test begin: paddle.broadcast_to(Tensor([2, 1, 68, 0],"bool"), list[2,8,68,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 68, 0],"bool"), list[2,8,68,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 68, 81].  Tensor sizes: [2, 1, 68, 0]
2025-03-05 15:22:58.690216 test begin: paddle.broadcast_to(Tensor([2, 1, 68, 0],"bool"), list[2,8,68,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 68, 0],"bool"), list[2,8,68,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 68, 85].  Tensor sizes: [2, 1, 68, 0]
2025-03-05 15:22:58.690774 test begin: paddle.broadcast_to(Tensor([2, 1, 69, 0],"bool"), list[2,8,69,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 69, 0],"bool"), list[2,8,69,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 69, 121].  Tensor sizes: [2, 1, 69, 0]
2025-03-05 15:22:58.691294 test begin: paddle.broadcast_to(Tensor([2, 1, 69, 0],"bool"), list[2,8,69,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 69, 0],"bool"), list[2,8,69,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 69, 129].  Tensor sizes: [2, 1, 69, 0]
2025-03-05 15:22:58.691823 test begin: paddle.broadcast_to(Tensor([2, 1, 69, 0],"bool"), list[2,8,69,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 69, 0],"bool"), list[2,8,69,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 69, 161].  Tensor sizes: [2, 1, 69, 0]
2025-03-05 15:22:58.692344 test begin: paddle.broadcast_to(Tensor([2, 1, 69, 0],"bool"), list[2,8,69,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 69, 0],"bool"), list[2,8,69,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 69, 181].  Tensor sizes: [2, 1, 69, 0]
2025-03-05 15:22:58.692874 test begin: paddle.broadcast_to(Tensor([2, 1, 69, 0],"bool"), list[2,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 69, 0],"bool"), list[2,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 69, 69].  Tensor sizes: [2, 1, 69, 0]
2025-03-05 15:22:58.694027 test begin: paddle.broadcast_to(Tensor([2, 1, 69, 0],"bool"), list[2,8,69,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 69, 0],"bool"), list[2,8,69,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 69, 81].  Tensor sizes: [2, 1, 69, 0]
2025-03-05 15:22:58.694778 test begin: paddle.broadcast_to(Tensor([2, 1, 69, 0],"bool"), list[2,8,69,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 69, 0],"bool"), list[2,8,69,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 69, 85].  Tensor sizes: [2, 1, 69, 0]
2025-03-05 15:22:58.695361 test begin: paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 7, 121].  Tensor sizes: [2, 1, 7, 0]
2025-03-05 15:22:58.695916 test begin: paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 7, 129].  Tensor sizes: [2, 1, 7, 0]
2025-03-05 15:22:58.696449 test begin: paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 7, 161].  Tensor sizes: [2, 1, 7, 0]
2025-03-05 15:22:58.696988 test begin: paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 7, 17].  Tensor sizes: [2, 1, 7, 0]
2025-03-05 15:22:58.697517 test begin: paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 7, 181].  Tensor sizes: [2, 1, 7, 0]
2025-03-05 15:22:58.698164 test begin: paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 7, 41].  Tensor sizes: [2, 1, 7, 0]
2025-03-05 15:22:58.698784 test begin: paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 7, 57].  Tensor sizes: [2, 1, 7, 0]
2025-03-05 15:22:58.699528 test begin: paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 7, 7].  Tensor sizes: [2, 1, 7, 0]
2025-03-05 15:22:58.700185 test begin: paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 7, 81].  Tensor sizes: [2, 1, 7, 0]
2025-03-05 15:22:58.700908 test begin: paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 7, 85].  Tensor sizes: [2, 1, 7, 0]
2025-03-05 15:22:58.701484 test begin: paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 7, 0],"bool"), list[2,8,7,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 7, 9].  Tensor sizes: [2, 1, 7, 0]
2025-03-05 15:22:58.702030 test begin: paddle.broadcast_to(Tensor([2, 1, 70, 0],"bool"), list[2,8,70,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 70, 0],"bool"), list[2,8,70,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 70, 121].  Tensor sizes: [2, 1, 70, 0]
2025-03-05 15:22:58.702566 test begin: paddle.broadcast_to(Tensor([2, 1, 70, 0],"bool"), list[2,8,70,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 70, 0],"bool"), list[2,8,70,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 70, 129].  Tensor sizes: [2, 1, 70, 0]
2025-03-05 15:22:58.703096 test begin: paddle.broadcast_to(Tensor([2, 1, 70, 0],"bool"), list[2,8,70,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 70, 0],"bool"), list[2,8,70,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 70, 161].  Tensor sizes: [2, 1, 70, 0]
2025-03-05 15:22:58.703627 test begin: paddle.broadcast_to(Tensor([2, 1, 70, 0],"bool"), list[2,8,70,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 70, 0],"bool"), list[2,8,70,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 70, 181].  Tensor sizes: [2, 1, 70, 0]
2025-03-05 15:22:58.704140 test begin: paddle.broadcast_to(Tensor([2, 1, 70, 0],"bool"), list[2,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 70, 0],"bool"), list[2,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 70, 70].  Tensor sizes: [2, 1, 70, 0]
2025-03-05 15:22:58.704666 test begin: paddle.broadcast_to(Tensor([2, 1, 70, 0],"bool"), list[2,8,70,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 70, 0],"bool"), list[2,8,70,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 70, 81].  Tensor sizes: [2, 1, 70, 0]
2025-03-05 15:22:58.705192 test begin: paddle.broadcast_to(Tensor([2, 1, 70, 0],"bool"), list[2,8,70,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 70, 0],"bool"), list[2,8,70,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 70, 85].  Tensor sizes: [2, 1, 70, 0]
2025-03-05 15:22:58.705726 test begin: paddle.broadcast_to(Tensor([2, 1, 71, 0],"bool"), list[2,8,71,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 71, 0],"bool"), list[2,8,71,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 71, 121].  Tensor sizes: [2, 1, 71, 0]
2025-03-05 15:22:58.706258 test begin: paddle.broadcast_to(Tensor([2, 1, 71, 0],"bool"), list[2,8,71,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 71, 0],"bool"), list[2,8,71,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 71, 129].  Tensor sizes: [2, 1, 71, 0]
2025-03-05 15:22:58.706793 test begin: paddle.broadcast_to(Tensor([2, 1, 71, 0],"bool"), list[2,8,71,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 71, 0],"bool"), list[2,8,71,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 71, 161].  Tensor sizes: [2, 1, 71, 0]
2025-03-05 15:22:58.707370 test begin: paddle.broadcast_to(Tensor([2, 1, 71, 0],"bool"), list[2,8,71,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 71, 0],"bool"), list[2,8,71,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 71, 181].  Tensor sizes: [2, 1, 71, 0]
2025-03-05 15:22:58.707934 test begin: paddle.broadcast_to(Tensor([2, 1, 71, 0],"bool"), list[2,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 71, 0],"bool"), list[2,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 71, 71].  Tensor sizes: [2, 1, 71, 0]
2025-03-05 15:22:58.708453 test begin: paddle.broadcast_to(Tensor([2, 1, 71, 0],"bool"), list[2,8,71,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 71, 0],"bool"), list[2,8,71,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 71, 81].  Tensor sizes: [2, 1, 71, 0]
2025-03-05 15:22:58.708983 test begin: paddle.broadcast_to(Tensor([2, 1, 71, 0],"bool"), list[2,8,71,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 71, 0],"bool"), list[2,8,71,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 71, 85].  Tensor sizes: [2, 1, 71, 0]
2025-03-05 15:22:58.709502 test begin: paddle.broadcast_to(Tensor([2, 1, 72, 0],"bool"), list[2,8,72,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 72, 0],"bool"), list[2,8,72,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 72, 121].  Tensor sizes: [2, 1, 72, 0]
2025-03-05 15:22:58.710044 test begin: paddle.broadcast_to(Tensor([2, 1, 72, 0],"bool"), list[2,8,72,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 72, 0],"bool"), list[2,8,72,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 72, 129].  Tensor sizes: [2, 1, 72, 0]
2025-03-05 15:22:58.710571 test begin: paddle.broadcast_to(Tensor([2, 1, 72, 0],"bool"), list[2,8,72,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 72, 0],"bool"), list[2,8,72,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 72, 161].  Tensor sizes: [2, 1, 72, 0]
2025-03-05 15:22:58.711114 test begin: paddle.broadcast_to(Tensor([2, 1, 72, 0],"bool"), list[2,8,72,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 72, 0],"bool"), list[2,8,72,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 72, 181].  Tensor sizes: [2, 1, 72, 0]
2025-03-05 15:22:58.711652 test begin: paddle.broadcast_to(Tensor([2, 1, 72, 0],"bool"), list[2,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 72, 0],"bool"), list[2,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 72, 72].  Tensor sizes: [2, 1, 72, 0]
2025-03-05 15:22:58.712186 test begin: paddle.broadcast_to(Tensor([2, 1, 72, 0],"bool"), list[2,8,72,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 72, 0],"bool"), list[2,8,72,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 72, 81].  Tensor sizes: [2, 1, 72, 0]
2025-03-05 15:22:58.712709 test begin: paddle.broadcast_to(Tensor([2, 1, 72, 0],"bool"), list[2,8,72,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 72, 0],"bool"), list[2,8,72,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 72, 85].  Tensor sizes: [2, 1, 72, 0]
2025-03-05 15:22:58.713239 test begin: paddle.broadcast_to(Tensor([2, 1, 73, 0],"bool"), list[2,8,73,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 73, 0],"bool"), list[2,8,73,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 73, 121].  Tensor sizes: [2, 1, 73, 0]
2025-03-05 15:22:58.713774 test begin: paddle.broadcast_to(Tensor([2, 1, 73, 0],"bool"), list[2,8,73,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 73, 0],"bool"), list[2,8,73,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 73, 129].  Tensor sizes: [2, 1, 73, 0]
2025-03-05 15:22:58.714330 test begin: paddle.broadcast_to(Tensor([2, 1, 73, 0],"bool"), list[2,8,73,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 73, 0],"bool"), list[2,8,73,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 73, 161].  Tensor sizes: [2, 1, 73, 0]
2025-03-05 15:22:58.714874 test begin: paddle.broadcast_to(Tensor([2, 1, 73, 0],"bool"), list[2,8,73,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 73, 0],"bool"), list[2,8,73,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 73, 181].  Tensor sizes: [2, 1, 73, 0]
2025-03-05 15:22:58.715393 test begin: paddle.broadcast_to(Tensor([2, 1, 73, 0],"bool"), list[2,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 73, 0],"bool"), list[2,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 73, 73].  Tensor sizes: [2, 1, 73, 0]
2025-03-05 15:22:58.715997 test begin: paddle.broadcast_to(Tensor([2, 1, 73, 0],"bool"), list[2,8,73,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 73, 0],"bool"), list[2,8,73,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 73, 81].  Tensor sizes: [2, 1, 73, 0]
2025-03-05 15:22:58.717004 test begin: paddle.broadcast_to(Tensor([2, 1, 73, 0],"bool"), list[2,8,73,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 73, 0],"bool"), list[2,8,73,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 73, 85].  Tensor sizes: [2, 1, 73, 0]
2025-03-05 15:22:58.717660 test begin: paddle.broadcast_to(Tensor([2, 1, 74, 0],"bool"), list[2,8,74,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 74, 0],"bool"), list[2,8,74,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 74, 121].  Tensor sizes: [2, 1, 74, 0]
2025-03-05 15:22:58.718275 test begin: paddle.broadcast_to(Tensor([2, 1, 74, 0],"bool"), list[2,8,74,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 74, 0],"bool"), list[2,8,74,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 74, 129].  Tensor sizes: [2, 1, 74, 0]
2025-03-05 15:22:58.718895 test begin: paddle.broadcast_to(Tensor([2, 1, 74, 0],"bool"), list[2,8,74,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 74, 0],"bool"), list[2,8,74,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 74, 161].  Tensor sizes: [2, 1, 74, 0]
2025-03-05 15:22:58.719508 test begin: paddle.broadcast_to(Tensor([2, 1, 74, 0],"bool"), list[2,8,74,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 74, 0],"bool"), list[2,8,74,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 74, 181].  Tensor sizes: [2, 1, 74, 0]
2025-03-05 15:22:58.720126 test begin: paddle.broadcast_to(Tensor([2, 1, 74, 0],"bool"), list[2,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 74, 0],"bool"), list[2,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 74, 74].  Tensor sizes: [2, 1, 74, 0]
2025-03-05 15:22:58.720748 test begin: paddle.broadcast_to(Tensor([2, 1, 74, 0],"bool"), list[2,8,74,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 74, 0],"bool"), list[2,8,74,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 74, 81].  Tensor sizes: [2, 1, 74, 0]
2025-03-05 15:22:58.721355 test begin: paddle.broadcast_to(Tensor([2, 1, 74, 0],"bool"), list[2,8,74,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 74, 0],"bool"), list[2,8,74,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 74, 85].  Tensor sizes: [2, 1, 74, 0]
2025-03-05 15:22:58.721973 test begin: paddle.broadcast_to(Tensor([2, 1, 75, 0],"bool"), list[2,8,75,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 75, 0],"bool"), list[2,8,75,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 75, 121].  Tensor sizes: [2, 1, 75, 0]
2025-03-05 15:22:58.722575 test begin: paddle.broadcast_to(Tensor([2, 1, 75, 0],"bool"), list[2,8,75,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 75, 0],"bool"), list[2,8,75,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 75, 129].  Tensor sizes: [2, 1, 75, 0]
2025-03-05 15:22:58.723190 test begin: paddle.broadcast_to(Tensor([2, 1, 75, 0],"bool"), list[2,8,75,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 75, 0],"bool"), list[2,8,75,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 75, 161].  Tensor sizes: [2, 1, 75, 0]
2025-03-05 15:22:58.723836 test begin: paddle.broadcast_to(Tensor([2, 1, 75, 0],"bool"), list[2,8,75,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 75, 0],"bool"), list[2,8,75,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 75, 181].  Tensor sizes: [2, 1, 75, 0]
2025-03-05 15:22:58.724460 test begin: paddle.broadcast_to(Tensor([2, 1, 75, 0],"bool"), list[2,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 75, 0],"bool"), list[2,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 75, 75].  Tensor sizes: [2, 1, 75, 0]
2025-03-05 15:22:58.725086 test begin: paddle.broadcast_to(Tensor([2, 1, 75, 0],"bool"), list[2,8,75,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 75, 0],"bool"), list[2,8,75,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 75, 81].  Tensor sizes: [2, 1, 75, 0]
2025-03-05 15:22:58.725695 test begin: paddle.broadcast_to(Tensor([2, 1, 75, 0],"bool"), list[2,8,75,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 75, 0],"bool"), list[2,8,75,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 75, 85].  Tensor sizes: [2, 1, 75, 0]
2025-03-05 15:22:58.726288 test begin: paddle.broadcast_to(Tensor([2, 1, 76, 0],"bool"), list[2,8,76,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 76, 0],"bool"), list[2,8,76,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 76, 121].  Tensor sizes: [2, 1, 76, 0]
2025-03-05 15:22:58.726885 test begin: paddle.broadcast_to(Tensor([2, 1, 76, 0],"bool"), list[2,8,76,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 76, 0],"bool"), list[2,8,76,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 76, 129].  Tensor sizes: [2, 1, 76, 0]
2025-03-05 15:22:58.727483 test begin: paddle.broadcast_to(Tensor([2, 1, 76, 0],"bool"), list[2,8,76,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 76, 0],"bool"), list[2,8,76,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 76, 161].  Tensor sizes: [2, 1, 76, 0]
2025-03-05 15:22:58.728435 test begin: paddle.broadcast_to(Tensor([2, 1, 76, 0],"bool"), list[2,8,76,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 76, 0],"bool"), list[2,8,76,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 76, 181].  Tensor sizes: [2, 1, 76, 0]
2025-03-05 15:22:58.729071 test begin: paddle.broadcast_to(Tensor([2, 1, 76, 0],"bool"), list[2,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 76, 0],"bool"), list[2,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 76, 76].  Tensor sizes: [2, 1, 76, 0]
2025-03-05 15:22:58.729658 test begin: paddle.broadcast_to(Tensor([2, 1, 76, 0],"bool"), list[2,8,76,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 76, 0],"bool"), list[2,8,76,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 76, 81].  Tensor sizes: [2, 1, 76, 0]
2025-03-05 15:22:58.730196 test begin: paddle.broadcast_to(Tensor([2, 1, 76, 0],"bool"), list[2,8,76,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 76, 0],"bool"), list[2,8,76,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 76, 85].  Tensor sizes: [2, 1, 76, 0]
2025-03-05 15:22:58.730799 test begin: paddle.broadcast_to(Tensor([2, 1, 77, 0],"bool"), list[2,8,77,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 77, 0],"bool"), list[2,8,77,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 77, 121].  Tensor sizes: [2, 1, 77, 0]
2025-03-05 15:22:58.731553 test begin: paddle.broadcast_to(Tensor([2, 1, 77, 0],"bool"), list[2,8,77,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 77, 0],"bool"), list[2,8,77,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 77, 129].  Tensor sizes: [2, 1, 77, 0]
2025-03-05 15:22:58.732212 test begin: paddle.broadcast_to(Tensor([2, 1, 77, 0],"bool"), list[2,8,77,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 77, 0],"bool"), list[2,8,77,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 77, 161].  Tensor sizes: [2, 1, 77, 0]
2025-03-05 15:22:58.732836 test begin: paddle.broadcast_to(Tensor([2, 1, 77, 0],"bool"), list[2,8,77,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 77, 0],"bool"), list[2,8,77,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 77, 181].  Tensor sizes: [2, 1, 77, 0]
2025-03-05 15:22:58.733450 test begin: paddle.broadcast_to(Tensor([2, 1, 77, 0],"bool"), list[2,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 77, 0],"bool"), list[2,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 77, 77].  Tensor sizes: [2, 1, 77, 0]
2025-03-05 15:22:58.734150 test begin: paddle.broadcast_to(Tensor([2, 1, 77, 0],"bool"), list[2,8,77,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 77, 0],"bool"), list[2,8,77,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 77, 81].  Tensor sizes: [2, 1, 77, 0]
2025-03-05 15:22:58.734785 test begin: paddle.broadcast_to(Tensor([2, 1, 77, 0],"bool"), list[2,8,77,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 77, 0],"bool"), list[2,8,77,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 77, 85].  Tensor sizes: [2, 1, 77, 0]
2025-03-05 15:22:58.735399 test begin: paddle.broadcast_to(Tensor([2, 1, 78, 0],"bool"), list[2,8,78,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 78, 0],"bool"), list[2,8,78,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 78, 121].  Tensor sizes: [2, 1, 78, 0]
2025-03-05 15:22:58.736107 test begin: paddle.broadcast_to(Tensor([2, 1, 78, 0],"bool"), list[2,8,78,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 78, 0],"bool"), list[2,8,78,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 78, 129].  Tensor sizes: [2, 1, 78, 0]
2025-03-05 15:22:58.736692 test begin: paddle.broadcast_to(Tensor([2, 1, 78, 0],"bool"), list[2,8,78,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 78, 0],"bool"), list[2,8,78,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 78, 161].  Tensor sizes: [2, 1, 78, 0]
2025-03-05 15:22:58.737224 test begin: paddle.broadcast_to(Tensor([2, 1, 78, 0],"bool"), list[2,8,78,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 78, 0],"bool"), list[2,8,78,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 78, 181].  Tensor sizes: [2, 1, 78, 0]
2025-03-05 15:22:58.737761 test begin: paddle.broadcast_to(Tensor([2, 1, 78, 0],"bool"), list[2,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 78, 0],"bool"), list[2,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 78, 78].  Tensor sizes: [2, 1, 78, 0]
2025-03-05 15:22:58.738331 test begin: paddle.broadcast_to(Tensor([2, 1, 78, 0],"bool"), list[2,8,78,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 78, 0],"bool"), list[2,8,78,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 78, 81].  Tensor sizes: [2, 1, 78, 0]
2025-03-05 15:22:58.738864 test begin: paddle.broadcast_to(Tensor([2, 1, 78, 0],"bool"), list[2,8,78,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 78, 0],"bool"), list[2,8,78,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 78, 85].  Tensor sizes: [2, 1, 78, 0]
2025-03-05 15:22:58.739462 test begin: paddle.broadcast_to(Tensor([2, 1, 79, 0],"bool"), list[2,8,79,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 79, 0],"bool"), list[2,8,79,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 79, 121].  Tensor sizes: [2, 1, 79, 0]
2025-03-05 15:22:58.740005 test begin: paddle.broadcast_to(Tensor([2, 1, 79, 0],"bool"), list[2,8,79,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 79, 0],"bool"), list[2,8,79,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 79, 129].  Tensor sizes: [2, 1, 79, 0]
2025-03-05 15:22:58.740524 test begin: paddle.broadcast_to(Tensor([2, 1, 79, 0],"bool"), list[2,8,79,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 79, 0],"bool"), list[2,8,79,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 79, 161].  Tensor sizes: [2, 1, 79, 0]
2025-03-05 15:22:58.741055 test begin: paddle.broadcast_to(Tensor([2, 1, 79, 0],"bool"), list[2,8,79,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 79, 0],"bool"), list[2,8,79,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 79, 181].  Tensor sizes: [2, 1, 79, 0]
2025-03-05 15:22:58.741580 test begin: paddle.broadcast_to(Tensor([2, 1, 79, 0],"bool"), list[2,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 79, 0],"bool"), list[2,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 79, 79].  Tensor sizes: [2, 1, 79, 0]
2025-03-05 15:22:58.742121 test begin: paddle.broadcast_to(Tensor([2, 1, 79, 0],"bool"), list[2,8,79,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 79, 0],"bool"), list[2,8,79,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 79, 81].  Tensor sizes: [2, 1, 79, 0]
2025-03-05 15:22:58.742650 test begin: paddle.broadcast_to(Tensor([2, 1, 79, 0],"bool"), list[2,8,79,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 79, 0],"bool"), list[2,8,79,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 79, 85].  Tensor sizes: [2, 1, 79, 0]
2025-03-05 15:22:58.743176 test begin: paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 8, 121].  Tensor sizes: [2, 1, 8, 0]
2025-03-05 15:22:58.743701 test begin: paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 8, 129].  Tensor sizes: [2, 1, 8, 0]
2025-03-05 15:22:58.744209 test begin: paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 8, 161].  Tensor sizes: [2, 1, 8, 0]
2025-03-05 15:22:58.744722 test begin: paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 8, 17].  Tensor sizes: [2, 1, 8, 0]
2025-03-05 15:22:58.745254 test begin: paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 8, 181].  Tensor sizes: [2, 1, 8, 0]
2025-03-05 15:22:58.745775 test begin: paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 8, 41].  Tensor sizes: [2, 1, 8, 0]
2025-03-05 15:22:58.746307 test begin: paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 8, 57].  Tensor sizes: [2, 1, 8, 0]
2025-03-05 15:22:58.746828 test begin: paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 8, 8].  Tensor sizes: [2, 1, 8, 0]
2025-03-05 15:22:58.747348 test begin: paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 8, 81].  Tensor sizes: [2, 1, 8, 0]
2025-03-05 15:22:58.747933 test begin: paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 8, 85].  Tensor sizes: [2, 1, 8, 0]
2025-03-05 15:22:58.748445 test begin: paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 8, 0],"bool"), list[2,8,8,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 8, 9].  Tensor sizes: [2, 1, 8, 0]
2025-03-05 15:22:58.748963 test begin: paddle.broadcast_to(Tensor([2, 1, 80, 0],"bool"), list[2,8,80,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 80, 0],"bool"), list[2,8,80,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 80, 121].  Tensor sizes: [2, 1, 80, 0]
2025-03-05 15:22:58.749484 test begin: paddle.broadcast_to(Tensor([2, 1, 80, 0],"bool"), list[2,8,80,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 80, 0],"bool"), list[2,8,80,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 80, 129].  Tensor sizes: [2, 1, 80, 0]
2025-03-05 15:22:58.750057 test begin: paddle.broadcast_to(Tensor([2, 1, 80, 0],"bool"), list[2,8,80,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 80, 0],"bool"), list[2,8,80,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 80, 161].  Tensor sizes: [2, 1, 80, 0]
2025-03-05 15:22:58.750578 test begin: paddle.broadcast_to(Tensor([2, 1, 80, 0],"bool"), list[2,8,80,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 80, 0],"bool"), list[2,8,80,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 80, 181].  Tensor sizes: [2, 1, 80, 0]
2025-03-05 15:22:58.751119 test begin: paddle.broadcast_to(Tensor([2, 1, 80, 0],"bool"), list[2,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 80, 0],"bool"), list[2,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 80, 80].  Tensor sizes: [2, 1, 80, 0]
2025-03-05 15:22:58.751842 test begin: paddle.broadcast_to(Tensor([2, 1, 80, 0],"bool"), list[2,8,80,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 80, 0],"bool"), list[2,8,80,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 80, 81].  Tensor sizes: [2, 1, 80, 0]
2025-03-05 15:22:58.753098 test begin: paddle.broadcast_to(Tensor([2, 1, 80, 0],"bool"), list[2,8,80,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 80, 0],"bool"), list[2,8,80,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 80, 85].  Tensor sizes: [2, 1, 80, 0]
2025-03-05 15:22:58.753750 test begin: paddle.broadcast_to(Tensor([2, 1, 81, 0],"bool"), list[2,8,81,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 81, 0],"bool"), list[2,8,81,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 81, 121].  Tensor sizes: [2, 1, 81, 0]
2025-03-05 15:22:58.754357 test begin: paddle.broadcast_to(Tensor([2, 1, 81, 0],"bool"), list[2,8,81,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 81, 0],"bool"), list[2,8,81,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 81, 129].  Tensor sizes: [2, 1, 81, 0]
2025-03-05 15:22:58.754946 test begin: paddle.broadcast_to(Tensor([2, 1, 81, 0],"bool"), list[2,8,81,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 81, 0],"bool"), list[2,8,81,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 81, 161].  Tensor sizes: [2, 1, 81, 0]
2025-03-05 15:22:58.755494 test begin: paddle.broadcast_to(Tensor([2, 1, 81, 0],"bool"), list[2,8,81,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 81, 0],"bool"), list[2,8,81,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 81, 181].  Tensor sizes: [2, 1, 81, 0]
2025-03-05 15:22:58.756621 test begin: paddle.broadcast_to(Tensor([2, 1, 81, 0],"bool"), list[2,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 81, 0],"bool"), list[2,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 81, 81].  Tensor sizes: [2, 1, 81, 0]
2025-03-05 15:22:58.757688 test begin: paddle.broadcast_to(Tensor([2, 1, 81, 0],"bool"), list[2,8,81,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 81, 0],"bool"), list[2,8,81,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 81, 85].  Tensor sizes: [2, 1, 81, 0]
2025-03-05 15:22:58.758628 test begin: paddle.broadcast_to(Tensor([2, 1, 82, 0],"bool"), list[2,8,82,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 82, 0],"bool"), list[2,8,82,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 82, 121].  Tensor sizes: [2, 1, 82, 0]
2025-03-05 15:22:58.759290 test begin: paddle.broadcast_to(Tensor([2, 1, 82, 0],"bool"), list[2,8,82,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 82, 0],"bool"), list[2,8,82,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 82, 129].  Tensor sizes: [2, 1, 82, 0]
2025-03-05 15:22:58.759936 test begin: paddle.broadcast_to(Tensor([2, 1, 82, 0],"bool"), list[2,8,82,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 82, 0],"bool"), list[2,8,82,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 82, 161].  Tensor sizes: [2, 1, 82, 0]
2025-03-05 15:22:58.760566 test begin: paddle.broadcast_to(Tensor([2, 1, 82, 0],"bool"), list[2,8,82,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 82, 0],"bool"), list[2,8,82,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 82, 181].  Tensor sizes: [2, 1, 82, 0]
2025-03-05 15:22:58.761205 test begin: paddle.broadcast_to(Tensor([2, 1, 82, 0],"bool"), list[2,8,82,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 82, 0],"bool"), list[2,8,82,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 82, 81].  Tensor sizes: [2, 1, 82, 0]
2025-03-05 15:22:58.761885 test begin: paddle.broadcast_to(Tensor([2, 1, 82, 0],"bool"), list[2,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 82, 0],"bool"), list[2,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 82, 82].  Tensor sizes: [2, 1, 82, 0]
2025-03-05 15:22:58.762497 test begin: paddle.broadcast_to(Tensor([2, 1, 82, 0],"bool"), list[2,8,82,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 82, 0],"bool"), list[2,8,82,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 82, 85].  Tensor sizes: [2, 1, 82, 0]
2025-03-05 15:22:58.763138 test begin: paddle.broadcast_to(Tensor([2, 1, 83, 0],"bool"), list[2,8,83,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 83, 0],"bool"), list[2,8,83,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 83, 121].  Tensor sizes: [2, 1, 83, 0]
2025-03-05 15:22:58.763756 test begin: paddle.broadcast_to(Tensor([2, 1, 83, 0],"bool"), list[2,8,83,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 83, 0],"bool"), list[2,8,83,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 83, 129].  Tensor sizes: [2, 1, 83, 0]
2025-03-05 15:22:58.764374 test begin: paddle.broadcast_to(Tensor([2, 1, 83, 0],"bool"), list[2,8,83,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 83, 0],"bool"), list[2,8,83,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 83, 161].  Tensor sizes: [2, 1, 83, 0]
2025-03-05 15:22:58.765005 test begin: paddle.broadcast_to(Tensor([2, 1, 83, 0],"bool"), list[2,8,83,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 83, 0],"bool"), list[2,8,83,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 83, 181].  Tensor sizes: [2, 1, 83, 0]
2025-03-05 15:22:58.765646 test begin: paddle.broadcast_to(Tensor([2, 1, 83, 0],"bool"), list[2,8,83,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 83, 0],"bool"), list[2,8,83,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 83, 81].  Tensor sizes: [2, 1, 83, 0]
2025-03-05 15:22:58.766262 test begin: paddle.broadcast_to(Tensor([2, 1, 83, 0],"bool"), list[2,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 83, 0],"bool"), list[2,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 83, 83].  Tensor sizes: [2, 1, 83, 0]
2025-03-05 15:22:58.766945 test begin: paddle.broadcast_to(Tensor([2, 1, 83, 0],"bool"), list[2,8,83,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 83, 0],"bool"), list[2,8,83,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 83, 85].  Tensor sizes: [2, 1, 83, 0]
2025-03-05 15:22:58.767569 test begin: paddle.broadcast_to(Tensor([2, 1, 84, 0],"bool"), list[2,8,84,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 84, 0],"bool"), list[2,8,84,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 84, 121].  Tensor sizes: [2, 1, 84, 0]
2025-03-05 15:22:58.768242 test begin: paddle.broadcast_to(Tensor([2, 1, 84, 0],"bool"), list[2,8,84,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 84, 0],"bool"), list[2,8,84,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 84, 129].  Tensor sizes: [2, 1, 84, 0]
2025-03-05 15:22:58.768871 test begin: paddle.broadcast_to(Tensor([2, 1, 84, 0],"bool"), list[2,8,84,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 84, 0],"bool"), list[2,8,84,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 84, 161].  Tensor sizes: [2, 1, 84, 0]
2025-03-05 15:22:58.769483 test begin: paddle.broadcast_to(Tensor([2, 1, 84, 0],"bool"), list[2,8,84,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 84, 0],"bool"), list[2,8,84,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 84, 181].  Tensor sizes: [2, 1, 84, 0]
2025-03-05 15:22:58.770360 test begin: paddle.broadcast_to(Tensor([2, 1, 84, 0],"bool"), list[2,8,84,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 84, 0],"bool"), list[2,8,84,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 84, 81].  Tensor sizes: [2, 1, 84, 0]
2025-03-05 15:22:58.770948 test begin: paddle.broadcast_to(Tensor([2, 1, 84, 0],"bool"), list[2,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 84, 0],"bool"), list[2,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 84, 84].  Tensor sizes: [2, 1, 84, 0]
2025-03-05 15:22:58.771487 test begin: paddle.broadcast_to(Tensor([2, 1, 84, 0],"bool"), list[2,8,84,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 84, 0],"bool"), list[2,8,84,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 84, 85].  Tensor sizes: [2, 1, 84, 0]
2025-03-05 15:22:58.772104 test begin: paddle.broadcast_to(Tensor([2, 1, 85, 0],"bool"), list[2,8,85,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 85, 0],"bool"), list[2,8,85,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 85, 121].  Tensor sizes: [2, 1, 85, 0]
2025-03-05 15:22:58.772657 test begin: paddle.broadcast_to(Tensor([2, 1, 85, 0],"bool"), list[2,8,85,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 85, 0],"bool"), list[2,8,85,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 85, 129].  Tensor sizes: [2, 1, 85, 0]
2025-03-05 15:22:58.773215 test begin: paddle.broadcast_to(Tensor([2, 1, 85, 0],"bool"), list[2,8,85,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 85, 0],"bool"), list[2,8,85,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 85, 161].  Tensor sizes: [2, 1, 85, 0]
2025-03-05 15:22:58.773803 test begin: paddle.broadcast_to(Tensor([2, 1, 85, 0],"bool"), list[2,8,85,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 85, 0],"bool"), list[2,8,85,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 85, 181].  Tensor sizes: [2, 1, 85, 0]
2025-03-05 15:22:58.774348 test begin: paddle.broadcast_to(Tensor([2, 1, 85, 0],"bool"), list[2,8,85,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 85, 0],"bool"), list[2,8,85,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 85, 81].  Tensor sizes: [2, 1, 85, 0]
2025-03-05 15:22:58.774898 test begin: paddle.broadcast_to(Tensor([2, 1, 85, 0],"bool"), list[2,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 85, 0],"bool"), list[2,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 85, 85].  Tensor sizes: [2, 1, 85, 0]
2025-03-05 15:22:58.775435 test begin: paddle.broadcast_to(Tensor([2, 1, 86, 0],"bool"), list[2,8,86,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 86, 0],"bool"), list[2,8,86,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 86, 121].  Tensor sizes: [2, 1, 86, 0]
2025-03-05 15:22:58.776037 test begin: paddle.broadcast_to(Tensor([2, 1, 86, 0],"bool"), list[2,8,86,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 86, 0],"bool"), list[2,8,86,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 86, 129].  Tensor sizes: [2, 1, 86, 0]
2025-03-05 15:22:58.776722 test begin: paddle.broadcast_to(Tensor([2, 1, 86, 0],"bool"), list[2,8,86,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 86, 0],"bool"), list[2,8,86,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 86, 161].  Tensor sizes: [2, 1, 86, 0]
2025-03-05 15:22:58.777401 test begin: paddle.broadcast_to(Tensor([2, 1, 86, 0],"bool"), list[2,8,86,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 86, 0],"bool"), list[2,8,86,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 86, 181].  Tensor sizes: [2, 1, 86, 0]
2025-03-05 15:22:58.778037 test begin: paddle.broadcast_to(Tensor([2, 1, 86, 0],"bool"), list[2,8,86,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 86, 0],"bool"), list[2,8,86,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 86, 81].  Tensor sizes: [2, 1, 86, 0]
2025-03-05 15:22:58.778742 test begin: paddle.broadcast_to(Tensor([2, 1, 86, 0],"bool"), list[2,8,86,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 86, 0],"bool"), list[2,8,86,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 86, 85].  Tensor sizes: [2, 1, 86, 0]
2025-03-05 15:22:58.779527 test begin: paddle.broadcast_to(Tensor([2, 1, 86, 0],"bool"), list[2,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 86, 0],"bool"), list[2,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 86, 86].  Tensor sizes: [2, 1, 86, 0]
2025-03-05 15:22:58.780865 test begin: paddle.broadcast_to(Tensor([2, 1, 87, 0],"bool"), list[2,8,87,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 87, 0],"bool"), list[2,8,87,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 87, 121].  Tensor sizes: [2, 1, 87, 0]
2025-03-05 15:22:58.783221 test begin: paddle.broadcast_to(Tensor([2, 1, 87, 0],"bool"), list[2,8,87,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 87, 0],"bool"), list[2,8,87,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 87, 129].  Tensor sizes: [2, 1, 87, 0]
2025-03-05 15:22:58.784315 test begin: paddle.broadcast_to(Tensor([2, 1, 87, 0],"bool"), list[2,8,87,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 87, 0],"bool"), list[2,8,87,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 87, 161].  Tensor sizes: [2, 1, 87, 0]
2025-03-05 15:22:58.797512 test begin: paddle.broadcast_to(Tensor([2, 1, 87, 0],"bool"), list[2,8,87,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 87, 0],"bool"), list[2,8,87,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 87, 181].  Tensor sizes: [2, 1, 87, 0]
2025-03-05 15:22:58.798778 test begin: paddle.broadcast_to(Tensor([2, 1, 87, 0],"bool"), list[2,8,87,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 87, 0],"bool"), list[2,8,87,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 87, 81].  Tensor sizes: [2, 1, 87, 0]
2025-03-05 15:22:58.799630 test begin: paddle.broadcast_to(Tensor([2, 1, 87, 0],"bool"), list[2,8,87,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 87, 0],"bool"), list[2,8,87,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 87, 85].  Tensor sizes: [2, 1, 87, 0]
2025-03-05 15:22:58.800276 test begin: paddle.broadcast_to(Tensor([2, 1, 87, 0],"bool"), list[2,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 87, 0],"bool"), list[2,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 87, 87].  Tensor sizes: [2, 1, 87, 0]
2025-03-05 15:22:58.800915 test begin: paddle.broadcast_to(Tensor([2, 1, 88, 0],"bool"), list[2,8,88,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 88, 0],"bool"), list[2,8,88,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 88, 121].  Tensor sizes: [2, 1, 88, 0]
2025-03-05 15:22:58.801481 test begin: paddle.broadcast_to(Tensor([2, 1, 88, 0],"bool"), list[2,8,88,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 88, 0],"bool"), list[2,8,88,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 88, 129].  Tensor sizes: [2, 1, 88, 0]
2025-03-05 15:22:58.802028 test begin: paddle.broadcast_to(Tensor([2, 1, 88, 0],"bool"), list[2,8,88,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 88, 0],"bool"), list[2,8,88,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 88, 161].  Tensor sizes: [2, 1, 88, 0]
2025-03-05 15:22:58.802551 test begin: paddle.broadcast_to(Tensor([2, 1, 88, 0],"bool"), list[2,8,88,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 88, 0],"bool"), list[2,8,88,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 88, 181].  Tensor sizes: [2, 1, 88, 0]
2025-03-05 15:22:58.803080 test begin: paddle.broadcast_to(Tensor([2, 1, 88, 0],"bool"), list[2,8,88,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 88, 0],"bool"), list[2,8,88,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 88, 81].  Tensor sizes: [2, 1, 88, 0]
2025-03-05 15:22:58.803618 test begin: paddle.broadcast_to(Tensor([2, 1, 88, 0],"bool"), list[2,8,88,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 88, 0],"bool"), list[2,8,88,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 88, 85].  Tensor sizes: [2, 1, 88, 0]
2025-03-05 15:22:58.804196 test begin: paddle.broadcast_to(Tensor([2, 1, 88, 0],"bool"), list[2,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 88, 0],"bool"), list[2,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 88, 88].  Tensor sizes: [2, 1, 88, 0]
2025-03-05 15:22:58.805151 test begin: paddle.broadcast_to(Tensor([2, 1, 89, 0],"bool"), list[2,8,89,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 89, 0],"bool"), list[2,8,89,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 89, 121].  Tensor sizes: [2, 1, 89, 0]
2025-03-05 15:22:58.805845 test begin: paddle.broadcast_to(Tensor([2, 1, 89, 0],"bool"), list[2,8,89,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 89, 0],"bool"), list[2,8,89,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 89, 129].  Tensor sizes: [2, 1, 89, 0]
2025-03-05 15:22:58.806365 test begin: paddle.broadcast_to(Tensor([2, 1, 89, 0],"bool"), list[2,8,89,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 89, 0],"bool"), list[2,8,89,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 89, 161].  Tensor sizes: [2, 1, 89, 0]
2025-03-05 15:22:58.806981 test begin: paddle.broadcast_to(Tensor([2, 1, 89, 0],"bool"), list[2,8,89,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 89, 0],"bool"), list[2,8,89,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 89, 181].  Tensor sizes: [2, 1, 89, 0]
2025-03-05 15:22:58.807496 test begin: paddle.broadcast_to(Tensor([2, 1, 89, 0],"bool"), list[2,8,89,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 89, 0],"bool"), list[2,8,89,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 89, 81].  Tensor sizes: [2, 1, 89, 0]
2025-03-05 15:22:58.808017 test begin: paddle.broadcast_to(Tensor([2, 1, 89, 0],"bool"), list[2,8,89,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 89, 0],"bool"), list[2,8,89,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 89, 85].  Tensor sizes: [2, 1, 89, 0]
2025-03-05 15:22:58.808522 test begin: paddle.broadcast_to(Tensor([2, 1, 89, 0],"bool"), list[2,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 89, 0],"bool"), list[2,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 89, 89].  Tensor sizes: [2, 1, 89, 0]
2025-03-05 15:22:58.809051 test begin: paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 9, 121].  Tensor sizes: [2, 1, 9, 0]
2025-03-05 15:22:58.809602 test begin: paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 9, 129].  Tensor sizes: [2, 1, 9, 0]
2025-03-05 15:22:58.810124 test begin: paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 9, 161].  Tensor sizes: [2, 1, 9, 0]
2025-03-05 15:22:58.811579 test begin: paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,17,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 9, 17].  Tensor sizes: [2, 1, 9, 0]
2025-03-05 15:22:58.812106 test begin: paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 9, 181].  Tensor sizes: [2, 1, 9, 0]
2025-03-05 15:22:58.813384 test begin: paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,41,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 9, 41].  Tensor sizes: [2, 1, 9, 0]
2025-03-05 15:22:58.813918 test begin: paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,57,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 9, 57].  Tensor sizes: [2, 1, 9, 0]
2025-03-05 15:22:58.814424 test begin: paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 9, 81].  Tensor sizes: [2, 1, 9, 0]
2025-03-05 15:22:58.814936 test begin: paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 9, 85].  Tensor sizes: [2, 1, 9, 0]
2025-03-05 15:22:58.815430 test begin: paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 9, 0],"bool"), list[2,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 9, 9].  Tensor sizes: [2, 1, 9, 0]
2025-03-05 15:22:58.815939 test begin: paddle.broadcast_to(Tensor([2, 1, 90, 0],"bool"), list[2,8,90,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 90, 0],"bool"), list[2,8,90,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 90, 121].  Tensor sizes: [2, 1, 90, 0]
2025-03-05 15:22:58.816440 test begin: paddle.broadcast_to(Tensor([2, 1, 90, 0],"bool"), list[2,8,90,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 90, 0],"bool"), list[2,8,90,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 90, 129].  Tensor sizes: [2, 1, 90, 0]
2025-03-05 15:22:58.816961 test begin: paddle.broadcast_to(Tensor([2, 1, 90, 0],"bool"), list[2,8,90,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 90, 0],"bool"), list[2,8,90,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 90, 161].  Tensor sizes: [2, 1, 90, 0]
2025-03-05 15:22:58.817515 test begin: paddle.broadcast_to(Tensor([2, 1, 90, 0],"bool"), list[2,8,90,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 90, 0],"bool"), list[2,8,90,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 90, 181].  Tensor sizes: [2, 1, 90, 0]
2025-03-05 15:22:58.818176 test begin: paddle.broadcast_to(Tensor([2, 1, 90, 0],"bool"), list[2,8,90,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 90, 0],"bool"), list[2,8,90,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 90, 81].  Tensor sizes: [2, 1, 90, 0]
2025-03-05 15:22:58.818733 test begin: paddle.broadcast_to(Tensor([2, 1, 90, 0],"bool"), list[2,8,90,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 90, 0],"bool"), list[2,8,90,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 90, 85].  Tensor sizes: [2, 1, 90, 0]
2025-03-05 15:22:58.819239 test begin: paddle.broadcast_to(Tensor([2, 1, 90, 0],"bool"), list[2,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 90, 0],"bool"), list[2,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 90, 90].  Tensor sizes: [2, 1, 90, 0]
2025-03-05 15:22:58.819767 test begin: paddle.broadcast_to(Tensor([2, 1, 91, 0],"bool"), list[2,8,91,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 91, 0],"bool"), list[2,8,91,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 91, 121].  Tensor sizes: [2, 1, 91, 0]
2025-03-05 15:22:58.820296 test begin: paddle.broadcast_to(Tensor([2, 1, 91, 0],"bool"), list[2,8,91,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 91, 0],"bool"), list[2,8,91,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 91, 129].  Tensor sizes: [2, 1, 91, 0]
2025-03-05 15:22:58.820818 test begin: paddle.broadcast_to(Tensor([2, 1, 91, 0],"bool"), list[2,8,91,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 91, 0],"bool"), list[2,8,91,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 91, 161].  Tensor sizes: [2, 1, 91, 0]
2025-03-05 15:22:58.821329 test begin: paddle.broadcast_to(Tensor([2, 1, 91, 0],"bool"), list[2,8,91,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 91, 0],"bool"), list[2,8,91,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 91, 181].  Tensor sizes: [2, 1, 91, 0]
2025-03-05 15:22:58.821859 test begin: paddle.broadcast_to(Tensor([2, 1, 91, 0],"bool"), list[2,8,91,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 91, 0],"bool"), list[2,8,91,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 91, 81].  Tensor sizes: [2, 1, 91, 0]
2025-03-05 15:22:58.822368 test begin: paddle.broadcast_to(Tensor([2, 1, 91, 0],"bool"), list[2,8,91,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 91, 0],"bool"), list[2,8,91,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 91, 85].  Tensor sizes: [2, 1, 91, 0]
2025-03-05 15:22:58.823332 test begin: paddle.broadcast_to(Tensor([2, 1, 91, 0],"bool"), list[2,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 91, 0],"bool"), list[2,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 91, 91].  Tensor sizes: [2, 1, 91, 0]
2025-03-05 15:22:58.824007 test begin: paddle.broadcast_to(Tensor([2, 1, 92, 0],"bool"), list[2,8,92,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 92, 0],"bool"), list[2,8,92,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 92, 121].  Tensor sizes: [2, 1, 92, 0]
2025-03-05 15:22:58.824552 test begin: paddle.broadcast_to(Tensor([2, 1, 92, 0],"bool"), list[2,8,92,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 92, 0],"bool"), list[2,8,92,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 92, 129].  Tensor sizes: [2, 1, 92, 0]
2025-03-05 15:22:58.825082 test begin: paddle.broadcast_to(Tensor([2, 1, 92, 0],"bool"), list[2,8,92,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 92, 0],"bool"), list[2,8,92,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 92, 161].  Tensor sizes: [2, 1, 92, 0]
2025-03-05 15:22:58.825638 test begin: paddle.broadcast_to(Tensor([2, 1, 92, 0],"bool"), list[2,8,92,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 92, 0],"bool"), list[2,8,92,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 92, 181].  Tensor sizes: [2, 1, 92, 0]
2025-03-05 15:22:58.826161 test begin: paddle.broadcast_to(Tensor([2, 1, 92, 0],"bool"), list[2,8,92,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 92, 0],"bool"), list[2,8,92,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 92, 81].  Tensor sizes: [2, 1, 92, 0]
2025-03-05 15:22:58.826730 test begin: paddle.broadcast_to(Tensor([2, 1, 92, 0],"bool"), list[2,8,92,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 92, 0],"bool"), list[2,8,92,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 92, 85].  Tensor sizes: [2, 1, 92, 0]
2025-03-05 15:22:58.827256 test begin: paddle.broadcast_to(Tensor([2, 1, 92, 0],"bool"), list[2,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 92, 0],"bool"), list[2,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 92, 92].  Tensor sizes: [2, 1, 92, 0]
2025-03-05 15:22:58.827814 test begin: paddle.broadcast_to(Tensor([2, 1, 93, 0],"bool"), list[2,8,93,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 93, 0],"bool"), list[2,8,93,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 93, 121].  Tensor sizes: [2, 1, 93, 0]
2025-03-05 15:22:58.828716 test begin: paddle.broadcast_to(Tensor([2, 1, 93, 0],"bool"), list[2,8,93,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 93, 0],"bool"), list[2,8,93,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 93, 129].  Tensor sizes: [2, 1, 93, 0]
2025-03-05 15:22:58.829400 test begin: paddle.broadcast_to(Tensor([2, 1, 93, 0],"bool"), list[2,8,93,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 93, 0],"bool"), list[2,8,93,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 93, 161].  Tensor sizes: [2, 1, 93, 0]
2025-03-05 15:22:58.829927 test begin: paddle.broadcast_to(Tensor([2, 1, 93, 0],"bool"), list[2,8,93,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 93, 0],"bool"), list[2,8,93,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 93, 181].  Tensor sizes: [2, 1, 93, 0]
2025-03-05 15:22:58.830447 test begin: paddle.broadcast_to(Tensor([2, 1, 93, 0],"bool"), list[2,8,93,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 93, 0],"bool"), list[2,8,93,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 93, 81].  Tensor sizes: [2, 1, 93, 0]
2025-03-05 15:22:58.830967 test begin: paddle.broadcast_to(Tensor([2, 1, 93, 0],"bool"), list[2,8,93,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 93, 0],"bool"), list[2,8,93,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 93, 85].  Tensor sizes: [2, 1, 93, 0]
2025-03-05 15:22:58.831473 test begin: paddle.broadcast_to(Tensor([2, 1, 93, 0],"bool"), list[2,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 93, 0],"bool"), list[2,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 93, 93].  Tensor sizes: [2, 1, 93, 0]
2025-03-05 15:22:58.832371 test begin: paddle.broadcast_to(Tensor([2, 1, 94, 0],"bool"), list[2,8,94,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 94, 0],"bool"), list[2,8,94,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 94, 121].  Tensor sizes: [2, 1, 94, 0]
2025-03-05 15:22:58.832895 test begin: paddle.broadcast_to(Tensor([2, 1, 94, 0],"bool"), list[2,8,94,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 94, 0],"bool"), list[2,8,94,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 94, 129].  Tensor sizes: [2, 1, 94, 0]
2025-03-05 15:22:58.833417 test begin: paddle.broadcast_to(Tensor([2, 1, 94, 0],"bool"), list[2,8,94,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 94, 0],"bool"), list[2,8,94,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 94, 161].  Tensor sizes: [2, 1, 94, 0]
2025-03-05 15:22:58.833986 test begin: paddle.broadcast_to(Tensor([2, 1, 94, 0],"bool"), list[2,8,94,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 94, 0],"bool"), list[2,8,94,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 94, 181].  Tensor sizes: [2, 1, 94, 0]
2025-03-05 15:22:58.834515 test begin: paddle.broadcast_to(Tensor([2, 1, 94, 0],"bool"), list[2,8,94,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 94, 0],"bool"), list[2,8,94,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 94, 81].  Tensor sizes: [2, 1, 94, 0]
2025-03-05 15:22:58.835064 test begin: paddle.broadcast_to(Tensor([2, 1, 94, 0],"bool"), list[2,8,94,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 94, 0],"bool"), list[2,8,94,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 94, 85].  Tensor sizes: [2, 1, 94, 0]
2025-03-05 15:22:58.835661 test begin: paddle.broadcast_to(Tensor([2, 1, 94, 0],"bool"), list[2,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 94, 0],"bool"), list[2,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 94, 94].  Tensor sizes: [2, 1, 94, 0]
2025-03-05 15:22:58.836195 test begin: paddle.broadcast_to(Tensor([2, 1, 95, 0],"bool"), list[2,8,95,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 95, 0],"bool"), list[2,8,95,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 95, 121].  Tensor sizes: [2, 1, 95, 0]
2025-03-05 15:22:58.836724 test begin: paddle.broadcast_to(Tensor([2, 1, 95, 0],"bool"), list[2,8,95,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 95, 0],"bool"), list[2,8,95,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 95, 129].  Tensor sizes: [2, 1, 95, 0]
2025-03-05 15:22:58.837288 test begin: paddle.broadcast_to(Tensor([2, 1, 95, 0],"bool"), list[2,8,95,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 95, 0],"bool"), list[2,8,95,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 95, 161].  Tensor sizes: [2, 1, 95, 0]
2025-03-05 15:22:58.837816 test begin: paddle.broadcast_to(Tensor([2, 1, 95, 0],"bool"), list[2,8,95,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 95, 0],"bool"), list[2,8,95,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 95, 181].  Tensor sizes: [2, 1, 95, 0]
2025-03-05 15:22:58.838335 test begin: paddle.broadcast_to(Tensor([2, 1, 95, 0],"bool"), list[2,8,95,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 95, 0],"bool"), list[2,8,95,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 95, 81].  Tensor sizes: [2, 1, 95, 0]
2025-03-05 15:22:58.838858 test begin: paddle.broadcast_to(Tensor([2, 1, 95, 0],"bool"), list[2,8,95,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 95, 0],"bool"), list[2,8,95,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 95, 85].  Tensor sizes: [2, 1, 95, 0]
2025-03-05 15:22:58.839397 test begin: paddle.broadcast_to(Tensor([2, 1, 95, 0],"bool"), list[2,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 95, 0],"bool"), list[2,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 95, 95].  Tensor sizes: [2, 1, 95, 0]
2025-03-05 15:22:58.839930 test begin: paddle.broadcast_to(Tensor([2, 1, 96, 0],"bool"), list[2,8,96,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 96, 0],"bool"), list[2,8,96,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 96, 121].  Tensor sizes: [2, 1, 96, 0]
2025-03-05 15:22:58.840466 test begin: paddle.broadcast_to(Tensor([2, 1, 96, 0],"bool"), list[2,8,96,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 96, 0],"bool"), list[2,8,96,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 96, 129].  Tensor sizes: [2, 1, 96, 0]
2025-03-05 15:22:58.840995 test begin: paddle.broadcast_to(Tensor([2, 1, 96, 0],"bool"), list[2,8,96,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 96, 0],"bool"), list[2,8,96,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 96, 161].  Tensor sizes: [2, 1, 96, 0]
2025-03-05 15:22:58.841509 test begin: paddle.broadcast_to(Tensor([2, 1, 96, 0],"bool"), list[2,8,96,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 96, 0],"bool"), list[2,8,96,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 96, 181].  Tensor sizes: [2, 1, 96, 0]
2025-03-05 15:22:58.842044 test begin: paddle.broadcast_to(Tensor([2, 1, 96, 0],"bool"), list[2,8,96,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 96, 0],"bool"), list[2,8,96,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 96, 81].  Tensor sizes: [2, 1, 96, 0]
2025-03-05 15:22:58.842561 test begin: paddle.broadcast_to(Tensor([2, 1, 96, 0],"bool"), list[2,8,96,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 96, 0],"bool"), list[2,8,96,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 96, 85].  Tensor sizes: [2, 1, 96, 0]
2025-03-05 15:22:58.843085 test begin: paddle.broadcast_to(Tensor([2, 1, 96, 0],"bool"), list[2,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 96, 0],"bool"), list[2,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 96, 96].  Tensor sizes: [2, 1, 96, 0]
2025-03-05 15:22:58.843580 test begin: paddle.broadcast_to(Tensor([2, 1, 97, 0],"bool"), list[2,8,97,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 97, 0],"bool"), list[2,8,97,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 97, 121].  Tensor sizes: [2, 1, 97, 0]
2025-03-05 15:22:58.844132 test begin: paddle.broadcast_to(Tensor([2, 1, 97, 0],"bool"), list[2,8,97,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 97, 0],"bool"), list[2,8,97,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 97, 129].  Tensor sizes: [2, 1, 97, 0]
2025-03-05 15:22:58.844667 test begin: paddle.broadcast_to(Tensor([2, 1, 97, 0],"bool"), list[2,8,97,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 97, 0],"bool"), list[2,8,97,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 97, 161].  Tensor sizes: [2, 1, 97, 0]
2025-03-05 15:22:58.845175 test begin: paddle.broadcast_to(Tensor([2, 1, 97, 0],"bool"), list[2,8,97,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 97, 0],"bool"), list[2,8,97,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 97, 181].  Tensor sizes: [2, 1, 97, 0]
2025-03-05 15:22:58.845728 test begin: paddle.broadcast_to(Tensor([2, 1, 97, 0],"bool"), list[2,8,97,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 97, 0],"bool"), list[2,8,97,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 97, 81].  Tensor sizes: [2, 1, 97, 0]
2025-03-05 15:22:58.846250 test begin: paddle.broadcast_to(Tensor([2, 1, 97, 0],"bool"), list[2,8,97,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 97, 0],"bool"), list[2,8,97,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 97, 85].  Tensor sizes: [2, 1, 97, 0]
2025-03-05 15:22:58.846784 test begin: paddle.broadcast_to(Tensor([2, 1, 97, 0],"bool"), list[2,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 97, 0],"bool"), list[2,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 97, 97].  Tensor sizes: [2, 1, 97, 0]
2025-03-05 15:22:58.847291 test begin: paddle.broadcast_to(Tensor([2, 1, 98, 0],"bool"), list[2,8,98,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 98, 0],"bool"), list[2,8,98,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 98, 121].  Tensor sizes: [2, 1, 98, 0]
2025-03-05 15:22:58.847796 test begin: paddle.broadcast_to(Tensor([2, 1, 98, 0],"bool"), list[2,8,98,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 98, 0],"bool"), list[2,8,98,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 98, 129].  Tensor sizes: [2, 1, 98, 0]
2025-03-05 15:22:58.848293 test begin: paddle.broadcast_to(Tensor([2, 1, 98, 0],"bool"), list[2,8,98,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 98, 0],"bool"), list[2,8,98,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 98, 161].  Tensor sizes: [2, 1, 98, 0]
2025-03-05 15:22:58.848807 test begin: paddle.broadcast_to(Tensor([2, 1, 98, 0],"bool"), list[2,8,98,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 98, 0],"bool"), list[2,8,98,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 98, 181].  Tensor sizes: [2, 1, 98, 0]
2025-03-05 15:22:58.849316 test begin: paddle.broadcast_to(Tensor([2, 1, 98, 0],"bool"), list[2,8,98,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 98, 0],"bool"), list[2,8,98,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 98, 81].  Tensor sizes: [2, 1, 98, 0]
2025-03-05 15:22:58.849851 test begin: paddle.broadcast_to(Tensor([2, 1, 98, 0],"bool"), list[2,8,98,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 98, 0],"bool"), list[2,8,98,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 98, 85].  Tensor sizes: [2, 1, 98, 0]
2025-03-05 15:22:58.850351 test begin: paddle.broadcast_to(Tensor([2, 1, 98, 0],"bool"), list[2,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 98, 0],"bool"), list[2,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 98, 98].  Tensor sizes: [2, 1, 98, 0]
2025-03-05 15:22:58.850933 test begin: paddle.broadcast_to(Tensor([2, 1, 99, 0],"bool"), list[2,8,99,121,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 99, 0],"bool"), list[2,8,99,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 99, 121].  Tensor sizes: [2, 1, 99, 0]
2025-03-05 15:22:58.851553 test begin: paddle.broadcast_to(Tensor([2, 1, 99, 0],"bool"), list[2,8,99,129,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 99, 0],"bool"), list[2,8,99,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 99, 129].  Tensor sizes: [2, 1, 99, 0]
2025-03-05 15:22:58.852083 test begin: paddle.broadcast_to(Tensor([2, 1, 99, 0],"bool"), list[2,8,99,161,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 99, 0],"bool"), list[2,8,99,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 99, 161].  Tensor sizes: [2, 1, 99, 0]
2025-03-05 15:22:58.852596 test begin: paddle.broadcast_to(Tensor([2, 1, 99, 0],"bool"), list[2,8,99,181,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 99, 0],"bool"), list[2,8,99,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 99, 181].  Tensor sizes: [2, 1, 99, 0]
2025-03-05 15:22:58.853138 test begin: paddle.broadcast_to(Tensor([2, 1, 99, 0],"bool"), list[2,8,99,81,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 99, 0],"bool"), list[2,8,99,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 99, 81].  Tensor sizes: [2, 1, 99, 0]
2025-03-05 15:22:58.853676 test begin: paddle.broadcast_to(Tensor([2, 1, 99, 0],"bool"), list[2,8,99,85,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 99, 0],"bool"), list[2,8,99,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 99, 85].  Tensor sizes: [2, 1, 99, 0]
2025-03-05 15:22:58.854201 test begin: paddle.broadcast_to(Tensor([2, 1, 99, 0],"bool"), list[2,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([2, 1, 99, 0],"bool"), list[2,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [2, 8, 99, 99].  Tensor sizes: [2, 1, 99, 0]
2025-03-05 15:22:58.854719 test begin: paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 10, 11109].  Tensor sizes: [2, 10, 0]
2025-03-05 15:22:58.855218 test begin: paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 10, 12096].  Tensor sizes: [2, 10, 0]
2025-03-05 15:22:58.855716 test begin: paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 10, 3024].  Tensor sizes: [2, 10, 0]
2025-03-05 15:22:58.856197 test begin: paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 10, 3549].  Tensor sizes: [2, 10, 0]
2025-03-05 15:22:58.856704 test begin: paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 10, 4725].  Tensor sizes: [2, 10, 0]
2025-03-05 15:22:58.857196 test begin: paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 10, 5376].  Tensor sizes: [2, 10, 0]
2025-03-05 15:22:58.857705 test begin: paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 10, 6804].  Tensor sizes: [2, 10, 0]
2025-03-05 15:22:58.858196 test begin: paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 10, 0],"bool"), list[2,10,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 10, 9261].  Tensor sizes: [2, 10, 0]
2025-03-05 15:22:58.858692 test begin: paddle.broadcast_to(Tensor([2, 100, 0],"bool"), list[2,100,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 100, 0],"bool"), list[2,100,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 100, 6069].  Tensor sizes: [2, 100, 0]
2025-03-05 15:22:58.859181 test begin: paddle.broadcast_to(Tensor([2, 101, 0],"bool"), list[2,101,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 101, 0],"bool"), list[2,101,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 101, 4725].  Tensor sizes: [2, 101, 0]
2025-03-05 15:22:58.859690 test begin: paddle.broadcast_to(Tensor([2, 102, 0],"bool"), list[2,102,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 102, 0],"bool"), list[2,102,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 102, 12096].  Tensor sizes: [2, 102, 0]
2025-03-05 15:22:58.860261 test begin: paddle.broadcast_to(Tensor([2, 102, 0],"bool"), list[2,102,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 102, 0],"bool"), list[2,102,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 102, 3549].  Tensor sizes: [2, 102, 0]
2025-03-05 15:22:58.860779 test begin: paddle.broadcast_to(Tensor([2, 102, 0],"bool"), list[2,102,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 102, 0],"bool"), list[2,102,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 102, 4725].  Tensor sizes: [2, 102, 0]
2025-03-05 15:22:58.861297 test begin: paddle.broadcast_to(Tensor([2, 102, 0],"bool"), list[2,102,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 102, 0],"bool"), list[2,102,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 102, 7581].  Tensor sizes: [2, 102, 0]
2025-03-05 15:22:58.861838 test begin: paddle.broadcast_to(Tensor([2, 102, 0],"bool"), list[2,102,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 102, 0],"bool"), list[2,102,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 102, 8400].  Tensor sizes: [2, 102, 0]
2025-03-05 15:22:58.862353 test begin: paddle.broadcast_to(Tensor([2, 102, 0],"bool"), list[2,102,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 102, 0],"bool"), list[2,102,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 102, 9261].  Tensor sizes: [2, 102, 0]
2025-03-05 15:22:58.862870 test begin: paddle.broadcast_to(Tensor([2, 103, 0],"bool"), list[2,103,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 103, 0],"bool"), list[2,103,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 103, 11109].  Tensor sizes: [2, 103, 0]
2025-03-05 15:22:58.863417 test begin: paddle.broadcast_to(Tensor([2, 103, 0],"bool"), list[2,103,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 103, 0],"bool"), list[2,103,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 103, 2541].  Tensor sizes: [2, 103, 0]
2025-03-05 15:22:58.863942 test begin: paddle.broadcast_to(Tensor([2, 103, 0],"bool"), list[2,103,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 103, 0],"bool"), list[2,103,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 103, 4725].  Tensor sizes: [2, 103, 0]
2025-03-05 15:22:58.865042 test begin: paddle.broadcast_to(Tensor([2, 103, 0],"bool"), list[2,103,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 103, 0],"bool"), list[2,103,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 103, 8400].  Tensor sizes: [2, 103, 0]
2025-03-05 15:22:58.865797 test begin: paddle.broadcast_to(Tensor([2, 105, 0],"bool"), list[2,105,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 105, 0],"bool"), list[2,105,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 105, 3024].  Tensor sizes: [2, 105, 0]
2025-03-05 15:22:58.866390 test begin: paddle.broadcast_to(Tensor([2, 105, 0],"bool"), list[2,105,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 105, 0],"bool"), list[2,105,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 105, 4116].  Tensor sizes: [2, 105, 0]
2025-03-05 15:22:58.866964 test begin: paddle.broadcast_to(Tensor([2, 105, 0],"bool"), list[2,105,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 105, 0],"bool"), list[2,105,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 105, 4725].  Tensor sizes: [2, 105, 0]
2025-03-05 15:22:58.867521 test begin: paddle.broadcast_to(Tensor([2, 105, 0],"bool"), list[2,105,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 105, 0],"bool"), list[2,105,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 105, 6069].  Tensor sizes: [2, 105, 0]
2025-03-05 15:22:58.868089 test begin: paddle.broadcast_to(Tensor([2, 105, 0],"bool"), list[2,105,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 105, 0],"bool"), list[2,105,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 105, 6804].  Tensor sizes: [2, 105, 0]
2025-03-05 15:22:58.868843 test begin: paddle.broadcast_to(Tensor([2, 106, 0],"bool"), list[2,106,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 106, 0],"bool"), list[2,106,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 106, 3024].  Tensor sizes: [2, 106, 0]
2025-03-05 15:22:58.877736 test begin: paddle.broadcast_to(Tensor([2, 106, 0],"bool"), list[2,106,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 106, 0],"bool"), list[2,106,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 106, 6069].  Tensor sizes: [2, 106, 0]
2025-03-05 15:22:58.878319 test begin: paddle.broadcast_to(Tensor([2, 106, 0],"bool"), list[2,106,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 106, 0],"bool"), list[2,106,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 106, 8400].  Tensor sizes: [2, 106, 0]
2025-03-05 15:22:58.878886 test begin: paddle.broadcast_to(Tensor([2, 107, 0],"bool"), list[2,107,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 107, 0],"bool"), list[2,107,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 107, 10164].  Tensor sizes: [2, 107, 0]
2025-03-05 15:22:58.879459 test begin: paddle.broadcast_to(Tensor([2, 107, 0],"bool"), list[2,107,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 107, 0],"bool"), list[2,107,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 107, 5376].  Tensor sizes: [2, 107, 0]
2025-03-05 15:22:58.880023 test begin: paddle.broadcast_to(Tensor([2, 107, 0],"bool"), list[2,107,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 107, 0],"bool"), list[2,107,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 107, 9261].  Tensor sizes: [2, 107, 0]
2025-03-05 15:22:58.880569 test begin: paddle.broadcast_to(Tensor([2, 108, 0],"bool"), list[2,108,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 108, 0],"bool"), list[2,108,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 108, 2100].  Tensor sizes: [2, 108, 0]
2025-03-05 15:22:58.881133 test begin: paddle.broadcast_to(Tensor([2, 108, 0],"bool"), list[2,108,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 108, 0],"bool"), list[2,108,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 108, 2541].  Tensor sizes: [2, 108, 0]
2025-03-05 15:22:58.881676 test begin: paddle.broadcast_to(Tensor([2, 108, 0],"bool"), list[2,108,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 108, 0],"bool"), list[2,108,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 108, 4116].  Tensor sizes: [2, 108, 0]
2025-03-05 15:22:58.882222 test begin: paddle.broadcast_to(Tensor([2, 108, 0],"bool"), list[2,108,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 108, 0],"bool"), list[2,108,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 108, 6069].  Tensor sizes: [2, 108, 0]
2025-03-05 15:22:58.882821 test begin: paddle.broadcast_to(Tensor([2, 108, 0],"bool"), list[2,108,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 108, 0],"bool"), list[2,108,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 108, 7581].  Tensor sizes: [2, 108, 0]
2025-03-05 15:22:58.883363 test begin: paddle.broadcast_to(Tensor([2, 108, 0],"bool"), list[2,108,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 108, 0],"bool"), list[2,108,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 108, 9261].  Tensor sizes: [2, 108, 0]
2025-03-05 15:22:58.883908 test begin: paddle.broadcast_to(Tensor([2, 109, 0],"bool"), list[2,109,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 109, 0],"bool"), list[2,109,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 109, 4116].  Tensor sizes: [2, 109, 0]
2025-03-05 15:22:58.887739 test begin: paddle.broadcast_to(Tensor([2, 109, 0],"bool"), list[2,109,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 109, 0],"bool"), list[2,109,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 109, 8400].  Tensor sizes: [2, 109, 0]
2025-03-05 15:22:58.888406 test begin: paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 11, 10164].  Tensor sizes: [2, 11, 0]
2025-03-05 15:22:58.889053 test begin: paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 11, 11109].  Tensor sizes: [2, 11, 0]
2025-03-05 15:22:58.889733 test begin: paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 11, 2100].  Tensor sizes: [2, 11, 0]
2025-03-05 15:22:58.890326 test begin: paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 11, 2541].  Tensor sizes: [2, 11, 0]
2025-03-05 15:22:58.890890 test begin: paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 11, 3549].  Tensor sizes: [2, 11, 0]
2025-03-05 15:22:58.891627 test begin: paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 11, 4725].  Tensor sizes: [2, 11, 0]
2025-03-05 15:22:58.896679 test begin: paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 11, 6804].  Tensor sizes: [2, 11, 0]
2025-03-05 15:22:58.897252 test begin: paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 11, 7581].  Tensor sizes: [2, 11, 0]
2025-03-05 15:22:58.897804 test begin: paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 11, 0],"bool"), list[2,11,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 11, 9261].  Tensor sizes: [2, 11, 0]
2025-03-05 15:22:58.898362 test begin: paddle.broadcast_to(Tensor([2, 110, 0],"bool"), list[2,110,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 110, 0],"bool"), list[2,110,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 110, 3549].  Tensor sizes: [2, 110, 0]
2025-03-05 15:22:58.898886 test begin: paddle.broadcast_to(Tensor([2, 110, 0],"bool"), list[2,110,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 110, 0],"bool"), list[2,110,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 110, 5376].  Tensor sizes: [2, 110, 0]
2025-03-05 15:22:58.899400 test begin: paddle.broadcast_to(Tensor([2, 111, 0],"bool"), list[2,111,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 111, 0],"bool"), list[2,111,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 111, 10164].  Tensor sizes: [2, 111, 0]
2025-03-05 15:22:58.900763 test begin: paddle.broadcast_to(Tensor([2, 111, 0],"bool"), list[2,111,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 111, 0],"bool"), list[2,111,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 111, 5376].  Tensor sizes: [2, 111, 0]
2025-03-05 15:22:58.901919 test begin: paddle.broadcast_to(Tensor([2, 112, 0],"bool"), list[2,112,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 112, 0],"bool"), list[2,112,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 112, 11109].  Tensor sizes: [2, 112, 0]
2025-03-05 15:22:58.902800 test begin: paddle.broadcast_to(Tensor([2, 112, 0],"bool"), list[2,112,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 112, 0],"bool"), list[2,112,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 112, 3024].  Tensor sizes: [2, 112, 0]
2025-03-05 15:22:58.903626 test begin: paddle.broadcast_to(Tensor([2, 112, 0],"bool"), list[2,112,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 112, 0],"bool"), list[2,112,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 112, 6804].  Tensor sizes: [2, 112, 0]
2025-03-05 15:22:58.904316 test begin: paddle.broadcast_to(Tensor([2, 113, 0],"bool"), list[2,113,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 113, 0],"bool"), list[2,113,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 113, 11109].  Tensor sizes: [2, 113, 0]
2025-03-05 15:22:58.904987 test begin: paddle.broadcast_to(Tensor([2, 113, 0],"bool"), list[2,113,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 113, 0],"bool"), list[2,113,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 113, 2541].  Tensor sizes: [2, 113, 0]
2025-03-05 15:22:58.905663 test begin: paddle.broadcast_to(Tensor([2, 113, 0],"bool"), list[2,113,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 113, 0],"bool"), list[2,113,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 113, 3549].  Tensor sizes: [2, 113, 0]
2025-03-05 15:22:58.906339 test begin: paddle.broadcast_to(Tensor([2, 113, 0],"bool"), list[2,113,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 113, 0],"bool"), list[2,113,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 113, 7581].  Tensor sizes: [2, 113, 0]
2025-03-05 15:22:58.907031 test begin: paddle.broadcast_to(Tensor([2, 114, 0],"bfloat16"), tuple(2,114,64,), )

[torch error] paddle.broadcast_to(Tensor([2, 114, 0],"bfloat16"), tuple(2,114,64,), ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 114, 64].  Tensor sizes: [2, 114, 0]
2025-03-05 15:22:58.907685 test begin: paddle.broadcast_to(Tensor([2, 114, 0],"bool"), list[2,114,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 114, 0],"bool"), list[2,114,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 114, 2100].  Tensor sizes: [2, 114, 0]
2025-03-05 15:22:58.908216 test begin: paddle.broadcast_to(Tensor([2, 114, 0],"bool"), list[2,114,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 114, 0],"bool"), list[2,114,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 114, 2541].  Tensor sizes: [2, 114, 0]
2025-03-05 15:22:58.908745 test begin: paddle.broadcast_to(Tensor([2, 114, 0],"bool"), list[2,114,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 114, 0],"bool"), list[2,114,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 114, 4725].  Tensor sizes: [2, 114, 0]
2025-03-05 15:22:58.909439 test begin: paddle.broadcast_to(Tensor([2, 114, 0],"bool"), list[2,114,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 114, 0],"bool"), list[2,114,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 114, 5376].  Tensor sizes: [2, 114, 0]
2025-03-05 15:22:58.910100 test begin: paddle.broadcast_to(Tensor([2, 114, 0],"bool"), list[2,114,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 114, 0],"bool"), list[2,114,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 114, 6069].  Tensor sizes: [2, 114, 0]
2025-03-05 15:22:58.910677 test begin: paddle.broadcast_to(Tensor([2, 115, 0],"bool"), list[2,115,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 115, 0],"bool"), list[2,115,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 115, 3024].  Tensor sizes: [2, 115, 0]
2025-03-05 15:22:58.911191 test begin: paddle.broadcast_to(Tensor([2, 115, 0],"bool"), list[2,115,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 115, 0],"bool"), list[2,115,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 115, 6069].  Tensor sizes: [2, 115, 0]
2025-03-05 15:22:58.911700 test begin: paddle.broadcast_to(Tensor([2, 115, 0],"bool"), list[2,115,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 115, 0],"bool"), list[2,115,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 115, 9261].  Tensor sizes: [2, 115, 0]
2025-03-05 15:22:58.912280 test begin: paddle.broadcast_to(Tensor([2, 116, 0],"bool"), list[2,116,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 116, 0],"bool"), list[2,116,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 116, 3024].  Tensor sizes: [2, 116, 0]
2025-03-05 15:22:58.912817 test begin: paddle.broadcast_to(Tensor([2, 116, 0],"bool"), list[2,116,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 116, 0],"bool"), list[2,116,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 116, 4725].  Tensor sizes: [2, 116, 0]
2025-03-05 15:22:58.913331 test begin: paddle.broadcast_to(Tensor([2, 116, 0],"bool"), list[2,116,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 116, 0],"bool"), list[2,116,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 116, 6069].  Tensor sizes: [2, 116, 0]
2025-03-05 15:22:58.914015 test begin: paddle.broadcast_to(Tensor([2, 116, 0],"bool"), list[2,116,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 116, 0],"bool"), list[2,116,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 116, 7581].  Tensor sizes: [2, 116, 0]
2025-03-05 15:22:58.914736 test begin: paddle.broadcast_to(Tensor([2, 11645, 0],"bool"), list[2,11645,256,], )

[torch error] paddle.broadcast_to(Tensor([2, 11645, 0],"bool"), list[2,11645,256,], ) 
 The expanded size of the tensor (256) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 11645, 256].  Tensor sizes: [2, 11645, 0]
2025-03-05 15:22:58.915407 test begin: paddle.broadcast_to(Tensor([2, 11645, 0],"bool"), list[2,11645,4,], )

[torch error] paddle.broadcast_to(Tensor([2, 11645, 0],"bool"), list[2,11645,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 11645, 4].  Tensor sizes: [2, 11645, 0]
2025-03-05 15:22:58.916022 test begin: paddle.broadcast_to(Tensor([2, 117, 0],"bool"), list[2,117,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 117, 0],"bool"), list[2,117,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 117, 10164].  Tensor sizes: [2, 117, 0]
2025-03-05 15:22:58.916746 test begin: paddle.broadcast_to(Tensor([2, 117, 0],"bool"), list[2,117,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 117, 0],"bool"), list[2,117,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 117, 11109].  Tensor sizes: [2, 117, 0]
2025-03-05 15:22:58.917749 test begin: paddle.broadcast_to(Tensor([2, 117, 0],"bool"), list[2,117,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 117, 0],"bool"), list[2,117,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 117, 12096].  Tensor sizes: [2, 117, 0]
2025-03-05 15:22:58.918510 test begin: paddle.broadcast_to(Tensor([2, 117, 0],"bool"), list[2,117,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 117, 0],"bool"), list[2,117,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 117, 2100].  Tensor sizes: [2, 117, 0]
2025-03-05 15:22:58.919315 test begin: paddle.broadcast_to(Tensor([2, 117, 0],"bool"), list[2,117,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 117, 0],"bool"), list[2,117,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 117, 4116].  Tensor sizes: [2, 117, 0]
2025-03-05 15:22:58.920510 test begin: paddle.broadcast_to(Tensor([2, 117, 0],"bool"), list[2,117,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 117, 0],"bool"), list[2,117,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 117, 4725].  Tensor sizes: [2, 117, 0]
2025-03-05 15:22:58.921307 test begin: paddle.broadcast_to(Tensor([2, 117, 0],"bool"), list[2,117,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 117, 0],"bool"), list[2,117,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 117, 6069].  Tensor sizes: [2, 117, 0]
2025-03-05 15:22:58.921939 test begin: paddle.broadcast_to(Tensor([2, 118, 0],"bool"), list[2,118,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 118, 0],"bool"), list[2,118,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 118, 5376].  Tensor sizes: [2, 118, 0]
2025-03-05 15:22:58.922485 test begin: paddle.broadcast_to(Tensor([2, 119, 0],"bool"), list[2,119,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 119, 0],"bool"), list[2,119,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 119, 10164].  Tensor sizes: [2, 119, 0]
2025-03-05 15:22:58.923033 test begin: paddle.broadcast_to(Tensor([2, 119, 0],"bool"), list[2,119,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 119, 0],"bool"), list[2,119,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 119, 2100].  Tensor sizes: [2, 119, 0]
2025-03-05 15:22:58.923758 test begin: paddle.broadcast_to(Tensor([2, 119, 0],"bool"), list[2,119,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 119, 0],"bool"), list[2,119,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 119, 4725].  Tensor sizes: [2, 119, 0]
2025-03-05 15:22:58.924375 test begin: paddle.broadcast_to(Tensor([2, 119, 0],"bool"), list[2,119,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 119, 0],"bool"), list[2,119,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 119, 6804].  Tensor sizes: [2, 119, 0]
2025-03-05 15:22:58.925046 test begin: paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 12, 10164].  Tensor sizes: [2, 12, 0]
2025-03-05 15:22:58.925814 test begin: paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 12, 11109].  Tensor sizes: [2, 12, 0]
2025-03-05 15:22:58.926603 test begin: paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 12, 2100].  Tensor sizes: [2, 12, 0]
2025-03-05 15:22:58.927331 test begin: paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 12, 2541].  Tensor sizes: [2, 12, 0]
2025-03-05 15:22:58.928011 test begin: paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 12, 3024].  Tensor sizes: [2, 12, 0]
2025-03-05 15:22:58.928588 test begin: paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 12, 4116].  Tensor sizes: [2, 12, 0]
2025-03-05 15:22:58.929130 test begin: paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 12, 6069].  Tensor sizes: [2, 12, 0]
2025-03-05 15:22:58.929670 test begin: paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 12, 6804].  Tensor sizes: [2, 12, 0]
2025-03-05 15:22:58.930196 test begin: paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 12, 7581].  Tensor sizes: [2, 12, 0]
2025-03-05 15:22:58.930714 test begin: paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 12, 8400].  Tensor sizes: [2, 12, 0]
2025-03-05 15:22:58.931258 test begin: paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 12, 0],"bool"), list[2,12,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 12, 9261].  Tensor sizes: [2, 12, 0]
2025-03-05 15:22:58.931785 test begin: paddle.broadcast_to(Tensor([2, 120, 0],"bool"), list[2,120,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 120, 0],"bool"), list[2,120,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 120, 10164].  Tensor sizes: [2, 120, 0]
2025-03-05 15:22:58.932452 test begin: paddle.broadcast_to(Tensor([2, 120, 0],"bool"), list[2,120,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 120, 0],"bool"), list[2,120,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 120, 6804].  Tensor sizes: [2, 120, 0]
2025-03-05 15:22:58.932993 test begin: paddle.broadcast_to(Tensor([2, 122, 0],"bool"), list[2,122,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 122, 0],"bool"), list[2,122,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 122, 10164].  Tensor sizes: [2, 122, 0]
2025-03-05 15:22:58.933529 test begin: paddle.broadcast_to(Tensor([2, 123, 0],"bool"), list[2,123,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 123, 0],"bool"), list[2,123,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 123, 10164].  Tensor sizes: [2, 123, 0]
2025-03-05 15:22:58.934085 test begin: paddle.broadcast_to(Tensor([2, 123, 0],"bool"), list[2,123,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 123, 0],"bool"), list[2,123,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 123, 2100].  Tensor sizes: [2, 123, 0]
2025-03-05 15:22:58.934620 test begin: paddle.broadcast_to(Tensor([2, 123, 0],"bool"), list[2,123,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 123, 0],"bool"), list[2,123,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 123, 2541].  Tensor sizes: [2, 123, 0]
2025-03-05 15:22:58.935347 test begin: paddle.broadcast_to(Tensor([2, 123, 0],"bool"), list[2,123,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 123, 0],"bool"), list[2,123,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 123, 3024].  Tensor sizes: [2, 123, 0]
2025-03-05 15:22:58.936038 test begin: paddle.broadcast_to(Tensor([2, 123, 0],"bool"), list[2,123,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 123, 0],"bool"), list[2,123,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 123, 4116].  Tensor sizes: [2, 123, 0]
2025-03-05 15:22:58.936706 test begin: paddle.broadcast_to(Tensor([2, 123, 0],"bool"), list[2,123,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 123, 0],"bool"), list[2,123,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 123, 7581].  Tensor sizes: [2, 123, 0]
2025-03-05 15:22:58.937446 test begin: paddle.broadcast_to(Tensor([2, 124, 0],"bool"), list[2,124,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 124, 0],"bool"), list[2,124,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 124, 11109].  Tensor sizes: [2, 124, 0]
2025-03-05 15:22:58.938192 test begin: paddle.broadcast_to(Tensor([2, 124, 0],"bool"), list[2,124,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 124, 0],"bool"), list[2,124,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 124, 4725].  Tensor sizes: [2, 124, 0]
2025-03-05 15:22:58.939038 test begin: paddle.broadcast_to(Tensor([2, 125, 0],"bool"), list[2,125,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 125, 0],"bool"), list[2,125,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 125, 4116].  Tensor sizes: [2, 125, 0]
2025-03-05 15:22:58.939790 test begin: paddle.broadcast_to(Tensor([2, 125, 0],"bool"), list[2,125,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 125, 0],"bool"), list[2,125,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 125, 6069].  Tensor sizes: [2, 125, 0]
2025-03-05 15:22:58.940412 test begin: paddle.broadcast_to(Tensor([2, 126, 0],"bool"), list[2,126,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 126, 0],"bool"), list[2,126,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 126, 10164].  Tensor sizes: [2, 126, 0]
2025-03-05 15:22:58.941857 test begin: paddle.broadcast_to(Tensor([2, 126, 0],"bool"), list[2,126,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 126, 0],"bool"), list[2,126,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 126, 3549].  Tensor sizes: [2, 126, 0]
2025-03-05 15:22:58.942411 test begin: paddle.broadcast_to(Tensor([2, 126, 0],"bool"), list[2,126,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 126, 0],"bool"), list[2,126,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 126, 6804].  Tensor sizes: [2, 126, 0]
2025-03-05 15:22:58.942929 test begin: paddle.broadcast_to(Tensor([2, 127, 0],"bool"), list[2,127,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 127, 0],"bool"), list[2,127,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 127, 5376].  Tensor sizes: [2, 127, 0]
2025-03-05 15:22:58.943448 test begin: paddle.broadcast_to(Tensor([2, 129, 0],"bool"), list[2,129,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 129, 0],"bool"), list[2,129,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 129, 12096].  Tensor sizes: [2, 129, 0]
2025-03-05 15:22:58.943956 test begin: paddle.broadcast_to(Tensor([2, 129, 0],"bool"), list[2,129,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 129, 0],"bool"), list[2,129,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 129, 7581].  Tensor sizes: [2, 129, 0]
2025-03-05 15:22:58.944468 test begin: paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 13, 10164].  Tensor sizes: [2, 13, 0]
2025-03-05 15:22:58.944987 test begin: paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 13, 11109].  Tensor sizes: [2, 13, 0]
2025-03-05 15:22:58.945482 test begin: paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 13, 12096].  Tensor sizes: [2, 13, 0]
2025-03-05 15:22:58.946018 test begin: paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 13, 2100].  Tensor sizes: [2, 13, 0]
2025-03-05 15:22:58.946519 test begin: paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 13, 3024].  Tensor sizes: [2, 13, 0]
2025-03-05 15:22:58.947033 test begin: paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 13, 3549].  Tensor sizes: [2, 13, 0]
2025-03-05 15:22:58.947540 test begin: paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 13, 4116].  Tensor sizes: [2, 13, 0]
2025-03-05 15:22:58.948050 test begin: paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 13, 5376].  Tensor sizes: [2, 13, 0]
2025-03-05 15:22:58.948543 test begin: paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 13, 6069].  Tensor sizes: [2, 13, 0]
2025-03-05 15:22:58.949090 test begin: paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 13, 6804].  Tensor sizes: [2, 13, 0]
2025-03-05 15:22:58.949614 test begin: paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 13, 7581].  Tensor sizes: [2, 13, 0]
2025-03-05 15:22:58.950516 test begin: paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 13, 8400].  Tensor sizes: [2, 13, 0]
2025-03-05 15:22:58.951177 test begin: paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 13, 0],"bool"), list[2,13,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 13, 9261].  Tensor sizes: [2, 13, 0]
2025-03-05 15:22:58.951808 test begin: paddle.broadcast_to(Tensor([2, 130, 0],"bool"), list[2,130,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 130, 0],"bool"), list[2,130,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 130, 3549].  Tensor sizes: [2, 130, 0]
2025-03-05 15:22:58.952498 test begin: paddle.broadcast_to(Tensor([2, 130, 0],"bool"), list[2,130,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 130, 0],"bool"), list[2,130,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 130, 5376].  Tensor sizes: [2, 130, 0]
2025-03-05 15:22:58.953104 test begin: paddle.broadcast_to(Tensor([2, 131, 0],"bool"), list[2,131,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 131, 0],"bool"), list[2,131,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 131, 2541].  Tensor sizes: [2, 131, 0]
2025-03-05 15:22:58.953776 test begin: paddle.broadcast_to(Tensor([2, 132, 0],"bool"), list[2,132,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 132, 0],"bool"), list[2,132,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 132, 12096].  Tensor sizes: [2, 132, 0]
2025-03-05 15:22:58.954385 test begin: paddle.broadcast_to(Tensor([2, 132, 0],"bool"), list[2,132,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 132, 0],"bool"), list[2,132,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 132, 2541].  Tensor sizes: [2, 132, 0]
2025-03-05 15:22:58.954902 test begin: paddle.broadcast_to(Tensor([2, 132, 0],"bool"), list[2,132,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 132, 0],"bool"), list[2,132,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 132, 3024].  Tensor sizes: [2, 132, 0]
2025-03-05 15:22:58.955393 test begin: paddle.broadcast_to(Tensor([2, 132, 0],"bool"), list[2,132,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 132, 0],"bool"), list[2,132,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 132, 3549].  Tensor sizes: [2, 132, 0]
2025-03-05 15:22:58.955895 test begin: paddle.broadcast_to(Tensor([2, 132, 0],"bool"), list[2,132,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 132, 0],"bool"), list[2,132,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 132, 4116].  Tensor sizes: [2, 132, 0]
2025-03-05 15:22:58.956381 test begin: paddle.broadcast_to(Tensor([2, 132, 0],"bool"), list[2,132,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 132, 0],"bool"), list[2,132,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 132, 6069].  Tensor sizes: [2, 132, 0]
2025-03-05 15:22:58.956960 test begin: paddle.broadcast_to(Tensor([2, 132, 0],"bool"), list[2,132,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 132, 0],"bool"), list[2,132,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 132, 7581].  Tensor sizes: [2, 132, 0]
2025-03-05 15:22:58.957753 test begin: paddle.broadcast_to(Tensor([2, 136, 0],"bool"), list[2,136,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 136, 0],"bool"), list[2,136,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 136, 9261].  Tensor sizes: [2, 136, 0]
2025-03-05 15:22:58.958348 test begin: paddle.broadcast_to(Tensor([2, 138, 0],"bool"), list[2,138,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 138, 0],"bool"), list[2,138,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 138, 12096].  Tensor sizes: [2, 138, 0]
2025-03-05 15:22:58.958876 test begin: paddle.broadcast_to(Tensor([2, 138, 0],"bool"), list[2,138,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 138, 0],"bool"), list[2,138,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 138, 3024].  Tensor sizes: [2, 138, 0]
2025-03-05 15:22:58.959391 test begin: paddle.broadcast_to(Tensor([2, 138, 0],"bool"), list[2,138,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 138, 0],"bool"), list[2,138,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 138, 6069].  Tensor sizes: [2, 138, 0]
2025-03-05 15:22:58.959902 test begin: paddle.broadcast_to(Tensor([2, 139, 0],"bool"), list[2,139,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 139, 0],"bool"), list[2,139,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 139, 10164].  Tensor sizes: [2, 139, 0]
2025-03-05 15:22:58.960405 test begin: paddle.broadcast_to(Tensor([2, 139, 0],"bool"), list[2,139,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 139, 0],"bool"), list[2,139,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 139, 2541].  Tensor sizes: [2, 139, 0]
2025-03-05 15:22:58.960930 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 10164].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.961469 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 11109].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.962017 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 12096].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.962512 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 2100].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.963022 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 2541].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.963515 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 3024].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.964021 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 3549].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.964510 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 4725].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.965013 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 5376].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.965505 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 6069].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.966069 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 6804].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.966594 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 8400].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.967119 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"bool"), list[2,14,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 9261].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.967623 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"int64"), tuple(2,14,64,), )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"int64"), tuple(2,14,64,), ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 64].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.968192 test begin: paddle.broadcast_to(Tensor([2, 14, 0],"int64"), tuple(2,14,768,), )

[torch error] paddle.broadcast_to(Tensor([2, 14, 0],"int64"), tuple(2,14,768,), ) 
 The expanded size of the tensor (768) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 14, 768].  Tensor sizes: [2, 14, 0]
2025-03-05 15:22:58.968731 test begin: paddle.broadcast_to(Tensor([2, 140, 0],"bool"), list[2,140,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 140, 0],"bool"), list[2,140,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 140, 11109].  Tensor sizes: [2, 140, 0]
2025-03-05 15:22:58.969231 test begin: paddle.broadcast_to(Tensor([2, 140, 0],"bool"), list[2,140,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 140, 0],"bool"), list[2,140,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 140, 8400].  Tensor sizes: [2, 140, 0]
2025-03-05 15:22:58.969742 test begin: paddle.broadcast_to(Tensor([2, 142, 0],"bool"), list[2,142,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 142, 0],"bool"), list[2,142,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 142, 7581].  Tensor sizes: [2, 142, 0]
2025-03-05 15:22:58.970247 test begin: paddle.broadcast_to(Tensor([2, 145, 0],"bool"), list[2,145,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 145, 0],"bool"), list[2,145,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 145, 7581].  Tensor sizes: [2, 145, 0]
2025-03-05 15:22:58.970749 test begin: paddle.broadcast_to(Tensor([2, 146, 0],"bool"), list[2,146,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 146, 0],"bool"), list[2,146,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 146, 10164].  Tensor sizes: [2, 146, 0]
2025-03-05 15:22:58.971242 test begin: paddle.broadcast_to(Tensor([2, 146, 0],"bool"), list[2,146,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 146, 0],"bool"), list[2,146,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 146, 5376].  Tensor sizes: [2, 146, 0]
2025-03-05 15:22:58.971744 test begin: paddle.broadcast_to(Tensor([2, 146, 0],"bool"), list[2,146,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 146, 0],"bool"), list[2,146,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 146, 8400].  Tensor sizes: [2, 146, 0]
2025-03-05 15:22:58.972249 test begin: paddle.broadcast_to(Tensor([2, 147, 0],"bool"), list[2,147,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 147, 0],"bool"), list[2,147,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 147, 4116].  Tensor sizes: [2, 147, 0]
2025-03-05 15:22:58.972751 test begin: paddle.broadcast_to(Tensor([2, 149, 0],"bool"), list[2,149,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 149, 0],"bool"), list[2,149,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 149, 11109].  Tensor sizes: [2, 149, 0]
2025-03-05 15:22:58.973334 test begin: paddle.broadcast_to(Tensor([2, 149, 0],"bool"), list[2,149,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 149, 0],"bool"), list[2,149,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 149, 2541].  Tensor sizes: [2, 149, 0]
2025-03-05 15:22:58.974550 test begin: paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 15, 10164].  Tensor sizes: [2, 15, 0]
2025-03-05 15:22:58.975191 test begin: paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 15, 11109].  Tensor sizes: [2, 15, 0]
2025-03-05 15:22:58.975753 test begin: paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 15, 12096].  Tensor sizes: [2, 15, 0]
2025-03-05 15:22:58.976298 test begin: paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 15, 3024].  Tensor sizes: [2, 15, 0]
2025-03-05 15:22:58.976906 test begin: paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 15, 4116].  Tensor sizes: [2, 15, 0]
2025-03-05 15:22:58.977449 test begin: paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 15, 4725].  Tensor sizes: [2, 15, 0]
2025-03-05 15:22:58.977990 test begin: paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 15, 5376].  Tensor sizes: [2, 15, 0]
2025-03-05 15:22:58.978522 test begin: paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 15, 6069].  Tensor sizes: [2, 15, 0]
2025-03-05 15:22:58.979066 test begin: paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 15, 0],"bool"), list[2,15,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 15, 8400].  Tensor sizes: [2, 15, 0]
2025-03-05 15:22:58.979635 test begin: paddle.broadcast_to(Tensor([2, 150, 0],"bool"), list[2,150,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 150, 0],"bool"), list[2,150,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 150, 2100].  Tensor sizes: [2, 150, 0]
2025-03-05 15:22:58.980205 test begin: paddle.broadcast_to(Tensor([2, 150, 0],"bool"), list[2,150,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 150, 0],"bool"), list[2,150,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 150, 9261].  Tensor sizes: [2, 150, 0]
2025-03-05 15:22:58.980770 test begin: paddle.broadcast_to(Tensor([2, 152, 0],"bool"), list[2,152,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 152, 0],"bool"), list[2,152,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 152, 12096].  Tensor sizes: [2, 152, 0]
2025-03-05 15:22:58.981310 test begin: paddle.broadcast_to(Tensor([2, 152, 0],"bool"), list[2,152,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 152, 0],"bool"), list[2,152,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 152, 4725].  Tensor sizes: [2, 152, 0]
2025-03-05 15:22:58.981844 test begin: paddle.broadcast_to(Tensor([2, 154, 0],"bool"), list[2,154,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 154, 0],"bool"), list[2,154,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 154, 7581].  Tensor sizes: [2, 154, 0]
2025-03-05 15:22:58.982378 test begin: paddle.broadcast_to(Tensor([2, 155, 0],"bool"), list[2,155,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 155, 0],"bool"), list[2,155,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 155, 7581].  Tensor sizes: [2, 155, 0]
2025-03-05 15:22:58.982916 test begin: paddle.broadcast_to(Tensor([2, 157, 0],"bool"), list[2,157,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 157, 0],"bool"), list[2,157,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 157, 5376].  Tensor sizes: [2, 157, 0]
2025-03-05 15:22:58.983455 test begin: paddle.broadcast_to(Tensor([2, 158, 0],"bool"), list[2,158,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 158, 0],"bool"), list[2,158,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 158, 11109].  Tensor sizes: [2, 158, 0]
2025-03-05 15:22:58.984009 test begin: paddle.broadcast_to(Tensor([2, 158, 0],"bool"), list[2,158,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 158, 0],"bool"), list[2,158,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 158, 3549].  Tensor sizes: [2, 158, 0]
2025-03-05 15:22:58.984538 test begin: paddle.broadcast_to(Tensor([2, 159, 0],"bool"), list[2,159,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 159, 0],"bool"), list[2,159,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 159, 12096].  Tensor sizes: [2, 159, 0]
2025-03-05 15:22:58.985109 test begin: paddle.broadcast_to(Tensor([2, 159, 0],"bool"), list[2,159,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 159, 0],"bool"), list[2,159,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 159, 4725].  Tensor sizes: [2, 159, 0]
2025-03-05 15:22:58.985644 test begin: paddle.broadcast_to(Tensor([2, 159, 0],"bool"), list[2,159,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 159, 0],"bool"), list[2,159,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 159, 6804].  Tensor sizes: [2, 159, 0]
2025-03-05 15:22:58.986191 test begin: paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 16, 10164].  Tensor sizes: [2, 16, 0]
2025-03-05 15:22:58.986788 test begin: paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 16, 11109].  Tensor sizes: [2, 16, 0]
2025-03-05 15:22:58.987316 test begin: paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 16, 2100].  Tensor sizes: [2, 16, 0]
2025-03-05 15:22:58.987858 test begin: paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 16, 2541].  Tensor sizes: [2, 16, 0]
2025-03-05 15:22:58.988398 test begin: paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 16, 3549].  Tensor sizes: [2, 16, 0]
2025-03-05 15:22:58.988934 test begin: paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 16, 4116].  Tensor sizes: [2, 16, 0]
2025-03-05 15:22:58.989459 test begin: paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 16, 6069].  Tensor sizes: [2, 16, 0]
2025-03-05 15:22:58.990008 test begin: paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 16, 6804].  Tensor sizes: [2, 16, 0]
2025-03-05 15:22:58.990546 test begin: paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 16, 8400].  Tensor sizes: [2, 16, 0]
2025-03-05 15:22:58.991092 test begin: paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 16, 0],"bool"), list[2,16,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 16, 9261].  Tensor sizes: [2, 16, 0]
2025-03-05 15:22:58.991617 test begin: paddle.broadcast_to(Tensor([2, 160, 0],"bool"), list[2,160,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 160, 0],"bool"), list[2,160,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 160, 10164].  Tensor sizes: [2, 160, 0]
2025-03-05 15:22:58.992161 test begin: paddle.broadcast_to(Tensor([2, 160, 0],"bool"), list[2,160,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 160, 0],"bool"), list[2,160,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 160, 6804].  Tensor sizes: [2, 160, 0]
2025-03-05 15:22:58.992720 test begin: paddle.broadcast_to(Tensor([2, 168, 0],"bool"), list[2,168,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 168, 0],"bool"), list[2,168,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 168, 8400].  Tensor sizes: [2, 168, 0]
2025-03-05 15:22:58.993264 test begin: paddle.broadcast_to(Tensor([2, 168, 0],"bool"), list[2,168,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 168, 0],"bool"), list[2,168,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 168, 9261].  Tensor sizes: [2, 168, 0]
2025-03-05 15:22:58.993798 test begin: paddle.broadcast_to(Tensor([2, 169, 0],"bool"), list[2,169,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 169, 0],"bool"), list[2,169,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 169, 12096].  Tensor sizes: [2, 169, 0]
2025-03-05 15:22:58.994325 test begin: paddle.broadcast_to(Tensor([2, 169, 0],"bool"), list[2,169,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 169, 0],"bool"), list[2,169,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 169, 3024].  Tensor sizes: [2, 169, 0]
2025-03-05 15:22:58.994849 test begin: paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 17, 10164].  Tensor sizes: [2, 17, 0]
2025-03-05 15:22:58.995393 test begin: paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 17, 11109].  Tensor sizes: [2, 17, 0]
2025-03-05 15:22:58.995936 test begin: paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 17, 2100].  Tensor sizes: [2, 17, 0]
2025-03-05 15:22:58.996470 test begin: paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 17, 2541].  Tensor sizes: [2, 17, 0]
2025-03-05 15:22:58.997017 test begin: paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 17, 3024].  Tensor sizes: [2, 17, 0]
2025-03-05 15:22:58.997538 test begin: paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 17, 4116].  Tensor sizes: [2, 17, 0]
2025-03-05 15:22:58.998076 test begin: paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 17, 5376].  Tensor sizes: [2, 17, 0]
2025-03-05 15:22:58.998615 test begin: paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 17, 6069].  Tensor sizes: [2, 17, 0]
2025-03-05 15:22:58.999159 test begin: paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 17, 6804].  Tensor sizes: [2, 17, 0]
2025-03-05 15:22:58.999743 test begin: paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 17, 7581].  Tensor sizes: [2, 17, 0]
2025-03-05 15:22:59.000276 test begin: paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 17, 0],"bool"), list[2,17,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 17, 9261].  Tensor sizes: [2, 17, 0]
2025-03-05 15:22:59.001262 test begin: paddle.broadcast_to(Tensor([2, 170, 0],"bool"), list[2,170,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 170, 0],"bool"), list[2,170,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 170, 6804].  Tensor sizes: [2, 170, 0]
2025-03-05 15:22:59.002039 test begin: paddle.broadcast_to(Tensor([2, 170, 0],"bool"), list[2,170,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 170, 0],"bool"), list[2,170,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 170, 8400].  Tensor sizes: [2, 170, 0]
2025-03-05 15:22:59.002645 test begin: paddle.broadcast_to(Tensor([2, 176, 0],"bool"), list[2,176,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 176, 0],"bool"), list[2,176,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 176, 5376].  Tensor sizes: [2, 176, 0]
2025-03-05 15:22:59.003224 test begin: paddle.broadcast_to(Tensor([2, 177, 0],"bool"), list[2,177,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 177, 0],"bool"), list[2,177,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 177, 3024].  Tensor sizes: [2, 177, 0]
2025-03-05 15:22:59.003783 test begin: paddle.broadcast_to(Tensor([2, 177, 0],"bool"), list[2,177,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 177, 0],"bool"), list[2,177,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 177, 4725].  Tensor sizes: [2, 177, 0]
2025-03-05 15:22:59.004312 test begin: paddle.broadcast_to(Tensor([2, 179, 0],"bool"), list[2,179,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 179, 0],"bool"), list[2,179,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 179, 6069].  Tensor sizes: [2, 179, 0]
2025-03-05 15:22:59.004840 test begin: paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 18, 10164].  Tensor sizes: [2, 18, 0]
2025-03-05 15:22:59.005358 test begin: paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 18, 11109].  Tensor sizes: [2, 18, 0]
2025-03-05 15:22:59.005895 test begin: paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 18, 12096].  Tensor sizes: [2, 18, 0]
2025-03-05 15:22:59.006406 test begin: paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 18, 2100].  Tensor sizes: [2, 18, 0]
2025-03-05 15:22:59.006923 test begin: paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 18, 3024].  Tensor sizes: [2, 18, 0]
2025-03-05 15:22:59.007423 test begin: paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 18, 4725].  Tensor sizes: [2, 18, 0]
2025-03-05 15:22:59.007997 test begin: paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 18, 5376].  Tensor sizes: [2, 18, 0]
2025-03-05 15:22:59.008613 test begin: paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 18, 6069].  Tensor sizes: [2, 18, 0]
2025-03-05 15:22:59.009498 test begin: paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 18, 7581].  Tensor sizes: [2, 18, 0]
2025-03-05 15:22:59.010078 test begin: paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 18, 0],"bool"), list[2,18,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 18, 9261].  Tensor sizes: [2, 18, 0]
2025-03-05 15:22:59.010602 test begin: paddle.broadcast_to(Tensor([2, 184, 0],"bool"), list[2,184,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 184, 0],"bool"), list[2,184,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 184, 3549].  Tensor sizes: [2, 184, 0]
2025-03-05 15:22:59.011187 test begin: paddle.broadcast_to(Tensor([2, 185, 0],"bool"), list[2,185,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 185, 0],"bool"), list[2,185,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 185, 2541].  Tensor sizes: [2, 185, 0]
2025-03-05 15:22:59.011717 test begin: paddle.broadcast_to(Tensor([2, 189, 0],"bool"), list[2,189,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 189, 0],"bool"), list[2,189,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 189, 2100].  Tensor sizes: [2, 189, 0]
2025-03-05 15:22:59.012228 test begin: paddle.broadcast_to(Tensor([2, 189, 0],"bool"), list[2,189,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 189, 0],"bool"), list[2,189,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 189, 5376].  Tensor sizes: [2, 189, 0]
2025-03-05 15:22:59.012761 test begin: paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 19, 10164].  Tensor sizes: [2, 19, 0]
2025-03-05 15:22:59.013290 test begin: paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 19, 11109].  Tensor sizes: [2, 19, 0]
2025-03-05 15:22:59.013809 test begin: paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 19, 12096].  Tensor sizes: [2, 19, 0]
2025-03-05 15:22:59.014325 test begin: paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 19, 2100].  Tensor sizes: [2, 19, 0]
2025-03-05 15:22:59.014840 test begin: paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 19, 2541].  Tensor sizes: [2, 19, 0]
2025-03-05 15:22:59.015357 test begin: paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 19, 3549].  Tensor sizes: [2, 19, 0]
2025-03-05 15:22:59.015882 test begin: paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 19, 4725].  Tensor sizes: [2, 19, 0]
2025-03-05 15:22:59.016381 test begin: paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 19, 5376].  Tensor sizes: [2, 19, 0]
2025-03-05 15:22:59.016887 test begin: paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 19, 6804].  Tensor sizes: [2, 19, 0]
2025-03-05 15:22:59.017388 test begin: paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 19, 7581].  Tensor sizes: [2, 19, 0]
2025-03-05 15:22:59.017905 test begin: paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 19, 8400].  Tensor sizes: [2, 19, 0]
2025-03-05 15:22:59.018410 test begin: paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 19, 0],"bool"), list[2,19,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 19, 9261].  Tensor sizes: [2, 19, 0]
2025-03-05 15:22:59.018925 test begin: paddle.broadcast_to(Tensor([2, 190, 0],"bool"), list[2,190,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 190, 0],"bool"), list[2,190,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 190, 12096].  Tensor sizes: [2, 190, 0]
2025-03-05 15:22:59.019445 test begin: paddle.broadcast_to(Tensor([2, 194, 0],"bool"), list[2,194,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 194, 0],"bool"), list[2,194,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 194, 6804].  Tensor sizes: [2, 194, 0]
2025-03-05 15:22:59.019961 test begin: paddle.broadcast_to(Tensor([2, 194, 0],"bool"), list[2,194,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 194, 0],"bool"), list[2,194,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 194, 7581].  Tensor sizes: [2, 194, 0]
2025-03-05 15:22:59.020471 test begin: paddle.broadcast_to(Tensor([2, 196, 0],"bool"), list[2,196,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 196, 0],"bool"), list[2,196,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 196, 4116].  Tensor sizes: [2, 196, 0]
2025-03-05 15:22:59.021000 test begin: paddle.broadcast_to(Tensor([2, 196, 0],"bool"), list[2,196,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 196, 0],"bool"), list[2,196,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 196, 5376].  Tensor sizes: [2, 196, 0]
2025-03-05 15:22:59.021501 test begin: paddle.broadcast_to(Tensor([2, 197, 0],"bool"), list[2,197,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 197, 0],"bool"), list[2,197,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 197, 3549].  Tensor sizes: [2, 197, 0]
2025-03-05 15:22:59.022022 test begin: paddle.broadcast_to(Tensor([2, 2, 0],"bool"), list[2,2,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 2, 0],"bool"), list[2,2,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 2, 10164].  Tensor sizes: [2, 2, 0]
2025-03-05 15:22:59.022530 test begin: paddle.broadcast_to(Tensor([2, 2, 0],"bool"), list[2,2,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 2, 0],"bool"), list[2,2,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 2, 4725].  Tensor sizes: [2, 2, 0]
2025-03-05 15:22:59.023048 test begin: paddle.broadcast_to(Tensor([2, 2, 0],"float32"), list[3,2,2,4,], )

[torch error] paddle.broadcast_to(Tensor([2, 2, 0],"float32"), list[3,2,2,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 2, 2, 4].  Tensor sizes: [2, 2, 0]
2025-03-05 15:22:59.023552 test begin: paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 20, 10164].  Tensor sizes: [2, 20, 0]
2025-03-05 15:22:59.024070 test begin: paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 20, 2100].  Tensor sizes: [2, 20, 0]
2025-03-05 15:22:59.024570 test begin: paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 20, 3024].  Tensor sizes: [2, 20, 0]
2025-03-05 15:22:59.025207 test begin: paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 20, 4116].  Tensor sizes: [2, 20, 0]
2025-03-05 15:22:59.026483 test begin: paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 20, 4725].  Tensor sizes: [2, 20, 0]
2025-03-05 15:22:59.027210 test begin: paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 20, 5376].  Tensor sizes: [2, 20, 0]
2025-03-05 15:22:59.027867 test begin: paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 20, 6804].  Tensor sizes: [2, 20, 0]
2025-03-05 15:22:59.028498 test begin: paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 20, 0],"bool"), list[2,20,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 20, 8400].  Tensor sizes: [2, 20, 0]
2025-03-05 15:22:59.029198 test begin: paddle.broadcast_to(Tensor([2, 201, 0],"bool"), list[2,201,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 201, 0],"bool"), list[2,201,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 201, 12096].  Tensor sizes: [2, 201, 0]
2025-03-05 15:22:59.029808 test begin: paddle.broadcast_to(Tensor([2, 201, 0],"bool"), list[2,201,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 201, 0],"bool"), list[2,201,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 201, 4725].  Tensor sizes: [2, 201, 0]
2025-03-05 15:22:59.030513 test begin: paddle.broadcast_to(Tensor([2, 204, 0],"bool"), list[2,204,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 204, 0],"bool"), list[2,204,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 204, 2100].  Tensor sizes: [2, 204, 0]
2025-03-05 15:22:59.031178 test begin: paddle.broadcast_to(Tensor([2, 207, 0],"bool"), list[2,207,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 207, 0],"bool"), list[2,207,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 207, 4725].  Tensor sizes: [2, 207, 0]
2025-03-05 15:22:59.031820 test begin: paddle.broadcast_to(Tensor([2, 207, 0],"bool"), list[2,207,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 207, 0],"bool"), list[2,207,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 207, 7581].  Tensor sizes: [2, 207, 0]
2025-03-05 15:22:59.032459 test begin: paddle.broadcast_to(Tensor([2, 208, 0],"bool"), list[2,208,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 208, 0],"bool"), list[2,208,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 208, 4725].  Tensor sizes: [2, 208, 0]
2025-03-05 15:22:59.033090 test begin: paddle.broadcast_to(Tensor([2, 209, 0],"bool"), list[2,209,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 209, 0],"bool"), list[2,209,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 209, 2100].  Tensor sizes: [2, 209, 0]
2025-03-05 15:22:59.033705 test begin: paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 21, 2541].  Tensor sizes: [2, 21, 0]
2025-03-05 15:22:59.034328 test begin: paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 21, 3024].  Tensor sizes: [2, 21, 0]
2025-03-05 15:22:59.034946 test begin: paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 21, 3549].  Tensor sizes: [2, 21, 0]
2025-03-05 15:22:59.035563 test begin: paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 21, 4116].  Tensor sizes: [2, 21, 0]
2025-03-05 15:22:59.036202 test begin: paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 21, 4725].  Tensor sizes: [2, 21, 0]
2025-03-05 15:22:59.036879 test begin: paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 21, 5376].  Tensor sizes: [2, 21, 0]
2025-03-05 15:22:59.037525 test begin: paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 21, 8400].  Tensor sizes: [2, 21, 0]
2025-03-05 15:22:59.038178 test begin: paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 21, 0],"bool"), list[2,21,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 21, 9261].  Tensor sizes: [2, 21, 0]
2025-03-05 15:22:59.038815 test begin: paddle.broadcast_to(Tensor([2, 210, 0],"bool"), list[2,210,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 210, 0],"bool"), list[2,210,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 210, 9261].  Tensor sizes: [2, 210, 0]
2025-03-05 15:22:59.039446 test begin: paddle.broadcast_to(Tensor([2, 218, 0],"bool"), list[2,218,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 218, 0],"bool"), list[2,218,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 218, 6804].  Tensor sizes: [2, 218, 0]
2025-03-05 15:22:59.040077 test begin: paddle.broadcast_to(Tensor([2, 218, 0],"bool"), list[2,218,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 218, 0],"bool"), list[2,218,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 218, 7581].  Tensor sizes: [2, 218, 0]
2025-03-05 15:22:59.040715 test begin: paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 22, 10164].  Tensor sizes: [2, 22, 0]
2025-03-05 15:22:59.041317 test begin: paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 22, 12096].  Tensor sizes: [2, 22, 0]
2025-03-05 15:22:59.041930 test begin: paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 22, 2100].  Tensor sizes: [2, 22, 0]
2025-03-05 15:22:59.042604 test begin: paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 22, 2541].  Tensor sizes: [2, 22, 0]
2025-03-05 15:22:59.043246 test begin: paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 22, 3024].  Tensor sizes: [2, 22, 0]
2025-03-05 15:22:59.043895 test begin: paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 22, 3549].  Tensor sizes: [2, 22, 0]
2025-03-05 15:22:59.044508 test begin: paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 22, 4116].  Tensor sizes: [2, 22, 0]
2025-03-05 15:22:59.045134 test begin: paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 22, 4725].  Tensor sizes: [2, 22, 0]
2025-03-05 15:22:59.045763 test begin: paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 22, 5376].  Tensor sizes: [2, 22, 0]
2025-03-05 15:22:59.046382 test begin: paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 22, 6069].  Tensor sizes: [2, 22, 0]
2025-03-05 15:22:59.047006 test begin: paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 22, 7581].  Tensor sizes: [2, 22, 0]
2025-03-05 15:22:59.047656 test begin: paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 22, 0],"bool"), list[2,22,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 22, 8400].  Tensor sizes: [2, 22, 0]
2025-03-05 15:22:59.048262 test begin: paddle.broadcast_to(Tensor([2, 220, 0],"bool"), list[2,220,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 220, 0],"bool"), list[2,220,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 220, 12096].  Tensor sizes: [2, 220, 0]
2025-03-05 15:22:59.048911 test begin: paddle.broadcast_to(Tensor([2, 222, 0],"bool"), list[2,222,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 222, 0],"bool"), list[2,222,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 222, 4116].  Tensor sizes: [2, 222, 0]
2025-03-05 15:22:59.049525 test begin: paddle.broadcast_to(Tensor([2, 224, 0],"bool"), list[2,224,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 224, 0],"bool"), list[2,224,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 224, 3549].  Tensor sizes: [2, 224, 0]
2025-03-05 15:22:59.050140 test begin: paddle.broadcast_to(Tensor([2, 227, 0],"bool"), list[2,227,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 227, 0],"bool"), list[2,227,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 227, 5376].  Tensor sizes: [2, 227, 0]
2025-03-05 15:22:59.050773 test begin: paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 23, 11109].  Tensor sizes: [2, 23, 0]
2025-03-05 15:22:59.051398 test begin: paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 23, 2100].  Tensor sizes: [2, 23, 0]
2025-03-05 15:22:59.051984 test begin: paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 23, 2541].  Tensor sizes: [2, 23, 0]
2025-03-05 15:22:59.052510 test begin: paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 23, 3024].  Tensor sizes: [2, 23, 0]
2025-03-05 15:22:59.053029 test begin: paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 23, 4116].  Tensor sizes: [2, 23, 0]
2025-03-05 15:22:59.053532 test begin: paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 23, 4725].  Tensor sizes: [2, 23, 0]
2025-03-05 15:22:59.054040 test begin: paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 23, 5376].  Tensor sizes: [2, 23, 0]
2025-03-05 15:22:59.054550 test begin: paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 23, 7581].  Tensor sizes: [2, 23, 0]
2025-03-05 15:22:59.055060 test begin: paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 23, 0],"bool"), list[2,23,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 23, 8400].  Tensor sizes: [2, 23, 0]
2025-03-05 15:22:59.055569 test begin: paddle.broadcast_to(Tensor([2, 239, 0],"bool"), list[2,239,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 239, 0],"bool"), list[2,239,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 239, 6069].  Tensor sizes: [2, 239, 0]
2025-03-05 15:22:59.056090 test begin: paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 24, 10164].  Tensor sizes: [2, 24, 0]
2025-03-05 15:22:59.056610 test begin: paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 24, 11109].  Tensor sizes: [2, 24, 0]
2025-03-05 15:22:59.057123 test begin: paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 24, 12096].  Tensor sizes: [2, 24, 0]
2025-03-05 15:22:59.057627 test begin: paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 24, 2541].  Tensor sizes: [2, 24, 0]
2025-03-05 15:22:59.058132 test begin: paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 24, 3024].  Tensor sizes: [2, 24, 0]
2025-03-05 15:22:59.058681 test begin: paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 24, 3549].  Tensor sizes: [2, 24, 0]
2025-03-05 15:22:59.059186 test begin: paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 24, 4116].  Tensor sizes: [2, 24, 0]
2025-03-05 15:22:59.059693 test begin: paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 24, 4725].  Tensor sizes: [2, 24, 0]
2025-03-05 15:22:59.060185 test begin: paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 24, 6804].  Tensor sizes: [2, 24, 0]
2025-03-05 15:22:59.060707 test begin: paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 24, 8400].  Tensor sizes: [2, 24, 0]
2025-03-05 15:22:59.061197 test begin: paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 24, 0],"bool"), list[2,24,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 24, 9261].  Tensor sizes: [2, 24, 0]
2025-03-05 15:22:59.061702 test begin: paddle.broadcast_to(Tensor([2, 240, 0],"bool"), list[2,240,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 240, 0],"bool"), list[2,240,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 240, 9261].  Tensor sizes: [2, 240, 0]
2025-03-05 15:22:59.062197 test begin: paddle.broadcast_to(Tensor([2, 249, 0],"bool"), list[2,249,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 249, 0],"bool"), list[2,249,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 249, 12096].  Tensor sizes: [2, 249, 0]
2025-03-05 15:22:59.062705 test begin: paddle.broadcast_to(Tensor([2, 249, 0],"bool"), list[2,249,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 249, 0],"bool"), list[2,249,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 249, 7581].  Tensor sizes: [2, 249, 0]
2025-03-05 15:22:59.063199 test begin: paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 25, 10164].  Tensor sizes: [2, 25, 0]
2025-03-05 15:22:59.063726 test begin: paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 25, 12096].  Tensor sizes: [2, 25, 0]
2025-03-05 15:22:59.064239 test begin: paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 25, 2541].  Tensor sizes: [2, 25, 0]
2025-03-05 15:22:59.064742 test begin: paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 25, 3549].  Tensor sizes: [2, 25, 0]
2025-03-05 15:22:59.065251 test begin: paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 25, 4116].  Tensor sizes: [2, 25, 0]
2025-03-05 15:22:59.065750 test begin: paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 25, 5376].  Tensor sizes: [2, 25, 0]
2025-03-05 15:22:59.066260 test begin: paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 25, 6069].  Tensor sizes: [2, 25, 0]
2025-03-05 15:22:59.066776 test begin: paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 25, 6804].  Tensor sizes: [2, 25, 0]
2025-03-05 15:22:59.067281 test begin: paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 25, 7581].  Tensor sizes: [2, 25, 0]
2025-03-05 15:22:59.067785 test begin: paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 25, 8400].  Tensor sizes: [2, 25, 0]
2025-03-05 15:22:59.068279 test begin: paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 25, 0],"bool"), list[2,25,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 25, 9261].  Tensor sizes: [2, 25, 0]
2025-03-05 15:22:59.068815 test begin: paddle.broadcast_to(Tensor([2, 255, 0],"bool"), list[2,255,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 255, 0],"bool"), list[2,255,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 255, 12096].  Tensor sizes: [2, 255, 0]
2025-03-05 15:22:59.069332 test begin: paddle.broadcast_to(Tensor([2, 255, 0],"bool"), list[2,255,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 255, 0],"bool"), list[2,255,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 255, 9261].  Tensor sizes: [2, 255, 0]
2025-03-05 15:22:59.069904 test begin: paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 26, 10164].  Tensor sizes: [2, 26, 0]
2025-03-05 15:22:59.070415 test begin: paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 26, 12096].  Tensor sizes: [2, 26, 0]
2025-03-05 15:22:59.070930 test begin: paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 26, 2100].  Tensor sizes: [2, 26, 0]
2025-03-05 15:22:59.071428 test begin: paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 26, 3024].  Tensor sizes: [2, 26, 0]
2025-03-05 15:22:59.071936 test begin: paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 26, 4116].  Tensor sizes: [2, 26, 0]
2025-03-05 15:22:59.072450 test begin: paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 26, 4725].  Tensor sizes: [2, 26, 0]
2025-03-05 15:22:59.072971 test begin: paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 26, 5376].  Tensor sizes: [2, 26, 0]
2025-03-05 15:22:59.073491 test begin: paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 26, 6069].  Tensor sizes: [2, 26, 0]
2025-03-05 15:22:59.074016 test begin: paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 26, 6804].  Tensor sizes: [2, 26, 0]
2025-03-05 15:22:59.074520 test begin: paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 26, 7581].  Tensor sizes: [2, 26, 0]
2025-03-05 15:22:59.075029 test begin: paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 26, 8400].  Tensor sizes: [2, 26, 0]
2025-03-05 15:22:59.075524 test begin: paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 26, 0],"bool"), list[2,26,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 26, 9261].  Tensor sizes: [2, 26, 0]
2025-03-05 15:22:59.076026 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 10164].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.076525 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 11109].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.077048 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 12096].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.077547 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 2100].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.078066 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 2541].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.078573 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 3024].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.079104 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 3549].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.079610 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 4116].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.080170 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 4725].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.080756 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 5376].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.081297 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 6069].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.081814 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 6804].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.082323 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 7581].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.082856 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 8400].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.083390 test begin: paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 27, 0],"bool"), list[2,27,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 27, 9261].  Tensor sizes: [2, 27, 0]
2025-03-05 15:22:59.083909 test begin: paddle.broadcast_to(Tensor([2, 275, 0],"bool"), list[2,275,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 275, 0],"bool"), list[2,275,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 275, 12096].  Tensor sizes: [2, 275, 0]
2025-03-05 15:22:59.084425 test begin: paddle.broadcast_to(Tensor([2, 275, 0],"bool"), list[2,275,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 275, 0],"bool"), list[2,275,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 275, 6069].  Tensor sizes: [2, 275, 0]
2025-03-05 15:22:59.084959 test begin: paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 28, 10164].  Tensor sizes: [2, 28, 0]
2025-03-05 15:22:59.085476 test begin: paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 28, 2100].  Tensor sizes: [2, 28, 0]
2025-03-05 15:22:59.085997 test begin: paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 28, 3024].  Tensor sizes: [2, 28, 0]
2025-03-05 15:22:59.086492 test begin: paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 28, 3549].  Tensor sizes: [2, 28, 0]
2025-03-05 15:22:59.087011 test begin: paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 28, 4116].  Tensor sizes: [2, 28, 0]
2025-03-05 15:22:59.087511 test begin: paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 28, 4725].  Tensor sizes: [2, 28, 0]
2025-03-05 15:22:59.088066 test begin: paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 28, 5376].  Tensor sizes: [2, 28, 0]
2025-03-05 15:22:59.088596 test begin: paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 28, 6069].  Tensor sizes: [2, 28, 0]
2025-03-05 15:22:59.089114 test begin: paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 28, 0],"bool"), list[2,28,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 28, 6804].  Tensor sizes: [2, 28, 0]
2025-03-05 15:22:59.089625 test begin: paddle.broadcast_to(Tensor([2, 284, 0],"bool"), list[2,284,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 284, 0],"bool"), list[2,284,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 284, 8400].  Tensor sizes: [2, 284, 0]
2025-03-05 15:22:59.090131 test begin: paddle.broadcast_to(Tensor([2, 286, 0],"bool"), list[2,286,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 286, 0],"bool"), list[2,286,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 286, 4116].  Tensor sizes: [2, 286, 0]
2025-03-05 15:22:59.090635 test begin: paddle.broadcast_to(Tensor([2, 286, 0],"bool"), list[2,286,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 286, 0],"bool"), list[2,286,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 286, 8400].  Tensor sizes: [2, 286, 0]
2025-03-05 15:22:59.091151 test begin: paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 29, 10164].  Tensor sizes: [2, 29, 0]
2025-03-05 15:22:59.091656 test begin: paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 29, 11109].  Tensor sizes: [2, 29, 0]
2025-03-05 15:22:59.092171 test begin: paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 29, 2100].  Tensor sizes: [2, 29, 0]
2025-03-05 15:22:59.092694 test begin: paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 29, 2541].  Tensor sizes: [2, 29, 0]
2025-03-05 15:22:59.093192 test begin: paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 29, 3024].  Tensor sizes: [2, 29, 0]
2025-03-05 15:22:59.094296 test begin: paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 29, 3549].  Tensor sizes: [2, 29, 0]
2025-03-05 15:22:59.095123 test begin: paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 29, 4116].  Tensor sizes: [2, 29, 0]
2025-03-05 15:22:59.095804 test begin: paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 29, 4725].  Tensor sizes: [2, 29, 0]
2025-03-05 15:22:59.096623 test begin: paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 29, 5376].  Tensor sizes: [2, 29, 0]
2025-03-05 15:22:59.097302 test begin: paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 29, 6069].  Tensor sizes: [2, 29, 0]
2025-03-05 15:22:59.097959 test begin: paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 29, 6804].  Tensor sizes: [2, 29, 0]
2025-03-05 15:22:59.098635 test begin: paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 29, 7581].  Tensor sizes: [2, 29, 0]
2025-03-05 15:22:59.099305 test begin: paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 29, 0],"bool"), list[2,29,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 29, 9261].  Tensor sizes: [2, 29, 0]
2025-03-05 15:22:59.099941 test begin: paddle.broadcast_to(Tensor([2, 293, 0],"bool"), list[2,293,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 293, 0],"bool"), list[2,293,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 293, 10164].  Tensor sizes: [2, 293, 0]
2025-03-05 15:22:59.100579 test begin: paddle.broadcast_to(Tensor([2, 296, 0],"bool"), list[2,296,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 296, 0],"bool"), list[2,296,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 296, 9261].  Tensor sizes: [2, 296, 0]
2025-03-05 15:22:59.101216 test begin: paddle.broadcast_to(Tensor([2, 3, 0],"bool"), list[2,3,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 3, 0],"bool"), list[2,3,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 3, 2100].  Tensor sizes: [2, 3, 0]
2025-03-05 15:22:59.101841 test begin: paddle.broadcast_to(Tensor([2, 3, 0],"bool"), list[2,3,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 3, 0],"bool"), list[2,3,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 3, 2541].  Tensor sizes: [2, 3, 0]
2025-03-05 15:22:59.102486 test begin: paddle.broadcast_to(Tensor([2, 3, 0],"bool"), list[2,3,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 3, 0],"bool"), list[2,3,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 3, 4116].  Tensor sizes: [2, 3, 0]
2025-03-05 15:22:59.103130 test begin: paddle.broadcast_to(Tensor([2, 3, 0],"bool"), list[2,3,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 3, 0],"bool"), list[2,3,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 3, 6069].  Tensor sizes: [2, 3, 0]
2025-03-05 15:22:59.103767 test begin: paddle.broadcast_to(Tensor([2, 3, 0],"bool"), list[2,3,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 3, 0],"bool"), list[2,3,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 3, 6804].  Tensor sizes: [2, 3, 0]
2025-03-05 15:22:59.104390 test begin: paddle.broadcast_to(Tensor([2, 3, 0],"bool"), list[2,3,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 3, 0],"bool"), list[2,3,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 3, 9261].  Tensor sizes: [2, 3, 0]
2025-03-05 15:22:59.105054 test begin: paddle.broadcast_to(Tensor([2, 3, 0],"float64"), tuple(2,3,4,), )

[torch error] paddle.broadcast_to(Tensor([2, 3, 0],"float64"), tuple(2,3,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 3, 4].  Tensor sizes: [2, 3, 0]
2025-03-05 15:22:59.105718 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 10164].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.106377 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 11109].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.107015 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 12096].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.107651 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 2100].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.108296 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 2541].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.108942 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 3024].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.109572 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 3549].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.110212 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 4116].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.110847 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 4725].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.111482 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 5376].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.112143 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 6069].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.112800 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 6804].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.113426 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 7581].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.114059 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 8400].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.114701 test begin: paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 30, 0],"bool"), list[2,30,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 30, 9261].  Tensor sizes: [2, 30, 0]
2025-03-05 15:22:59.115355 test begin: paddle.broadcast_to(Tensor([2, 302, 0],"bfloat16"), tuple(2,302,768,), )

[torch error] paddle.broadcast_to(Tensor([2, 302, 0],"bfloat16"), tuple(2,302,768,), ) 
 The expanded size of the tensor (768) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 302, 768].  Tensor sizes: [2, 302, 0]
2025-03-05 15:22:59.116085 test begin: paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 31, 10164].  Tensor sizes: [2, 31, 0]
2025-03-05 15:22:59.116760 test begin: paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 31, 11109].  Tensor sizes: [2, 31, 0]
2025-03-05 15:22:59.117433 test begin: paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 31, 12096].  Tensor sizes: [2, 31, 0]
2025-03-05 15:22:59.118087 test begin: paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 31, 2100].  Tensor sizes: [2, 31, 0]
2025-03-05 15:22:59.118813 test begin: paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 31, 2541].  Tensor sizes: [2, 31, 0]
2025-03-05 15:22:59.119460 test begin: paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 31, 3024].  Tensor sizes: [2, 31, 0]
2025-03-05 15:22:59.120108 test begin: paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 31, 3549].  Tensor sizes: [2, 31, 0]
2025-03-05 15:22:59.120759 test begin: paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 31, 4116].  Tensor sizes: [2, 31, 0]
2025-03-05 15:22:59.121402 test begin: paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 31, 4725].  Tensor sizes: [2, 31, 0]
2025-03-05 15:22:59.122093 test begin: paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 31, 5376].  Tensor sizes: [2, 31, 0]
2025-03-05 15:22:59.122761 test begin: paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 31, 6804].  Tensor sizes: [2, 31, 0]
2025-03-05 15:22:59.123425 test begin: paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 31, 7581].  Tensor sizes: [2, 31, 0]
2025-03-05 15:22:59.124063 test begin: paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 31, 8400].  Tensor sizes: [2, 31, 0]
2025-03-05 15:22:59.124705 test begin: paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 31, 0],"bool"), list[2,31,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 31, 9261].  Tensor sizes: [2, 31, 0]
2025-03-05 15:22:59.125338 test begin: paddle.broadcast_to(Tensor([2, 319, 0],"bool"), list[2,319,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 319, 0],"bool"), list[2,319,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 319, 2541].  Tensor sizes: [2, 319, 0]
2025-03-05 15:22:59.125992 test begin: paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 32, 10164].  Tensor sizes: [2, 32, 0]
2025-03-05 15:22:59.126635 test begin: paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 32, 11109].  Tensor sizes: [2, 32, 0]
2025-03-05 15:22:59.127384 test begin: paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 32, 12096].  Tensor sizes: [2, 32, 0]
2025-03-05 15:22:59.128041 test begin: paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 32, 2100].  Tensor sizes: [2, 32, 0]
2025-03-05 15:22:59.128754 test begin: paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 32, 2541].  Tensor sizes: [2, 32, 0]
2025-03-05 15:22:59.129399 test begin: paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 32, 3024].  Tensor sizes: [2, 32, 0]
2025-03-05 15:22:59.130060 test begin: paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 32, 3549].  Tensor sizes: [2, 32, 0]
2025-03-05 15:22:59.130705 test begin: paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 32, 4116].  Tensor sizes: [2, 32, 0]
2025-03-05 15:22:59.131363 test begin: paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 32, 4725].  Tensor sizes: [2, 32, 0]
2025-03-05 15:22:59.132009 test begin: paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 32, 6069].  Tensor sizes: [2, 32, 0]
2025-03-05 15:22:59.132651 test begin: paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 32, 6804].  Tensor sizes: [2, 32, 0]
2025-03-05 15:22:59.133301 test begin: paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 32, 0],"bool"), list[2,32,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 32, 8400].  Tensor sizes: [2, 32, 0]
2025-03-05 15:22:59.133969 test begin: paddle.broadcast_to(Tensor([2, 324, 0],"bool"), list[2,324,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 324, 0],"bool"), list[2,324,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 324, 6804].  Tensor sizes: [2, 324, 0]
2025-03-05 15:22:59.134614 test begin: paddle.broadcast_to(Tensor([2, 329, 0],"bool"), list[2,329,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 329, 0],"bool"), list[2,329,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 329, 3549].  Tensor sizes: [2, 329, 0]
2025-03-05 15:22:59.135255 test begin: paddle.broadcast_to(Tensor([2, 329, 0],"bool"), list[2,329,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 329, 0],"bool"), list[2,329,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 329, 4725].  Tensor sizes: [2, 329, 0]
2025-03-05 15:22:59.135887 test begin: paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 33, 11109].  Tensor sizes: [2, 33, 0]
2025-03-05 15:22:59.136513 test begin: paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 33, 12096].  Tensor sizes: [2, 33, 0]
2025-03-05 15:22:59.137161 test begin: paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 33, 2541].  Tensor sizes: [2, 33, 0]
2025-03-05 15:22:59.137804 test begin: paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 33, 3549].  Tensor sizes: [2, 33, 0]
2025-03-05 15:22:59.138458 test begin: paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 33, 4725].  Tensor sizes: [2, 33, 0]
2025-03-05 15:22:59.139112 test begin: paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 33, 6069].  Tensor sizes: [2, 33, 0]
2025-03-05 15:22:59.139750 test begin: paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 33, 6804].  Tensor sizes: [2, 33, 0]
2025-03-05 15:22:59.140381 test begin: paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 33, 7581].  Tensor sizes: [2, 33, 0]
2025-03-05 15:22:59.141036 test begin: paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 33, 8400].  Tensor sizes: [2, 33, 0]
2025-03-05 15:22:59.141669 test begin: paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 33, 0],"bool"), list[2,33,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 33, 9261].  Tensor sizes: [2, 33, 0]
2025-03-05 15:22:59.142300 test begin: paddle.broadcast_to(Tensor([2, 333, 0],"bool"), list[2,333,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 333, 0],"bool"), list[2,333,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 333, 8400].  Tensor sizes: [2, 333, 0]
2025-03-05 15:22:59.142928 test begin: paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 34, 10164].  Tensor sizes: [2, 34, 0]
2025-03-05 15:22:59.143564 test begin: paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 34, 11109].  Tensor sizes: [2, 34, 0]
2025-03-05 15:22:59.144209 test begin: paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 34, 12096].  Tensor sizes: [2, 34, 0]
2025-03-05 15:22:59.144887 test begin: paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 34, 2541].  Tensor sizes: [2, 34, 0]
2025-03-05 15:22:59.145523 test begin: paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 34, 3024].  Tensor sizes: [2, 34, 0]
2025-03-05 15:22:59.146180 test begin: paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 34, 3549].  Tensor sizes: [2, 34, 0]
2025-03-05 15:22:59.146850 test begin: paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 34, 4116].  Tensor sizes: [2, 34, 0]
2025-03-05 15:22:59.147484 test begin: paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 34, 4725].  Tensor sizes: [2, 34, 0]
2025-03-05 15:22:59.148127 test begin: paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 34, 5376].  Tensor sizes: [2, 34, 0]
2025-03-05 15:22:59.149211 test begin: paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 34, 6069].  Tensor sizes: [2, 34, 0]
2025-03-05 15:22:59.149974 test begin: paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 34, 6804].  Tensor sizes: [2, 34, 0]
2025-03-05 15:22:59.150540 test begin: paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 34, 0],"bool"), list[2,34,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 34, 9261].  Tensor sizes: [2, 34, 0]
2025-03-05 15:22:59.151098 test begin: paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 35, 10164].  Tensor sizes: [2, 35, 0]
2025-03-05 15:22:59.151652 test begin: paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 35, 11109].  Tensor sizes: [2, 35, 0]
2025-03-05 15:22:59.152177 test begin: paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 35, 2100].  Tensor sizes: [2, 35, 0]
2025-03-05 15:22:59.152722 test begin: paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 35, 2541].  Tensor sizes: [2, 35, 0]
2025-03-05 15:22:59.153239 test begin: paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 35, 3024].  Tensor sizes: [2, 35, 0]
2025-03-05 15:22:59.153758 test begin: paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 35, 3549].  Tensor sizes: [2, 35, 0]
2025-03-05 15:22:59.154280 test begin: paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 35, 4116].  Tensor sizes: [2, 35, 0]
2025-03-05 15:22:59.154791 test begin: paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 35, 4725].  Tensor sizes: [2, 35, 0]
2025-03-05 15:22:59.155348 test begin: paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 35, 5376].  Tensor sizes: [2, 35, 0]
2025-03-05 15:22:59.155990 test begin: paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 35, 6069].  Tensor sizes: [2, 35, 0]
2025-03-05 15:22:59.156646 test begin: paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 35, 6804].  Tensor sizes: [2, 35, 0]
2025-03-05 15:22:59.157190 test begin: paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 35, 7581].  Tensor sizes: [2, 35, 0]
2025-03-05 15:22:59.157723 test begin: paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 35, 0],"bool"), list[2,35,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 35, 8400].  Tensor sizes: [2, 35, 0]
2025-03-05 15:22:59.158230 test begin: paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 36, 10164].  Tensor sizes: [2, 36, 0]
2025-03-05 15:22:59.158782 test begin: paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 36, 12096].  Tensor sizes: [2, 36, 0]
2025-03-05 15:22:59.159288 test begin: paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 36, 2100].  Tensor sizes: [2, 36, 0]
2025-03-05 15:22:59.160674 test begin: paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 36, 2541].  Tensor sizes: [2, 36, 0]
2025-03-05 15:22:59.161255 test begin: paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 36, 3549].  Tensor sizes: [2, 36, 0]
2025-03-05 15:22:59.161782 test begin: paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 36, 4725].  Tensor sizes: [2, 36, 0]
2025-03-05 15:22:59.162309 test begin: paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 36, 6069].  Tensor sizes: [2, 36, 0]
2025-03-05 15:22:59.162832 test begin: paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 36, 6804].  Tensor sizes: [2, 36, 0]
2025-03-05 15:22:59.163349 test begin: paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 36, 7581].  Tensor sizes: [2, 36, 0]
2025-03-05 15:22:59.163871 test begin: paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 36, 8400].  Tensor sizes: [2, 36, 0]
2025-03-05 15:22:59.164378 test begin: paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 36, 0],"bool"), list[2,36,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 36, 9261].  Tensor sizes: [2, 36, 0]
2025-03-05 15:22:59.164903 test begin: paddle.broadcast_to(Tensor([2, 369, 0],"bool"), list[2,369,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 369, 0],"bool"), list[2,369,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 369, 3549].  Tensor sizes: [2, 369, 0]
2025-03-05 15:22:59.165424 test begin: paddle.broadcast_to(Tensor([2, 369, 0],"bool"), list[2,369,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 369, 0],"bool"), list[2,369,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 369, 6069].  Tensor sizes: [2, 369, 0]
2025-03-05 15:22:59.165951 test begin: paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 37, 10164].  Tensor sizes: [2, 37, 0]
2025-03-05 15:22:59.166454 test begin: paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 37, 12096].  Tensor sizes: [2, 37, 0]
2025-03-05 15:22:59.167002 test begin: paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 37, 2100].  Tensor sizes: [2, 37, 0]
2025-03-05 15:22:59.167541 test begin: paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 37, 2541].  Tensor sizes: [2, 37, 0]
2025-03-05 15:22:59.168072 test begin: paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 37, 3024].  Tensor sizes: [2, 37, 0]
2025-03-05 15:22:59.168616 test begin: paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 37, 3549].  Tensor sizes: [2, 37, 0]
2025-03-05 15:22:59.169149 test begin: paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 37, 4725].  Tensor sizes: [2, 37, 0]
2025-03-05 15:22:59.169662 test begin: paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 37, 5376].  Tensor sizes: [2, 37, 0]
2025-03-05 15:22:59.170174 test begin: paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 37, 6069].  Tensor sizes: [2, 37, 0]
2025-03-05 15:22:59.170714 test begin: paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 37, 6804].  Tensor sizes: [2, 37, 0]
2025-03-05 15:22:59.171234 test begin: paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 37, 7581].  Tensor sizes: [2, 37, 0]
2025-03-05 15:22:59.171838 test begin: paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 37, 8400].  Tensor sizes: [2, 37, 0]
2025-03-05 15:22:59.172368 test begin: paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 37, 0],"bool"), list[2,37,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 37, 9261].  Tensor sizes: [2, 37, 0]
2025-03-05 15:22:59.172879 test begin: paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 38, 10164].  Tensor sizes: [2, 38, 0]
2025-03-05 15:22:59.173486 test begin: paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 38, 11109].  Tensor sizes: [2, 38, 0]
2025-03-05 15:22:59.174608 test begin: paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 38, 12096].  Tensor sizes: [2, 38, 0]
2025-03-05 15:22:59.175205 test begin: paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 38, 2100].  Tensor sizes: [2, 38, 0]
2025-03-05 15:22:59.175770 test begin: paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 38, 3024].  Tensor sizes: [2, 38, 0]
2025-03-05 15:22:59.176327 test begin: paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 38, 3549].  Tensor sizes: [2, 38, 0]
2025-03-05 15:22:59.176929 test begin: paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 38, 4116].  Tensor sizes: [2, 38, 0]
2025-03-05 15:22:59.177481 test begin: paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 38, 4725].  Tensor sizes: [2, 38, 0]
2025-03-05 15:22:59.178015 test begin: paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 38, 5376].  Tensor sizes: [2, 38, 0]
2025-03-05 15:22:59.178593 test begin: paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 38, 6804].  Tensor sizes: [2, 38, 0]
2025-03-05 15:22:59.179161 test begin: paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 38, 7581].  Tensor sizes: [2, 38, 0]
2025-03-05 15:22:59.179775 test begin: paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 38, 8400].  Tensor sizes: [2, 38, 0]
2025-03-05 15:22:59.180308 test begin: paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 38, 0],"bool"), list[2,38,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 38, 9261].  Tensor sizes: [2, 38, 0]
2025-03-05 15:22:59.180905 test begin: paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 39, 11109].  Tensor sizes: [2, 39, 0]
2025-03-05 15:22:59.181928 test begin: paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 39, 12096].  Tensor sizes: [2, 39, 0]
2025-03-05 15:22:59.182667 test begin: paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 39, 2541].  Tensor sizes: [2, 39, 0]
2025-03-05 15:22:59.183394 test begin: paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 39, 3024].  Tensor sizes: [2, 39, 0]
2025-03-05 15:22:59.184057 test begin: paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 39, 3549].  Tensor sizes: [2, 39, 0]
2025-03-05 15:22:59.184672 test begin: paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 39, 4116].  Tensor sizes: [2, 39, 0]
2025-03-05 15:22:59.185297 test begin: paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 39, 4725].  Tensor sizes: [2, 39, 0]
2025-03-05 15:22:59.185847 test begin: paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 39, 5376].  Tensor sizes: [2, 39, 0]
2025-03-05 15:22:59.186361 test begin: paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 39, 6804].  Tensor sizes: [2, 39, 0]
2025-03-05 15:22:59.186890 test begin: paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 39, 7581].  Tensor sizes: [2, 39, 0]
2025-03-05 15:22:59.187401 test begin: paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 39, 0],"bool"), list[2,39,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 39, 8400].  Tensor sizes: [2, 39, 0]
2025-03-05 15:22:59.187916 test begin: paddle.broadcast_to(Tensor([2, 4, 0],"bool"), list[2,4,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 4, 0],"bool"), list[2,4,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 4, 11109].  Tensor sizes: [2, 4, 0]
2025-03-05 15:22:59.188630 test begin: paddle.broadcast_to(Tensor([2, 4, 0],"bool"), list[2,4,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 4, 0],"bool"), list[2,4,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 4, 3549].  Tensor sizes: [2, 4, 0]
2025-03-05 15:22:59.189307 test begin: paddle.broadcast_to(Tensor([2, 4, 0],"bool"), list[2,4,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 4, 0],"bool"), list[2,4,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 4, 5376].  Tensor sizes: [2, 4, 0]
2025-03-05 15:22:59.189854 test begin: paddle.broadcast_to(Tensor([2, 4, 0],"int32"), list[2,4,5,], )

[torch error] paddle.broadcast_to(Tensor([2, 4, 0],"int32"), list[2,4,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 4, 5].  Tensor sizes: [2, 4, 0]
2025-03-05 15:22:59.190466 test begin: paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 40, 10164].  Tensor sizes: [2, 40, 0]
2025-03-05 15:22:59.190995 test begin: paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 40, 12096].  Tensor sizes: [2, 40, 0]
2025-03-05 15:22:59.191509 test begin: paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 40, 2100].  Tensor sizes: [2, 40, 0]
2025-03-05 15:22:59.192023 test begin: paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 40, 2541].  Tensor sizes: [2, 40, 0]
2025-03-05 15:22:59.192529 test begin: paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 40, 3024].  Tensor sizes: [2, 40, 0]
2025-03-05 15:22:59.193103 test begin: paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 40, 3549].  Tensor sizes: [2, 40, 0]
2025-03-05 15:22:59.194093 test begin: paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 40, 4116].  Tensor sizes: [2, 40, 0]
2025-03-05 15:22:59.194693 test begin: paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 40, 6069].  Tensor sizes: [2, 40, 0]
2025-03-05 15:22:59.195242 test begin: paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 40, 6804].  Tensor sizes: [2, 40, 0]
2025-03-05 15:22:59.195829 test begin: paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 40, 7581].  Tensor sizes: [2, 40, 0]
2025-03-05 15:22:59.196363 test begin: paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 40, 8400].  Tensor sizes: [2, 40, 0]
2025-03-05 15:22:59.196898 test begin: paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 40, 0],"bool"), list[2,40,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 40, 9261].  Tensor sizes: [2, 40, 0]
2025-03-05 15:22:59.197471 test begin: paddle.broadcast_to(Tensor([2, 400, 0],"bool"), list[2,400,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 400, 0],"bool"), list[2,400,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 400, 11109].  Tensor sizes: [2, 400, 0]
2025-03-05 15:22:59.198015 test begin: paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 41, 10164].  Tensor sizes: [2, 41, 0]
2025-03-05 15:22:59.198524 test begin: paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 41, 2100].  Tensor sizes: [2, 41, 0]
2025-03-05 15:22:59.199049 test begin: paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 41, 2541].  Tensor sizes: [2, 41, 0]
2025-03-05 15:22:59.199591 test begin: paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 41, 3024].  Tensor sizes: [2, 41, 0]
2025-03-05 15:22:59.200143 test begin: paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 41, 3549].  Tensor sizes: [2, 41, 0]
2025-03-05 15:22:59.200701 test begin: paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 41, 4116].  Tensor sizes: [2, 41, 0]
2025-03-05 15:22:59.201239 test begin: paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 41, 5376].  Tensor sizes: [2, 41, 0]
2025-03-05 15:22:59.201777 test begin: paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 41, 6069].  Tensor sizes: [2, 41, 0]
2025-03-05 15:22:59.202304 test begin: paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 41, 6804].  Tensor sizes: [2, 41, 0]
2025-03-05 15:22:59.202924 test begin: paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 41, 7581].  Tensor sizes: [2, 41, 0]
2025-03-05 15:22:59.203450 test begin: paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 41, 0],"bool"), list[2,41,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 41, 9261].  Tensor sizes: [2, 41, 0]
2025-03-05 15:22:59.203981 test begin: paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 42, 10164].  Tensor sizes: [2, 42, 0]
2025-03-05 15:22:59.204501 test begin: paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 42, 11109].  Tensor sizes: [2, 42, 0]
2025-03-05 15:22:59.205043 test begin: paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 42, 2541].  Tensor sizes: [2, 42, 0]
2025-03-05 15:22:59.205554 test begin: paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 42, 3024].  Tensor sizes: [2, 42, 0]
2025-03-05 15:22:59.206079 test begin: paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 42, 3549].  Tensor sizes: [2, 42, 0]
2025-03-05 15:22:59.206598 test begin: paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 42, 4116].  Tensor sizes: [2, 42, 0]
2025-03-05 15:22:59.207123 test begin: paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 42, 4725].  Tensor sizes: [2, 42, 0]
2025-03-05 15:22:59.207659 test begin: paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 42, 5376].  Tensor sizes: [2, 42, 0]
2025-03-05 15:22:59.208173 test begin: paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 42, 6069].  Tensor sizes: [2, 42, 0]
2025-03-05 15:22:59.208706 test begin: paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 42, 6804].  Tensor sizes: [2, 42, 0]
2025-03-05 15:22:59.209215 test begin: paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 42, 7581].  Tensor sizes: [2, 42, 0]
2025-03-05 15:22:59.209738 test begin: paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 42, 8400].  Tensor sizes: [2, 42, 0]
2025-03-05 15:22:59.210269 test begin: paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 42, 0],"bool"), list[2,42,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 42, 9261].  Tensor sizes: [2, 42, 0]
2025-03-05 15:22:59.210805 test begin: paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 43, 10164].  Tensor sizes: [2, 43, 0]
2025-03-05 15:22:59.211322 test begin: paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 43, 11109].  Tensor sizes: [2, 43, 0]
2025-03-05 15:22:59.211850 test begin: paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 43, 12096].  Tensor sizes: [2, 43, 0]
2025-03-05 15:22:59.212369 test begin: paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 43, 2100].  Tensor sizes: [2, 43, 0]
2025-03-05 15:22:59.212954 test begin: paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 43, 2541].  Tensor sizes: [2, 43, 0]
2025-03-05 15:22:59.213479 test begin: paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 43, 3024].  Tensor sizes: [2, 43, 0]
2025-03-05 15:22:59.214015 test begin: paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 43, 4116].  Tensor sizes: [2, 43, 0]
2025-03-05 15:22:59.214527 test begin: paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 43, 4725].  Tensor sizes: [2, 43, 0]
2025-03-05 15:22:59.215069 test begin: paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 43, 5376].  Tensor sizes: [2, 43, 0]
2025-03-05 15:22:59.215591 test begin: paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 43, 6069].  Tensor sizes: [2, 43, 0]
2025-03-05 15:22:59.216122 test begin: paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 43, 6804].  Tensor sizes: [2, 43, 0]
2025-03-05 15:22:59.216652 test begin: paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 43, 7581].  Tensor sizes: [2, 43, 0]
2025-03-05 15:22:59.217187 test begin: paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 43, 8400].  Tensor sizes: [2, 43, 0]
2025-03-05 15:22:59.217708 test begin: paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 43, 0],"bool"), list[2,43,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 43, 9261].  Tensor sizes: [2, 43, 0]
2025-03-05 15:22:59.218229 test begin: paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 44, 10164].  Tensor sizes: [2, 44, 0]
2025-03-05 15:22:59.218743 test begin: paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 44, 11109].  Tensor sizes: [2, 44, 0]
2025-03-05 15:22:59.219258 test begin: paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 44, 12096].  Tensor sizes: [2, 44, 0]
2025-03-05 15:22:59.219772 test begin: paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 44, 2541].  Tensor sizes: [2, 44, 0]
2025-03-05 15:22:59.220283 test begin: paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 44, 3024].  Tensor sizes: [2, 44, 0]
2025-03-05 15:22:59.220833 test begin: paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 44, 4725].  Tensor sizes: [2, 44, 0]
2025-03-05 15:22:59.221352 test begin: paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 44, 7581].  Tensor sizes: [2, 44, 0]
2025-03-05 15:22:59.221889 test begin: paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 44, 8400].  Tensor sizes: [2, 44, 0]
2025-03-05 15:22:59.222406 test begin: paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 44, 0],"bool"), list[2,44,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 44, 9261].  Tensor sizes: [2, 44, 0]
2025-03-05 15:22:59.222927 test begin: paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 45, 10164].  Tensor sizes: [2, 45, 0]
2025-03-05 15:22:59.223435 test begin: paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 45, 11109].  Tensor sizes: [2, 45, 0]
2025-03-05 15:22:59.223957 test begin: paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 45, 2100].  Tensor sizes: [2, 45, 0]
2025-03-05 15:22:59.224480 test begin: paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 45, 2541].  Tensor sizes: [2, 45, 0]
2025-03-05 15:22:59.225017 test begin: paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 45, 3024].  Tensor sizes: [2, 45, 0]
2025-03-05 15:22:59.225539 test begin: paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 45, 3549].  Tensor sizes: [2, 45, 0]
2025-03-05 15:22:59.226067 test begin: paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 45, 4116].  Tensor sizes: [2, 45, 0]
2025-03-05 15:22:59.226596 test begin: paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 45, 4725].  Tensor sizes: [2, 45, 0]
2025-03-05 15:22:59.227118 test begin: paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 45, 5376].  Tensor sizes: [2, 45, 0]
2025-03-05 15:22:59.227628 test begin: paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 45, 6804].  Tensor sizes: [2, 45, 0]
2025-03-05 15:22:59.228150 test begin: paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 45, 7581].  Tensor sizes: [2, 45, 0]
2025-03-05 15:22:59.228672 test begin: paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 45, 8400].  Tensor sizes: [2, 45, 0]
2025-03-05 15:22:59.229190 test begin: paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 45, 0],"bool"), list[2,45,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 45, 9261].  Tensor sizes: [2, 45, 0]
2025-03-05 15:22:59.229704 test begin: paddle.broadcast_to(Tensor([2, 46, 0],"bool"), list[2,46,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 46, 0],"bool"), list[2,46,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 46, 11109].  Tensor sizes: [2, 46, 0]
2025-03-05 15:22:59.230237 test begin: paddle.broadcast_to(Tensor([2, 46, 0],"bool"), list[2,46,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 46, 0],"bool"), list[2,46,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 46, 3024].  Tensor sizes: [2, 46, 0]
2025-03-05 15:22:59.230785 test begin: paddle.broadcast_to(Tensor([2, 46, 0],"bool"), list[2,46,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 46, 0],"bool"), list[2,46,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 46, 4116].  Tensor sizes: [2, 46, 0]
2025-03-05 15:22:59.231317 test begin: paddle.broadcast_to(Tensor([2, 46, 0],"bool"), list[2,46,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 46, 0],"bool"), list[2,46,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 46, 4725].  Tensor sizes: [2, 46, 0]
2025-03-05 15:22:59.231852 test begin: paddle.broadcast_to(Tensor([2, 46, 0],"bool"), list[2,46,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 46, 0],"bool"), list[2,46,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 46, 5376].  Tensor sizes: [2, 46, 0]
2025-03-05 15:22:59.232376 test begin: paddle.broadcast_to(Tensor([2, 46, 0],"bool"), list[2,46,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 46, 0],"bool"), list[2,46,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 46, 7581].  Tensor sizes: [2, 46, 0]
2025-03-05 15:22:59.232896 test begin: paddle.broadcast_to(Tensor([2, 46, 0],"bool"), list[2,46,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 46, 0],"bool"), list[2,46,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 46, 8400].  Tensor sizes: [2, 46, 0]
2025-03-05 15:22:59.233408 test begin: paddle.broadcast_to(Tensor([2, 461, 0],"bool"), list[2,461,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 461, 0],"bool"), list[2,461,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 461, 2541].  Tensor sizes: [2, 461, 0]
2025-03-05 15:22:59.233927 test begin: paddle.broadcast_to(Tensor([2, 461, 0],"bool"), list[2,461,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 461, 0],"bool"), list[2,461,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 461, 3549].  Tensor sizes: [2, 461, 0]
2025-03-05 15:22:59.234437 test begin: paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 47, 10164].  Tensor sizes: [2, 47, 0]
2025-03-05 15:22:59.234962 test begin: paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 47, 11109].  Tensor sizes: [2, 47, 0]
2025-03-05 15:22:59.235490 test begin: paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 47, 12096].  Tensor sizes: [2, 47, 0]
2025-03-05 15:22:59.236019 test begin: paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 47, 2100].  Tensor sizes: [2, 47, 0]
2025-03-05 15:22:59.236542 test begin: paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 47, 2541].  Tensor sizes: [2, 47, 0]
2025-03-05 15:22:59.237083 test begin: paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 47, 3024].  Tensor sizes: [2, 47, 0]
2025-03-05 15:22:59.237621 test begin: paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 47, 3549].  Tensor sizes: [2, 47, 0]
2025-03-05 15:22:59.238137 test begin: paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 47, 4116].  Tensor sizes: [2, 47, 0]
2025-03-05 15:22:59.238662 test begin: paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 47, 4725].  Tensor sizes: [2, 47, 0]
2025-03-05 15:22:59.239214 test begin: paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 47, 6069].  Tensor sizes: [2, 47, 0]
2025-03-05 15:22:59.239743 test begin: paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 47, 6804].  Tensor sizes: [2, 47, 0]
2025-03-05 15:22:59.240291 test begin: paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 47, 7581].  Tensor sizes: [2, 47, 0]
2025-03-05 15:22:59.240820 test begin: paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 47, 8400].  Tensor sizes: [2, 47, 0]
2025-03-05 15:22:59.241343 test begin: paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 47, 0],"bool"), list[2,47,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 47, 9261].  Tensor sizes: [2, 47, 0]
2025-03-05 15:22:59.241866 test begin: paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 48, 10164].  Tensor sizes: [2, 48, 0]
2025-03-05 15:22:59.242396 test begin: paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 48, 11109].  Tensor sizes: [2, 48, 0]
2025-03-05 15:22:59.242946 test begin: paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 48, 2100].  Tensor sizes: [2, 48, 0]
2025-03-05 15:22:59.243460 test begin: paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 48, 2541].  Tensor sizes: [2, 48, 0]
2025-03-05 15:22:59.244030 test begin: paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 48, 3024].  Tensor sizes: [2, 48, 0]
2025-03-05 15:22:59.244554 test begin: paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 48, 3549].  Tensor sizes: [2, 48, 0]
2025-03-05 15:22:59.245077 test begin: paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 48, 4116].  Tensor sizes: [2, 48, 0]
2025-03-05 15:22:59.245611 test begin: paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 48, 4725].  Tensor sizes: [2, 48, 0]
2025-03-05 15:22:59.246144 test begin: paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 48, 5376].  Tensor sizes: [2, 48, 0]
2025-03-05 15:22:59.246660 test begin: paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 48, 6069].  Tensor sizes: [2, 48, 0]
2025-03-05 15:22:59.247179 test begin: paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 48, 6804].  Tensor sizes: [2, 48, 0]
2025-03-05 15:22:59.247700 test begin: paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 48, 0],"bool"), list[2,48,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 48, 7581].  Tensor sizes: [2, 48, 0]
2025-03-05 15:22:59.248217 test begin: paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 49, 11109].  Tensor sizes: [2, 49, 0]
2025-03-05 15:22:59.248734 test begin: paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 49, 12096].  Tensor sizes: [2, 49, 0]
2025-03-05 15:22:59.249253 test begin: paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 49, 2100].  Tensor sizes: [2, 49, 0]
2025-03-05 15:22:59.249774 test begin: paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 49, 3024].  Tensor sizes: [2, 49, 0]
2025-03-05 15:22:59.250300 test begin: paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 49, 3549].  Tensor sizes: [2, 49, 0]
2025-03-05 15:22:59.250889 test begin: paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 49, 4725].  Tensor sizes: [2, 49, 0]
2025-03-05 15:22:59.251424 test begin: paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 49, 5376].  Tensor sizes: [2, 49, 0]
2025-03-05 15:22:59.252022 test begin: paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 49, 6069].  Tensor sizes: [2, 49, 0]
2025-03-05 15:22:59.252552 test begin: paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 49, 6804].  Tensor sizes: [2, 49, 0]
2025-03-05 15:22:59.253104 test begin: paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 49, 8400].  Tensor sizes: [2, 49, 0]
2025-03-05 15:22:59.253637 test begin: paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 49, 0],"bool"), list[2,49,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 49, 9261].  Tensor sizes: [2, 49, 0]
2025-03-05 15:22:59.254169 test begin: paddle.broadcast_to(Tensor([2, 5, 0],"bool"), list[2,5,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 5, 0],"bool"), list[2,5,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 5, 12096].  Tensor sizes: [2, 5, 0]
2025-03-05 15:22:59.254690 test begin: paddle.broadcast_to(Tensor([2, 5, 0],"bool"), list[2,5,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 5, 0],"bool"), list[2,5,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 5, 2100].  Tensor sizes: [2, 5, 0]
2025-03-05 15:22:59.255210 test begin: paddle.broadcast_to(Tensor([2, 5, 0],"bool"), list[2,5,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 5, 0],"bool"), list[2,5,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 5, 3024].  Tensor sizes: [2, 5, 0]
2025-03-05 15:22:59.255727 test begin: paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 50, 10164].  Tensor sizes: [2, 50, 0]
2025-03-05 15:22:59.256243 test begin: paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 50, 12096].  Tensor sizes: [2, 50, 0]
2025-03-05 15:22:59.256767 test begin: paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 50, 2541].  Tensor sizes: [2, 50, 0]
2025-03-05 15:22:59.257285 test begin: paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 50, 3024].  Tensor sizes: [2, 50, 0]
2025-03-05 15:22:59.257802 test begin: paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 50, 4116].  Tensor sizes: [2, 50, 0]
2025-03-05 15:22:59.258328 test begin: paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 50, 4725].  Tensor sizes: [2, 50, 0]
2025-03-05 15:22:59.258900 test begin: paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 50, 5376].  Tensor sizes: [2, 50, 0]
2025-03-05 15:22:59.259451 test begin: paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 50, 6069].  Tensor sizes: [2, 50, 0]
2025-03-05 15:22:59.259996 test begin: paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 50, 8400].  Tensor sizes: [2, 50, 0]
2025-03-05 15:22:59.260517 test begin: paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 50, 0],"bool"), list[2,50,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 50, 9261].  Tensor sizes: [2, 50, 0]
2025-03-05 15:22:59.261091 test begin: paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 51, 10164].  Tensor sizes: [2, 51, 0]
2025-03-05 15:22:59.261632 test begin: paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 51, 2541].  Tensor sizes: [2, 51, 0]
2025-03-05 15:22:59.262153 test begin: paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 51, 3024].  Tensor sizes: [2, 51, 0]
2025-03-05 15:22:59.262687 test begin: paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 51, 3549].  Tensor sizes: [2, 51, 0]
2025-03-05 15:22:59.263202 test begin: paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 51, 4116].  Tensor sizes: [2, 51, 0]
2025-03-05 15:22:59.263746 test begin: paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 51, 5376].  Tensor sizes: [2, 51, 0]
2025-03-05 15:22:59.264274 test begin: paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 51, 6069].  Tensor sizes: [2, 51, 0]
2025-03-05 15:22:59.264820 test begin: paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 51, 7581].  Tensor sizes: [2, 51, 0]
2025-03-05 15:22:59.265343 test begin: paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 51, 0],"bool"), list[2,51,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 51, 8400].  Tensor sizes: [2, 51, 0]
2025-03-05 15:22:59.265879 test begin: paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 52, 11109].  Tensor sizes: [2, 52, 0]
2025-03-05 15:22:59.266424 test begin: paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 52, 2100].  Tensor sizes: [2, 52, 0]
2025-03-05 15:22:59.266948 test begin: paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 52, 2541].  Tensor sizes: [2, 52, 0]
2025-03-05 15:22:59.267454 test begin: paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 52, 3024].  Tensor sizes: [2, 52, 0]
2025-03-05 15:22:59.267970 test begin: paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 52, 4725].  Tensor sizes: [2, 52, 0]
2025-03-05 15:22:59.268474 test begin: paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 52, 6069].  Tensor sizes: [2, 52, 0]
2025-03-05 15:22:59.269008 test begin: paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 52, 6804].  Tensor sizes: [2, 52, 0]
2025-03-05 15:22:59.269513 test begin: paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 52, 8400].  Tensor sizes: [2, 52, 0]
2025-03-05 15:22:59.270051 test begin: paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 52, 0],"bool"), list[2,52,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 52, 9261].  Tensor sizes: [2, 52, 0]
2025-03-05 15:22:59.270593 test begin: paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 53, 11109].  Tensor sizes: [2, 53, 0]
2025-03-05 15:22:59.271121 test begin: paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 53, 12096].  Tensor sizes: [2, 53, 0]
2025-03-05 15:22:59.271636 test begin: paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 53, 2100].  Tensor sizes: [2, 53, 0]
2025-03-05 15:22:59.272152 test begin: paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 53, 3024].  Tensor sizes: [2, 53, 0]
2025-03-05 15:22:59.272683 test begin: paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 53, 4116].  Tensor sizes: [2, 53, 0]
2025-03-05 15:22:59.273209 test begin: paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 53, 4725].  Tensor sizes: [2, 53, 0]
2025-03-05 15:22:59.273717 test begin: paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 53, 5376].  Tensor sizes: [2, 53, 0]
2025-03-05 15:22:59.274227 test begin: paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 53, 7581].  Tensor sizes: [2, 53, 0]
2025-03-05 15:22:59.274732 test begin: paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 53, 0],"bool"), list[2,53,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 53, 8400].  Tensor sizes: [2, 53, 0]
2025-03-05 15:22:59.275251 test begin: paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 54, 12096].  Tensor sizes: [2, 54, 0]
2025-03-05 15:22:59.275773 test begin: paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 54, 2100].  Tensor sizes: [2, 54, 0]
2025-03-05 15:22:59.276307 test begin: paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 54, 2541].  Tensor sizes: [2, 54, 0]
2025-03-05 15:22:59.276894 test begin: paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 54, 3024].  Tensor sizes: [2, 54, 0]
2025-03-05 15:22:59.277427 test begin: paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 54, 3549].  Tensor sizes: [2, 54, 0]
2025-03-05 15:22:59.277967 test begin: paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 54, 4116].  Tensor sizes: [2, 54, 0]
2025-03-05 15:22:59.278495 test begin: paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 54, 5376].  Tensor sizes: [2, 54, 0]
2025-03-05 15:22:59.279043 test begin: paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 54, 6804].  Tensor sizes: [2, 54, 0]
2025-03-05 15:22:59.279564 test begin: paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 54, 7581].  Tensor sizes: [2, 54, 0]
2025-03-05 15:22:59.280106 test begin: paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 54, 0],"bool"), list[2,54,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 54, 8400].  Tensor sizes: [2, 54, 0]
2025-03-05 15:22:59.280666 test begin: paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 55, 3024].  Tensor sizes: [2, 55, 0]
2025-03-05 15:22:59.281211 test begin: paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 55, 3549].  Tensor sizes: [2, 55, 0]
2025-03-05 15:22:59.281761 test begin: paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 55, 4725].  Tensor sizes: [2, 55, 0]
2025-03-05 15:22:59.282331 test begin: paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 55, 5376].  Tensor sizes: [2, 55, 0]
2025-03-05 15:22:59.282886 test begin: paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 55, 6069].  Tensor sizes: [2, 55, 0]
2025-03-05 15:22:59.283417 test begin: paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 55, 6804].  Tensor sizes: [2, 55, 0]
2025-03-05 15:22:59.283948 test begin: paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 55, 7581].  Tensor sizes: [2, 55, 0]
2025-03-05 15:22:59.284700 test begin: paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 55, 0],"bool"), list[2,55,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 55, 8400].  Tensor sizes: [2, 55, 0]
2025-03-05 15:22:59.285405 test begin: paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 56, 12096].  Tensor sizes: [2, 56, 0]
2025-03-05 15:22:59.286056 test begin: paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 56, 2100].  Tensor sizes: [2, 56, 0]
2025-03-05 15:22:59.286621 test begin: paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 56, 2541].  Tensor sizes: [2, 56, 0]
2025-03-05 15:22:59.287155 test begin: paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 56, 3549].  Tensor sizes: [2, 56, 0]
2025-03-05 15:22:59.287689 test begin: paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 56, 4116].  Tensor sizes: [2, 56, 0]
2025-03-05 15:22:59.288225 test begin: paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 56, 4725].  Tensor sizes: [2, 56, 0]
2025-03-05 15:22:59.288818 test begin: paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 56, 5376].  Tensor sizes: [2, 56, 0]
2025-03-05 15:22:59.289363 test begin: paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 56, 7581].  Tensor sizes: [2, 56, 0]
2025-03-05 15:22:59.289897 test begin: paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 56, 0],"bool"), list[2,56,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 56, 8400].  Tensor sizes: [2, 56, 0]
2025-03-05 15:22:59.290409 test begin: paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 57, 10164].  Tensor sizes: [2, 57, 0]
2025-03-05 15:22:59.290928 test begin: paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 57, 11109].  Tensor sizes: [2, 57, 0]
2025-03-05 15:22:59.291442 test begin: paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 57, 12096].  Tensor sizes: [2, 57, 0]
2025-03-05 15:22:59.291966 test begin: paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 57, 2100].  Tensor sizes: [2, 57, 0]
2025-03-05 15:22:59.292482 test begin: paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 57, 2541].  Tensor sizes: [2, 57, 0]
2025-03-05 15:22:59.293075 test begin: paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 57, 3549].  Tensor sizes: [2, 57, 0]
2025-03-05 15:22:59.293989 test begin: paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 57, 4725].  Tensor sizes: [2, 57, 0]
2025-03-05 15:22:59.294635 test begin: paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 57, 5376].  Tensor sizes: [2, 57, 0]
2025-03-05 15:22:59.295228 test begin: paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 57, 6069].  Tensor sizes: [2, 57, 0]
2025-03-05 15:22:59.295762 test begin: paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 57, 7581].  Tensor sizes: [2, 57, 0]
2025-03-05 15:22:59.296267 test begin: paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 57, 8400].  Tensor sizes: [2, 57, 0]
2025-03-05 15:22:59.296782 test begin: paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 57, 0],"bool"), list[2,57,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 57, 9261].  Tensor sizes: [2, 57, 0]
2025-03-05 15:22:59.297308 test begin: paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 58, 11109].  Tensor sizes: [2, 58, 0]
2025-03-05 15:22:59.297823 test begin: paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 58, 2100].  Tensor sizes: [2, 58, 0]
2025-03-05 15:22:59.298331 test begin: paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 58, 2541].  Tensor sizes: [2, 58, 0]
2025-03-05 15:22:59.298851 test begin: paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 58, 3024].  Tensor sizes: [2, 58, 0]
2025-03-05 15:22:59.299366 test begin: paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 58, 3549].  Tensor sizes: [2, 58, 0]
2025-03-05 15:22:59.299882 test begin: paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 58, 4116].  Tensor sizes: [2, 58, 0]
2025-03-05 15:22:59.300412 test begin: paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 58, 5376].  Tensor sizes: [2, 58, 0]
2025-03-05 15:22:59.300936 test begin: paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 58, 6069].  Tensor sizes: [2, 58, 0]
2025-03-05 15:22:59.301461 test begin: paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 58, 7581].  Tensor sizes: [2, 58, 0]
2025-03-05 15:22:59.301978 test begin: paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 58, 8400].  Tensor sizes: [2, 58, 0]
2025-03-05 15:22:59.302491 test begin: paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 58, 0],"bool"), list[2,58,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 58, 9261].  Tensor sizes: [2, 58, 0]
2025-03-05 15:22:59.303017 test begin: paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 59, 2100].  Tensor sizes: [2, 59, 0]
2025-03-05 15:22:59.303523 test begin: paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 59, 2541].  Tensor sizes: [2, 59, 0]
2025-03-05 15:22:59.304037 test begin: paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 59, 4116].  Tensor sizes: [2, 59, 0]
2025-03-05 15:22:59.304564 test begin: paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 59, 5376].  Tensor sizes: [2, 59, 0]
2025-03-05 15:22:59.305085 test begin: paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 59, 6069].  Tensor sizes: [2, 59, 0]
2025-03-05 15:22:59.305600 test begin: paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 59, 6804].  Tensor sizes: [2, 59, 0]
2025-03-05 15:22:59.306141 test begin: paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 59, 7581].  Tensor sizes: [2, 59, 0]
2025-03-05 15:22:59.306653 test begin: paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 59, 0],"bool"), list[2,59,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 59, 9261].  Tensor sizes: [2, 59, 0]
2025-03-05 15:22:59.307175 test begin: paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 6, 10164].  Tensor sizes: [2, 6, 0]
2025-03-05 15:22:59.307705 test begin: paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 6, 11109].  Tensor sizes: [2, 6, 0]
2025-03-05 15:22:59.308201 test begin: paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 6, 2100].  Tensor sizes: [2, 6, 0]
2025-03-05 15:22:59.308704 test begin: paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 6, 3024].  Tensor sizes: [2, 6, 0]
2025-03-05 15:22:59.309202 test begin: paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 6, 4116].  Tensor sizes: [2, 6, 0]
2025-03-05 15:22:59.309771 test begin: paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 6, 5376].  Tensor sizes: [2, 6, 0]
2025-03-05 15:22:59.310623 test begin: paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 6, 6069].  Tensor sizes: [2, 6, 0]
2025-03-05 15:22:59.311718 test begin: paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 6, 0],"bool"), list[2,6,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 6, 9261].  Tensor sizes: [2, 6, 0]
2025-03-05 15:22:59.312536 test begin: paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 60, 12096].  Tensor sizes: [2, 60, 0]
2025-03-05 15:22:59.313215 test begin: paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 60, 2100].  Tensor sizes: [2, 60, 0]
2025-03-05 15:22:59.313872 test begin: paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 60, 2541].  Tensor sizes: [2, 60, 0]
2025-03-05 15:22:59.314514 test begin: paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 60, 3024].  Tensor sizes: [2, 60, 0]
2025-03-05 15:22:59.315177 test begin: paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 60, 3549].  Tensor sizes: [2, 60, 0]
2025-03-05 15:22:59.315832 test begin: paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 60, 4116].  Tensor sizes: [2, 60, 0]
2025-03-05 15:22:59.316480 test begin: paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 60, 5376].  Tensor sizes: [2, 60, 0]
2025-03-05 15:22:59.317182 test begin: paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 60, 6069].  Tensor sizes: [2, 60, 0]
2025-03-05 15:22:59.318042 test begin: paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 60, 6804].  Tensor sizes: [2, 60, 0]
2025-03-05 15:22:59.318658 test begin: paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 60, 7581].  Tensor sizes: [2, 60, 0]
2025-03-05 15:22:59.319225 test begin: paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 60, 8400].  Tensor sizes: [2, 60, 0]
2025-03-05 15:22:59.319772 test begin: paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 60, 0],"bool"), list[2,60,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 60, 9261].  Tensor sizes: [2, 60, 0]
2025-03-05 15:22:59.320315 test begin: paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 61, 10164].  Tensor sizes: [2, 61, 0]
2025-03-05 15:22:59.320852 test begin: paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 61, 11109].  Tensor sizes: [2, 61, 0]
2025-03-05 15:22:59.321376 test begin: paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 61, 12096].  Tensor sizes: [2, 61, 0]
2025-03-05 15:22:59.321909 test begin: paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 61, 2100].  Tensor sizes: [2, 61, 0]
2025-03-05 15:22:59.322433 test begin: paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 61, 3024].  Tensor sizes: [2, 61, 0]
2025-03-05 15:22:59.322960 test begin: paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 61, 3549].  Tensor sizes: [2, 61, 0]
2025-03-05 15:22:59.323504 test begin: paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 61, 4725].  Tensor sizes: [2, 61, 0]
2025-03-05 15:22:59.324043 test begin: paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 61, 8400].  Tensor sizes: [2, 61, 0]
2025-03-05 15:22:59.324560 test begin: paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 61, 0],"bool"), list[2,61,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 61, 9261].  Tensor sizes: [2, 61, 0]
2025-03-05 15:22:59.325087 test begin: paddle.broadcast_to(Tensor([2, 62, 0],"bool"), list[2,62,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 62, 0],"bool"), list[2,62,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 62, 2100].  Tensor sizes: [2, 62, 0]
2025-03-05 15:22:59.325617 test begin: paddle.broadcast_to(Tensor([2, 62, 0],"bool"), list[2,62,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 62, 0],"bool"), list[2,62,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 62, 2541].  Tensor sizes: [2, 62, 0]
2025-03-05 15:22:59.326152 test begin: paddle.broadcast_to(Tensor([2, 62, 0],"bool"), list[2,62,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 62, 0],"bool"), list[2,62,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 62, 5376].  Tensor sizes: [2, 62, 0]
2025-03-05 15:22:59.326676 test begin: paddle.broadcast_to(Tensor([2, 62, 0],"bool"), list[2,62,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 62, 0],"bool"), list[2,62,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 62, 6804].  Tensor sizes: [2, 62, 0]
2025-03-05 15:22:59.327388 test begin: paddle.broadcast_to(Tensor([2, 62, 0],"bool"), list[2,62,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 62, 0],"bool"), list[2,62,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 62, 7581].  Tensor sizes: [2, 62, 0]
2025-03-05 15:22:59.328060 test begin: paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 63, 12096].  Tensor sizes: [2, 63, 0]
2025-03-05 15:22:59.328628 test begin: paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 63, 2100].  Tensor sizes: [2, 63, 0]
2025-03-05 15:22:59.329216 test begin: paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 63, 2541].  Tensor sizes: [2, 63, 0]
2025-03-05 15:22:59.329891 test begin: paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 63, 3024].  Tensor sizes: [2, 63, 0]
2025-03-05 15:22:59.330528 test begin: paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 63, 3549].  Tensor sizes: [2, 63, 0]
2025-03-05 15:22:59.331216 test begin: paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 63, 4116].  Tensor sizes: [2, 63, 0]
2025-03-05 15:22:59.331862 test begin: paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 63, 4725].  Tensor sizes: [2, 63, 0]
2025-03-05 15:22:59.332485 test begin: paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 63, 5376].  Tensor sizes: [2, 63, 0]
2025-03-05 15:22:59.333106 test begin: paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 63, 6069].  Tensor sizes: [2, 63, 0]
2025-03-05 15:22:59.333741 test begin: paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 63, 6804].  Tensor sizes: [2, 63, 0]
2025-03-05 15:22:59.334363 test begin: paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 63, 0],"bool"), list[2,63,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 63, 7581].  Tensor sizes: [2, 63, 0]
2025-03-05 15:22:59.334990 test begin: paddle.broadcast_to(Tensor([2, 64, 0],"bool"), list[2,64,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 64, 0],"bool"), list[2,64,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 64, 2541].  Tensor sizes: [2, 64, 0]
2025-03-05 15:22:59.335647 test begin: paddle.broadcast_to(Tensor([2, 64, 0],"bool"), list[2,64,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 64, 0],"bool"), list[2,64,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 64, 4116].  Tensor sizes: [2, 64, 0]
2025-03-05 15:22:59.336339 test begin: paddle.broadcast_to(Tensor([2, 64, 0],"bool"), list[2,64,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 64, 0],"bool"), list[2,64,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 64, 5376].  Tensor sizes: [2, 64, 0]
2025-03-05 15:22:59.337020 test begin: paddle.broadcast_to(Tensor([2, 64, 0],"bool"), list[2,64,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 64, 0],"bool"), list[2,64,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 64, 6069].  Tensor sizes: [2, 64, 0]
2025-03-05 15:22:59.337651 test begin: paddle.broadcast_to(Tensor([2, 64, 0],"bool"), list[2,64,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 64, 0],"bool"), list[2,64,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 64, 9261].  Tensor sizes: [2, 64, 0]
2025-03-05 15:22:59.338269 test begin: paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 65, 10164].  Tensor sizes: [2, 65, 0]
2025-03-05 15:22:59.338923 test begin: paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 65, 11109].  Tensor sizes: [2, 65, 0]
2025-03-05 15:22:59.339516 test begin: paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 65, 12096].  Tensor sizes: [2, 65, 0]
2025-03-05 15:22:59.340080 test begin: paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 65, 2100].  Tensor sizes: [2, 65, 0]
2025-03-05 15:22:59.340578 test begin: paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 65, 2541].  Tensor sizes: [2, 65, 0]
2025-03-05 15:22:59.341097 test begin: paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 65, 3024].  Tensor sizes: [2, 65, 0]
2025-03-05 15:22:59.341633 test begin: paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 65, 6069].  Tensor sizes: [2, 65, 0]
2025-03-05 15:22:59.342157 test begin: paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 65, 6804].  Tensor sizes: [2, 65, 0]
2025-03-05 15:22:59.342673 test begin: paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 65, 7581].  Tensor sizes: [2, 65, 0]
2025-03-05 15:22:59.343181 test begin: paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 65, 8400].  Tensor sizes: [2, 65, 0]
2025-03-05 15:22:59.343689 test begin: paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 65, 0],"bool"), list[2,65,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 65, 9261].  Tensor sizes: [2, 65, 0]
2025-03-05 15:22:59.344197 test begin: paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 66, 10164].  Tensor sizes: [2, 66, 0]
2025-03-05 15:22:59.344713 test begin: paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 66, 11109].  Tensor sizes: [2, 66, 0]
2025-03-05 15:22:59.345221 test begin: paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 66, 2100].  Tensor sizes: [2, 66, 0]
2025-03-05 15:22:59.345766 test begin: paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 66, 2541].  Tensor sizes: [2, 66, 0]
2025-03-05 15:22:59.346282 test begin: paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 66, 3024].  Tensor sizes: [2, 66, 0]
2025-03-05 15:22:59.346868 test begin: paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 66, 3549].  Tensor sizes: [2, 66, 0]
2025-03-05 15:22:59.347468 test begin: paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 66, 4725].  Tensor sizes: [2, 66, 0]
2025-03-05 15:22:59.348311 test begin: paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 66, 6069].  Tensor sizes: [2, 66, 0]
2025-03-05 15:22:59.349167 test begin: paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 66, 6804].  Tensor sizes: [2, 66, 0]
2025-03-05 15:22:59.349826 test begin: paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 66, 0],"bool"), list[2,66,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 66, 8400].  Tensor sizes: [2, 66, 0]
2025-03-05 15:22:59.350462 test begin: paddle.broadcast_to(Tensor([2, 67, 0],"bool"), list[2,67,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 67, 0],"bool"), list[2,67,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 67, 10164].  Tensor sizes: [2, 67, 0]
2025-03-05 15:22:59.351125 test begin: paddle.broadcast_to(Tensor([2, 67, 0],"bool"), list[2,67,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 67, 0],"bool"), list[2,67,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 67, 3024].  Tensor sizes: [2, 67, 0]
2025-03-05 15:22:59.351713 test begin: paddle.broadcast_to(Tensor([2, 67, 0],"bool"), list[2,67,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 67, 0],"bool"), list[2,67,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 67, 7581].  Tensor sizes: [2, 67, 0]
2025-03-05 15:22:59.352242 test begin: paddle.broadcast_to(Tensor([2, 67, 0],"bool"), list[2,67,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 67, 0],"bool"), list[2,67,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 67, 8400].  Tensor sizes: [2, 67, 0]
2025-03-05 15:22:59.352770 test begin: paddle.broadcast_to(Tensor([2, 67, 0],"bool"), list[2,67,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 67, 0],"bool"), list[2,67,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 67, 9261].  Tensor sizes: [2, 67, 0]
2025-03-05 15:22:59.353281 test begin: paddle.broadcast_to(Tensor([2, 68, 0],"bool"), list[2,68,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 68, 0],"bool"), list[2,68,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 68, 11109].  Tensor sizes: [2, 68, 0]
2025-03-05 15:22:59.353806 test begin: paddle.broadcast_to(Tensor([2, 68, 0],"bool"), list[2,68,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 68, 0],"bool"), list[2,68,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 68, 2100].  Tensor sizes: [2, 68, 0]
2025-03-05 15:22:59.354322 test begin: paddle.broadcast_to(Tensor([2, 68, 0],"bool"), list[2,68,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 68, 0],"bool"), list[2,68,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 68, 4116].  Tensor sizes: [2, 68, 0]
2025-03-05 15:22:59.354828 test begin: paddle.broadcast_to(Tensor([2, 68, 0],"bool"), list[2,68,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 68, 0],"bool"), list[2,68,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 68, 4725].  Tensor sizes: [2, 68, 0]
2025-03-05 15:22:59.355341 test begin: paddle.broadcast_to(Tensor([2, 68, 0],"bool"), list[2,68,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 68, 0],"bool"), list[2,68,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 68, 6069].  Tensor sizes: [2, 68, 0]
2025-03-05 15:22:59.355843 test begin: paddle.broadcast_to(Tensor([2, 68, 0],"bool"), list[2,68,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 68, 0],"bool"), list[2,68,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 68, 9261].  Tensor sizes: [2, 68, 0]
2025-03-05 15:22:59.356345 test begin: paddle.broadcast_to(Tensor([2, 69, 0],"bool"), list[2,69,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 69, 0],"bool"), list[2,69,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 69, 11109].  Tensor sizes: [2, 69, 0]
2025-03-05 15:22:59.356851 test begin: paddle.broadcast_to(Tensor([2, 69, 0],"bool"), list[2,69,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 69, 0],"bool"), list[2,69,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 69, 4116].  Tensor sizes: [2, 69, 0]
2025-03-05 15:22:59.357335 test begin: paddle.broadcast_to(Tensor([2, 69, 0],"bool"), list[2,69,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 69, 0],"bool"), list[2,69,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 69, 4725].  Tensor sizes: [2, 69, 0]
2025-03-05 15:22:59.357837 test begin: paddle.broadcast_to(Tensor([2, 69, 0],"bool"), list[2,69,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 69, 0],"bool"), list[2,69,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 69, 5376].  Tensor sizes: [2, 69, 0]
2025-03-05 15:22:59.358333 test begin: paddle.broadcast_to(Tensor([2, 69, 0],"bool"), list[2,69,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 69, 0],"bool"), list[2,69,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 69, 6804].  Tensor sizes: [2, 69, 0]
2025-03-05 15:22:59.358835 test begin: paddle.broadcast_to(Tensor([2, 69, 0],"bool"), list[2,69,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 69, 0],"bool"), list[2,69,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 69, 8400].  Tensor sizes: [2, 69, 0]
2025-03-05 15:22:59.359381 test begin: paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 7, 10164].  Tensor sizes: [2, 7, 0]
2025-03-05 15:22:59.359901 test begin: paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 7, 11109].  Tensor sizes: [2, 7, 0]
2025-03-05 15:22:59.360412 test begin: paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 7, 2100].  Tensor sizes: [2, 7, 0]
2025-03-05 15:22:59.360919 test begin: paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 7, 3024].  Tensor sizes: [2, 7, 0]
2025-03-05 15:22:59.361437 test begin: paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 7, 3549].  Tensor sizes: [2, 7, 0]
2025-03-05 15:22:59.361951 test begin: paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 7, 4725].  Tensor sizes: [2, 7, 0]
2025-03-05 15:22:59.362465 test begin: paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 7, 6069].  Tensor sizes: [2, 7, 0]
2025-03-05 15:22:59.363021 test begin: paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 7, 0],"bool"), list[2,7,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 7, 8400].  Tensor sizes: [2, 7, 0]
2025-03-05 15:22:59.363532 test begin: paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 70, 10164].  Tensor sizes: [2, 70, 0]
2025-03-05 15:22:59.364055 test begin: paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 70, 12096].  Tensor sizes: [2, 70, 0]
2025-03-05 15:22:59.364629 test begin: paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 70, 2100].  Tensor sizes: [2, 70, 0]
2025-03-05 15:22:59.365441 test begin: paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 70, 3024].  Tensor sizes: [2, 70, 0]
2025-03-05 15:22:59.366083 test begin: paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 70, 4725].  Tensor sizes: [2, 70, 0]
2025-03-05 15:22:59.366709 test begin: paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 70, 6069].  Tensor sizes: [2, 70, 0]
2025-03-05 15:22:59.367323 test begin: paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 70, 6804].  Tensor sizes: [2, 70, 0]
2025-03-05 15:22:59.367938 test begin: paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 70, 8400].  Tensor sizes: [2, 70, 0]
2025-03-05 15:22:59.368555 test begin: paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 70, 0],"bool"), list[2,70,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 70, 9261].  Tensor sizes: [2, 70, 0]
2025-03-05 15:22:59.369196 test begin: paddle.broadcast_to(Tensor([2, 71, 0],"bool"), list[2,71,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 71, 0],"bool"), list[2,71,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 71, 10164].  Tensor sizes: [2, 71, 0]
2025-03-05 15:22:59.369819 test begin: paddle.broadcast_to(Tensor([2, 71, 0],"bool"), list[2,71,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 71, 0],"bool"), list[2,71,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 71, 11109].  Tensor sizes: [2, 71, 0]
2025-03-05 15:22:59.370432 test begin: paddle.broadcast_to(Tensor([2, 71, 0],"bool"), list[2,71,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 71, 0],"bool"), list[2,71,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 71, 2100].  Tensor sizes: [2, 71, 0]
2025-03-05 15:22:59.371052 test begin: paddle.broadcast_to(Tensor([2, 71, 0],"bool"), list[2,71,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 71, 0],"bool"), list[2,71,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 71, 3549].  Tensor sizes: [2, 71, 0]
2025-03-05 15:22:59.371672 test begin: paddle.broadcast_to(Tensor([2, 71, 0],"bool"), list[2,71,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 71, 0],"bool"), list[2,71,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 71, 5376].  Tensor sizes: [2, 71, 0]
2025-03-05 15:22:59.372276 test begin: paddle.broadcast_to(Tensor([2, 71, 0],"bool"), list[2,71,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 71, 0],"bool"), list[2,71,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 71, 8400].  Tensor sizes: [2, 71, 0]
2025-03-05 15:22:59.372927 test begin: paddle.broadcast_to(Tensor([2, 71, 0],"bool"), list[2,71,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 71, 0],"bool"), list[2,71,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 71, 9261].  Tensor sizes: [2, 71, 0]
2025-03-05 15:22:59.373571 test begin: paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 72, 11109].  Tensor sizes: [2, 72, 0]
2025-03-05 15:22:59.374198 test begin: paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 72, 2100].  Tensor sizes: [2, 72, 0]
2025-03-05 15:22:59.374807 test begin: paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 72, 2541].  Tensor sizes: [2, 72, 0]
2025-03-05 15:22:59.375418 test begin: paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 72, 3024].  Tensor sizes: [2, 72, 0]
2025-03-05 15:22:59.376039 test begin: paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 72, 3549].  Tensor sizes: [2, 72, 0]
2025-03-05 15:22:59.376641 test begin: paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 72, 4116].  Tensor sizes: [2, 72, 0]
2025-03-05 15:22:59.377302 test begin: paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 72, 4725].  Tensor sizes: [2, 72, 0]
2025-03-05 15:22:59.377924 test begin: paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 72, 5376].  Tensor sizes: [2, 72, 0]
2025-03-05 15:22:59.378601 test begin: paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 72, 6069].  Tensor sizes: [2, 72, 0]
2025-03-05 15:22:59.379268 test begin: paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 72, 0],"bool"), list[2,72,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 72, 7581].  Tensor sizes: [2, 72, 0]
2025-03-05 15:22:59.379896 test begin: paddle.broadcast_to(Tensor([2, 73, 0],"bool"), list[2,73,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 73, 0],"bool"), list[2,73,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 73, 2100].  Tensor sizes: [2, 73, 0]
2025-03-05 15:22:59.380513 test begin: paddle.broadcast_to(Tensor([2, 73, 0],"bool"), list[2,73,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 73, 0],"bool"), list[2,73,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 73, 3024].  Tensor sizes: [2, 73, 0]
2025-03-05 15:22:59.381378 test begin: paddle.broadcast_to(Tensor([2, 73, 0],"bool"), list[2,73,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 73, 0],"bool"), list[2,73,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 73, 4116].  Tensor sizes: [2, 73, 0]
2025-03-05 15:22:59.381964 test begin: paddle.broadcast_to(Tensor([2, 73, 0],"bool"), list[2,73,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 73, 0],"bool"), list[2,73,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 73, 4725].  Tensor sizes: [2, 73, 0]
2025-03-05 15:22:59.382501 test begin: paddle.broadcast_to(Tensor([2, 73, 0],"bool"), list[2,73,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 73, 0],"bool"), list[2,73,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 73, 8400].  Tensor sizes: [2, 73, 0]
2025-03-05 15:22:59.383029 test begin: paddle.broadcast_to(Tensor([2, 74, 0],"bool"), list[2,74,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 74, 0],"bool"), list[2,74,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 74, 6069].  Tensor sizes: [2, 74, 0]
2025-03-05 15:22:59.383597 test begin: paddle.broadcast_to(Tensor([2, 74, 0],"bool"), list[2,74,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 74, 0],"bool"), list[2,74,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 74, 6804].  Tensor sizes: [2, 74, 0]
2025-03-05 15:22:59.384143 test begin: paddle.broadcast_to(Tensor([2, 74, 0],"bool"), list[2,74,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 74, 0],"bool"), list[2,74,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 74, 8400].  Tensor sizes: [2, 74, 0]
2025-03-05 15:22:59.384742 test begin: paddle.broadcast_to(Tensor([2, 74, 0],"bool"), list[2,74,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 74, 0],"bool"), list[2,74,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 74, 9261].  Tensor sizes: [2, 74, 0]
2025-03-05 15:22:59.385271 test begin: paddle.broadcast_to(Tensor([2, 75, 0],"bool"), list[2,75,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 75, 0],"bool"), list[2,75,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 75, 2541].  Tensor sizes: [2, 75, 0]
2025-03-05 15:22:59.385798 test begin: paddle.broadcast_to(Tensor([2, 75, 0],"bool"), list[2,75,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 75, 0],"bool"), list[2,75,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 75, 4116].  Tensor sizes: [2, 75, 0]
2025-03-05 15:22:59.386384 test begin: paddle.broadcast_to(Tensor([2, 75, 0],"bool"), list[2,75,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 75, 0],"bool"), list[2,75,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 75, 4725].  Tensor sizes: [2, 75, 0]
2025-03-05 15:22:59.386935 test begin: paddle.broadcast_to(Tensor([2, 75, 0],"bool"), list[2,75,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 75, 0],"bool"), list[2,75,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 75, 6069].  Tensor sizes: [2, 75, 0]
2025-03-05 15:22:59.387476 test begin: paddle.broadcast_to(Tensor([2, 75, 0],"bool"), list[2,75,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 75, 0],"bool"), list[2,75,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 75, 8400].  Tensor sizes: [2, 75, 0]
2025-03-05 15:22:59.388793 test begin: paddle.broadcast_to(Tensor([2, 76, 0],"bool"), list[2,76,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 76, 0],"bool"), list[2,76,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 76, 10164].  Tensor sizes: [2, 76, 0]
2025-03-05 15:22:59.389346 test begin: paddle.broadcast_to(Tensor([2, 76, 0],"bool"), list[2,76,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 76, 0],"bool"), list[2,76,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 76, 11109].  Tensor sizes: [2, 76, 0]
2025-03-05 15:22:59.389876 test begin: paddle.broadcast_to(Tensor([2, 76, 0],"bool"), list[2,76,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 76, 0],"bool"), list[2,76,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 76, 12096].  Tensor sizes: [2, 76, 0]
2025-03-05 15:22:59.390405 test begin: paddle.broadcast_to(Tensor([2, 76, 0],"bool"), list[2,76,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 76, 0],"bool"), list[2,76,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 76, 2541].  Tensor sizes: [2, 76, 0]
2025-03-05 15:22:59.390943 test begin: paddle.broadcast_to(Tensor([2, 76, 0],"bool"), list[2,76,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 76, 0],"bool"), list[2,76,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 76, 3024].  Tensor sizes: [2, 76, 0]
2025-03-05 15:22:59.391452 test begin: paddle.broadcast_to(Tensor([2, 76, 0],"bool"), list[2,76,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 76, 0],"bool"), list[2,76,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 76, 5376].  Tensor sizes: [2, 76, 0]
2025-03-05 15:22:59.392063 test begin: paddle.broadcast_to(Tensor([2, 77, 0],"bool"), list[2,77,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 77, 0],"bool"), list[2,77,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 77, 12096].  Tensor sizes: [2, 77, 0]
2025-03-05 15:22:59.392614 test begin: paddle.broadcast_to(Tensor([2, 77, 0],"bool"), list[2,77,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 77, 0],"bool"), list[2,77,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 77, 2541].  Tensor sizes: [2, 77, 0]
2025-03-05 15:22:59.393153 test begin: paddle.broadcast_to(Tensor([2, 77, 0],"bool"), list[2,77,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 77, 0],"bool"), list[2,77,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 77, 3549].  Tensor sizes: [2, 77, 0]
2025-03-05 15:22:59.393685 test begin: paddle.broadcast_to(Tensor([2, 77, 0],"bool"), list[2,77,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 77, 0],"bool"), list[2,77,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 77, 4116].  Tensor sizes: [2, 77, 0]
2025-03-05 15:22:59.394216 test begin: paddle.broadcast_to(Tensor([2, 77, 0],"bool"), list[2,77,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 77, 0],"bool"), list[2,77,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 77, 6069].  Tensor sizes: [2, 77, 0]
2025-03-05 15:22:59.394796 test begin: paddle.broadcast_to(Tensor([2, 77, 0],"bool"), list[2,77,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 77, 0],"bool"), list[2,77,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 77, 9261].  Tensor sizes: [2, 77, 0]
2025-03-05 15:22:59.395337 test begin: paddle.broadcast_to(Tensor([2, 78, 0],"bool"), list[2,78,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 78, 0],"bool"), list[2,78,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 78, 11109].  Tensor sizes: [2, 78, 0]
2025-03-05 15:22:59.395879 test begin: paddle.broadcast_to(Tensor([2, 78, 0],"bool"), list[2,78,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 78, 0],"bool"), list[2,78,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 78, 12096].  Tensor sizes: [2, 78, 0]
2025-03-05 15:22:59.396420 test begin: paddle.broadcast_to(Tensor([2, 78, 0],"bool"), list[2,78,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 78, 0],"bool"), list[2,78,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 78, 2541].  Tensor sizes: [2, 78, 0]
2025-03-05 15:22:59.396965 test begin: paddle.broadcast_to(Tensor([2, 78, 0],"bool"), list[2,78,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 78, 0],"bool"), list[2,78,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 78, 3024].  Tensor sizes: [2, 78, 0]
2025-03-05 15:22:59.397490 test begin: paddle.broadcast_to(Tensor([2, 78, 0],"bool"), list[2,78,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 78, 0],"bool"), list[2,78,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 78, 9261].  Tensor sizes: [2, 78, 0]
2025-03-05 15:22:59.398057 test begin: paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 79, 10164].  Tensor sizes: [2, 79, 0]
2025-03-05 15:22:59.398595 test begin: paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 79, 11109].  Tensor sizes: [2, 79, 0]
2025-03-05 15:22:59.399160 test begin: paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 79, 2100].  Tensor sizes: [2, 79, 0]
2025-03-05 15:22:59.399702 test begin: paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 79, 3024].  Tensor sizes: [2, 79, 0]
2025-03-05 15:22:59.400224 test begin: paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 79, 3549].  Tensor sizes: [2, 79, 0]
2025-03-05 15:22:59.400747 test begin: paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 79, 4116].  Tensor sizes: [2, 79, 0]
2025-03-05 15:22:59.401269 test begin: paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 79, 4725].  Tensor sizes: [2, 79, 0]
2025-03-05 15:22:59.401802 test begin: paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 79, 5376].  Tensor sizes: [2, 79, 0]
2025-03-05 15:22:59.402334 test begin: paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 79, 0],"bool"), list[2,79,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 79, 9261].  Tensor sizes: [2, 79, 0]
2025-03-05 15:22:59.402870 test begin: paddle.broadcast_to(Tensor([2, 8, 0],"bool"), list[2,8,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 8, 0],"bool"), list[2,8,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 10164].  Tensor sizes: [2, 8, 0]
2025-03-05 15:22:59.403395 test begin: paddle.broadcast_to(Tensor([2, 8, 0],"bool"), list[2,8,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 8, 0],"bool"), list[2,8,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 4725].  Tensor sizes: [2, 8, 0]
2025-03-05 15:22:59.403970 test begin: paddle.broadcast_to(Tensor([2, 8, 0],"bool"), list[2,8,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 8, 0],"bool"), list[2,8,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 5376].  Tensor sizes: [2, 8, 0]
2025-03-05 15:22:59.404519 test begin: paddle.broadcast_to(Tensor([2, 8, 0],"bool"), list[2,8,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 8, 0],"bool"), list[2,8,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 7581].  Tensor sizes: [2, 8, 0]
2025-03-05 15:22:59.405053 test begin: paddle.broadcast_to(Tensor([2, 8, 0],"bool"), list[2,8,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 8, 0],"bool"), list[2,8,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 8, 9261].  Tensor sizes: [2, 8, 0]
2025-03-05 15:22:59.405592 test begin: paddle.broadcast_to(Tensor([2, 80, 0],"bool"), list[2,80,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 80, 0],"bool"), list[2,80,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 80, 10164].  Tensor sizes: [2, 80, 0]
2025-03-05 15:22:59.406124 test begin: paddle.broadcast_to(Tensor([2, 80, 0],"bool"), list[2,80,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 80, 0],"bool"), list[2,80,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 80, 2100].  Tensor sizes: [2, 80, 0]
2025-03-05 15:22:59.406641 test begin: paddle.broadcast_to(Tensor([2, 80, 0],"bool"), list[2,80,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 80, 0],"bool"), list[2,80,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 80, 3549].  Tensor sizes: [2, 80, 0]
2025-03-05 15:22:59.407146 test begin: paddle.broadcast_to(Tensor([2, 80, 0],"bool"), list[2,80,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 80, 0],"bool"), list[2,80,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 80, 4116].  Tensor sizes: [2, 80, 0]
2025-03-05 15:22:59.407694 test begin: paddle.broadcast_to(Tensor([2, 80, 0],"bool"), list[2,80,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 80, 0],"bool"), list[2,80,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 80, 6069].  Tensor sizes: [2, 80, 0]
2025-03-05 15:22:59.408224 test begin: paddle.broadcast_to(Tensor([2, 80, 0],"bool"), list[2,80,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 80, 0],"bool"), list[2,80,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 80, 8400].  Tensor sizes: [2, 80, 0]
2025-03-05 15:22:59.408747 test begin: paddle.broadcast_to(Tensor([2, 81, 0],"bool"), list[2,81,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 81, 0],"bool"), list[2,81,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 81, 2100].  Tensor sizes: [2, 81, 0]
2025-03-05 15:22:59.409276 test begin: paddle.broadcast_to(Tensor([2, 81, 0],"bool"), list[2,81,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 81, 0],"bool"), list[2,81,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 81, 3024].  Tensor sizes: [2, 81, 0]
2025-03-05 15:22:59.409804 test begin: paddle.broadcast_to(Tensor([2, 81, 0],"bool"), list[2,81,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 81, 0],"bool"), list[2,81,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 81, 5376].  Tensor sizes: [2, 81, 0]
2025-03-05 15:22:59.410347 test begin: paddle.broadcast_to(Tensor([2, 81, 0],"bool"), list[2,81,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 81, 0],"bool"), list[2,81,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 81, 6069].  Tensor sizes: [2, 81, 0]
2025-03-05 15:22:59.410901 test begin: paddle.broadcast_to(Tensor([2, 82, 0],"bool"), list[2,82,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 82, 0],"bool"), list[2,82,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 82, 2541].  Tensor sizes: [2, 82, 0]
2025-03-05 15:22:59.411429 test begin: paddle.broadcast_to(Tensor([2, 82, 0],"bool"), list[2,82,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 82, 0],"bool"), list[2,82,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 82, 3024].  Tensor sizes: [2, 82, 0]
2025-03-05 15:22:59.411996 test begin: paddle.broadcast_to(Tensor([2, 82, 0],"bool"), list[2,82,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 82, 0],"bool"), list[2,82,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 82, 3549].  Tensor sizes: [2, 82, 0]
2025-03-05 15:22:59.412531 test begin: paddle.broadcast_to(Tensor([2, 82, 0],"bool"), list[2,82,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 82, 0],"bool"), list[2,82,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 82, 4725].  Tensor sizes: [2, 82, 0]
2025-03-05 15:22:59.413069 test begin: paddle.broadcast_to(Tensor([2, 82, 0],"bool"), list[2,82,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 82, 0],"bool"), list[2,82,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 82, 5376].  Tensor sizes: [2, 82, 0]
2025-03-05 15:22:59.413616 test begin: paddle.broadcast_to(Tensor([2, 82, 0],"bool"), list[2,82,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 82, 0],"bool"), list[2,82,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 82, 6069].  Tensor sizes: [2, 82, 0]
2025-03-05 15:22:59.414138 test begin: paddle.broadcast_to(Tensor([2, 82, 0],"bool"), list[2,82,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 82, 0],"bool"), list[2,82,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 82, 7581].  Tensor sizes: [2, 82, 0]
2025-03-05 15:22:59.414666 test begin: paddle.broadcast_to(Tensor([2, 83, 0],"bool"), list[2,83,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 83, 0],"bool"), list[2,83,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 83, 11109].  Tensor sizes: [2, 83, 0]
2025-03-05 15:22:59.415201 test begin: paddle.broadcast_to(Tensor([2, 83, 0],"bool"), list[2,83,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 83, 0],"bool"), list[2,83,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 83, 12096].  Tensor sizes: [2, 83, 0]
2025-03-05 15:22:59.415739 test begin: paddle.broadcast_to(Tensor([2, 83, 0],"bool"), list[2,83,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 83, 0],"bool"), list[2,83,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 83, 5376].  Tensor sizes: [2, 83, 0]
2025-03-05 15:22:59.416314 test begin: paddle.broadcast_to(Tensor([2, 83, 0],"bool"), list[2,83,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 83, 0],"bool"), list[2,83,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 83, 6069].  Tensor sizes: [2, 83, 0]
2025-03-05 15:22:59.416857 test begin: paddle.broadcast_to(Tensor([2, 84, 0],"bool"), list[2,84,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 84, 0],"bool"), list[2,84,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 84, 12096].  Tensor sizes: [2, 84, 0]
2025-03-05 15:22:59.417392 test begin: paddle.broadcast_to(Tensor([2, 84, 0],"bool"), list[2,84,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 84, 0],"bool"), list[2,84,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 84, 6069].  Tensor sizes: [2, 84, 0]
2025-03-05 15:22:59.417926 test begin: paddle.broadcast_to(Tensor([2, 84, 0],"bool"), list[2,84,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 84, 0],"bool"), list[2,84,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 84, 6804].  Tensor sizes: [2, 84, 0]
2025-03-05 15:22:59.418454 test begin: paddle.broadcast_to(Tensor([2, 84, 0],"bool"), list[2,84,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 84, 0],"bool"), list[2,84,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 84, 7581].  Tensor sizes: [2, 84, 0]
2025-03-05 15:22:59.418994 test begin: paddle.broadcast_to(Tensor([2, 84, 0],"bool"), list[2,84,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 84, 0],"bool"), list[2,84,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 84, 8400].  Tensor sizes: [2, 84, 0]
2025-03-05 15:22:59.419527 test begin: paddle.broadcast_to(Tensor([2, 85, 0],"bool"), list[2,85,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 85, 0],"bool"), list[2,85,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 85, 10164].  Tensor sizes: [2, 85, 0]
2025-03-05 15:22:59.420079 test begin: paddle.broadcast_to(Tensor([2, 85, 0],"bool"), list[2,85,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 85, 0],"bool"), list[2,85,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 85, 11109].  Tensor sizes: [2, 85, 0]
2025-03-05 15:22:59.420601 test begin: paddle.broadcast_to(Tensor([2, 85, 0],"bool"), list[2,85,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 85, 0],"bool"), list[2,85,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 85, 4116].  Tensor sizes: [2, 85, 0]
2025-03-05 15:22:59.421123 test begin: paddle.broadcast_to(Tensor([2, 85, 0],"bool"), list[2,85,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 85, 0],"bool"), list[2,85,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 85, 5376].  Tensor sizes: [2, 85, 0]
2025-03-05 15:22:59.421663 test begin: paddle.broadcast_to(Tensor([2, 85, 0],"bool"), list[2,85,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 85, 0],"bool"), list[2,85,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 85, 8400].  Tensor sizes: [2, 85, 0]
2025-03-05 15:22:59.422185 test begin: paddle.broadcast_to(Tensor([2, 86, 0],"bool"), list[2,86,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 86, 0],"bool"), list[2,86,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 86, 3024].  Tensor sizes: [2, 86, 0]
2025-03-05 15:22:59.422709 test begin: paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 87, 11109].  Tensor sizes: [2, 87, 0]
2025-03-05 15:22:59.423241 test begin: paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 87, 12096].  Tensor sizes: [2, 87, 0]
2025-03-05 15:22:59.423779 test begin: paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 87, 2541].  Tensor sizes: [2, 87, 0]
2025-03-05 15:22:59.424313 test begin: paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 87, 3024].  Tensor sizes: [2, 87, 0]
2025-03-05 15:22:59.424916 test begin: paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 87, 3549].  Tensor sizes: [2, 87, 0]
2025-03-05 15:22:59.425447 test begin: paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 87, 5376].  Tensor sizes: [2, 87, 0]
2025-03-05 15:22:59.426004 test begin: paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 87, 7581].  Tensor sizes: [2, 87, 0]
2025-03-05 15:22:59.426534 test begin: paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 87, 0],"bool"), list[2,87,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 87, 9261].  Tensor sizes: [2, 87, 0]
2025-03-05 15:22:59.427072 test begin: paddle.broadcast_to(Tensor([2, 88, 0],"bool"), list[2,88,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 88, 0],"bool"), list[2,88,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 88, 10164].  Tensor sizes: [2, 88, 0]
2025-03-05 15:22:59.427613 test begin: paddle.broadcast_to(Tensor([2, 88, 0],"bool"), list[2,88,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 88, 0],"bool"), list[2,88,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 88, 2541].  Tensor sizes: [2, 88, 0]
2025-03-05 15:22:59.428152 test begin: paddle.broadcast_to(Tensor([2, 88, 0],"bool"), list[2,88,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 88, 0],"bool"), list[2,88,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 88, 4725].  Tensor sizes: [2, 88, 0]
2025-03-05 15:22:59.428681 test begin: paddle.broadcast_to(Tensor([2, 88, 0],"bool"), list[2,88,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 88, 0],"bool"), list[2,88,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 88, 5376].  Tensor sizes: [2, 88, 0]
2025-03-05 15:22:59.429199 test begin: paddle.broadcast_to(Tensor([2, 88, 0],"bool"), list[2,88,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 88, 0],"bool"), list[2,88,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 88, 7581].  Tensor sizes: [2, 88, 0]
2025-03-05 15:22:59.429735 test begin: paddle.broadcast_to(Tensor([2, 89, 0],"bool"), list[2,89,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 89, 0],"bool"), list[2,89,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 89, 2100].  Tensor sizes: [2, 89, 0]
2025-03-05 15:22:59.430257 test begin: paddle.broadcast_to(Tensor([2, 89, 0],"bool"), list[2,89,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 89, 0],"bool"), list[2,89,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 89, 4116].  Tensor sizes: [2, 89, 0]
2025-03-05 15:22:59.430819 test begin: paddle.broadcast_to(Tensor([2, 89, 0],"bool"), list[2,89,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 89, 0],"bool"), list[2,89,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 89, 5376].  Tensor sizes: [2, 89, 0]
2025-03-05 15:22:59.431345 test begin: paddle.broadcast_to(Tensor([2, 89, 0],"bool"), list[2,89,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 89, 0],"bool"), list[2,89,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 89, 7581].  Tensor sizes: [2, 89, 0]
2025-03-05 15:22:59.431883 test begin: paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 9, 10164].  Tensor sizes: [2, 9, 0]
2025-03-05 15:22:59.432408 test begin: paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 9, 11109].  Tensor sizes: [2, 9, 0]
2025-03-05 15:22:59.432943 test begin: paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 9, 12096].  Tensor sizes: [2, 9, 0]
2025-03-05 15:22:59.433460 test begin: paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 9, 2541].  Tensor sizes: [2, 9, 0]
2025-03-05 15:22:59.433990 test begin: paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 9, 3024].  Tensor sizes: [2, 9, 0]
2025-03-05 15:22:59.434507 test begin: paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 9, 3549].  Tensor sizes: [2, 9, 0]
2025-03-05 15:22:59.435039 test begin: paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 9, 4116].  Tensor sizes: [2, 9, 0]
2025-03-05 15:22:59.435551 test begin: paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 9, 5376].  Tensor sizes: [2, 9, 0]
2025-03-05 15:22:59.436257 test begin: paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 9, 0],"bool"), list[2,9,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 9, 7581].  Tensor sizes: [2, 9, 0]
2025-03-05 15:22:59.436914 test begin: paddle.broadcast_to(Tensor([2, 90, 0],"bool"), list[2,90,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 90, 0],"bool"), list[2,90,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 90, 6804].  Tensor sizes: [2, 90, 0]
2025-03-05 15:22:59.437523 test begin: paddle.broadcast_to(Tensor([2, 91, 0],"bool"), list[2,91,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 91, 0],"bool"), list[2,91,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 91, 2100].  Tensor sizes: [2, 91, 0]
2025-03-05 15:22:59.438189 test begin: paddle.broadcast_to(Tensor([2, 91, 0],"bool"), list[2,91,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 91, 0],"bool"), list[2,91,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 91, 2541].  Tensor sizes: [2, 91, 0]
2025-03-05 15:22:59.438810 test begin: paddle.broadcast_to(Tensor([2, 92, 0],"bool"), list[2,92,11109,], )

[torch error] paddle.broadcast_to(Tensor([2, 92, 0],"bool"), list[2,92,11109,], ) 
 The expanded size of the tensor (11109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 92, 11109].  Tensor sizes: [2, 92, 0]
2025-03-05 15:22:59.439427 test begin: paddle.broadcast_to(Tensor([2, 92, 0],"bool"), list[2,92,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 92, 0],"bool"), list[2,92,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 92, 3549].  Tensor sizes: [2, 92, 0]
2025-03-05 15:22:59.440474 test begin: paddle.broadcast_to(Tensor([2, 92, 0],"bool"), list[2,92,6069,], )

[torch error] paddle.broadcast_to(Tensor([2, 92, 0],"bool"), list[2,92,6069,], ) 
 The expanded size of the tensor (6069) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 92, 6069].  Tensor sizes: [2, 92, 0]
2025-03-05 15:22:59.441140 test begin: paddle.broadcast_to(Tensor([2, 92, 0],"bool"), list[2,92,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 92, 0],"bool"), list[2,92,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 92, 6804].  Tensor sizes: [2, 92, 0]
2025-03-05 15:22:59.441774 test begin: paddle.broadcast_to(Tensor([2, 92, 0],"bool"), list[2,92,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 92, 0],"bool"), list[2,92,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 92, 8400].  Tensor sizes: [2, 92, 0]
2025-03-05 15:22:59.442443 test begin: paddle.broadcast_to(Tensor([2, 92, 0],"bool"), list[2,92,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 92, 0],"bool"), list[2,92,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 92, 9261].  Tensor sizes: [2, 92, 0]
2025-03-05 15:22:59.443093 test begin: paddle.broadcast_to(Tensor([2, 93, 0],"bool"), list[2,93,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 93, 0],"bool"), list[2,93,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 93, 10164].  Tensor sizes: [2, 93, 0]
2025-03-05 15:22:59.443893 test begin: paddle.broadcast_to(Tensor([2, 93, 0],"bool"), list[2,93,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 93, 0],"bool"), list[2,93,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 93, 2100].  Tensor sizes: [2, 93, 0]
2025-03-05 15:22:59.444570 test begin: paddle.broadcast_to(Tensor([2, 93, 0],"bool"), list[2,93,3549,], )

[torch error] paddle.broadcast_to(Tensor([2, 93, 0],"bool"), list[2,93,3549,], ) 
 The expanded size of the tensor (3549) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 93, 3549].  Tensor sizes: [2, 93, 0]
2025-03-05 15:22:59.445391 test begin: paddle.broadcast_to(Tensor([2, 93, 0],"bool"), list[2,93,6804,], )

[torch error] paddle.broadcast_to(Tensor([2, 93, 0],"bool"), list[2,93,6804,], ) 
 The expanded size of the tensor (6804) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 93, 6804].  Tensor sizes: [2, 93, 0]
2025-03-05 15:22:59.445969 test begin: paddle.broadcast_to(Tensor([2, 94, 0],"bool"), list[2,94,5376,], )

[torch error] paddle.broadcast_to(Tensor([2, 94, 0],"bool"), list[2,94,5376,], ) 
 The expanded size of the tensor (5376) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 94, 5376].  Tensor sizes: [2, 94, 0]
2025-03-05 15:22:59.446513 test begin: paddle.broadcast_to(Tensor([2, 94, 0],"bool"), list[2,94,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 94, 0],"bool"), list[2,94,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 94, 8400].  Tensor sizes: [2, 94, 0]
2025-03-05 15:22:59.447049 test begin: paddle.broadcast_to(Tensor([2, 95, 0],"bool"), list[2,95,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 95, 0],"bool"), list[2,95,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 95, 10164].  Tensor sizes: [2, 95, 0]
2025-03-05 15:22:59.447599 test begin: paddle.broadcast_to(Tensor([2, 95, 0],"bool"), list[2,95,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 95, 0],"bool"), list[2,95,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 95, 12096].  Tensor sizes: [2, 95, 0]
2025-03-05 15:22:59.448142 test begin: paddle.broadcast_to(Tensor([2, 95, 0],"bool"), list[2,95,2541,], )

[torch error] paddle.broadcast_to(Tensor([2, 95, 0],"bool"), list[2,95,2541,], ) 
 The expanded size of the tensor (2541) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 95, 2541].  Tensor sizes: [2, 95, 0]
2025-03-05 15:22:59.448672 test begin: paddle.broadcast_to(Tensor([2, 95, 0],"bool"), list[2,95,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 95, 0],"bool"), list[2,95,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 95, 7581].  Tensor sizes: [2, 95, 0]
2025-03-05 15:22:59.449198 test begin: paddle.broadcast_to(Tensor([2, 95, 0],"bool"), list[2,95,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 95, 0],"bool"), list[2,95,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 95, 9261].  Tensor sizes: [2, 95, 0]
2025-03-05 15:22:59.449723 test begin: paddle.broadcast_to(Tensor([2, 96, 0],"bool"), list[2,96,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 96, 0],"bool"), list[2,96,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 96, 2100].  Tensor sizes: [2, 96, 0]
2025-03-05 15:22:59.450239 test begin: paddle.broadcast_to(Tensor([2, 96, 0],"bool"), list[2,96,3024,], )

[torch error] paddle.broadcast_to(Tensor([2, 96, 0],"bool"), list[2,96,3024,], ) 
 The expanded size of the tensor (3024) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 96, 3024].  Tensor sizes: [2, 96, 0]
2025-03-05 15:22:59.450824 test begin: paddle.broadcast_to(Tensor([2, 96, 0],"bool"), list[2,96,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 96, 0],"bool"), list[2,96,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 96, 8400].  Tensor sizes: [2, 96, 0]
2025-03-05 15:22:59.451361 test begin: paddle.broadcast_to(Tensor([2, 97, 0],"bool"), list[2,97,10164,], )

[torch error] paddle.broadcast_to(Tensor([2, 97, 0],"bool"), list[2,97,10164,], ) 
 The expanded size of the tensor (10164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 97, 10164].  Tensor sizes: [2, 97, 0]
2025-03-05 15:22:59.451881 test begin: paddle.broadcast_to(Tensor([2, 97, 0],"bool"), list[2,97,12096,], )

[torch error] paddle.broadcast_to(Tensor([2, 97, 0],"bool"), list[2,97,12096,], ) 
 The expanded size of the tensor (12096) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 97, 12096].  Tensor sizes: [2, 97, 0]
2025-03-05 15:22:59.452419 test begin: paddle.broadcast_to(Tensor([2, 97, 0],"bool"), list[2,97,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 97, 0],"bool"), list[2,97,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 97, 7581].  Tensor sizes: [2, 97, 0]
2025-03-05 15:22:59.452956 test begin: paddle.broadcast_to(Tensor([2, 97, 0],"bool"), list[2,97,8400,], )

[torch error] paddle.broadcast_to(Tensor([2, 97, 0],"bool"), list[2,97,8400,], ) 
 The expanded size of the tensor (8400) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 97, 8400].  Tensor sizes: [2, 97, 0]
2025-03-05 15:22:59.453474 test begin: paddle.broadcast_to(Tensor([2, 98, 0],"bool"), list[2,98,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 98, 0],"bool"), list[2,98,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 98, 4116].  Tensor sizes: [2, 98, 0]
2025-03-05 15:22:59.454002 test begin: paddle.broadcast_to(Tensor([2, 98, 0],"bool"), list[2,98,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 98, 0],"bool"), list[2,98,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 98, 4725].  Tensor sizes: [2, 98, 0]
2025-03-05 15:22:59.454537 test begin: paddle.broadcast_to(Tensor([2, 98, 0],"bool"), list[2,98,7581,], )

[torch error] paddle.broadcast_to(Tensor([2, 98, 0],"bool"), list[2,98,7581,], ) 
 The expanded size of the tensor (7581) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 98, 7581].  Tensor sizes: [2, 98, 0]
2025-03-05 15:22:59.455120 test begin: paddle.broadcast_to(Tensor([2, 98, 0],"bool"), list[2,98,9261,], )

[torch error] paddle.broadcast_to(Tensor([2, 98, 0],"bool"), list[2,98,9261,], ) 
 The expanded size of the tensor (9261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 98, 9261].  Tensor sizes: [2, 98, 0]
2025-03-05 15:22:59.455650 test begin: paddle.broadcast_to(Tensor([2, 99, 0],"bool"), list[2,99,2100,], )

[torch error] paddle.broadcast_to(Tensor([2, 99, 0],"bool"), list[2,99,2100,], ) 
 The expanded size of the tensor (2100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 99, 2100].  Tensor sizes: [2, 99, 0]
2025-03-05 15:22:59.456171 test begin: paddle.broadcast_to(Tensor([2, 99, 0],"bool"), list[2,99,4116,], )

[torch error] paddle.broadcast_to(Tensor([2, 99, 0],"bool"), list[2,99,4116,], ) 
 The expanded size of the tensor (4116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 99, 4116].  Tensor sizes: [2, 99, 0]
2025-03-05 15:22:59.456689 test begin: paddle.broadcast_to(Tensor([2, 99, 0],"bool"), list[2,99,4725,], )

[torch error] paddle.broadcast_to(Tensor([2, 99, 0],"bool"), list[2,99,4725,], ) 
 The expanded size of the tensor (4725) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [2, 99, 4725].  Tensor sizes: [2, 99, 0]
2025-03-05 15:22:59.457214 test begin: paddle.broadcast_to(Tensor([20, 0],"float32"), tuple(20,4,), )

[torch error] paddle.broadcast_to(Tensor([20, 0],"float32"), tuple(20,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [20, 4].  Tensor sizes: [20, 0]
2025-03-05 15:22:59.457731 test begin: paddle.broadcast_to(Tensor([20, 0],"int64"), tuple(20,4,), )

[torch error] paddle.broadcast_to(Tensor([20, 0],"int64"), tuple(20,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [20, 4].  Tensor sizes: [20, 0]
2025-03-05 15:22:59.458314 test begin: paddle.broadcast_to(Tensor([222, 0],"float64"), list[111,222,333,], )

[torch error] paddle.broadcast_to(Tensor([222, 0],"float64"), list[111,222,333,], ) 
 The expanded size of the tensor (333) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [111, 222, 333].  Tensor sizes: [222, 0]
2025-03-05 15:22:59.458840 test begin: paddle.broadcast_to(Tensor([28, 0],"float32"), tuple(28,5,), )

[torch error] paddle.broadcast_to(Tensor([28, 0],"float32"), tuple(28,5,), ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [28, 5].  Tensor sizes: [28, 0]
2025-03-05 15:22:59.459354 test begin: paddle.broadcast_to(Tensor([28, 0],"int64"), tuple(28,1,), )

[torch error] paddle.broadcast_to(Tensor([28, 0],"int64"), tuple(28,1,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [28, 1].  Tensor sizes: [28, 0]
2025-03-05 15:22:59.459933 test begin: paddle.broadcast_to(Tensor([3, 0, 1, 105],"bool"), list[3,8,1,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 1, 105],"bool"), list[3,8,1,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 1, 105].  Tensor sizes: [3, 0, 1, 105]
2025-03-05 15:22:59.460476 test begin: paddle.broadcast_to(Tensor([3, 0, 1, 169],"bool"), list[3,8,1,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 1, 169],"bool"), list[3,8,1,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 1, 169].  Tensor sizes: [3, 0, 1, 169]
2025-03-05 15:22:59.461025 test begin: paddle.broadcast_to(Tensor([3, 0, 1, 1],"bool"), list[3,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 1, 1],"bool"), list[3,8,1,1,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 1, 1].  Tensor sizes: [3, 0, 1, 1]
2025-03-05 15:22:59.461552 test begin: paddle.broadcast_to(Tensor([3, 0, 1, 21],"bool"), list[3,8,1,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 1, 21],"bool"), list[3,8,1,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 1, 21].  Tensor sizes: [3, 0, 1, 21]
2025-03-05 15:22:59.462422 test begin: paddle.broadcast_to(Tensor([3, 0, 1, 9],"bool"), list[3,8,1,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 1, 9],"bool"), list[3,8,1,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 1, 9].  Tensor sizes: [3, 0, 1, 9]
2025-03-05 15:22:59.463107 test begin: paddle.broadcast_to(Tensor([3, 0, 10, 105],"bool"), list[3,8,10,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 10, 105],"bool"), list[3,8,10,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 10, 105].  Tensor sizes: [3, 0, 10, 105]
2025-03-05 15:22:59.463834 test begin: paddle.broadcast_to(Tensor([3, 0, 10, 10],"bool"), list[3,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 10, 10],"bool"), list[3,8,10,10,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 10, 10].  Tensor sizes: [3, 0, 10, 10]
2025-03-05 15:22:59.464514 test begin: paddle.broadcast_to(Tensor([3, 0, 10, 169],"bool"), list[3,8,10,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 10, 169],"bool"), list[3,8,10,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 10, 169].  Tensor sizes: [3, 0, 10, 169]
2025-03-05 15:22:59.465151 test begin: paddle.broadcast_to(Tensor([3, 0, 10, 21],"bool"), list[3,8,10,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 10, 21],"bool"), list[3,8,10,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 10, 21].  Tensor sizes: [3, 0, 10, 21]
2025-03-05 15:22:59.465802 test begin: paddle.broadcast_to(Tensor([3, 0, 10, 9],"bool"), list[3,8,10,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 10, 9],"bool"), list[3,8,10,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 10, 9].  Tensor sizes: [3, 0, 10, 9]
2025-03-05 15:22:59.466492 test begin: paddle.broadcast_to(Tensor([3, 0, 100, 100],"bool"), list[3,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 100, 100],"bool"), list[3,8,100,100,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 100, 100].  Tensor sizes: [3, 0, 100, 100]
2025-03-05 15:22:59.467049 test begin: paddle.broadcast_to(Tensor([3, 0, 100, 169],"bool"), list[3,8,100,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 100, 169],"bool"), list[3,8,100,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 100, 169].  Tensor sizes: [3, 0, 100, 169]
2025-03-05 15:22:59.467573 test begin: paddle.broadcast_to(Tensor([3, 0, 101, 101],"bool"), list[3,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 101, 101],"bool"), list[3,8,101,101,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 101, 101].  Tensor sizes: [3, 0, 101, 101]
2025-03-05 15:22:59.468112 test begin: paddle.broadcast_to(Tensor([3, 0, 101, 169],"bool"), list[3,8,101,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 101, 169],"bool"), list[3,8,101,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 101, 169].  Tensor sizes: [3, 0, 101, 169]
2025-03-05 15:22:59.468647 test begin: paddle.broadcast_to(Tensor([3, 0, 102, 102],"bool"), list[3,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 102, 102],"bool"), list[3,8,102,102,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 102, 102].  Tensor sizes: [3, 0, 102, 102]
2025-03-05 15:22:59.469180 test begin: paddle.broadcast_to(Tensor([3, 0, 102, 169],"bool"), list[3,8,102,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 102, 169],"bool"), list[3,8,102,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 102, 169].  Tensor sizes: [3, 0, 102, 169]
2025-03-05 15:22:59.469706 test begin: paddle.broadcast_to(Tensor([3, 0, 103, 103],"bool"), list[3,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 103, 103],"bool"), list[3,8,103,103,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 103, 103].  Tensor sizes: [3, 0, 103, 103]
2025-03-05 15:22:59.470235 test begin: paddle.broadcast_to(Tensor([3, 0, 103, 169],"bool"), list[3,8,103,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 103, 169],"bool"), list[3,8,103,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 103, 169].  Tensor sizes: [3, 0, 103, 169]
2025-03-05 15:22:59.470756 test begin: paddle.broadcast_to(Tensor([3, 0, 104, 104],"bool"), list[3,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 104, 104],"bool"), list[3,8,104,104,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 104, 104].  Tensor sizes: [3, 0, 104, 104]
2025-03-05 15:22:59.471296 test begin: paddle.broadcast_to(Tensor([3, 0, 104, 169],"bool"), list[3,8,104,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 104, 169],"bool"), list[3,8,104,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 104, 169].  Tensor sizes: [3, 0, 104, 169]
2025-03-05 15:22:59.471830 test begin: paddle.broadcast_to(Tensor([3, 0, 105, 105],"bool"), list[3,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 105, 105],"bool"), list[3,8,105,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 105, 105].  Tensor sizes: [3, 0, 105, 105]
2025-03-05 15:22:59.472350 test begin: paddle.broadcast_to(Tensor([3, 0, 105, 169],"bool"), list[3,8,105,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 105, 169],"bool"), list[3,8,105,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 105, 169].  Tensor sizes: [3, 0, 105, 169]
2025-03-05 15:22:59.472878 test begin: paddle.broadcast_to(Tensor([3, 0, 106, 106],"bool"), list[3,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 106, 106],"bool"), list[3,8,106,106,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 106, 106].  Tensor sizes: [3, 0, 106, 106]
2025-03-05 15:22:59.473412 test begin: paddle.broadcast_to(Tensor([3, 0, 106, 169],"bool"), list[3,8,106,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 106, 169],"bool"), list[3,8,106,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 106, 169].  Tensor sizes: [3, 0, 106, 169]
2025-03-05 15:22:59.473956 test begin: paddle.broadcast_to(Tensor([3, 0, 107, 107],"bool"), list[3,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 107, 107],"bool"), list[3,8,107,107,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 107, 107].  Tensor sizes: [3, 0, 107, 107]
2025-03-05 15:22:59.474488 test begin: paddle.broadcast_to(Tensor([3, 0, 107, 169],"bool"), list[3,8,107,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 107, 169],"bool"), list[3,8,107,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 107, 169].  Tensor sizes: [3, 0, 107, 169]
2025-03-05 15:22:59.475061 test begin: paddle.broadcast_to(Tensor([3, 0, 108, 108],"bool"), list[3,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 108, 108],"bool"), list[3,8,108,108,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 108, 108].  Tensor sizes: [3, 0, 108, 108]
2025-03-05 15:22:59.475578 test begin: paddle.broadcast_to(Tensor([3, 0, 108, 169],"bool"), list[3,8,108,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 108, 169],"bool"), list[3,8,108,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 108, 169].  Tensor sizes: [3, 0, 108, 169]
2025-03-05 15:22:59.476123 test begin: paddle.broadcast_to(Tensor([3, 0, 109, 109],"bool"), list[3,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 109, 109],"bool"), list[3,8,109,109,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 109, 109].  Tensor sizes: [3, 0, 109, 109]
2025-03-05 15:22:59.476652 test begin: paddle.broadcast_to(Tensor([3, 0, 109, 169],"bool"), list[3,8,109,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 109, 169],"bool"), list[3,8,109,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 109, 169].  Tensor sizes: [3, 0, 109, 169]
2025-03-05 15:22:59.477206 test begin: paddle.broadcast_to(Tensor([3, 0, 11, 105],"bool"), list[3,8,11,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 11, 105],"bool"), list[3,8,11,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 11, 105].  Tensor sizes: [3, 0, 11, 105]
2025-03-05 15:22:59.477748 test begin: paddle.broadcast_to(Tensor([3, 0, 11, 11],"bool"), list[3,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 11, 11],"bool"), list[3,8,11,11,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 11, 11].  Tensor sizes: [3, 0, 11, 11]
2025-03-05 15:22:59.478301 test begin: paddle.broadcast_to(Tensor([3, 0, 11, 169],"bool"), list[3,8,11,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 11, 169],"bool"), list[3,8,11,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 11, 169].  Tensor sizes: [3, 0, 11, 169]
2025-03-05 15:22:59.478848 test begin: paddle.broadcast_to(Tensor([3, 0, 11, 21],"bool"), list[3,8,11,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 11, 21],"bool"), list[3,8,11,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 11, 21].  Tensor sizes: [3, 0, 11, 21]
2025-03-05 15:22:59.479392 test begin: paddle.broadcast_to(Tensor([3, 0, 11, 9],"bool"), list[3,8,11,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 11, 9],"bool"), list[3,8,11,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 11, 9].  Tensor sizes: [3, 0, 11, 9]
2025-03-05 15:22:59.479936 test begin: paddle.broadcast_to(Tensor([3, 0, 110, 110],"bool"), list[3,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 110, 110],"bool"), list[3,8,110,110,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 110, 110].  Tensor sizes: [3, 0, 110, 110]
2025-03-05 15:22:59.480470 test begin: paddle.broadcast_to(Tensor([3, 0, 110, 169],"bool"), list[3,8,110,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 110, 169],"bool"), list[3,8,110,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 110, 169].  Tensor sizes: [3, 0, 110, 169]
2025-03-05 15:22:59.481056 test begin: paddle.broadcast_to(Tensor([3, 0, 111, 111],"bool"), list[3,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 111, 111],"bool"), list[3,8,111,111,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 111, 111].  Tensor sizes: [3, 0, 111, 111]
2025-03-05 15:22:59.481605 test begin: paddle.broadcast_to(Tensor([3, 0, 111, 169],"bool"), list[3,8,111,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 111, 169],"bool"), list[3,8,111,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 111, 169].  Tensor sizes: [3, 0, 111, 169]
2025-03-05 15:22:59.482154 test begin: paddle.broadcast_to(Tensor([3, 0, 112, 112],"bool"), list[3,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 112, 112],"bool"), list[3,8,112,112,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 112, 112].  Tensor sizes: [3, 0, 112, 112]
2025-03-05 15:22:59.482691 test begin: paddle.broadcast_to(Tensor([3, 0, 112, 169],"bool"), list[3,8,112,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 112, 169],"bool"), list[3,8,112,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 112, 169].  Tensor sizes: [3, 0, 112, 169]
2025-03-05 15:22:59.483228 test begin: paddle.broadcast_to(Tensor([3, 0, 113, 113],"bool"), list[3,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 113, 113],"bool"), list[3,8,113,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 113, 113].  Tensor sizes: [3, 0, 113, 113]
2025-03-05 15:22:59.483769 test begin: paddle.broadcast_to(Tensor([3, 0, 113, 169],"bool"), list[3,8,113,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 113, 169],"bool"), list[3,8,113,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 113, 169].  Tensor sizes: [3, 0, 113, 169]
2025-03-05 15:22:59.484309 test begin: paddle.broadcast_to(Tensor([3, 0, 114, 114],"bool"), list[3,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 114, 114],"bool"), list[3,8,114,114,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 114, 114].  Tensor sizes: [3, 0, 114, 114]
2025-03-05 15:22:59.484850 test begin: paddle.broadcast_to(Tensor([3, 0, 114, 169],"bool"), list[3,8,114,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 114, 169],"bool"), list[3,8,114,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 114, 169].  Tensor sizes: [3, 0, 114, 169]
2025-03-05 15:22:59.485390 test begin: paddle.broadcast_to(Tensor([3, 0, 115, 115],"bool"), list[3,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 115, 115],"bool"), list[3,8,115,115,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 115, 115].  Tensor sizes: [3, 0, 115, 115]
2025-03-05 15:22:59.485938 test begin: paddle.broadcast_to(Tensor([3, 0, 115, 169],"bool"), list[3,8,115,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 115, 169],"bool"), list[3,8,115,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 115, 169].  Tensor sizes: [3, 0, 115, 169]
2025-03-05 15:22:59.486475 test begin: paddle.broadcast_to(Tensor([3, 0, 116, 116],"bool"), list[3,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 116, 116],"bool"), list[3,8,116,116,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 116, 116].  Tensor sizes: [3, 0, 116, 116]
2025-03-05 15:22:59.487027 test begin: paddle.broadcast_to(Tensor([3, 0, 116, 169],"bool"), list[3,8,116,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 116, 169],"bool"), list[3,8,116,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 116, 169].  Tensor sizes: [3, 0, 116, 169]
2025-03-05 15:22:59.487561 test begin: paddle.broadcast_to(Tensor([3, 0, 117, 117],"bool"), list[3,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 117, 117],"bool"), list[3,8,117,117,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 117, 117].  Tensor sizes: [3, 0, 117, 117]
2025-03-05 15:22:59.488116 test begin: paddle.broadcast_to(Tensor([3, 0, 117, 169],"bool"), list[3,8,117,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 117, 169],"bool"), list[3,8,117,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 117, 169].  Tensor sizes: [3, 0, 117, 169]
2025-03-05 15:22:59.488652 test begin: paddle.broadcast_to(Tensor([3, 0, 118, 118],"bool"), list[3,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 118, 118],"bool"), list[3,8,118,118,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 118, 118].  Tensor sizes: [3, 0, 118, 118]
2025-03-05 15:22:59.489210 test begin: paddle.broadcast_to(Tensor([3, 0, 118, 169],"bool"), list[3,8,118,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 118, 169],"bool"), list[3,8,118,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 118, 169].  Tensor sizes: [3, 0, 118, 169]
2025-03-05 15:22:59.489759 test begin: paddle.broadcast_to(Tensor([3, 0, 119, 119],"bool"), list[3,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 119, 119],"bool"), list[3,8,119,119,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 119, 119].  Tensor sizes: [3, 0, 119, 119]
2025-03-05 15:22:59.490294 test begin: paddle.broadcast_to(Tensor([3, 0, 119, 169],"bool"), list[3,8,119,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 119, 169],"bool"), list[3,8,119,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 119, 169].  Tensor sizes: [3, 0, 119, 169]
2025-03-05 15:22:59.490842 test begin: paddle.broadcast_to(Tensor([3, 0, 12, 105],"bool"), list[3,8,12,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 12, 105],"bool"), list[3,8,12,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 12, 105].  Tensor sizes: [3, 0, 12, 105]
2025-03-05 15:22:59.491383 test begin: paddle.broadcast_to(Tensor([3, 0, 12, 12],"bool"), list[3,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 12, 12],"bool"), list[3,8,12,12,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 12, 12].  Tensor sizes: [3, 0, 12, 12]
2025-03-05 15:22:59.491927 test begin: paddle.broadcast_to(Tensor([3, 0, 12, 169],"bool"), list[3,8,12,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 12, 169],"bool"), list[3,8,12,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 12, 169].  Tensor sizes: [3, 0, 12, 169]
2025-03-05 15:22:59.492459 test begin: paddle.broadcast_to(Tensor([3, 0, 12, 21],"bool"), list[3,8,12,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 12, 21],"bool"), list[3,8,12,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 12, 21].  Tensor sizes: [3, 0, 12, 21]
2025-03-05 15:22:59.493026 test begin: paddle.broadcast_to(Tensor([3, 0, 12, 9],"bool"), list[3,8,12,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 12, 9],"bool"), list[3,8,12,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 12, 9].  Tensor sizes: [3, 0, 12, 9]
2025-03-05 15:22:59.493560 test begin: paddle.broadcast_to(Tensor([3, 0, 120, 120],"bool"), list[3,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 120, 120],"bool"), list[3,8,120,120,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 120, 120].  Tensor sizes: [3, 0, 120, 120]
2025-03-05 15:22:59.494112 test begin: paddle.broadcast_to(Tensor([3, 0, 120, 169],"bool"), list[3,8,120,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 120, 169],"bool"), list[3,8,120,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 120, 169].  Tensor sizes: [3, 0, 120, 169]
2025-03-05 15:22:59.494656 test begin: paddle.broadcast_to(Tensor([3, 0, 121, 121],"bool"), list[3,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 121, 121],"bool"), list[3,8,121,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 121, 121].  Tensor sizes: [3, 0, 121, 121]
2025-03-05 15:22:59.495202 test begin: paddle.broadcast_to(Tensor([3, 0, 121, 169],"bool"), list[3,8,121,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 121, 169],"bool"), list[3,8,121,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 121, 169].  Tensor sizes: [3, 0, 121, 169]
2025-03-05 15:22:59.495742 test begin: paddle.broadcast_to(Tensor([3, 0, 122, 122],"bool"), list[3,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 122, 122],"bool"), list[3,8,122,122,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 122, 122].  Tensor sizes: [3, 0, 122, 122]
2025-03-05 15:22:59.496269 test begin: paddle.broadcast_to(Tensor([3, 0, 122, 169],"bool"), list[3,8,122,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 122, 169],"bool"), list[3,8,122,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 122, 169].  Tensor sizes: [3, 0, 122, 169]
2025-03-05 15:22:59.496799 test begin: paddle.broadcast_to(Tensor([3, 0, 123, 123],"bool"), list[3,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 123, 123],"bool"), list[3,8,123,123,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 123, 123].  Tensor sizes: [3, 0, 123, 123]
2025-03-05 15:22:59.497317 test begin: paddle.broadcast_to(Tensor([3, 0, 123, 169],"bool"), list[3,8,123,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 123, 169],"bool"), list[3,8,123,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 123, 169].  Tensor sizes: [3, 0, 123, 169]
2025-03-05 15:22:59.497852 test begin: paddle.broadcast_to(Tensor([3, 0, 124, 124],"bool"), list[3,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 124, 124],"bool"), list[3,8,124,124,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 124, 124].  Tensor sizes: [3, 0, 124, 124]
2025-03-05 15:22:59.498381 test begin: paddle.broadcast_to(Tensor([3, 0, 124, 169],"bool"), list[3,8,124,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 124, 169],"bool"), list[3,8,124,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 124, 169].  Tensor sizes: [3, 0, 124, 169]
2025-03-05 15:22:59.498956 test begin: paddle.broadcast_to(Tensor([3, 0, 125, 125],"bool"), list[3,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 125, 125],"bool"), list[3,8,125,125,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 125, 125].  Tensor sizes: [3, 0, 125, 125]
2025-03-05 15:22:59.499481 test begin: paddle.broadcast_to(Tensor([3, 0, 125, 169],"bool"), list[3,8,125,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 125, 169],"bool"), list[3,8,125,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 125, 169].  Tensor sizes: [3, 0, 125, 169]
2025-03-05 15:22:59.500031 test begin: paddle.broadcast_to(Tensor([3, 0, 126, 126],"bool"), list[3,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 126, 126],"bool"), list[3,8,126,126,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 126, 126].  Tensor sizes: [3, 0, 126, 126]
2025-03-05 15:22:59.500605 test begin: paddle.broadcast_to(Tensor([3, 0, 126, 169],"bool"), list[3,8,126,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 126, 169],"bool"), list[3,8,126,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 126, 169].  Tensor sizes: [3, 0, 126, 169]
2025-03-05 15:22:59.501181 test begin: paddle.broadcast_to(Tensor([3, 0, 127, 127],"bool"), list[3,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 127, 127],"bool"), list[3,8,127,127,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 127, 127].  Tensor sizes: [3, 0, 127, 127]
2025-03-05 15:22:59.501735 test begin: paddle.broadcast_to(Tensor([3, 0, 127, 169],"bool"), list[3,8,127,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 127, 169],"bool"), list[3,8,127,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 127, 169].  Tensor sizes: [3, 0, 127, 169]
2025-03-05 15:22:59.502306 test begin: paddle.broadcast_to(Tensor([3, 0, 128, 128],"bool"), list[3,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 128, 128],"bool"), list[3,8,128,128,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 128, 128].  Tensor sizes: [3, 0, 128, 128]
2025-03-05 15:22:59.502852 test begin: paddle.broadcast_to(Tensor([3, 0, 128, 169],"bool"), list[3,8,128,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 128, 169],"bool"), list[3,8,128,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 128, 169].  Tensor sizes: [3, 0, 128, 169]
2025-03-05 15:22:59.503384 test begin: paddle.broadcast_to(Tensor([3, 0, 129, 129],"bool"), list[3,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 129, 129],"bool"), list[3,8,129,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 129, 129].  Tensor sizes: [3, 0, 129, 129]
2025-03-05 15:22:59.503951 test begin: paddle.broadcast_to(Tensor([3, 0, 129, 169],"bool"), list[3,8,129,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 129, 169],"bool"), list[3,8,129,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 129, 169].  Tensor sizes: [3, 0, 129, 169]
2025-03-05 15:22:59.504489 test begin: paddle.broadcast_to(Tensor([3, 0, 13, 105],"bool"), list[3,8,13,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 13, 105],"bool"), list[3,8,13,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 13, 105].  Tensor sizes: [3, 0, 13, 105]
2025-03-05 15:22:59.505043 test begin: paddle.broadcast_to(Tensor([3, 0, 13, 13],"bool"), list[3,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 13, 13],"bool"), list[3,8,13,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 13, 13].  Tensor sizes: [3, 0, 13, 13]
2025-03-05 15:22:59.505578 test begin: paddle.broadcast_to(Tensor([3, 0, 13, 169],"bool"), list[3,8,13,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 13, 169],"bool"), list[3,8,13,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 13, 169].  Tensor sizes: [3, 0, 13, 169]
2025-03-05 15:22:59.506163 test begin: paddle.broadcast_to(Tensor([3, 0, 13, 21],"bool"), list[3,8,13,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 13, 21],"bool"), list[3,8,13,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 13, 21].  Tensor sizes: [3, 0, 13, 21]
2025-03-05 15:22:59.506743 test begin: paddle.broadcast_to(Tensor([3, 0, 13, 9],"bool"), list[3,8,13,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 13, 9],"bool"), list[3,8,13,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 13, 9].  Tensor sizes: [3, 0, 13, 9]
2025-03-05 15:22:59.507302 test begin: paddle.broadcast_to(Tensor([3, 0, 130, 130],"bool"), list[3,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 130, 130],"bool"), list[3,8,130,130,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 130, 130].  Tensor sizes: [3, 0, 130, 130]
2025-03-05 15:22:59.507868 test begin: paddle.broadcast_to(Tensor([3, 0, 130, 169],"bool"), list[3,8,130,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 130, 169],"bool"), list[3,8,130,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 130, 169].  Tensor sizes: [3, 0, 130, 169]
2025-03-05 15:22:59.508411 test begin: paddle.broadcast_to(Tensor([3, 0, 131, 131],"bool"), list[3,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 131, 131],"bool"), list[3,8,131,131,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 131, 131].  Tensor sizes: [3, 0, 131, 131]
2025-03-05 15:22:59.508971 test begin: paddle.broadcast_to(Tensor([3, 0, 131, 169],"bool"), list[3,8,131,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 131, 169],"bool"), list[3,8,131,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 131, 169].  Tensor sizes: [3, 0, 131, 169]
2025-03-05 15:22:59.509568 test begin: paddle.broadcast_to(Tensor([3, 0, 132, 132],"bool"), list[3,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 132, 132],"bool"), list[3,8,132,132,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 132, 132].  Tensor sizes: [3, 0, 132, 132]
2025-03-05 15:22:59.510186 test begin: paddle.broadcast_to(Tensor([3, 0, 132, 169],"bool"), list[3,8,132,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 132, 169],"bool"), list[3,8,132,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 132, 169].  Tensor sizes: [3, 0, 132, 169]
2025-03-05 15:22:59.510733 test begin: paddle.broadcast_to(Tensor([3, 0, 133, 133],"bool"), list[3,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 133, 133],"bool"), list[3,8,133,133,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 133, 133].  Tensor sizes: [3, 0, 133, 133]
2025-03-05 15:22:59.511282 test begin: paddle.broadcast_to(Tensor([3, 0, 133, 169],"bool"), list[3,8,133,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 133, 169],"bool"), list[3,8,133,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 133, 169].  Tensor sizes: [3, 0, 133, 169]
2025-03-05 15:22:59.511845 test begin: paddle.broadcast_to(Tensor([3, 0, 134, 134],"bool"), list[3,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 134, 134],"bool"), list[3,8,134,134,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 134, 134].  Tensor sizes: [3, 0, 134, 134]
2025-03-05 15:22:59.512397 test begin: paddle.broadcast_to(Tensor([3, 0, 134, 169],"bool"), list[3,8,134,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 134, 169],"bool"), list[3,8,134,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 134, 169].  Tensor sizes: [3, 0, 134, 169]
2025-03-05 15:22:59.512951 test begin: paddle.broadcast_to(Tensor([3, 0, 135, 135],"bool"), list[3,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 135, 135],"bool"), list[3,8,135,135,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 135, 135].  Tensor sizes: [3, 0, 135, 135]
2025-03-05 15:22:59.513499 test begin: paddle.broadcast_to(Tensor([3, 0, 135, 169],"bool"), list[3,8,135,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 135, 169],"bool"), list[3,8,135,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 135, 169].  Tensor sizes: [3, 0, 135, 169]
2025-03-05 15:22:59.514057 test begin: paddle.broadcast_to(Tensor([3, 0, 136, 136],"bool"), list[3,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 136, 136],"bool"), list[3,8,136,136,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 136, 136].  Tensor sizes: [3, 0, 136, 136]
2025-03-05 15:22:59.514605 test begin: paddle.broadcast_to(Tensor([3, 0, 136, 169],"bool"), list[3,8,136,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 136, 169],"bool"), list[3,8,136,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 136, 169].  Tensor sizes: [3, 0, 136, 169]
2025-03-05 15:22:59.515147 test begin: paddle.broadcast_to(Tensor([3, 0, 137, 137],"bool"), list[3,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 137, 137],"bool"), list[3,8,137,137,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 137, 137].  Tensor sizes: [3, 0, 137, 137]
2025-03-05 15:22:59.515693 test begin: paddle.broadcast_to(Tensor([3, 0, 137, 169],"bool"), list[3,8,137,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 137, 169],"bool"), list[3,8,137,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 137, 169].  Tensor sizes: [3, 0, 137, 169]
2025-03-05 15:22:59.516237 test begin: paddle.broadcast_to(Tensor([3, 0, 138, 138],"bool"), list[3,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 138, 138],"bool"), list[3,8,138,138,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 138, 138].  Tensor sizes: [3, 0, 138, 138]
2025-03-05 15:22:59.516832 test begin: paddle.broadcast_to(Tensor([3, 0, 138, 169],"bool"), list[3,8,138,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 138, 169],"bool"), list[3,8,138,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 138, 169].  Tensor sizes: [3, 0, 138, 169]
2025-03-05 15:22:59.517395 test begin: paddle.broadcast_to(Tensor([3, 0, 139, 139],"bool"), list[3,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 139, 139],"bool"), list[3,8,139,139,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 139, 139].  Tensor sizes: [3, 0, 139, 139]
2025-03-05 15:22:59.517942 test begin: paddle.broadcast_to(Tensor([3, 0, 139, 169],"bool"), list[3,8,139,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 139, 169],"bool"), list[3,8,139,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 139, 169].  Tensor sizes: [3, 0, 139, 169]
2025-03-05 15:22:59.518490 test begin: paddle.broadcast_to(Tensor([3, 0, 14, 105],"bool"), list[3,8,14,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 14, 105],"bool"), list[3,8,14,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 14, 105].  Tensor sizes: [3, 0, 14, 105]
2025-03-05 15:22:59.519031 test begin: paddle.broadcast_to(Tensor([3, 0, 14, 14],"bool"), list[3,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 14, 14],"bool"), list[3,8,14,14,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 14, 14].  Tensor sizes: [3, 0, 14, 14]
2025-03-05 15:22:59.519572 test begin: paddle.broadcast_to(Tensor([3, 0, 14, 169],"bool"), list[3,8,14,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 14, 169],"bool"), list[3,8,14,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 14, 169].  Tensor sizes: [3, 0, 14, 169]
2025-03-05 15:22:59.520145 test begin: paddle.broadcast_to(Tensor([3, 0, 14, 21],"bool"), list[3,8,14,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 14, 21],"bool"), list[3,8,14,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 14, 21].  Tensor sizes: [3, 0, 14, 21]
2025-03-05 15:22:59.520679 test begin: paddle.broadcast_to(Tensor([3, 0, 14, 9],"bool"), list[3,8,14,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 14, 9],"bool"), list[3,8,14,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 14, 9].  Tensor sizes: [3, 0, 14, 9]
2025-03-05 15:22:59.521230 test begin: paddle.broadcast_to(Tensor([3, 0, 140, 140],"bool"), list[3,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 140, 140],"bool"), list[3,8,140,140,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 140, 140].  Tensor sizes: [3, 0, 140, 140]
2025-03-05 15:22:59.521772 test begin: paddle.broadcast_to(Tensor([3, 0, 140, 169],"bool"), list[3,8,140,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 140, 169],"bool"), list[3,8,140,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 140, 169].  Tensor sizes: [3, 0, 140, 169]
2025-03-05 15:22:59.522309 test begin: paddle.broadcast_to(Tensor([3, 0, 141, 141],"bool"), list[3,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 141, 141],"bool"), list[3,8,141,141,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 141, 141].  Tensor sizes: [3, 0, 141, 141]
2025-03-05 15:22:59.522915 test begin: paddle.broadcast_to(Tensor([3, 0, 141, 169],"bool"), list[3,8,141,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 141, 169],"bool"), list[3,8,141,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 141, 169].  Tensor sizes: [3, 0, 141, 169]
2025-03-05 15:22:59.523458 test begin: paddle.broadcast_to(Tensor([3, 0, 142, 142],"bool"), list[3,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 142, 142],"bool"), list[3,8,142,142,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 142, 142].  Tensor sizes: [3, 0, 142, 142]
2025-03-05 15:22:59.524012 test begin: paddle.broadcast_to(Tensor([3, 0, 142, 169],"bool"), list[3,8,142,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 142, 169],"bool"), list[3,8,142,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 142, 169].  Tensor sizes: [3, 0, 142, 169]
2025-03-05 15:22:59.524544 test begin: paddle.broadcast_to(Tensor([3, 0, 143, 143],"bool"), list[3,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 143, 143],"bool"), list[3,8,143,143,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 143, 143].  Tensor sizes: [3, 0, 143, 143]
2025-03-05 15:22:59.525100 test begin: paddle.broadcast_to(Tensor([3, 0, 143, 169],"bool"), list[3,8,143,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 143, 169],"bool"), list[3,8,143,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 143, 169].  Tensor sizes: [3, 0, 143, 169]
2025-03-05 15:22:59.525635 test begin: paddle.broadcast_to(Tensor([3, 0, 144, 144],"bool"), list[3,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 144, 144],"bool"), list[3,8,144,144,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 144, 144].  Tensor sizes: [3, 0, 144, 144]
2025-03-05 15:22:59.526190 test begin: paddle.broadcast_to(Tensor([3, 0, 144, 169],"bool"), list[3,8,144,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 144, 169],"bool"), list[3,8,144,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 144, 169].  Tensor sizes: [3, 0, 144, 169]
2025-03-05 15:22:59.526728 test begin: paddle.broadcast_to(Tensor([3, 0, 145, 145],"bool"), list[3,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 145, 145],"bool"), list[3,8,145,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 145, 145].  Tensor sizes: [3, 0, 145, 145]
2025-03-05 15:22:59.527263 test begin: paddle.broadcast_to(Tensor([3, 0, 145, 169],"bool"), list[3,8,145,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 145, 169],"bool"), list[3,8,145,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 145, 169].  Tensor sizes: [3, 0, 145, 169]
2025-03-05 15:22:59.527815 test begin: paddle.broadcast_to(Tensor([3, 0, 146, 146],"bool"), list[3,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 146, 146],"bool"), list[3,8,146,146,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 146, 146].  Tensor sizes: [3, 0, 146, 146]
2025-03-05 15:22:59.528400 test begin: paddle.broadcast_to(Tensor([3, 0, 146, 169],"bool"), list[3,8,146,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 146, 169],"bool"), list[3,8,146,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 146, 169].  Tensor sizes: [3, 0, 146, 169]
2025-03-05 15:22:59.529000 test begin: paddle.broadcast_to(Tensor([3, 0, 147, 147],"bool"), list[3,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 147, 147],"bool"), list[3,8,147,147,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 147, 147].  Tensor sizes: [3, 0, 147, 147]
2025-03-05 15:22:59.529529 test begin: paddle.broadcast_to(Tensor([3, 0, 147, 169],"bool"), list[3,8,147,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 147, 169],"bool"), list[3,8,147,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 147, 169].  Tensor sizes: [3, 0, 147, 169]
2025-03-05 15:22:59.530074 test begin: paddle.broadcast_to(Tensor([3, 0, 148, 148],"bool"), list[3,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 148, 148],"bool"), list[3,8,148,148,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 148, 148].  Tensor sizes: [3, 0, 148, 148]
2025-03-05 15:22:59.530612 test begin: paddle.broadcast_to(Tensor([3, 0, 148, 169],"bool"), list[3,8,148,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 148, 169],"bool"), list[3,8,148,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 148, 169].  Tensor sizes: [3, 0, 148, 169]
2025-03-05 15:22:59.531159 test begin: paddle.broadcast_to(Tensor([3, 0, 149, 149],"bool"), list[3,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 149, 149],"bool"), list[3,8,149,149,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 149, 149].  Tensor sizes: [3, 0, 149, 149]
2025-03-05 15:22:59.531698 test begin: paddle.broadcast_to(Tensor([3, 0, 149, 169],"bool"), list[3,8,149,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 149, 169],"bool"), list[3,8,149,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 149, 169].  Tensor sizes: [3, 0, 149, 169]
2025-03-05 15:22:59.532241 test begin: paddle.broadcast_to(Tensor([3, 0, 15, 105],"bool"), list[3,8,15,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 15, 105],"bool"), list[3,8,15,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 15, 105].  Tensor sizes: [3, 0, 15, 105]
2025-03-05 15:22:59.532773 test begin: paddle.broadcast_to(Tensor([3, 0, 15, 15],"bool"), list[3,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 15, 15],"bool"), list[3,8,15,15,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 15, 15].  Tensor sizes: [3, 0, 15, 15]
2025-03-05 15:22:59.533299 test begin: paddle.broadcast_to(Tensor([3, 0, 15, 169],"bool"), list[3,8,15,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 15, 169],"bool"), list[3,8,15,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 15, 169].  Tensor sizes: [3, 0, 15, 169]
2025-03-05 15:22:59.533836 test begin: paddle.broadcast_to(Tensor([3, 0, 15, 21],"bool"), list[3,8,15,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 15, 21],"bool"), list[3,8,15,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 15, 21].  Tensor sizes: [3, 0, 15, 21]
2025-03-05 15:22:59.534383 test begin: paddle.broadcast_to(Tensor([3, 0, 15, 9],"bool"), list[3,8,15,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 15, 9],"bool"), list[3,8,15,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 15, 9].  Tensor sizes: [3, 0, 15, 9]
2025-03-05 15:22:59.534955 test begin: paddle.broadcast_to(Tensor([3, 0, 150, 150],"bool"), list[3,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 150, 150],"bool"), list[3,8,150,150,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 150, 150].  Tensor sizes: [3, 0, 150, 150]
2025-03-05 15:22:59.535498 test begin: paddle.broadcast_to(Tensor([3, 0, 150, 169],"bool"), list[3,8,150,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 150, 169],"bool"), list[3,8,150,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 150, 169].  Tensor sizes: [3, 0, 150, 169]
2025-03-05 15:22:59.536040 test begin: paddle.broadcast_to(Tensor([3, 0, 151, 151],"bool"), list[3,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 151, 151],"bool"), list[3,8,151,151,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 151, 151].  Tensor sizes: [3, 0, 151, 151]
2025-03-05 15:22:59.536605 test begin: paddle.broadcast_to(Tensor([3, 0, 151, 169],"bool"), list[3,8,151,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 151, 169],"bool"), list[3,8,151,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 151, 169].  Tensor sizes: [3, 0, 151, 169]
2025-03-05 15:22:59.537140 test begin: paddle.broadcast_to(Tensor([3, 0, 152, 152],"bool"), list[3,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 152, 152],"bool"), list[3,8,152,152,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 152, 152].  Tensor sizes: [3, 0, 152, 152]
2025-03-05 15:22:59.537676 test begin: paddle.broadcast_to(Tensor([3, 0, 152, 169],"bool"), list[3,8,152,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 152, 169],"bool"), list[3,8,152,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 152, 169].  Tensor sizes: [3, 0, 152, 169]
2025-03-05 15:22:59.538233 test begin: paddle.broadcast_to(Tensor([3, 0, 153, 153],"bool"), list[3,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 153, 153],"bool"), list[3,8,153,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 153, 153].  Tensor sizes: [3, 0, 153, 153]
2025-03-05 15:22:59.538775 test begin: paddle.broadcast_to(Tensor([3, 0, 153, 169],"bool"), list[3,8,153,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 153, 169],"bool"), list[3,8,153,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 153, 169].  Tensor sizes: [3, 0, 153, 169]
2025-03-05 15:22:59.539318 test begin: paddle.broadcast_to(Tensor([3, 0, 154, 154],"bool"), list[3,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 154, 154],"bool"), list[3,8,154,154,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 154, 154].  Tensor sizes: [3, 0, 154, 154]
2025-03-05 15:22:59.539879 test begin: paddle.broadcast_to(Tensor([3, 0, 154, 169],"bool"), list[3,8,154,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 154, 169],"bool"), list[3,8,154,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 154, 169].  Tensor sizes: [3, 0, 154, 169]
2025-03-05 15:22:59.540433 test begin: paddle.broadcast_to(Tensor([3, 0, 155, 155],"bool"), list[3,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 155, 155],"bool"), list[3,8,155,155,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 155, 155].  Tensor sizes: [3, 0, 155, 155]
2025-03-05 15:22:59.540984 test begin: paddle.broadcast_to(Tensor([3, 0, 155, 169],"bool"), list[3,8,155,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 155, 169],"bool"), list[3,8,155,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 155, 169].  Tensor sizes: [3, 0, 155, 169]
2025-03-05 15:22:59.541535 test begin: paddle.broadcast_to(Tensor([3, 0, 156, 156],"bool"), list[3,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 156, 156],"bool"), list[3,8,156,156,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 156, 156].  Tensor sizes: [3, 0, 156, 156]
2025-03-05 15:22:59.542144 test begin: paddle.broadcast_to(Tensor([3, 0, 156, 169],"bool"), list[3,8,156,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 156, 169],"bool"), list[3,8,156,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 156, 169].  Tensor sizes: [3, 0, 156, 169]
2025-03-05 15:22:59.542682 test begin: paddle.broadcast_to(Tensor([3, 0, 157, 157],"bool"), list[3,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 157, 157],"bool"), list[3,8,157,157,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 157, 157].  Tensor sizes: [3, 0, 157, 157]
2025-03-05 15:22:59.543210 test begin: paddle.broadcast_to(Tensor([3, 0, 157, 169],"bool"), list[3,8,157,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 157, 169],"bool"), list[3,8,157,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 157, 169].  Tensor sizes: [3, 0, 157, 169]
2025-03-05 15:22:59.543744 test begin: paddle.broadcast_to(Tensor([3, 0, 158, 158],"bool"), list[3,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 158, 158],"bool"), list[3,8,158,158,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 158, 158].  Tensor sizes: [3, 0, 158, 158]
2025-03-05 15:22:59.544288 test begin: paddle.broadcast_to(Tensor([3, 0, 158, 169],"bool"), list[3,8,158,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 158, 169],"bool"), list[3,8,158,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 158, 169].  Tensor sizes: [3, 0, 158, 169]
2025-03-05 15:22:59.544827 test begin: paddle.broadcast_to(Tensor([3, 0, 159, 159],"bool"), list[3,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 159, 159],"bool"), list[3,8,159,159,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 159, 159].  Tensor sizes: [3, 0, 159, 159]
2025-03-05 15:22:59.545367 test begin: paddle.broadcast_to(Tensor([3, 0, 159, 169],"bool"), list[3,8,159,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 159, 169],"bool"), list[3,8,159,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 159, 169].  Tensor sizes: [3, 0, 159, 169]
2025-03-05 15:22:59.545902 test begin: paddle.broadcast_to(Tensor([3, 0, 16, 105],"bool"), list[3,8,16,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 16, 105],"bool"), list[3,8,16,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 16, 105].  Tensor sizes: [3, 0, 16, 105]
2025-03-05 15:22:59.546440 test begin: paddle.broadcast_to(Tensor([3, 0, 16, 169],"bool"), list[3,8,16,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 16, 169],"bool"), list[3,8,16,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 16, 169].  Tensor sizes: [3, 0, 16, 169]
2025-03-05 15:22:59.546982 test begin: paddle.broadcast_to(Tensor([3, 0, 16, 16],"bool"), list[3,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 16, 16],"bool"), list[3,8,16,16,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 16, 16].  Tensor sizes: [3, 0, 16, 16]
2025-03-05 15:22:59.547518 test begin: paddle.broadcast_to(Tensor([3, 0, 16, 21],"bool"), list[3,8,16,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 16, 21],"bool"), list[3,8,16,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 16, 21].  Tensor sizes: [3, 0, 16, 21]
2025-03-05 15:22:59.548053 test begin: paddle.broadcast_to(Tensor([3, 0, 16, 9],"bool"), list[3,8,16,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 16, 9],"bool"), list[3,8,16,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 16, 9].  Tensor sizes: [3, 0, 16, 9]
2025-03-05 15:22:59.548577 test begin: paddle.broadcast_to(Tensor([3, 0, 160, 160],"bool"), list[3,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 160, 160],"bool"), list[3,8,160,160,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 160, 160].  Tensor sizes: [3, 0, 160, 160]
2025-03-05 15:22:59.549173 test begin: paddle.broadcast_to(Tensor([3, 0, 160, 169],"bool"), list[3,8,160,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 160, 169],"bool"), list[3,8,160,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 160, 169].  Tensor sizes: [3, 0, 160, 169]
2025-03-05 15:22:59.549715 test begin: paddle.broadcast_to(Tensor([3, 0, 161, 161],"bool"), list[3,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 161, 161],"bool"), list[3,8,161,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 161, 161].  Tensor sizes: [3, 0, 161, 161]
2025-03-05 15:22:59.550271 test begin: paddle.broadcast_to(Tensor([3, 0, 161, 169],"bool"), list[3,8,161,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 161, 169],"bool"), list[3,8,161,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 161, 169].  Tensor sizes: [3, 0, 161, 169]
2025-03-05 15:22:59.550829 test begin: paddle.broadcast_to(Tensor([3, 0, 162, 162],"bool"), list[3,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 162, 162],"bool"), list[3,8,162,162,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 162, 162].  Tensor sizes: [3, 0, 162, 162]
2025-03-05 15:22:59.551367 test begin: paddle.broadcast_to(Tensor([3, 0, 162, 169],"bool"), list[3,8,162,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 162, 169],"bool"), list[3,8,162,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 162, 169].  Tensor sizes: [3, 0, 162, 169]
2025-03-05 15:22:59.551925 test begin: paddle.broadcast_to(Tensor([3, 0, 163, 163],"bool"), list[3,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 163, 163],"bool"), list[3,8,163,163,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 163, 163].  Tensor sizes: [3, 0, 163, 163]
2025-03-05 15:22:59.552463 test begin: paddle.broadcast_to(Tensor([3, 0, 163, 169],"bool"), list[3,8,163,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 163, 169],"bool"), list[3,8,163,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 163, 169].  Tensor sizes: [3, 0, 163, 169]
2025-03-05 15:22:59.553066 test begin: paddle.broadcast_to(Tensor([3, 0, 17, 105],"bool"), list[3,8,17,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 17, 105],"bool"), list[3,8,17,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 17, 105].  Tensor sizes: [3, 0, 17, 105]
2025-03-05 15:22:59.553622 test begin: paddle.broadcast_to(Tensor([3, 0, 17, 169],"bool"), list[3,8,17,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 17, 169],"bool"), list[3,8,17,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 17, 169].  Tensor sizes: [3, 0, 17, 169]
2025-03-05 15:22:59.554168 test begin: paddle.broadcast_to(Tensor([3, 0, 17, 17],"bool"), list[3,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 17, 17],"bool"), list[3,8,17,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 17, 17].  Tensor sizes: [3, 0, 17, 17]
2025-03-05 15:22:59.554710 test begin: paddle.broadcast_to(Tensor([3, 0, 17, 21],"bool"), list[3,8,17,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 17, 21],"bool"), list[3,8,17,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 17, 21].  Tensor sizes: [3, 0, 17, 21]
2025-03-05 15:22:59.555247 test begin: paddle.broadcast_to(Tensor([3, 0, 17, 9],"bool"), list[3,8,17,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 17, 9],"bool"), list[3,8,17,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 17, 9].  Tensor sizes: [3, 0, 17, 9]
2025-03-05 15:22:59.555788 test begin: paddle.broadcast_to(Tensor([3, 0, 18, 105],"bool"), list[3,8,18,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 18, 105],"bool"), list[3,8,18,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 18, 105].  Tensor sizes: [3, 0, 18, 105]
2025-03-05 15:22:59.556361 test begin: paddle.broadcast_to(Tensor([3, 0, 18, 169],"bool"), list[3,8,18,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 18, 169],"bool"), list[3,8,18,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 18, 169].  Tensor sizes: [3, 0, 18, 169]
2025-03-05 15:22:59.556945 test begin: paddle.broadcast_to(Tensor([3, 0, 18, 18],"bool"), list[3,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 18, 18],"bool"), list[3,8,18,18,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 18, 18].  Tensor sizes: [3, 0, 18, 18]
2025-03-05 15:22:59.557488 test begin: paddle.broadcast_to(Tensor([3, 0, 18, 21],"bool"), list[3,8,18,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 18, 21],"bool"), list[3,8,18,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 18, 21].  Tensor sizes: [3, 0, 18, 21]
2025-03-05 15:22:59.558102 test begin: paddle.broadcast_to(Tensor([3, 0, 18, 9],"bool"), list[3,8,18,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 18, 9],"bool"), list[3,8,18,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 18, 9].  Tensor sizes: [3, 0, 18, 9]
2025-03-05 15:22:59.558656 test begin: paddle.broadcast_to(Tensor([3, 0, 19, 105],"bool"), list[3,8,19,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 19, 105],"bool"), list[3,8,19,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 19, 105].  Tensor sizes: [3, 0, 19, 105]
2025-03-05 15:22:59.559215 test begin: paddle.broadcast_to(Tensor([3, 0, 19, 169],"bool"), list[3,8,19,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 19, 169],"bool"), list[3,8,19,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 19, 169].  Tensor sizes: [3, 0, 19, 169]
2025-03-05 15:22:59.559769 test begin: paddle.broadcast_to(Tensor([3, 0, 19, 19],"bool"), list[3,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 19, 19],"bool"), list[3,8,19,19,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 19, 19].  Tensor sizes: [3, 0, 19, 19]
2025-03-05 15:22:59.560316 test begin: paddle.broadcast_to(Tensor([3, 0, 19, 21],"bool"), list[3,8,19,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 19, 21],"bool"), list[3,8,19,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 19, 21].  Tensor sizes: [3, 0, 19, 21]
2025-03-05 15:22:59.560858 test begin: paddle.broadcast_to(Tensor([3, 0, 19, 9],"bool"), list[3,8,19,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 19, 9],"bool"), list[3,8,19,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 19, 9].  Tensor sizes: [3, 0, 19, 9]
2025-03-05 15:22:59.561415 test begin: paddle.broadcast_to(Tensor([3, 0, 2, 105],"bool"), list[3,8,2,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 2, 105],"bool"), list[3,8,2,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 2, 105].  Tensor sizes: [3, 0, 2, 105]
2025-03-05 15:22:59.561958 test begin: paddle.broadcast_to(Tensor([3, 0, 2, 169],"bool"), list[3,8,2,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 2, 169],"bool"), list[3,8,2,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 2, 169].  Tensor sizes: [3, 0, 2, 169]
2025-03-05 15:22:59.562495 test begin: paddle.broadcast_to(Tensor([3, 0, 2, 21],"bool"), list[3,8,2,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 2, 21],"bool"), list[3,8,2,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 2, 21].  Tensor sizes: [3, 0, 2, 21]
2025-03-05 15:22:59.563122 test begin: paddle.broadcast_to(Tensor([3, 0, 2, 2],"bool"), list[3,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 2, 2],"bool"), list[3,8,2,2,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 2, 2].  Tensor sizes: [3, 0, 2, 2]
2025-03-05 15:22:59.563696 test begin: paddle.broadcast_to(Tensor([3, 0, 2, 9],"bool"), list[3,8,2,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 2, 9],"bool"), list[3,8,2,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 2, 9].  Tensor sizes: [3, 0, 2, 9]
2025-03-05 15:22:59.564324 test begin: paddle.broadcast_to(Tensor([3, 0, 20, 105],"bool"), list[3,8,20,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 20, 105],"bool"), list[3,8,20,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 20, 105].  Tensor sizes: [3, 0, 20, 105]
2025-03-05 15:22:59.564919 test begin: paddle.broadcast_to(Tensor([3, 0, 20, 169],"bool"), list[3,8,20,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 20, 169],"bool"), list[3,8,20,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 20, 169].  Tensor sizes: [3, 0, 20, 169]
2025-03-05 15:22:59.565466 test begin: paddle.broadcast_to(Tensor([3, 0, 20, 20],"bool"), list[3,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 20, 20],"bool"), list[3,8,20,20,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 20, 20].  Tensor sizes: [3, 0, 20, 20]
2025-03-05 15:22:59.566018 test begin: paddle.broadcast_to(Tensor([3, 0, 20, 21],"bool"), list[3,8,20,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 20, 21],"bool"), list[3,8,20,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 20, 21].  Tensor sizes: [3, 0, 20, 21]
2025-03-05 15:22:59.566559 test begin: paddle.broadcast_to(Tensor([3, 0, 21, 105],"bool"), list[3,8,21,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 21, 105],"bool"), list[3,8,21,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 21, 105].  Tensor sizes: [3, 0, 21, 105]
2025-03-05 15:22:59.567106 test begin: paddle.broadcast_to(Tensor([3, 0, 21, 169],"bool"), list[3,8,21,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 21, 169],"bool"), list[3,8,21,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 21, 169].  Tensor sizes: [3, 0, 21, 169]
2025-03-05 15:22:59.567643 test begin: paddle.broadcast_to(Tensor([3, 0, 21, 21],"bool"), list[3,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 21, 21],"bool"), list[3,8,21,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 21, 21].  Tensor sizes: [3, 0, 21, 21]
2025-03-05 15:22:59.568204 test begin: paddle.broadcast_to(Tensor([3, 0, 22, 105],"bool"), list[3,8,22,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 22, 105],"bool"), list[3,8,22,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 22, 105].  Tensor sizes: [3, 0, 22, 105]
2025-03-05 15:22:59.568766 test begin: paddle.broadcast_to(Tensor([3, 0, 22, 169],"bool"), list[3,8,22,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 22, 169],"bool"), list[3,8,22,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 22, 169].  Tensor sizes: [3, 0, 22, 169]
2025-03-05 15:22:59.569329 test begin: paddle.broadcast_to(Tensor([3, 0, 22, 21],"bool"), list[3,8,22,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 22, 21],"bool"), list[3,8,22,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 22, 21].  Tensor sizes: [3, 0, 22, 21]
2025-03-05 15:22:59.569888 test begin: paddle.broadcast_to(Tensor([3, 0, 22, 22],"bool"), list[3,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 22, 22],"bool"), list[3,8,22,22,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 22, 22].  Tensor sizes: [3, 0, 22, 22]
2025-03-05 15:22:59.570454 test begin: paddle.broadcast_to(Tensor([3, 0, 23, 105],"bool"), list[3,8,23,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 23, 105],"bool"), list[3,8,23,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 23, 105].  Tensor sizes: [3, 0, 23, 105]
2025-03-05 15:22:59.571005 test begin: paddle.broadcast_to(Tensor([3, 0, 23, 169],"bool"), list[3,8,23,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 23, 169],"bool"), list[3,8,23,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 23, 169].  Tensor sizes: [3, 0, 23, 169]
2025-03-05 15:22:59.571538 test begin: paddle.broadcast_to(Tensor([3, 0, 23, 21],"bool"), list[3,8,23,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 23, 21],"bool"), list[3,8,23,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 23, 21].  Tensor sizes: [3, 0, 23, 21]
2025-03-05 15:22:59.572080 test begin: paddle.broadcast_to(Tensor([3, 0, 23, 23],"bool"), list[3,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 23, 23],"bool"), list[3,8,23,23,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 23, 23].  Tensor sizes: [3, 0, 23, 23]
2025-03-05 15:22:59.572617 test begin: paddle.broadcast_to(Tensor([3, 0, 24, 105],"bool"), list[3,8,24,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 24, 105],"bool"), list[3,8,24,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 24, 105].  Tensor sizes: [3, 0, 24, 105]
2025-03-05 15:22:59.573153 test begin: paddle.broadcast_to(Tensor([3, 0, 24, 169],"bool"), list[3,8,24,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 24, 169],"bool"), list[3,8,24,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 24, 169].  Tensor sizes: [3, 0, 24, 169]
2025-03-05 15:22:59.573686 test begin: paddle.broadcast_to(Tensor([3, 0, 24, 21],"bool"), list[3,8,24,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 24, 21],"bool"), list[3,8,24,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 24, 21].  Tensor sizes: [3, 0, 24, 21]
2025-03-05 15:22:59.574254 test begin: paddle.broadcast_to(Tensor([3, 0, 24, 24],"bool"), list[3,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 24, 24],"bool"), list[3,8,24,24,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 24, 24].  Tensor sizes: [3, 0, 24, 24]
2025-03-05 15:22:59.574798 test begin: paddle.broadcast_to(Tensor([3, 0, 25, 105],"bool"), list[3,8,25,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 25, 105],"bool"), list[3,8,25,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 25, 105].  Tensor sizes: [3, 0, 25, 105]
2025-03-05 15:22:59.575356 test begin: paddle.broadcast_to(Tensor([3, 0, 25, 169],"bool"), list[3,8,25,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 25, 169],"bool"), list[3,8,25,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 25, 169].  Tensor sizes: [3, 0, 25, 169]
2025-03-05 15:22:59.575909 test begin: paddle.broadcast_to(Tensor([3, 0, 25, 21],"bool"), list[3,8,25,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 25, 21],"bool"), list[3,8,25,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 25, 21].  Tensor sizes: [3, 0, 25, 21]
2025-03-05 15:22:59.576432 test begin: paddle.broadcast_to(Tensor([3, 0, 25, 25],"bool"), list[3,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 25, 25],"bool"), list[3,8,25,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 25, 25].  Tensor sizes: [3, 0, 25, 25]
2025-03-05 15:22:59.576965 test begin: paddle.broadcast_to(Tensor([3, 0, 26, 105],"bool"), list[3,8,26,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 26, 105],"bool"), list[3,8,26,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 26, 105].  Tensor sizes: [3, 0, 26, 105]
2025-03-05 15:22:59.577524 test begin: paddle.broadcast_to(Tensor([3, 0, 26, 169],"bool"), list[3,8,26,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 26, 169],"bool"), list[3,8,26,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 26, 169].  Tensor sizes: [3, 0, 26, 169]
2025-03-05 15:22:59.578079 test begin: paddle.broadcast_to(Tensor([3, 0, 26, 21],"bool"), list[3,8,26,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 26, 21],"bool"), list[3,8,26,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 26, 21].  Tensor sizes: [3, 0, 26, 21]
2025-03-05 15:22:59.578687 test begin: paddle.broadcast_to(Tensor([3, 0, 26, 26],"bool"), list[3,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 26, 26],"bool"), list[3,8,26,26,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 26, 26].  Tensor sizes: [3, 0, 26, 26]
2025-03-05 15:22:59.579267 test begin: paddle.broadcast_to(Tensor([3, 0, 27, 105],"bool"), list[3,8,27,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 27, 105],"bool"), list[3,8,27,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 27, 105].  Tensor sizes: [3, 0, 27, 105]
2025-03-05 15:22:59.579867 test begin: paddle.broadcast_to(Tensor([3, 0, 27, 169],"bool"), list[3,8,27,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 27, 169],"bool"), list[3,8,27,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 27, 169].  Tensor sizes: [3, 0, 27, 169]
2025-03-05 15:22:59.580422 test begin: paddle.broadcast_to(Tensor([3, 0, 27, 21],"bool"), list[3,8,27,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 27, 21],"bool"), list[3,8,27,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 27, 21].  Tensor sizes: [3, 0, 27, 21]
2025-03-05 15:22:59.580979 test begin: paddle.broadcast_to(Tensor([3, 0, 27, 27],"bool"), list[3,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 27, 27],"bool"), list[3,8,27,27,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 27, 27].  Tensor sizes: [3, 0, 27, 27]
2025-03-05 15:22:59.581516 test begin: paddle.broadcast_to(Tensor([3, 0, 28, 105],"bool"), list[3,8,28,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 28, 105],"bool"), list[3,8,28,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 28, 105].  Tensor sizes: [3, 0, 28, 105]
2025-03-05 15:22:59.582078 test begin: paddle.broadcast_to(Tensor([3, 0, 28, 169],"bool"), list[3,8,28,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 28, 169],"bool"), list[3,8,28,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 28, 169].  Tensor sizes: [3, 0, 28, 169]
2025-03-05 15:22:59.582616 test begin: paddle.broadcast_to(Tensor([3, 0, 28, 21],"bool"), list[3,8,28,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 28, 21],"bool"), list[3,8,28,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 28, 21].  Tensor sizes: [3, 0, 28, 21]
2025-03-05 15:22:59.583152 test begin: paddle.broadcast_to(Tensor([3, 0, 28, 28],"bool"), list[3,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 28, 28],"bool"), list[3,8,28,28,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 28, 28].  Tensor sizes: [3, 0, 28, 28]
2025-03-05 15:22:59.583692 test begin: paddle.broadcast_to(Tensor([3, 0, 29, 105],"bool"), list[3,8,29,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 29, 105],"bool"), list[3,8,29,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 29, 105].  Tensor sizes: [3, 0, 29, 105]
2025-03-05 15:22:59.584251 test begin: paddle.broadcast_to(Tensor([3, 0, 29, 169],"bool"), list[3,8,29,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 29, 169],"bool"), list[3,8,29,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 29, 169].  Tensor sizes: [3, 0, 29, 169]
2025-03-05 15:22:59.584799 test begin: paddle.broadcast_to(Tensor([3, 0, 29, 21],"bool"), list[3,8,29,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 29, 21],"bool"), list[3,8,29,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 29, 21].  Tensor sizes: [3, 0, 29, 21]
2025-03-05 15:22:59.585346 test begin: paddle.broadcast_to(Tensor([3, 0, 29, 29],"bool"), list[3,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 29, 29],"bool"), list[3,8,29,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 29, 29].  Tensor sizes: [3, 0, 29, 29]
2025-03-05 15:22:59.585889 test begin: paddle.broadcast_to(Tensor([3, 0, 3, 1, 2, 5],"int32"), tuple(3,6,3,1,2,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 0, 3, 1, 2, 5],"int32"), tuple(3,6,3,1,2,5,), ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 6, 3, 1, 2, 5].  Tensor sizes: [3, 0, 3, 1, 2, 5]
2025-03-05 15:22:59.586527 test begin: paddle.broadcast_to(Tensor([3, 0, 3, 105],"bool"), list[3,8,3,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 3, 105],"bool"), list[3,8,3,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 3, 105].  Tensor sizes: [3, 0, 3, 105]
2025-03-05 15:22:59.587130 test begin: paddle.broadcast_to(Tensor([3, 0, 3, 169],"bool"), list[3,8,3,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 3, 169],"bool"), list[3,8,3,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 3, 169].  Tensor sizes: [3, 0, 3, 169]
2025-03-05 15:22:59.587679 test begin: paddle.broadcast_to(Tensor([3, 0, 3, 21],"bool"), list[3,8,3,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 3, 21],"bool"), list[3,8,3,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 3, 21].  Tensor sizes: [3, 0, 3, 21]
2025-03-05 15:22:59.588213 test begin: paddle.broadcast_to(Tensor([3, 0, 3, 3],"bool"), list[3,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 3, 3],"bool"), list[3,8,3,3,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 3, 3].  Tensor sizes: [3, 0, 3, 3]
2025-03-05 15:22:59.588763 test begin: paddle.broadcast_to(Tensor([3, 0, 3, 4, 1, 5],"int32"), tuple(3,6,3,4,1,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 0, 3, 4, 1, 5],"int32"), tuple(3,6,3,4,1,5,), ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 6, 3, 4, 1, 5].  Tensor sizes: [3, 0, 3, 4, 1, 5]
2025-03-05 15:22:59.589384 test begin: paddle.broadcast_to(Tensor([3, 0, 3, 4, 2, 1],"int32"), tuple(3,6,3,4,2,1,), )

[torch error] paddle.broadcast_to(Tensor([3, 0, 3, 4, 2, 1],"int32"), tuple(3,6,3,4,2,1,), ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 6, 3, 4, 2, 1].  Tensor sizes: [3, 0, 3, 4, 2, 1]
2025-03-05 15:22:59.589990 test begin: paddle.broadcast_to(Tensor([3, 0, 3, 4, 2, 5],"float64"), tuple(3,6,3,4,2,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 0, 3, 4, 2, 5],"float64"), tuple(3,6,3,4,2,5,), ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 6, 3, 4, 2, 5].  Tensor sizes: [3, 0, 3, 4, 2, 5]
2025-03-05 15:22:59.590569 test begin: paddle.broadcast_to(Tensor([3, 0, 3, 9],"bool"), list[3,8,3,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 3, 9],"bool"), list[3,8,3,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 3, 9].  Tensor sizes: [3, 0, 3, 9]
2025-03-05 15:22:59.591138 test begin: paddle.broadcast_to(Tensor([3, 0, 30, 105],"bool"), list[3,8,30,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 30, 105],"bool"), list[3,8,30,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 30, 105].  Tensor sizes: [3, 0, 30, 105]
2025-03-05 15:22:59.591698 test begin: paddle.broadcast_to(Tensor([3, 0, 30, 169],"bool"), list[3,8,30,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 30, 169],"bool"), list[3,8,30,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 30, 169].  Tensor sizes: [3, 0, 30, 169]
2025-03-05 15:22:59.592259 test begin: paddle.broadcast_to(Tensor([3, 0, 30, 21],"bool"), list[3,8,30,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 30, 21],"bool"), list[3,8,30,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 30, 21].  Tensor sizes: [3, 0, 30, 21]
2025-03-05 15:22:59.592813 test begin: paddle.broadcast_to(Tensor([3, 0, 30, 30],"bool"), list[3,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 30, 30],"bool"), list[3,8,30,30,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 30, 30].  Tensor sizes: [3, 0, 30, 30]
2025-03-05 15:22:59.593358 test begin: paddle.broadcast_to(Tensor([3, 0, 31, 105],"bool"), list[3,8,31,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 31, 105],"bool"), list[3,8,31,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 31, 105].  Tensor sizes: [3, 0, 31, 105]
2025-03-05 15:22:59.593913 test begin: paddle.broadcast_to(Tensor([3, 0, 31, 169],"bool"), list[3,8,31,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 31, 169],"bool"), list[3,8,31,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 31, 169].  Tensor sizes: [3, 0, 31, 169]
2025-03-05 15:22:59.594442 test begin: paddle.broadcast_to(Tensor([3, 0, 31, 21],"bool"), list[3,8,31,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 31, 21],"bool"), list[3,8,31,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 31, 21].  Tensor sizes: [3, 0, 31, 21]
2025-03-05 15:22:59.594997 test begin: paddle.broadcast_to(Tensor([3, 0, 31, 31],"bool"), list[3,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 31, 31],"bool"), list[3,8,31,31,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 31, 31].  Tensor sizes: [3, 0, 31, 31]
2025-03-05 15:22:59.595543 test begin: paddle.broadcast_to(Tensor([3, 0, 32, 105],"bool"), list[3,8,32,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 32, 105],"bool"), list[3,8,32,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 32, 105].  Tensor sizes: [3, 0, 32, 105]
2025-03-05 15:22:59.596097 test begin: paddle.broadcast_to(Tensor([3, 0, 32, 169],"bool"), list[3,8,32,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 32, 169],"bool"), list[3,8,32,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 32, 169].  Tensor sizes: [3, 0, 32, 169]
2025-03-05 15:22:59.596637 test begin: paddle.broadcast_to(Tensor([3, 0, 32, 21],"bool"), list[3,8,32,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 32, 21],"bool"), list[3,8,32,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 32, 21].  Tensor sizes: [3, 0, 32, 21]
2025-03-05 15:22:59.597189 test begin: paddle.broadcast_to(Tensor([3, 0, 32, 32],"bool"), list[3,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 32, 32],"bool"), list[3,8,32,32,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 32, 32].  Tensor sizes: [3, 0, 32, 32]
2025-03-05 15:22:59.597735 test begin: paddle.broadcast_to(Tensor([3, 0, 33, 105],"bool"), list[3,8,33,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 33, 105],"bool"), list[3,8,33,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 33, 105].  Tensor sizes: [3, 0, 33, 105]
2025-03-05 15:22:59.598776 test begin: paddle.broadcast_to(Tensor([3, 0, 33, 169],"bool"), list[3,8,33,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 33, 169],"bool"), list[3,8,33,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 33, 169].  Tensor sizes: [3, 0, 33, 169]
2025-03-05 15:22:59.599473 test begin: paddle.broadcast_to(Tensor([3, 0, 33, 21],"bool"), list[3,8,33,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 33, 21],"bool"), list[3,8,33,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 33, 21].  Tensor sizes: [3, 0, 33, 21]
2025-03-05 15:22:59.600152 test begin: paddle.broadcast_to(Tensor([3, 0, 33, 33],"bool"), list[3,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 33, 33],"bool"), list[3,8,33,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 33, 33].  Tensor sizes: [3, 0, 33, 33]
2025-03-05 15:22:59.600942 test begin: paddle.broadcast_to(Tensor([3, 0, 34, 105],"bool"), list[3,8,34,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 34, 105],"bool"), list[3,8,34,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 34, 105].  Tensor sizes: [3, 0, 34, 105]
2025-03-05 15:22:59.601675 test begin: paddle.broadcast_to(Tensor([3, 0, 34, 169],"bool"), list[3,8,34,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 34, 169],"bool"), list[3,8,34,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 34, 169].  Tensor sizes: [3, 0, 34, 169]
2025-03-05 15:22:59.602351 test begin: paddle.broadcast_to(Tensor([3, 0, 34, 21],"bool"), list[3,8,34,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 34, 21],"bool"), list[3,8,34,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 34, 21].  Tensor sizes: [3, 0, 34, 21]
2025-03-05 15:22:59.603012 test begin: paddle.broadcast_to(Tensor([3, 0, 34, 34],"bool"), list[3,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 34, 34],"bool"), list[3,8,34,34,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 34, 34].  Tensor sizes: [3, 0, 34, 34]
2025-03-05 15:22:59.603698 test begin: paddle.broadcast_to(Tensor([3, 0, 35, 105],"bool"), list[3,8,35,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 35, 105],"bool"), list[3,8,35,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 35, 105].  Tensor sizes: [3, 0, 35, 105]
2025-03-05 15:22:59.604338 test begin: paddle.broadcast_to(Tensor([3, 0, 35, 169],"bool"), list[3,8,35,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 35, 169],"bool"), list[3,8,35,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 35, 169].  Tensor sizes: [3, 0, 35, 169]
2025-03-05 15:22:59.604986 test begin: paddle.broadcast_to(Tensor([3, 0, 35, 21],"bool"), list[3,8,35,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 35, 21],"bool"), list[3,8,35,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 35, 21].  Tensor sizes: [3, 0, 35, 21]
2025-03-05 15:22:59.605638 test begin: paddle.broadcast_to(Tensor([3, 0, 35, 35],"bool"), list[3,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 35, 35],"bool"), list[3,8,35,35,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 35, 35].  Tensor sizes: [3, 0, 35, 35]
2025-03-05 15:22:59.606294 test begin: paddle.broadcast_to(Tensor([3, 0, 36, 105],"bool"), list[3,8,36,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 36, 105],"bool"), list[3,8,36,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 36, 105].  Tensor sizes: [3, 0, 36, 105]
2025-03-05 15:22:59.606947 test begin: paddle.broadcast_to(Tensor([3, 0, 36, 169],"bool"), list[3,8,36,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 36, 169],"bool"), list[3,8,36,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 36, 169].  Tensor sizes: [3, 0, 36, 169]
2025-03-05 15:22:59.608330 test begin: paddle.broadcast_to(Tensor([3, 0, 36, 21],"bool"), list[3,8,36,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 36, 21],"bool"), list[3,8,36,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 36, 21].  Tensor sizes: [3, 0, 36, 21]
2025-03-05 15:22:59.609013 test begin: paddle.broadcast_to(Tensor([3, 0, 36, 36],"bool"), list[3,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 36, 36],"bool"), list[3,8,36,36,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 36, 36].  Tensor sizes: [3, 0, 36, 36]
2025-03-05 15:22:59.609665 test begin: paddle.broadcast_to(Tensor([3, 0, 37, 105],"bool"), list[3,8,37,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 37, 105],"bool"), list[3,8,37,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 37, 105].  Tensor sizes: [3, 0, 37, 105]
2025-03-05 15:22:59.610317 test begin: paddle.broadcast_to(Tensor([3, 0, 37, 169],"bool"), list[3,8,37,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 37, 169],"bool"), list[3,8,37,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 37, 169].  Tensor sizes: [3, 0, 37, 169]
2025-03-05 15:22:59.611407 test begin: paddle.broadcast_to(Tensor([3, 0, 37, 21],"bool"), list[3,8,37,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 37, 21],"bool"), list[3,8,37,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 37, 21].  Tensor sizes: [3, 0, 37, 21]
2025-03-05 15:22:59.612132 test begin: paddle.broadcast_to(Tensor([3, 0, 37, 37],"bool"), list[3,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 37, 37],"bool"), list[3,8,37,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 37, 37].  Tensor sizes: [3, 0, 37, 37]
2025-03-05 15:22:59.612869 test begin: paddle.broadcast_to(Tensor([3, 0, 38, 105],"bool"), list[3,8,38,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 38, 105],"bool"), list[3,8,38,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 38, 105].  Tensor sizes: [3, 0, 38, 105]
2025-03-05 15:22:59.613555 test begin: paddle.broadcast_to(Tensor([3, 0, 38, 169],"bool"), list[3,8,38,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 38, 169],"bool"), list[3,8,38,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 38, 169].  Tensor sizes: [3, 0, 38, 169]
2025-03-05 15:22:59.614270 test begin: paddle.broadcast_to(Tensor([3, 0, 38, 21],"bool"), list[3,8,38,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 38, 21],"bool"), list[3,8,38,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 38, 21].  Tensor sizes: [3, 0, 38, 21]
2025-03-05 15:22:59.614931 test begin: paddle.broadcast_to(Tensor([3, 0, 38, 38],"bool"), list[3,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 38, 38],"bool"), list[3,8,38,38,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 38, 38].  Tensor sizes: [3, 0, 38, 38]
2025-03-05 15:22:59.615567 test begin: paddle.broadcast_to(Tensor([3, 0, 39, 105],"bool"), list[3,8,39,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 39, 105],"bool"), list[3,8,39,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 39, 105].  Tensor sizes: [3, 0, 39, 105]
2025-03-05 15:22:59.616216 test begin: paddle.broadcast_to(Tensor([3, 0, 39, 169],"bool"), list[3,8,39,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 39, 169],"bool"), list[3,8,39,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 39, 169].  Tensor sizes: [3, 0, 39, 169]
2025-03-05 15:22:59.616867 test begin: paddle.broadcast_to(Tensor([3, 0, 39, 21],"bool"), list[3,8,39,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 39, 21],"bool"), list[3,8,39,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 39, 21].  Tensor sizes: [3, 0, 39, 21]
2025-03-05 15:22:59.617503 test begin: paddle.broadcast_to(Tensor([3, 0, 39, 39],"bool"), list[3,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 39, 39],"bool"), list[3,8,39,39,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 39, 39].  Tensor sizes: [3, 0, 39, 39]
2025-03-05 15:22:59.618138 test begin: paddle.broadcast_to(Tensor([3, 0, 3],"float32"), tuple(3,3,3,), )

[torch error] paddle.broadcast_to(Tensor([3, 0, 3],"float32"), tuple(3,3,3,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 3, 3].  Tensor sizes: [3, 0, 3]
2025-03-05 15:22:59.618795 test begin: paddle.broadcast_to(Tensor([3, 0, 3],"float64"), tuple(3,3,3,), )

[torch error] paddle.broadcast_to(Tensor([3, 0, 3],"float64"), tuple(3,3,3,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 3, 3].  Tensor sizes: [3, 0, 3]
2025-03-05 15:22:59.619428 test begin: paddle.broadcast_to(Tensor([3, 0, 4, 105],"bool"), list[3,8,4,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 4, 105],"bool"), list[3,8,4,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 4, 105].  Tensor sizes: [3, 0, 4, 105]
2025-03-05 15:22:59.620081 test begin: paddle.broadcast_to(Tensor([3, 0, 4, 169],"bool"), list[3,8,4,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 4, 169],"bool"), list[3,8,4,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 4, 169].  Tensor sizes: [3, 0, 4, 169]
2025-03-05 15:22:59.620751 test begin: paddle.broadcast_to(Tensor([3, 0, 4, 21],"bool"), list[3,8,4,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 4, 21],"bool"), list[3,8,4,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 4, 21].  Tensor sizes: [3, 0, 4, 21]
2025-03-05 15:22:59.621625 test begin: paddle.broadcast_to(Tensor([3, 0, 4, 4],"bool"), list[3,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 4, 4],"bool"), list[3,8,4,4,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 4, 4].  Tensor sizes: [3, 0, 4, 4]
2025-03-05 15:22:59.622209 test begin: paddle.broadcast_to(Tensor([3, 0, 4, 9],"bool"), list[3,8,4,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 4, 9],"bool"), list[3,8,4,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 4, 9].  Tensor sizes: [3, 0, 4, 9]
2025-03-05 15:22:59.622756 test begin: paddle.broadcast_to(Tensor([3, 0, 40, 105],"bool"), list[3,8,40,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 40, 105],"bool"), list[3,8,40,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 40, 105].  Tensor sizes: [3, 0, 40, 105]
2025-03-05 15:22:59.623289 test begin: paddle.broadcast_to(Tensor([3, 0, 40, 169],"bool"), list[3,8,40,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 40, 169],"bool"), list[3,8,40,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 40, 169].  Tensor sizes: [3, 0, 40, 169]
2025-03-05 15:22:59.623832 test begin: paddle.broadcast_to(Tensor([3, 0, 40, 21],"bool"), list[3,8,40,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 40, 21],"bool"), list[3,8,40,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 40, 21].  Tensor sizes: [3, 0, 40, 21]
2025-03-05 15:22:59.624367 test begin: paddle.broadcast_to(Tensor([3, 0, 40, 40],"bool"), list[3,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 40, 40],"bool"), list[3,8,40,40,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 40, 40].  Tensor sizes: [3, 0, 40, 40]
2025-03-05 15:22:59.625052 test begin: paddle.broadcast_to(Tensor([3, 0, 41, 105],"bool"), list[3,8,41,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 41, 105],"bool"), list[3,8,41,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 41, 105].  Tensor sizes: [3, 0, 41, 105]
2025-03-05 15:22:59.625726 test begin: paddle.broadcast_to(Tensor([3, 0, 41, 169],"bool"), list[3,8,41,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 41, 169],"bool"), list[3,8,41,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 41, 169].  Tensor sizes: [3, 0, 41, 169]
2025-03-05 15:22:59.626372 test begin: paddle.broadcast_to(Tensor([3, 0, 41, 21],"bool"), list[3,8,41,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 41, 21],"bool"), list[3,8,41,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 41, 21].  Tensor sizes: [3, 0, 41, 21]
2025-03-05 15:22:59.627027 test begin: paddle.broadcast_to(Tensor([3, 0, 41, 41],"bool"), list[3,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 41, 41],"bool"), list[3,8,41,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 41, 41].  Tensor sizes: [3, 0, 41, 41]
2025-03-05 15:22:59.627597 test begin: paddle.broadcast_to(Tensor([3, 0, 42, 105],"bool"), list[3,8,42,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 42, 105],"bool"), list[3,8,42,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 42, 105].  Tensor sizes: [3, 0, 42, 105]
2025-03-05 15:22:59.628205 test begin: paddle.broadcast_to(Tensor([3, 0, 42, 169],"bool"), list[3,8,42,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 42, 169],"bool"), list[3,8,42,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 42, 169].  Tensor sizes: [3, 0, 42, 169]
2025-03-05 15:22:59.628777 test begin: paddle.broadcast_to(Tensor([3, 0, 42, 21],"bool"), list[3,8,42,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 42, 21],"bool"), list[3,8,42,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 42, 21].  Tensor sizes: [3, 0, 42, 21]
2025-03-05 15:22:59.629325 test begin: paddle.broadcast_to(Tensor([3, 0, 42, 42],"bool"), list[3,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 42, 42],"bool"), list[3,8,42,42,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 42, 42].  Tensor sizes: [3, 0, 42, 42]
2025-03-05 15:22:59.629859 test begin: paddle.broadcast_to(Tensor([3, 0, 43, 105],"bool"), list[3,8,43,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 43, 105],"bool"), list[3,8,43,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 43, 105].  Tensor sizes: [3, 0, 43, 105]
2025-03-05 15:22:59.630389 test begin: paddle.broadcast_to(Tensor([3, 0, 43, 169],"bool"), list[3,8,43,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 43, 169],"bool"), list[3,8,43,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 43, 169].  Tensor sizes: [3, 0, 43, 169]
2025-03-05 15:22:59.630934 test begin: paddle.broadcast_to(Tensor([3, 0, 43, 21],"bool"), list[3,8,43,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 43, 21],"bool"), list[3,8,43,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 43, 21].  Tensor sizes: [3, 0, 43, 21]
2025-03-05 15:22:59.631458 test begin: paddle.broadcast_to(Tensor([3, 0, 43, 43],"bool"), list[3,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 43, 43],"bool"), list[3,8,43,43,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 43, 43].  Tensor sizes: [3, 0, 43, 43]
2025-03-05 15:22:59.632010 test begin: paddle.broadcast_to(Tensor([3, 0, 44, 105],"bool"), list[3,8,44,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 44, 105],"bool"), list[3,8,44,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 44, 105].  Tensor sizes: [3, 0, 44, 105]
2025-03-05 15:22:59.632544 test begin: paddle.broadcast_to(Tensor([3, 0, 44, 169],"bool"), list[3,8,44,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 44, 169],"bool"), list[3,8,44,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 44, 169].  Tensor sizes: [3, 0, 44, 169]
2025-03-05 15:22:59.633117 test begin: paddle.broadcast_to(Tensor([3, 0, 44, 21],"bool"), list[3,8,44,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 44, 21],"bool"), list[3,8,44,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 44, 21].  Tensor sizes: [3, 0, 44, 21]
2025-03-05 15:22:59.633670 test begin: paddle.broadcast_to(Tensor([3, 0, 44, 44],"bool"), list[3,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 44, 44],"bool"), list[3,8,44,44,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 44, 44].  Tensor sizes: [3, 0, 44, 44]
2025-03-05 15:22:59.634203 test begin: paddle.broadcast_to(Tensor([3, 0, 45, 105],"bool"), list[3,8,45,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 45, 105],"bool"), list[3,8,45,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 45, 105].  Tensor sizes: [3, 0, 45, 105]
2025-03-05 15:22:59.634795 test begin: paddle.broadcast_to(Tensor([3, 0, 45, 169],"bool"), list[3,8,45,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 45, 169],"bool"), list[3,8,45,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 45, 169].  Tensor sizes: [3, 0, 45, 169]
2025-03-05 15:22:59.635360 test begin: paddle.broadcast_to(Tensor([3, 0, 45, 21],"bool"), list[3,8,45,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 45, 21],"bool"), list[3,8,45,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 45, 21].  Tensor sizes: [3, 0, 45, 21]
2025-03-05 15:22:59.635902 test begin: paddle.broadcast_to(Tensor([3, 0, 45, 45],"bool"), list[3,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 45, 45],"bool"), list[3,8,45,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 45, 45].  Tensor sizes: [3, 0, 45, 45]
2025-03-05 15:22:59.636434 test begin: paddle.broadcast_to(Tensor([3, 0, 46, 105],"bool"), list[3,8,46,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 46, 105],"bool"), list[3,8,46,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 46, 105].  Tensor sizes: [3, 0, 46, 105]
2025-03-05 15:22:59.636969 test begin: paddle.broadcast_to(Tensor([3, 0, 46, 169],"bool"), list[3,8,46,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 46, 169],"bool"), list[3,8,46,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 46, 169].  Tensor sizes: [3, 0, 46, 169]
2025-03-05 15:22:59.637531 test begin: paddle.broadcast_to(Tensor([3, 0, 46, 21],"bool"), list[3,8,46,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 46, 21],"bool"), list[3,8,46,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 46, 21].  Tensor sizes: [3, 0, 46, 21]
2025-03-05 15:22:59.638088 test begin: paddle.broadcast_to(Tensor([3, 0, 46, 46],"bool"), list[3,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 46, 46],"bool"), list[3,8,46,46,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 46, 46].  Tensor sizes: [3, 0, 46, 46]
2025-03-05 15:22:59.638637 test begin: paddle.broadcast_to(Tensor([3, 0, 47, 105],"bool"), list[3,8,47,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 47, 105],"bool"), list[3,8,47,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 47, 105].  Tensor sizes: [3, 0, 47, 105]
2025-03-05 15:22:59.639168 test begin: paddle.broadcast_to(Tensor([3, 0, 47, 169],"bool"), list[3,8,47,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 47, 169],"bool"), list[3,8,47,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 47, 169].  Tensor sizes: [3, 0, 47, 169]
2025-03-05 15:22:59.639724 test begin: paddle.broadcast_to(Tensor([3, 0, 47, 21],"bool"), list[3,8,47,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 47, 21],"bool"), list[3,8,47,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 47, 21].  Tensor sizes: [3, 0, 47, 21]
2025-03-05 15:22:59.640250 test begin: paddle.broadcast_to(Tensor([3, 0, 47, 47],"bool"), list[3,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 47, 47],"bool"), list[3,8,47,47,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 47, 47].  Tensor sizes: [3, 0, 47, 47]
2025-03-05 15:22:59.640840 test begin: paddle.broadcast_to(Tensor([3, 0, 48, 105],"bool"), list[3,8,48,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 48, 105],"bool"), list[3,8,48,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 48, 105].  Tensor sizes: [3, 0, 48, 105]
2025-03-05 15:22:59.641371 test begin: paddle.broadcast_to(Tensor([3, 0, 48, 169],"bool"), list[3,8,48,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 48, 169],"bool"), list[3,8,48,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 48, 169].  Tensor sizes: [3, 0, 48, 169]
2025-03-05 15:22:59.641929 test begin: paddle.broadcast_to(Tensor([3, 0, 48, 21],"bool"), list[3,8,48,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 48, 21],"bool"), list[3,8,48,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 48, 21].  Tensor sizes: [3, 0, 48, 21]
2025-03-05 15:22:59.642459 test begin: paddle.broadcast_to(Tensor([3, 0, 48, 48],"bool"), list[3,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 48, 48],"bool"), list[3,8,48,48,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 48, 48].  Tensor sizes: [3, 0, 48, 48]
2025-03-05 15:22:59.642994 test begin: paddle.broadcast_to(Tensor([3, 0, 49, 105],"bool"), list[3,8,49,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 49, 105],"bool"), list[3,8,49,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 49, 105].  Tensor sizes: [3, 0, 49, 105]
2025-03-05 15:22:59.643553 test begin: paddle.broadcast_to(Tensor([3, 0, 49, 169],"bool"), list[3,8,49,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 49, 169],"bool"), list[3,8,49,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 49, 169].  Tensor sizes: [3, 0, 49, 169]
2025-03-05 15:22:59.644103 test begin: paddle.broadcast_to(Tensor([3, 0, 49, 21],"bool"), list[3,8,49,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 49, 21],"bool"), list[3,8,49,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 49, 21].  Tensor sizes: [3, 0, 49, 21]
2025-03-05 15:22:59.644664 test begin: paddle.broadcast_to(Tensor([3, 0, 49, 49],"bool"), list[3,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 49, 49],"bool"), list[3,8,49,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 49, 49].  Tensor sizes: [3, 0, 49, 49]
2025-03-05 15:22:59.645192 test begin: paddle.broadcast_to(Tensor([3, 0, 5, 105],"bool"), list[3,8,5,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 5, 105],"bool"), list[3,8,5,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 5, 105].  Tensor sizes: [3, 0, 5, 105]
2025-03-05 15:22:59.645731 test begin: paddle.broadcast_to(Tensor([3, 0, 5, 169],"bool"), list[3,8,5,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 5, 169],"bool"), list[3,8,5,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 5, 169].  Tensor sizes: [3, 0, 5, 169]
2025-03-05 15:22:59.646264 test begin: paddle.broadcast_to(Tensor([3, 0, 5, 21],"bool"), list[3,8,5,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 5, 21],"bool"), list[3,8,5,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 5, 21].  Tensor sizes: [3, 0, 5, 21]
2025-03-05 15:22:59.646811 test begin: paddle.broadcast_to(Tensor([3, 0, 5, 5],"bool"), list[3,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 5, 5],"bool"), list[3,8,5,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 5, 5].  Tensor sizes: [3, 0, 5, 5]
2025-03-05 15:22:59.647346 test begin: paddle.broadcast_to(Tensor([3, 0, 5, 9],"bool"), list[3,8,5,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 5, 9],"bool"), list[3,8,5,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 5, 9].  Tensor sizes: [3, 0, 5, 9]
2025-03-05 15:22:59.647961 test begin: paddle.broadcast_to(Tensor([3, 0, 50, 105],"bool"), list[3,8,50,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 50, 105],"bool"), list[3,8,50,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 50, 105].  Tensor sizes: [3, 0, 50, 105]
2025-03-05 15:22:59.648492 test begin: paddle.broadcast_to(Tensor([3, 0, 50, 169],"bool"), list[3,8,50,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 50, 169],"bool"), list[3,8,50,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 50, 169].  Tensor sizes: [3, 0, 50, 169]
2025-03-05 15:22:59.649034 test begin: paddle.broadcast_to(Tensor([3, 0, 50, 21],"bool"), list[3,8,50,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 50, 21],"bool"), list[3,8,50,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 50, 21].  Tensor sizes: [3, 0, 50, 21]
2025-03-05 15:22:59.649560 test begin: paddle.broadcast_to(Tensor([3, 0, 50, 50],"bool"), list[3,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 50, 50],"bool"), list[3,8,50,50,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 50, 50].  Tensor sizes: [3, 0, 50, 50]
2025-03-05 15:22:59.650119 test begin: paddle.broadcast_to(Tensor([3, 0, 51, 105],"bool"), list[3,8,51,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 51, 105],"bool"), list[3,8,51,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 51, 105].  Tensor sizes: [3, 0, 51, 105]
2025-03-05 15:22:59.650661 test begin: paddle.broadcast_to(Tensor([3, 0, 51, 169],"bool"), list[3,8,51,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 51, 169],"bool"), list[3,8,51,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 51, 169].  Tensor sizes: [3, 0, 51, 169]
2025-03-05 15:22:59.651199 test begin: paddle.broadcast_to(Tensor([3, 0, 51, 21],"bool"), list[3,8,51,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 51, 21],"bool"), list[3,8,51,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 51, 21].  Tensor sizes: [3, 0, 51, 21]
2025-03-05 15:22:59.651760 test begin: paddle.broadcast_to(Tensor([3, 0, 51, 51],"bool"), list[3,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 51, 51],"bool"), list[3,8,51,51,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 51, 51].  Tensor sizes: [3, 0, 51, 51]
2025-03-05 15:22:59.652305 test begin: paddle.broadcast_to(Tensor([3, 0, 52, 105],"bool"), list[3,8,52,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 52, 105],"bool"), list[3,8,52,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 52, 105].  Tensor sizes: [3, 0, 52, 105]
2025-03-05 15:22:59.652868 test begin: paddle.broadcast_to(Tensor([3, 0, 52, 169],"bool"), list[3,8,52,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 52, 169],"bool"), list[3,8,52,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 52, 169].  Tensor sizes: [3, 0, 52, 169]
2025-03-05 15:22:59.653412 test begin: paddle.broadcast_to(Tensor([3, 0, 52, 21],"bool"), list[3,8,52,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 52, 21],"bool"), list[3,8,52,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 52, 21].  Tensor sizes: [3, 0, 52, 21]
2025-03-05 15:22:59.653963 test begin: paddle.broadcast_to(Tensor([3, 0, 52, 52],"bool"), list[3,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 52, 52],"bool"), list[3,8,52,52,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 52, 52].  Tensor sizes: [3, 0, 52, 52]
2025-03-05 15:22:59.654507 test begin: paddle.broadcast_to(Tensor([3, 0, 53, 105],"bool"), list[3,8,53,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 53, 105],"bool"), list[3,8,53,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 53, 105].  Tensor sizes: [3, 0, 53, 105]
2025-03-05 15:22:59.655052 test begin: paddle.broadcast_to(Tensor([3, 0, 53, 169],"bool"), list[3,8,53,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 53, 169],"bool"), list[3,8,53,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 53, 169].  Tensor sizes: [3, 0, 53, 169]
2025-03-05 15:22:59.655601 test begin: paddle.broadcast_to(Tensor([3, 0, 53, 21],"bool"), list[3,8,53,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 53, 21],"bool"), list[3,8,53,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 53, 21].  Tensor sizes: [3, 0, 53, 21]
2025-03-05 15:22:59.656141 test begin: paddle.broadcast_to(Tensor([3, 0, 53, 53],"bool"), list[3,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 53, 53],"bool"), list[3,8,53,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 53, 53].  Tensor sizes: [3, 0, 53, 53]
2025-03-05 15:22:59.656680 test begin: paddle.broadcast_to(Tensor([3, 0, 54, 105],"bool"), list[3,8,54,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 54, 105],"bool"), list[3,8,54,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 54, 105].  Tensor sizes: [3, 0, 54, 105]
2025-03-05 15:22:59.657227 test begin: paddle.broadcast_to(Tensor([3, 0, 54, 169],"bool"), list[3,8,54,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 54, 169],"bool"), list[3,8,54,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 54, 169].  Tensor sizes: [3, 0, 54, 169]
2025-03-05 15:22:59.657769 test begin: paddle.broadcast_to(Tensor([3, 0, 54, 21],"bool"), list[3,8,54,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 54, 21],"bool"), list[3,8,54,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 54, 21].  Tensor sizes: [3, 0, 54, 21]
2025-03-05 15:22:59.658293 test begin: paddle.broadcast_to(Tensor([3, 0, 54, 54],"bool"), list[3,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 54, 54],"bool"), list[3,8,54,54,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 54, 54].  Tensor sizes: [3, 0, 54, 54]
2025-03-05 15:22:59.658881 test begin: paddle.broadcast_to(Tensor([3, 0, 55, 105],"bool"), list[3,8,55,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 55, 105],"bool"), list[3,8,55,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 55, 105].  Tensor sizes: [3, 0, 55, 105]
2025-03-05 15:22:59.659426 test begin: paddle.broadcast_to(Tensor([3, 0, 55, 169],"bool"), list[3,8,55,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 55, 169],"bool"), list[3,8,55,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 55, 169].  Tensor sizes: [3, 0, 55, 169]
2025-03-05 15:22:59.659968 test begin: paddle.broadcast_to(Tensor([3, 0, 55, 21],"bool"), list[3,8,55,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 55, 21],"bool"), list[3,8,55,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 55, 21].  Tensor sizes: [3, 0, 55, 21]
2025-03-05 15:22:59.660502 test begin: paddle.broadcast_to(Tensor([3, 0, 55, 55],"bool"), list[3,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 55, 55],"bool"), list[3,8,55,55,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 55, 55].  Tensor sizes: [3, 0, 55, 55]
2025-03-05 15:22:59.661086 test begin: paddle.broadcast_to(Tensor([3, 0, 56, 105],"bool"), list[3,8,56,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 56, 105],"bool"), list[3,8,56,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 56, 105].  Tensor sizes: [3, 0, 56, 105]
2025-03-05 15:22:59.661647 test begin: paddle.broadcast_to(Tensor([3, 0, 56, 169],"bool"), list[3,8,56,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 56, 169],"bool"), list[3,8,56,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 56, 169].  Tensor sizes: [3, 0, 56, 169]
2025-03-05 15:22:59.662186 test begin: paddle.broadcast_to(Tensor([3, 0, 56, 21],"bool"), list[3,8,56,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 56, 21],"bool"), list[3,8,56,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 56, 21].  Tensor sizes: [3, 0, 56, 21]
2025-03-05 15:22:59.662726 test begin: paddle.broadcast_to(Tensor([3, 0, 56, 56],"bool"), list[3,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 56, 56],"bool"), list[3,8,56,56,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 56, 56].  Tensor sizes: [3, 0, 56, 56]
2025-03-05 15:22:59.663281 test begin: paddle.broadcast_to(Tensor([3, 0, 57, 105],"bool"), list[3,8,57,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 57, 105],"bool"), list[3,8,57,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 57, 105].  Tensor sizes: [3, 0, 57, 105]
2025-03-05 15:22:59.663855 test begin: paddle.broadcast_to(Tensor([3, 0, 57, 169],"bool"), list[3,8,57,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 57, 169],"bool"), list[3,8,57,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 57, 169].  Tensor sizes: [3, 0, 57, 169]
2025-03-05 15:22:59.664394 test begin: paddle.broadcast_to(Tensor([3, 0, 57, 57],"bool"), list[3,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 57, 57],"bool"), list[3,8,57,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 57, 57].  Tensor sizes: [3, 0, 57, 57]
2025-03-05 15:22:59.664954 test begin: paddle.broadcast_to(Tensor([3, 0, 58, 105],"bool"), list[3,8,58,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 58, 105],"bool"), list[3,8,58,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 58, 105].  Tensor sizes: [3, 0, 58, 105]
2025-03-05 15:22:59.665520 test begin: paddle.broadcast_to(Tensor([3, 0, 58, 169],"bool"), list[3,8,58,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 58, 169],"bool"), list[3,8,58,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 58, 169].  Tensor sizes: [3, 0, 58, 169]
2025-03-05 15:22:59.666088 test begin: paddle.broadcast_to(Tensor([3, 0, 58, 58],"bool"), list[3,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 58, 58],"bool"), list[3,8,58,58,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 58, 58].  Tensor sizes: [3, 0, 58, 58]
2025-03-05 15:22:59.666634 test begin: paddle.broadcast_to(Tensor([3, 0, 59, 105],"bool"), list[3,8,59,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 59, 105],"bool"), list[3,8,59,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 59, 105].  Tensor sizes: [3, 0, 59, 105]
2025-03-05 15:22:59.667193 test begin: paddle.broadcast_to(Tensor([3, 0, 59, 169],"bool"), list[3,8,59,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 59, 169],"bool"), list[3,8,59,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 59, 169].  Tensor sizes: [3, 0, 59, 169]
2025-03-05 15:22:59.667745 test begin: paddle.broadcast_to(Tensor([3, 0, 59, 59],"bool"), list[3,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 59, 59],"bool"), list[3,8,59,59,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 59, 59].  Tensor sizes: [3, 0, 59, 59]
2025-03-05 15:22:59.668288 test begin: paddle.broadcast_to(Tensor([3, 0, 5],"float32"), tuple(3,2,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 0, 5],"float32"), tuple(3,2,5,), ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 2, 5].  Tensor sizes: [3, 0, 5]
2025-03-05 15:22:59.668843 test begin: paddle.broadcast_to(Tensor([3, 0, 6, 105],"bool"), list[3,8,6,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 6, 105],"bool"), list[3,8,6,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 6, 105].  Tensor sizes: [3, 0, 6, 105]
2025-03-05 15:22:59.669376 test begin: paddle.broadcast_to(Tensor([3, 0, 6, 169],"bool"), list[3,8,6,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 6, 169],"bool"), list[3,8,6,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 6, 169].  Tensor sizes: [3, 0, 6, 169]
2025-03-05 15:22:59.669934 test begin: paddle.broadcast_to(Tensor([3, 0, 6, 21],"bool"), list[3,8,6,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 6, 21],"bool"), list[3,8,6,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 6, 21].  Tensor sizes: [3, 0, 6, 21]
2025-03-05 15:22:59.670490 test begin: paddle.broadcast_to(Tensor([3, 0, 6, 6],"bool"), list[3,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 6, 6],"bool"), list[3,8,6,6,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 6, 6].  Tensor sizes: [3, 0, 6, 6]
2025-03-05 15:22:59.671028 test begin: paddle.broadcast_to(Tensor([3, 0, 6, 9],"bool"), list[3,8,6,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 6, 9],"bool"), list[3,8,6,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 6, 9].  Tensor sizes: [3, 0, 6, 9]
2025-03-05 15:22:59.671576 test begin: paddle.broadcast_to(Tensor([3, 0, 60, 105],"bool"), list[3,8,60,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 60, 105],"bool"), list[3,8,60,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 60, 105].  Tensor sizes: [3, 0, 60, 105]
2025-03-05 15:22:59.672141 test begin: paddle.broadcast_to(Tensor([3, 0, 60, 169],"bool"), list[3,8,60,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 60, 169],"bool"), list[3,8,60,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 60, 169].  Tensor sizes: [3, 0, 60, 169]
2025-03-05 15:22:59.672693 test begin: paddle.broadcast_to(Tensor([3, 0, 60, 60],"bool"), list[3,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 60, 60],"bool"), list[3,8,60,60,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 60, 60].  Tensor sizes: [3, 0, 60, 60]
2025-03-05 15:22:59.673224 test begin: paddle.broadcast_to(Tensor([3, 0, 61, 105],"bool"), list[3,8,61,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 61, 105],"bool"), list[3,8,61,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 61, 105].  Tensor sizes: [3, 0, 61, 105]
2025-03-05 15:22:59.673850 test begin: paddle.broadcast_to(Tensor([3, 0, 61, 169],"bool"), list[3,8,61,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 61, 169],"bool"), list[3,8,61,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 61, 169].  Tensor sizes: [3, 0, 61, 169]
2025-03-05 15:22:59.674384 test begin: paddle.broadcast_to(Tensor([3, 0, 61, 61],"bool"), list[3,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 61, 61],"bool"), list[3,8,61,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 61, 61].  Tensor sizes: [3, 0, 61, 61]
2025-03-05 15:22:59.674953 test begin: paddle.broadcast_to(Tensor([3, 0, 62, 105],"bool"), list[3,8,62,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 62, 105],"bool"), list[3,8,62,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 62, 105].  Tensor sizes: [3, 0, 62, 105]
2025-03-05 15:22:59.675502 test begin: paddle.broadcast_to(Tensor([3, 0, 62, 169],"bool"), list[3,8,62,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 62, 169],"bool"), list[3,8,62,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 62, 169].  Tensor sizes: [3, 0, 62, 169]
2025-03-05 15:22:59.676071 test begin: paddle.broadcast_to(Tensor([3, 0, 62, 62],"bool"), list[3,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 62, 62],"bool"), list[3,8,62,62,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 62, 62].  Tensor sizes: [3, 0, 62, 62]
2025-03-05 15:22:59.676616 test begin: paddle.broadcast_to(Tensor([3, 0, 63, 105],"bool"), list[3,8,63,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 63, 105],"bool"), list[3,8,63,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 63, 105].  Tensor sizes: [3, 0, 63, 105]
2025-03-05 15:22:59.677149 test begin: paddle.broadcast_to(Tensor([3, 0, 63, 169],"bool"), list[3,8,63,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 63, 169],"bool"), list[3,8,63,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 63, 169].  Tensor sizes: [3, 0, 63, 169]
2025-03-05 15:22:59.677718 test begin: paddle.broadcast_to(Tensor([3, 0, 63, 63],"bool"), list[3,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 63, 63],"bool"), list[3,8,63,63,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 63, 63].  Tensor sizes: [3, 0, 63, 63]
2025-03-05 15:22:59.678269 test begin: paddle.broadcast_to(Tensor([3, 0, 64, 105],"bool"), list[3,8,64,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 64, 105],"bool"), list[3,8,64,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 64, 105].  Tensor sizes: [3, 0, 64, 105]
2025-03-05 15:22:59.678825 test begin: paddle.broadcast_to(Tensor([3, 0, 64, 169],"bool"), list[3,8,64,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 64, 169],"bool"), list[3,8,64,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 64, 169].  Tensor sizes: [3, 0, 64, 169]
2025-03-05 15:22:59.679366 test begin: paddle.broadcast_to(Tensor([3, 0, 64, 64],"bool"), list[3,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 64, 64],"bool"), list[3,8,64,64,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 64, 64].  Tensor sizes: [3, 0, 64, 64]
2025-03-05 15:22:59.679922 test begin: paddle.broadcast_to(Tensor([3, 0, 65, 105],"bool"), list[3,8,65,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 65, 105],"bool"), list[3,8,65,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 65, 105].  Tensor sizes: [3, 0, 65, 105]
2025-03-05 15:22:59.680462 test begin: paddle.broadcast_to(Tensor([3, 0, 65, 169],"bool"), list[3,8,65,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 65, 169],"bool"), list[3,8,65,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 65, 169].  Tensor sizes: [3, 0, 65, 169]
2025-03-05 15:22:59.681010 test begin: paddle.broadcast_to(Tensor([3, 0, 65, 65],"bool"), list[3,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 65, 65],"bool"), list[3,8,65,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 65, 65].  Tensor sizes: [3, 0, 65, 65]
2025-03-05 15:22:59.681539 test begin: paddle.broadcast_to(Tensor([3, 0, 66, 105],"bool"), list[3,8,66,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 66, 105],"bool"), list[3,8,66,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 66, 105].  Tensor sizes: [3, 0, 66, 105]
2025-03-05 15:22:59.682082 test begin: paddle.broadcast_to(Tensor([3, 0, 66, 169],"bool"), list[3,8,66,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 66, 169],"bool"), list[3,8,66,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 66, 169].  Tensor sizes: [3, 0, 66, 169]
2025-03-05 15:22:59.682637 test begin: paddle.broadcast_to(Tensor([3, 0, 66, 66],"bool"), list[3,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 66, 66],"bool"), list[3,8,66,66,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 66, 66].  Tensor sizes: [3, 0, 66, 66]
2025-03-05 15:22:59.683191 test begin: paddle.broadcast_to(Tensor([3, 0, 67, 105],"bool"), list[3,8,67,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 67, 105],"bool"), list[3,8,67,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 67, 105].  Tensor sizes: [3, 0, 67, 105]
2025-03-05 15:22:59.683739 test begin: paddle.broadcast_to(Tensor([3, 0, 67, 169],"bool"), list[3,8,67,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 67, 169],"bool"), list[3,8,67,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 67, 169].  Tensor sizes: [3, 0, 67, 169]
2025-03-05 15:22:59.684271 test begin: paddle.broadcast_to(Tensor([3, 0, 67, 67],"bool"), list[3,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 67, 67],"bool"), list[3,8,67,67,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 67, 67].  Tensor sizes: [3, 0, 67, 67]
2025-03-05 15:22:59.684824 test begin: paddle.broadcast_to(Tensor([3, 0, 68, 105],"bool"), list[3,8,68,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 68, 105],"bool"), list[3,8,68,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 68, 105].  Tensor sizes: [3, 0, 68, 105]
2025-03-05 15:22:59.685353 test begin: paddle.broadcast_to(Tensor([3, 0, 68, 169],"bool"), list[3,8,68,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 68, 169],"bool"), list[3,8,68,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 68, 169].  Tensor sizes: [3, 0, 68, 169]
2025-03-05 15:22:59.685905 test begin: paddle.broadcast_to(Tensor([3, 0, 68, 68],"bool"), list[3,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 68, 68],"bool"), list[3,8,68,68,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 68, 68].  Tensor sizes: [3, 0, 68, 68]
2025-03-05 15:22:59.686440 test begin: paddle.broadcast_to(Tensor([3, 0, 69, 105],"bool"), list[3,8,69,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 69, 105],"bool"), list[3,8,69,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 69, 105].  Tensor sizes: [3, 0, 69, 105]
2025-03-05 15:22:59.686980 test begin: paddle.broadcast_to(Tensor([3, 0, 69, 169],"bool"), list[3,8,69,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 69, 169],"bool"), list[3,8,69,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 69, 169].  Tensor sizes: [3, 0, 69, 169]
2025-03-05 15:22:59.687526 test begin: paddle.broadcast_to(Tensor([3, 0, 69, 69],"bool"), list[3,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 69, 69],"bool"), list[3,8,69,69,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 69, 69].  Tensor sizes: [3, 0, 69, 69]
2025-03-05 15:22:59.688076 test begin: paddle.broadcast_to(Tensor([3, 0, 7, 105],"bool"), list[3,8,7,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 7, 105],"bool"), list[3,8,7,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 7, 105].  Tensor sizes: [3, 0, 7, 105]
2025-03-05 15:22:59.688647 test begin: paddle.broadcast_to(Tensor([3, 0, 7, 169],"bool"), list[3,8,7,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 7, 169],"bool"), list[3,8,7,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 7, 169].  Tensor sizes: [3, 0, 7, 169]
2025-03-05 15:22:59.689199 test begin: paddle.broadcast_to(Tensor([3, 0, 7, 21],"bool"), list[3,8,7,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 7, 21],"bool"), list[3,8,7,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 7, 21].  Tensor sizes: [3, 0, 7, 21]
2025-03-05 15:22:59.689761 test begin: paddle.broadcast_to(Tensor([3, 0, 7, 7],"bool"), list[3,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 7, 7],"bool"), list[3,8,7,7,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 7, 7].  Tensor sizes: [3, 0, 7, 7]
2025-03-05 15:22:59.690304 test begin: paddle.broadcast_to(Tensor([3, 0, 7, 9],"bool"), list[3,8,7,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 7, 9],"bool"), list[3,8,7,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 7, 9].  Tensor sizes: [3, 0, 7, 9]
2025-03-05 15:22:59.690854 test begin: paddle.broadcast_to(Tensor([3, 0, 70, 105],"bool"), list[3,8,70,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 70, 105],"bool"), list[3,8,70,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 70, 105].  Tensor sizes: [3, 0, 70, 105]
2025-03-05 15:22:59.691418 test begin: paddle.broadcast_to(Tensor([3, 0, 70, 169],"bool"), list[3,8,70,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 70, 169],"bool"), list[3,8,70,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 70, 169].  Tensor sizes: [3, 0, 70, 169]
2025-03-05 15:22:59.692043 test begin: paddle.broadcast_to(Tensor([3, 0, 70, 70],"bool"), list[3,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 70, 70],"bool"), list[3,8,70,70,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 70, 70].  Tensor sizes: [3, 0, 70, 70]
2025-03-05 15:22:59.692599 test begin: paddle.broadcast_to(Tensor([3, 0, 71, 105],"bool"), list[3,8,71,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 71, 105],"bool"), list[3,8,71,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 71, 105].  Tensor sizes: [3, 0, 71, 105]
2025-03-05 15:22:59.693144 test begin: paddle.broadcast_to(Tensor([3, 0, 71, 169],"bool"), list[3,8,71,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 71, 169],"bool"), list[3,8,71,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 71, 169].  Tensor sizes: [3, 0, 71, 169]
2025-03-05 15:22:59.693688 test begin: paddle.broadcast_to(Tensor([3, 0, 71, 71],"bool"), list[3,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 71, 71],"bool"), list[3,8,71,71,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 71, 71].  Tensor sizes: [3, 0, 71, 71]
2025-03-05 15:22:59.694226 test begin: paddle.broadcast_to(Tensor([3, 0, 72, 105],"bool"), list[3,8,72,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 72, 105],"bool"), list[3,8,72,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 72, 105].  Tensor sizes: [3, 0, 72, 105]
2025-03-05 15:22:59.694789 test begin: paddle.broadcast_to(Tensor([3, 0, 72, 169],"bool"), list[3,8,72,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 72, 169],"bool"), list[3,8,72,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 72, 169].  Tensor sizes: [3, 0, 72, 169]
2025-03-05 15:22:59.695326 test begin: paddle.broadcast_to(Tensor([3, 0, 72, 72],"bool"), list[3,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 72, 72],"bool"), list[3,8,72,72,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 72, 72].  Tensor sizes: [3, 0, 72, 72]
2025-03-05 15:22:59.695865 test begin: paddle.broadcast_to(Tensor([3, 0, 73, 105],"bool"), list[3,8,73,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 73, 105],"bool"), list[3,8,73,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 73, 105].  Tensor sizes: [3, 0, 73, 105]
2025-03-05 15:22:59.696389 test begin: paddle.broadcast_to(Tensor([3, 0, 73, 169],"bool"), list[3,8,73,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 73, 169],"bool"), list[3,8,73,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 73, 169].  Tensor sizes: [3, 0, 73, 169]
2025-03-05 15:22:59.696941 test begin: paddle.broadcast_to(Tensor([3, 0, 73, 73],"bool"), list[3,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 73, 73],"bool"), list[3,8,73,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 73, 73].  Tensor sizes: [3, 0, 73, 73]
2025-03-05 15:22:59.697471 test begin: paddle.broadcast_to(Tensor([3, 0, 74, 105],"bool"), list[3,8,74,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 74, 105],"bool"), list[3,8,74,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 74, 105].  Tensor sizes: [3, 0, 74, 105]
2025-03-05 15:22:59.698061 test begin: paddle.broadcast_to(Tensor([3, 0, 74, 169],"bool"), list[3,8,74,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 74, 169],"bool"), list[3,8,74,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 74, 169].  Tensor sizes: [3, 0, 74, 169]
2025-03-05 15:22:59.698602 test begin: paddle.broadcast_to(Tensor([3, 0, 74, 74],"bool"), list[3,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 74, 74],"bool"), list[3,8,74,74,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 74, 74].  Tensor sizes: [3, 0, 74, 74]
2025-03-05 15:22:59.699136 test begin: paddle.broadcast_to(Tensor([3, 0, 75, 105],"bool"), list[3,8,75,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 75, 105],"bool"), list[3,8,75,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 75, 105].  Tensor sizes: [3, 0, 75, 105]
2025-03-05 15:22:59.699683 test begin: paddle.broadcast_to(Tensor([3, 0, 75, 169],"bool"), list[3,8,75,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 75, 169],"bool"), list[3,8,75,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 75, 169].  Tensor sizes: [3, 0, 75, 169]
2025-03-05 15:22:59.700236 test begin: paddle.broadcast_to(Tensor([3, 0, 75, 75],"bool"), list[3,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 75, 75],"bool"), list[3,8,75,75,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 75, 75].  Tensor sizes: [3, 0, 75, 75]
2025-03-05 15:22:59.700837 test begin: paddle.broadcast_to(Tensor([3, 0, 76, 105],"bool"), list[3,8,76,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 76, 105],"bool"), list[3,8,76,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 76, 105].  Tensor sizes: [3, 0, 76, 105]
2025-03-05 15:22:59.701389 test begin: paddle.broadcast_to(Tensor([3, 0, 76, 169],"bool"), list[3,8,76,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 76, 169],"bool"), list[3,8,76,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 76, 169].  Tensor sizes: [3, 0, 76, 169]
2025-03-05 15:22:59.701968 test begin: paddle.broadcast_to(Tensor([3, 0, 76, 76],"bool"), list[3,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 76, 76],"bool"), list[3,8,76,76,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 76, 76].  Tensor sizes: [3, 0, 76, 76]
2025-03-05 15:22:59.702512 test begin: paddle.broadcast_to(Tensor([3, 0, 77, 105],"bool"), list[3,8,77,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 77, 105],"bool"), list[3,8,77,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 77, 105].  Tensor sizes: [3, 0, 77, 105]
2025-03-05 15:22:59.703156 test begin: paddle.broadcast_to(Tensor([3, 0, 77, 169],"bool"), list[3,8,77,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 77, 169],"bool"), list[3,8,77,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 77, 169].  Tensor sizes: [3, 0, 77, 169]
2025-03-05 15:22:59.703718 test begin: paddle.broadcast_to(Tensor([3, 0, 77, 77],"bool"), list[3,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 77, 77],"bool"), list[3,8,77,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 77, 77].  Tensor sizes: [3, 0, 77, 77]
2025-03-05 15:22:59.704262 test begin: paddle.broadcast_to(Tensor([3, 0, 78, 105],"bool"), list[3,8,78,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 78, 105],"bool"), list[3,8,78,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 78, 105].  Tensor sizes: [3, 0, 78, 105]
2025-03-05 15:22:59.704825 test begin: paddle.broadcast_to(Tensor([3, 0, 78, 169],"bool"), list[3,8,78,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 78, 169],"bool"), list[3,8,78,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 78, 169].  Tensor sizes: [3, 0, 78, 169]
2025-03-05 15:22:59.705369 test begin: paddle.broadcast_to(Tensor([3, 0, 78, 78],"bool"), list[3,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 78, 78],"bool"), list[3,8,78,78,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 78, 78].  Tensor sizes: [3, 0, 78, 78]
2025-03-05 15:22:59.705951 test begin: paddle.broadcast_to(Tensor([3, 0, 79, 105],"bool"), list[3,8,79,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 79, 105],"bool"), list[3,8,79,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 79, 105].  Tensor sizes: [3, 0, 79, 105]
2025-03-05 15:22:59.706520 test begin: paddle.broadcast_to(Tensor([3, 0, 79, 169],"bool"), list[3,8,79,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 79, 169],"bool"), list[3,8,79,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 79, 169].  Tensor sizes: [3, 0, 79, 169]
2025-03-05 15:22:59.707071 test begin: paddle.broadcast_to(Tensor([3, 0, 79, 79],"bool"), list[3,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 79, 79],"bool"), list[3,8,79,79,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 79, 79].  Tensor sizes: [3, 0, 79, 79]
2025-03-05 15:22:59.707643 test begin: paddle.broadcast_to(Tensor([3, 0, 8, 105],"bool"), list[3,8,8,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 8, 105],"bool"), list[3,8,8,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 8, 105].  Tensor sizes: [3, 0, 8, 105]
2025-03-05 15:22:59.708193 test begin: paddle.broadcast_to(Tensor([3, 0, 8, 169],"bool"), list[3,8,8,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 8, 169],"bool"), list[3,8,8,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 8, 169].  Tensor sizes: [3, 0, 8, 169]
2025-03-05 15:22:59.708765 test begin: paddle.broadcast_to(Tensor([3, 0, 8, 21],"bool"), list[3,8,8,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 8, 21],"bool"), list[3,8,8,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 8, 21].  Tensor sizes: [3, 0, 8, 21]
2025-03-05 15:22:59.709331 test begin: paddle.broadcast_to(Tensor([3, 0, 8, 8],"bool"), list[3,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 8, 8],"bool"), list[3,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 8, 8].  Tensor sizes: [3, 0, 8, 8]
2025-03-05 15:22:59.709906 test begin: paddle.broadcast_to(Tensor([3, 0, 8, 9],"bool"), list[3,8,8,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 8, 9],"bool"), list[3,8,8,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 8, 9].  Tensor sizes: [3, 0, 8, 9]
2025-03-05 15:22:59.710450 test begin: paddle.broadcast_to(Tensor([3, 0, 80, 105],"bool"), list[3,8,80,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 80, 105],"bool"), list[3,8,80,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 80, 105].  Tensor sizes: [3, 0, 80, 105]
2025-03-05 15:22:59.711031 test begin: paddle.broadcast_to(Tensor([3, 0, 80, 169],"bool"), list[3,8,80,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 80, 169],"bool"), list[3,8,80,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 80, 169].  Tensor sizes: [3, 0, 80, 169]
2025-03-05 15:22:59.711604 test begin: paddle.broadcast_to(Tensor([3, 0, 80, 80],"bool"), list[3,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 80, 80],"bool"), list[3,8,80,80,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 80, 80].  Tensor sizes: [3, 0, 80, 80]
2025-03-05 15:22:59.712152 test begin: paddle.broadcast_to(Tensor([3, 0, 81, 105],"bool"), list[3,8,81,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 81, 105],"bool"), list[3,8,81,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 81, 105].  Tensor sizes: [3, 0, 81, 105]
2025-03-05 15:22:59.712708 test begin: paddle.broadcast_to(Tensor([3, 0, 81, 169],"bool"), list[3,8,81,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 81, 169],"bool"), list[3,8,81,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 81, 169].  Tensor sizes: [3, 0, 81, 169]
2025-03-05 15:22:59.713247 test begin: paddle.broadcast_to(Tensor([3, 0, 81, 81],"bool"), list[3,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 81, 81],"bool"), list[3,8,81,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 81, 81].  Tensor sizes: [3, 0, 81, 81]
2025-03-05 15:22:59.713812 test begin: paddle.broadcast_to(Tensor([3, 0, 82, 105],"bool"), list[3,8,82,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 82, 105],"bool"), list[3,8,82,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 82, 105].  Tensor sizes: [3, 0, 82, 105]
2025-03-05 15:22:59.714411 test begin: paddle.broadcast_to(Tensor([3, 0, 82, 169],"bool"), list[3,8,82,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 82, 169],"bool"), list[3,8,82,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 82, 169].  Tensor sizes: [3, 0, 82, 169]
2025-03-05 15:22:59.714983 test begin: paddle.broadcast_to(Tensor([3, 0, 82, 82],"bool"), list[3,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 82, 82],"bool"), list[3,8,82,82,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 82, 82].  Tensor sizes: [3, 0, 82, 82]
2025-03-05 15:22:59.715525 test begin: paddle.broadcast_to(Tensor([3, 0, 83, 105],"bool"), list[3,8,83,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 83, 105],"bool"), list[3,8,83,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 83, 105].  Tensor sizes: [3, 0, 83, 105]
2025-03-05 15:22:59.716073 test begin: paddle.broadcast_to(Tensor([3, 0, 83, 169],"bool"), list[3,8,83,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 83, 169],"bool"), list[3,8,83,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 83, 169].  Tensor sizes: [3, 0, 83, 169]
2025-03-05 15:22:59.716673 test begin: paddle.broadcast_to(Tensor([3, 0, 83, 83],"bool"), list[3,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 83, 83],"bool"), list[3,8,83,83,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 83, 83].  Tensor sizes: [3, 0, 83, 83]
2025-03-05 15:22:59.717216 test begin: paddle.broadcast_to(Tensor([3, 0, 84, 105],"bool"), list[3,8,84,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 84, 105],"bool"), list[3,8,84,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 84, 105].  Tensor sizes: [3, 0, 84, 105]
2025-03-05 15:22:59.717751 test begin: paddle.broadcast_to(Tensor([3, 0, 84, 169],"bool"), list[3,8,84,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 84, 169],"bool"), list[3,8,84,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 84, 169].  Tensor sizes: [3, 0, 84, 169]
2025-03-05 15:22:59.718287 test begin: paddle.broadcast_to(Tensor([3, 0, 84, 84],"bool"), list[3,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 84, 84],"bool"), list[3,8,84,84,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 84, 84].  Tensor sizes: [3, 0, 84, 84]
2025-03-05 15:22:59.718837 test begin: paddle.broadcast_to(Tensor([3, 0, 85, 105],"bool"), list[3,8,85,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 85, 105],"bool"), list[3,8,85,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 85, 105].  Tensor sizes: [3, 0, 85, 105]
2025-03-05 15:22:59.719365 test begin: paddle.broadcast_to(Tensor([3, 0, 85, 169],"bool"), list[3,8,85,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 85, 169],"bool"), list[3,8,85,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 85, 169].  Tensor sizes: [3, 0, 85, 169]
2025-03-05 15:22:59.719906 test begin: paddle.broadcast_to(Tensor([3, 0, 85, 85],"bool"), list[3,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 85, 85],"bool"), list[3,8,85,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 85, 85].  Tensor sizes: [3, 0, 85, 85]
2025-03-05 15:22:59.720441 test begin: paddle.broadcast_to(Tensor([3, 0, 86, 105],"bool"), list[3,8,86,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 86, 105],"bool"), list[3,8,86,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 86, 105].  Tensor sizes: [3, 0, 86, 105]
2025-03-05 15:22:59.720995 test begin: paddle.broadcast_to(Tensor([3, 0, 86, 169],"bool"), list[3,8,86,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 86, 169],"bool"), list[3,8,86,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 86, 169].  Tensor sizes: [3, 0, 86, 169]
2025-03-05 15:22:59.721521 test begin: paddle.broadcast_to(Tensor([3, 0, 86, 86],"bool"), list[3,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 86, 86],"bool"), list[3,8,86,86,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 86, 86].  Tensor sizes: [3, 0, 86, 86]
2025-03-05 15:22:59.722059 test begin: paddle.broadcast_to(Tensor([3, 0, 87, 105],"bool"), list[3,8,87,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 87, 105],"bool"), list[3,8,87,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 87, 105].  Tensor sizes: [3, 0, 87, 105]
2025-03-05 15:22:59.722597 test begin: paddle.broadcast_to(Tensor([3, 0, 87, 169],"bool"), list[3,8,87,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 87, 169],"bool"), list[3,8,87,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 87, 169].  Tensor sizes: [3, 0, 87, 169]
2025-03-05 15:22:59.723134 test begin: paddle.broadcast_to(Tensor([3, 0, 87, 87],"bool"), list[3,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 87, 87],"bool"), list[3,8,87,87,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 87, 87].  Tensor sizes: [3, 0, 87, 87]
2025-03-05 15:22:59.723677 test begin: paddle.broadcast_to(Tensor([3, 0, 88, 105],"bool"), list[3,8,88,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 88, 105],"bool"), list[3,8,88,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 88, 105].  Tensor sizes: [3, 0, 88, 105]
2025-03-05 15:22:59.724212 test begin: paddle.broadcast_to(Tensor([3, 0, 88, 169],"bool"), list[3,8,88,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 88, 169],"bool"), list[3,8,88,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 88, 169].  Tensor sizes: [3, 0, 88, 169]
2025-03-05 15:22:59.724748 test begin: paddle.broadcast_to(Tensor([3, 0, 88, 88],"bool"), list[3,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 88, 88],"bool"), list[3,8,88,88,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 88, 88].  Tensor sizes: [3, 0, 88, 88]
2025-03-05 15:22:59.725285 test begin: paddle.broadcast_to(Tensor([3, 0, 89, 105],"bool"), list[3,8,89,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 89, 105],"bool"), list[3,8,89,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 89, 105].  Tensor sizes: [3, 0, 89, 105]
2025-03-05 15:22:59.725831 test begin: paddle.broadcast_to(Tensor([3, 0, 89, 169],"bool"), list[3,8,89,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 89, 169],"bool"), list[3,8,89,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 89, 169].  Tensor sizes: [3, 0, 89, 169]
2025-03-05 15:22:59.726392 test begin: paddle.broadcast_to(Tensor([3, 0, 89, 89],"bool"), list[3,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 89, 89],"bool"), list[3,8,89,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 89, 89].  Tensor sizes: [3, 0, 89, 89]
2025-03-05 15:22:59.726952 test begin: paddle.broadcast_to(Tensor([3, 0, 9, 105],"bool"), list[3,8,9,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 9, 105],"bool"), list[3,8,9,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 9, 105].  Tensor sizes: [3, 0, 9, 105]
2025-03-05 15:22:59.727511 test begin: paddle.broadcast_to(Tensor([3, 0, 9, 169],"bool"), list[3,8,9,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 9, 169],"bool"), list[3,8,9,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 9, 169].  Tensor sizes: [3, 0, 9, 169]
2025-03-05 15:22:59.728080 test begin: paddle.broadcast_to(Tensor([3, 0, 9, 21],"bool"), list[3,8,9,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 9, 21],"bool"), list[3,8,9,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 9, 21].  Tensor sizes: [3, 0, 9, 21]
2025-03-05 15:22:59.728644 test begin: paddle.broadcast_to(Tensor([3, 0, 9, 9],"bool"), list[3,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 9, 9],"bool"), list[3,8,9,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 9, 9].  Tensor sizes: [3, 0, 9, 9]
2025-03-05 15:22:59.729201 test begin: paddle.broadcast_to(Tensor([3, 0, 90, 105],"bool"), list[3,8,90,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 90, 105],"bool"), list[3,8,90,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 90, 105].  Tensor sizes: [3, 0, 90, 105]
2025-03-05 15:22:59.729759 test begin: paddle.broadcast_to(Tensor([3, 0, 90, 169],"bool"), list[3,8,90,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 90, 169],"bool"), list[3,8,90,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 90, 169].  Tensor sizes: [3, 0, 90, 169]
2025-03-05 15:22:59.730326 test begin: paddle.broadcast_to(Tensor([3, 0, 90, 90],"bool"), list[3,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 90, 90],"bool"), list[3,8,90,90,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 90, 90].  Tensor sizes: [3, 0, 90, 90]
2025-03-05 15:22:59.730893 test begin: paddle.broadcast_to(Tensor([3, 0, 91, 105],"bool"), list[3,8,91,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 91, 105],"bool"), list[3,8,91,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 91, 105].  Tensor sizes: [3, 0, 91, 105]
2025-03-05 15:22:59.731433 test begin: paddle.broadcast_to(Tensor([3, 0, 91, 169],"bool"), list[3,8,91,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 91, 169],"bool"), list[3,8,91,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 91, 169].  Tensor sizes: [3, 0, 91, 169]
2025-03-05 15:22:59.732558 test begin: paddle.broadcast_to(Tensor([3, 0, 91, 91],"bool"), list[3,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 91, 91],"bool"), list[3,8,91,91,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 91, 91].  Tensor sizes: [3, 0, 91, 91]
2025-03-05 15:22:59.733268 test begin: paddle.broadcast_to(Tensor([3, 0, 92, 105],"bool"), list[3,8,92,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 92, 105],"bool"), list[3,8,92,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 92, 105].  Tensor sizes: [3, 0, 92, 105]
2025-03-05 15:22:59.733981 test begin: paddle.broadcast_to(Tensor([3, 0, 92, 169],"bool"), list[3,8,92,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 92, 169],"bool"), list[3,8,92,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 92, 169].  Tensor sizes: [3, 0, 92, 169]
2025-03-05 15:22:59.734793 test begin: paddle.broadcast_to(Tensor([3, 0, 92, 92],"bool"), list[3,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 92, 92],"bool"), list[3,8,92,92,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 92, 92].  Tensor sizes: [3, 0, 92, 92]
2025-03-05 15:22:59.735883 test begin: paddle.broadcast_to(Tensor([3, 0, 93, 169],"bool"), list[3,8,93,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 93, 169],"bool"), list[3,8,93,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 93, 169].  Tensor sizes: [3, 0, 93, 169]
2025-03-05 15:22:59.736559 test begin: paddle.broadcast_to(Tensor([3, 0, 93, 93],"bool"), list[3,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 93, 93],"bool"), list[3,8,93,93,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 93, 93].  Tensor sizes: [3, 0, 93, 93]
2025-03-05 15:22:59.737201 test begin: paddle.broadcast_to(Tensor([3, 0, 94, 169],"bool"), list[3,8,94,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 94, 169],"bool"), list[3,8,94,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 94, 169].  Tensor sizes: [3, 0, 94, 169]
2025-03-05 15:22:59.737843 test begin: paddle.broadcast_to(Tensor([3, 0, 94, 94],"bool"), list[3,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 94, 94],"bool"), list[3,8,94,94,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 94, 94].  Tensor sizes: [3, 0, 94, 94]
2025-03-05 15:22:59.738461 test begin: paddle.broadcast_to(Tensor([3, 0, 95, 169],"bool"), list[3,8,95,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 95, 169],"bool"), list[3,8,95,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 95, 169].  Tensor sizes: [3, 0, 95, 169]
2025-03-05 15:22:59.739085 test begin: paddle.broadcast_to(Tensor([3, 0, 95, 95],"bool"), list[3,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 95, 95],"bool"), list[3,8,95,95,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 95, 95].  Tensor sizes: [3, 0, 95, 95]
2025-03-05 15:22:59.739824 test begin: paddle.broadcast_to(Tensor([3, 0, 96, 169],"bool"), list[3,8,96,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 96, 169],"bool"), list[3,8,96,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 96, 169].  Tensor sizes: [3, 0, 96, 169]
2025-03-05 15:22:59.740605 test begin: paddle.broadcast_to(Tensor([3, 0, 96, 96],"bool"), list[3,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 96, 96],"bool"), list[3,8,96,96,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 96, 96].  Tensor sizes: [3, 0, 96, 96]
2025-03-05 15:22:59.741332 test begin: paddle.broadcast_to(Tensor([3, 0, 97, 169],"bool"), list[3,8,97,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 97, 169],"bool"), list[3,8,97,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 97, 169].  Tensor sizes: [3, 0, 97, 169]
2025-03-05 15:22:59.742054 test begin: paddle.broadcast_to(Tensor([3, 0, 97, 97],"bool"), list[3,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 97, 97],"bool"), list[3,8,97,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 97, 97].  Tensor sizes: [3, 0, 97, 97]
2025-03-05 15:22:59.742634 test begin: paddle.broadcast_to(Tensor([3, 0, 98, 169],"bool"), list[3,8,98,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 98, 169],"bool"), list[3,8,98,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 98, 169].  Tensor sizes: [3, 0, 98, 169]
2025-03-05 15:22:59.743184 test begin: paddle.broadcast_to(Tensor([3, 0, 98, 98],"bool"), list[3,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 98, 98],"bool"), list[3,8,98,98,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 98, 98].  Tensor sizes: [3, 0, 98, 98]
2025-03-05 15:22:59.743727 test begin: paddle.broadcast_to(Tensor([3, 0, 99, 169],"bool"), list[3,8,99,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 99, 169],"bool"), list[3,8,99,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 99, 169].  Tensor sizes: [3, 0, 99, 169]
2025-03-05 15:22:59.744255 test begin: paddle.broadcast_to(Tensor([3, 0, 99, 99],"bool"), list[3,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([3, 0, 99, 99],"bool"), list[3,8,99,99,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 8, 99, 99].  Tensor sizes: [3, 0, 99, 99]
2025-03-05 15:22:59.744797 test begin: paddle.broadcast_to(Tensor([3, 0],"bool"), list[3,2,], )

[torch error] paddle.broadcast_to(Tensor([3, 0],"bool"), list[3,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 2].  Tensor sizes: [3, 0]
2025-03-05 15:22:59.745303 test begin: paddle.broadcast_to(Tensor([3, 0],"bool"), list[3,40,], )

[torch error] paddle.broadcast_to(Tensor([3, 0],"bool"), list[3,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 40].  Tensor sizes: [3, 0]
2025-03-05 15:22:59.745838 test begin: paddle.broadcast_to(Tensor([3, 0],"float32"), tuple(3,3,), )

[torch error] paddle.broadcast_to(Tensor([3, 0],"float32"), tuple(3,3,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 3].  Tensor sizes: [3, 0]
2025-03-05 15:22:59.746359 test begin: paddle.broadcast_to(Tensor([3, 0],"float32"), tuple(3,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 0],"float32"), tuple(3,5,), ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 5].  Tensor sizes: [3, 0]
2025-03-05 15:22:59.746892 test begin: paddle.broadcast_to(Tensor([3, 0],"float32"), tuple(3,799,), )

[torch error] paddle.broadcast_to(Tensor([3, 0],"float32"), tuple(3,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 799].  Tensor sizes: [3, 0]
2025-03-05 15:22:59.747409 test begin: paddle.broadcast_to(Tensor([3, 0],"float32"), tuple(4,2,3,4,), )

[torch error] paddle.broadcast_to(Tensor([3, 0],"float32"), tuple(4,2,3,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 2, 3, 4].  Tensor sizes: [3, 0]
2025-03-05 15:22:59.747950 test begin: paddle.broadcast_to(Tensor([3, 0],"float64"), tuple(3,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 0],"float64"), tuple(3,5,), ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 5].  Tensor sizes: [3, 0]
2025-03-05 15:22:59.748470 test begin: paddle.broadcast_to(Tensor([3, 0],"int64"), tuple(3,2,), )

[torch error] paddle.broadcast_to(Tensor([3, 0],"int64"), tuple(3,2,), ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 2].  Tensor sizes: [3, 0]
2025-03-05 15:22:59.749110 test begin: paddle.broadcast_to(Tensor([3, 0],"int64"), tuple(3,799,), )

[torch error] paddle.broadcast_to(Tensor([3, 0],"int64"), tuple(3,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 799].  Tensor sizes: [3, 0]
2025-03-05 15:22:59.749717 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 100],"bool"), list[3,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 100],"bool"), list[3,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 100, 100].  Tensor sizes: [3, 1, 0, 100]
2025-03-05 15:22:59.750267 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 101],"bool"), list[3,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 101],"bool"), list[3,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 101, 101].  Tensor sizes: [3, 1, 0, 101]
2025-03-05 15:22:59.750809 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 102],"bool"), list[3,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 102],"bool"), list[3,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 102, 102].  Tensor sizes: [3, 1, 0, 102]
2025-03-05 15:22:59.751344 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 103],"bool"), list[3,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 103],"bool"), list[3,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 103, 103].  Tensor sizes: [3, 1, 0, 103]
2025-03-05 15:22:59.751940 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 104],"bool"), list[3,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 104],"bool"), list[3,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 104, 104].  Tensor sizes: [3, 1, 0, 104]
2025-03-05 15:22:59.752523 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,1,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,1,105,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 1, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.753115 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,10,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,10,105,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 10, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.753672 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 105, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.754211 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,11,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,11,105,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 11, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.754768 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,12,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,12,105,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 12, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.755295 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,13,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,13,105,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 13, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.755836 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,14,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,14,105,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 14, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.756366 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,15,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,15,105,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 15, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.756915 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,16,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,16,105,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 16, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.757856 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,17,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,17,105,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 17, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.758522 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,18,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,18,105,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 18, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.759184 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,19,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,19,105,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 19, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.759836 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,2,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,2,105,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 2, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.760499 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,20,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,20,105,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 20, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.761167 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,21,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,21,105,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 21, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.761887 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,22,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,22,105,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 22, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.762545 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,23,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,23,105,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 23, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.763200 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,24,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,24,105,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 24, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.763845 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,25,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,25,105,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 25, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.764450 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,26,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,26,105,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 26, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.765091 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,27,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,27,105,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 27, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.765736 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,28,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,28,105,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 28, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.766364 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,29,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,29,105,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 29, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.767046 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,3,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,3,105,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 3, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.767783 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,30,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,30,105,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 30, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.768428 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,31,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,31,105,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 31, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.769074 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,32,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,32,105,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 32, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.769743 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,33,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,33,105,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 33, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.770516 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,34,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,34,105,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 34, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.771136 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,35,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,35,105,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 35, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.771707 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,36,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,36,105,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 36, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.772253 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,37,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,37,105,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 37, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.772808 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,38,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,38,105,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 38, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.773354 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,39,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,39,105,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 39, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.773908 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,4,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,4,105,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 4, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.774445 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,40,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,40,105,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 40, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.775019 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,41,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,41,105,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 41, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.775559 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,42,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,42,105,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 42, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.776123 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,43,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,43,105,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 43, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.776665 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,44,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,44,105,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 44, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.777194 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,45,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,45,105,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 45, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.777725 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,46,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,46,105,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 46, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.778252 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,47,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,47,105,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 47, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.778803 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,48,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,48,105,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 48, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.779361 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,49,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,49,105,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 49, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.779945 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,5,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,5,105,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 5, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.780491 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,50,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,50,105,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 50, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.781042 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,51,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,51,105,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 51, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.781575 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,52,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,52,105,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 52, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.782149 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,53,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,53,105,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 53, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.782716 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,54,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,54,105,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 54, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.783282 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,55,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,55,105,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 55, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.783840 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,56,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,56,105,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 56, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.784376 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,57,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,57,105,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 57, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.784918 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,58,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,58,105,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 58, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.785458 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,59,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,59,105,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 59, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.786004 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,6,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,6,105,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 6, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.786543 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,60,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,60,105,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 60, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.787084 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,61,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,61,105,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 61, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.787683 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,62,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,62,105,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 62, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.788225 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,63,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,63,105,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 63, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.788793 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,64,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,64,105,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 64, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.789341 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,65,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,65,105,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 65, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.789888 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,66,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,66,105,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 66, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.790409 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,67,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,67,105,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 67, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.790949 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,68,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,68,105,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 68, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.791512 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,69,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,69,105,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 69, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.792086 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,7,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,7,105,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 7, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.792628 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,70,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,70,105,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 70, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.793151 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,71,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,71,105,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 71, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.793696 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,72,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,72,105,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 72, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.794241 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,73,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,73,105,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 73, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.794807 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,74,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,74,105,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 74, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.795337 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,75,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,75,105,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 75, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.795880 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,76,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,76,105,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 76, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.796408 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,77,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,77,105,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 77, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.796945 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,78,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,78,105,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 78, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.797497 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,79,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,79,105,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 79, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.798040 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,8,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,8,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 8, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.798602 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,80,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,80,105,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 80, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.799135 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,81,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,81,105,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 81, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.799699 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,82,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,82,105,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 82, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.800484 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,83,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,83,105,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 83, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.801234 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,84,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,84,105,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 84, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.801948 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,85,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,85,105,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 85, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.802517 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,86,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,86,105,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 86, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.803064 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,87,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,87,105,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 87, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.803612 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,88,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,88,105,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 88, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.804143 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,89,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,89,105,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 89, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.804684 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,9,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,9,105,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 9, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.805207 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,90,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,90,105,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 90, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.805785 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,91,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,91,105,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 91, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.806307 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,92,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 105],"bool"), list[3,8,92,105,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 92, 105].  Tensor sizes: [3, 1, 0, 105]
2025-03-05 15:22:59.806828 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 106],"bool"), list[3,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 106],"bool"), list[3,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 106, 106].  Tensor sizes: [3, 1, 0, 106]
2025-03-05 15:22:59.807341 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 107],"bool"), list[3,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 107],"bool"), list[3,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 107, 107].  Tensor sizes: [3, 1, 0, 107]
2025-03-05 15:22:59.807867 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 108],"bool"), list[3,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 108],"bool"), list[3,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 108, 108].  Tensor sizes: [3, 1, 0, 108]
2025-03-05 15:22:59.808372 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 109],"bool"), list[3,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 109],"bool"), list[3,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 109, 109].  Tensor sizes: [3, 1, 0, 109]
2025-03-05 15:22:59.808882 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 10],"bool"), list[3,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 10],"bool"), list[3,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 10, 10].  Tensor sizes: [3, 1, 0, 10]
2025-03-05 15:22:59.810033 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 110],"bool"), list[3,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 110],"bool"), list[3,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 110, 110].  Tensor sizes: [3, 1, 0, 110]
2025-03-05 15:22:59.810880 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 111],"bool"), list[3,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 111],"bool"), list[3,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 111, 111].  Tensor sizes: [3, 1, 0, 111]
2025-03-05 15:22:59.811467 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 112],"bool"), list[3,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 112],"bool"), list[3,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 112, 112].  Tensor sizes: [3, 1, 0, 112]
2025-03-05 15:22:59.812080 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 113],"bool"), list[3,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 113],"bool"), list[3,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 113, 113].  Tensor sizes: [3, 1, 0, 113]
2025-03-05 15:22:59.812637 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 114],"bool"), list[3,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 114],"bool"), list[3,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 114, 114].  Tensor sizes: [3, 1, 0, 114]
2025-03-05 15:22:59.813172 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 115],"bool"), list[3,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 115],"bool"), list[3,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 115, 115].  Tensor sizes: [3, 1, 0, 115]
2025-03-05 15:22:59.813714 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 116],"bool"), list[3,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 116],"bool"), list[3,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 116, 116].  Tensor sizes: [3, 1, 0, 116]
2025-03-05 15:22:59.814237 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 117],"bool"), list[3,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 117],"bool"), list[3,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 117, 117].  Tensor sizes: [3, 1, 0, 117]
2025-03-05 15:22:59.814780 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 118],"bool"), list[3,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 118],"bool"), list[3,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 118, 118].  Tensor sizes: [3, 1, 0, 118]
2025-03-05 15:22:59.815314 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 119],"bool"), list[3,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 119],"bool"), list[3,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 119, 119].  Tensor sizes: [3, 1, 0, 119]
2025-03-05 15:22:59.815844 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 11],"bool"), list[3,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 11],"bool"), list[3,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 11, 11].  Tensor sizes: [3, 1, 0, 11]
2025-03-05 15:22:59.816395 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 120],"bool"), list[3,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 120],"bool"), list[3,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 120, 120].  Tensor sizes: [3, 1, 0, 120]
2025-03-05 15:22:59.816922 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 121],"bool"), list[3,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 121],"bool"), list[3,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 121, 121].  Tensor sizes: [3, 1, 0, 121]
2025-03-05 15:22:59.817490 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 122],"bool"), list[3,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 122],"bool"), list[3,8,122,122,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 122, 122].  Tensor sizes: [3, 1, 0, 122]
2025-03-05 15:22:59.818035 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 123],"bool"), list[3,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 123],"bool"), list[3,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 123, 123].  Tensor sizes: [3, 1, 0, 123]
2025-03-05 15:22:59.818568 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 124],"bool"), list[3,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 124],"bool"), list[3,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 124, 124].  Tensor sizes: [3, 1, 0, 124]
2025-03-05 15:22:59.819123 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 125],"bool"), list[3,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 125],"bool"), list[3,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 125, 125].  Tensor sizes: [3, 1, 0, 125]
2025-03-05 15:22:59.819745 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 126],"bool"), list[3,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 126],"bool"), list[3,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 126, 126].  Tensor sizes: [3, 1, 0, 126]
2025-03-05 15:22:59.820275 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 127],"bool"), list[3,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 127],"bool"), list[3,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 127, 127].  Tensor sizes: [3, 1, 0, 127]
2025-03-05 15:22:59.820819 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 128],"bool"), list[3,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 128],"bool"), list[3,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 128, 128].  Tensor sizes: [3, 1, 0, 128]
2025-03-05 15:22:59.821349 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 129],"bool"), list[3,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 129],"bool"), list[3,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 129, 129].  Tensor sizes: [3, 1, 0, 129]
2025-03-05 15:22:59.821873 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 12],"bool"), list[3,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 12],"bool"), list[3,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 12, 12].  Tensor sizes: [3, 1, 0, 12]
2025-03-05 15:22:59.822394 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 130],"bool"), list[3,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 130],"bool"), list[3,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 130, 130].  Tensor sizes: [3, 1, 0, 130]
2025-03-05 15:22:59.822984 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 131],"bool"), list[3,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 131],"bool"), list[3,8,131,131,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 131, 131].  Tensor sizes: [3, 1, 0, 131]
2025-03-05 15:22:59.823496 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 132],"bool"), list[3,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 132],"bool"), list[3,8,132,132,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 132, 132].  Tensor sizes: [3, 1, 0, 132]
2025-03-05 15:22:59.824018 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 133],"bool"), list[3,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 133],"bool"), list[3,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 133, 133].  Tensor sizes: [3, 1, 0, 133]
2025-03-05 15:22:59.824537 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 134],"bool"), list[3,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 134],"bool"), list[3,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 134, 134].  Tensor sizes: [3, 1, 0, 134]
2025-03-05 15:22:59.825058 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 135],"bool"), list[3,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 135],"bool"), list[3,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 135, 135].  Tensor sizes: [3, 1, 0, 135]
2025-03-05 15:22:59.825609 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 136],"bool"), list[3,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 136],"bool"), list[3,8,136,136,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 136, 136].  Tensor sizes: [3, 1, 0, 136]
2025-03-05 15:22:59.826137 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 137],"bool"), list[3,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 137],"bool"), list[3,8,137,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 137, 137].  Tensor sizes: [3, 1, 0, 137]
2025-03-05 15:22:59.826658 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 138],"bool"), list[3,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 138],"bool"), list[3,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 138, 138].  Tensor sizes: [3, 1, 0, 138]
2025-03-05 15:22:59.827183 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 139],"bool"), list[3,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 139],"bool"), list[3,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 139, 139].  Tensor sizes: [3, 1, 0, 139]
2025-03-05 15:22:59.827715 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 13],"bool"), list[3,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 13],"bool"), list[3,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 13, 13].  Tensor sizes: [3, 1, 0, 13]
2025-03-05 15:22:59.828297 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 140],"bool"), list[3,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 140],"bool"), list[3,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 140, 140].  Tensor sizes: [3, 1, 0, 140]
2025-03-05 15:22:59.828855 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 141],"bool"), list[3,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 141],"bool"), list[3,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 141, 141].  Tensor sizes: [3, 1, 0, 141]
2025-03-05 15:22:59.829377 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 142],"bool"), list[3,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 142],"bool"), list[3,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 142, 142].  Tensor sizes: [3, 1, 0, 142]
2025-03-05 15:22:59.829928 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 143],"bool"), list[3,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 143],"bool"), list[3,8,143,143,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 143, 143].  Tensor sizes: [3, 1, 0, 143]
2025-03-05 15:22:59.830447 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 144],"bool"), list[3,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 144],"bool"), list[3,8,144,144,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 144, 144].  Tensor sizes: [3, 1, 0, 144]
2025-03-05 15:22:59.831967 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 145],"bool"), list[3,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 145],"bool"), list[3,8,145,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 145, 145].  Tensor sizes: [3, 1, 0, 145]
2025-03-05 15:22:59.832502 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 146],"bool"), list[3,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 146],"bool"), list[3,8,146,146,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 146, 146].  Tensor sizes: [3, 1, 0, 146]
2025-03-05 15:22:59.833037 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 147],"bool"), list[3,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 147],"bool"), list[3,8,147,147,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 147, 147].  Tensor sizes: [3, 1, 0, 147]
2025-03-05 15:22:59.833564 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 148],"bool"), list[3,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 148],"bool"), list[3,8,148,148,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 148, 148].  Tensor sizes: [3, 1, 0, 148]
2025-03-05 15:22:59.834104 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 149],"bool"), list[3,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 149],"bool"), list[3,8,149,149,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 149, 149].  Tensor sizes: [3, 1, 0, 149]
2025-03-05 15:22:59.834650 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 14],"bool"), list[3,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 14],"bool"), list[3,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 14, 14].  Tensor sizes: [3, 1, 0, 14]
2025-03-05 15:22:59.835157 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 150],"bool"), list[3,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 150],"bool"), list[3,8,150,150,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 150, 150].  Tensor sizes: [3, 1, 0, 150]
2025-03-05 15:22:59.835669 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 151],"bool"), list[3,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 151],"bool"), list[3,8,151,151,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 151, 151].  Tensor sizes: [3, 1, 0, 151]
2025-03-05 15:22:59.836175 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 152],"bool"), list[3,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 152],"bool"), list[3,8,152,152,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 152, 152].  Tensor sizes: [3, 1, 0, 152]
2025-03-05 15:22:59.836739 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 153],"bool"), list[3,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 153],"bool"), list[3,8,153,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 153, 153].  Tensor sizes: [3, 1, 0, 153]
2025-03-05 15:22:59.837253 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 154],"bool"), list[3,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 154],"bool"), list[3,8,154,154,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 154, 154].  Tensor sizes: [3, 1, 0, 154]
2025-03-05 15:22:59.837769 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 155],"bool"), list[3,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 155],"bool"), list[3,8,155,155,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 155, 155].  Tensor sizes: [3, 1, 0, 155]
2025-03-05 15:22:59.838285 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 156],"bool"), list[3,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 156],"bool"), list[3,8,156,156,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 156, 156].  Tensor sizes: [3, 1, 0, 156]
2025-03-05 15:22:59.838807 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 157],"bool"), list[3,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 157],"bool"), list[3,8,157,157,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 157, 157].  Tensor sizes: [3, 1, 0, 157]
2025-03-05 15:22:59.839317 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 158],"bool"), list[3,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 158],"bool"), list[3,8,158,158,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 158, 158].  Tensor sizes: [3, 1, 0, 158]
2025-03-05 15:22:59.839872 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 159],"bool"), list[3,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 159],"bool"), list[3,8,159,159,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 159, 159].  Tensor sizes: [3, 1, 0, 159]
2025-03-05 15:22:59.840441 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 15],"bool"), list[3,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 15],"bool"), list[3,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 15, 15].  Tensor sizes: [3, 1, 0, 15]
2025-03-05 15:22:59.840988 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 160],"bool"), list[3,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 160],"bool"), list[3,8,160,160,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 160, 160].  Tensor sizes: [3, 1, 0, 160]
2025-03-05 15:22:59.841503 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 161],"bool"), list[3,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 161],"bool"), list[3,8,161,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 161, 161].  Tensor sizes: [3, 1, 0, 161]
2025-03-05 15:22:59.842042 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 162],"bool"), list[3,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 162],"bool"), list[3,8,162,162,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 162, 162].  Tensor sizes: [3, 1, 0, 162]
2025-03-05 15:22:59.842552 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 163],"bool"), list[3,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 163],"bool"), list[3,8,163,163,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 163, 163].  Tensor sizes: [3, 1, 0, 163]
2025-03-05 15:22:59.843088 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,1,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,1,169,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 1, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.843604 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,10,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,10,169,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 10, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.844123 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,100,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,100,169,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 100, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.844644 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,101,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,101,169,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 101, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.845201 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,102,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,102,169,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 102, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.845738 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,103,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,103,169,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 103, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.846282 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,104,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,104,169,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 104, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.846836 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,105,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,105,169,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 105, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.847395 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,106,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,106,169,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 106, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.847932 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,107,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,107,169,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 107, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.849097 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,108,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,108,169,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 108, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.849833 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,109,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,109,169,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 109, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.850385 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,11,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,11,169,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 11, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.850967 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,110,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,110,169,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 110, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.851593 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,111,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,111,169,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 111, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.852212 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,112,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,112,169,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 112, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.852817 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,113,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,113,169,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 113, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.853363 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,114,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,114,169,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 114, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.853881 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,115,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,115,169,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 115, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.854398 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,116,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,116,169,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 116, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.854989 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,117,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,117,169,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 117, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.855606 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,118,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,118,169,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 118, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.856145 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,119,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,119,169,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 119, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.856876 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,12,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,12,169,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 12, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.857512 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,120,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,120,169,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 120, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.858123 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,121,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,121,169,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 121, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.858739 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,122,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,122,169,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 122, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.859358 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,123,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,123,169,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 123, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.859988 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,124,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,124,169,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 124, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.860620 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,125,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,125,169,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 125, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.861237 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,126,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,126,169,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 126, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.861862 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,127,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,127,169,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 127, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.862473 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,128,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,128,169,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 128, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.863093 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,129,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,129,169,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 129, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.863736 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,13,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,13,169,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 13, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.864360 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,130,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,130,169,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 130, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.864988 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,131,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,131,169,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 131, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.865632 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,132,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,132,169,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 132, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.866254 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,133,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,133,169,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 133, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.866956 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,134,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,134,169,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 134, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.867614 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,135,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,135,169,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 135, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.868242 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,136,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,136,169,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 136, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.868870 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,137,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,137,169,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 137, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.869484 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,138,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,138,169,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 138, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.870441 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,139,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,139,169,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 139, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.871394 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,14,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,14,169,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 14, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.872096 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,140,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,140,169,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 140, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.872807 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,141,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,141,169,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 141, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.873475 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,142,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,142,169,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 142, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.874111 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,143,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,143,169,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 143, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.874858 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,144,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,144,169,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 144, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.875517 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,145,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,145,169,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 145, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.876175 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,146,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,146,169,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 146, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.876836 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,147,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,147,169,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 147, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.877477 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,148,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,148,169,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 148, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.878134 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,149,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,149,169,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 149, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.878863 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,15,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,15,169,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 15, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.879507 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,150,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,150,169,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 150, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.880159 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,151,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,151,169,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 151, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.880812 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,152,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,152,169,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 152, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.881458 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,153,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,153,169,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 153, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.882168 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,154,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,154,169,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 154, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.883093 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,155,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,155,169,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 155, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.883693 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,156,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,156,169,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 156, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.884251 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,157,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,157,169,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 157, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.884820 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,158,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,158,169,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 158, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.885369 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,159,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,159,169,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 159, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.885923 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,16,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,16,169,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 16, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.886468 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,160,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,160,169,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 160, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.887028 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,161,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,161,169,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 161, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.887565 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,162,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,162,169,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 162, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.888111 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,163,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,163,169,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 163, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.888654 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,17,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,17,169,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 17, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.889193 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,18,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,18,169,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 18, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.889730 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,19,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,19,169,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 19, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.890267 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,2,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,2,169,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 2, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.890899 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,20,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,20,169,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 20, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.892006 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,21,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,21,169,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 21, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.892560 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,22,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,22,169,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 22, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.893139 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,23,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,23,169,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 23, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.893700 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,24,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,24,169,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 24, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.894230 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,25,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,25,169,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 25, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.894771 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,26,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,26,169,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 26, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.895295 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,27,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,27,169,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 27, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.895838 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,28,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,28,169,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 28, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.896364 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,29,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,29,169,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 29, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.896907 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,3,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,3,169,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 3, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.897437 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,30,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,30,169,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 30, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.897983 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,31,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,31,169,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 31, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.898516 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,32,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,32,169,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 32, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.899096 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,33,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,33,169,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 33, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.899643 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,34,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,34,169,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 34, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.900208 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,35,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,35,169,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 35, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.900770 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,36,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,36,169,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 36, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.901324 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,37,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,37,169,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 37, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.901897 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,38,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,38,169,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 38, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.902449 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,39,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,39,169,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 39, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.903027 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,4,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,4,169,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 4, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.903568 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,40,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,40,169,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 40, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.904128 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,41,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,41,169,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 41, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.904672 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,42,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,42,169,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 42, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.905207 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,43,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,43,169,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 43, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.905747 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,44,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,44,169,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 44, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.906277 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,45,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,45,169,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 45, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.906838 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,46,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,46,169,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 46, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.907386 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,47,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,47,169,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 47, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.907982 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,48,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,48,169,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 48, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.908537 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,49,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,49,169,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 49, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.909089 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,5,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,5,169,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 5, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.909619 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,50,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,50,169,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 50, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.910151 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,51,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,51,169,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 51, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.910701 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,52,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,52,169,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 52, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.911227 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,53,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,53,169,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 53, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.911771 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,54,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,54,169,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 54, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.912312 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,55,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,55,169,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 55, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.912843 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,56,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,56,169,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 56, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.913364 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,57,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,57,169,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 57, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.913899 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,58,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,58,169,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 58, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.914433 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,59,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,59,169,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 59, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.914973 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,6,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,6,169,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 6, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.915497 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,60,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,60,169,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 60, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.916068 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,61,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,61,169,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 61, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.916634 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,62,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,62,169,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 62, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.917165 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,63,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,63,169,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 63, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.917701 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,64,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,64,169,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 64, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.918226 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,65,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,65,169,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 65, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.918769 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,66,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,66,169,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 66, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.919302 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,67,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,67,169,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 67, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.919853 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,68,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,68,169,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 68, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.920403 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,69,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,69,169,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 69, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.920955 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,7,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,7,169,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 7, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.922087 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,70,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,70,169,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 70, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.922853 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,71,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,71,169,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 71, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.923510 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,72,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,72,169,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 72, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.924093 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,73,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,73,169,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 73, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.924668 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,74,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,74,169,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 74, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.925215 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,75,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,75,169,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 75, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.925835 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,76,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,76,169,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 76, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.927058 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,77,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,77,169,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 77, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.927906 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,78,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,78,169,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 78, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.928625 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,79,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,79,169,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 79, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.929254 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,8,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,8,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 8, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.929817 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,80,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,80,169,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 80, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.930365 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,81,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,81,169,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 81, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.930932 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,82,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,82,169,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 82, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.931463 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,83,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,83,169,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 83, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.932001 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,84,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,84,169,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 84, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.932517 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,85,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,85,169,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 85, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.933046 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,86,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,86,169,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 86, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.933564 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,87,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,87,169,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 87, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.934092 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,88,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,88,169,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 88, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.934620 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,89,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,89,169,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 89, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.935155 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,9,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,9,169,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 9, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.935675 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,90,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,90,169,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 90, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.936230 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,91,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,91,169,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 91, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.936836 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,92,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,92,169,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 92, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.937425 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,93,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,93,169,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 93, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.938000 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,94,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,94,169,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 94, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.938534 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,95,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,95,169,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 95, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.939062 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,96,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,96,169,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 96, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.939574 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,97,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,97,169,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 97, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.940112 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,98,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,98,169,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 98, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.940631 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,99,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 169],"bool"), list[3,8,99,169,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 99, 169].  Tensor sizes: [3, 1, 0, 169]
2025-03-05 15:22:59.941711 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 16],"bool"), list[3,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 16],"bool"), list[3,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 16, 16].  Tensor sizes: [3, 1, 0, 16]
2025-03-05 15:22:59.942554 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 17],"bool"), list[3,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 17],"bool"), list[3,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 17, 17].  Tensor sizes: [3, 1, 0, 17]
2025-03-05 15:22:59.943279 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 18],"bool"), list[3,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 18],"bool"), list[3,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 18, 18].  Tensor sizes: [3, 1, 0, 18]
2025-03-05 15:22:59.943867 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 19],"bool"), list[3,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 19],"bool"), list[3,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 19, 19].  Tensor sizes: [3, 1, 0, 19]
2025-03-05 15:22:59.944405 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 1],"bool"), list[3,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 1],"bool"), list[3,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 1, 1].  Tensor sizes: [3, 1, 0, 1]
2025-03-05 15:22:59.944996 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 20],"bool"), list[3,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 20],"bool"), list[3,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 20, 20].  Tensor sizes: [3, 1, 0, 20]
2025-03-05 15:22:59.945541 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,1,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,1,21,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 1, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.946255 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,10,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,10,21,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 10, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.946886 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,11,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,11,21,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 11, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.947483 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,12,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,12,21,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 12, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.948088 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,13,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,13,21,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 13, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.948692 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,14,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,14,21,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 14, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.949310 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,15,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,15,21,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 15, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.949917 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,16,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,16,21,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 16, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.950563 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,17,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,17,21,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 17, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.951192 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,18,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,18,21,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 18, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.951813 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,19,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,19,21,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 19, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.952428 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,2,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,2,21,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 2, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.953041 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,20,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,20,21,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 20, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.953653 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 21, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.954256 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,22,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,22,21,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 22, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.954877 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,23,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,23,21,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 23, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.955476 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,24,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,24,21,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 24, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.956090 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,25,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,25,21,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 25, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.956699 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,26,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,26,21,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 26, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.957302 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,27,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,27,21,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 27, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.957945 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,28,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,28,21,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 28, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.958614 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,29,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,29,21,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 29, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.959235 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,3,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,3,21,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 3, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.959849 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,30,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,30,21,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 30, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.960454 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,31,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,31,21,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 31, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.961069 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,32,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,32,21,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 32, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.961809 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,33,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,33,21,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 33, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.962489 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,34,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,34,21,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 34, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.963049 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,35,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,35,21,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 35, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.963605 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,36,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,36,21,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 36, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.964174 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,37,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,37,21,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 37, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.964825 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,38,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,38,21,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 38, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.965707 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,39,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,39,21,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 39, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.966365 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,4,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,4,21,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 4, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.967041 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,40,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,40,21,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 40, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.967739 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,41,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,41,21,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 41, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.968362 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,42,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,42,21,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 42, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.969009 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,43,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,43,21,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 43, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.969646 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,44,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,44,21,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 44, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.970292 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,45,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,45,21,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 45, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.970948 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,46,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,46,21,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 46, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.971602 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,47,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,47,21,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 47, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.972251 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,48,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,48,21,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 48, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.972914 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,49,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,49,21,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 49, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.973570 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,5,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,5,21,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 5, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.974226 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,50,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,50,21,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 50, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.974876 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,51,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,51,21,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 51, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.975507 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,52,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,52,21,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 52, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.976156 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,53,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,53,21,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 53, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.976786 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,54,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,54,21,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 54, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.977439 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,55,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,55,21,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 55, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.978072 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,56,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,56,21,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 56, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.978726 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,6,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,6,21,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 6, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.979371 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,7,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,7,21,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 7, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.980036 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,8,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,8,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 8, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.980697 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,9,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 21],"bool"), list[3,8,9,21,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 9, 21].  Tensor sizes: [3, 1, 0, 21]
2025-03-05 15:22:59.981327 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 22],"bool"), list[3,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 22],"bool"), list[3,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 22, 22].  Tensor sizes: [3, 1, 0, 22]
2025-03-05 15:22:59.982006 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 23],"bool"), list[3,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 23],"bool"), list[3,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 23, 23].  Tensor sizes: [3, 1, 0, 23]
2025-03-05 15:22:59.982663 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 24],"bool"), list[3,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 24],"bool"), list[3,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 24, 24].  Tensor sizes: [3, 1, 0, 24]
2025-03-05 15:22:59.983318 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 25],"bool"), list[3,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 25],"bool"), list[3,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 25, 25].  Tensor sizes: [3, 1, 0, 25]
2025-03-05 15:22:59.983965 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 26],"bool"), list[3,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 26],"bool"), list[3,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 26, 26].  Tensor sizes: [3, 1, 0, 26]
2025-03-05 15:22:59.984604 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 27],"bool"), list[3,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 27],"bool"), list[3,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 27, 27].  Tensor sizes: [3, 1, 0, 27]
2025-03-05 15:22:59.985240 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 28],"bool"), list[3,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 28],"bool"), list[3,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 28, 28].  Tensor sizes: [3, 1, 0, 28]
2025-03-05 15:22:59.985916 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 29],"bool"), list[3,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 29],"bool"), list[3,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 29, 29].  Tensor sizes: [3, 1, 0, 29]
2025-03-05 15:22:59.986551 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 2],"bool"), list[3,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 2],"bool"), list[3,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 2, 2].  Tensor sizes: [3, 1, 0, 2]
2025-03-05 15:22:59.987233 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 30],"bool"), list[3,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 30],"bool"), list[3,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 30, 30].  Tensor sizes: [3, 1, 0, 30]
2025-03-05 15:22:59.987872 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 31],"bool"), list[3,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 31],"bool"), list[3,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 31, 31].  Tensor sizes: [3, 1, 0, 31]
2025-03-05 15:22:59.988487 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 32],"bool"), list[3,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 32],"bool"), list[3,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 32, 32].  Tensor sizes: [3, 1, 0, 32]
2025-03-05 15:22:59.989133 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 33],"bool"), list[3,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 33],"bool"), list[3,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 33, 33].  Tensor sizes: [3, 1, 0, 33]
2025-03-05 15:22:59.989779 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 34],"bool"), list[3,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 34],"bool"), list[3,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 34, 34].  Tensor sizes: [3, 1, 0, 34]
2025-03-05 15:22:59.990402 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 35],"bool"), list[3,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 35],"bool"), list[3,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 35, 35].  Tensor sizes: [3, 1, 0, 35]
2025-03-05 15:22:59.991033 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 36],"bool"), list[3,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 36],"bool"), list[3,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 36, 36].  Tensor sizes: [3, 1, 0, 36]
2025-03-05 15:22:59.991663 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 37],"bool"), list[3,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 37],"bool"), list[3,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 37, 37].  Tensor sizes: [3, 1, 0, 37]
2025-03-05 15:22:59.992292 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 38],"bool"), list[3,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 38],"bool"), list[3,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 38, 38].  Tensor sizes: [3, 1, 0, 38]
2025-03-05 15:22:59.992956 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 39],"bool"), list[3,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 39],"bool"), list[3,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 39, 39].  Tensor sizes: [3, 1, 0, 39]
2025-03-05 15:22:59.993609 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 3],"bool"), list[3,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 3],"bool"), list[3,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 3, 3].  Tensor sizes: [3, 1, 0, 3]
2025-03-05 15:22:59.994252 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 40],"bool"), list[3,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 40],"bool"), list[3,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 40, 40].  Tensor sizes: [3, 1, 0, 40]
2025-03-05 15:22:59.994886 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 41],"bool"), list[3,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 41],"bool"), list[3,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 41, 41].  Tensor sizes: [3, 1, 0, 41]
2025-03-05 15:22:59.995497 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 42],"bool"), list[3,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 42],"bool"), list[3,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 42, 42].  Tensor sizes: [3, 1, 0, 42]
2025-03-05 15:22:59.996126 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 43],"bool"), list[3,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 43],"bool"), list[3,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 43, 43].  Tensor sizes: [3, 1, 0, 43]
2025-03-05 15:22:59.996754 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 44],"bool"), list[3,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 44],"bool"), list[3,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 44, 44].  Tensor sizes: [3, 1, 0, 44]
2025-03-05 15:22:59.997363 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 45],"bool"), list[3,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 45],"bool"), list[3,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 45, 45].  Tensor sizes: [3, 1, 0, 45]
2025-03-05 15:22:59.997997 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 46],"bool"), list[3,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 46],"bool"), list[3,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 46, 46].  Tensor sizes: [3, 1, 0, 46]
2025-03-05 15:22:59.998654 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 47],"bool"), list[3,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 47],"bool"), list[3,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 47, 47].  Tensor sizes: [3, 1, 0, 47]
2025-03-05 15:22:59.999287 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 48],"bool"), list[3,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 48],"bool"), list[3,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 48, 48].  Tensor sizes: [3, 1, 0, 48]
2025-03-05 15:22:59.999914 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 49],"bool"), list[3,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 49],"bool"), list[3,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 49, 49].  Tensor sizes: [3, 1, 0, 49]
2025-03-05 15:23:00.001219 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 4],"bool"), list[3,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 4],"bool"), list[3,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 4, 4].  Tensor sizes: [3, 1, 0, 4]
2025-03-05 15:23:00.002127 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 50],"bool"), list[3,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 50],"bool"), list[3,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 50, 50].  Tensor sizes: [3, 1, 0, 50]
2025-03-05 15:23:00.002998 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 51],"bool"), list[3,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 51],"bool"), list[3,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 51, 51].  Tensor sizes: [3, 1, 0, 51]
2025-03-05 15:23:00.003838 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 52],"bool"), list[3,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 52],"bool"), list[3,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 52, 52].  Tensor sizes: [3, 1, 0, 52]
2025-03-05 15:23:00.004577 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 53],"bool"), list[3,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 53],"bool"), list[3,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 53, 53].  Tensor sizes: [3, 1, 0, 53]
2025-03-05 15:23:00.005535 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 54],"bool"), list[3,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 54],"bool"), list[3,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 54, 54].  Tensor sizes: [3, 1, 0, 54]
2025-03-05 15:23:00.006151 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 55],"bool"), list[3,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 55],"bool"), list[3,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 55, 55].  Tensor sizes: [3, 1, 0, 55]
2025-03-05 15:23:00.006765 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 56],"bool"), list[3,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 56],"bool"), list[3,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 56, 56].  Tensor sizes: [3, 1, 0, 56]
2025-03-05 15:23:00.007646 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 57],"bool"), list[3,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 57],"bool"), list[3,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 57, 57].  Tensor sizes: [3, 1, 0, 57]
2025-03-05 15:23:00.008423 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 58],"bool"), list[3,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 58],"bool"), list[3,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 58, 58].  Tensor sizes: [3, 1, 0, 58]
2025-03-05 15:23:00.009232 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 59],"bool"), list[3,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 59],"bool"), list[3,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 59, 59].  Tensor sizes: [3, 1, 0, 59]
2025-03-05 15:23:00.010049 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 5],"bool"), list[3,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 5],"bool"), list[3,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 5, 5].  Tensor sizes: [3, 1, 0, 5]
2025-03-05 15:23:00.010865 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 60],"bool"), list[3,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 60],"bool"), list[3,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 60, 60].  Tensor sizes: [3, 1, 0, 60]
2025-03-05 15:23:00.011656 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 61],"bool"), list[3,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 61],"bool"), list[3,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 61, 61].  Tensor sizes: [3, 1, 0, 61]
2025-03-05 15:23:00.012488 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 62],"bool"), list[3,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 62],"bool"), list[3,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 62, 62].  Tensor sizes: [3, 1, 0, 62]
2025-03-05 15:23:00.013300 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 63],"bool"), list[3,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 63],"bool"), list[3,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 63, 63].  Tensor sizes: [3, 1, 0, 63]
2025-03-05 15:23:00.014072 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 64],"bool"), list[3,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 64],"bool"), list[3,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 64, 64].  Tensor sizes: [3, 1, 0, 64]
2025-03-05 15:23:00.014883 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 65],"bool"), list[3,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 65],"bool"), list[3,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 65, 65].  Tensor sizes: [3, 1, 0, 65]
2025-03-05 15:23:00.015539 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 66],"bool"), list[3,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 66],"bool"), list[3,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 66, 66].  Tensor sizes: [3, 1, 0, 66]
2025-03-05 15:23:00.016216 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 67],"bool"), list[3,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 67],"bool"), list[3,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 67, 67].  Tensor sizes: [3, 1, 0, 67]
2025-03-05 15:23:00.017034 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 68],"bool"), list[3,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 68],"bool"), list[3,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 68, 68].  Tensor sizes: [3, 1, 0, 68]
2025-03-05 15:23:00.017950 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 69],"bool"), list[3,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 69],"bool"), list[3,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 69, 69].  Tensor sizes: [3, 1, 0, 69]
2025-03-05 15:23:00.018762 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 6],"bool"), list[3,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 6],"bool"), list[3,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 6, 6].  Tensor sizes: [3, 1, 0, 6]
2025-03-05 15:23:00.019424 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 70],"bool"), list[3,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 70],"bool"), list[3,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 70, 70].  Tensor sizes: [3, 1, 0, 70]
2025-03-05 15:23:00.020026 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 71],"bool"), list[3,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 71],"bool"), list[3,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 71, 71].  Tensor sizes: [3, 1, 0, 71]
2025-03-05 15:23:00.020575 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 72],"bool"), list[3,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 72],"bool"), list[3,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 72, 72].  Tensor sizes: [3, 1, 0, 72]
2025-03-05 15:23:00.021125 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 73],"bool"), list[3,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 73],"bool"), list[3,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 73, 73].  Tensor sizes: [3, 1, 0, 73]
2025-03-05 15:23:00.021673 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 74],"bool"), list[3,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 74],"bool"), list[3,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 74, 74].  Tensor sizes: [3, 1, 0, 74]
2025-03-05 15:23:00.022217 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 75],"bool"), list[3,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 75],"bool"), list[3,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 75, 75].  Tensor sizes: [3, 1, 0, 75]
2025-03-05 15:23:00.022775 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 76],"bool"), list[3,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 76],"bool"), list[3,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 76, 76].  Tensor sizes: [3, 1, 0, 76]
2025-03-05 15:23:00.023317 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 77],"bool"), list[3,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 77],"bool"), list[3,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 77, 77].  Tensor sizes: [3, 1, 0, 77]
2025-03-05 15:23:00.023869 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 78],"bool"), list[3,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 78],"bool"), list[3,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 78, 78].  Tensor sizes: [3, 1, 0, 78]
2025-03-05 15:23:00.024404 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 79],"bool"), list[3,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 79],"bool"), list[3,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 79, 79].  Tensor sizes: [3, 1, 0, 79]
2025-03-05 15:23:00.024950 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 7],"bool"), list[3,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 7],"bool"), list[3,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 7, 7].  Tensor sizes: [3, 1, 0, 7]
2025-03-05 15:23:00.025501 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 80],"bool"), list[3,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 80],"bool"), list[3,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 80, 80].  Tensor sizes: [3, 1, 0, 80]
2025-03-05 15:23:00.026065 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 81],"bool"), list[3,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 81],"bool"), list[3,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 81, 81].  Tensor sizes: [3, 1, 0, 81]
2025-03-05 15:23:00.026617 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 82],"bool"), list[3,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 82],"bool"), list[3,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 82, 82].  Tensor sizes: [3, 1, 0, 82]
2025-03-05 15:23:00.027162 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 83],"bool"), list[3,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 83],"bool"), list[3,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 83, 83].  Tensor sizes: [3, 1, 0, 83]
2025-03-05 15:23:00.027714 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 84],"bool"), list[3,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 84],"bool"), list[3,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 84, 84].  Tensor sizes: [3, 1, 0, 84]
2025-03-05 15:23:00.028251 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 85],"bool"), list[3,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 85],"bool"), list[3,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 85, 85].  Tensor sizes: [3, 1, 0, 85]
2025-03-05 15:23:00.028805 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 86],"bool"), list[3,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 86],"bool"), list[3,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 86, 86].  Tensor sizes: [3, 1, 0, 86]
2025-03-05 15:23:00.029429 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 87],"bool"), list[3,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 87],"bool"), list[3,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 87, 87].  Tensor sizes: [3, 1, 0, 87]
2025-03-05 15:23:00.029988 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 88],"bool"), list[3,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 88],"bool"), list[3,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 88, 88].  Tensor sizes: [3, 1, 0, 88]
2025-03-05 15:23:00.030525 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 89],"bool"), list[3,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 89],"bool"), list[3,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 89, 89].  Tensor sizes: [3, 1, 0, 89]
2025-03-05 15:23:00.031078 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 8],"bool"), list[3,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 8],"bool"), list[3,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 8, 8].  Tensor sizes: [3, 1, 0, 8]
2025-03-05 15:23:00.031628 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 90],"bool"), list[3,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 90],"bool"), list[3,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 90, 90].  Tensor sizes: [3, 1, 0, 90]
2025-03-05 15:23:00.032172 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 91],"bool"), list[3,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 91],"bool"), list[3,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 91, 91].  Tensor sizes: [3, 1, 0, 91]
2025-03-05 15:23:00.032728 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 92],"bool"), list[3,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 92],"bool"), list[3,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 92, 92].  Tensor sizes: [3, 1, 0, 92]
2025-03-05 15:23:00.033288 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 93],"bool"), list[3,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 93],"bool"), list[3,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 93, 93].  Tensor sizes: [3, 1, 0, 93]
2025-03-05 15:23:00.033866 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 94],"bool"), list[3,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 94],"bool"), list[3,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 94, 94].  Tensor sizes: [3, 1, 0, 94]
2025-03-05 15:23:00.034420 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 95],"bool"), list[3,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 95],"bool"), list[3,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 95, 95].  Tensor sizes: [3, 1, 0, 95]
2025-03-05 15:23:00.034975 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 96],"bool"), list[3,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 96],"bool"), list[3,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 96, 96].  Tensor sizes: [3, 1, 0, 96]
2025-03-05 15:23:00.035511 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 97],"bool"), list[3,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 97],"bool"), list[3,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 97, 97].  Tensor sizes: [3, 1, 0, 97]
2025-03-05 15:23:00.036061 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 98],"bool"), list[3,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 98],"bool"), list[3,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 98, 98].  Tensor sizes: [3, 1, 0, 98]
2025-03-05 15:23:00.036615 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 99],"bool"), list[3,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 99],"bool"), list[3,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 99, 99].  Tensor sizes: [3, 1, 0, 99]
2025-03-05 15:23:00.037162 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,1,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,1,9,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 1, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.037733 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,10,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,10,9,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 10, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.038301 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,11,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,11,9,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 11, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.038877 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,12,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,12,9,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 12, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.039427 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,13,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,13,9,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 13, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.040057 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,14,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,14,9,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 14, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.040612 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,15,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,15,9,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 15, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.041187 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,16,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,16,9,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 16, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.041742 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,17,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,17,9,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 17, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.042278 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,18,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,18,9,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 18, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.042823 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,19,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,19,9,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 19, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.043368 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,2,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,2,9,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 2, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.043904 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,3,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,3,9,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 3, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.044433 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,4,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,4,9,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 4, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.044983 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,5,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,5,9,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 5, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.045531 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,6,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,6,9,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 6, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.046071 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,7,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,7,9,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 7, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.046606 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,8,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,8,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 8, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.047145 test begin: paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 0, 9],"bool"), list[3,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 8, 9, 9].  Tensor sizes: [3, 1, 0, 9]
2025-03-05 15:23:00.047679 test begin: paddle.broadcast_to(Tensor([3, 1, 1, 0],"bool"), list[3,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 1, 0],"bool"), list[3,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 1, 1].  Tensor sizes: [3, 1, 1, 0]
2025-03-05 15:23:00.048228 test begin: paddle.broadcast_to(Tensor([3, 1, 1, 0],"bool"), list[3,8,1,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 1, 0],"bool"), list[3,8,1,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 1, 105].  Tensor sizes: [3, 1, 1, 0]
2025-03-05 15:23:00.048792 test begin: paddle.broadcast_to(Tensor([3, 1, 1, 0],"bool"), list[3,8,1,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 1, 0],"bool"), list[3,8,1,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 1, 169].  Tensor sizes: [3, 1, 1, 0]
2025-03-05 15:23:00.049376 test begin: paddle.broadcast_to(Tensor([3, 1, 1, 0],"bool"), list[3,8,1,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 1, 0],"bool"), list[3,8,1,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 1, 21].  Tensor sizes: [3, 1, 1, 0]
2025-03-05 15:23:00.049914 test begin: paddle.broadcast_to(Tensor([3, 1, 1, 0],"bool"), list[3,8,1,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 1, 0],"bool"), list[3,8,1,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 1, 9].  Tensor sizes: [3, 1, 1, 0]
2025-03-05 15:23:00.050443 test begin: paddle.broadcast_to(Tensor([3, 1, 10, 0],"bool"), list[3,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 10, 0],"bool"), list[3,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 10, 10].  Tensor sizes: [3, 1, 10, 0]
2025-03-05 15:23:00.051673 test begin: paddle.broadcast_to(Tensor([3, 1, 10, 0],"bool"), list[3,8,10,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 10, 0],"bool"), list[3,8,10,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 10, 105].  Tensor sizes: [3, 1, 10, 0]
2025-03-05 15:23:00.052236 test begin: paddle.broadcast_to(Tensor([3, 1, 10, 0],"bool"), list[3,8,10,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 10, 0],"bool"), list[3,8,10,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 10, 169].  Tensor sizes: [3, 1, 10, 0]
2025-03-05 15:23:00.052867 test begin: paddle.broadcast_to(Tensor([3, 1, 10, 0],"bool"), list[3,8,10,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 10, 0],"bool"), list[3,8,10,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 10, 21].  Tensor sizes: [3, 1, 10, 0]
2025-03-05 15:23:00.053422 test begin: paddle.broadcast_to(Tensor([3, 1, 10, 0],"bool"), list[3,8,10,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 10, 0],"bool"), list[3,8,10,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 10, 9].  Tensor sizes: [3, 1, 10, 0]
2025-03-05 15:23:00.053977 test begin: paddle.broadcast_to(Tensor([3, 1, 100, 0],"bool"), list[3,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 100, 0],"bool"), list[3,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 100, 100].  Tensor sizes: [3, 1, 100, 0]
2025-03-05 15:23:00.054528 test begin: paddle.broadcast_to(Tensor([3, 1, 100, 0],"bool"), list[3,8,100,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 100, 0],"bool"), list[3,8,100,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 100, 169].  Tensor sizes: [3, 1, 100, 0]
2025-03-05 15:23:00.055087 test begin: paddle.broadcast_to(Tensor([3, 1, 101, 0],"bool"), list[3,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 101, 0],"bool"), list[3,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 101, 101].  Tensor sizes: [3, 1, 101, 0]
2025-03-05 15:23:00.055633 test begin: paddle.broadcast_to(Tensor([3, 1, 101, 0],"bool"), list[3,8,101,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 101, 0],"bool"), list[3,8,101,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 101, 169].  Tensor sizes: [3, 1, 101, 0]
2025-03-05 15:23:00.056172 test begin: paddle.broadcast_to(Tensor([3, 1, 102, 0],"bool"), list[3,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 102, 0],"bool"), list[3,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 102, 102].  Tensor sizes: [3, 1, 102, 0]
2025-03-05 15:23:00.056713 test begin: paddle.broadcast_to(Tensor([3, 1, 102, 0],"bool"), list[3,8,102,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 102, 0],"bool"), list[3,8,102,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 102, 169].  Tensor sizes: [3, 1, 102, 0]
2025-03-05 15:23:00.057255 test begin: paddle.broadcast_to(Tensor([3, 1, 103, 0],"bool"), list[3,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 103, 0],"bool"), list[3,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 103, 103].  Tensor sizes: [3, 1, 103, 0]
2025-03-05 15:23:00.058303 test begin: paddle.broadcast_to(Tensor([3, 1, 103, 0],"bool"), list[3,8,103,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 103, 0],"bool"), list[3,8,103,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 103, 169].  Tensor sizes: [3, 1, 103, 0]
2025-03-05 15:23:00.059068 test begin: paddle.broadcast_to(Tensor([3, 1, 104, 0],"bool"), list[3,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 104, 0],"bool"), list[3,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 104, 104].  Tensor sizes: [3, 1, 104, 0]
2025-03-05 15:23:00.059808 test begin: paddle.broadcast_to(Tensor([3, 1, 104, 0],"bool"), list[3,8,104,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 104, 0],"bool"), list[3,8,104,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 104, 169].  Tensor sizes: [3, 1, 104, 0]
2025-03-05 15:23:00.060465 test begin: paddle.broadcast_to(Tensor([3, 1, 105, 0],"bool"), list[3,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 105, 0],"bool"), list[3,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 105, 105].  Tensor sizes: [3, 1, 105, 0]
2025-03-05 15:23:00.061131 test begin: paddle.broadcast_to(Tensor([3, 1, 105, 0],"bool"), list[3,8,105,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 105, 0],"bool"), list[3,8,105,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 105, 169].  Tensor sizes: [3, 1, 105, 0]
2025-03-05 15:23:00.061877 test begin: paddle.broadcast_to(Tensor([3, 1, 106, 0],"bool"), list[3,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 106, 0],"bool"), list[3,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 106, 106].  Tensor sizes: [3, 1, 106, 0]
2025-03-05 15:23:00.062543 test begin: paddle.broadcast_to(Tensor([3, 1, 106, 0],"bool"), list[3,8,106,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 106, 0],"bool"), list[3,8,106,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 106, 169].  Tensor sizes: [3, 1, 106, 0]
2025-03-05 15:23:00.063204 test begin: paddle.broadcast_to(Tensor([3, 1, 107, 0],"bool"), list[3,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 107, 0],"bool"), list[3,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 107, 107].  Tensor sizes: [3, 1, 107, 0]
2025-03-05 15:23:00.063907 test begin: paddle.broadcast_to(Tensor([3, 1, 107, 0],"bool"), list[3,8,107,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 107, 0],"bool"), list[3,8,107,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 107, 169].  Tensor sizes: [3, 1, 107, 0]
2025-03-05 15:23:00.064579 test begin: paddle.broadcast_to(Tensor([3, 1, 108, 0],"bool"), list[3,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 108, 0],"bool"), list[3,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 108, 108].  Tensor sizes: [3, 1, 108, 0]
2025-03-05 15:23:00.065232 test begin: paddle.broadcast_to(Tensor([3, 1, 108, 0],"bool"), list[3,8,108,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 108, 0],"bool"), list[3,8,108,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 108, 169].  Tensor sizes: [3, 1, 108, 0]
2025-03-05 15:23:00.065919 test begin: paddle.broadcast_to(Tensor([3, 1, 109, 0],"bool"), list[3,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 109, 0],"bool"), list[3,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 109, 109].  Tensor sizes: [3, 1, 109, 0]
2025-03-05 15:23:00.066567 test begin: paddle.broadcast_to(Tensor([3, 1, 109, 0],"bool"), list[3,8,109,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 109, 0],"bool"), list[3,8,109,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 109, 169].  Tensor sizes: [3, 1, 109, 0]
2025-03-05 15:23:00.067234 test begin: paddle.broadcast_to(Tensor([3, 1, 11, 0],"bool"), list[3,8,11,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 11, 0],"bool"), list[3,8,11,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 11, 105].  Tensor sizes: [3, 1, 11, 0]
2025-03-05 15:23:00.067878 test begin: paddle.broadcast_to(Tensor([3, 1, 11, 0],"bool"), list[3,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 11, 0],"bool"), list[3,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 11, 11].  Tensor sizes: [3, 1, 11, 0]
2025-03-05 15:23:00.068504 test begin: paddle.broadcast_to(Tensor([3, 1, 11, 0],"bool"), list[3,8,11,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 11, 0],"bool"), list[3,8,11,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 11, 169].  Tensor sizes: [3, 1, 11, 0]
2025-03-05 15:23:00.069206 test begin: paddle.broadcast_to(Tensor([3, 1, 11, 0],"bool"), list[3,8,11,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 11, 0],"bool"), list[3,8,11,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 11, 21].  Tensor sizes: [3, 1, 11, 0]
2025-03-05 15:23:00.069936 test begin: paddle.broadcast_to(Tensor([3, 1, 11, 0],"bool"), list[3,8,11,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 11, 0],"bool"), list[3,8,11,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 11, 9].  Tensor sizes: [3, 1, 11, 0]
2025-03-05 15:23:00.070595 test begin: paddle.broadcast_to(Tensor([3, 1, 110, 0],"bool"), list[3,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 110, 0],"bool"), list[3,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 110, 110].  Tensor sizes: [3, 1, 110, 0]
2025-03-05 15:23:00.071136 test begin: paddle.broadcast_to(Tensor([3, 1, 110, 0],"bool"), list[3,8,110,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 110, 0],"bool"), list[3,8,110,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 110, 169].  Tensor sizes: [3, 1, 110, 0]
2025-03-05 15:23:00.071716 test begin: paddle.broadcast_to(Tensor([3, 1, 111, 0],"bool"), list[3,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 111, 0],"bool"), list[3,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 111, 111].  Tensor sizes: [3, 1, 111, 0]
2025-03-05 15:23:00.072240 test begin: paddle.broadcast_to(Tensor([3, 1, 111, 0],"bool"), list[3,8,111,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 111, 0],"bool"), list[3,8,111,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 111, 169].  Tensor sizes: [3, 1, 111, 0]
2025-03-05 15:23:00.072769 test begin: paddle.broadcast_to(Tensor([3, 1, 112, 0],"bool"), list[3,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 112, 0],"bool"), list[3,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 112, 112].  Tensor sizes: [3, 1, 112, 0]
2025-03-05 15:23:00.073280 test begin: paddle.broadcast_to(Tensor([3, 1, 112, 0],"bool"), list[3,8,112,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 112, 0],"bool"), list[3,8,112,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 112, 169].  Tensor sizes: [3, 1, 112, 0]
2025-03-05 15:23:00.073826 test begin: paddle.broadcast_to(Tensor([3, 1, 113, 0],"bool"), list[3,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 113, 0],"bool"), list[3,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 113, 113].  Tensor sizes: [3, 1, 113, 0]
2025-03-05 15:23:00.074330 test begin: paddle.broadcast_to(Tensor([3, 1, 113, 0],"bool"), list[3,8,113,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 113, 0],"bool"), list[3,8,113,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 113, 169].  Tensor sizes: [3, 1, 113, 0]
2025-03-05 15:23:00.074842 test begin: paddle.broadcast_to(Tensor([3, 1, 114, 0],"bool"), list[3,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 114, 0],"bool"), list[3,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 114, 114].  Tensor sizes: [3, 1, 114, 0]
2025-03-05 15:23:00.075344 test begin: paddle.broadcast_to(Tensor([3, 1, 114, 0],"bool"), list[3,8,114,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 114, 0],"bool"), list[3,8,114,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 114, 169].  Tensor sizes: [3, 1, 114, 0]
2025-03-05 15:23:00.075859 test begin: paddle.broadcast_to(Tensor([3, 1, 115, 0],"bool"), list[3,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 115, 0],"bool"), list[3,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 115, 115].  Tensor sizes: [3, 1, 115, 0]
2025-03-05 15:23:00.076363 test begin: paddle.broadcast_to(Tensor([3, 1, 115, 0],"bool"), list[3,8,115,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 115, 0],"bool"), list[3,8,115,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 115, 169].  Tensor sizes: [3, 1, 115, 0]
2025-03-05 15:23:00.076880 test begin: paddle.broadcast_to(Tensor([3, 1, 116, 0],"bool"), list[3,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 116, 0],"bool"), list[3,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 116, 116].  Tensor sizes: [3, 1, 116, 0]
2025-03-05 15:23:00.077395 test begin: paddle.broadcast_to(Tensor([3, 1, 116, 0],"bool"), list[3,8,116,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 116, 0],"bool"), list[3,8,116,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 116, 169].  Tensor sizes: [3, 1, 116, 0]
2025-03-05 15:23:00.077918 test begin: paddle.broadcast_to(Tensor([3, 1, 117, 0],"bool"), list[3,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 117, 0],"bool"), list[3,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 117, 117].  Tensor sizes: [3, 1, 117, 0]
2025-03-05 15:23:00.078447 test begin: paddle.broadcast_to(Tensor([3, 1, 117, 0],"bool"), list[3,8,117,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 117, 0],"bool"), list[3,8,117,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 117, 169].  Tensor sizes: [3, 1, 117, 0]
2025-03-05 15:23:00.079096 test begin: paddle.broadcast_to(Tensor([3, 1, 118, 0],"bool"), list[3,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 118, 0],"bool"), list[3,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 118, 118].  Tensor sizes: [3, 1, 118, 0]
2025-03-05 15:23:00.079678 test begin: paddle.broadcast_to(Tensor([3, 1, 118, 0],"bool"), list[3,8,118,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 118, 0],"bool"), list[3,8,118,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 118, 169].  Tensor sizes: [3, 1, 118, 0]
2025-03-05 15:23:00.080217 test begin: paddle.broadcast_to(Tensor([3, 1, 119, 0],"bool"), list[3,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 119, 0],"bool"), list[3,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 119, 119].  Tensor sizes: [3, 1, 119, 0]
2025-03-05 15:23:00.080741 test begin: paddle.broadcast_to(Tensor([3, 1, 119, 0],"bool"), list[3,8,119,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 119, 0],"bool"), list[3,8,119,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 119, 169].  Tensor sizes: [3, 1, 119, 0]
2025-03-05 15:23:00.081254 test begin: paddle.broadcast_to(Tensor([3, 1, 12, 0],"bool"), list[3,8,12,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 12, 0],"bool"), list[3,8,12,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 12, 105].  Tensor sizes: [3, 1, 12, 0]
2025-03-05 15:23:00.081773 test begin: paddle.broadcast_to(Tensor([3, 1, 12, 0],"bool"), list[3,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 12, 0],"bool"), list[3,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 12, 12].  Tensor sizes: [3, 1, 12, 0]
2025-03-05 15:23:00.082279 test begin: paddle.broadcast_to(Tensor([3, 1, 12, 0],"bool"), list[3,8,12,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 12, 0],"bool"), list[3,8,12,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 12, 169].  Tensor sizes: [3, 1, 12, 0]
2025-03-05 15:23:00.082867 test begin: paddle.broadcast_to(Tensor([3, 1, 12, 0],"bool"), list[3,8,12,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 12, 0],"bool"), list[3,8,12,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 12, 21].  Tensor sizes: [3, 1, 12, 0]
2025-03-05 15:23:00.084042 test begin: paddle.broadcast_to(Tensor([3, 1, 12, 0],"bool"), list[3,8,12,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 12, 0],"bool"), list[3,8,12,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 12, 9].  Tensor sizes: [3, 1, 12, 0]
2025-03-05 15:23:00.084671 test begin: paddle.broadcast_to(Tensor([3, 1, 120, 0],"bool"), list[3,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 120, 0],"bool"), list[3,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 120, 120].  Tensor sizes: [3, 1, 120, 0]
2025-03-05 15:23:00.085305 test begin: paddle.broadcast_to(Tensor([3, 1, 120, 0],"bool"), list[3,8,120,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 120, 0],"bool"), list[3,8,120,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 120, 169].  Tensor sizes: [3, 1, 120, 0]
2025-03-05 15:23:00.085885 test begin: paddle.broadcast_to(Tensor([3, 1, 121, 0],"bool"), list[3,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 121, 0],"bool"), list[3,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 121, 121].  Tensor sizes: [3, 1, 121, 0]
2025-03-05 15:23:00.086414 test begin: paddle.broadcast_to(Tensor([3, 1, 121, 0],"bool"), list[3,8,121,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 121, 0],"bool"), list[3,8,121,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 121, 169].  Tensor sizes: [3, 1, 121, 0]
2025-03-05 15:23:00.086979 test begin: paddle.broadcast_to(Tensor([3, 1, 122, 0],"bool"), list[3,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 122, 0],"bool"), list[3,8,122,122,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 122, 122].  Tensor sizes: [3, 1, 122, 0]
2025-03-05 15:23:00.087511 test begin: paddle.broadcast_to(Tensor([3, 1, 122, 0],"bool"), list[3,8,122,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 122, 0],"bool"), list[3,8,122,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 122, 169].  Tensor sizes: [3, 1, 122, 0]
2025-03-05 15:23:00.088074 test begin: paddle.broadcast_to(Tensor([3, 1, 123, 0],"bool"), list[3,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 123, 0],"bool"), list[3,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 123, 123].  Tensor sizes: [3, 1, 123, 0]
2025-03-05 15:23:00.088632 test begin: paddle.broadcast_to(Tensor([3, 1, 123, 0],"bool"), list[3,8,123,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 123, 0],"bool"), list[3,8,123,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 123, 169].  Tensor sizes: [3, 1, 123, 0]
2025-03-05 15:23:00.089166 test begin: paddle.broadcast_to(Tensor([3, 1, 124, 0],"bool"), list[3,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 124, 0],"bool"), list[3,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 124, 124].  Tensor sizes: [3, 1, 124, 0]
2025-03-05 15:23:00.089710 test begin: paddle.broadcast_to(Tensor([3, 1, 124, 0],"bool"), list[3,8,124,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 124, 0],"bool"), list[3,8,124,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 124, 169].  Tensor sizes: [3, 1, 124, 0]
2025-03-05 15:23:00.090237 test begin: paddle.broadcast_to(Tensor([3, 1, 125, 0],"bool"), list[3,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 125, 0],"bool"), list[3,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 125, 125].  Tensor sizes: [3, 1, 125, 0]
2025-03-05 15:23:00.090789 test begin: paddle.broadcast_to(Tensor([3, 1, 125, 0],"bool"), list[3,8,125,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 125, 0],"bool"), list[3,8,125,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 125, 169].  Tensor sizes: [3, 1, 125, 0]
2025-03-05 15:23:00.091325 test begin: paddle.broadcast_to(Tensor([3, 1, 126, 0],"bool"), list[3,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 126, 0],"bool"), list[3,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 126, 126].  Tensor sizes: [3, 1, 126, 0]
2025-03-05 15:23:00.091874 test begin: paddle.broadcast_to(Tensor([3, 1, 126, 0],"bool"), list[3,8,126,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 126, 0],"bool"), list[3,8,126,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 126, 169].  Tensor sizes: [3, 1, 126, 0]
2025-03-05 15:23:00.092430 test begin: paddle.broadcast_to(Tensor([3, 1, 127, 0],"bool"), list[3,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 127, 0],"bool"), list[3,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 127, 127].  Tensor sizes: [3, 1, 127, 0]
2025-03-05 15:23:00.092999 test begin: paddle.broadcast_to(Tensor([3, 1, 127, 0],"bool"), list[3,8,127,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 127, 0],"bool"), list[3,8,127,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 127, 169].  Tensor sizes: [3, 1, 127, 0]
2025-03-05 15:23:00.093546 test begin: paddle.broadcast_to(Tensor([3, 1, 128, 0],"bool"), list[3,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 128, 0],"bool"), list[3,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 128, 128].  Tensor sizes: [3, 1, 128, 0]
2025-03-05 15:23:00.094102 test begin: paddle.broadcast_to(Tensor([3, 1, 128, 0],"bool"), list[3,8,128,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 128, 0],"bool"), list[3,8,128,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 128, 169].  Tensor sizes: [3, 1, 128, 0]
2025-03-05 15:23:00.094663 test begin: paddle.broadcast_to(Tensor([3, 1, 129, 0],"bool"), list[3,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 129, 0],"bool"), list[3,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 129, 129].  Tensor sizes: [3, 1, 129, 0]
2025-03-05 15:23:00.095201 test begin: paddle.broadcast_to(Tensor([3, 1, 129, 0],"bool"), list[3,8,129,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 129, 0],"bool"), list[3,8,129,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 129, 169].  Tensor sizes: [3, 1, 129, 0]
2025-03-05 15:23:00.095744 test begin: paddle.broadcast_to(Tensor([3, 1, 13, 0],"bool"), list[3,8,13,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 13, 0],"bool"), list[3,8,13,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 13, 105].  Tensor sizes: [3, 1, 13, 0]
2025-03-05 15:23:00.096291 test begin: paddle.broadcast_to(Tensor([3, 1, 13, 0],"bool"), list[3,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 13, 0],"bool"), list[3,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 13, 13].  Tensor sizes: [3, 1, 13, 0]
2025-03-05 15:23:00.096890 test begin: paddle.broadcast_to(Tensor([3, 1, 13, 0],"bool"), list[3,8,13,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 13, 0],"bool"), list[3,8,13,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 13, 169].  Tensor sizes: [3, 1, 13, 0]
2025-03-05 15:23:00.097427 test begin: paddle.broadcast_to(Tensor([3, 1, 13, 0],"bool"), list[3,8,13,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 13, 0],"bool"), list[3,8,13,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 13, 21].  Tensor sizes: [3, 1, 13, 0]
2025-03-05 15:23:00.097977 test begin: paddle.broadcast_to(Tensor([3, 1, 13, 0],"bool"), list[3,8,13,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 13, 0],"bool"), list[3,8,13,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 13, 9].  Tensor sizes: [3, 1, 13, 0]
2025-03-05 15:23:00.098508 test begin: paddle.broadcast_to(Tensor([3, 1, 130, 0],"bool"), list[3,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 130, 0],"bool"), list[3,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 130, 130].  Tensor sizes: [3, 1, 130, 0]
2025-03-05 15:23:00.099057 test begin: paddle.broadcast_to(Tensor([3, 1, 130, 0],"bool"), list[3,8,130,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 130, 0],"bool"), list[3,8,130,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 130, 169].  Tensor sizes: [3, 1, 130, 0]
2025-03-05 15:23:00.099597 test begin: paddle.broadcast_to(Tensor([3, 1, 131, 0],"bool"), list[3,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 131, 0],"bool"), list[3,8,131,131,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 131, 131].  Tensor sizes: [3, 1, 131, 0]
2025-03-05 15:23:00.100128 test begin: paddle.broadcast_to(Tensor([3, 1, 131, 0],"bool"), list[3,8,131,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 131, 0],"bool"), list[3,8,131,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 131, 169].  Tensor sizes: [3, 1, 131, 0]
2025-03-05 15:23:00.100686 test begin: paddle.broadcast_to(Tensor([3, 1, 132, 0],"bool"), list[3,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 132, 0],"bool"), list[3,8,132,132,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 132, 132].  Tensor sizes: [3, 1, 132, 0]
2025-03-05 15:23:00.101263 test begin: paddle.broadcast_to(Tensor([3, 1, 132, 0],"bool"), list[3,8,132,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 132, 0],"bool"), list[3,8,132,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 132, 169].  Tensor sizes: [3, 1, 132, 0]
2025-03-05 15:23:00.101881 test begin: paddle.broadcast_to(Tensor([3, 1, 133, 0],"bool"), list[3,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 133, 0],"bool"), list[3,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 133, 133].  Tensor sizes: [3, 1, 133, 0]
2025-03-05 15:23:00.102436 test begin: paddle.broadcast_to(Tensor([3, 1, 133, 0],"bool"), list[3,8,133,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 133, 0],"bool"), list[3,8,133,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 133, 169].  Tensor sizes: [3, 1, 133, 0]
2025-03-05 15:23:00.102997 test begin: paddle.broadcast_to(Tensor([3, 1, 134, 0],"bool"), list[3,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 134, 0],"bool"), list[3,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 134, 134].  Tensor sizes: [3, 1, 134, 0]
2025-03-05 15:23:00.103554 test begin: paddle.broadcast_to(Tensor([3, 1, 134, 0],"bool"), list[3,8,134,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 134, 0],"bool"), list[3,8,134,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 134, 169].  Tensor sizes: [3, 1, 134, 0]
2025-03-05 15:23:00.104118 test begin: paddle.broadcast_to(Tensor([3, 1, 135, 0],"bool"), list[3,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 135, 0],"bool"), list[3,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 135, 135].  Tensor sizes: [3, 1, 135, 0]
2025-03-05 15:23:00.104661 test begin: paddle.broadcast_to(Tensor([3, 1, 135, 0],"bool"), list[3,8,135,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 135, 0],"bool"), list[3,8,135,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 135, 169].  Tensor sizes: [3, 1, 135, 0]
2025-03-05 15:23:00.105187 test begin: paddle.broadcast_to(Tensor([3, 1, 136, 0],"bool"), list[3,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 136, 0],"bool"), list[3,8,136,136,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 136, 136].  Tensor sizes: [3, 1, 136, 0]
2025-03-05 15:23:00.105781 test begin: paddle.broadcast_to(Tensor([3, 1, 136, 0],"bool"), list[3,8,136,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 136, 0],"bool"), list[3,8,136,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 136, 169].  Tensor sizes: [3, 1, 136, 0]
2025-03-05 15:23:00.106326 test begin: paddle.broadcast_to(Tensor([3, 1, 137, 0],"bool"), list[3,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 137, 0],"bool"), list[3,8,137,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 137, 137].  Tensor sizes: [3, 1, 137, 0]
2025-03-05 15:23:00.106888 test begin: paddle.broadcast_to(Tensor([3, 1, 137, 0],"bool"), list[3,8,137,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 137, 0],"bool"), list[3,8,137,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 137, 169].  Tensor sizes: [3, 1, 137, 0]
2025-03-05 15:23:00.107417 test begin: paddle.broadcast_to(Tensor([3, 1, 138, 0],"bool"), list[3,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 138, 0],"bool"), list[3,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 138, 138].  Tensor sizes: [3, 1, 138, 0]
2025-03-05 15:23:00.107959 test begin: paddle.broadcast_to(Tensor([3, 1, 138, 0],"bool"), list[3,8,138,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 138, 0],"bool"), list[3,8,138,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 138, 169].  Tensor sizes: [3, 1, 138, 0]
2025-03-05 15:23:00.108480 test begin: paddle.broadcast_to(Tensor([3, 1, 139, 0],"bool"), list[3,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 139, 0],"bool"), list[3,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 139, 139].  Tensor sizes: [3, 1, 139, 0]
2025-03-05 15:23:00.109044 test begin: paddle.broadcast_to(Tensor([3, 1, 139, 0],"bool"), list[3,8,139,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 139, 0],"bool"), list[3,8,139,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 139, 169].  Tensor sizes: [3, 1, 139, 0]
2025-03-05 15:23:00.109572 test begin: paddle.broadcast_to(Tensor([3, 1, 14, 0],"bool"), list[3,8,14,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 14, 0],"bool"), list[3,8,14,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 14, 105].  Tensor sizes: [3, 1, 14, 0]
2025-03-05 15:23:00.110125 test begin: paddle.broadcast_to(Tensor([3, 1, 14, 0],"bool"), list[3,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 14, 0],"bool"), list[3,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 14, 14].  Tensor sizes: [3, 1, 14, 0]
2025-03-05 15:23:00.110671 test begin: paddle.broadcast_to(Tensor([3, 1, 14, 0],"bool"), list[3,8,14,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 14, 0],"bool"), list[3,8,14,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 14, 169].  Tensor sizes: [3, 1, 14, 0]
2025-03-05 15:23:00.111210 test begin: paddle.broadcast_to(Tensor([3, 1, 14, 0],"bool"), list[3,8,14,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 14, 0],"bool"), list[3,8,14,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 14, 21].  Tensor sizes: [3, 1, 14, 0]
2025-03-05 15:23:00.111751 test begin: paddle.broadcast_to(Tensor([3, 1, 14, 0],"bool"), list[3,8,14,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 14, 0],"bool"), list[3,8,14,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 14, 9].  Tensor sizes: [3, 1, 14, 0]
2025-03-05 15:23:00.112294 test begin: paddle.broadcast_to(Tensor([3, 1, 140, 0],"bool"), list[3,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 140, 0],"bool"), list[3,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 140, 140].  Tensor sizes: [3, 1, 140, 0]
2025-03-05 15:23:00.112876 test begin: paddle.broadcast_to(Tensor([3, 1, 140, 0],"bool"), list[3,8,140,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 140, 0],"bool"), list[3,8,140,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 140, 169].  Tensor sizes: [3, 1, 140, 0]
2025-03-05 15:23:00.113401 test begin: paddle.broadcast_to(Tensor([3, 1, 141, 0],"bool"), list[3,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 141, 0],"bool"), list[3,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 141, 141].  Tensor sizes: [3, 1, 141, 0]
2025-03-05 15:23:00.113935 test begin: paddle.broadcast_to(Tensor([3, 1, 141, 0],"bool"), list[3,8,141,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 141, 0],"bool"), list[3,8,141,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 141, 169].  Tensor sizes: [3, 1, 141, 0]
2025-03-05 15:23:00.114481 test begin: paddle.broadcast_to(Tensor([3, 1, 142, 0],"bool"), list[3,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 142, 0],"bool"), list[3,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 142, 142].  Tensor sizes: [3, 1, 142, 0]
2025-03-05 15:23:00.115031 test begin: paddle.broadcast_to(Tensor([3, 1, 142, 0],"bool"), list[3,8,142,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 142, 0],"bool"), list[3,8,142,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 142, 169].  Tensor sizes: [3, 1, 142, 0]
2025-03-05 15:23:00.115574 test begin: paddle.broadcast_to(Tensor([3, 1, 143, 0],"bool"), list[3,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 143, 0],"bool"), list[3,8,143,143,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 143, 143].  Tensor sizes: [3, 1, 143, 0]
2025-03-05 15:23:00.116158 test begin: paddle.broadcast_to(Tensor([3, 1, 143, 0],"bool"), list[3,8,143,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 143, 0],"bool"), list[3,8,143,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 143, 169].  Tensor sizes: [3, 1, 143, 0]
2025-03-05 15:23:00.116719 test begin: paddle.broadcast_to(Tensor([3, 1, 144, 0],"bool"), list[3,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 144, 0],"bool"), list[3,8,144,144,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 144, 144].  Tensor sizes: [3, 1, 144, 0]
2025-03-05 15:23:00.117264 test begin: paddle.broadcast_to(Tensor([3, 1, 144, 0],"bool"), list[3,8,144,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 144, 0],"bool"), list[3,8,144,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 144, 169].  Tensor sizes: [3, 1, 144, 0]
2025-03-05 15:23:00.117815 test begin: paddle.broadcast_to(Tensor([3, 1, 145, 0],"bool"), list[3,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 145, 0],"bool"), list[3,8,145,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 145, 145].  Tensor sizes: [3, 1, 145, 0]
2025-03-05 15:23:00.118345 test begin: paddle.broadcast_to(Tensor([3, 1, 145, 0],"bool"), list[3,8,145,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 145, 0],"bool"), list[3,8,145,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 145, 169].  Tensor sizes: [3, 1, 145, 0]
2025-03-05 15:23:00.118885 test begin: paddle.broadcast_to(Tensor([3, 1, 146, 0],"bool"), list[3,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 146, 0],"bool"), list[3,8,146,146,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 146, 146].  Tensor sizes: [3, 1, 146, 0]
2025-03-05 15:23:00.119408 test begin: paddle.broadcast_to(Tensor([3, 1, 146, 0],"bool"), list[3,8,146,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 146, 0],"bool"), list[3,8,146,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 146, 169].  Tensor sizes: [3, 1, 146, 0]
2025-03-05 15:23:00.119941 test begin: paddle.broadcast_to(Tensor([3, 1, 147, 0],"bool"), list[3,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 147, 0],"bool"), list[3,8,147,147,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 147, 147].  Tensor sizes: [3, 1, 147, 0]
2025-03-05 15:23:00.120473 test begin: paddle.broadcast_to(Tensor([3, 1, 147, 0],"bool"), list[3,8,147,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 147, 0],"bool"), list[3,8,147,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 147, 169].  Tensor sizes: [3, 1, 147, 0]
2025-03-05 15:23:00.121003 test begin: paddle.broadcast_to(Tensor([3, 1, 148, 0],"bool"), list[3,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 148, 0],"bool"), list[3,8,148,148,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 148, 148].  Tensor sizes: [3, 1, 148, 0]
2025-03-05 15:23:00.121538 test begin: paddle.broadcast_to(Tensor([3, 1, 148, 0],"bool"), list[3,8,148,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 148, 0],"bool"), list[3,8,148,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 148, 169].  Tensor sizes: [3, 1, 148, 0]
2025-03-05 15:23:00.122076 test begin: paddle.broadcast_to(Tensor([3, 1, 149, 0],"bool"), list[3,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 149, 0],"bool"), list[3,8,149,149,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 149, 149].  Tensor sizes: [3, 1, 149, 0]
2025-03-05 15:23:00.122632 test begin: paddle.broadcast_to(Tensor([3, 1, 149, 0],"bool"), list[3,8,149,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 149, 0],"bool"), list[3,8,149,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 149, 169].  Tensor sizes: [3, 1, 149, 0]
2025-03-05 15:23:00.123175 test begin: paddle.broadcast_to(Tensor([3, 1, 15, 0],"bool"), list[3,8,15,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 15, 0],"bool"), list[3,8,15,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 15, 105].  Tensor sizes: [3, 1, 15, 0]
2025-03-05 15:23:00.123726 test begin: paddle.broadcast_to(Tensor([3, 1, 15, 0],"bool"), list[3,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 15, 0],"bool"), list[3,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 15, 15].  Tensor sizes: [3, 1, 15, 0]
2025-03-05 15:23:00.124272 test begin: paddle.broadcast_to(Tensor([3, 1, 15, 0],"bool"), list[3,8,15,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 15, 0],"bool"), list[3,8,15,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 15, 169].  Tensor sizes: [3, 1, 15, 0]
2025-03-05 15:23:00.124819 test begin: paddle.broadcast_to(Tensor([3, 1, 15, 0],"bool"), list[3,8,15,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 15, 0],"bool"), list[3,8,15,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 15, 21].  Tensor sizes: [3, 1, 15, 0]
2025-03-05 15:23:00.125851 test begin: paddle.broadcast_to(Tensor([3, 1, 15, 0],"bool"), list[3,8,15,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 15, 0],"bool"), list[3,8,15,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 15, 9].  Tensor sizes: [3, 1, 15, 0]
2025-03-05 15:23:00.126540 test begin: paddle.broadcast_to(Tensor([3, 1, 150, 0],"bool"), list[3,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 150, 0],"bool"), list[3,8,150,150,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 150, 150].  Tensor sizes: [3, 1, 150, 0]
2025-03-05 15:23:00.127192 test begin: paddle.broadcast_to(Tensor([3, 1, 150, 0],"bool"), list[3,8,150,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 150, 0],"bool"), list[3,8,150,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 150, 169].  Tensor sizes: [3, 1, 150, 0]
2025-03-05 15:23:00.127849 test begin: paddle.broadcast_to(Tensor([3, 1, 151, 0],"bool"), list[3,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 151, 0],"bool"), list[3,8,151,151,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 151, 151].  Tensor sizes: [3, 1, 151, 0]
2025-03-05 15:23:00.128495 test begin: paddle.broadcast_to(Tensor([3, 1, 151, 0],"bool"), list[3,8,151,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 151, 0],"bool"), list[3,8,151,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 151, 169].  Tensor sizes: [3, 1, 151, 0]
2025-03-05 15:23:00.129147 test begin: paddle.broadcast_to(Tensor([3, 1, 152, 0],"bool"), list[3,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 152, 0],"bool"), list[3,8,152,152,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 152, 152].  Tensor sizes: [3, 1, 152, 0]
2025-03-05 15:23:00.129799 test begin: paddle.broadcast_to(Tensor([3, 1, 152, 0],"bool"), list[3,8,152,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 152, 0],"bool"), list[3,8,152,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 152, 169].  Tensor sizes: [3, 1, 152, 0]
2025-03-05 15:23:00.130432 test begin: paddle.broadcast_to(Tensor([3, 1, 153, 0],"bool"), list[3,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 153, 0],"bool"), list[3,8,153,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 153, 153].  Tensor sizes: [3, 1, 153, 0]
2025-03-05 15:23:00.131067 test begin: paddle.broadcast_to(Tensor([3, 1, 153, 0],"bool"), list[3,8,153,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 153, 0],"bool"), list[3,8,153,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 153, 169].  Tensor sizes: [3, 1, 153, 0]
2025-03-05 15:23:00.131735 test begin: paddle.broadcast_to(Tensor([3, 1, 154, 0],"bool"), list[3,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 154, 0],"bool"), list[3,8,154,154,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 154, 154].  Tensor sizes: [3, 1, 154, 0]
2025-03-05 15:23:00.132377 test begin: paddle.broadcast_to(Tensor([3, 1, 154, 0],"bool"), list[3,8,154,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 154, 0],"bool"), list[3,8,154,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 154, 169].  Tensor sizes: [3, 1, 154, 0]
2025-03-05 15:23:00.133021 test begin: paddle.broadcast_to(Tensor([3, 1, 155, 0],"bool"), list[3,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 155, 0],"bool"), list[3,8,155,155,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 155, 155].  Tensor sizes: [3, 1, 155, 0]
2025-03-05 15:23:00.133763 test begin: paddle.broadcast_to(Tensor([3, 1, 155, 0],"bool"), list[3,8,155,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 155, 0],"bool"), list[3,8,155,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 155, 169].  Tensor sizes: [3, 1, 155, 0]
2025-03-05 15:23:00.134425 test begin: paddle.broadcast_to(Tensor([3, 1, 156, 0],"bool"), list[3,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 156, 0],"bool"), list[3,8,156,156,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 156, 156].  Tensor sizes: [3, 1, 156, 0]
2025-03-05 15:23:00.135093 test begin: paddle.broadcast_to(Tensor([3, 1, 156, 0],"bool"), list[3,8,156,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 156, 0],"bool"), list[3,8,156,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 156, 169].  Tensor sizes: [3, 1, 156, 0]
2025-03-05 15:23:00.135759 test begin: paddle.broadcast_to(Tensor([3, 1, 157, 0],"bool"), list[3,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 157, 0],"bool"), list[3,8,157,157,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 157, 157].  Tensor sizes: [3, 1, 157, 0]
2025-03-05 15:23:00.136427 test begin: paddle.broadcast_to(Tensor([3, 1, 157, 0],"bool"), list[3,8,157,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 157, 0],"bool"), list[3,8,157,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 157, 169].  Tensor sizes: [3, 1, 157, 0]
2025-03-05 15:23:00.137081 test begin: paddle.broadcast_to(Tensor([3, 1, 158, 0],"bool"), list[3,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 158, 0],"bool"), list[3,8,158,158,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 158, 158].  Tensor sizes: [3, 1, 158, 0]
2025-03-05 15:23:00.137776 test begin: paddle.broadcast_to(Tensor([3, 1, 158, 0],"bool"), list[3,8,158,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 158, 0],"bool"), list[3,8,158,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 158, 169].  Tensor sizes: [3, 1, 158, 0]
2025-03-05 15:23:00.138463 test begin: paddle.broadcast_to(Tensor([3, 1, 159, 0],"bool"), list[3,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 159, 0],"bool"), list[3,8,159,159,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 159, 159].  Tensor sizes: [3, 1, 159, 0]
2025-03-05 15:23:00.139151 test begin: paddle.broadcast_to(Tensor([3, 1, 159, 0],"bool"), list[3,8,159,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 159, 0],"bool"), list[3,8,159,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 159, 169].  Tensor sizes: [3, 1, 159, 0]
2025-03-05 15:23:00.139792 test begin: paddle.broadcast_to(Tensor([3, 1, 16, 0],"bool"), list[3,8,16,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 16, 0],"bool"), list[3,8,16,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 16, 105].  Tensor sizes: [3, 1, 16, 0]
2025-03-05 15:23:00.140430 test begin: paddle.broadcast_to(Tensor([3, 1, 16, 0],"bool"), list[3,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 16, 0],"bool"), list[3,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 16, 16].  Tensor sizes: [3, 1, 16, 0]
2025-03-05 15:23:00.141073 test begin: paddle.broadcast_to(Tensor([3, 1, 16, 0],"bool"), list[3,8,16,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 16, 0],"bool"), list[3,8,16,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 16, 169].  Tensor sizes: [3, 1, 16, 0]
2025-03-05 15:23:00.141723 test begin: paddle.broadcast_to(Tensor([3, 1, 16, 0],"bool"), list[3,8,16,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 16, 0],"bool"), list[3,8,16,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 16, 21].  Tensor sizes: [3, 1, 16, 0]
2025-03-05 15:23:00.142823 test begin: paddle.broadcast_to(Tensor([3, 1, 16, 0],"bool"), list[3,8,16,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 16, 0],"bool"), list[3,8,16,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 16, 9].  Tensor sizes: [3, 1, 16, 0]
2025-03-05 15:23:00.143612 test begin: paddle.broadcast_to(Tensor([3, 1, 160, 0],"bool"), list[3,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 160, 0],"bool"), list[3,8,160,160,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 160, 160].  Tensor sizes: [3, 1, 160, 0]
2025-03-05 15:23:00.144309 test begin: paddle.broadcast_to(Tensor([3, 1, 160, 0],"bool"), list[3,8,160,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 160, 0],"bool"), list[3,8,160,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 160, 169].  Tensor sizes: [3, 1, 160, 0]
2025-03-05 15:23:00.144890 test begin: paddle.broadcast_to(Tensor([3, 1, 161, 0],"bool"), list[3,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 161, 0],"bool"), list[3,8,161,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 161, 161].  Tensor sizes: [3, 1, 161, 0]
2025-03-05 15:23:00.145434 test begin: paddle.broadcast_to(Tensor([3, 1, 161, 0],"bool"), list[3,8,161,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 161, 0],"bool"), list[3,8,161,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 161, 169].  Tensor sizes: [3, 1, 161, 0]
2025-03-05 15:23:00.146013 test begin: paddle.broadcast_to(Tensor([3, 1, 162, 0],"bool"), list[3,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 162, 0],"bool"), list[3,8,162,162,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 162, 162].  Tensor sizes: [3, 1, 162, 0]
2025-03-05 15:23:00.146567 test begin: paddle.broadcast_to(Tensor([3, 1, 162, 0],"bool"), list[3,8,162,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 162, 0],"bool"), list[3,8,162,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 162, 169].  Tensor sizes: [3, 1, 162, 0]
2025-03-05 15:23:00.147109 test begin: paddle.broadcast_to(Tensor([3, 1, 163, 0],"bool"), list[3,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 163, 0],"bool"), list[3,8,163,163,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 163, 163].  Tensor sizes: [3, 1, 163, 0]
2025-03-05 15:23:00.147640 test begin: paddle.broadcast_to(Tensor([3, 1, 163, 0],"bool"), list[3,8,163,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 163, 0],"bool"), list[3,8,163,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 163, 169].  Tensor sizes: [3, 1, 163, 0]
2025-03-05 15:23:00.148197 test begin: paddle.broadcast_to(Tensor([3, 1, 17, 0],"bool"), list[3,8,17,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 17, 0],"bool"), list[3,8,17,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 17, 105].  Tensor sizes: [3, 1, 17, 0]
2025-03-05 15:23:00.148886 test begin: paddle.broadcast_to(Tensor([3, 1, 17, 0],"bool"), list[3,8,17,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 17, 0],"bool"), list[3,8,17,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 17, 169].  Tensor sizes: [3, 1, 17, 0]
2025-03-05 15:23:00.149442 test begin: paddle.broadcast_to(Tensor([3, 1, 17, 0],"bool"), list[3,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 17, 0],"bool"), list[3,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 17, 17].  Tensor sizes: [3, 1, 17, 0]
2025-03-05 15:23:00.150067 test begin: paddle.broadcast_to(Tensor([3, 1, 17, 0],"bool"), list[3,8,17,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 17, 0],"bool"), list[3,8,17,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 17, 21].  Tensor sizes: [3, 1, 17, 0]
2025-03-05 15:23:00.150606 test begin: paddle.broadcast_to(Tensor([3, 1, 17, 0],"bool"), list[3,8,17,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 17, 0],"bool"), list[3,8,17,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 17, 9].  Tensor sizes: [3, 1, 17, 0]
2025-03-05 15:23:00.151132 test begin: paddle.broadcast_to(Tensor([3, 1, 18, 0],"bool"), list[3,8,18,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 18, 0],"bool"), list[3,8,18,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 18, 105].  Tensor sizes: [3, 1, 18, 0]
2025-03-05 15:23:00.151652 test begin: paddle.broadcast_to(Tensor([3, 1, 18, 0],"bool"), list[3,8,18,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 18, 0],"bool"), list[3,8,18,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 18, 169].  Tensor sizes: [3, 1, 18, 0]
2025-03-05 15:23:00.152177 test begin: paddle.broadcast_to(Tensor([3, 1, 18, 0],"bool"), list[3,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 18, 0],"bool"), list[3,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 18, 18].  Tensor sizes: [3, 1, 18, 0]
2025-03-05 15:23:00.152697 test begin: paddle.broadcast_to(Tensor([3, 1, 18, 0],"bool"), list[3,8,18,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 18, 0],"bool"), list[3,8,18,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 18, 21].  Tensor sizes: [3, 1, 18, 0]
2025-03-05 15:23:00.153215 test begin: paddle.broadcast_to(Tensor([3, 1, 18, 0],"bool"), list[3,8,18,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 18, 0],"bool"), list[3,8,18,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 18, 9].  Tensor sizes: [3, 1, 18, 0]
2025-03-05 15:23:00.153732 test begin: paddle.broadcast_to(Tensor([3, 1, 19, 0],"bool"), list[3,8,19,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 19, 0],"bool"), list[3,8,19,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 19, 105].  Tensor sizes: [3, 1, 19, 0]
2025-03-05 15:23:00.154238 test begin: paddle.broadcast_to(Tensor([3, 1, 19, 0],"bool"), list[3,8,19,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 19, 0],"bool"), list[3,8,19,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 19, 169].  Tensor sizes: [3, 1, 19, 0]
2025-03-05 15:23:00.154757 test begin: paddle.broadcast_to(Tensor([3, 1, 19, 0],"bool"), list[3,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 19, 0],"bool"), list[3,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 19, 19].  Tensor sizes: [3, 1, 19, 0]
2025-03-05 15:23:00.155262 test begin: paddle.broadcast_to(Tensor([3, 1, 19, 0],"bool"), list[3,8,19,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 19, 0],"bool"), list[3,8,19,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 19, 21].  Tensor sizes: [3, 1, 19, 0]
2025-03-05 15:23:00.155896 test begin: paddle.broadcast_to(Tensor([3, 1, 19, 0],"bool"), list[3,8,19,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 19, 0],"bool"), list[3,8,19,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 19, 9].  Tensor sizes: [3, 1, 19, 0]
2025-03-05 15:23:00.156976 test begin: paddle.broadcast_to(Tensor([3, 1, 2, 0],"bool"), list[3,8,2,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 2, 0],"bool"), list[3,8,2,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 2, 105].  Tensor sizes: [3, 1, 2, 0]
2025-03-05 15:23:00.157572 test begin: paddle.broadcast_to(Tensor([3, 1, 2, 0],"bool"), list[3,8,2,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 2, 0],"bool"), list[3,8,2,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 2, 169].  Tensor sizes: [3, 1, 2, 0]
2025-03-05 15:23:00.158155 test begin: paddle.broadcast_to(Tensor([3, 1, 2, 0],"bool"), list[3,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 2, 0],"bool"), list[3,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 2, 2].  Tensor sizes: [3, 1, 2, 0]
2025-03-05 15:23:00.158721 test begin: paddle.broadcast_to(Tensor([3, 1, 2, 0],"bool"), list[3,8,2,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 2, 0],"bool"), list[3,8,2,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 2, 21].  Tensor sizes: [3, 1, 2, 0]
2025-03-05 15:23:00.159287 test begin: paddle.broadcast_to(Tensor([3, 1, 2, 0],"bool"), list[3,8,2,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 2, 0],"bool"), list[3,8,2,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 2, 9].  Tensor sizes: [3, 1, 2, 0]
2025-03-05 15:23:00.159853 test begin: paddle.broadcast_to(Tensor([3, 1, 20, 0],"bool"), list[3,8,20,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 20, 0],"bool"), list[3,8,20,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 20, 105].  Tensor sizes: [3, 1, 20, 0]
2025-03-05 15:23:00.160394 test begin: paddle.broadcast_to(Tensor([3, 1, 20, 0],"bool"), list[3,8,20,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 20, 0],"bool"), list[3,8,20,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 20, 169].  Tensor sizes: [3, 1, 20, 0]
2025-03-05 15:23:00.160937 test begin: paddle.broadcast_to(Tensor([3, 1, 20, 0],"bool"), list[3,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 20, 0],"bool"), list[3,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 20, 20].  Tensor sizes: [3, 1, 20, 0]
2025-03-05 15:23:00.161468 test begin: paddle.broadcast_to(Tensor([3, 1, 20, 0],"bool"), list[3,8,20,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 20, 0],"bool"), list[3,8,20,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 20, 21].  Tensor sizes: [3, 1, 20, 0]
2025-03-05 15:23:00.162011 test begin: paddle.broadcast_to(Tensor([3, 1, 21, 0],"bool"), list[3,8,21,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 21, 0],"bool"), list[3,8,21,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 21, 105].  Tensor sizes: [3, 1, 21, 0]
2025-03-05 15:23:00.162558 test begin: paddle.broadcast_to(Tensor([3, 1, 21, 0],"bool"), list[3,8,21,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 21, 0],"bool"), list[3,8,21,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 21, 169].  Tensor sizes: [3, 1, 21, 0]
2025-03-05 15:23:00.163130 test begin: paddle.broadcast_to(Tensor([3, 1, 21, 0],"bool"), list[3,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 21, 0],"bool"), list[3,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 21, 21].  Tensor sizes: [3, 1, 21, 0]
2025-03-05 15:23:00.163762 test begin: paddle.broadcast_to(Tensor([3, 1, 22, 0],"bool"), list[3,8,22,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 22, 0],"bool"), list[3,8,22,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 22, 105].  Tensor sizes: [3, 1, 22, 0]
2025-03-05 15:23:00.164338 test begin: paddle.broadcast_to(Tensor([3, 1, 22, 0],"bool"), list[3,8,22,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 22, 0],"bool"), list[3,8,22,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 22, 169].  Tensor sizes: [3, 1, 22, 0]
2025-03-05 15:23:00.164892 test begin: paddle.broadcast_to(Tensor([3, 1, 22, 0],"bool"), list[3,8,22,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 22, 0],"bool"), list[3,8,22,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 22, 21].  Tensor sizes: [3, 1, 22, 0]
2025-03-05 15:23:00.165440 test begin: paddle.broadcast_to(Tensor([3, 1, 22, 0],"bool"), list[3,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 22, 0],"bool"), list[3,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 22, 22].  Tensor sizes: [3, 1, 22, 0]
2025-03-05 15:23:00.166003 test begin: paddle.broadcast_to(Tensor([3, 1, 23, 0],"bool"), list[3,8,23,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 23, 0],"bool"), list[3,8,23,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 23, 105].  Tensor sizes: [3, 1, 23, 0]
2025-03-05 15:23:00.166559 test begin: paddle.broadcast_to(Tensor([3, 1, 23, 0],"bool"), list[3,8,23,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 23, 0],"bool"), list[3,8,23,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 23, 169].  Tensor sizes: [3, 1, 23, 0]
2025-03-05 15:23:00.167169 test begin: paddle.broadcast_to(Tensor([3, 1, 23, 0],"bool"), list[3,8,23,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 23, 0],"bool"), list[3,8,23,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 23, 21].  Tensor sizes: [3, 1, 23, 0]
2025-03-05 15:23:00.167712 test begin: paddle.broadcast_to(Tensor([3, 1, 23, 0],"bool"), list[3,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 23, 0],"bool"), list[3,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 23, 23].  Tensor sizes: [3, 1, 23, 0]
2025-03-05 15:23:00.168232 test begin: paddle.broadcast_to(Tensor([3, 1, 24, 0],"bool"), list[3,8,24,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 24, 0],"bool"), list[3,8,24,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 24, 105].  Tensor sizes: [3, 1, 24, 0]
2025-03-05 15:23:00.168794 test begin: paddle.broadcast_to(Tensor([3, 1, 24, 0],"bool"), list[3,8,24,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 24, 0],"bool"), list[3,8,24,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 24, 169].  Tensor sizes: [3, 1, 24, 0]
2025-03-05 15:23:00.169340 test begin: paddle.broadcast_to(Tensor([3, 1, 24, 0],"bool"), list[3,8,24,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 24, 0],"bool"), list[3,8,24,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 24, 21].  Tensor sizes: [3, 1, 24, 0]
2025-03-05 15:23:00.169891 test begin: paddle.broadcast_to(Tensor([3, 1, 24, 0],"bool"), list[3,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 24, 0],"bool"), list[3,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 24, 24].  Tensor sizes: [3, 1, 24, 0]
2025-03-05 15:23:00.170433 test begin: paddle.broadcast_to(Tensor([3, 1, 25, 0],"bool"), list[3,8,25,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 25, 0],"bool"), list[3,8,25,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 25, 105].  Tensor sizes: [3, 1, 25, 0]
2025-03-05 15:23:00.171019 test begin: paddle.broadcast_to(Tensor([3, 1, 25, 0],"bool"), list[3,8,25,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 25, 0],"bool"), list[3,8,25,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 25, 169].  Tensor sizes: [3, 1, 25, 0]
2025-03-05 15:23:00.171553 test begin: paddle.broadcast_to(Tensor([3, 1, 25, 0],"bool"), list[3,8,25,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 25, 0],"bool"), list[3,8,25,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 25, 21].  Tensor sizes: [3, 1, 25, 0]
2025-03-05 15:23:00.172092 test begin: paddle.broadcast_to(Tensor([3, 1, 25, 0],"bool"), list[3,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 25, 0],"bool"), list[3,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 25, 25].  Tensor sizes: [3, 1, 25, 0]
2025-03-05 15:23:00.172638 test begin: paddle.broadcast_to(Tensor([3, 1, 26, 0],"bool"), list[3,8,26,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 26, 0],"bool"), list[3,8,26,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 26, 105].  Tensor sizes: [3, 1, 26, 0]
2025-03-05 15:23:00.173198 test begin: paddle.broadcast_to(Tensor([3, 1, 26, 0],"bool"), list[3,8,26,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 26, 0],"bool"), list[3,8,26,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 26, 169].  Tensor sizes: [3, 1, 26, 0]
2025-03-05 15:23:00.173757 test begin: paddle.broadcast_to(Tensor([3, 1, 26, 0],"bool"), list[3,8,26,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 26, 0],"bool"), list[3,8,26,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 26, 21].  Tensor sizes: [3, 1, 26, 0]
2025-03-05 15:23:00.174300 test begin: paddle.broadcast_to(Tensor([3, 1, 26, 0],"bool"), list[3,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 26, 0],"bool"), list[3,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 26, 26].  Tensor sizes: [3, 1, 26, 0]
2025-03-05 15:23:00.174850 test begin: paddle.broadcast_to(Tensor([3, 1, 27, 0],"bool"), list[3,8,27,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 27, 0],"bool"), list[3,8,27,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 27, 105].  Tensor sizes: [3, 1, 27, 0]
2025-03-05 15:23:00.175395 test begin: paddle.broadcast_to(Tensor([3, 1, 27, 0],"bool"), list[3,8,27,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 27, 0],"bool"), list[3,8,27,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 27, 169].  Tensor sizes: [3, 1, 27, 0]
2025-03-05 15:23:00.175940 test begin: paddle.broadcast_to(Tensor([3, 1, 27, 0],"bool"), list[3,8,27,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 27, 0],"bool"), list[3,8,27,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 27, 21].  Tensor sizes: [3, 1, 27, 0]
2025-03-05 15:23:00.176478 test begin: paddle.broadcast_to(Tensor([3, 1, 27, 0],"bool"), list[3,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 27, 0],"bool"), list[3,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 27, 27].  Tensor sizes: [3, 1, 27, 0]
2025-03-05 15:23:00.177026 test begin: paddle.broadcast_to(Tensor([3, 1, 28, 0],"bool"), list[3,8,28,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 28, 0],"bool"), list[3,8,28,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 28, 105].  Tensor sizes: [3, 1, 28, 0]
2025-03-05 15:23:00.177557 test begin: paddle.broadcast_to(Tensor([3, 1, 28, 0],"bool"), list[3,8,28,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 28, 0],"bool"), list[3,8,28,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 28, 169].  Tensor sizes: [3, 1, 28, 0]
2025-03-05 15:23:00.178098 test begin: paddle.broadcast_to(Tensor([3, 1, 28, 0],"bool"), list[3,8,28,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 28, 0],"bool"), list[3,8,28,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 28, 21].  Tensor sizes: [3, 1, 28, 0]
2025-03-05 15:23:00.178640 test begin: paddle.broadcast_to(Tensor([3, 1, 28, 0],"bool"), list[3,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 28, 0],"bool"), list[3,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 28, 28].  Tensor sizes: [3, 1, 28, 0]
2025-03-05 15:23:00.179206 test begin: paddle.broadcast_to(Tensor([3, 1, 29, 0],"bool"), list[3,8,29,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 29, 0],"bool"), list[3,8,29,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 29, 105].  Tensor sizes: [3, 1, 29, 0]
2025-03-05 15:23:00.179832 test begin: paddle.broadcast_to(Tensor([3, 1, 29, 0],"bool"), list[3,8,29,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 29, 0],"bool"), list[3,8,29,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 29, 169].  Tensor sizes: [3, 1, 29, 0]
2025-03-05 15:23:00.180385 test begin: paddle.broadcast_to(Tensor([3, 1, 29, 0],"bool"), list[3,8,29,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 29, 0],"bool"), list[3,8,29,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 29, 21].  Tensor sizes: [3, 1, 29, 0]
2025-03-05 15:23:00.180945 test begin: paddle.broadcast_to(Tensor([3, 1, 29, 0],"bool"), list[3,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 29, 0],"bool"), list[3,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 29, 29].  Tensor sizes: [3, 1, 29, 0]
2025-03-05 15:23:00.181485 test begin: paddle.broadcast_to(Tensor([3, 1, 3, 0],"bool"), list[3,8,3,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 3, 0],"bool"), list[3,8,3,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 3, 105].  Tensor sizes: [3, 1, 3, 0]
2025-03-05 15:23:00.182028 test begin: paddle.broadcast_to(Tensor([3, 1, 3, 0],"bool"), list[3,8,3,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 3, 0],"bool"), list[3,8,3,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 3, 169].  Tensor sizes: [3, 1, 3, 0]
2025-03-05 15:23:00.182575 test begin: paddle.broadcast_to(Tensor([3, 1, 3, 0],"bool"), list[3,8,3,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 3, 0],"bool"), list[3,8,3,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 3, 21].  Tensor sizes: [3, 1, 3, 0]
2025-03-05 15:23:00.183123 test begin: paddle.broadcast_to(Tensor([3, 1, 3, 0],"bool"), list[3,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 3, 0],"bool"), list[3,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 3, 3].  Tensor sizes: [3, 1, 3, 0]
2025-03-05 15:23:00.183667 test begin: paddle.broadcast_to(Tensor([3, 1, 3, 0],"bool"), list[3,8,3,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 3, 0],"bool"), list[3,8,3,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 3, 9].  Tensor sizes: [3, 1, 3, 0]
2025-03-05 15:23:00.184201 test begin: paddle.broadcast_to(Tensor([3, 1, 30, 0],"bool"), list[3,8,30,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 30, 0],"bool"), list[3,8,30,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 30, 105].  Tensor sizes: [3, 1, 30, 0]
2025-03-05 15:23:00.184756 test begin: paddle.broadcast_to(Tensor([3, 1, 30, 0],"bool"), list[3,8,30,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 30, 0],"bool"), list[3,8,30,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 30, 169].  Tensor sizes: [3, 1, 30, 0]
2025-03-05 15:23:00.185337 test begin: paddle.broadcast_to(Tensor([3, 1, 30, 0],"bool"), list[3,8,30,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 30, 0],"bool"), list[3,8,30,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 30, 21].  Tensor sizes: [3, 1, 30, 0]
2025-03-05 15:23:00.185950 test begin: paddle.broadcast_to(Tensor([3, 1, 30, 0],"bool"), list[3,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 30, 0],"bool"), list[3,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 30, 30].  Tensor sizes: [3, 1, 30, 0]
2025-03-05 15:23:00.186495 test begin: paddle.broadcast_to(Tensor([3, 1, 31, 0],"bool"), list[3,8,31,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 31, 0],"bool"), list[3,8,31,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 31, 105].  Tensor sizes: [3, 1, 31, 0]
2025-03-05 15:23:00.187050 test begin: paddle.broadcast_to(Tensor([3, 1, 31, 0],"bool"), list[3,8,31,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 31, 0],"bool"), list[3,8,31,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 31, 169].  Tensor sizes: [3, 1, 31, 0]
2025-03-05 15:23:00.187603 test begin: paddle.broadcast_to(Tensor([3, 1, 31, 0],"bool"), list[3,8,31,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 31, 0],"bool"), list[3,8,31,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 31, 21].  Tensor sizes: [3, 1, 31, 0]
2025-03-05 15:23:00.188134 test begin: paddle.broadcast_to(Tensor([3, 1, 31, 0],"bool"), list[3,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 31, 0],"bool"), list[3,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 31, 31].  Tensor sizes: [3, 1, 31, 0]
2025-03-05 15:23:00.188697 test begin: paddle.broadcast_to(Tensor([3, 1, 32, 0],"bool"), list[3,8,32,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 32, 0],"bool"), list[3,8,32,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 32, 105].  Tensor sizes: [3, 1, 32, 0]
2025-03-05 15:23:00.189228 test begin: paddle.broadcast_to(Tensor([3, 1, 32, 0],"bool"), list[3,8,32,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 32, 0],"bool"), list[3,8,32,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 32, 169].  Tensor sizes: [3, 1, 32, 0]
2025-03-05 15:23:00.189768 test begin: paddle.broadcast_to(Tensor([3, 1, 32, 0],"bool"), list[3,8,32,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 32, 0],"bool"), list[3,8,32,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 32, 21].  Tensor sizes: [3, 1, 32, 0]
2025-03-05 15:23:00.190303 test begin: paddle.broadcast_to(Tensor([3, 1, 32, 0],"bool"), list[3,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 32, 0],"bool"), list[3,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 32, 32].  Tensor sizes: [3, 1, 32, 0]
2025-03-05 15:23:00.190851 test begin: paddle.broadcast_to(Tensor([3, 1, 33, 0],"bool"), list[3,8,33,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 33, 0],"bool"), list[3,8,33,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 33, 105].  Tensor sizes: [3, 1, 33, 0]
2025-03-05 15:23:00.191391 test begin: paddle.broadcast_to(Tensor([3, 1, 33, 0],"bool"), list[3,8,33,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 33, 0],"bool"), list[3,8,33,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 33, 169].  Tensor sizes: [3, 1, 33, 0]
2025-03-05 15:23:00.192005 test begin: paddle.broadcast_to(Tensor([3, 1, 33, 0],"bool"), list[3,8,33,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 33, 0],"bool"), list[3,8,33,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 33, 21].  Tensor sizes: [3, 1, 33, 0]
2025-03-05 15:23:00.192532 test begin: paddle.broadcast_to(Tensor([3, 1, 33, 0],"bool"), list[3,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 33, 0],"bool"), list[3,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 33, 33].  Tensor sizes: [3, 1, 33, 0]
2025-03-05 15:23:00.193091 test begin: paddle.broadcast_to(Tensor([3, 1, 34, 0],"bool"), list[3,8,34,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 34, 0],"bool"), list[3,8,34,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 34, 105].  Tensor sizes: [3, 1, 34, 0]
2025-03-05 15:23:00.193640 test begin: paddle.broadcast_to(Tensor([3, 1, 34, 0],"bool"), list[3,8,34,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 34, 0],"bool"), list[3,8,34,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 34, 169].  Tensor sizes: [3, 1, 34, 0]
2025-03-05 15:23:00.194178 test begin: paddle.broadcast_to(Tensor([3, 1, 34, 0],"bool"), list[3,8,34,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 34, 0],"bool"), list[3,8,34,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 34, 21].  Tensor sizes: [3, 1, 34, 0]
2025-03-05 15:23:00.194722 test begin: paddle.broadcast_to(Tensor([3, 1, 34, 0],"bool"), list[3,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 34, 0],"bool"), list[3,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 34, 34].  Tensor sizes: [3, 1, 34, 0]
2025-03-05 15:23:00.195264 test begin: paddle.broadcast_to(Tensor([3, 1, 35, 0],"bool"), list[3,8,35,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 35, 0],"bool"), list[3,8,35,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 35, 105].  Tensor sizes: [3, 1, 35, 0]
2025-03-05 15:23:00.195806 test begin: paddle.broadcast_to(Tensor([3, 1, 35, 0],"bool"), list[3,8,35,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 35, 0],"bool"), list[3,8,35,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 35, 169].  Tensor sizes: [3, 1, 35, 0]
2025-03-05 15:23:00.196355 test begin: paddle.broadcast_to(Tensor([3, 1, 35, 0],"bool"), list[3,8,35,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 35, 0],"bool"), list[3,8,35,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 35, 21].  Tensor sizes: [3, 1, 35, 0]
2025-03-05 15:23:00.196904 test begin: paddle.broadcast_to(Tensor([3, 1, 35, 0],"bool"), list[3,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 35, 0],"bool"), list[3,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 35, 35].  Tensor sizes: [3, 1, 35, 0]
2025-03-05 15:23:00.197432 test begin: paddle.broadcast_to(Tensor([3, 1, 36, 0],"bool"), list[3,8,36,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 36, 0],"bool"), list[3,8,36,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 36, 105].  Tensor sizes: [3, 1, 36, 0]
2025-03-05 15:23:00.198016 test begin: paddle.broadcast_to(Tensor([3, 1, 36, 0],"bool"), list[3,8,36,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 36, 0],"bool"), list[3,8,36,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 36, 169].  Tensor sizes: [3, 1, 36, 0]
2025-03-05 15:23:00.198627 test begin: paddle.broadcast_to(Tensor([3, 1, 36, 0],"bool"), list[3,8,36,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 36, 0],"bool"), list[3,8,36,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 36, 21].  Tensor sizes: [3, 1, 36, 0]
2025-03-05 15:23:00.199197 test begin: paddle.broadcast_to(Tensor([3, 1, 36, 0],"bool"), list[3,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 36, 0],"bool"), list[3,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 36, 36].  Tensor sizes: [3, 1, 36, 0]
2025-03-05 15:23:00.199740 test begin: paddle.broadcast_to(Tensor([3, 1, 37, 0],"bool"), list[3,8,37,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 37, 0],"bool"), list[3,8,37,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 37, 105].  Tensor sizes: [3, 1, 37, 0]
2025-03-05 15:23:00.200304 test begin: paddle.broadcast_to(Tensor([3, 1, 37, 0],"bool"), list[3,8,37,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 37, 0],"bool"), list[3,8,37,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 37, 169].  Tensor sizes: [3, 1, 37, 0]
2025-03-05 15:23:00.200853 test begin: paddle.broadcast_to(Tensor([3, 1, 37, 0],"bool"), list[3,8,37,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 37, 0],"bool"), list[3,8,37,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 37, 21].  Tensor sizes: [3, 1, 37, 0]
2025-03-05 15:23:00.201380 test begin: paddle.broadcast_to(Tensor([3, 1, 37, 0],"bool"), list[3,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 37, 0],"bool"), list[3,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 37, 37].  Tensor sizes: [3, 1, 37, 0]
2025-03-05 15:23:00.201925 test begin: paddle.broadcast_to(Tensor([3, 1, 38, 0],"bool"), list[3,8,38,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 38, 0],"bool"), list[3,8,38,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 38, 105].  Tensor sizes: [3, 1, 38, 0]
2025-03-05 15:23:00.202457 test begin: paddle.broadcast_to(Tensor([3, 1, 38, 0],"bool"), list[3,8,38,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 38, 0],"bool"), list[3,8,38,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 38, 169].  Tensor sizes: [3, 1, 38, 0]
2025-03-05 15:23:00.203002 test begin: paddle.broadcast_to(Tensor([3, 1, 38, 0],"bool"), list[3,8,38,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 38, 0],"bool"), list[3,8,38,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 38, 21].  Tensor sizes: [3, 1, 38, 0]
2025-03-05 15:23:00.203538 test begin: paddle.broadcast_to(Tensor([3, 1, 38, 0],"bool"), list[3,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 38, 0],"bool"), list[3,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 38, 38].  Tensor sizes: [3, 1, 38, 0]
2025-03-05 15:23:00.204568 test begin: paddle.broadcast_to(Tensor([3, 1, 39, 0],"bool"), list[3,8,39,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 39, 0],"bool"), list[3,8,39,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 39, 105].  Tensor sizes: [3, 1, 39, 0]
2025-03-05 15:23:00.205334 test begin: paddle.broadcast_to(Tensor([3, 1, 39, 0],"bool"), list[3,8,39,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 39, 0],"bool"), list[3,8,39,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 39, 169].  Tensor sizes: [3, 1, 39, 0]
2025-03-05 15:23:00.206006 test begin: paddle.broadcast_to(Tensor([3, 1, 39, 0],"bool"), list[3,8,39,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 39, 0],"bool"), list[3,8,39,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 39, 21].  Tensor sizes: [3, 1, 39, 0]
2025-03-05 15:23:00.206645 test begin: paddle.broadcast_to(Tensor([3, 1, 39, 0],"bool"), list[3,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 39, 0],"bool"), list[3,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 39, 39].  Tensor sizes: [3, 1, 39, 0]
2025-03-05 15:23:00.207318 test begin: paddle.broadcast_to(Tensor([3, 1, 4, 0],"bool"), list[3,8,4,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 4, 0],"bool"), list[3,8,4,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 4, 105].  Tensor sizes: [3, 1, 4, 0]
2025-03-05 15:23:00.207990 test begin: paddle.broadcast_to(Tensor([3, 1, 4, 0],"bool"), list[3,8,4,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 4, 0],"bool"), list[3,8,4,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 4, 169].  Tensor sizes: [3, 1, 4, 0]
2025-03-05 15:23:00.208634 test begin: paddle.broadcast_to(Tensor([3, 1, 4, 0],"bool"), list[3,8,4,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 4, 0],"bool"), list[3,8,4,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 4, 21].  Tensor sizes: [3, 1, 4, 0]
2025-03-05 15:23:00.209293 test begin: paddle.broadcast_to(Tensor([3, 1, 4, 0],"bool"), list[3,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 4, 0],"bool"), list[3,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 4, 4].  Tensor sizes: [3, 1, 4, 0]
2025-03-05 15:23:00.209934 test begin: paddle.broadcast_to(Tensor([3, 1, 4, 0],"bool"), list[3,8,4,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 4, 0],"bool"), list[3,8,4,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 4, 9].  Tensor sizes: [3, 1, 4, 0]
2025-03-05 15:23:00.210577 test begin: paddle.broadcast_to(Tensor([3, 1, 40, 0],"bool"), list[3,8,40,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 40, 0],"bool"), list[3,8,40,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 40, 105].  Tensor sizes: [3, 1, 40, 0]
2025-03-05 15:23:00.211349 test begin: paddle.broadcast_to(Tensor([3, 1, 40, 0],"bool"), list[3,8,40,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 40, 0],"bool"), list[3,8,40,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 40, 169].  Tensor sizes: [3, 1, 40, 0]
2025-03-05 15:23:00.212063 test begin: paddle.broadcast_to(Tensor([3, 1, 40, 0],"bool"), list[3,8,40,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 40, 0],"bool"), list[3,8,40,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 40, 21].  Tensor sizes: [3, 1, 40, 0]
2025-03-05 15:23:00.212694 test begin: paddle.broadcast_to(Tensor([3, 1, 40, 0],"bool"), list[3,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 40, 0],"bool"), list[3,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 40, 40].  Tensor sizes: [3, 1, 40, 0]
2025-03-05 15:23:00.213229 test begin: paddle.broadcast_to(Tensor([3, 1, 41, 0],"bool"), list[3,8,41,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 41, 0],"bool"), list[3,8,41,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 41, 105].  Tensor sizes: [3, 1, 41, 0]
2025-03-05 15:23:00.213796 test begin: paddle.broadcast_to(Tensor([3, 1, 41, 0],"bool"), list[3,8,41,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 41, 0],"bool"), list[3,8,41,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 41, 169].  Tensor sizes: [3, 1, 41, 0]
2025-03-05 15:23:00.214367 test begin: paddle.broadcast_to(Tensor([3, 1, 41, 0],"bool"), list[3,8,41,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 41, 0],"bool"), list[3,8,41,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 41, 21].  Tensor sizes: [3, 1, 41, 0]
2025-03-05 15:23:00.214920 test begin: paddle.broadcast_to(Tensor([3, 1, 41, 0],"bool"), list[3,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 41, 0],"bool"), list[3,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 41, 41].  Tensor sizes: [3, 1, 41, 0]
2025-03-05 15:23:00.215452 test begin: paddle.broadcast_to(Tensor([3, 1, 42, 0],"bool"), list[3,8,42,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 42, 0],"bool"), list[3,8,42,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 42, 105].  Tensor sizes: [3, 1, 42, 0]
2025-03-05 15:23:00.216000 test begin: paddle.broadcast_to(Tensor([3, 1, 42, 0],"bool"), list[3,8,42,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 42, 0],"bool"), list[3,8,42,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 42, 169].  Tensor sizes: [3, 1, 42, 0]
2025-03-05 15:23:00.216519 test begin: paddle.broadcast_to(Tensor([3, 1, 42, 0],"bool"), list[3,8,42,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 42, 0],"bool"), list[3,8,42,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 42, 21].  Tensor sizes: [3, 1, 42, 0]
2025-03-05 15:23:00.217039 test begin: paddle.broadcast_to(Tensor([3, 1, 42, 0],"bool"), list[3,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 42, 0],"bool"), list[3,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 42, 42].  Tensor sizes: [3, 1, 42, 0]
2025-03-05 15:23:00.217549 test begin: paddle.broadcast_to(Tensor([3, 1, 43, 0],"bool"), list[3,8,43,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 43, 0],"bool"), list[3,8,43,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 43, 105].  Tensor sizes: [3, 1, 43, 0]
2025-03-05 15:23:00.218075 test begin: paddle.broadcast_to(Tensor([3, 1, 43, 0],"bool"), list[3,8,43,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 43, 0],"bool"), list[3,8,43,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 43, 169].  Tensor sizes: [3, 1, 43, 0]
2025-03-05 15:23:00.218616 test begin: paddle.broadcast_to(Tensor([3, 1, 43, 0],"bool"), list[3,8,43,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 43, 0],"bool"), list[3,8,43,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 43, 21].  Tensor sizes: [3, 1, 43, 0]
2025-03-05 15:23:00.219142 test begin: paddle.broadcast_to(Tensor([3, 1, 43, 0],"bool"), list[3,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 43, 0],"bool"), list[3,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 43, 43].  Tensor sizes: [3, 1, 43, 0]
2025-03-05 15:23:00.219670 test begin: paddle.broadcast_to(Tensor([3, 1, 44, 0],"bool"), list[3,8,44,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 44, 0],"bool"), list[3,8,44,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 44, 105].  Tensor sizes: [3, 1, 44, 0]
2025-03-05 15:23:00.220185 test begin: paddle.broadcast_to(Tensor([3, 1, 44, 0],"bool"), list[3,8,44,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 44, 0],"bool"), list[3,8,44,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 44, 169].  Tensor sizes: [3, 1, 44, 0]
2025-03-05 15:23:00.220704 test begin: paddle.broadcast_to(Tensor([3, 1, 44, 0],"bool"), list[3,8,44,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 44, 0],"bool"), list[3,8,44,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 44, 21].  Tensor sizes: [3, 1, 44, 0]
2025-03-05 15:23:00.221214 test begin: paddle.broadcast_to(Tensor([3, 1, 44, 0],"bool"), list[3,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 44, 0],"bool"), list[3,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 44, 44].  Tensor sizes: [3, 1, 44, 0]
2025-03-05 15:23:00.221738 test begin: paddle.broadcast_to(Tensor([3, 1, 45, 0],"bool"), list[3,8,45,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 45, 0],"bool"), list[3,8,45,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 45, 105].  Tensor sizes: [3, 1, 45, 0]
2025-03-05 15:23:00.222247 test begin: paddle.broadcast_to(Tensor([3, 1, 45, 0],"bool"), list[3,8,45,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 45, 0],"bool"), list[3,8,45,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 45, 169].  Tensor sizes: [3, 1, 45, 0]
2025-03-05 15:23:00.222771 test begin: paddle.broadcast_to(Tensor([3, 1, 45, 0],"bool"), list[3,8,45,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 45, 0],"bool"), list[3,8,45,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 45, 21].  Tensor sizes: [3, 1, 45, 0]
2025-03-05 15:23:00.223283 test begin: paddle.broadcast_to(Tensor([3, 1, 45, 0],"bool"), list[3,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 45, 0],"bool"), list[3,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 45, 45].  Tensor sizes: [3, 1, 45, 0]
2025-03-05 15:23:00.223799 test begin: paddle.broadcast_to(Tensor([3, 1, 46, 0],"bool"), list[3,8,46,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 46, 0],"bool"), list[3,8,46,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 46, 105].  Tensor sizes: [3, 1, 46, 0]
2025-03-05 15:23:00.224369 test begin: paddle.broadcast_to(Tensor([3, 1, 46, 0],"bool"), list[3,8,46,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 46, 0],"bool"), list[3,8,46,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 46, 169].  Tensor sizes: [3, 1, 46, 0]
2025-03-05 15:23:00.224909 test begin: paddle.broadcast_to(Tensor([3, 1, 46, 0],"bool"), list[3,8,46,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 46, 0],"bool"), list[3,8,46,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 46, 21].  Tensor sizes: [3, 1, 46, 0]
2025-03-05 15:23:00.225423 test begin: paddle.broadcast_to(Tensor([3, 1, 46, 0],"bool"), list[3,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 46, 0],"bool"), list[3,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 46, 46].  Tensor sizes: [3, 1, 46, 0]
2025-03-05 15:23:00.225949 test begin: paddle.broadcast_to(Tensor([3, 1, 47, 0],"bool"), list[3,8,47,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 47, 0],"bool"), list[3,8,47,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 47, 105].  Tensor sizes: [3, 1, 47, 0]
2025-03-05 15:23:00.226513 test begin: paddle.broadcast_to(Tensor([3, 1, 47, 0],"bool"), list[3,8,47,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 47, 0],"bool"), list[3,8,47,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 47, 169].  Tensor sizes: [3, 1, 47, 0]
2025-03-05 15:23:00.227621 test begin: paddle.broadcast_to(Tensor([3, 1, 47, 0],"bool"), list[3,8,47,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 47, 0],"bool"), list[3,8,47,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 47, 21].  Tensor sizes: [3, 1, 47, 0]
2025-03-05 15:23:00.228395 test begin: paddle.broadcast_to(Tensor([3, 1, 47, 0],"bool"), list[3,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 47, 0],"bool"), list[3,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 47, 47].  Tensor sizes: [3, 1, 47, 0]
2025-03-05 15:23:00.228976 test begin: paddle.broadcast_to(Tensor([3, 1, 48, 0],"bool"), list[3,8,48,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 48, 0],"bool"), list[3,8,48,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 48, 105].  Tensor sizes: [3, 1, 48, 0]
2025-03-05 15:23:00.229573 test begin: paddle.broadcast_to(Tensor([3, 1, 48, 0],"bool"), list[3,8,48,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 48, 0],"bool"), list[3,8,48,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 48, 169].  Tensor sizes: [3, 1, 48, 0]
2025-03-05 15:23:00.230201 test begin: paddle.broadcast_to(Tensor([3, 1, 48, 0],"bool"), list[3,8,48,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 48, 0],"bool"), list[3,8,48,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 48, 21].  Tensor sizes: [3, 1, 48, 0]
2025-03-05 15:23:00.230764 test begin: paddle.broadcast_to(Tensor([3, 1, 48, 0],"bool"), list[3,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 48, 0],"bool"), list[3,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 48, 48].  Tensor sizes: [3, 1, 48, 0]
2025-03-05 15:23:00.231313 test begin: paddle.broadcast_to(Tensor([3, 1, 49, 0],"bool"), list[3,8,49,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 49, 0],"bool"), list[3,8,49,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 49, 105].  Tensor sizes: [3, 1, 49, 0]
2025-03-05 15:23:00.231892 test begin: paddle.broadcast_to(Tensor([3, 1, 49, 0],"bool"), list[3,8,49,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 49, 0],"bool"), list[3,8,49,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 49, 169].  Tensor sizes: [3, 1, 49, 0]
2025-03-05 15:23:00.232459 test begin: paddle.broadcast_to(Tensor([3, 1, 49, 0],"bool"), list[3,8,49,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 49, 0],"bool"), list[3,8,49,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 49, 21].  Tensor sizes: [3, 1, 49, 0]
2025-03-05 15:23:00.233014 test begin: paddle.broadcast_to(Tensor([3, 1, 49, 0],"bool"), list[3,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 49, 0],"bool"), list[3,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 49, 49].  Tensor sizes: [3, 1, 49, 0]
2025-03-05 15:23:00.233541 test begin: paddle.broadcast_to(Tensor([3, 1, 5, 0],"bool"), list[3,8,5,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 5, 0],"bool"), list[3,8,5,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 5, 105].  Tensor sizes: [3, 1, 5, 0]
2025-03-05 15:23:00.234105 test begin: paddle.broadcast_to(Tensor([3, 1, 5, 0],"bool"), list[3,8,5,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 5, 0],"bool"), list[3,8,5,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 5, 169].  Tensor sizes: [3, 1, 5, 0]
2025-03-05 15:23:00.234657 test begin: paddle.broadcast_to(Tensor([3, 1, 5, 0],"bool"), list[3,8,5,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 5, 0],"bool"), list[3,8,5,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 5, 21].  Tensor sizes: [3, 1, 5, 0]
2025-03-05 15:23:00.235194 test begin: paddle.broadcast_to(Tensor([3, 1, 5, 0],"bool"), list[3,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 5, 0],"bool"), list[3,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 5, 5].  Tensor sizes: [3, 1, 5, 0]
2025-03-05 15:23:00.235739 test begin: paddle.broadcast_to(Tensor([3, 1, 5, 0],"bool"), list[3,8,5,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 5, 0],"bool"), list[3,8,5,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 5, 9].  Tensor sizes: [3, 1, 5, 0]
2025-03-05 15:23:00.236253 test begin: paddle.broadcast_to(Tensor([3, 1, 50, 0],"bool"), list[3,8,50,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 50, 0],"bool"), list[3,8,50,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 50, 105].  Tensor sizes: [3, 1, 50, 0]
2025-03-05 15:23:00.236828 test begin: paddle.broadcast_to(Tensor([3, 1, 50, 0],"bool"), list[3,8,50,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 50, 0],"bool"), list[3,8,50,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 50, 169].  Tensor sizes: [3, 1, 50, 0]
2025-03-05 15:23:00.237354 test begin: paddle.broadcast_to(Tensor([3, 1, 50, 0],"bool"), list[3,8,50,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 50, 0],"bool"), list[3,8,50,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 50, 21].  Tensor sizes: [3, 1, 50, 0]
2025-03-05 15:23:00.237891 test begin: paddle.broadcast_to(Tensor([3, 1, 50, 0],"bool"), list[3,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 50, 0],"bool"), list[3,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 50, 50].  Tensor sizes: [3, 1, 50, 0]
2025-03-05 15:23:00.238417 test begin: paddle.broadcast_to(Tensor([3, 1, 51, 0],"bool"), list[3,8,51,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 51, 0],"bool"), list[3,8,51,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 51, 105].  Tensor sizes: [3, 1, 51, 0]
2025-03-05 15:23:00.238943 test begin: paddle.broadcast_to(Tensor([3, 1, 51, 0],"bool"), list[3,8,51,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 51, 0],"bool"), list[3,8,51,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 51, 169].  Tensor sizes: [3, 1, 51, 0]
2025-03-05 15:23:00.239460 test begin: paddle.broadcast_to(Tensor([3, 1, 51, 0],"bool"), list[3,8,51,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 51, 0],"bool"), list[3,8,51,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 51, 21].  Tensor sizes: [3, 1, 51, 0]
2025-03-05 15:23:00.239991 test begin: paddle.broadcast_to(Tensor([3, 1, 51, 0],"bool"), list[3,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 51, 0],"bool"), list[3,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 51, 51].  Tensor sizes: [3, 1, 51, 0]
2025-03-05 15:23:00.240506 test begin: paddle.broadcast_to(Tensor([3, 1, 52, 0],"bool"), list[3,8,52,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 52, 0],"bool"), list[3,8,52,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 52, 105].  Tensor sizes: [3, 1, 52, 0]
2025-03-05 15:23:00.241046 test begin: paddle.broadcast_to(Tensor([3, 1, 52, 0],"bool"), list[3,8,52,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 52, 0],"bool"), list[3,8,52,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 52, 169].  Tensor sizes: [3, 1, 52, 0]
2025-03-05 15:23:00.241569 test begin: paddle.broadcast_to(Tensor([3, 1, 52, 0],"bool"), list[3,8,52,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 52, 0],"bool"), list[3,8,52,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 52, 21].  Tensor sizes: [3, 1, 52, 0]
2025-03-05 15:23:00.242148 test begin: paddle.broadcast_to(Tensor([3, 1, 52, 0],"bool"), list[3,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 52, 0],"bool"), list[3,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 52, 52].  Tensor sizes: [3, 1, 52, 0]
2025-03-05 15:23:00.242672 test begin: paddle.broadcast_to(Tensor([3, 1, 53, 0],"bool"), list[3,8,53,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 53, 0],"bool"), list[3,8,53,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 53, 105].  Tensor sizes: [3, 1, 53, 0]
2025-03-05 15:23:00.243208 test begin: paddle.broadcast_to(Tensor([3, 1, 53, 0],"bool"), list[3,8,53,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 53, 0],"bool"), list[3,8,53,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 53, 169].  Tensor sizes: [3, 1, 53, 0]
2025-03-05 15:23:00.243727 test begin: paddle.broadcast_to(Tensor([3, 1, 53, 0],"bool"), list[3,8,53,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 53, 0],"bool"), list[3,8,53,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 53, 21].  Tensor sizes: [3, 1, 53, 0]
2025-03-05 15:23:00.244322 test begin: paddle.broadcast_to(Tensor([3, 1, 53, 0],"bool"), list[3,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 53, 0],"bool"), list[3,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 53, 53].  Tensor sizes: [3, 1, 53, 0]
2025-03-05 15:23:00.245646 test begin: paddle.broadcast_to(Tensor([3, 1, 54, 0],"bool"), list[3,8,54,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 54, 0],"bool"), list[3,8,54,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 54, 105].  Tensor sizes: [3, 1, 54, 0]
2025-03-05 15:23:00.246536 test begin: paddle.broadcast_to(Tensor([3, 1, 54, 0],"bool"), list[3,8,54,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 54, 0],"bool"), list[3,8,54,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 54, 169].  Tensor sizes: [3, 1, 54, 0]
2025-03-05 15:23:00.247222 test begin: paddle.broadcast_to(Tensor([3, 1, 54, 0],"bool"), list[3,8,54,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 54, 0],"bool"), list[3,8,54,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 54, 21].  Tensor sizes: [3, 1, 54, 0]
2025-03-05 15:23:00.247948 test begin: paddle.broadcast_to(Tensor([3, 1, 54, 0],"bool"), list[3,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 54, 0],"bool"), list[3,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 54, 54].  Tensor sizes: [3, 1, 54, 0]
2025-03-05 15:23:00.248667 test begin: paddle.broadcast_to(Tensor([3, 1, 55, 0],"bool"), list[3,8,55,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 55, 0],"bool"), list[3,8,55,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 55, 105].  Tensor sizes: [3, 1, 55, 0]
2025-03-05 15:23:00.250172 test begin: paddle.broadcast_to(Tensor([3, 1, 55, 0],"bool"), list[3,8,55,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 55, 0],"bool"), list[3,8,55,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 55, 169].  Tensor sizes: [3, 1, 55, 0]
2025-03-05 15:23:00.250914 test begin: paddle.broadcast_to(Tensor([3, 1, 55, 0],"bool"), list[3,8,55,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 55, 0],"bool"), list[3,8,55,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 55, 21].  Tensor sizes: [3, 1, 55, 0]
2025-03-05 15:23:00.251623 test begin: paddle.broadcast_to(Tensor([3, 1, 55, 0],"bool"), list[3,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 55, 0],"bool"), list[3,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 55, 55].  Tensor sizes: [3, 1, 55, 0]
2025-03-05 15:23:00.252314 test begin: paddle.broadcast_to(Tensor([3, 1, 56, 0],"bool"), list[3,8,56,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 56, 0],"bool"), list[3,8,56,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 56, 105].  Tensor sizes: [3, 1, 56, 0]
2025-03-05 15:23:00.252997 test begin: paddle.broadcast_to(Tensor([3, 1, 56, 0],"bool"), list[3,8,56,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 56, 0],"bool"), list[3,8,56,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 56, 169].  Tensor sizes: [3, 1, 56, 0]
2025-03-05 15:23:00.253746 test begin: paddle.broadcast_to(Tensor([3, 1, 56, 0],"bool"), list[3,8,56,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 56, 0],"bool"), list[3,8,56,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 56, 21].  Tensor sizes: [3, 1, 56, 0]
2025-03-05 15:23:00.254445 test begin: paddle.broadcast_to(Tensor([3, 1, 56, 0],"bool"), list[3,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 56, 0],"bool"), list[3,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 56, 56].  Tensor sizes: [3, 1, 56, 0]
2025-03-05 15:23:00.255123 test begin: paddle.broadcast_to(Tensor([3, 1, 57, 0],"bool"), list[3,8,57,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 57, 0],"bool"), list[3,8,57,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 57, 105].  Tensor sizes: [3, 1, 57, 0]
2025-03-05 15:23:00.255833 test begin: paddle.broadcast_to(Tensor([3, 1, 57, 0],"bool"), list[3,8,57,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 57, 0],"bool"), list[3,8,57,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 57, 169].  Tensor sizes: [3, 1, 57, 0]
2025-03-05 15:23:00.256578 test begin: paddle.broadcast_to(Tensor([3, 1, 57, 0],"bool"), list[3,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 57, 0],"bool"), list[3,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 57, 57].  Tensor sizes: [3, 1, 57, 0]
2025-03-05 15:23:00.257151 test begin: paddle.broadcast_to(Tensor([3, 1, 58, 0],"bool"), list[3,8,58,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 58, 0],"bool"), list[3,8,58,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 58, 105].  Tensor sizes: [3, 1, 58, 0]
2025-03-05 15:23:00.257691 test begin: paddle.broadcast_to(Tensor([3, 1, 58, 0],"bool"), list[3,8,58,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 58, 0],"bool"), list[3,8,58,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 58, 169].  Tensor sizes: [3, 1, 58, 0]
2025-03-05 15:23:00.258258 test begin: paddle.broadcast_to(Tensor([3, 1, 58, 0],"bool"), list[3,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 58, 0],"bool"), list[3,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 58, 58].  Tensor sizes: [3, 1, 58, 0]
2025-03-05 15:23:00.258825 test begin: paddle.broadcast_to(Tensor([3, 1, 59, 0],"bool"), list[3,8,59,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 59, 0],"bool"), list[3,8,59,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 59, 105].  Tensor sizes: [3, 1, 59, 0]
2025-03-05 15:23:00.259367 test begin: paddle.broadcast_to(Tensor([3, 1, 59, 0],"bool"), list[3,8,59,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 59, 0],"bool"), list[3,8,59,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 59, 169].  Tensor sizes: [3, 1, 59, 0]
2025-03-05 15:23:00.259915 test begin: paddle.broadcast_to(Tensor([3, 1, 59, 0],"bool"), list[3,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 59, 0],"bool"), list[3,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 59, 59].  Tensor sizes: [3, 1, 59, 0]
2025-03-05 15:23:00.260451 test begin: paddle.broadcast_to(Tensor([3, 1, 6, 0],"bool"), list[3,8,6,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 6, 0],"bool"), list[3,8,6,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 6, 105].  Tensor sizes: [3, 1, 6, 0]
2025-03-05 15:23:00.261031 test begin: paddle.broadcast_to(Tensor([3, 1, 6, 0],"bool"), list[3,8,6,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 6, 0],"bool"), list[3,8,6,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 6, 169].  Tensor sizes: [3, 1, 6, 0]
2025-03-05 15:23:00.261562 test begin: paddle.broadcast_to(Tensor([3, 1, 6, 0],"bool"), list[3,8,6,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 6, 0],"bool"), list[3,8,6,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 6, 21].  Tensor sizes: [3, 1, 6, 0]
2025-03-05 15:23:00.262106 test begin: paddle.broadcast_to(Tensor([3, 1, 6, 0],"bool"), list[3,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 6, 0],"bool"), list[3,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 6, 6].  Tensor sizes: [3, 1, 6, 0]
2025-03-05 15:23:00.262658 test begin: paddle.broadcast_to(Tensor([3, 1, 6, 0],"bool"), list[3,8,6,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 6, 0],"bool"), list[3,8,6,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 6, 9].  Tensor sizes: [3, 1, 6, 0]
2025-03-05 15:23:00.263201 test begin: paddle.broadcast_to(Tensor([3, 1, 60, 0],"bool"), list[3,8,60,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 60, 0],"bool"), list[3,8,60,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 60, 105].  Tensor sizes: [3, 1, 60, 0]
2025-03-05 15:23:00.263761 test begin: paddle.broadcast_to(Tensor([3, 1, 60, 0],"bool"), list[3,8,60,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 60, 0],"bool"), list[3,8,60,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 60, 169].  Tensor sizes: [3, 1, 60, 0]
2025-03-05 15:23:00.264305 test begin: paddle.broadcast_to(Tensor([3, 1, 60, 0],"bool"), list[3,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 60, 0],"bool"), list[3,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 60, 60].  Tensor sizes: [3, 1, 60, 0]
2025-03-05 15:23:00.264852 test begin: paddle.broadcast_to(Tensor([3, 1, 61, 0],"bool"), list[3,8,61,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 61, 0],"bool"), list[3,8,61,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 61, 105].  Tensor sizes: [3, 1, 61, 0]
2025-03-05 15:23:00.265398 test begin: paddle.broadcast_to(Tensor([3, 1, 61, 0],"bool"), list[3,8,61,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 61, 0],"bool"), list[3,8,61,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 61, 169].  Tensor sizes: [3, 1, 61, 0]
2025-03-05 15:23:00.265956 test begin: paddle.broadcast_to(Tensor([3, 1, 61, 0],"bool"), list[3,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 61, 0],"bool"), list[3,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 61, 61].  Tensor sizes: [3, 1, 61, 0]
2025-03-05 15:23:00.266673 test begin: paddle.broadcast_to(Tensor([3, 1, 62, 0],"bool"), list[3,8,62,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 62, 0],"bool"), list[3,8,62,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 62, 105].  Tensor sizes: [3, 1, 62, 0]
2025-03-05 15:23:00.267227 test begin: paddle.broadcast_to(Tensor([3, 1, 62, 0],"bool"), list[3,8,62,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 62, 0],"bool"), list[3,8,62,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 62, 169].  Tensor sizes: [3, 1, 62, 0]
2025-03-05 15:23:00.267782 test begin: paddle.broadcast_to(Tensor([3, 1, 62, 0],"bool"), list[3,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 62, 0],"bool"), list[3,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 62, 62].  Tensor sizes: [3, 1, 62, 0]
2025-03-05 15:23:00.268311 test begin: paddle.broadcast_to(Tensor([3, 1, 63, 0],"bool"), list[3,8,63,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 63, 0],"bool"), list[3,8,63,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 63, 105].  Tensor sizes: [3, 1, 63, 0]
2025-03-05 15:23:00.268845 test begin: paddle.broadcast_to(Tensor([3, 1, 63, 0],"bool"), list[3,8,63,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 63, 0],"bool"), list[3,8,63,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 63, 169].  Tensor sizes: [3, 1, 63, 0]
2025-03-05 15:23:00.269385 test begin: paddle.broadcast_to(Tensor([3, 1, 63, 0],"bool"), list[3,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 63, 0],"bool"), list[3,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 63, 63].  Tensor sizes: [3, 1, 63, 0]
2025-03-05 15:23:00.269915 test begin: paddle.broadcast_to(Tensor([3, 1, 64, 0],"bool"), list[3,8,64,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 64, 0],"bool"), list[3,8,64,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 64, 105].  Tensor sizes: [3, 1, 64, 0]
2025-03-05 15:23:00.270445 test begin: paddle.broadcast_to(Tensor([3, 1, 64, 0],"bool"), list[3,8,64,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 64, 0],"bool"), list[3,8,64,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 64, 169].  Tensor sizes: [3, 1, 64, 0]
2025-03-05 15:23:00.271748 test begin: paddle.broadcast_to(Tensor([3, 1, 64, 0],"bool"), list[3,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 64, 0],"bool"), list[3,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 64, 64].  Tensor sizes: [3, 1, 64, 0]
2025-03-05 15:23:00.272315 test begin: paddle.broadcast_to(Tensor([3, 1, 65, 0],"bool"), list[3,8,65,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 65, 0],"bool"), list[3,8,65,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 65, 105].  Tensor sizes: [3, 1, 65, 0]
2025-03-05 15:23:00.272870 test begin: paddle.broadcast_to(Tensor([3, 1, 65, 0],"bool"), list[3,8,65,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 65, 0],"bool"), list[3,8,65,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 65, 169].  Tensor sizes: [3, 1, 65, 0]
2025-03-05 15:23:00.273401 test begin: paddle.broadcast_to(Tensor([3, 1, 65, 0],"bool"), list[3,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 65, 0],"bool"), list[3,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 65, 65].  Tensor sizes: [3, 1, 65, 0]
2025-03-05 15:23:00.273997 test begin: paddle.broadcast_to(Tensor([3, 1, 66, 0],"bool"), list[3,8,66,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 66, 0],"bool"), list[3,8,66,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 66, 105].  Tensor sizes: [3, 1, 66, 0]
2025-03-05 15:23:00.274535 test begin: paddle.broadcast_to(Tensor([3, 1, 66, 0],"bool"), list[3,8,66,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 66, 0],"bool"), list[3,8,66,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 66, 169].  Tensor sizes: [3, 1, 66, 0]
2025-03-05 15:23:00.275085 test begin: paddle.broadcast_to(Tensor([3, 1, 66, 0],"bool"), list[3,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 66, 0],"bool"), list[3,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 66, 66].  Tensor sizes: [3, 1, 66, 0]
2025-03-05 15:23:00.275635 test begin: paddle.broadcast_to(Tensor([3, 1, 67, 0],"bool"), list[3,8,67,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 67, 0],"bool"), list[3,8,67,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 67, 105].  Tensor sizes: [3, 1, 67, 0]
2025-03-05 15:23:00.276188 test begin: paddle.broadcast_to(Tensor([3, 1, 67, 0],"bool"), list[3,8,67,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 67, 0],"bool"), list[3,8,67,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 67, 169].  Tensor sizes: [3, 1, 67, 0]
2025-03-05 15:23:00.276756 test begin: paddle.broadcast_to(Tensor([3, 1, 67, 0],"bool"), list[3,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 67, 0],"bool"), list[3,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 67, 67].  Tensor sizes: [3, 1, 67, 0]
2025-03-05 15:23:00.277290 test begin: paddle.broadcast_to(Tensor([3, 1, 68, 0],"bool"), list[3,8,68,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 68, 0],"bool"), list[3,8,68,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 68, 105].  Tensor sizes: [3, 1, 68, 0]
2025-03-05 15:23:00.277829 test begin: paddle.broadcast_to(Tensor([3, 1, 68, 0],"bool"), list[3,8,68,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 68, 0],"bool"), list[3,8,68,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 68, 169].  Tensor sizes: [3, 1, 68, 0]
2025-03-05 15:23:00.278358 test begin: paddle.broadcast_to(Tensor([3, 1, 68, 0],"bool"), list[3,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 68, 0],"bool"), list[3,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 68, 68].  Tensor sizes: [3, 1, 68, 0]
2025-03-05 15:23:00.278906 test begin: paddle.broadcast_to(Tensor([3, 1, 69, 0],"bool"), list[3,8,69,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 69, 0],"bool"), list[3,8,69,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 69, 105].  Tensor sizes: [3, 1, 69, 0]
2025-03-05 15:23:00.279450 test begin: paddle.broadcast_to(Tensor([3, 1, 69, 0],"bool"), list[3,8,69,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 69, 0],"bool"), list[3,8,69,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 69, 169].  Tensor sizes: [3, 1, 69, 0]
2025-03-05 15:23:00.279991 test begin: paddle.broadcast_to(Tensor([3, 1, 69, 0],"bool"), list[3,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 69, 0],"bool"), list[3,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 69, 69].  Tensor sizes: [3, 1, 69, 0]
2025-03-05 15:23:00.280564 test begin: paddle.broadcast_to(Tensor([3, 1, 7, 0],"bool"), list[3,8,7,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 7, 0],"bool"), list[3,8,7,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 7, 105].  Tensor sizes: [3, 1, 7, 0]
2025-03-05 15:23:00.281120 test begin: paddle.broadcast_to(Tensor([3, 1, 7, 0],"bool"), list[3,8,7,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 7, 0],"bool"), list[3,8,7,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 7, 169].  Tensor sizes: [3, 1, 7, 0]
2025-03-05 15:23:00.281697 test begin: paddle.broadcast_to(Tensor([3, 1, 7, 0],"bool"), list[3,8,7,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 7, 0],"bool"), list[3,8,7,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 7, 21].  Tensor sizes: [3, 1, 7, 0]
2025-03-05 15:23:00.282256 test begin: paddle.broadcast_to(Tensor([3, 1, 7, 0],"bool"), list[3,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 7, 0],"bool"), list[3,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 7, 7].  Tensor sizes: [3, 1, 7, 0]
2025-03-05 15:23:00.282814 test begin: paddle.broadcast_to(Tensor([3, 1, 7, 0],"bool"), list[3,8,7,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 7, 0],"bool"), list[3,8,7,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 7, 9].  Tensor sizes: [3, 1, 7, 0]
2025-03-05 15:23:00.283363 test begin: paddle.broadcast_to(Tensor([3, 1, 70, 0],"bool"), list[3,8,70,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 70, 0],"bool"), list[3,8,70,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 70, 105].  Tensor sizes: [3, 1, 70, 0]
2025-03-05 15:23:00.283932 test begin: paddle.broadcast_to(Tensor([3, 1, 70, 0],"bool"), list[3,8,70,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 70, 0],"bool"), list[3,8,70,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 70, 169].  Tensor sizes: [3, 1, 70, 0]
2025-03-05 15:23:00.284768 test begin: paddle.broadcast_to(Tensor([3, 1, 70, 0],"bool"), list[3,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 70, 0],"bool"), list[3,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 70, 70].  Tensor sizes: [3, 1, 70, 0]
2025-03-05 15:23:00.285464 test begin: paddle.broadcast_to(Tensor([3, 1, 71, 0],"bool"), list[3,8,71,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 71, 0],"bool"), list[3,8,71,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 71, 105].  Tensor sizes: [3, 1, 71, 0]
2025-03-05 15:23:00.286178 test begin: paddle.broadcast_to(Tensor([3, 1, 71, 0],"bool"), list[3,8,71,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 71, 0],"bool"), list[3,8,71,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 71, 169].  Tensor sizes: [3, 1, 71, 0]
2025-03-05 15:23:00.286902 test begin: paddle.broadcast_to(Tensor([3, 1, 71, 0],"bool"), list[3,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 71, 0],"bool"), list[3,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 71, 71].  Tensor sizes: [3, 1, 71, 0]
2025-03-05 15:23:00.287562 test begin: paddle.broadcast_to(Tensor([3, 1, 72, 0],"bool"), list[3,8,72,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 72, 0],"bool"), list[3,8,72,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 72, 105].  Tensor sizes: [3, 1, 72, 0]
2025-03-05 15:23:00.288182 test begin: paddle.broadcast_to(Tensor([3, 1, 72, 0],"bool"), list[3,8,72,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 72, 0],"bool"), list[3,8,72,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 72, 169].  Tensor sizes: [3, 1, 72, 0]
2025-03-05 15:23:00.288721 test begin: paddle.broadcast_to(Tensor([3, 1, 72, 0],"bool"), list[3,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 72, 0],"bool"), list[3,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 72, 72].  Tensor sizes: [3, 1, 72, 0]
2025-03-05 15:23:00.289248 test begin: paddle.broadcast_to(Tensor([3, 1, 73, 0],"bool"), list[3,8,73,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 73, 0],"bool"), list[3,8,73,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 73, 105].  Tensor sizes: [3, 1, 73, 0]
2025-03-05 15:23:00.289776 test begin: paddle.broadcast_to(Tensor([3, 1, 73, 0],"bool"), list[3,8,73,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 73, 0],"bool"), list[3,8,73,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 73, 169].  Tensor sizes: [3, 1, 73, 0]
2025-03-05 15:23:00.290290 test begin: paddle.broadcast_to(Tensor([3, 1, 73, 0],"bool"), list[3,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 73, 0],"bool"), list[3,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 73, 73].  Tensor sizes: [3, 1, 73, 0]
2025-03-05 15:23:00.291412 test begin: paddle.broadcast_to(Tensor([3, 1, 74, 0],"bool"), list[3,8,74,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 74, 0],"bool"), list[3,8,74,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 74, 105].  Tensor sizes: [3, 1, 74, 0]
2025-03-05 15:23:00.292249 test begin: paddle.broadcast_to(Tensor([3, 1, 74, 0],"bool"), list[3,8,74,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 74, 0],"bool"), list[3,8,74,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 74, 169].  Tensor sizes: [3, 1, 74, 0]
2025-03-05 15:23:00.292868 test begin: paddle.broadcast_to(Tensor([3, 1, 74, 0],"bool"), list[3,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 74, 0],"bool"), list[3,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 74, 74].  Tensor sizes: [3, 1, 74, 0]
2025-03-05 15:23:00.293419 test begin: paddle.broadcast_to(Tensor([3, 1, 75, 0],"bool"), list[3,8,75,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 75, 0],"bool"), list[3,8,75,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 75, 105].  Tensor sizes: [3, 1, 75, 0]
2025-03-05 15:23:00.293986 test begin: paddle.broadcast_to(Tensor([3, 1, 75, 0],"bool"), list[3,8,75,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 75, 0],"bool"), list[3,8,75,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 75, 169].  Tensor sizes: [3, 1, 75, 0]
2025-03-05 15:23:00.294534 test begin: paddle.broadcast_to(Tensor([3, 1, 75, 0],"bool"), list[3,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 75, 0],"bool"), list[3,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 75, 75].  Tensor sizes: [3, 1, 75, 0]
2025-03-05 15:23:00.295097 test begin: paddle.broadcast_to(Tensor([3, 1, 76, 0],"bool"), list[3,8,76,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 76, 0],"bool"), list[3,8,76,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 76, 105].  Tensor sizes: [3, 1, 76, 0]
2025-03-05 15:23:00.295635 test begin: paddle.broadcast_to(Tensor([3, 1, 76, 0],"bool"), list[3,8,76,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 76, 0],"bool"), list[3,8,76,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 76, 169].  Tensor sizes: [3, 1, 76, 0]
2025-03-05 15:23:00.296160 test begin: paddle.broadcast_to(Tensor([3, 1, 76, 0],"bool"), list[3,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 76, 0],"bool"), list[3,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 76, 76].  Tensor sizes: [3, 1, 76, 0]
2025-03-05 15:23:00.296681 test begin: paddle.broadcast_to(Tensor([3, 1, 77, 0],"bool"), list[3,8,77,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 77, 0],"bool"), list[3,8,77,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 77, 105].  Tensor sizes: [3, 1, 77, 0]
2025-03-05 15:23:00.297206 test begin: paddle.broadcast_to(Tensor([3, 1, 77, 0],"bool"), list[3,8,77,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 77, 0],"bool"), list[3,8,77,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 77, 169].  Tensor sizes: [3, 1, 77, 0]
2025-03-05 15:23:00.297727 test begin: paddle.broadcast_to(Tensor([3, 1, 77, 0],"bool"), list[3,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 77, 0],"bool"), list[3,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 77, 77].  Tensor sizes: [3, 1, 77, 0]
2025-03-05 15:23:00.298243 test begin: paddle.broadcast_to(Tensor([3, 1, 78, 0],"bool"), list[3,8,78,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 78, 0],"bool"), list[3,8,78,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 78, 105].  Tensor sizes: [3, 1, 78, 0]
2025-03-05 15:23:00.298777 test begin: paddle.broadcast_to(Tensor([3, 1, 78, 0],"bool"), list[3,8,78,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 78, 0],"bool"), list[3,8,78,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 78, 169].  Tensor sizes: [3, 1, 78, 0]
2025-03-05 15:23:00.299292 test begin: paddle.broadcast_to(Tensor([3, 1, 78, 0],"bool"), list[3,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 78, 0],"bool"), list[3,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 78, 78].  Tensor sizes: [3, 1, 78, 0]
2025-03-05 15:23:00.299812 test begin: paddle.broadcast_to(Tensor([3, 1, 79, 0],"bool"), list[3,8,79,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 79, 0],"bool"), list[3,8,79,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 79, 105].  Tensor sizes: [3, 1, 79, 0]
2025-03-05 15:23:00.300327 test begin: paddle.broadcast_to(Tensor([3, 1, 79, 0],"bool"), list[3,8,79,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 79, 0],"bool"), list[3,8,79,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 79, 169].  Tensor sizes: [3, 1, 79, 0]
2025-03-05 15:23:00.300850 test begin: paddle.broadcast_to(Tensor([3, 1, 79, 0],"bool"), list[3,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 79, 0],"bool"), list[3,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 79, 79].  Tensor sizes: [3, 1, 79, 0]
2025-03-05 15:23:00.301388 test begin: paddle.broadcast_to(Tensor([3, 1, 8, 0],"bool"), list[3,8,8,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 8, 0],"bool"), list[3,8,8,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 8, 105].  Tensor sizes: [3, 1, 8, 0]
2025-03-05 15:23:00.302050 test begin: paddle.broadcast_to(Tensor([3, 1, 8, 0],"bool"), list[3,8,8,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 8, 0],"bool"), list[3,8,8,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 8, 169].  Tensor sizes: [3, 1, 8, 0]
2025-03-05 15:23:00.302918 test begin: paddle.broadcast_to(Tensor([3, 1, 8, 0],"bool"), list[3,8,8,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 8, 0],"bool"), list[3,8,8,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 8, 21].  Tensor sizes: [3, 1, 8, 0]
2025-03-05 15:23:00.303629 test begin: paddle.broadcast_to(Tensor([3, 1, 8, 0],"bool"), list[3,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 8, 0],"bool"), list[3,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 8, 8].  Tensor sizes: [3, 1, 8, 0]
2025-03-05 15:23:00.304294 test begin: paddle.broadcast_to(Tensor([3, 1, 8, 0],"bool"), list[3,8,8,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 8, 0],"bool"), list[3,8,8,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 8, 9].  Tensor sizes: [3, 1, 8, 0]
2025-03-05 15:23:00.304960 test begin: paddle.broadcast_to(Tensor([3, 1, 80, 0],"bool"), list[3,8,80,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 80, 0],"bool"), list[3,8,80,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 80, 105].  Tensor sizes: [3, 1, 80, 0]
2025-03-05 15:23:00.305619 test begin: paddle.broadcast_to(Tensor([3, 1, 80, 0],"bool"), list[3,8,80,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 80, 0],"bool"), list[3,8,80,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 80, 169].  Tensor sizes: [3, 1, 80, 0]
2025-03-05 15:23:00.306309 test begin: paddle.broadcast_to(Tensor([3, 1, 80, 0],"bool"), list[3,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 80, 0],"bool"), list[3,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 80, 80].  Tensor sizes: [3, 1, 80, 0]
2025-03-05 15:23:00.306962 test begin: paddle.broadcast_to(Tensor([3, 1, 81, 0],"bool"), list[3,8,81,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 81, 0],"bool"), list[3,8,81,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 81, 105].  Tensor sizes: [3, 1, 81, 0]
2025-03-05 15:23:00.307613 test begin: paddle.broadcast_to(Tensor([3, 1, 81, 0],"bool"), list[3,8,81,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 81, 0],"bool"), list[3,8,81,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 81, 169].  Tensor sizes: [3, 1, 81, 0]
2025-03-05 15:23:00.308262 test begin: paddle.broadcast_to(Tensor([3, 1, 81, 0],"bool"), list[3,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 81, 0],"bool"), list[3,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 81, 81].  Tensor sizes: [3, 1, 81, 0]
2025-03-05 15:23:00.309159 test begin: paddle.broadcast_to(Tensor([3, 1, 82, 0],"bool"), list[3,8,82,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 82, 0],"bool"), list[3,8,82,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 82, 105].  Tensor sizes: [3, 1, 82, 0]
2025-03-05 15:23:00.309733 test begin: paddle.broadcast_to(Tensor([3, 1, 82, 0],"bool"), list[3,8,82,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 82, 0],"bool"), list[3,8,82,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 82, 169].  Tensor sizes: [3, 1, 82, 0]
2025-03-05 15:23:00.310271 test begin: paddle.broadcast_to(Tensor([3, 1, 82, 0],"bool"), list[3,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 82, 0],"bool"), list[3,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 82, 82].  Tensor sizes: [3, 1, 82, 0]
2025-03-05 15:23:00.310819 test begin: paddle.broadcast_to(Tensor([3, 1, 83, 0],"bool"), list[3,8,83,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 83, 0],"bool"), list[3,8,83,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 83, 105].  Tensor sizes: [3, 1, 83, 0]
2025-03-05 15:23:00.311361 test begin: paddle.broadcast_to(Tensor([3, 1, 83, 0],"bool"), list[3,8,83,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 83, 0],"bool"), list[3,8,83,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 83, 169].  Tensor sizes: [3, 1, 83, 0]
2025-03-05 15:23:00.311929 test begin: paddle.broadcast_to(Tensor([3, 1, 83, 0],"bool"), list[3,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 83, 0],"bool"), list[3,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 83, 83].  Tensor sizes: [3, 1, 83, 0]
2025-03-05 15:23:00.312523 test begin: paddle.broadcast_to(Tensor([3, 1, 84, 0],"bool"), list[3,8,84,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 84, 0],"bool"), list[3,8,84,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 84, 105].  Tensor sizes: [3, 1, 84, 0]
2025-03-05 15:23:00.313087 test begin: paddle.broadcast_to(Tensor([3, 1, 84, 0],"bool"), list[3,8,84,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 84, 0],"bool"), list[3,8,84,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 84, 169].  Tensor sizes: [3, 1, 84, 0]
2025-03-05 15:23:00.313631 test begin: paddle.broadcast_to(Tensor([3, 1, 84, 0],"bool"), list[3,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 84, 0],"bool"), list[3,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 84, 84].  Tensor sizes: [3, 1, 84, 0]
2025-03-05 15:23:00.314175 test begin: paddle.broadcast_to(Tensor([3, 1, 85, 0],"bool"), list[3,8,85,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 85, 0],"bool"), list[3,8,85,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 85, 105].  Tensor sizes: [3, 1, 85, 0]
2025-03-05 15:23:00.314794 test begin: paddle.broadcast_to(Tensor([3, 1, 85, 0],"bool"), list[3,8,85,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 85, 0],"bool"), list[3,8,85,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 85, 169].  Tensor sizes: [3, 1, 85, 0]
2025-03-05 15:23:00.315342 test begin: paddle.broadcast_to(Tensor([3, 1, 85, 0],"bool"), list[3,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 85, 0],"bool"), list[3,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 85, 85].  Tensor sizes: [3, 1, 85, 0]
2025-03-05 15:23:00.315901 test begin: paddle.broadcast_to(Tensor([3, 1, 86, 0],"bool"), list[3,8,86,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 86, 0],"bool"), list[3,8,86,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 86, 105].  Tensor sizes: [3, 1, 86, 0]
2025-03-05 15:23:00.316449 test begin: paddle.broadcast_to(Tensor([3, 1, 86, 0],"bool"), list[3,8,86,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 86, 0],"bool"), list[3,8,86,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 86, 169].  Tensor sizes: [3, 1, 86, 0]
2025-03-05 15:23:00.317011 test begin: paddle.broadcast_to(Tensor([3, 1, 86, 0],"bool"), list[3,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 86, 0],"bool"), list[3,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 86, 86].  Tensor sizes: [3, 1, 86, 0]
2025-03-05 15:23:00.317543 test begin: paddle.broadcast_to(Tensor([3, 1, 87, 0],"bool"), list[3,8,87,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 87, 0],"bool"), list[3,8,87,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 87, 105].  Tensor sizes: [3, 1, 87, 0]
2025-03-05 15:23:00.318085 test begin: paddle.broadcast_to(Tensor([3, 1, 87, 0],"bool"), list[3,8,87,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 87, 0],"bool"), list[3,8,87,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 87, 169].  Tensor sizes: [3, 1, 87, 0]
2025-03-05 15:23:00.318636 test begin: paddle.broadcast_to(Tensor([3, 1, 87, 0],"bool"), list[3,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 87, 0],"bool"), list[3,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 87, 87].  Tensor sizes: [3, 1, 87, 0]
2025-03-05 15:23:00.319170 test begin: paddle.broadcast_to(Tensor([3, 1, 88, 0],"bool"), list[3,8,88,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 88, 0],"bool"), list[3,8,88,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 88, 105].  Tensor sizes: [3, 1, 88, 0]
2025-03-05 15:23:00.319714 test begin: paddle.broadcast_to(Tensor([3, 1, 88, 0],"bool"), list[3,8,88,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 88, 0],"bool"), list[3,8,88,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 88, 169].  Tensor sizes: [3, 1, 88, 0]
2025-03-05 15:23:00.320263 test begin: paddle.broadcast_to(Tensor([3, 1, 88, 0],"bool"), list[3,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 88, 0],"bool"), list[3,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 88, 88].  Tensor sizes: [3, 1, 88, 0]
2025-03-05 15:23:00.320813 test begin: paddle.broadcast_to(Tensor([3, 1, 89, 0],"bool"), list[3,8,89,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 89, 0],"bool"), list[3,8,89,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 89, 105].  Tensor sizes: [3, 1, 89, 0]
2025-03-05 15:23:00.321356 test begin: paddle.broadcast_to(Tensor([3, 1, 89, 0],"bool"), list[3,8,89,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 89, 0],"bool"), list[3,8,89,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 89, 169].  Tensor sizes: [3, 1, 89, 0]
2025-03-05 15:23:00.321917 test begin: paddle.broadcast_to(Tensor([3, 1, 89, 0],"bool"), list[3,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 89, 0],"bool"), list[3,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 89, 89].  Tensor sizes: [3, 1, 89, 0]
2025-03-05 15:23:00.322460 test begin: paddle.broadcast_to(Tensor([3, 1, 9, 0],"bool"), list[3,8,9,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 9, 0],"bool"), list[3,8,9,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 9, 105].  Tensor sizes: [3, 1, 9, 0]
2025-03-05 15:23:00.323019 test begin: paddle.broadcast_to(Tensor([3, 1, 9, 0],"bool"), list[3,8,9,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 9, 0],"bool"), list[3,8,9,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 9, 169].  Tensor sizes: [3, 1, 9, 0]
2025-03-05 15:23:00.323553 test begin: paddle.broadcast_to(Tensor([3, 1, 9, 0],"bool"), list[3,8,9,21,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 9, 0],"bool"), list[3,8,9,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 9, 21].  Tensor sizes: [3, 1, 9, 0]
2025-03-05 15:23:00.324166 test begin: paddle.broadcast_to(Tensor([3, 1, 9, 0],"bool"), list[3,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 9, 0],"bool"), list[3,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 9, 9].  Tensor sizes: [3, 1, 9, 0]
2025-03-05 15:23:00.324716 test begin: paddle.broadcast_to(Tensor([3, 1, 90, 0],"bool"), list[3,8,90,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 90, 0],"bool"), list[3,8,90,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 90, 105].  Tensor sizes: [3, 1, 90, 0]
2025-03-05 15:23:00.325244 test begin: paddle.broadcast_to(Tensor([3, 1, 90, 0],"bool"), list[3,8,90,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 90, 0],"bool"), list[3,8,90,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 90, 169].  Tensor sizes: [3, 1, 90, 0]
2025-03-05 15:23:00.325787 test begin: paddle.broadcast_to(Tensor([3, 1, 90, 0],"bool"), list[3,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 90, 0],"bool"), list[3,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 90, 90].  Tensor sizes: [3, 1, 90, 0]
2025-03-05 15:23:00.326313 test begin: paddle.broadcast_to(Tensor([3, 1, 91, 0],"bool"), list[3,8,91,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 91, 0],"bool"), list[3,8,91,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 91, 105].  Tensor sizes: [3, 1, 91, 0]
2025-03-05 15:23:00.326852 test begin: paddle.broadcast_to(Tensor([3, 1, 91, 0],"bool"), list[3,8,91,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 91, 0],"bool"), list[3,8,91,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 91, 169].  Tensor sizes: [3, 1, 91, 0]
2025-03-05 15:23:00.327392 test begin: paddle.broadcast_to(Tensor([3, 1, 91, 0],"bool"), list[3,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 91, 0],"bool"), list[3,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 91, 91].  Tensor sizes: [3, 1, 91, 0]
2025-03-05 15:23:00.327949 test begin: paddle.broadcast_to(Tensor([3, 1, 92, 0],"bool"), list[3,8,92,105,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 92, 0],"bool"), list[3,8,92,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 92, 105].  Tensor sizes: [3, 1, 92, 0]
2025-03-05 15:23:00.328497 test begin: paddle.broadcast_to(Tensor([3, 1, 92, 0],"bool"), list[3,8,92,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 92, 0],"bool"), list[3,8,92,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 92, 169].  Tensor sizes: [3, 1, 92, 0]
2025-03-05 15:23:00.329056 test begin: paddle.broadcast_to(Tensor([3, 1, 92, 0],"bool"), list[3,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 92, 0],"bool"), list[3,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 92, 92].  Tensor sizes: [3, 1, 92, 0]
2025-03-05 15:23:00.329614 test begin: paddle.broadcast_to(Tensor([3, 1, 93, 0],"bool"), list[3,8,93,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 93, 0],"bool"), list[3,8,93,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 93, 169].  Tensor sizes: [3, 1, 93, 0]
2025-03-05 15:23:00.330143 test begin: paddle.broadcast_to(Tensor([3, 1, 93, 0],"bool"), list[3,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 93, 0],"bool"), list[3,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 93, 93].  Tensor sizes: [3, 1, 93, 0]
2025-03-05 15:23:00.330720 test begin: paddle.broadcast_to(Tensor([3, 1, 94, 0],"bool"), list[3,8,94,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 94, 0],"bool"), list[3,8,94,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 94, 169].  Tensor sizes: [3, 1, 94, 0]
2025-03-05 15:23:00.331244 test begin: paddle.broadcast_to(Tensor([3, 1, 94, 0],"bool"), list[3,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 94, 0],"bool"), list[3,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 94, 94].  Tensor sizes: [3, 1, 94, 0]
2025-03-05 15:23:00.331783 test begin: paddle.broadcast_to(Tensor([3, 1, 95, 0],"bool"), list[3,8,95,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 95, 0],"bool"), list[3,8,95,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 95, 169].  Tensor sizes: [3, 1, 95, 0]
2025-03-05 15:23:00.332352 test begin: paddle.broadcast_to(Tensor([3, 1, 95, 0],"bool"), list[3,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 95, 0],"bool"), list[3,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 95, 95].  Tensor sizes: [3, 1, 95, 0]
2025-03-05 15:23:00.332897 test begin: paddle.broadcast_to(Tensor([3, 1, 96, 0],"bool"), list[3,8,96,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 96, 0],"bool"), list[3,8,96,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 96, 169].  Tensor sizes: [3, 1, 96, 0]
2025-03-05 15:23:00.333432 test begin: paddle.broadcast_to(Tensor([3, 1, 96, 0],"bool"), list[3,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 96, 0],"bool"), list[3,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 96, 96].  Tensor sizes: [3, 1, 96, 0]
2025-03-05 15:23:00.333972 test begin: paddle.broadcast_to(Tensor([3, 1, 97, 0],"bool"), list[3,8,97,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 97, 0],"bool"), list[3,8,97,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 97, 169].  Tensor sizes: [3, 1, 97, 0]
2025-03-05 15:23:00.334923 test begin: paddle.broadcast_to(Tensor([3, 1, 97, 0],"bool"), list[3,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 97, 0],"bool"), list[3,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 97, 97].  Tensor sizes: [3, 1, 97, 0]
2025-03-05 15:23:00.335629 test begin: paddle.broadcast_to(Tensor([3, 1, 98, 0],"bool"), list[3,8,98,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 98, 0],"bool"), list[3,8,98,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 98, 169].  Tensor sizes: [3, 1, 98, 0]
2025-03-05 15:23:00.336325 test begin: paddle.broadcast_to(Tensor([3, 1, 98, 0],"bool"), list[3,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 98, 0],"bool"), list[3,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 98, 98].  Tensor sizes: [3, 1, 98, 0]
2025-03-05 15:23:00.337019 test begin: paddle.broadcast_to(Tensor([3, 1, 99, 0],"bool"), list[3,8,99,169,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 99, 0],"bool"), list[3,8,99,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 99, 169].  Tensor sizes: [3, 1, 99, 0]
2025-03-05 15:23:00.337676 test begin: paddle.broadcast_to(Tensor([3, 1, 99, 0],"bool"), list[3,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([3, 1, 99, 0],"bool"), list[3,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 8, 99, 99].  Tensor sizes: [3, 1, 99, 0]
2025-03-05 15:23:00.338326 test begin: paddle.broadcast_to(Tensor([3, 2, 0],"float32"), tuple(3,2,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 2, 0],"float32"), tuple(3,2,5,), ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 2, 5].  Tensor sizes: [3, 2, 0]
2025-03-05 15:23:00.338977 test begin: paddle.broadcast_to(Tensor([3, 3, 0],"float32"), tuple(3,3,3,), )

[torch error] paddle.broadcast_to(Tensor([3, 3, 0],"float32"), tuple(3,3,3,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 3, 3].  Tensor sizes: [3, 3, 0]
2025-03-05 15:23:00.339695 test begin: paddle.broadcast_to(Tensor([3, 3, 0],"float64"), tuple(3,3,3,), )

[torch error] paddle.broadcast_to(Tensor([3, 3, 0],"float64"), tuple(3,3,3,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 3, 3].  Tensor sizes: [3, 3, 0]
2025-03-05 15:23:00.340352 test begin: paddle.broadcast_to(Tensor([3, 6, 0, 1, 2, 5],"int32"), tuple(3,6,3,1,2,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 0, 1, 2, 5],"int32"), tuple(3,6,3,1,2,5,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 6, 3, 1, 2, 5].  Tensor sizes: [3, 6, 0, 1, 2, 5]
2025-03-05 15:23:00.341109 test begin: paddle.broadcast_to(Tensor([3, 6, 0, 4, 1, 5],"int32"), tuple(3,6,3,4,1,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 0, 4, 1, 5],"int32"), tuple(3,6,3,4,1,5,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 6, 3, 4, 1, 5].  Tensor sizes: [3, 6, 0, 4, 1, 5]
2025-03-05 15:23:00.341841 test begin: paddle.broadcast_to(Tensor([3, 6, 0, 4, 2, 1],"int32"), tuple(3,6,3,4,2,1,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 0, 4, 2, 1],"int32"), tuple(3,6,3,4,2,1,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 6, 3, 4, 2, 1].  Tensor sizes: [3, 6, 0, 4, 2, 1]
2025-03-05 15:23:00.342542 test begin: paddle.broadcast_to(Tensor([3, 6, 0, 4, 2, 5],"float64"), tuple(3,6,3,4,2,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 0, 4, 2, 5],"float64"), tuple(3,6,3,4,2,5,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 6, 3, 4, 2, 5].  Tensor sizes: [3, 6, 0, 4, 2, 5]
2025-03-05 15:23:00.343244 test begin: paddle.broadcast_to(Tensor([3, 6, 3, 0, 1, 5],"int32"), tuple(3,6,3,4,1,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 3, 0, 1, 5],"int32"), tuple(3,6,3,4,1,5,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 6, 3, 4, 1, 5].  Tensor sizes: [3, 6, 3, 0, 1, 5]
2025-03-05 15:23:00.343953 test begin: paddle.broadcast_to(Tensor([3, 6, 3, 0, 2, 1],"int32"), tuple(3,6,3,4,2,1,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 3, 0, 2, 1],"int32"), tuple(3,6,3,4,2,1,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 6, 3, 4, 2, 1].  Tensor sizes: [3, 6, 3, 0, 2, 1]
2025-03-05 15:23:00.344729 test begin: paddle.broadcast_to(Tensor([3, 6, 3, 0, 2, 5],"float64"), tuple(3,6,3,4,2,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 3, 0, 2, 5],"float64"), tuple(3,6,3,4,2,5,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 6, 3, 4, 2, 5].  Tensor sizes: [3, 6, 3, 0, 2, 5]
2025-03-05 15:23:00.345441 test begin: paddle.broadcast_to(Tensor([3, 6, 3, 0, 2, 5],"int32"), tuple(3,6,3,1,2,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 3, 0, 2, 5],"int32"), tuple(3,6,3,1,2,5,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 6, 3, 1, 2, 5].  Tensor sizes: [3, 6, 3, 0, 2, 5]
2025-03-05 15:23:00.346328 test begin: paddle.broadcast_to(Tensor([3, 6, 3, 1, 0, 5],"int32"), tuple(3,6,3,1,2,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 3, 1, 0, 5],"int32"), tuple(3,6,3,1,2,5,), ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 4.  Target sizes: [3, 6, 3, 1, 2, 5].  Tensor sizes: [3, 6, 3, 1, 0, 5]
2025-03-05 15:23:00.347037 test begin: paddle.broadcast_to(Tensor([3, 6, 3, 1, 2, 0],"int32"), tuple(3,6,3,1,2,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 3, 1, 2, 0],"int32"), tuple(3,6,3,1,2,5,), ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 5.  Target sizes: [3, 6, 3, 1, 2, 5].  Tensor sizes: [3, 6, 3, 1, 2, 0]
2025-03-05 15:23:00.347718 test begin: paddle.broadcast_to(Tensor([3, 6, 3, 4, 0, 1],"int32"), tuple(3,6,3,4,2,1,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 3, 4, 0, 1],"int32"), tuple(3,6,3,4,2,1,), ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 4.  Target sizes: [3, 6, 3, 4, 2, 1].  Tensor sizes: [3, 6, 3, 4, 0, 1]
2025-03-05 15:23:00.348396 test begin: paddle.broadcast_to(Tensor([3, 6, 3, 4, 0, 5],"float64"), tuple(3,6,3,4,2,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 3, 4, 0, 5],"float64"), tuple(3,6,3,4,2,5,), ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 4.  Target sizes: [3, 6, 3, 4, 2, 5].  Tensor sizes: [3, 6, 3, 4, 0, 5]
2025-03-05 15:23:00.349101 test begin: paddle.broadcast_to(Tensor([3, 6, 3, 4, 0, 5],"int32"), tuple(3,6,3,4,1,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 3, 4, 0, 5],"int32"), tuple(3,6,3,4,1,5,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 4.  Target sizes: [3, 6, 3, 4, 1, 5].  Tensor sizes: [3, 6, 3, 4, 0, 5]
2025-03-05 15:23:00.349825 test begin: paddle.broadcast_to(Tensor([3, 6, 3, 4, 1, 0],"int32"), tuple(3,6,3,4,1,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 3, 4, 1, 0],"int32"), tuple(3,6,3,4,1,5,), ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 5.  Target sizes: [3, 6, 3, 4, 1, 5].  Tensor sizes: [3, 6, 3, 4, 1, 0]
2025-03-05 15:23:00.350510 test begin: paddle.broadcast_to(Tensor([3, 6, 3, 4, 2, 0],"float64"), tuple(3,6,3,4,2,5,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 3, 4, 2, 0],"float64"), tuple(3,6,3,4,2,5,), ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 5.  Target sizes: [3, 6, 3, 4, 2, 5].  Tensor sizes: [3, 6, 3, 4, 2, 0]
2025-03-05 15:23:00.351187 test begin: paddle.broadcast_to(Tensor([3, 6, 3, 4, 2, 0],"int32"), tuple(3,6,3,4,2,1,), )

[torch error] paddle.broadcast_to(Tensor([3, 6, 3, 4, 2, 0],"int32"), tuple(3,6,3,4,2,1,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 5.  Target sizes: [3, 6, 3, 4, 2, 1].  Tensor sizes: [3, 6, 3, 4, 2, 0]
2025-03-05 15:23:00.351946 test begin: paddle.broadcast_to(Tensor([30, 0, 100, 100],"bool"), list[30,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 100, 100],"bool"), list[30,8,100,100,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 100, 100].  Tensor sizes: [30, 0, 100, 100]
2025-03-05 15:23:00.352634 test begin: paddle.broadcast_to(Tensor([30, 0, 100, 57],"bool"), list[30,8,100,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 100, 57],"bool"), list[30,8,100,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 100, 57].  Tensor sizes: [30, 0, 100, 57]
2025-03-05 15:23:00.353323 test begin: paddle.broadcast_to(Tensor([30, 0, 100, 65],"bool"), list[30,8,100,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 100, 65],"bool"), list[30,8,100,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 100, 65].  Tensor sizes: [30, 0, 100, 65]
2025-03-05 15:23:00.354025 test begin: paddle.broadcast_to(Tensor([30, 0, 101, 101],"bool"), list[30,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 101, 101],"bool"), list[30,8,101,101,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 101, 101].  Tensor sizes: [30, 0, 101, 101]
2025-03-05 15:23:00.354707 test begin: paddle.broadcast_to(Tensor([30, 0, 101, 33],"bool"), list[30,8,101,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 101, 33],"bool"), list[30,8,101,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 101, 33].  Tensor sizes: [30, 0, 101, 33]
2025-03-05 15:23:00.355365 test begin: paddle.broadcast_to(Tensor([30, 0, 102, 102],"bool"), list[30,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 102, 102],"bool"), list[30,8,102,102,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 102, 102].  Tensor sizes: [30, 0, 102, 102]
2025-03-05 15:23:00.356033 test begin: paddle.broadcast_to(Tensor([30, 0, 102, 41],"bool"), list[30,8,102,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 102, 41],"bool"), list[30,8,102,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 102, 41].  Tensor sizes: [30, 0, 102, 41]
2025-03-05 15:23:00.356712 test begin: paddle.broadcast_to(Tensor([30, 0, 102, 49],"bool"), list[30,8,102,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 102, 49],"bool"), list[30,8,102,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 102, 49].  Tensor sizes: [30, 0, 102, 49]
2025-03-05 15:23:00.357388 test begin: paddle.broadcast_to(Tensor([30, 0, 103, 103],"bool"), list[30,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 103, 103],"bool"), list[30,8,103,103,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 103, 103].  Tensor sizes: [30, 0, 103, 103]
2025-03-05 15:23:00.358057 test begin: paddle.broadcast_to(Tensor([30, 0, 103, 33],"bool"), list[30,8,103,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 103, 33],"bool"), list[30,8,103,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 103, 33].  Tensor sizes: [30, 0, 103, 33]
2025-03-05 15:23:00.358712 test begin: paddle.broadcast_to(Tensor([30, 0, 104, 104],"bool"), list[30,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 104, 104],"bool"), list[30,8,104,104,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 104, 104].  Tensor sizes: [30, 0, 104, 104]
2025-03-05 15:23:00.359359 test begin: paddle.broadcast_to(Tensor([30, 0, 104, 37],"bool"), list[30,8,104,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 104, 37],"bool"), list[30,8,104,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 104, 37].  Tensor sizes: [30, 0, 104, 37]
2025-03-05 15:23:00.359995 test begin: paddle.broadcast_to(Tensor([30, 0, 104, 57],"bool"), list[30,8,104,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 104, 57],"bool"), list[30,8,104,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 104, 57].  Tensor sizes: [30, 0, 104, 57]
2025-03-05 15:23:00.360681 test begin: paddle.broadcast_to(Tensor([30, 0, 104, 65],"bool"), list[30,8,104,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 104, 65],"bool"), list[30,8,104,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 104, 65].  Tensor sizes: [30, 0, 104, 65]
2025-03-05 15:23:00.361319 test begin: paddle.broadcast_to(Tensor([30, 0, 106, 106],"bool"), list[30,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 106, 106],"bool"), list[30,8,106,106,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 106, 106].  Tensor sizes: [30, 0, 106, 106]
2025-03-05 15:23:00.361991 test begin: paddle.broadcast_to(Tensor([30, 0, 106, 41],"bool"), list[30,8,106,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 106, 41],"bool"), list[30,8,106,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 106, 41].  Tensor sizes: [30, 0, 106, 41]
2025-03-05 15:23:00.362674 test begin: paddle.broadcast_to(Tensor([30, 0, 106, 45],"bool"), list[30,8,106,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 106, 45],"bool"), list[30,8,106,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 106, 45].  Tensor sizes: [30, 0, 106, 45]
2025-03-05 15:23:00.363317 test begin: paddle.broadcast_to(Tensor([30, 0, 108, 108],"bool"), list[30,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 108, 108],"bool"), list[30,8,108,108,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 108, 108].  Tensor sizes: [30, 0, 108, 108]
2025-03-05 15:23:00.363956 test begin: paddle.broadcast_to(Tensor([30, 0, 108, 33],"bool"), list[30,8,108,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 108, 33],"bool"), list[30,8,108,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 108, 33].  Tensor sizes: [30, 0, 108, 33]
2025-03-05 15:23:00.364671 test begin: paddle.broadcast_to(Tensor([30, 0, 108, 41],"bool"), list[30,8,108,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 108, 41],"bool"), list[30,8,108,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 108, 41].  Tensor sizes: [30, 0, 108, 41]
2025-03-05 15:23:00.365346 test begin: paddle.broadcast_to(Tensor([30, 0, 109, 109],"bool"), list[30,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 109, 109],"bool"), list[30,8,109,109,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 109, 109].  Tensor sizes: [30, 0, 109, 109]
2025-03-05 15:23:00.366002 test begin: paddle.broadcast_to(Tensor([30, 0, 109, 57],"bool"), list[30,8,109,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 109, 57],"bool"), list[30,8,109,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 109, 57].  Tensor sizes: [30, 0, 109, 57]
2025-03-05 15:23:00.366633 test begin: paddle.broadcast_to(Tensor([30, 0, 110, 110],"bool"), list[30,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 110, 110],"bool"), list[30,8,110,110,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 110, 110].  Tensor sizes: [30, 0, 110, 110]
2025-03-05 15:23:00.367292 test begin: paddle.broadcast_to(Tensor([30, 0, 110, 41],"bool"), list[30,8,110,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 110, 41],"bool"), list[30,8,110,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 110, 41].  Tensor sizes: [30, 0, 110, 41]
2025-03-05 15:23:00.367954 test begin: paddle.broadcast_to(Tensor([30, 0, 110, 45],"bool"), list[30,8,110,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 110, 45],"bool"), list[30,8,110,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 110, 45].  Tensor sizes: [30, 0, 110, 45]
2025-03-05 15:23:00.368644 test begin: paddle.broadcast_to(Tensor([30, 0, 111, 111],"bool"), list[30,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 111, 111],"bool"), list[30,8,111,111,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 111, 111].  Tensor sizes: [30, 0, 111, 111]
2025-03-05 15:23:00.369321 test begin: paddle.broadcast_to(Tensor([30, 0, 111, 45],"bool"), list[30,8,111,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 111, 45],"bool"), list[30,8,111,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 111, 45].  Tensor sizes: [30, 0, 111, 45]
2025-03-05 15:23:00.370043 test begin: paddle.broadcast_to(Tensor([30, 0, 111, 65],"bool"), list[30,8,111,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 111, 65],"bool"), list[30,8,111,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 111, 65].  Tensor sizes: [30, 0, 111, 65]
2025-03-05 15:23:00.370693 test begin: paddle.broadcast_to(Tensor([30, 0, 112, 112],"bool"), list[30,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 112, 112],"bool"), list[30,8,112,112,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 112, 112].  Tensor sizes: [30, 0, 112, 112]
2025-03-05 15:23:00.371321 test begin: paddle.broadcast_to(Tensor([30, 0, 112, 49],"bool"), list[30,8,112,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 112, 49],"bool"), list[30,8,112,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 112, 49].  Tensor sizes: [30, 0, 112, 49]
2025-03-05 15:23:00.371967 test begin: paddle.broadcast_to(Tensor([30, 0, 112, 65],"bool"), list[30,8,112,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 112, 65],"bool"), list[30,8,112,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 112, 65].  Tensor sizes: [30, 0, 112, 65]
2025-03-05 15:23:00.372633 test begin: paddle.broadcast_to(Tensor([30, 0, 113, 113],"bool"), list[30,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 113, 113],"bool"), list[30,8,113,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 113, 113].  Tensor sizes: [30, 0, 113, 113]
2025-03-05 15:23:00.373276 test begin: paddle.broadcast_to(Tensor([30, 0, 113, 41],"bool"), list[30,8,113,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 113, 41],"bool"), list[30,8,113,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 113, 41].  Tensor sizes: [30, 0, 113, 41]
2025-03-05 15:23:00.373924 test begin: paddle.broadcast_to(Tensor([30, 0, 114, 114],"bool"), list[30,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 114, 114],"bool"), list[30,8,114,114,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 114, 114].  Tensor sizes: [30, 0, 114, 114]
2025-03-05 15:23:00.374570 test begin: paddle.broadcast_to(Tensor([30, 0, 114, 57],"bool"), list[30,8,114,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 114, 57],"bool"), list[30,8,114,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 114, 57].  Tensor sizes: [30, 0, 114, 57]
2025-03-05 15:23:00.375224 test begin: paddle.broadcast_to(Tensor([30, 0, 114, 65],"bool"), list[30,8,114,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 114, 65],"bool"), list[30,8,114,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 114, 65].  Tensor sizes: [30, 0, 114, 65]
2025-03-05 15:23:00.375976 test begin: paddle.broadcast_to(Tensor([30, 0, 115, 115],"bool"), list[30,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 115, 115],"bool"), list[30,8,115,115,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 115, 115].  Tensor sizes: [30, 0, 115, 115]
2025-03-05 15:23:00.376650 test begin: paddle.broadcast_to(Tensor([30, 0, 115, 65],"bool"), list[30,8,115,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 115, 65],"bool"), list[30,8,115,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 115, 65].  Tensor sizes: [30, 0, 115, 65]
2025-03-05 15:23:00.377309 test begin: paddle.broadcast_to(Tensor([30, 0, 116, 116],"bool"), list[30,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 116, 116],"bool"), list[30,8,116,116,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 116, 116].  Tensor sizes: [30, 0, 116, 116]
2025-03-05 15:23:00.377979 test begin: paddle.broadcast_to(Tensor([30, 0, 116, 45],"bool"), list[30,8,116,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 116, 45],"bool"), list[30,8,116,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 116, 45].  Tensor sizes: [30, 0, 116, 45]
2025-03-05 15:23:00.378636 test begin: paddle.broadcast_to(Tensor([30, 0, 116, 57],"bool"), list[30,8,116,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 116, 57],"bool"), list[30,8,116,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 116, 57].  Tensor sizes: [30, 0, 116, 57]
2025-03-05 15:23:00.379299 test begin: paddle.broadcast_to(Tensor([30, 0, 117, 117],"bool"), list[30,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 117, 117],"bool"), list[30,8,117,117,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 117, 117].  Tensor sizes: [30, 0, 117, 117]
2025-03-05 15:23:00.380004 test begin: paddle.broadcast_to(Tensor([30, 0, 117, 65],"bool"), list[30,8,117,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 117, 65],"bool"), list[30,8,117,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 117, 65].  Tensor sizes: [30, 0, 117, 65]
2025-03-05 15:23:00.380688 test begin: paddle.broadcast_to(Tensor([30, 0, 117, 73],"bool"), list[30,8,117,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 117, 73],"bool"), list[30,8,117,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 117, 73].  Tensor sizes: [30, 0, 117, 73]
2025-03-05 15:23:00.381334 test begin: paddle.broadcast_to(Tensor([30, 0, 118, 118],"bool"), list[30,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 118, 118],"bool"), list[30,8,118,118,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 118, 118].  Tensor sizes: [30, 0, 118, 118]
2025-03-05 15:23:00.381998 test begin: paddle.broadcast_to(Tensor([30, 0, 118, 57],"bool"), list[30,8,118,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 118, 57],"bool"), list[30,8,118,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 118, 57].  Tensor sizes: [30, 0, 118, 57]
2025-03-05 15:23:00.382936 test begin: paddle.broadcast_to(Tensor([30, 0, 119, 119],"bool"), list[30,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 119, 119],"bool"), list[30,8,119,119,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 119, 119].  Tensor sizes: [30, 0, 119, 119]
2025-03-05 15:23:00.383520 test begin: paddle.broadcast_to(Tensor([30, 0, 119, 65],"bool"), list[30,8,119,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 119, 65],"bool"), list[30,8,119,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 119, 65].  Tensor sizes: [30, 0, 119, 65]
2025-03-05 15:23:00.384136 test begin: paddle.broadcast_to(Tensor([30, 0, 119, 81],"bool"), list[30,8,119,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 119, 81],"bool"), list[30,8,119,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 119, 81].  Tensor sizes: [30, 0, 119, 81]
2025-03-05 15:23:00.384868 test begin: paddle.broadcast_to(Tensor([30, 0, 119, 89],"bool"), list[30,8,119,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 119, 89],"bool"), list[30,8,119,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 119, 89].  Tensor sizes: [30, 0, 119, 89]
2025-03-05 15:23:00.385413 test begin: paddle.broadcast_to(Tensor([30, 0, 120, 120],"bool"), list[30,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 120, 120],"bool"), list[30,8,120,120,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 120, 120].  Tensor sizes: [30, 0, 120, 120]
2025-03-05 15:23:00.385947 test begin: paddle.broadcast_to(Tensor([30, 0, 120, 81],"bool"), list[30,8,120,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 120, 81],"bool"), list[30,8,120,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 120, 81].  Tensor sizes: [30, 0, 120, 81]
2025-03-05 15:23:00.386474 test begin: paddle.broadcast_to(Tensor([30, 0, 120, 89],"bool"), list[30,8,120,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 120, 89],"bool"), list[30,8,120,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 120, 89].  Tensor sizes: [30, 0, 120, 89]
2025-03-05 15:23:00.387008 test begin: paddle.broadcast_to(Tensor([30, 0, 121, 121],"bool"), list[30,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 121, 121],"bool"), list[30,8,121,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 121, 121].  Tensor sizes: [30, 0, 121, 121]
2025-03-05 15:23:00.389987 test begin: paddle.broadcast_to(Tensor([30, 0, 121, 37],"bool"), list[30,8,121,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 121, 37],"bool"), list[30,8,121,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 121, 37].  Tensor sizes: [30, 0, 121, 37]
2025-03-05 15:23:00.390574 test begin: paddle.broadcast_to(Tensor([30, 0, 121, 49],"bool"), list[30,8,121,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 121, 49],"bool"), list[30,8,121,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 121, 49].  Tensor sizes: [30, 0, 121, 49]
2025-03-05 15:23:00.391171 test begin: paddle.broadcast_to(Tensor([30, 0, 121, 57],"bool"), list[30,8,121,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 121, 57],"bool"), list[30,8,121,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 121, 57].  Tensor sizes: [30, 0, 121, 57]
2025-03-05 15:23:00.391749 test begin: paddle.broadcast_to(Tensor([30, 0, 121, 73],"bool"), list[30,8,121,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 121, 73],"bool"), list[30,8,121,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 121, 73].  Tensor sizes: [30, 0, 121, 73]
2025-03-05 15:23:00.392278 test begin: paddle.broadcast_to(Tensor([30, 0, 123, 123],"bool"), list[30,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 123, 123],"bool"), list[30,8,123,123,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 123, 123].  Tensor sizes: [30, 0, 123, 123]
2025-03-05 15:23:00.392808 test begin: paddle.broadcast_to(Tensor([30, 0, 123, 49],"bool"), list[30,8,123,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 123, 49],"bool"), list[30,8,123,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 123, 49].  Tensor sizes: [30, 0, 123, 49]
2025-03-05 15:23:00.393331 test begin: paddle.broadcast_to(Tensor([30, 0, 124, 124],"bool"), list[30,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 124, 124],"bool"), list[30,8,124,124,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 124, 124].  Tensor sizes: [30, 0, 124, 124]
2025-03-05 15:23:00.393860 test begin: paddle.broadcast_to(Tensor([30, 0, 124, 33],"bool"), list[30,8,124,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 124, 33],"bool"), list[30,8,124,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 124, 33].  Tensor sizes: [30, 0, 124, 33]
2025-03-05 15:23:00.394374 test begin: paddle.broadcast_to(Tensor([30, 0, 124, 73],"bool"), list[30,8,124,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 124, 73],"bool"), list[30,8,124,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 124, 73].  Tensor sizes: [30, 0, 124, 73]
2025-03-05 15:23:00.394907 test begin: paddle.broadcast_to(Tensor([30, 0, 125, 125],"bool"), list[30,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 125, 125],"bool"), list[30,8,125,125,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 125, 125].  Tensor sizes: [30, 0, 125, 125]
2025-03-05 15:23:00.395448 test begin: paddle.broadcast_to(Tensor([30, 0, 125, 73],"bool"), list[30,8,125,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 125, 73],"bool"), list[30,8,125,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 125, 73].  Tensor sizes: [30, 0, 125, 73]
2025-03-05 15:23:00.396158 test begin: paddle.broadcast_to(Tensor([30, 0, 125, 81],"bool"), list[30,8,125,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 125, 81],"bool"), list[30,8,125,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 125, 81].  Tensor sizes: [30, 0, 125, 81]
2025-03-05 15:23:00.396813 test begin: paddle.broadcast_to(Tensor([30, 0, 126, 126],"bool"), list[30,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 126, 126],"bool"), list[30,8,126,126,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 126, 126].  Tensor sizes: [30, 0, 126, 126]
2025-03-05 15:23:00.397365 test begin: paddle.broadcast_to(Tensor([30, 0, 126, 49],"bool"), list[30,8,126,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 126, 49],"bool"), list[30,8,126,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 126, 49].  Tensor sizes: [30, 0, 126, 49]
2025-03-05 15:23:00.397901 test begin: paddle.broadcast_to(Tensor([30, 0, 126, 81],"bool"), list[30,8,126,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 126, 81],"bool"), list[30,8,126,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 126, 81].  Tensor sizes: [30, 0, 126, 81]
2025-03-05 15:23:00.398455 test begin: paddle.broadcast_to(Tensor([30, 0, 127, 127],"bool"), list[30,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 127, 127],"bool"), list[30,8,127,127,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 127, 127].  Tensor sizes: [30, 0, 127, 127]
2025-03-05 15:23:00.398993 test begin: paddle.broadcast_to(Tensor([30, 0, 127, 73],"bool"), list[30,8,127,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 127, 73],"bool"), list[30,8,127,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 127, 73].  Tensor sizes: [30, 0, 127, 73]
2025-03-05 15:23:00.399521 test begin: paddle.broadcast_to(Tensor([30, 0, 127, 81],"bool"), list[30,8,127,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 127, 81],"bool"), list[30,8,127,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 127, 81].  Tensor sizes: [30, 0, 127, 81]
2025-03-05 15:23:00.400062 test begin: paddle.broadcast_to(Tensor([30, 0, 128, 128],"bool"), list[30,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 128, 128],"bool"), list[30,8,128,128,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 128, 128].  Tensor sizes: [30, 0, 128, 128]
2025-03-05 15:23:00.400598 test begin: paddle.broadcast_to(Tensor([30, 0, 128, 49],"bool"), list[30,8,128,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 128, 49],"bool"), list[30,8,128,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 128, 49].  Tensor sizes: [30, 0, 128, 49]
2025-03-05 15:23:00.401122 test begin: paddle.broadcast_to(Tensor([30, 0, 128, 65],"bool"), list[30,8,128,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 128, 65],"bool"), list[30,8,128,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 128, 65].  Tensor sizes: [30, 0, 128, 65]
2025-03-05 15:23:00.401652 test begin: paddle.broadcast_to(Tensor([30, 0, 129, 129],"bool"), list[30,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 129, 129],"bool"), list[30,8,129,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 129, 129].  Tensor sizes: [30, 0, 129, 129]
2025-03-05 15:23:00.402166 test begin: paddle.broadcast_to(Tensor([30, 0, 129, 37],"bool"), list[30,8,129,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 129, 37],"bool"), list[30,8,129,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 129, 37].  Tensor sizes: [30, 0, 129, 37]
2025-03-05 15:23:00.402686 test begin: paddle.broadcast_to(Tensor([30, 0, 129, 41],"bool"), list[30,8,129,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 129, 41],"bool"), list[30,8,129,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 129, 41].  Tensor sizes: [30, 0, 129, 41]
2025-03-05 15:23:00.403200 test begin: paddle.broadcast_to(Tensor([30, 0, 129, 45],"bool"), list[30,8,129,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 129, 45],"bool"), list[30,8,129,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 129, 45].  Tensor sizes: [30, 0, 129, 45]
2025-03-05 15:23:00.403772 test begin: paddle.broadcast_to(Tensor([30, 0, 129, 53],"bool"), list[30,8,129,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 129, 53],"bool"), list[30,8,129,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 129, 53].  Tensor sizes: [30, 0, 129, 53]
2025-03-05 15:23:00.404294 test begin: paddle.broadcast_to(Tensor([30, 0, 129, 57],"bool"), list[30,8,129,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 129, 57],"bool"), list[30,8,129,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 129, 57].  Tensor sizes: [30, 0, 129, 57]
2025-03-05 15:23:00.404816 test begin: paddle.broadcast_to(Tensor([30, 0, 130, 130],"bool"), list[30,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 130, 130],"bool"), list[30,8,130,130,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 130, 130].  Tensor sizes: [30, 0, 130, 130]
2025-03-05 15:23:00.405333 test begin: paddle.broadcast_to(Tensor([30, 0, 130, 73],"bool"), list[30,8,130,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 130, 73],"bool"), list[30,8,130,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 130, 73].  Tensor sizes: [30, 0, 130, 73]
2025-03-05 15:23:00.405942 test begin: paddle.broadcast_to(Tensor([30, 0, 130, 81],"bool"), list[30,8,130,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 130, 81],"bool"), list[30,8,130,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 130, 81].  Tensor sizes: [30, 0, 130, 81]
2025-03-05 15:23:00.407045 test begin: paddle.broadcast_to(Tensor([30, 0, 133, 133],"bool"), list[30,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 133, 133],"bool"), list[30,8,133,133,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 133, 133].  Tensor sizes: [30, 0, 133, 133]
2025-03-05 15:23:00.407838 test begin: paddle.broadcast_to(Tensor([30, 0, 133, 49],"bool"), list[30,8,133,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 133, 49],"bool"), list[30,8,133,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 133, 49].  Tensor sizes: [30, 0, 133, 49]
2025-03-05 15:23:00.408444 test begin: paddle.broadcast_to(Tensor([30, 0, 134, 134],"bool"), list[30,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 134, 134],"bool"), list[30,8,134,134,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 134, 134].  Tensor sizes: [30, 0, 134, 134]
2025-03-05 15:23:00.409012 test begin: paddle.broadcast_to(Tensor([30, 0, 134, 97],"bool"), list[30,8,134,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 134, 97],"bool"), list[30,8,134,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 134, 97].  Tensor sizes: [30, 0, 134, 97]
2025-03-05 15:23:00.409543 test begin: paddle.broadcast_to(Tensor([30, 0, 135, 135],"bool"), list[30,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 135, 135],"bool"), list[30,8,135,135,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 135, 135].  Tensor sizes: [30, 0, 135, 135]
2025-03-05 15:23:00.410087 test begin: paddle.broadcast_to(Tensor([30, 0, 135, 73],"bool"), list[30,8,135,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 135, 73],"bool"), list[30,8,135,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 135, 73].  Tensor sizes: [30, 0, 135, 73]
2025-03-05 15:23:00.410642 test begin: paddle.broadcast_to(Tensor([30, 0, 138, 138],"bool"), list[30,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 138, 138],"bool"), list[30,8,138,138,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 138, 138].  Tensor sizes: [30, 0, 138, 138]
2025-03-05 15:23:00.411170 test begin: paddle.broadcast_to(Tensor([30, 0, 138, 65],"bool"), list[30,8,138,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 138, 65],"bool"), list[30,8,138,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 138, 65].  Tensor sizes: [30, 0, 138, 65]
2025-03-05 15:23:00.411732 test begin: paddle.broadcast_to(Tensor([30, 0, 138, 81],"bool"), list[30,8,138,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 138, 81],"bool"), list[30,8,138,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 138, 81].  Tensor sizes: [30, 0, 138, 81]
2025-03-05 15:23:00.412249 test begin: paddle.broadcast_to(Tensor([30, 0, 139, 139],"bool"), list[30,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 139, 139],"bool"), list[30,8,139,139,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 139, 139].  Tensor sizes: [30, 0, 139, 139]
2025-03-05 15:23:00.412778 test begin: paddle.broadcast_to(Tensor([30, 0, 139, 41],"bool"), list[30,8,139,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 139, 41],"bool"), list[30,8,139,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 139, 41].  Tensor sizes: [30, 0, 139, 41]
2025-03-05 15:23:00.413298 test begin: paddle.broadcast_to(Tensor([30, 0, 140, 140],"bool"), list[30,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 140, 140],"bool"), list[30,8,140,140,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 140, 140].  Tensor sizes: [30, 0, 140, 140]
2025-03-05 15:23:00.413834 test begin: paddle.broadcast_to(Tensor([30, 0, 140, 89],"bool"), list[30,8,140,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 140, 89],"bool"), list[30,8,140,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 140, 89].  Tensor sizes: [30, 0, 140, 89]
2025-03-05 15:23:00.414378 test begin: paddle.broadcast_to(Tensor([30, 0, 141, 141],"bool"), list[30,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 141, 141],"bool"), list[30,8,141,141,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 141, 141].  Tensor sizes: [30, 0, 141, 141]
2025-03-05 15:23:00.414895 test begin: paddle.broadcast_to(Tensor([30, 0, 141, 73],"bool"), list[30,8,141,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 141, 73],"bool"), list[30,8,141,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 141, 73].  Tensor sizes: [30, 0, 141, 73]
2025-03-05 15:23:00.415426 test begin: paddle.broadcast_to(Tensor([30, 0, 142, 142],"bool"), list[30,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 142, 142],"bool"), list[30,8,142,142,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 142, 142].  Tensor sizes: [30, 0, 142, 142]
2025-03-05 15:23:00.415987 test begin: paddle.broadcast_to(Tensor([30, 0, 142, 89],"bool"), list[30,8,142,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 142, 89],"bool"), list[30,8,142,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 142, 89].  Tensor sizes: [30, 0, 142, 89]
2025-03-05 15:23:00.416686 test begin: paddle.broadcast_to(Tensor([30, 0, 144, 144],"bool"), list[30,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 144, 144],"bool"), list[30,8,144,144,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 144, 144].  Tensor sizes: [30, 0, 144, 144]
2025-03-05 15:23:00.417335 test begin: paddle.broadcast_to(Tensor([30, 0, 144, 25],"bool"), list[30,8,144,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 144, 25],"bool"), list[30,8,144,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 144, 25].  Tensor sizes: [30, 0, 144, 25]
2025-03-05 15:23:00.418008 test begin: paddle.broadcast_to(Tensor([30, 0, 144, 73],"bool"), list[30,8,144,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 144, 73],"bool"), list[30,8,144,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 144, 73].  Tensor sizes: [30, 0, 144, 73]
2025-03-05 15:23:00.418690 test begin: paddle.broadcast_to(Tensor([30, 0, 144, 97],"bool"), list[30,8,144,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 144, 97],"bool"), list[30,8,144,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 144, 97].  Tensor sizes: [30, 0, 144, 97]
2025-03-05 15:23:00.419331 test begin: paddle.broadcast_to(Tensor([30, 0, 147, 105],"bool"), list[30,8,147,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 147, 105],"bool"), list[30,8,147,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 147, 105].  Tensor sizes: [30, 0, 147, 105]
2025-03-05 15:23:00.419975 test begin: paddle.broadcast_to(Tensor([30, 0, 147, 147],"bool"), list[30,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 147, 147],"bool"), list[30,8,147,147,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 147, 147].  Tensor sizes: [30, 0, 147, 147]
2025-03-05 15:23:00.420648 test begin: paddle.broadcast_to(Tensor([30, 0, 147, 41],"bool"), list[30,8,147,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 147, 41],"bool"), list[30,8,147,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 147, 41].  Tensor sizes: [30, 0, 147, 41]
2025-03-05 15:23:00.421300 test begin: paddle.broadcast_to(Tensor([30, 0, 147, 57],"bool"), list[30,8,147,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 147, 57],"bool"), list[30,8,147,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 147, 57].  Tensor sizes: [30, 0, 147, 57]
2025-03-05 15:23:00.421874 test begin: paddle.broadcast_to(Tensor([30, 0, 149, 149],"bool"), list[30,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 149, 149],"bool"), list[30,8,149,149,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 149, 149].  Tensor sizes: [30, 0, 149, 149]
2025-03-05 15:23:00.422414 test begin: paddle.broadcast_to(Tensor([30, 0, 149, 65],"bool"), list[30,8,149,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 149, 65],"bool"), list[30,8,149,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 149, 65].  Tensor sizes: [30, 0, 149, 65]
2025-03-05 15:23:00.422944 test begin: paddle.broadcast_to(Tensor([30, 0, 150, 150],"bool"), list[30,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 150, 150],"bool"), list[30,8,150,150,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 150, 150].  Tensor sizes: [30, 0, 150, 150]
2025-03-05 15:23:00.423463 test begin: paddle.broadcast_to(Tensor([30, 0, 150, 49],"bool"), list[30,8,150,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 150, 49],"bool"), list[30,8,150,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 150, 49].  Tensor sizes: [30, 0, 150, 49]
2025-03-05 15:23:00.424009 test begin: paddle.broadcast_to(Tensor([30, 0, 151, 151],"bool"), list[30,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 151, 151],"bool"), list[30,8,151,151,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 151, 151].  Tensor sizes: [30, 0, 151, 151]
2025-03-05 15:23:00.424524 test begin: paddle.broadcast_to(Tensor([30, 0, 151, 53],"bool"), list[30,8,151,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 151, 53],"bool"), list[30,8,151,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 151, 53].  Tensor sizes: [30, 0, 151, 53]
2025-03-05 15:23:00.425052 test begin: paddle.broadcast_to(Tensor([30, 0, 151, 73],"bool"), list[30,8,151,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 151, 73],"bool"), list[30,8,151,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 151, 73].  Tensor sizes: [30, 0, 151, 73]
2025-03-05 15:23:00.425567 test begin: paddle.broadcast_to(Tensor([30, 0, 154, 154],"bool"), list[30,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 154, 154],"bool"), list[30,8,154,154,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 154, 154].  Tensor sizes: [30, 0, 154, 154]
2025-03-05 15:23:00.426098 test begin: paddle.broadcast_to(Tensor([30, 0, 154, 65],"bool"), list[30,8,154,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 154, 65],"bool"), list[30,8,154,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 154, 65].  Tensor sizes: [30, 0, 154, 65]
2025-03-05 15:23:00.426626 test begin: paddle.broadcast_to(Tensor([30, 0, 155, 155],"bool"), list[30,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 155, 155],"bool"), list[30,8,155,155,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 155, 155].  Tensor sizes: [30, 0, 155, 155]
2025-03-05 15:23:00.427149 test begin: paddle.broadcast_to(Tensor([30, 0, 155, 73],"bool"), list[30,8,155,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 155, 73],"bool"), list[30,8,155,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 155, 73].  Tensor sizes: [30, 0, 155, 73]
2025-03-05 15:23:00.427686 test begin: paddle.broadcast_to(Tensor([30, 0, 155, 81],"bool"), list[30,8,155,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 155, 81],"bool"), list[30,8,155,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 155, 81].  Tensor sizes: [30, 0, 155, 81]
2025-03-05 15:23:00.428202 test begin: paddle.broadcast_to(Tensor([30, 0, 158, 158],"bool"), list[30,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 158, 158],"bool"), list[30,8,158,158,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 158, 158].  Tensor sizes: [30, 0, 158, 158]
2025-03-05 15:23:00.428736 test begin: paddle.broadcast_to(Tensor([30, 0, 158, 81],"bool"), list[30,8,158,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 158, 81],"bool"), list[30,8,158,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 158, 81].  Tensor sizes: [30, 0, 158, 81]
2025-03-05 15:23:00.429345 test begin: paddle.broadcast_to(Tensor([30, 0, 162, 162],"bool"), list[30,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 162, 162],"bool"), list[30,8,162,162,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 162, 162].  Tensor sizes: [30, 0, 162, 162]
2025-03-05 15:23:00.429911 test begin: paddle.broadcast_to(Tensor([30, 0, 162, 57],"bool"), list[30,8,162,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 162, 57],"bool"), list[30,8,162,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 162, 57].  Tensor sizes: [30, 0, 162, 57]
2025-03-05 15:23:00.430437 test begin: paddle.broadcast_to(Tensor([30, 0, 163, 113],"bool"), list[30,8,163,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 163, 113],"bool"), list[30,8,163,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 163, 113].  Tensor sizes: [30, 0, 163, 113]
2025-03-05 15:23:00.430972 test begin: paddle.broadcast_to(Tensor([30, 0, 163, 163],"bool"), list[30,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 163, 163],"bool"), list[30,8,163,163,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 163, 163].  Tensor sizes: [30, 0, 163, 163]
2025-03-05 15:23:00.431512 test begin: paddle.broadcast_to(Tensor([30, 0, 164, 105],"bool"), list[30,8,164,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 164, 105],"bool"), list[30,8,164,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 164, 105].  Tensor sizes: [30, 0, 164, 105]
2025-03-05 15:23:00.432059 test begin: paddle.broadcast_to(Tensor([30, 0, 164, 113],"bool"), list[30,8,164,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 164, 113],"bool"), list[30,8,164,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 164, 113].  Tensor sizes: [30, 0, 164, 113]
2025-03-05 15:23:00.432591 test begin: paddle.broadcast_to(Tensor([30, 0, 164, 164],"bool"), list[30,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 164, 164],"bool"), list[30,8,164,164,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 164, 164].  Tensor sizes: [30, 0, 164, 164]
2025-03-05 15:23:00.433118 test begin: paddle.broadcast_to(Tensor([30, 0, 164, 89],"bool"), list[30,8,164,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 164, 89],"bool"), list[30,8,164,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 164, 89].  Tensor sizes: [30, 0, 164, 89]
2025-03-05 15:23:00.433652 test begin: paddle.broadcast_to(Tensor([30, 0, 165, 105],"bool"), list[30,8,165,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 165, 105],"bool"), list[30,8,165,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 165, 105].  Tensor sizes: [30, 0, 165, 105]
2025-03-05 15:23:00.434179 test begin: paddle.broadcast_to(Tensor([30, 0, 165, 165],"bool"), list[30,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 165, 165],"bool"), list[30,8,165,165,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 165, 165].  Tensor sizes: [30, 0, 165, 165]
2025-03-05 15:23:00.434701 test begin: paddle.broadcast_to(Tensor([30, 0, 165, 81],"bool"), list[30,8,165,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 165, 81],"bool"), list[30,8,165,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 165, 81].  Tensor sizes: [30, 0, 165, 81]
2025-03-05 15:23:00.435241 test begin: paddle.broadcast_to(Tensor([30, 0, 169, 169],"bool"), list[30,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 169, 169],"bool"), list[30,8,169,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 169, 169].  Tensor sizes: [30, 0, 169, 169]
2025-03-05 15:23:00.435771 test begin: paddle.broadcast_to(Tensor([30, 0, 169, 37],"bool"), list[30,8,169,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 169, 37],"bool"), list[30,8,169,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 169, 37].  Tensor sizes: [30, 0, 169, 37]
2025-03-05 15:23:00.436286 test begin: paddle.broadcast_to(Tensor([30, 0, 17, 17],"bool"), list[30,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 17, 17],"bool"), list[30,8,17,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 17, 17].  Tensor sizes: [30, 0, 17, 17]
2025-03-05 15:23:00.436803 test begin: paddle.broadcast_to(Tensor([30, 0, 17, 5],"bool"), list[30,8,17,5,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 17, 5],"bool"), list[30,8,17,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 17, 5].  Tensor sizes: [30, 0, 17, 5]
2025-03-05 15:23:00.437321 test begin: paddle.broadcast_to(Tensor([30, 0, 170, 129],"bool"), list[30,8,170,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 170, 129],"bool"), list[30,8,170,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 170, 129].  Tensor sizes: [30, 0, 170, 129]
2025-03-05 15:23:00.437898 test begin: paddle.broadcast_to(Tensor([30, 0, 170, 170],"bool"), list[30,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 170, 170],"bool"), list[30,8,170,170,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 170, 170].  Tensor sizes: [30, 0, 170, 170]
2025-03-05 15:23:00.438423 test begin: paddle.broadcast_to(Tensor([30, 0, 170, 57],"bool"), list[30,8,170,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 170, 57],"bool"), list[30,8,170,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 170, 57].  Tensor sizes: [30, 0, 170, 57]
2025-03-05 15:23:00.439065 test begin: paddle.broadcast_to(Tensor([30, 0, 170, 97],"bool"), list[30,8,170,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 170, 97],"bool"), list[30,8,170,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 170, 97].  Tensor sizes: [30, 0, 170, 97]
2025-03-05 15:23:00.440012 test begin: paddle.broadcast_to(Tensor([30, 0, 171, 171],"bool"), list[30,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 171, 171],"bool"), list[30,8,171,171,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 171, 171].  Tensor sizes: [30, 0, 171, 171]
2025-03-05 15:23:00.440640 test begin: paddle.broadcast_to(Tensor([30, 0, 171, 53],"bool"), list[30,8,171,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 171, 53],"bool"), list[30,8,171,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 171, 53].  Tensor sizes: [30, 0, 171, 53]
2025-03-05 15:23:00.441192 test begin: paddle.broadcast_to(Tensor([30, 0, 171, 89],"bool"), list[30,8,171,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 171, 89],"bool"), list[30,8,171,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 171, 89].  Tensor sizes: [30, 0, 171, 89]
2025-03-05 15:23:00.441735 test begin: paddle.broadcast_to(Tensor([30, 0, 172, 172],"bool"), list[30,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 172, 172],"bool"), list[30,8,172,172,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 172, 172].  Tensor sizes: [30, 0, 172, 172]
2025-03-05 15:23:00.442297 test begin: paddle.broadcast_to(Tensor([30, 0, 172, 53],"bool"), list[30,8,172,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 172, 53],"bool"), list[30,8,172,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 172, 53].  Tensor sizes: [30, 0, 172, 53]
2025-03-05 15:23:00.442828 test begin: paddle.broadcast_to(Tensor([30, 0, 172, 89],"bool"), list[30,8,172,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 172, 89],"bool"), list[30,8,172,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 172, 89].  Tensor sizes: [30, 0, 172, 89]
2025-03-05 15:23:00.443351 test begin: paddle.broadcast_to(Tensor([30, 0, 173, 173],"bool"), list[30,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 173, 173],"bool"), list[30,8,173,173,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 173, 173].  Tensor sizes: [30, 0, 173, 173]
2025-03-05 15:23:00.443911 test begin: paddle.broadcast_to(Tensor([30, 0, 173, 73],"bool"), list[30,8,173,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 173, 73],"bool"), list[30,8,173,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 173, 73].  Tensor sizes: [30, 0, 173, 73]
2025-03-05 15:23:00.444424 test begin: paddle.broadcast_to(Tensor([30, 0, 175, 113],"bool"), list[30,8,175,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 175, 113],"bool"), list[30,8,175,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 175, 113].  Tensor sizes: [30, 0, 175, 113]
2025-03-05 15:23:00.444933 test begin: paddle.broadcast_to(Tensor([30, 0, 175, 175],"bool"), list[30,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 175, 175],"bool"), list[30,8,175,175,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 175, 175].  Tensor sizes: [30, 0, 175, 175]
2025-03-05 15:23:00.445451 test begin: paddle.broadcast_to(Tensor([30, 0, 175, 97],"bool"), list[30,8,175,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 175, 97],"bool"), list[30,8,175,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 175, 97].  Tensor sizes: [30, 0, 175, 97]
2025-03-05 15:23:00.445968 test begin: paddle.broadcast_to(Tensor([30, 0, 176, 176],"bool"), list[30,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 176, 176],"bool"), list[30,8,176,176,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 176, 176].  Tensor sizes: [30, 0, 176, 176]
2025-03-05 15:23:00.446486 test begin: paddle.broadcast_to(Tensor([30, 0, 176, 73],"bool"), list[30,8,176,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 176, 73],"bool"), list[30,8,176,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 176, 73].  Tensor sizes: [30, 0, 176, 73]
2025-03-05 15:23:00.447067 test begin: paddle.broadcast_to(Tensor([30, 0, 176, 89],"bool"), list[30,8,176,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 176, 89],"bool"), list[30,8,176,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 176, 89].  Tensor sizes: [30, 0, 176, 89]
2025-03-05 15:23:00.447578 test begin: paddle.broadcast_to(Tensor([30, 0, 181, 113],"bool"), list[30,8,181,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 181, 113],"bool"), list[30,8,181,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 181, 113].  Tensor sizes: [30, 0, 181, 113]
2025-03-05 15:23:00.448103 test begin: paddle.broadcast_to(Tensor([30, 0, 181, 181],"bool"), list[30,8,181,181,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 181, 181],"bool"), list[30,8,181,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 181, 181].  Tensor sizes: [30, 0, 181, 181]
2025-03-05 15:23:00.448599 test begin: paddle.broadcast_to(Tensor([30, 0, 183, 183],"bool"), list[30,8,183,183,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 183, 183],"bool"), list[30,8,183,183,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 183, 183].  Tensor sizes: [30, 0, 183, 183]
2025-03-05 15:23:00.449098 test begin: paddle.broadcast_to(Tensor([30, 0, 183, 81],"bool"), list[30,8,183,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 183, 81],"bool"), list[30,8,183,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 183, 81].  Tensor sizes: [30, 0, 183, 81]
2025-03-05 15:23:00.449618 test begin: paddle.broadcast_to(Tensor([30, 0, 187, 105],"bool"), list[30,8,187,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 187, 105],"bool"), list[30,8,187,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 187, 105].  Tensor sizes: [30, 0, 187, 105]
2025-03-05 15:23:00.450171 test begin: paddle.broadcast_to(Tensor([30, 0, 187, 187],"bool"), list[30,8,187,187,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 187, 187],"bool"), list[30,8,187,187,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 187, 187].  Tensor sizes: [30, 0, 187, 187]
2025-03-05 15:23:00.450702 test begin: paddle.broadcast_to(Tensor([30, 0, 189, 189],"bool"), list[30,8,189,189,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 189, 189],"bool"), list[30,8,189,189,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 189, 189].  Tensor sizes: [30, 0, 189, 189]
2025-03-05 15:23:00.451232 test begin: paddle.broadcast_to(Tensor([30, 0, 189, 61],"bool"), list[30,8,189,61,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 189, 61],"bool"), list[30,8,189,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 189, 61].  Tensor sizes: [30, 0, 189, 61]
2025-03-05 15:23:00.451743 test begin: paddle.broadcast_to(Tensor([30, 0, 19, 19],"bool"), list[30,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 19, 19],"bool"), list[30,8,19,19,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 19, 19].  Tensor sizes: [30, 0, 19, 19]
2025-03-05 15:23:00.452247 test begin: paddle.broadcast_to(Tensor([30, 0, 19, 9],"bool"), list[30,8,19,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 19, 9],"bool"), list[30,8,19,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 19, 9].  Tensor sizes: [30, 0, 19, 9]
2025-03-05 15:23:00.452755 test begin: paddle.broadcast_to(Tensor([30, 0, 190, 190],"bool"), list[30,8,190,190,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 190, 190],"bool"), list[30,8,190,190,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 190, 190].  Tensor sizes: [30, 0, 190, 190]
2025-03-05 15:23:00.453275 test begin: paddle.broadcast_to(Tensor([30, 0, 190, 61],"bool"), list[30,8,190,61,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 190, 61],"bool"), list[30,8,190,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 190, 61].  Tensor sizes: [30, 0, 190, 61]
2025-03-05 15:23:00.453792 test begin: paddle.broadcast_to(Tensor([30, 0, 191, 191],"bool"), list[30,8,191,191,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 191, 191],"bool"), list[30,8,191,191,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 191, 191].  Tensor sizes: [30, 0, 191, 191]
2025-03-05 15:23:00.454306 test begin: paddle.broadcast_to(Tensor([30, 0, 191, 97],"bool"), list[30,8,191,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 191, 97],"bool"), list[30,8,191,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 191, 97].  Tensor sizes: [30, 0, 191, 97]
2025-03-05 15:23:00.454814 test begin: paddle.broadcast_to(Tensor([30, 0, 192, 137],"bool"), list[30,8,192,137,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 192, 137],"bool"), list[30,8,192,137,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 192, 137].  Tensor sizes: [30, 0, 192, 137]
2025-03-05 15:23:00.455332 test begin: paddle.broadcast_to(Tensor([30, 0, 192, 192],"bool"), list[30,8,192,192,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 192, 192],"bool"), list[30,8,192,192,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 192, 192].  Tensor sizes: [30, 0, 192, 192]
2025-03-05 15:23:00.455915 test begin: paddle.broadcast_to(Tensor([30, 0, 193, 105],"bool"), list[30,8,193,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 193, 105],"bool"), list[30,8,193,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 193, 105].  Tensor sizes: [30, 0, 193, 105]
2025-03-05 15:23:00.457064 test begin: paddle.broadcast_to(Tensor([30, 0, 193, 129],"bool"), list[30,8,193,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 193, 129],"bool"), list[30,8,193,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 193, 129].  Tensor sizes: [30, 0, 193, 129]
2025-03-05 15:23:00.457706 test begin: paddle.broadcast_to(Tensor([30, 0, 193, 193],"bool"), list[30,8,193,193,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 193, 193],"bool"), list[30,8,193,193,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 193, 193].  Tensor sizes: [30, 0, 193, 193]
2025-03-05 15:23:00.458258 test begin: paddle.broadcast_to(Tensor([30, 0, 194, 194],"bool"), list[30,8,194,194,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 194, 194],"bool"), list[30,8,194,194,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 194, 194].  Tensor sizes: [30, 0, 194, 194]
2025-03-05 15:23:00.458811 test begin: paddle.broadcast_to(Tensor([30, 0, 194, 65],"bool"), list[30,8,194,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 194, 65],"bool"), list[30,8,194,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 194, 65].  Tensor sizes: [30, 0, 194, 65]
2025-03-05 15:23:00.459355 test begin: paddle.broadcast_to(Tensor([30, 0, 197, 121],"bool"), list[30,8,197,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 197, 121],"bool"), list[30,8,197,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 197, 121].  Tensor sizes: [30, 0, 197, 121]
2025-03-05 15:23:00.459959 test begin: paddle.broadcast_to(Tensor([30, 0, 197, 197],"bool"), list[30,8,197,197,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 197, 197],"bool"), list[30,8,197,197,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 197, 197].  Tensor sizes: [30, 0, 197, 197]
2025-03-05 15:23:00.460602 test begin: paddle.broadcast_to(Tensor([30, 0, 197, 97],"bool"), list[30,8,197,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 197, 97],"bool"), list[30,8,197,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 197, 97].  Tensor sizes: [30, 0, 197, 97]
2025-03-05 15:23:00.461243 test begin: paddle.broadcast_to(Tensor([30, 0, 198, 145],"bool"), list[30,8,198,145,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 198, 145],"bool"), list[30,8,198,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 198, 145].  Tensor sizes: [30, 0, 198, 145]
2025-03-05 15:23:00.461901 test begin: paddle.broadcast_to(Tensor([30, 0, 198, 198],"bool"), list[30,8,198,198,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 198, 198],"bool"), list[30,8,198,198,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 198, 198].  Tensor sizes: [30, 0, 198, 198]
2025-03-05 15:23:00.462538 test begin: paddle.broadcast_to(Tensor([30, 0, 20, 20],"bool"), list[30,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 20, 20],"bool"), list[30,8,20,20,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 20, 20].  Tensor sizes: [30, 0, 20, 20]
2025-03-05 15:23:00.463170 test begin: paddle.broadcast_to(Tensor([30, 0, 20, 5],"bool"), list[30,8,20,5,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 20, 5],"bool"), list[30,8,20,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 20, 5].  Tensor sizes: [30, 0, 20, 5]
2025-03-05 15:23:00.463903 test begin: paddle.broadcast_to(Tensor([30, 0, 200, 200],"bool"), list[30,8,200,200,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 200, 200],"bool"), list[30,8,200,200,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 200, 200].  Tensor sizes: [30, 0, 200, 200]
2025-03-05 15:23:00.464589 test begin: paddle.broadcast_to(Tensor([30, 0, 200, 89],"bool"), list[30,8,200,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 200, 89],"bool"), list[30,8,200,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 200, 89].  Tensor sizes: [30, 0, 200, 89]
2025-03-05 15:23:00.465237 test begin: paddle.broadcast_to(Tensor([30, 0, 203, 105],"bool"), list[30,8,203,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 203, 105],"bool"), list[30,8,203,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 203, 105].  Tensor sizes: [30, 0, 203, 105]
2025-03-05 15:23:00.465889 test begin: paddle.broadcast_to(Tensor([30, 0, 203, 203],"bool"), list[30,8,203,203,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 203, 203],"bool"), list[30,8,203,203,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 203, 203].  Tensor sizes: [30, 0, 203, 203]
2025-03-05 15:23:00.466531 test begin: paddle.broadcast_to(Tensor([30, 0, 207, 105],"bool"), list[30,8,207,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 207, 105],"bool"), list[30,8,207,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 207, 105].  Tensor sizes: [30, 0, 207, 105]
2025-03-05 15:23:00.467121 test begin: paddle.broadcast_to(Tensor([30, 0, 207, 207],"bool"), list[30,8,207,207,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 207, 207],"bool"), list[30,8,207,207,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 207, 207].  Tensor sizes: [30, 0, 207, 207]
2025-03-05 15:23:00.467684 test begin: paddle.broadcast_to(Tensor([30, 0, 209, 209],"bool"), list[30,8,209,209,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 209, 209],"bool"), list[30,8,209,209,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 209, 209].  Tensor sizes: [30, 0, 209, 209]
2025-03-05 15:23:00.468321 test begin: paddle.broadcast_to(Tensor([30, 0, 209, 49],"bool"), list[30,8,209,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 209, 49],"bool"), list[30,8,209,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 209, 49].  Tensor sizes: [30, 0, 209, 49]
2025-03-05 15:23:00.468952 test begin: paddle.broadcast_to(Tensor([30, 0, 21, 21],"bool"), list[30,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 21, 21],"bool"), list[30,8,21,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 21, 21].  Tensor sizes: [30, 0, 21, 21]
2025-03-05 15:23:00.469579 test begin: paddle.broadcast_to(Tensor([30, 0, 21, 5],"bool"), list[30,8,21,5,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 21, 5],"bool"), list[30,8,21,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 21, 5].  Tensor sizes: [30, 0, 21, 5]
2025-03-05 15:23:00.470251 test begin: paddle.broadcast_to(Tensor([30, 0, 210, 121],"bool"), list[30,8,210,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 210, 121],"bool"), list[30,8,210,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 210, 121].  Tensor sizes: [30, 0, 210, 121]
2025-03-05 15:23:00.470844 test begin: paddle.broadcast_to(Tensor([30, 0, 210, 210],"bool"), list[30,8,210,210,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 210, 210],"bool"), list[30,8,210,210,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 210, 210].  Tensor sizes: [30, 0, 210, 210]
2025-03-05 15:23:00.471400 test begin: paddle.broadcast_to(Tensor([30, 0, 211, 105],"bool"), list[30,8,211,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 211, 105],"bool"), list[30,8,211,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 211, 105].  Tensor sizes: [30, 0, 211, 105]
2025-03-05 15:23:00.471924 test begin: paddle.broadcast_to(Tensor([30, 0, 211, 211],"bool"), list[30,8,211,211,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 211, 211],"bool"), list[30,8,211,211,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 211, 211].  Tensor sizes: [30, 0, 211, 211]
2025-03-05 15:23:00.472441 test begin: paddle.broadcast_to(Tensor([30, 0, 212, 145],"bool"), list[30,8,212,145,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 212, 145],"bool"), list[30,8,212,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 212, 145].  Tensor sizes: [30, 0, 212, 145]
2025-03-05 15:23:00.472953 test begin: paddle.broadcast_to(Tensor([30, 0, 212, 212],"bool"), list[30,8,212,212,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 212, 212],"bool"), list[30,8,212,212,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 212, 212].  Tensor sizes: [30, 0, 212, 212]
2025-03-05 15:23:00.473448 test begin: paddle.broadcast_to(Tensor([30, 0, 220, 220],"bool"), list[30,8,220,220,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 220, 220],"bool"), list[30,8,220,220,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 220, 220].  Tensor sizes: [30, 0, 220, 220]
2025-03-05 15:23:00.473976 test begin: paddle.broadcast_to(Tensor([30, 0, 220, 89],"bool"), list[30,8,220,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 220, 89],"bool"), list[30,8,220,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 220, 89].  Tensor sizes: [30, 0, 220, 89]
2025-03-05 15:23:00.474504 test begin: paddle.broadcast_to(Tensor([30, 0, 222, 113],"bool"), list[30,8,222,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 222, 113],"bool"), list[30,8,222,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 222, 113].  Tensor sizes: [30, 0, 222, 113]
2025-03-05 15:23:00.475091 test begin: paddle.broadcast_to(Tensor([30, 0, 222, 222],"bool"), list[30,8,222,222,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 222, 222],"bool"), list[30,8,222,222,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 222, 222].  Tensor sizes: [30, 0, 222, 222]
2025-03-05 15:23:00.475959 test begin: paddle.broadcast_to(Tensor([30, 0, 226, 121],"bool"), list[30,8,226,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 226, 121],"bool"), list[30,8,226,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 226, 121].  Tensor sizes: [30, 0, 226, 121]
2025-03-05 15:23:00.476625 test begin: paddle.broadcast_to(Tensor([30, 0, 226, 226],"bool"), list[30,8,226,226,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 226, 226],"bool"), list[30,8,226,226,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 226, 226].  Tensor sizes: [30, 0, 226, 226]
2025-03-05 15:23:00.477210 test begin: paddle.broadcast_to(Tensor([30, 0, 226, 65],"bool"), list[30,8,226,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 226, 65],"bool"), list[30,8,226,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 226, 65].  Tensor sizes: [30, 0, 226, 65]
2025-03-05 15:23:00.477754 test begin: paddle.broadcast_to(Tensor([30, 0, 227, 145],"bool"), list[30,8,227,145,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 227, 145],"bool"), list[30,8,227,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 227, 145].  Tensor sizes: [30, 0, 227, 145]
2025-03-05 15:23:00.478275 test begin: paddle.broadcast_to(Tensor([30, 0, 227, 227],"bool"), list[30,8,227,227,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 227, 227],"bool"), list[30,8,227,227,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 227, 227].  Tensor sizes: [30, 0, 227, 227]
2025-03-05 15:23:00.478793 test begin: paddle.broadcast_to(Tensor([30, 0, 23, 23],"bool"), list[30,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 23, 23],"bool"), list[30,8,23,23,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 23, 23].  Tensor sizes: [30, 0, 23, 23]
2025-03-05 15:23:00.479297 test begin: paddle.broadcast_to(Tensor([30, 0, 23, 5],"bool"), list[30,8,23,5,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 23, 5],"bool"), list[30,8,23,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 23, 5].  Tensor sizes: [30, 0, 23, 5]
2025-03-05 15:23:00.479819 test begin: paddle.broadcast_to(Tensor([30, 0, 23, 9],"bool"), list[30,8,23,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 23, 9],"bool"), list[30,8,23,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 23, 9].  Tensor sizes: [30, 0, 23, 9]
2025-03-05 15:23:00.480327 test begin: paddle.broadcast_to(Tensor([30, 0, 24, 24],"bool"), list[30,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 24, 24],"bool"), list[30,8,24,24,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 24, 24].  Tensor sizes: [30, 0, 24, 24]
2025-03-05 15:23:00.480844 test begin: paddle.broadcast_to(Tensor([30, 0, 24, 9],"bool"), list[30,8,24,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 24, 9],"bool"), list[30,8,24,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 24, 9].  Tensor sizes: [30, 0, 24, 9]
2025-03-05 15:23:00.481348 test begin: paddle.broadcast_to(Tensor([30, 0, 240, 129],"bool"), list[30,8,240,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 240, 129],"bool"), list[30,8,240,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 240, 129].  Tensor sizes: [30, 0, 240, 129]
2025-03-05 15:23:00.481862 test begin: paddle.broadcast_to(Tensor([30, 0, 240, 240],"bool"), list[30,8,240,240,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 240, 240],"bool"), list[30,8,240,240,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 240, 240].  Tensor sizes: [30, 0, 240, 240]
2025-03-05 15:23:00.482420 test begin: paddle.broadcast_to(Tensor([30, 0, 241, 113],"bool"), list[30,8,241,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 241, 113],"bool"), list[30,8,241,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 241, 113].  Tensor sizes: [30, 0, 241, 113]
2025-03-05 15:23:00.482985 test begin: paddle.broadcast_to(Tensor([30, 0, 241, 241],"bool"), list[30,8,241,241,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 241, 241],"bool"), list[30,8,241,241,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 241, 241].  Tensor sizes: [30, 0, 241, 241]
2025-03-05 15:23:00.483502 test begin: paddle.broadcast_to(Tensor([30, 0, 243, 243],"bool"), list[30,8,243,243,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 243, 243],"bool"), list[30,8,243,243,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 243, 243].  Tensor sizes: [30, 0, 243, 243]
2025-03-05 15:23:00.484022 test begin: paddle.broadcast_to(Tensor([30, 0, 243, 69],"bool"), list[30,8,243,69,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 243, 69],"bool"), list[30,8,243,69,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 243, 69].  Tensor sizes: [30, 0, 243, 69]
2025-03-05 15:23:00.484531 test begin: paddle.broadcast_to(Tensor([30, 0, 249, 137],"bool"), list[30,8,249,137,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 249, 137],"bool"), list[30,8,249,137,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 249, 137].  Tensor sizes: [30, 0, 249, 137]
2025-03-05 15:23:00.485047 test begin: paddle.broadcast_to(Tensor([30, 0, 249, 249],"bool"), list[30,8,249,249,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 249, 249],"bool"), list[30,8,249,249,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 249, 249].  Tensor sizes: [30, 0, 249, 249]
2025-03-05 15:23:00.485549 test begin: paddle.broadcast_to(Tensor([30, 0, 253, 137],"bool"), list[30,8,253,137,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 253, 137],"bool"), list[30,8,253,137,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 253, 137].  Tensor sizes: [30, 0, 253, 137]
2025-03-05 15:23:00.486084 test begin: paddle.broadcast_to(Tensor([30, 0, 253, 253],"bool"), list[30,8,253,253,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 253, 253],"bool"), list[30,8,253,253,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 253, 253].  Tensor sizes: [30, 0, 253, 253]
2025-03-05 15:23:00.486639 test begin: paddle.broadcast_to(Tensor([30, 0, 26, 26],"bool"), list[30,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 26, 26],"bool"), list[30,8,26,26,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 26, 26].  Tensor sizes: [30, 0, 26, 26]
2025-03-05 15:23:00.487152 test begin: paddle.broadcast_to(Tensor([30, 0, 26, 9],"bool"), list[30,8,26,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 26, 9],"bool"), list[30,8,26,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 26, 9].  Tensor sizes: [30, 0, 26, 9]
2025-03-05 15:23:00.487675 test begin: paddle.broadcast_to(Tensor([30, 0, 264, 121],"bool"), list[30,8,264,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 264, 121],"bool"), list[30,8,264,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 264, 121].  Tensor sizes: [30, 0, 264, 121]
2025-03-05 15:23:00.488186 test begin: paddle.broadcast_to(Tensor([30, 0, 264, 264],"bool"), list[30,8,264,264,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 264, 264],"bool"), list[30,8,264,264,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 264, 264].  Tensor sizes: [30, 0, 264, 264]
2025-03-05 15:23:00.488724 test begin: paddle.broadcast_to(Tensor([30, 0, 268, 153],"bool"), list[30,8,268,153,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 268, 153],"bool"), list[30,8,268,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 268, 153].  Tensor sizes: [30, 0, 268, 153]
2025-03-05 15:23:00.489236 test begin: paddle.broadcast_to(Tensor([30, 0, 268, 268],"bool"), list[30,8,268,268,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 268, 268],"bool"), list[30,8,268,268,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 268, 268].  Tensor sizes: [30, 0, 268, 268]
2025-03-05 15:23:00.489748 test begin: paddle.broadcast_to(Tensor([30, 0, 270, 161],"bool"), list[30,8,270,161,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 270, 161],"bool"), list[30,8,270,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 270, 161].  Tensor sizes: [30, 0, 270, 161]
2025-03-05 15:23:00.490262 test begin: paddle.broadcast_to(Tensor([30, 0, 270, 270],"bool"), list[30,8,270,270,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 270, 270],"bool"), list[30,8,270,270,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 270, 270].  Tensor sizes: [30, 0, 270, 270]
2025-03-05 15:23:00.490798 test begin: paddle.broadcast_to(Tensor([30, 0, 274, 169],"bool"), list[30,8,274,169,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 274, 169],"bool"), list[30,8,274,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 274, 169].  Tensor sizes: [30, 0, 274, 169]
2025-03-05 15:23:00.491306 test begin: paddle.broadcast_to(Tensor([30, 0, 274, 274],"bool"), list[30,8,274,274,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 274, 274],"bool"), list[30,8,274,274,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 274, 274].  Tensor sizes: [30, 0, 274, 274]
2025-03-05 15:23:00.491898 test begin: paddle.broadcast_to(Tensor([30, 0, 276, 129],"bool"), list[30,8,276,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 276, 129],"bool"), list[30,8,276,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 276, 129].  Tensor sizes: [30, 0, 276, 129]
2025-03-05 15:23:00.493040 test begin: paddle.broadcast_to(Tensor([30, 0, 276, 276],"bool"), list[30,8,276,276,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 276, 276],"bool"), list[30,8,276,276,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 276, 276].  Tensor sizes: [30, 0, 276, 276]
2025-03-05 15:23:00.493714 test begin: paddle.broadcast_to(Tensor([30, 0, 277, 129],"bool"), list[30,8,277,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 277, 129],"bool"), list[30,8,277,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 277, 129].  Tensor sizes: [30, 0, 277, 129]
2025-03-05 15:23:00.494381 test begin: paddle.broadcast_to(Tensor([30, 0, 277, 277],"bool"), list[30,8,277,277,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 277, 277],"bool"), list[30,8,277,277,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 277, 277].  Tensor sizes: [30, 0, 277, 277]
2025-03-05 15:23:00.495947 test begin: paddle.broadcast_to(Tensor([30, 0, 28, 13],"bool"), list[30,8,28,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 28, 13],"bool"), list[30,8,28,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 28, 13].  Tensor sizes: [30, 0, 28, 13]
2025-03-05 15:23:00.496598 test begin: paddle.broadcast_to(Tensor([30, 0, 28, 28],"bool"), list[30,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 28, 28],"bool"), list[30,8,28,28,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 28, 28].  Tensor sizes: [30, 0, 28, 28]
2025-03-05 15:23:00.497236 test begin: paddle.broadcast_to(Tensor([30, 0, 28, 9],"bool"), list[30,8,28,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 28, 9],"bool"), list[30,8,28,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 28, 9].  Tensor sizes: [30, 0, 28, 9]
2025-03-05 15:23:00.497874 test begin: paddle.broadcast_to(Tensor([30, 0, 29, 29],"bool"), list[30,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 29, 29],"bool"), list[30,8,29,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 29, 29].  Tensor sizes: [30, 0, 29, 29]
2025-03-05 15:23:00.498501 test begin: paddle.broadcast_to(Tensor([30, 0, 29, 9],"bool"), list[30,8,29,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 29, 9],"bool"), list[30,8,29,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 29, 9].  Tensor sizes: [30, 0, 29, 9]
2025-03-05 15:23:00.499143 test begin: paddle.broadcast_to(Tensor([30, 0, 293, 293],"bool"), list[30,8,293,293,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 293, 293],"bool"), list[30,8,293,293,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 293, 293].  Tensor sizes: [30, 0, 293, 293]
2025-03-05 15:23:00.499772 test begin: paddle.broadcast_to(Tensor([30, 0, 293, 97],"bool"), list[30,8,293,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 293, 97],"bool"), list[30,8,293,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 293, 97].  Tensor sizes: [30, 0, 293, 97]
2025-03-05 15:23:00.500399 test begin: paddle.broadcast_to(Tensor([30, 0, 298, 161],"bool"), list[30,8,298,161,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 298, 161],"bool"), list[30,8,298,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 298, 161].  Tensor sizes: [30, 0, 298, 161]
2025-03-05 15:23:00.501030 test begin: paddle.broadcast_to(Tensor([30, 0, 298, 298],"bool"), list[30,8,298,298,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 298, 298],"bool"), list[30,8,298,298,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 298, 298].  Tensor sizes: [30, 0, 298, 298]
2025-03-05 15:23:00.501660 test begin: paddle.broadcast_to(Tensor([30, 0, 30, 13],"bool"), list[30,8,30,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 30, 13],"bool"), list[30,8,30,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 30, 13].  Tensor sizes: [30, 0, 30, 13]
2025-03-05 15:23:00.502282 test begin: paddle.broadcast_to(Tensor([30, 0, 30, 30],"bool"), list[30,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 30, 30],"bool"), list[30,8,30,30,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 30, 30].  Tensor sizes: [30, 0, 30, 30]
2025-03-05 15:23:00.502864 test begin: paddle.broadcast_to(Tensor([30, 0, 302, 113],"bool"), list[30,8,302,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 302, 113],"bool"), list[30,8,302,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 302, 113].  Tensor sizes: [30, 0, 302, 113]
2025-03-05 15:23:00.503428 test begin: paddle.broadcast_to(Tensor([30, 0, 302, 302],"bool"), list[30,8,302,302,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 302, 302],"bool"), list[30,8,302,302,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 302, 302].  Tensor sizes: [30, 0, 302, 302]
2025-03-05 15:23:00.504048 test begin: paddle.broadcast_to(Tensor([30, 0, 307, 307],"bool"), list[30,8,307,307,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 307, 307],"bool"), list[30,8,307,307,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 307, 307].  Tensor sizes: [30, 0, 307, 307]
2025-03-05 15:23:00.504689 test begin: paddle.broadcast_to(Tensor([30, 0, 307, 57],"bool"), list[30,8,307,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 307, 57],"bool"), list[30,8,307,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 307, 57].  Tensor sizes: [30, 0, 307, 57]
2025-03-05 15:23:00.505311 test begin: paddle.broadcast_to(Tensor([30, 0, 31, 13],"bool"), list[30,8,31,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 31, 13],"bool"), list[30,8,31,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 31, 13].  Tensor sizes: [30, 0, 31, 13]
2025-03-05 15:23:00.505907 test begin: paddle.broadcast_to(Tensor([30, 0, 31, 31],"bool"), list[30,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 31, 31],"bool"), list[30,8,31,31,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 31, 31].  Tensor sizes: [30, 0, 31, 31]
2025-03-05 15:23:00.506472 test begin: paddle.broadcast_to(Tensor([30, 0, 31, 9],"bool"), list[30,8,31,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 31, 9],"bool"), list[30,8,31,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 31, 9].  Tensor sizes: [30, 0, 31, 9]
2025-03-05 15:23:00.507020 test begin: paddle.broadcast_to(Tensor([30, 0, 32, 13],"bool"), list[30,8,32,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 32, 13],"bool"), list[30,8,32,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 32, 13].  Tensor sizes: [30, 0, 32, 13]
2025-03-05 15:23:00.507548 test begin: paddle.broadcast_to(Tensor([30, 0, 32, 32],"bool"), list[30,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 32, 32],"bool"), list[30,8,32,32,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 32, 32].  Tensor sizes: [30, 0, 32, 32]
2025-03-05 15:23:00.508088 test begin: paddle.broadcast_to(Tensor([30, 0, 32, 9],"bool"), list[30,8,32,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 32, 9],"bool"), list[30,8,32,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 32, 9].  Tensor sizes: [30, 0, 32, 9]
2025-03-05 15:23:00.508627 test begin: paddle.broadcast_to(Tensor([30, 0, 33, 33],"bool"), list[30,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 33, 33],"bool"), list[30,8,33,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 33, 33].  Tensor sizes: [30, 0, 33, 33]
2025-03-05 15:23:00.509174 test begin: paddle.broadcast_to(Tensor([30, 0, 33, 9],"bool"), list[30,8,33,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 33, 9],"bool"), list[30,8,33,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 33, 9].  Tensor sizes: [30, 0, 33, 9]
2025-03-05 15:23:00.509709 test begin: paddle.broadcast_to(Tensor([30, 0, 336, 121],"bool"), list[30,8,336,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 336, 121],"bool"), list[30,8,336,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 336, 121].  Tensor sizes: [30, 0, 336, 121]
2025-03-05 15:23:00.510248 test begin: paddle.broadcast_to(Tensor([30, 0, 336, 336],"bool"), list[30,8,336,336,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 336, 336],"bool"), list[30,8,336,336,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 336, 336].  Tensor sizes: [30, 0, 336, 336]
2025-03-05 15:23:00.510846 test begin: paddle.broadcast_to(Tensor([30, 0, 339, 169],"bool"), list[30,8,339,169,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 339, 169],"bool"), list[30,8,339,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 339, 169].  Tensor sizes: [30, 0, 339, 169]
2025-03-05 15:23:00.511387 test begin: paddle.broadcast_to(Tensor([30, 0, 339, 339],"bool"), list[30,8,339,339,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 339, 339],"bool"), list[30,8,339,339,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 339, 339].  Tensor sizes: [30, 0, 339, 339]
2025-03-05 15:23:00.511948 test begin: paddle.broadcast_to(Tensor([30, 0, 34, 34],"bool"), list[30,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 34, 34],"bool"), list[30,8,34,34,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 34, 34].  Tensor sizes: [30, 0, 34, 34]
2025-03-05 15:23:00.512477 test begin: paddle.broadcast_to(Tensor([30, 0, 34, 9],"bool"), list[30,8,34,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 34, 9],"bool"), list[30,8,34,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 34, 9].  Tensor sizes: [30, 0, 34, 9]
2025-03-05 15:23:00.513016 test begin: paddle.broadcast_to(Tensor([30, 0, 35, 13],"bool"), list[30,8,35,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 35, 13],"bool"), list[30,8,35,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 35, 13].  Tensor sizes: [30, 0, 35, 13]
2025-03-05 15:23:00.513547 test begin: paddle.broadcast_to(Tensor([30, 0, 35, 35],"bool"), list[30,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 35, 35],"bool"), list[30,8,35,35,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 35, 35].  Tensor sizes: [30, 0, 35, 35]
2025-03-05 15:23:00.514110 test begin: paddle.broadcast_to(Tensor([30, 0, 355, 121],"bool"), list[30,8,355,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 355, 121],"bool"), list[30,8,355,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 355, 121].  Tensor sizes: [30, 0, 355, 121]
2025-03-05 15:23:00.514645 test begin: paddle.broadcast_to(Tensor([30, 0, 355, 355],"bool"), list[30,8,355,355,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 355, 355],"bool"), list[30,8,355,355,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 355, 355].  Tensor sizes: [30, 0, 355, 355]
2025-03-05 15:23:00.515181 test begin: paddle.broadcast_to(Tensor([30, 0, 36, 13],"bool"), list[30,8,36,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 36, 13],"bool"), list[30,8,36,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 36, 13].  Tensor sizes: [30, 0, 36, 13]
2025-03-05 15:23:00.515717 test begin: paddle.broadcast_to(Tensor([30, 0, 36, 36],"bool"), list[30,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 36, 36],"bool"), list[30,8,36,36,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 36, 36].  Tensor sizes: [30, 0, 36, 36]
2025-03-05 15:23:00.516257 test begin: paddle.broadcast_to(Tensor([30, 0, 369, 169],"bool"), list[30,8,369,169,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 369, 169],"bool"), list[30,8,369,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 369, 169].  Tensor sizes: [30, 0, 369, 169]
2025-03-05 15:23:00.516805 test begin: paddle.broadcast_to(Tensor([30, 0, 369, 369],"bool"), list[30,8,369,369,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 369, 369],"bool"), list[30,8,369,369,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 369, 369].  Tensor sizes: [30, 0, 369, 369]
2025-03-05 15:23:00.517342 test begin: paddle.broadcast_to(Tensor([30, 0, 39, 13],"bool"), list[30,8,39,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 39, 13],"bool"), list[30,8,39,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 39, 13].  Tensor sizes: [30, 0, 39, 13]
2025-03-05 15:23:00.517874 test begin: paddle.broadcast_to(Tensor([30, 0, 39, 17],"bool"), list[30,8,39,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 39, 17],"bool"), list[30,8,39,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 39, 17].  Tensor sizes: [30, 0, 39, 17]
2025-03-05 15:23:00.518401 test begin: paddle.broadcast_to(Tensor([30, 0, 39, 39],"bool"), list[30,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 39, 39],"bool"), list[30,8,39,39,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 39, 39].  Tensor sizes: [30, 0, 39, 39]
2025-03-05 15:23:00.518931 test begin: paddle.broadcast_to(Tensor([30, 0, 39, 9],"bool"), list[30,8,39,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 39, 9],"bool"), list[30,8,39,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 39, 9].  Tensor sizes: [30, 0, 39, 9]
2025-03-05 15:23:00.519451 test begin: paddle.broadcast_to(Tensor([30, 0, 42, 13],"bool"), list[30,8,42,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 42, 13],"bool"), list[30,8,42,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 42, 13].  Tensor sizes: [30, 0, 42, 13]
2025-03-05 15:23:00.519986 test begin: paddle.broadcast_to(Tensor([30, 0, 42, 42],"bool"), list[30,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 42, 42],"bool"), list[30,8,42,42,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 42, 42].  Tensor sizes: [30, 0, 42, 42]
2025-03-05 15:23:00.520516 test begin: paddle.broadcast_to(Tensor([30, 0, 43, 17],"bool"), list[30,8,43,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 43, 17],"bool"), list[30,8,43,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 43, 17].  Tensor sizes: [30, 0, 43, 17]
2025-03-05 15:23:00.521052 test begin: paddle.broadcast_to(Tensor([30, 0, 43, 43],"bool"), list[30,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 43, 43],"bool"), list[30,8,43,43,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 43, 43].  Tensor sizes: [30, 0, 43, 43]
2025-03-05 15:23:00.521606 test begin: paddle.broadcast_to(Tensor([30, 0, 44, 17],"bool"), list[30,8,44,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 44, 17],"bool"), list[30,8,44,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 44, 17].  Tensor sizes: [30, 0, 44, 17]
2025-03-05 15:23:00.522149 test begin: paddle.broadcast_to(Tensor([30, 0, 44, 44],"bool"), list[30,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 44, 44],"bool"), list[30,8,44,44,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 44, 44].  Tensor sizes: [30, 0, 44, 44]
2025-03-05 15:23:00.522701 test begin: paddle.broadcast_to(Tensor([30, 0, 457, 153],"bool"), list[30,8,457,153,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 457, 153],"bool"), list[30,8,457,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 457, 153].  Tensor sizes: [30, 0, 457, 153]
2025-03-05 15:23:00.523261 test begin: paddle.broadcast_to(Tensor([30, 0, 457, 457],"bool"), list[30,8,457,457,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 457, 457],"bool"), list[30,8,457,457,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 457, 457].  Tensor sizes: [30, 0, 457, 457]
2025-03-05 15:23:00.523821 test begin: paddle.broadcast_to(Tensor([30, 0, 46, 13],"bool"), list[30,8,46,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 46, 13],"bool"), list[30,8,46,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 46, 13].  Tensor sizes: [30, 0, 46, 13]
2025-03-05 15:23:00.524362 test begin: paddle.broadcast_to(Tensor([30, 0, 46, 17],"bool"), list[30,8,46,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 46, 17],"bool"), list[30,8,46,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 46, 17].  Tensor sizes: [30, 0, 46, 17]
2025-03-05 15:23:00.524911 test begin: paddle.broadcast_to(Tensor([30, 0, 46, 46],"bool"), list[30,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 46, 46],"bool"), list[30,8,46,46,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 46, 46].  Tensor sizes: [30, 0, 46, 46]
2025-03-05 15:23:00.525451 test begin: paddle.broadcast_to(Tensor([30, 0, 47, 13],"bool"), list[30,8,47,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 47, 13],"bool"), list[30,8,47,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 47, 13].  Tensor sizes: [30, 0, 47, 13]
2025-03-05 15:23:00.525993 test begin: paddle.broadcast_to(Tensor([30, 0, 47, 47],"bool"), list[30,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 47, 47],"bool"), list[30,8,47,47,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 47, 47].  Tensor sizes: [30, 0, 47, 47]
2025-03-05 15:23:00.526522 test begin: paddle.broadcast_to(Tensor([30, 0, 477, 137],"bool"), list[30,8,477,137,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 477, 137],"bool"), list[30,8,477,137,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 477, 137].  Tensor sizes: [30, 0, 477, 137]
2025-03-05 15:23:00.527077 test begin: paddle.broadcast_to(Tensor([30, 0, 477, 477],"bool"), list[30,8,477,477,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 477, 477],"bool"), list[30,8,477,477,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 477, 477].  Tensor sizes: [30, 0, 477, 477]
2025-03-05 15:23:00.527621 test begin: paddle.broadcast_to(Tensor([30, 0, 48, 17],"bool"), list[30,8,48,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 48, 17],"bool"), list[30,8,48,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 48, 17].  Tensor sizes: [30, 0, 48, 17]
2025-03-05 15:23:00.528149 test begin: paddle.broadcast_to(Tensor([30, 0, 48, 48],"bool"), list[30,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 48, 48],"bool"), list[30,8,48,48,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 48, 48].  Tensor sizes: [30, 0, 48, 48]
2025-03-05 15:23:00.528697 test begin: paddle.broadcast_to(Tensor([30, 0, 49, 17],"bool"), list[30,8,49,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 49, 17],"bool"), list[30,8,49,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 49, 17].  Tensor sizes: [30, 0, 49, 17]
2025-03-05 15:23:00.529229 test begin: paddle.broadcast_to(Tensor([30, 0, 49, 49],"bool"), list[30,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 49, 49],"bool"), list[30,8,49,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 49, 49].  Tensor sizes: [30, 0, 49, 49]
2025-03-05 15:23:00.529793 test begin: paddle.broadcast_to(Tensor([30, 0, 498, 153],"bool"), list[30,8,498,153,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 498, 153],"bool"), list[30,8,498,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 498, 153].  Tensor sizes: [30, 0, 498, 153]
2025-03-05 15:23:00.530323 test begin: paddle.broadcast_to(Tensor([30, 0, 498, 498],"bool"), list[30,8,498,498,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 498, 498],"bool"), list[30,8,498,498,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 498, 498].  Tensor sizes: [30, 0, 498, 498]
2025-03-05 15:23:00.530864 test begin: paddle.broadcast_to(Tensor([30, 0, 50, 17],"bool"), list[30,8,50,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 50, 17],"bool"), list[30,8,50,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 50, 17].  Tensor sizes: [30, 0, 50, 17]
2025-03-05 15:23:00.531401 test begin: paddle.broadcast_to(Tensor([30, 0, 50, 21],"bool"), list[30,8,50,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 50, 21],"bool"), list[30,8,50,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 50, 21].  Tensor sizes: [30, 0, 50, 21]
2025-03-05 15:23:00.531954 test begin: paddle.broadcast_to(Tensor([30, 0, 50, 50],"bool"), list[30,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 50, 50],"bool"), list[30,8,50,50,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 50, 50].  Tensor sizes: [30, 0, 50, 50]
2025-03-05 15:23:00.532498 test begin: paddle.broadcast_to(Tensor([30, 0, 52, 17],"bool"), list[30,8,52,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 52, 17],"bool"), list[30,8,52,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 52, 17].  Tensor sizes: [30, 0, 52, 17]
2025-03-05 15:23:00.533053 test begin: paddle.broadcast_to(Tensor([30, 0, 52, 52],"bool"), list[30,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 52, 52],"bool"), list[30,8,52,52,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 52, 52].  Tensor sizes: [30, 0, 52, 52]
2025-03-05 15:23:00.533592 test begin: paddle.broadcast_to(Tensor([30, 0, 53, 13],"bool"), list[30,8,53,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 53, 13],"bool"), list[30,8,53,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 53, 13].  Tensor sizes: [30, 0, 53, 13]
2025-03-05 15:23:00.534126 test begin: paddle.broadcast_to(Tensor([30, 0, 53, 21],"bool"), list[30,8,53,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 53, 21],"bool"), list[30,8,53,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 53, 21].  Tensor sizes: [30, 0, 53, 21]
2025-03-05 15:23:00.534685 test begin: paddle.broadcast_to(Tensor([30, 0, 53, 53],"bool"), list[30,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 53, 53],"bool"), list[30,8,53,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 53, 53].  Tensor sizes: [30, 0, 53, 53]
2025-03-05 15:23:00.535216 test begin: paddle.broadcast_to(Tensor([30, 0, 54, 17],"bool"), list[30,8,54,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 54, 17],"bool"), list[30,8,54,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 54, 17].  Tensor sizes: [30, 0, 54, 17]
2025-03-05 15:23:00.535946 test begin: paddle.broadcast_to(Tensor([30, 0, 54, 21],"bool"), list[30,8,54,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 54, 21],"bool"), list[30,8,54,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 54, 21].  Tensor sizes: [30, 0, 54, 21]
2025-03-05 15:23:00.536492 test begin: paddle.broadcast_to(Tensor([30, 0, 54, 54],"bool"), list[30,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 54, 54],"bool"), list[30,8,54,54,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 54, 54].  Tensor sizes: [30, 0, 54, 54]
2025-03-05 15:23:00.537025 test begin: paddle.broadcast_to(Tensor([30, 0, 55, 13],"bool"), list[30,8,55,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 55, 13],"bool"), list[30,8,55,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 55, 13].  Tensor sizes: [30, 0, 55, 13]
2025-03-05 15:23:00.537560 test begin: paddle.broadcast_to(Tensor([30, 0, 55, 17],"bool"), list[30,8,55,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 55, 17],"bool"), list[30,8,55,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 55, 17].  Tensor sizes: [30, 0, 55, 17]
2025-03-05 15:23:00.538111 test begin: paddle.broadcast_to(Tensor([30, 0, 55, 25],"bool"), list[30,8,55,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 55, 25],"bool"), list[30,8,55,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 55, 25].  Tensor sizes: [30, 0, 55, 25]
2025-03-05 15:23:00.538714 test begin: paddle.broadcast_to(Tensor([30, 0, 55, 55],"bool"), list[30,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 55, 55],"bool"), list[30,8,55,55,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 55, 55].  Tensor sizes: [30, 0, 55, 55]
2025-03-05 15:23:00.539259 test begin: paddle.broadcast_to(Tensor([30, 0, 56, 25],"bool"), list[30,8,56,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 56, 25],"bool"), list[30,8,56,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 56, 25].  Tensor sizes: [30, 0, 56, 25]
2025-03-05 15:23:00.539808 test begin: paddle.broadcast_to(Tensor([30, 0, 56, 56],"bool"), list[30,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 56, 56],"bool"), list[30,8,56,56,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 56, 56].  Tensor sizes: [30, 0, 56, 56]
2025-03-05 15:23:00.540384 test begin: paddle.broadcast_to(Tensor([30, 0, 57, 21],"bool"), list[30,8,57,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 57, 21],"bool"), list[30,8,57,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 57, 21].  Tensor sizes: [30, 0, 57, 21]
2025-03-05 15:23:00.540956 test begin: paddle.broadcast_to(Tensor([30, 0, 57, 57],"bool"), list[30,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 57, 57],"bool"), list[30,8,57,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 57, 57].  Tensor sizes: [30, 0, 57, 57]
2025-03-05 15:23:00.541486 test begin: paddle.broadcast_to(Tensor([30, 0, 59, 21],"bool"), list[30,8,59,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 59, 21],"bool"), list[30,8,59,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 59, 21].  Tensor sizes: [30, 0, 59, 21]
2025-03-05 15:23:00.542044 test begin: paddle.broadcast_to(Tensor([30, 0, 59, 25],"bool"), list[30,8,59,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 59, 25],"bool"), list[30,8,59,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 59, 25].  Tensor sizes: [30, 0, 59, 25]
2025-03-05 15:23:00.542568 test begin: paddle.broadcast_to(Tensor([30, 0, 59, 59],"bool"), list[30,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 59, 59],"bool"), list[30,8,59,59,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 59, 59].  Tensor sizes: [30, 0, 59, 59]
2025-03-05 15:23:00.543106 test begin: paddle.broadcast_to(Tensor([30, 0, 61, 17],"bool"), list[30,8,61,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 61, 17],"bool"), list[30,8,61,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 61, 17].  Tensor sizes: [30, 0, 61, 17]
2025-03-05 15:23:00.543635 test begin: paddle.broadcast_to(Tensor([30, 0, 61, 25],"bool"), list[30,8,61,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 61, 25],"bool"), list[30,8,61,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 61, 25].  Tensor sizes: [30, 0, 61, 25]
2025-03-05 15:23:00.544170 test begin: paddle.broadcast_to(Tensor([30, 0, 61, 61],"bool"), list[30,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 61, 61],"bool"), list[30,8,61,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 61, 61].  Tensor sizes: [30, 0, 61, 61]
2025-03-05 15:23:00.544710 test begin: paddle.broadcast_to(Tensor([30, 0, 62, 33],"bool"), list[30,8,62,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 62, 33],"bool"), list[30,8,62,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 62, 33].  Tensor sizes: [30, 0, 62, 33]
2025-03-05 15:23:00.545245 test begin: paddle.broadcast_to(Tensor([30, 0, 62, 62],"bool"), list[30,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 62, 62],"bool"), list[30,8,62,62,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 62, 62].  Tensor sizes: [30, 0, 62, 62]
2025-03-05 15:23:00.545812 test begin: paddle.broadcast_to(Tensor([30, 0, 63, 17],"bool"), list[30,8,63,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 63, 17],"bool"), list[30,8,63,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 63, 17].  Tensor sizes: [30, 0, 63, 17]
2025-03-05 15:23:00.546351 test begin: paddle.broadcast_to(Tensor([30, 0, 63, 25],"bool"), list[30,8,63,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 63, 25],"bool"), list[30,8,63,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 63, 25].  Tensor sizes: [30, 0, 63, 25]
2025-03-05 15:23:00.546887 test begin: paddle.broadcast_to(Tensor([30, 0, 63, 33],"bool"), list[30,8,63,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 63, 33],"bool"), list[30,8,63,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 63, 33].  Tensor sizes: [30, 0, 63, 33]
2025-03-05 15:23:00.547417 test begin: paddle.broadcast_to(Tensor([30, 0, 63, 63],"bool"), list[30,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 63, 63],"bool"), list[30,8,63,63,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 63, 63].  Tensor sizes: [30, 0, 63, 63]
2025-03-05 15:23:00.547953 test begin: paddle.broadcast_to(Tensor([30, 0, 64, 21],"bool"), list[30,8,64,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 64, 21],"bool"), list[30,8,64,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 64, 21].  Tensor sizes: [30, 0, 64, 21]
2025-03-05 15:23:00.548475 test begin: paddle.broadcast_to(Tensor([30, 0, 64, 33],"bool"), list[30,8,64,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 64, 33],"bool"), list[30,8,64,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 64, 33].  Tensor sizes: [30, 0, 64, 33]
2025-03-05 15:23:00.549024 test begin: paddle.broadcast_to(Tensor([30, 0, 64, 64],"bool"), list[30,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 64, 64],"bool"), list[30,8,64,64,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 64, 64].  Tensor sizes: [30, 0, 64, 64]
2025-03-05 15:23:00.549558 test begin: paddle.broadcast_to(Tensor([30, 0, 66, 21],"bool"), list[30,8,66,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 66, 21],"bool"), list[30,8,66,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 66, 21].  Tensor sizes: [30, 0, 66, 21]
2025-03-05 15:23:00.550142 test begin: paddle.broadcast_to(Tensor([30, 0, 66, 25],"bool"), list[30,8,66,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 66, 25],"bool"), list[30,8,66,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 66, 25].  Tensor sizes: [30, 0, 66, 25]
2025-03-05 15:23:00.550693 test begin: paddle.broadcast_to(Tensor([30, 0, 66, 66],"bool"), list[30,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 66, 66],"bool"), list[30,8,66,66,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 66, 66].  Tensor sizes: [30, 0, 66, 66]
2025-03-05 15:23:00.551288 test begin: paddle.broadcast_to(Tensor([30, 0, 67, 21],"bool"), list[30,8,67,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 67, 21],"bool"), list[30,8,67,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 67, 21].  Tensor sizes: [30, 0, 67, 21]
2025-03-05 15:23:00.551861 test begin: paddle.broadcast_to(Tensor([30, 0, 67, 25],"bool"), list[30,8,67,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 67, 25],"bool"), list[30,8,67,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 67, 25].  Tensor sizes: [30, 0, 67, 25]
2025-03-05 15:23:00.552387 test begin: paddle.broadcast_to(Tensor([30, 0, 67, 67],"bool"), list[30,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 67, 67],"bool"), list[30,8,67,67,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 67, 67].  Tensor sizes: [30, 0, 67, 67]
2025-03-05 15:23:00.552931 test begin: paddle.broadcast_to(Tensor([30, 0, 68, 29],"bool"), list[30,8,68,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 68, 29],"bool"), list[30,8,68,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 68, 29].  Tensor sizes: [30, 0, 68, 29]
2025-03-05 15:23:00.553466 test begin: paddle.broadcast_to(Tensor([30, 0, 68, 33],"bool"), list[30,8,68,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 68, 33],"bool"), list[30,8,68,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 68, 33].  Tensor sizes: [30, 0, 68, 33]
2025-03-05 15:23:00.554021 test begin: paddle.broadcast_to(Tensor([30, 0, 68, 41],"bool"), list[30,8,68,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 68, 41],"bool"), list[30,8,68,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 68, 41].  Tensor sizes: [30, 0, 68, 41]
2025-03-05 15:23:00.554553 test begin: paddle.broadcast_to(Tensor([30, 0, 68, 68],"bool"), list[30,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 68, 68],"bool"), list[30,8,68,68,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 68, 68].  Tensor sizes: [30, 0, 68, 68]
2025-03-05 15:23:00.555106 test begin: paddle.broadcast_to(Tensor([30, 0, 69, 41],"bool"), list[30,8,69,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 69, 41],"bool"), list[30,8,69,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 69, 41].  Tensor sizes: [30, 0, 69, 41]
2025-03-05 15:23:00.555635 test begin: paddle.broadcast_to(Tensor([30, 0, 69, 69],"bool"), list[30,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 69, 69],"bool"), list[30,8,69,69,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 69, 69].  Tensor sizes: [30, 0, 69, 69]
2025-03-05 15:23:00.556149 test begin: paddle.broadcast_to(Tensor([30, 0, 70, 49],"bool"), list[30,8,70,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 70, 49],"bool"), list[30,8,70,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 70, 49].  Tensor sizes: [30, 0, 70, 49]
2025-03-05 15:23:00.556700 test begin: paddle.broadcast_to(Tensor([30, 0, 70, 70],"bool"), list[30,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 70, 70],"bool"), list[30,8,70,70,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 70, 70].  Tensor sizes: [30, 0, 70, 70]
2025-03-05 15:23:00.557229 test begin: paddle.broadcast_to(Tensor([30, 0, 71, 21],"bool"), list[30,8,71,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 71, 21],"bool"), list[30,8,71,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 71, 21].  Tensor sizes: [30, 0, 71, 21]
2025-03-05 15:23:00.557763 test begin: paddle.broadcast_to(Tensor([30, 0, 71, 25],"bool"), list[30,8,71,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 71, 25],"bool"), list[30,8,71,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 71, 25].  Tensor sizes: [30, 0, 71, 25]
2025-03-05 15:23:00.558287 test begin: paddle.broadcast_to(Tensor([30, 0, 71, 29],"bool"), list[30,8,71,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 71, 29],"bool"), list[30,8,71,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 71, 29].  Tensor sizes: [30, 0, 71, 29]
2025-03-05 15:23:00.558824 test begin: paddle.broadcast_to(Tensor([30, 0, 71, 71],"bool"), list[30,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 71, 71],"bool"), list[30,8,71,71,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 71, 71].  Tensor sizes: [30, 0, 71, 71]
2025-03-05 15:23:00.559357 test begin: paddle.broadcast_to(Tensor([30, 0, 72, 29],"bool"), list[30,8,72,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 72, 29],"bool"), list[30,8,72,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 72, 29].  Tensor sizes: [30, 0, 72, 29]
2025-03-05 15:23:00.559907 test begin: paddle.broadcast_to(Tensor([30, 0, 72, 72],"bool"), list[30,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 72, 72],"bool"), list[30,8,72,72,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 72, 72].  Tensor sizes: [30, 0, 72, 72]
2025-03-05 15:23:00.560438 test begin: paddle.broadcast_to(Tensor([30, 0, 73, 29],"bool"), list[30,8,73,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 73, 29],"bool"), list[30,8,73,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 73, 29].  Tensor sizes: [30, 0, 73, 29]
2025-03-05 15:23:00.560989 test begin: paddle.broadcast_to(Tensor([30, 0, 73, 41],"bool"), list[30,8,73,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 73, 41],"bool"), list[30,8,73,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 73, 41].  Tensor sizes: [30, 0, 73, 41]
2025-03-05 15:23:00.561523 test begin: paddle.broadcast_to(Tensor([30, 0, 73, 73],"bool"), list[30,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 73, 73],"bool"), list[30,8,73,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 73, 73].  Tensor sizes: [30, 0, 73, 73]
2025-03-05 15:23:00.562074 test begin: paddle.broadcast_to(Tensor([30, 0, 74, 29],"bool"), list[30,8,74,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 74, 29],"bool"), list[30,8,74,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 74, 29].  Tensor sizes: [30, 0, 74, 29]
2025-03-05 15:23:00.562659 test begin: paddle.broadcast_to(Tensor([30, 0, 74, 74],"bool"), list[30,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 74, 74],"bool"), list[30,8,74,74,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 74, 74].  Tensor sizes: [30, 0, 74, 74]
2025-03-05 15:23:00.563206 test begin: paddle.broadcast_to(Tensor([30, 0, 75, 17],"bool"), list[30,8,75,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 75, 17],"bool"), list[30,8,75,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 75, 17].  Tensor sizes: [30, 0, 75, 17]
2025-03-05 15:23:00.563767 test begin: paddle.broadcast_to(Tensor([30, 0, 75, 21],"bool"), list[30,8,75,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 75, 21],"bool"), list[30,8,75,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 75, 21].  Tensor sizes: [30, 0, 75, 21]
2025-03-05 15:23:00.564320 test begin: paddle.broadcast_to(Tensor([30, 0, 75, 75],"bool"), list[30,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 75, 75],"bool"), list[30,8,75,75,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 75, 75].  Tensor sizes: [30, 0, 75, 75]
2025-03-05 15:23:00.564872 test begin: paddle.broadcast_to(Tensor([30, 0, 76, 29],"bool"), list[30,8,76,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 76, 29],"bool"), list[30,8,76,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 76, 29].  Tensor sizes: [30, 0, 76, 29]
2025-03-05 15:23:00.565458 test begin: paddle.broadcast_to(Tensor([30, 0, 76, 76],"bool"), list[30,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 76, 76],"bool"), list[30,8,76,76,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 76, 76].  Tensor sizes: [30, 0, 76, 76]
2025-03-05 15:23:00.566016 test begin: paddle.broadcast_to(Tensor([30, 0, 77, 21],"bool"), list[30,8,77,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 77, 21],"bool"), list[30,8,77,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 77, 21].  Tensor sizes: [30, 0, 77, 21]
2025-03-05 15:23:00.566552 test begin: paddle.broadcast_to(Tensor([30, 0, 77, 25],"bool"), list[30,8,77,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 77, 25],"bool"), list[30,8,77,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 77, 25].  Tensor sizes: [30, 0, 77, 25]
2025-03-05 15:23:00.567100 test begin: paddle.broadcast_to(Tensor([30, 0, 77, 29],"bool"), list[30,8,77,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 77, 29],"bool"), list[30,8,77,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 77, 29].  Tensor sizes: [30, 0, 77, 29]
2025-03-05 15:23:00.567645 test begin: paddle.broadcast_to(Tensor([30, 0, 77, 77],"bool"), list[30,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 77, 77],"bool"), list[30,8,77,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 77, 77].  Tensor sizes: [30, 0, 77, 77]
2025-03-05 15:23:00.568241 test begin: paddle.broadcast_to(Tensor([30, 0, 78, 25],"bool"), list[30,8,78,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 78, 25],"bool"), list[30,8,78,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 78, 25].  Tensor sizes: [30, 0, 78, 25]
2025-03-05 15:23:00.568886 test begin: paddle.broadcast_to(Tensor([30, 0, 78, 33],"bool"), list[30,8,78,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 78, 33],"bool"), list[30,8,78,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 78, 33].  Tensor sizes: [30, 0, 78, 33]
2025-03-05 15:23:00.569421 test begin: paddle.broadcast_to(Tensor([30, 0, 78, 41],"bool"), list[30,8,78,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 78, 41],"bool"), list[30,8,78,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 78, 41].  Tensor sizes: [30, 0, 78, 41]
2025-03-05 15:23:00.569981 test begin: paddle.broadcast_to(Tensor([30, 0, 78, 78],"bool"), list[30,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 78, 78],"bool"), list[30,8,78,78,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 78, 78].  Tensor sizes: [30, 0, 78, 78]
2025-03-05 15:23:00.570499 test begin: paddle.broadcast_to(Tensor([30, 0, 79, 57],"bool"), list[30,8,79,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 79, 57],"bool"), list[30,8,79,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 79, 57].  Tensor sizes: [30, 0, 79, 57]
2025-03-05 15:23:00.571041 test begin: paddle.broadcast_to(Tensor([30, 0, 79, 79],"bool"), list[30,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 79, 79],"bool"), list[30,8,79,79,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 79, 79].  Tensor sizes: [30, 0, 79, 79]
2025-03-05 15:23:00.571568 test begin: paddle.broadcast_to(Tensor([30, 0, 80, 33],"bool"), list[30,8,80,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 80, 33],"bool"), list[30,8,80,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 80, 33].  Tensor sizes: [30, 0, 80, 33]
2025-03-05 15:23:00.572124 test begin: paddle.broadcast_to(Tensor([30, 0, 80, 80],"bool"), list[30,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 80, 80],"bool"), list[30,8,80,80,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 80, 80].  Tensor sizes: [30, 0, 80, 80]
2025-03-05 15:23:00.572659 test begin: paddle.broadcast_to(Tensor([30, 0, 81, 21],"bool"), list[30,8,81,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 81, 21],"bool"), list[30,8,81,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 81, 21].  Tensor sizes: [30, 0, 81, 21]
2025-03-05 15:23:00.573172 test begin: paddle.broadcast_to(Tensor([30, 0, 81, 29],"bool"), list[30,8,81,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 81, 29],"bool"), list[30,8,81,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 81, 29].  Tensor sizes: [30, 0, 81, 29]
2025-03-05 15:23:00.573739 test begin: paddle.broadcast_to(Tensor([30, 0, 81, 81],"bool"), list[30,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 81, 81],"bool"), list[30,8,81,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 81, 81].  Tensor sizes: [30, 0, 81, 81]
2025-03-05 15:23:00.574255 test begin: paddle.broadcast_to(Tensor([30, 0, 82, 17],"bool"), list[30,8,82,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 82, 17],"bool"), list[30,8,82,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 82, 17].  Tensor sizes: [30, 0, 82, 17]
2025-03-05 15:23:00.574790 test begin: paddle.broadcast_to(Tensor([30, 0, 82, 33],"bool"), list[30,8,82,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 82, 33],"bool"), list[30,8,82,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 82, 33].  Tensor sizes: [30, 0, 82, 33]
2025-03-05 15:23:00.575313 test begin: paddle.broadcast_to(Tensor([30, 0, 82, 41],"bool"), list[30,8,82,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 82, 41],"bool"), list[30,8,82,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 82, 41].  Tensor sizes: [30, 0, 82, 41]
2025-03-05 15:23:00.575830 test begin: paddle.broadcast_to(Tensor([30, 0, 82, 82],"bool"), list[30,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 82, 82],"bool"), list[30,8,82,82,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 82, 82].  Tensor sizes: [30, 0, 82, 82]
2025-03-05 15:23:00.576352 test begin: paddle.broadcast_to(Tensor([30, 0, 83, 41],"bool"), list[30,8,83,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 83, 41],"bool"), list[30,8,83,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 83, 41].  Tensor sizes: [30, 0, 83, 41]
2025-03-05 15:23:00.576921 test begin: paddle.broadcast_to(Tensor([30, 0, 83, 49],"bool"), list[30,8,83,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 83, 49],"bool"), list[30,8,83,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 83, 49].  Tensor sizes: [30, 0, 83, 49]
2025-03-05 15:23:00.577464 test begin: paddle.broadcast_to(Tensor([30, 0, 83, 83],"bool"), list[30,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 83, 83],"bool"), list[30,8,83,83,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 83, 83].  Tensor sizes: [30, 0, 83, 83]
2025-03-05 15:23:00.578007 test begin: paddle.broadcast_to(Tensor([30, 0, 84, 25],"bool"), list[30,8,84,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 84, 25],"bool"), list[30,8,84,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 84, 25].  Tensor sizes: [30, 0, 84, 25]
2025-03-05 15:23:00.578512 test begin: paddle.broadcast_to(Tensor([30, 0, 84, 41],"bool"), list[30,8,84,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 84, 41],"bool"), list[30,8,84,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 84, 41].  Tensor sizes: [30, 0, 84, 41]
2025-03-05 15:23:00.579054 test begin: paddle.broadcast_to(Tensor([30, 0, 84, 84],"bool"), list[30,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 84, 84],"bool"), list[30,8,84,84,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 84, 84].  Tensor sizes: [30, 0, 84, 84]
2025-03-05 15:23:00.579600 test begin: paddle.broadcast_to(Tensor([30, 0, 85, 33],"bool"), list[30,8,85,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 85, 33],"bool"), list[30,8,85,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 85, 33].  Tensor sizes: [30, 0, 85, 33]
2025-03-05 15:23:00.580112 test begin: paddle.broadcast_to(Tensor([30, 0, 85, 85],"bool"), list[30,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 85, 85],"bool"), list[30,8,85,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 85, 85].  Tensor sizes: [30, 0, 85, 85]
2025-03-05 15:23:00.580636 test begin: paddle.broadcast_to(Tensor([30, 0, 86, 25],"bool"), list[30,8,86,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 86, 25],"bool"), list[30,8,86,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 86, 25].  Tensor sizes: [30, 0, 86, 25]
2025-03-05 15:23:00.581152 test begin: paddle.broadcast_to(Tensor([30, 0, 86, 33],"bool"), list[30,8,86,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 86, 33],"bool"), list[30,8,86,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 86, 33].  Tensor sizes: [30, 0, 86, 33]
2025-03-05 15:23:00.581703 test begin: paddle.broadcast_to(Tensor([30, 0, 86, 37],"bool"), list[30,8,86,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 86, 37],"bool"), list[30,8,86,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 86, 37].  Tensor sizes: [30, 0, 86, 37]
2025-03-05 15:23:00.582285 test begin: paddle.broadcast_to(Tensor([30, 0, 86, 41],"bool"), list[30,8,86,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 86, 41],"bool"), list[30,8,86,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 86, 41].  Tensor sizes: [30, 0, 86, 41]
2025-03-05 15:23:00.582820 test begin: paddle.broadcast_to(Tensor([30, 0, 86, 86],"bool"), list[30,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 86, 86],"bool"), list[30,8,86,86,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 86, 86].  Tensor sizes: [30, 0, 86, 86]
2025-03-05 15:23:00.583339 test begin: paddle.broadcast_to(Tensor([30, 0, 87, 33],"bool"), list[30,8,87,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 87, 33],"bool"), list[30,8,87,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 87, 33].  Tensor sizes: [30, 0, 87, 33]
2025-03-05 15:23:00.583928 test begin: paddle.broadcast_to(Tensor([30, 0, 87, 49],"bool"), list[30,8,87,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 87, 49],"bool"), list[30,8,87,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 87, 49].  Tensor sizes: [30, 0, 87, 49]
2025-03-05 15:23:00.584444 test begin: paddle.broadcast_to(Tensor([30, 0, 87, 87],"bool"), list[30,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 87, 87],"bool"), list[30,8,87,87,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 87, 87].  Tensor sizes: [30, 0, 87, 87]
2025-03-05 15:23:00.584984 test begin: paddle.broadcast_to(Tensor([30, 0, 88, 25],"bool"), list[30,8,88,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 88, 25],"bool"), list[30,8,88,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 88, 25].  Tensor sizes: [30, 0, 88, 25]
2025-03-05 15:23:00.585507 test begin: paddle.broadcast_to(Tensor([30, 0, 88, 37],"bool"), list[30,8,88,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 88, 37],"bool"), list[30,8,88,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 88, 37].  Tensor sizes: [30, 0, 88, 37]
2025-03-05 15:23:00.586038 test begin: paddle.broadcast_to(Tensor([30, 0, 88, 88],"bool"), list[30,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 88, 88],"bool"), list[30,8,88,88,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 88, 88].  Tensor sizes: [30, 0, 88, 88]
2025-03-05 15:23:00.586566 test begin: paddle.broadcast_to(Tensor([30, 0, 90, 13],"bool"), list[30,8,90,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 90, 13],"bool"), list[30,8,90,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 90, 13].  Tensor sizes: [30, 0, 90, 13]
2025-03-05 15:23:00.587099 test begin: paddle.broadcast_to(Tensor([30, 0, 90, 33],"bool"), list[30,8,90,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 90, 33],"bool"), list[30,8,90,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 90, 33].  Tensor sizes: [30, 0, 90, 33]
2025-03-05 15:23:00.587624 test begin: paddle.broadcast_to(Tensor([30, 0, 90, 41],"bool"), list[30,8,90,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 90, 41],"bool"), list[30,8,90,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 90, 41].  Tensor sizes: [30, 0, 90, 41]
2025-03-05 15:23:00.588145 test begin: paddle.broadcast_to(Tensor([30, 0, 90, 90],"bool"), list[30,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 90, 90],"bool"), list[30,8,90,90,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 90, 90].  Tensor sizes: [30, 0, 90, 90]
2025-03-05 15:23:00.588671 test begin: paddle.broadcast_to(Tensor([30, 0, 91, 29],"bool"), list[30,8,91,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 91, 29],"bool"), list[30,8,91,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 91, 29].  Tensor sizes: [30, 0, 91, 29]
2025-03-05 15:23:00.589199 test begin: paddle.broadcast_to(Tensor([30, 0, 91, 41],"bool"), list[30,8,91,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 91, 41],"bool"), list[30,8,91,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 91, 41].  Tensor sizes: [30, 0, 91, 41]
2025-03-05 15:23:00.589735 test begin: paddle.broadcast_to(Tensor([30, 0, 91, 57],"bool"), list[30,8,91,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 91, 57],"bool"), list[30,8,91,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 91, 57].  Tensor sizes: [30, 0, 91, 57]
2025-03-05 15:23:00.590256 test begin: paddle.broadcast_to(Tensor([30, 0, 91, 91],"bool"), list[30,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 91, 91],"bool"), list[30,8,91,91,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 91, 91].  Tensor sizes: [30, 0, 91, 91]
2025-03-05 15:23:00.590821 test begin: paddle.broadcast_to(Tensor([30, 0, 92, 33],"bool"), list[30,8,92,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 92, 33],"bool"), list[30,8,92,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 92, 33].  Tensor sizes: [30, 0, 92, 33]
2025-03-05 15:23:00.591341 test begin: paddle.broadcast_to(Tensor([30, 0, 92, 49],"bool"), list[30,8,92,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 92, 49],"bool"), list[30,8,92,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 92, 49].  Tensor sizes: [30, 0, 92, 49]
2025-03-05 15:23:00.591876 test begin: paddle.broadcast_to(Tensor([30, 0, 92, 92],"bool"), list[30,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 92, 92],"bool"), list[30,8,92,92,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 92, 92].  Tensor sizes: [30, 0, 92, 92]
2025-03-05 15:23:00.592402 test begin: paddle.broadcast_to(Tensor([30, 0, 93, 21],"bool"), list[30,8,93,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 93, 21],"bool"), list[30,8,93,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 93, 21].  Tensor sizes: [30, 0, 93, 21]
2025-03-05 15:23:00.592920 test begin: paddle.broadcast_to(Tensor([30, 0, 93, 33],"bool"), list[30,8,93,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 93, 33],"bool"), list[30,8,93,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 93, 33].  Tensor sizes: [30, 0, 93, 33]
2025-03-05 15:23:00.593430 test begin: paddle.broadcast_to(Tensor([30, 0, 93, 49],"bool"), list[30,8,93,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 93, 49],"bool"), list[30,8,93,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 93, 49].  Tensor sizes: [30, 0, 93, 49]
2025-03-05 15:23:00.593946 test begin: paddle.broadcast_to(Tensor([30, 0, 93, 93],"bool"), list[30,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 93, 93],"bool"), list[30,8,93,93,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 93, 93].  Tensor sizes: [30, 0, 93, 93]
2025-03-05 15:23:00.594470 test begin: paddle.broadcast_to(Tensor([30, 0, 94, 33],"bool"), list[30,8,94,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 94, 33],"bool"), list[30,8,94,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 94, 33].  Tensor sizes: [30, 0, 94, 33]
2025-03-05 15:23:00.594992 test begin: paddle.broadcast_to(Tensor([30, 0, 94, 94],"bool"), list[30,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 94, 94],"bool"), list[30,8,94,94,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 94, 94].  Tensor sizes: [30, 0, 94, 94]
2025-03-05 15:23:00.595507 test begin: paddle.broadcast_to(Tensor([30, 0, 95, 57],"bool"), list[30,8,95,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 95, 57],"bool"), list[30,8,95,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 95, 57].  Tensor sizes: [30, 0, 95, 57]
2025-03-05 15:23:00.596051 test begin: paddle.broadcast_to(Tensor([30, 0, 95, 95],"bool"), list[30,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 95, 95],"bool"), list[30,8,95,95,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 95, 95].  Tensor sizes: [30, 0, 95, 95]
2025-03-05 15:23:00.596566 test begin: paddle.broadcast_to(Tensor([30, 0, 96, 29],"bool"), list[30,8,96,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 96, 29],"bool"), list[30,8,96,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 96, 29].  Tensor sizes: [30, 0, 96, 29]
2025-03-05 15:23:00.597084 test begin: paddle.broadcast_to(Tensor([30, 0, 96, 37],"bool"), list[30,8,96,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 96, 37],"bool"), list[30,8,96,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 96, 37].  Tensor sizes: [30, 0, 96, 37]
2025-03-05 15:23:00.597599 test begin: paddle.broadcast_to(Tensor([30, 0, 96, 96],"bool"), list[30,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 96, 96],"bool"), list[30,8,96,96,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 96, 96].  Tensor sizes: [30, 0, 96, 96]
2025-03-05 15:23:00.598102 test begin: paddle.broadcast_to(Tensor([30, 0, 97, 33],"bool"), list[30,8,97,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 97, 33],"bool"), list[30,8,97,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 97, 33].  Tensor sizes: [30, 0, 97, 33]
2025-03-05 15:23:00.598637 test begin: paddle.broadcast_to(Tensor([30, 0, 97, 37],"bool"), list[30,8,97,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 97, 37],"bool"), list[30,8,97,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 97, 37].  Tensor sizes: [30, 0, 97, 37]
2025-03-05 15:23:00.599151 test begin: paddle.broadcast_to(Tensor([30, 0, 97, 41],"bool"), list[30,8,97,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 97, 41],"bool"), list[30,8,97,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 97, 41].  Tensor sizes: [30, 0, 97, 41]
2025-03-05 15:23:00.599674 test begin: paddle.broadcast_to(Tensor([30, 0, 97, 49],"bool"), list[30,8,97,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 97, 49],"bool"), list[30,8,97,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 97, 49].  Tensor sizes: [30, 0, 97, 49]
2025-03-05 15:23:00.600197 test begin: paddle.broadcast_to(Tensor([30, 0, 97, 97],"bool"), list[30,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 97, 97],"bool"), list[30,8,97,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 97, 97].  Tensor sizes: [30, 0, 97, 97]
2025-03-05 15:23:00.601150 test begin: paddle.broadcast_to(Tensor([30, 0, 98, 49],"bool"), list[30,8,98,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 98, 49],"bool"), list[30,8,98,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 98, 49].  Tensor sizes: [30, 0, 98, 49]
2025-03-05 15:23:00.601774 test begin: paddle.broadcast_to(Tensor([30, 0, 98, 57],"bool"), list[30,8,98,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 98, 57],"bool"), list[30,8,98,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 98, 57].  Tensor sizes: [30, 0, 98, 57]
2025-03-05 15:23:00.602310 test begin: paddle.broadcast_to(Tensor([30, 0, 98, 98],"bool"), list[30,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 98, 98],"bool"), list[30,8,98,98,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 98, 98].  Tensor sizes: [30, 0, 98, 98]
2025-03-05 15:23:00.602817 test begin: paddle.broadcast_to(Tensor([30, 0, 99, 29],"bool"), list[30,8,99,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 99, 29],"bool"), list[30,8,99,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 99, 29].  Tensor sizes: [30, 0, 99, 29]
2025-03-05 15:23:00.603321 test begin: paddle.broadcast_to(Tensor([30, 0, 99, 99],"bool"), list[30,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([30, 0, 99, 99],"bool"), list[30,8,99,99,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 8, 99, 99].  Tensor sizes: [30, 0, 99, 99]
2025-03-05 15:23:00.603843 test begin: paddle.broadcast_to(Tensor([30, 0],"bool"), list[30,3,], )

[torch error] paddle.broadcast_to(Tensor([30, 0],"bool"), list[30,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 3].  Tensor sizes: [30, 0]
2025-03-05 15:23:00.604341 test begin: paddle.broadcast_to(Tensor([30, 0],"float32"), tuple(30,4,), )

[torch error] paddle.broadcast_to(Tensor([30, 0],"float32"), tuple(30,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 4].  Tensor sizes: [30, 0]
2025-03-05 15:23:00.604849 test begin: paddle.broadcast_to(Tensor([30, 0],"float32"), tuple(30,5,), )

[torch error] paddle.broadcast_to(Tensor([30, 0],"float32"), tuple(30,5,), ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 5].  Tensor sizes: [30, 0]
2025-03-05 15:23:00.605342 test begin: paddle.broadcast_to(Tensor([30, 0],"int64"), tuple(30,1,), )

[torch error] paddle.broadcast_to(Tensor([30, 0],"int64"), tuple(30,1,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 1].  Tensor sizes: [30, 0]
2025-03-05 15:23:00.605920 test begin: paddle.broadcast_to(Tensor([30, 0],"int64"), tuple(30,4,), )

[torch error] paddle.broadcast_to(Tensor([30, 0],"int64"), tuple(30,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [30, 4].  Tensor sizes: [30, 0]
2025-03-05 15:23:00.606744 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 100],"bool"), list[30,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 100],"bool"), list[30,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 100, 100].  Tensor sizes: [30, 1, 0, 100]
2025-03-05 15:23:00.607354 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 101],"bool"), list[30,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 101],"bool"), list[30,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 101, 101].  Tensor sizes: [30, 1, 0, 101]
2025-03-05 15:23:00.607925 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 102],"bool"), list[30,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 102],"bool"), list[30,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 102, 102].  Tensor sizes: [30, 1, 0, 102]
2025-03-05 15:23:00.608434 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 103],"bool"), list[30,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 103],"bool"), list[30,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 103, 103].  Tensor sizes: [30, 1, 0, 103]
2025-03-05 15:23:00.608964 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 104],"bool"), list[30,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 104],"bool"), list[30,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 104, 104].  Tensor sizes: [30, 1, 0, 104]
2025-03-05 15:23:00.609490 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,147,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,147,105,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 147, 105].  Tensor sizes: [30, 1, 0, 105]
2025-03-05 15:23:00.610023 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,164,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,164,105,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 164, 105].  Tensor sizes: [30, 1, 0, 105]
2025-03-05 15:23:00.610541 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,165,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,165,105,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 165, 105].  Tensor sizes: [30, 1, 0, 105]
2025-03-05 15:23:00.611068 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,187,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,187,105,], ) 
 The expanded size of the tensor (187) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 187, 105].  Tensor sizes: [30, 1, 0, 105]
2025-03-05 15:23:00.611590 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,193,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,193,105,], ) 
 The expanded size of the tensor (193) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 193, 105].  Tensor sizes: [30, 1, 0, 105]
2025-03-05 15:23:00.612104 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,203,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,203,105,], ) 
 The expanded size of the tensor (203) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 203, 105].  Tensor sizes: [30, 1, 0, 105]
2025-03-05 15:23:00.612636 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,207,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,207,105,], ) 
 The expanded size of the tensor (207) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 207, 105].  Tensor sizes: [30, 1, 0, 105]
2025-03-05 15:23:00.613147 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,211,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 105],"bool"), list[30,8,211,105,], ) 
 The expanded size of the tensor (211) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 211, 105].  Tensor sizes: [30, 1, 0, 105]
2025-03-05 15:23:00.613669 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 106],"bool"), list[30,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 106],"bool"), list[30,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 106, 106].  Tensor sizes: [30, 1, 0, 106]
2025-03-05 15:23:00.614186 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 108],"bool"), list[30,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 108],"bool"), list[30,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 108, 108].  Tensor sizes: [30, 1, 0, 108]
2025-03-05 15:23:00.614727 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 109],"bool"), list[30,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 109],"bool"), list[30,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 109, 109].  Tensor sizes: [30, 1, 0, 109]
2025-03-05 15:23:00.615236 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 110],"bool"), list[30,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 110],"bool"), list[30,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 110, 110].  Tensor sizes: [30, 1, 0, 110]
2025-03-05 15:23:00.615761 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 111],"bool"), list[30,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 111],"bool"), list[30,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 111, 111].  Tensor sizes: [30, 1, 0, 111]
2025-03-05 15:23:00.616266 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 112],"bool"), list[30,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 112],"bool"), list[30,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 112, 112].  Tensor sizes: [30, 1, 0, 112]
2025-03-05 15:23:00.616797 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 113, 113].  Tensor sizes: [30, 1, 0, 113]
2025-03-05 15:23:00.617308 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,163,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,163,113,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 163, 113].  Tensor sizes: [30, 1, 0, 113]
2025-03-05 15:23:00.617837 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,164,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,164,113,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 164, 113].  Tensor sizes: [30, 1, 0, 113]
2025-03-05 15:23:00.618360 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,175,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,175,113,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 175, 113].  Tensor sizes: [30, 1, 0, 113]
2025-03-05 15:23:00.619333 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,181,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,181,113,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 181, 113].  Tensor sizes: [30, 1, 0, 113]
2025-03-05 15:23:00.620024 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,222,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,222,113,], ) 
 The expanded size of the tensor (222) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 222, 113].  Tensor sizes: [30, 1, 0, 113]
2025-03-05 15:23:00.620642 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,241,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,241,113,], ) 
 The expanded size of the tensor (241) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 241, 113].  Tensor sizes: [30, 1, 0, 113]
2025-03-05 15:23:00.621337 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,302,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 113],"bool"), list[30,8,302,113,], ) 
 The expanded size of the tensor (302) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 302, 113].  Tensor sizes: [30, 1, 0, 113]
2025-03-05 15:23:00.621982 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 114],"bool"), list[30,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 114],"bool"), list[30,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 114, 114].  Tensor sizes: [30, 1, 0, 114]
2025-03-05 15:23:00.622535 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 115],"bool"), list[30,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 115],"bool"), list[30,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 115, 115].  Tensor sizes: [30, 1, 0, 115]
2025-03-05 15:23:00.623116 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 116],"bool"), list[30,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 116],"bool"), list[30,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 116, 116].  Tensor sizes: [30, 1, 0, 116]
2025-03-05 15:23:00.623667 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 117],"bool"), list[30,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 117],"bool"), list[30,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 117, 117].  Tensor sizes: [30, 1, 0, 117]
2025-03-05 15:23:00.624198 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 118],"bool"), list[30,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 118],"bool"), list[30,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 118, 118].  Tensor sizes: [30, 1, 0, 118]
2025-03-05 15:23:00.624741 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 119],"bool"), list[30,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 119],"bool"), list[30,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 119, 119].  Tensor sizes: [30, 1, 0, 119]
2025-03-05 15:23:00.625263 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 120],"bool"), list[30,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 120],"bool"), list[30,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 120, 120].  Tensor sizes: [30, 1, 0, 120]
2025-03-05 15:23:00.625825 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 121],"bool"), list[30,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 121],"bool"), list[30,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 121, 121].  Tensor sizes: [30, 1, 0, 121]
2025-03-05 15:23:00.626363 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 121],"bool"), list[30,8,197,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 121],"bool"), list[30,8,197,121,], ) 
 The expanded size of the tensor (197) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 197, 121].  Tensor sizes: [30, 1, 0, 121]
2025-03-05 15:23:00.626885 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 121],"bool"), list[30,8,210,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 121],"bool"), list[30,8,210,121,], ) 
 The expanded size of the tensor (210) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 210, 121].  Tensor sizes: [30, 1, 0, 121]
2025-03-05 15:23:00.627405 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 121],"bool"), list[30,8,226,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 121],"bool"), list[30,8,226,121,], ) 
 The expanded size of the tensor (226) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 226, 121].  Tensor sizes: [30, 1, 0, 121]
2025-03-05 15:23:00.627945 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 121],"bool"), list[30,8,264,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 121],"bool"), list[30,8,264,121,], ) 
 The expanded size of the tensor (264) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 264, 121].  Tensor sizes: [30, 1, 0, 121]
2025-03-05 15:23:00.628478 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 121],"bool"), list[30,8,336,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 121],"bool"), list[30,8,336,121,], ) 
 The expanded size of the tensor (336) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 336, 121].  Tensor sizes: [30, 1, 0, 121]
2025-03-05 15:23:00.629049 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 121],"bool"), list[30,8,355,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 121],"bool"), list[30,8,355,121,], ) 
 The expanded size of the tensor (355) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 355, 121].  Tensor sizes: [30, 1, 0, 121]
2025-03-05 15:23:00.629579 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 123],"bool"), list[30,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 123],"bool"), list[30,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 123, 123].  Tensor sizes: [30, 1, 0, 123]
2025-03-05 15:23:00.630121 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 124],"bool"), list[30,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 124],"bool"), list[30,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 124, 124].  Tensor sizes: [30, 1, 0, 124]
2025-03-05 15:23:00.630662 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 125],"bool"), list[30,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 125],"bool"), list[30,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 125, 125].  Tensor sizes: [30, 1, 0, 125]
2025-03-05 15:23:00.631673 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 126],"bool"), list[30,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 126],"bool"), list[30,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 126, 126].  Tensor sizes: [30, 1, 0, 126]
2025-03-05 15:23:00.632339 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 127],"bool"), list[30,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 127],"bool"), list[30,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 127, 127].  Tensor sizes: [30, 1, 0, 127]
2025-03-05 15:23:00.632976 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 128],"bool"), list[30,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 128],"bool"), list[30,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 128, 128].  Tensor sizes: [30, 1, 0, 128]
2025-03-05 15:23:00.633612 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 129],"bool"), list[30,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 129],"bool"), list[30,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 129, 129].  Tensor sizes: [30, 1, 0, 129]
2025-03-05 15:23:00.634347 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 129],"bool"), list[30,8,170,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 129],"bool"), list[30,8,170,129,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 170, 129].  Tensor sizes: [30, 1, 0, 129]
2025-03-05 15:23:00.635472 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 129],"bool"), list[30,8,193,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 129],"bool"), list[30,8,193,129,], ) 
 The expanded size of the tensor (193) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 193, 129].  Tensor sizes: [30, 1, 0, 129]
2025-03-05 15:23:00.636091 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 129],"bool"), list[30,8,240,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 129],"bool"), list[30,8,240,129,], ) 
 The expanded size of the tensor (240) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 240, 129].  Tensor sizes: [30, 1, 0, 129]
2025-03-05 15:23:00.636661 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 129],"bool"), list[30,8,276,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 129],"bool"), list[30,8,276,129,], ) 
 The expanded size of the tensor (276) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 276, 129].  Tensor sizes: [30, 1, 0, 129]
2025-03-05 15:23:00.637215 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 129],"bool"), list[30,8,277,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 129],"bool"), list[30,8,277,129,], ) 
 The expanded size of the tensor (277) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 277, 129].  Tensor sizes: [30, 1, 0, 129]
2025-03-05 15:23:00.637824 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 130],"bool"), list[30,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 130],"bool"), list[30,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 130, 130].  Tensor sizes: [30, 1, 0, 130]
2025-03-05 15:23:00.638379 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 133],"bool"), list[30,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 133],"bool"), list[30,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 133, 133].  Tensor sizes: [30, 1, 0, 133]
2025-03-05 15:23:00.638946 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 134],"bool"), list[30,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 134],"bool"), list[30,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 134, 134].  Tensor sizes: [30, 1, 0, 134]
2025-03-05 15:23:00.639495 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 135],"bool"), list[30,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 135],"bool"), list[30,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 135, 135].  Tensor sizes: [30, 1, 0, 135]
2025-03-05 15:23:00.640043 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 137],"bool"), list[30,8,192,137,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 137],"bool"), list[30,8,192,137,], ) 
 The expanded size of the tensor (192) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 192, 137].  Tensor sizes: [30, 1, 0, 137]
2025-03-05 15:23:00.640594 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 137],"bool"), list[30,8,249,137,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 137],"bool"), list[30,8,249,137,], ) 
 The expanded size of the tensor (249) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 249, 137].  Tensor sizes: [30, 1, 0, 137]
2025-03-05 15:23:00.641142 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 137],"bool"), list[30,8,253,137,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 137],"bool"), list[30,8,253,137,], ) 
 The expanded size of the tensor (253) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 253, 137].  Tensor sizes: [30, 1, 0, 137]
2025-03-05 15:23:00.641682 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 137],"bool"), list[30,8,477,137,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 137],"bool"), list[30,8,477,137,], ) 
 The expanded size of the tensor (477) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 477, 137].  Tensor sizes: [30, 1, 0, 137]
2025-03-05 15:23:00.642214 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 138],"bool"), list[30,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 138],"bool"), list[30,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 138, 138].  Tensor sizes: [30, 1, 0, 138]
2025-03-05 15:23:00.642752 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 139],"bool"), list[30,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 139],"bool"), list[30,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 139, 139].  Tensor sizes: [30, 1, 0, 139]
2025-03-05 15:23:00.643290 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,28,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,28,13,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 28, 13].  Tensor sizes: [30, 1, 0, 13]
2025-03-05 15:23:00.643849 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,30,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,30,13,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 30, 13].  Tensor sizes: [30, 1, 0, 13]
2025-03-05 15:23:00.644381 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,31,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,31,13,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 31, 13].  Tensor sizes: [30, 1, 0, 13]
2025-03-05 15:23:00.644922 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,32,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,32,13,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 32, 13].  Tensor sizes: [30, 1, 0, 13]
2025-03-05 15:23:00.645455 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,35,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,35,13,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 35, 13].  Tensor sizes: [30, 1, 0, 13]
2025-03-05 15:23:00.645994 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,36,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,36,13,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 36, 13].  Tensor sizes: [30, 1, 0, 13]
2025-03-05 15:23:00.646525 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,39,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,39,13,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 39, 13].  Tensor sizes: [30, 1, 0, 13]
2025-03-05 15:23:00.647087 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,42,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,42,13,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 42, 13].  Tensor sizes: [30, 1, 0, 13]
2025-03-05 15:23:00.647621 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,46,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,46,13,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 46, 13].  Tensor sizes: [30, 1, 0, 13]
2025-03-05 15:23:00.648161 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,47,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,47,13,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 47, 13].  Tensor sizes: [30, 1, 0, 13]
2025-03-05 15:23:00.648712 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,53,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,53,13,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 53, 13].  Tensor sizes: [30, 1, 0, 13]
2025-03-05 15:23:00.649278 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,55,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,55,13,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 55, 13].  Tensor sizes: [30, 1, 0, 13]
2025-03-05 15:23:00.649895 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,90,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 13],"bool"), list[30,8,90,13,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 90, 13].  Tensor sizes: [30, 1, 0, 13]
2025-03-05 15:23:00.650433 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 140],"bool"), list[30,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 140],"bool"), list[30,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 140, 140].  Tensor sizes: [30, 1, 0, 140]
2025-03-05 15:23:00.650985 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 141],"bool"), list[30,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 141],"bool"), list[30,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 141, 141].  Tensor sizes: [30, 1, 0, 141]
2025-03-05 15:23:00.651529 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 142],"bool"), list[30,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 142],"bool"), list[30,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 142, 142].  Tensor sizes: [30, 1, 0, 142]
2025-03-05 15:23:00.652118 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 144],"bool"), list[30,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 144],"bool"), list[30,8,144,144,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 144, 144].  Tensor sizes: [30, 1, 0, 144]
2025-03-05 15:23:00.652667 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 145],"bool"), list[30,8,198,145,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 145],"bool"), list[30,8,198,145,], ) 
 The expanded size of the tensor (198) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 198, 145].  Tensor sizes: [30, 1, 0, 145]
2025-03-05 15:23:00.653293 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 145],"bool"), list[30,8,212,145,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 145],"bool"), list[30,8,212,145,], ) 
 The expanded size of the tensor (212) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 212, 145].  Tensor sizes: [30, 1, 0, 145]
2025-03-05 15:23:00.653875 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 145],"bool"), list[30,8,227,145,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 145],"bool"), list[30,8,227,145,], ) 
 The expanded size of the tensor (227) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 227, 145].  Tensor sizes: [30, 1, 0, 145]
2025-03-05 15:23:00.654424 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 147],"bool"), list[30,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 147],"bool"), list[30,8,147,147,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 147, 147].  Tensor sizes: [30, 1, 0, 147]
2025-03-05 15:23:00.654970 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 149],"bool"), list[30,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 149],"bool"), list[30,8,149,149,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 149, 149].  Tensor sizes: [30, 1, 0, 149]
2025-03-05 15:23:00.655501 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 150],"bool"), list[30,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 150],"bool"), list[30,8,150,150,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 150, 150].  Tensor sizes: [30, 1, 0, 150]
2025-03-05 15:23:00.656055 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 151],"bool"), list[30,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 151],"bool"), list[30,8,151,151,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 151, 151].  Tensor sizes: [30, 1, 0, 151]
2025-03-05 15:23:00.656615 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 153],"bool"), list[30,8,268,153,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 153],"bool"), list[30,8,268,153,], ) 
 The expanded size of the tensor (268) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 268, 153].  Tensor sizes: [30, 1, 0, 153]
2025-03-05 15:23:00.657163 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 153],"bool"), list[30,8,457,153,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 153],"bool"), list[30,8,457,153,], ) 
 The expanded size of the tensor (457) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 457, 153].  Tensor sizes: [30, 1, 0, 153]
2025-03-05 15:23:00.657707 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 153],"bool"), list[30,8,498,153,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 153],"bool"), list[30,8,498,153,], ) 
 The expanded size of the tensor (498) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 498, 153].  Tensor sizes: [30, 1, 0, 153]
2025-03-05 15:23:00.658237 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 154],"bool"), list[30,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 154],"bool"), list[30,8,154,154,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 154, 154].  Tensor sizes: [30, 1, 0, 154]
2025-03-05 15:23:00.658783 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 155],"bool"), list[30,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 155],"bool"), list[30,8,155,155,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 155, 155].  Tensor sizes: [30, 1, 0, 155]
2025-03-05 15:23:00.659347 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 158],"bool"), list[30,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 158],"bool"), list[30,8,158,158,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 158, 158].  Tensor sizes: [30, 1, 0, 158]
2025-03-05 15:23:00.659951 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 161],"bool"), list[30,8,270,161,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 161],"bool"), list[30,8,270,161,], ) 
 The expanded size of the tensor (270) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 270, 161].  Tensor sizes: [30, 1, 0, 161]
2025-03-05 15:23:00.660494 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 161],"bool"), list[30,8,298,161,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 161],"bool"), list[30,8,298,161,], ) 
 The expanded size of the tensor (298) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 298, 161].  Tensor sizes: [30, 1, 0, 161]
2025-03-05 15:23:00.661043 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 162],"bool"), list[30,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 162],"bool"), list[30,8,162,162,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 162, 162].  Tensor sizes: [30, 1, 0, 162]
2025-03-05 15:23:00.661598 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 163],"bool"), list[30,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 163],"bool"), list[30,8,163,163,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 163, 163].  Tensor sizes: [30, 1, 0, 163]
2025-03-05 15:23:00.662140 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 164],"bool"), list[30,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 164],"bool"), list[30,8,164,164,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 164, 164].  Tensor sizes: [30, 1, 0, 164]
2025-03-05 15:23:00.662689 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 165],"bool"), list[30,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 165],"bool"), list[30,8,165,165,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 165, 165].  Tensor sizes: [30, 1, 0, 165]
2025-03-05 15:23:00.663225 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 169],"bool"), list[30,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 169],"bool"), list[30,8,169,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 169, 169].  Tensor sizes: [30, 1, 0, 169]
2025-03-05 15:23:00.663764 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 169],"bool"), list[30,8,274,169,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 169],"bool"), list[30,8,274,169,], ) 
 The expanded size of the tensor (274) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 274, 169].  Tensor sizes: [30, 1, 0, 169]
2025-03-05 15:23:00.664305 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 169],"bool"), list[30,8,339,169,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 169],"bool"), list[30,8,339,169,], ) 
 The expanded size of the tensor (339) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 339, 169].  Tensor sizes: [30, 1, 0, 169]
2025-03-05 15:23:00.664891 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 169],"bool"), list[30,8,369,169,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 169],"bool"), list[30,8,369,169,], ) 
 The expanded size of the tensor (369) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 369, 169].  Tensor sizes: [30, 1, 0, 169]
2025-03-05 15:23:00.665447 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 170],"bool"), list[30,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 170],"bool"), list[30,8,170,170,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 170, 170].  Tensor sizes: [30, 1, 0, 170]
2025-03-05 15:23:00.666054 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 171],"bool"), list[30,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 171],"bool"), list[30,8,171,171,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 171, 171].  Tensor sizes: [30, 1, 0, 171]
2025-03-05 15:23:00.666603 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 172],"bool"), list[30,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 172],"bool"), list[30,8,172,172,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 172, 172].  Tensor sizes: [30, 1, 0, 172]
2025-03-05 15:23:00.667144 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 173],"bool"), list[30,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 173],"bool"), list[30,8,173,173,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 173, 173].  Tensor sizes: [30, 1, 0, 173]
2025-03-05 15:23:00.667705 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 175],"bool"), list[30,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 175],"bool"), list[30,8,175,175,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 175, 175].  Tensor sizes: [30, 1, 0, 175]
2025-03-05 15:23:00.668248 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 176],"bool"), list[30,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 176],"bool"), list[30,8,176,176,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 176, 176].  Tensor sizes: [30, 1, 0, 176]
2025-03-05 15:23:00.668823 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 17, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.669377 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,39,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,39,17,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 39, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.669946 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,43,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,43,17,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 43, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.670503 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,44,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,44,17,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 44, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.671046 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,46,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,46,17,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 46, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.671594 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,48,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,48,17,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 48, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.672120 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,49,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,49,17,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 49, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.672664 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,50,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,50,17,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 50, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.673215 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,52,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,52,17,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 52, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.673776 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,54,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,54,17,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 54, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.674325 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,55,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,55,17,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 55, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.674871 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,61,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,61,17,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 61, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.675405 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,63,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,63,17,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 63, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.675939 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,75,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,75,17,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 75, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.676482 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,82,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 17],"bool"), list[30,8,82,17,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 82, 17].  Tensor sizes: [30, 1, 0, 17]
2025-03-05 15:23:00.677026 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 181],"bool"), list[30,8,181,181,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 181],"bool"), list[30,8,181,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 181, 181].  Tensor sizes: [30, 1, 0, 181]
2025-03-05 15:23:00.677575 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 183],"bool"), list[30,8,183,183,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 183],"bool"), list[30,8,183,183,], ) 
 The expanded size of the tensor (183) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 183, 183].  Tensor sizes: [30, 1, 0, 183]
2025-03-05 15:23:00.678165 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 187],"bool"), list[30,8,187,187,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 187],"bool"), list[30,8,187,187,], ) 
 The expanded size of the tensor (187) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 187, 187].  Tensor sizes: [30, 1, 0, 187]
2025-03-05 15:23:00.678711 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 189],"bool"), list[30,8,189,189,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 189],"bool"), list[30,8,189,189,], ) 
 The expanded size of the tensor (189) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 189, 189].  Tensor sizes: [30, 1, 0, 189]
2025-03-05 15:23:00.679253 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 190],"bool"), list[30,8,190,190,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 190],"bool"), list[30,8,190,190,], ) 
 The expanded size of the tensor (190) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 190, 190].  Tensor sizes: [30, 1, 0, 190]
2025-03-05 15:23:00.679797 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 191],"bool"), list[30,8,191,191,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 191],"bool"), list[30,8,191,191,], ) 
 The expanded size of the tensor (191) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 191, 191].  Tensor sizes: [30, 1, 0, 191]
2025-03-05 15:23:00.680330 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 192],"bool"), list[30,8,192,192,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 192],"bool"), list[30,8,192,192,], ) 
 The expanded size of the tensor (192) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 192, 192].  Tensor sizes: [30, 1, 0, 192]
2025-03-05 15:23:00.680867 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 193],"bool"), list[30,8,193,193,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 193],"bool"), list[30,8,193,193,], ) 
 The expanded size of the tensor (193) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 193, 193].  Tensor sizes: [30, 1, 0, 193]
2025-03-05 15:23:00.681409 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 194],"bool"), list[30,8,194,194,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 194],"bool"), list[30,8,194,194,], ) 
 The expanded size of the tensor (194) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 194, 194].  Tensor sizes: [30, 1, 0, 194]
2025-03-05 15:23:00.681956 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 197],"bool"), list[30,8,197,197,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 197],"bool"), list[30,8,197,197,], ) 
 The expanded size of the tensor (197) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 197, 197].  Tensor sizes: [30, 1, 0, 197]
2025-03-05 15:23:00.682490 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 198],"bool"), list[30,8,198,198,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 198],"bool"), list[30,8,198,198,], ) 
 The expanded size of the tensor (198) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 198, 198].  Tensor sizes: [30, 1, 0, 198]
2025-03-05 15:23:00.683035 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 19],"bool"), list[30,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 19],"bool"), list[30,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 19, 19].  Tensor sizes: [30, 1, 0, 19]
2025-03-05 15:23:00.683589 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 200],"bool"), list[30,8,200,200,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 200],"bool"), list[30,8,200,200,], ) 
 The expanded size of the tensor (200) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 200, 200].  Tensor sizes: [30, 1, 0, 200]
2025-03-05 15:23:00.684122 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 203],"bool"), list[30,8,203,203,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 203],"bool"), list[30,8,203,203,], ) 
 The expanded size of the tensor (203) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 203, 203].  Tensor sizes: [30, 1, 0, 203]
2025-03-05 15:23:00.684736 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 207],"bool"), list[30,8,207,207,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 207],"bool"), list[30,8,207,207,], ) 
 The expanded size of the tensor (207) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 207, 207].  Tensor sizes: [30, 1, 0, 207]
2025-03-05 15:23:00.685265 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 209],"bool"), list[30,8,209,209,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 209],"bool"), list[30,8,209,209,], ) 
 The expanded size of the tensor (209) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 209, 209].  Tensor sizes: [30, 1, 0, 209]
2025-03-05 15:23:00.685813 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 20],"bool"), list[30,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 20],"bool"), list[30,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 20, 20].  Tensor sizes: [30, 1, 0, 20]
2025-03-05 15:23:00.686344 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 210],"bool"), list[30,8,210,210,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 210],"bool"), list[30,8,210,210,], ) 
 The expanded size of the tensor (210) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 210, 210].  Tensor sizes: [30, 1, 0, 210]
2025-03-05 15:23:00.686889 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 211],"bool"), list[30,8,211,211,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 211],"bool"), list[30,8,211,211,], ) 
 The expanded size of the tensor (211) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 211, 211].  Tensor sizes: [30, 1, 0, 211]
2025-03-05 15:23:00.687428 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 212],"bool"), list[30,8,212,212,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 212],"bool"), list[30,8,212,212,], ) 
 The expanded size of the tensor (212) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 212, 212].  Tensor sizes: [30, 1, 0, 212]
2025-03-05 15:23:00.687975 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 21, 21].  Tensor sizes: [30, 1, 0, 21]
2025-03-05 15:23:00.688503 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,50,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,50,21,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 50, 21].  Tensor sizes: [30, 1, 0, 21]
2025-03-05 15:23:00.689044 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,53,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,53,21,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 53, 21].  Tensor sizes: [30, 1, 0, 21]
2025-03-05 15:23:00.689570 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,54,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,54,21,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 54, 21].  Tensor sizes: [30, 1, 0, 21]
2025-03-05 15:23:00.690121 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,57,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,57,21,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 57, 21].  Tensor sizes: [30, 1, 0, 21]
2025-03-05 15:23:00.690686 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,59,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,59,21,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 59, 21].  Tensor sizes: [30, 1, 0, 21]
2025-03-05 15:23:00.691214 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,64,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,64,21,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 64, 21].  Tensor sizes: [30, 1, 0, 21]
2025-03-05 15:23:00.691743 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,66,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,66,21,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 66, 21].  Tensor sizes: [30, 1, 0, 21]
2025-03-05 15:23:00.692267 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,67,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,67,21,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 67, 21].  Tensor sizes: [30, 1, 0, 21]
2025-03-05 15:23:00.692800 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,71,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,71,21,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 71, 21].  Tensor sizes: [30, 1, 0, 21]
2025-03-05 15:23:00.693374 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,75,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,75,21,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 75, 21].  Tensor sizes: [30, 1, 0, 21]
2025-03-05 15:23:00.693933 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,77,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,77,21,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 77, 21].  Tensor sizes: [30, 1, 0, 21]
2025-03-05 15:23:00.694478 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,81,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,81,21,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 81, 21].  Tensor sizes: [30, 1, 0, 21]
2025-03-05 15:23:00.695014 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,93,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 21],"bool"), list[30,8,93,21,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 93, 21].  Tensor sizes: [30, 1, 0, 21]
2025-03-05 15:23:00.695548 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 220],"bool"), list[30,8,220,220,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 220],"bool"), list[30,8,220,220,], ) 
 The expanded size of the tensor (220) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 220, 220].  Tensor sizes: [30, 1, 0, 220]
2025-03-05 15:23:00.696116 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 222],"bool"), list[30,8,222,222,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 222],"bool"), list[30,8,222,222,], ) 
 The expanded size of the tensor (222) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 222, 222].  Tensor sizes: [30, 1, 0, 222]
2025-03-05 15:23:00.696651 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 226],"bool"), list[30,8,226,226,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 226],"bool"), list[30,8,226,226,], ) 
 The expanded size of the tensor (226) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 226, 226].  Tensor sizes: [30, 1, 0, 226]
2025-03-05 15:23:00.697181 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 227],"bool"), list[30,8,227,227,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 227],"bool"), list[30,8,227,227,], ) 
 The expanded size of the tensor (227) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 227, 227].  Tensor sizes: [30, 1, 0, 227]
2025-03-05 15:23:00.697720 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 23],"bool"), list[30,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 23],"bool"), list[30,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 23, 23].  Tensor sizes: [30, 1, 0, 23]
2025-03-05 15:23:00.698240 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 240],"bool"), list[30,8,240,240,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 240],"bool"), list[30,8,240,240,], ) 
 The expanded size of the tensor (240) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 240, 240].  Tensor sizes: [30, 1, 0, 240]
2025-03-05 15:23:00.698804 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 241],"bool"), list[30,8,241,241,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 241],"bool"), list[30,8,241,241,], ) 
 The expanded size of the tensor (241) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 241, 241].  Tensor sizes: [30, 1, 0, 241]
2025-03-05 15:23:00.699323 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 243],"bool"), list[30,8,243,243,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 243],"bool"), list[30,8,243,243,], ) 
 The expanded size of the tensor (243) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 243, 243].  Tensor sizes: [30, 1, 0, 243]
2025-03-05 15:23:00.699859 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 249],"bool"), list[30,8,249,249,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 249],"bool"), list[30,8,249,249,], ) 
 The expanded size of the tensor (249) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 249, 249].  Tensor sizes: [30, 1, 0, 249]
2025-03-05 15:23:00.700438 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 24],"bool"), list[30,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 24],"bool"), list[30,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 24, 24].  Tensor sizes: [30, 1, 0, 24]
2025-03-05 15:23:00.700989 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 253],"bool"), list[30,8,253,253,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 253],"bool"), list[30,8,253,253,], ) 
 The expanded size of the tensor (253) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 253, 253].  Tensor sizes: [30, 1, 0, 253]
2025-03-05 15:23:00.701515 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,144,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,144,25,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 144, 25].  Tensor sizes: [30, 1, 0, 25]
2025-03-05 15:23:00.702089 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,55,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,55,25,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 55, 25].  Tensor sizes: [30, 1, 0, 25]
2025-03-05 15:23:00.702648 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,56,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,56,25,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 56, 25].  Tensor sizes: [30, 1, 0, 25]
2025-03-05 15:23:00.703179 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,59,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,59,25,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 59, 25].  Tensor sizes: [30, 1, 0, 25]
2025-03-05 15:23:00.703721 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,61,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,61,25,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 61, 25].  Tensor sizes: [30, 1, 0, 25]
2025-03-05 15:23:00.704291 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,63,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,63,25,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 63, 25].  Tensor sizes: [30, 1, 0, 25]
2025-03-05 15:23:00.704830 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,66,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,66,25,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 66, 25].  Tensor sizes: [30, 1, 0, 25]
2025-03-05 15:23:00.705363 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,67,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,67,25,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 67, 25].  Tensor sizes: [30, 1, 0, 25]
2025-03-05 15:23:00.705937 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,71,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,71,25,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 71, 25].  Tensor sizes: [30, 1, 0, 25]
2025-03-05 15:23:00.706482 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,77,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,77,25,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 77, 25].  Tensor sizes: [30, 1, 0, 25]
2025-03-05 15:23:00.707030 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,78,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,78,25,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 78, 25].  Tensor sizes: [30, 1, 0, 25]
2025-03-05 15:23:00.707554 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,84,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,84,25,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 84, 25].  Tensor sizes: [30, 1, 0, 25]
2025-03-05 15:23:00.716600 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,86,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,86,25,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 86, 25].  Tensor sizes: [30, 1, 0, 25]
2025-03-05 15:23:00.718436 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,88,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 25],"bool"), list[30,8,88,25,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 88, 25].  Tensor sizes: [30, 1, 0, 25]
2025-03-05 15:23:00.719002 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 264],"bool"), list[30,8,264,264,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 264],"bool"), list[30,8,264,264,], ) 
 The expanded size of the tensor (264) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 264, 264].  Tensor sizes: [30, 1, 0, 264]
2025-03-05 15:23:00.719533 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 268],"bool"), list[30,8,268,268,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 268],"bool"), list[30,8,268,268,], ) 
 The expanded size of the tensor (268) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 268, 268].  Tensor sizes: [30, 1, 0, 268]
2025-03-05 15:23:00.720083 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 26],"bool"), list[30,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 26],"bool"), list[30,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 26, 26].  Tensor sizes: [30, 1, 0, 26]
2025-03-05 15:23:00.720628 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 270],"bool"), list[30,8,270,270,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 270],"bool"), list[30,8,270,270,], ) 
 The expanded size of the tensor (270) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 270, 270].  Tensor sizes: [30, 1, 0, 270]
2025-03-05 15:23:00.721173 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 274],"bool"), list[30,8,274,274,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 274],"bool"), list[30,8,274,274,], ) 
 The expanded size of the tensor (274) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 274, 274].  Tensor sizes: [30, 1, 0, 274]
2025-03-05 15:23:00.721738 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 276],"bool"), list[30,8,276,276,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 276],"bool"), list[30,8,276,276,], ) 
 The expanded size of the tensor (276) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 276, 276].  Tensor sizes: [30, 1, 0, 276]
2025-03-05 15:23:00.722275 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 277],"bool"), list[30,8,277,277,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 277],"bool"), list[30,8,277,277,], ) 
 The expanded size of the tensor (277) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 277, 277].  Tensor sizes: [30, 1, 0, 277]
2025-03-05 15:23:00.722810 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 28],"bool"), list[30,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 28],"bool"), list[30,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 28, 28].  Tensor sizes: [30, 1, 0, 28]
2025-03-05 15:23:00.723339 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 293],"bool"), list[30,8,293,293,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 293],"bool"), list[30,8,293,293,], ) 
 The expanded size of the tensor (293) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 293, 293].  Tensor sizes: [30, 1, 0, 293]
2025-03-05 15:23:00.723895 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 298],"bool"), list[30,8,298,298,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 298],"bool"), list[30,8,298,298,], ) 
 The expanded size of the tensor (298) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 298, 298].  Tensor sizes: [30, 1, 0, 298]
2025-03-05 15:23:00.724418 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 29, 29].  Tensor sizes: [30, 1, 0, 29]
2025-03-05 15:23:00.724965 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,68,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,68,29,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 68, 29].  Tensor sizes: [30, 1, 0, 29]
2025-03-05 15:23:00.725494 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,71,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,71,29,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 71, 29].  Tensor sizes: [30, 1, 0, 29]
2025-03-05 15:23:00.726035 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,72,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,72,29,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 72, 29].  Tensor sizes: [30, 1, 0, 29]
2025-03-05 15:23:00.726561 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,73,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,73,29,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 73, 29].  Tensor sizes: [30, 1, 0, 29]
2025-03-05 15:23:00.727091 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,74,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,74,29,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 74, 29].  Tensor sizes: [30, 1, 0, 29]
2025-03-05 15:23:00.727653 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,76,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,76,29,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 76, 29].  Tensor sizes: [30, 1, 0, 29]
2025-03-05 15:23:00.728187 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,77,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,77,29,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 77, 29].  Tensor sizes: [30, 1, 0, 29]
2025-03-05 15:23:00.728728 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,81,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,81,29,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 81, 29].  Tensor sizes: [30, 1, 0, 29]
2025-03-05 15:23:00.729256 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,91,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,91,29,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 91, 29].  Tensor sizes: [30, 1, 0, 29]
2025-03-05 15:23:00.729799 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,96,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,96,29,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 96, 29].  Tensor sizes: [30, 1, 0, 29]
2025-03-05 15:23:00.730336 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,99,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 29],"bool"), list[30,8,99,29,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 99, 29].  Tensor sizes: [30, 1, 0, 29]
2025-03-05 15:23:00.730880 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 302],"bool"), list[30,8,302,302,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 302],"bool"), list[30,8,302,302,], ) 
 The expanded size of the tensor (302) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 302, 302].  Tensor sizes: [30, 1, 0, 302]
2025-03-05 15:23:00.731404 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 307],"bool"), list[30,8,307,307,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 307],"bool"), list[30,8,307,307,], ) 
 The expanded size of the tensor (307) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 307, 307].  Tensor sizes: [30, 1, 0, 307]
2025-03-05 15:23:00.738709 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 30],"bool"), list[30,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 30],"bool"), list[30,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 30, 30].  Tensor sizes: [30, 1, 0, 30]
2025-03-05 15:23:00.740121 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 31],"bool"), list[30,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 31],"bool"), list[30,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 31, 31].  Tensor sizes: [30, 1, 0, 31]
2025-03-05 15:23:00.740816 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 32],"bool"), list[30,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 32],"bool"), list[30,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 32, 32].  Tensor sizes: [30, 1, 0, 32]
2025-03-05 15:23:00.741683 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 336],"bool"), list[30,8,336,336,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 336],"bool"), list[30,8,336,336,], ) 
 The expanded size of the tensor (336) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 336, 336].  Tensor sizes: [30, 1, 0, 336]
2025-03-05 15:23:00.743633 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 339],"bool"), list[30,8,339,339,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 339],"bool"), list[30,8,339,339,], ) 
 The expanded size of the tensor (339) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 339, 339].  Tensor sizes: [30, 1, 0, 339]
2025-03-05 15:23:00.744471 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,101,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,101,33,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 101, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.745030 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,103,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,103,33,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 103, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.745589 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,108,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,108,33,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 108, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.746134 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,124,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,124,33,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 124, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.746731 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 33, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.747325 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,62,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,62,33,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 62, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.747879 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,63,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,63,33,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 63, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.748411 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,64,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,64,33,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 64, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.748961 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,68,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,68,33,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 68, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.749491 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,78,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,78,33,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 78, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.750061 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,80,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,80,33,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 80, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.750610 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,82,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,82,33,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 82, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.751160 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,85,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,85,33,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 85, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.751704 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,86,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,86,33,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 86, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.752248 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,87,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,87,33,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 87, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.752789 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,90,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,90,33,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 90, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.753322 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,92,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,92,33,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 92, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.753937 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,93,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,93,33,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 93, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.754519 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,94,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,94,33,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 94, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.755109 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,97,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 33],"bool"), list[30,8,97,33,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 97, 33].  Tensor sizes: [30, 1, 0, 33]
2025-03-05 15:23:00.755657 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 34],"bool"), list[30,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 34],"bool"), list[30,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 34, 34].  Tensor sizes: [30, 1, 0, 34]
2025-03-05 15:23:00.756230 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 355],"bool"), list[30,8,355,355,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 355],"bool"), list[30,8,355,355,], ) 
 The expanded size of the tensor (355) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 355, 355].  Tensor sizes: [30, 1, 0, 355]
2025-03-05 15:23:00.756783 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 35],"bool"), list[30,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 35],"bool"), list[30,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 35, 35].  Tensor sizes: [30, 1, 0, 35]
2025-03-05 15:23:00.757333 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 369],"bool"), list[30,8,369,369,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 369],"bool"), list[30,8,369,369,], ) 
 The expanded size of the tensor (369) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 369, 369].  Tensor sizes: [30, 1, 0, 369]
2025-03-05 15:23:00.757903 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 36],"bool"), list[30,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 36],"bool"), list[30,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 36, 36].  Tensor sizes: [30, 1, 0, 36]
2025-03-05 15:23:00.758445 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,104,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,104,37,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 104, 37].  Tensor sizes: [30, 1, 0, 37]
2025-03-05 15:23:00.758987 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,121,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,121,37,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 121, 37].  Tensor sizes: [30, 1, 0, 37]
2025-03-05 15:23:00.759546 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,129,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,129,37,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 129, 37].  Tensor sizes: [30, 1, 0, 37]
2025-03-05 15:23:00.760096 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,169,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,169,37,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 169, 37].  Tensor sizes: [30, 1, 0, 37]
2025-03-05 15:23:00.760654 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,86,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,86,37,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 86, 37].  Tensor sizes: [30, 1, 0, 37]
2025-03-05 15:23:00.761221 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,88,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,88,37,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 88, 37].  Tensor sizes: [30, 1, 0, 37]
2025-03-05 15:23:00.761782 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,96,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,96,37,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 96, 37].  Tensor sizes: [30, 1, 0, 37]
2025-03-05 15:23:00.762318 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,97,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 37],"bool"), list[30,8,97,37,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 97, 37].  Tensor sizes: [30, 1, 0, 37]
2025-03-05 15:23:00.762879 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 39],"bool"), list[30,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 39],"bool"), list[30,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 39, 39].  Tensor sizes: [30, 1, 0, 39]
2025-03-05 15:23:00.763404 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,102,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,102,41,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 102, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.763998 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,106,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,106,41,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 106, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.764523 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,108,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,108,41,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 108, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.765109 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,110,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,110,41,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 110, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.765658 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,113,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,113,41,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 113, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.766190 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,129,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,129,41,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 129, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.766760 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,139,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,139,41,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 139, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.767294 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,147,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,147,41,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 147, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.767836 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,68,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,68,41,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 68, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.768368 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,69,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,69,41,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 69, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.768937 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,73,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,73,41,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 73, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.769522 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,78,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,78,41,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 78, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.770116 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,82,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,82,41,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 82, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.770667 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,83,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,83,41,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 83, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.771206 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,84,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,84,41,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 84, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.771740 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,86,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,86,41,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 86, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.772269 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,90,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,90,41,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 90, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.772817 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,91,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,91,41,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 91, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.773341 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,97,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 41],"bool"), list[30,8,97,41,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 97, 41].  Tensor sizes: [30, 1, 0, 41]
2025-03-05 15:23:00.773872 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 42],"bool"), list[30,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 42],"bool"), list[30,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 42, 42].  Tensor sizes: [30, 1, 0, 42]
2025-03-05 15:23:00.774394 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 43],"bool"), list[30,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 43],"bool"), list[30,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 43, 43].  Tensor sizes: [30, 1, 0, 43]
2025-03-05 15:23:00.774930 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 44],"bool"), list[30,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 44],"bool"), list[30,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 44, 44].  Tensor sizes: [30, 1, 0, 44]
2025-03-05 15:23:00.775467 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 457],"bool"), list[30,8,457,457,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 457],"bool"), list[30,8,457,457,], ) 
 The expanded size of the tensor (457) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 457, 457].  Tensor sizes: [30, 1, 0, 457]
2025-03-05 15:23:00.775990 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 45],"bool"), list[30,8,106,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 45],"bool"), list[30,8,106,45,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 106, 45].  Tensor sizes: [30, 1, 0, 45]
2025-03-05 15:23:00.776513 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 45],"bool"), list[30,8,110,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 45],"bool"), list[30,8,110,45,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 110, 45].  Tensor sizes: [30, 1, 0, 45]
2025-03-05 15:23:00.777091 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 45],"bool"), list[30,8,111,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 45],"bool"), list[30,8,111,45,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 111, 45].  Tensor sizes: [30, 1, 0, 45]
2025-03-05 15:23:00.777625 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 45],"bool"), list[30,8,116,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 45],"bool"), list[30,8,116,45,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 116, 45].  Tensor sizes: [30, 1, 0, 45]
2025-03-05 15:23:00.778164 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 45],"bool"), list[30,8,129,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 45],"bool"), list[30,8,129,45,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 129, 45].  Tensor sizes: [30, 1, 0, 45]
2025-03-05 15:23:00.778697 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 46],"bool"), list[30,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 46],"bool"), list[30,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 46, 46].  Tensor sizes: [30, 1, 0, 46]
2025-03-05 15:23:00.779235 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 477],"bool"), list[30,8,477,477,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 477],"bool"), list[30,8,477,477,], ) 
 The expanded size of the tensor (477) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 477, 477].  Tensor sizes: [30, 1, 0, 477]
2025-03-05 15:23:00.779816 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 47],"bool"), list[30,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 47],"bool"), list[30,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 47, 47].  Tensor sizes: [30, 1, 0, 47]
2025-03-05 15:23:00.780346 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 48],"bool"), list[30,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 48],"bool"), list[30,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 48, 48].  Tensor sizes: [30, 1, 0, 48]
2025-03-05 15:23:00.780883 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 498],"bool"), list[30,8,498,498,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 498],"bool"), list[30,8,498,498,], ) 
 The expanded size of the tensor (498) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 498, 498].  Tensor sizes: [30, 1, 0, 498]
2025-03-05 15:23:00.782339 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,102,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,102,49,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 102, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.782877 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,112,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,112,49,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 112, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.783420 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,121,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,121,49,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 121, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.783957 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,123,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,123,49,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 123, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.784487 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,126,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,126,49,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 126, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.785067 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,128,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,128,49,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 128, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.785616 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,133,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,133,49,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 133, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.786139 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,150,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,150,49,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 150, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.786718 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,209,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,209,49,], ) 
 The expanded size of the tensor (209) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 209, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.787238 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 49, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.787771 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,70,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,70,49,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 70, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.788282 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,83,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,83,49,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 83, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.788807 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,87,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,87,49,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 87, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.789326 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,92,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,92,49,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 92, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.789863 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,93,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,93,49,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 93, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.790404 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,97,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,97,49,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 97, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.790963 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,98,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 49],"bool"), list[30,8,98,49,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 98, 49].  Tensor sizes: [30, 1, 0, 49]
2025-03-05 15:23:00.791527 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 50],"bool"), list[30,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 50],"bool"), list[30,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 50, 50].  Tensor sizes: [30, 1, 0, 50]
2025-03-05 15:23:00.792060 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 52],"bool"), list[30,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 52],"bool"), list[30,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 52, 52].  Tensor sizes: [30, 1, 0, 52]
2025-03-05 15:23:00.792578 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 53],"bool"), list[30,8,129,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 53],"bool"), list[30,8,129,53,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 129, 53].  Tensor sizes: [30, 1, 0, 53]
2025-03-05 15:23:00.793104 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 53],"bool"), list[30,8,151,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 53],"bool"), list[30,8,151,53,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 151, 53].  Tensor sizes: [30, 1, 0, 53]
2025-03-05 15:23:00.793616 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 53],"bool"), list[30,8,171,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 53],"bool"), list[30,8,171,53,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 171, 53].  Tensor sizes: [30, 1, 0, 53]
2025-03-05 15:23:00.794143 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 53],"bool"), list[30,8,172,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 53],"bool"), list[30,8,172,53,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 172, 53].  Tensor sizes: [30, 1, 0, 53]
2025-03-05 15:23:00.794676 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 53],"bool"), list[30,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 53],"bool"), list[30,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 53, 53].  Tensor sizes: [30, 1, 0, 53]
2025-03-05 15:23:00.795191 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 54],"bool"), list[30,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 54],"bool"), list[30,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 54, 54].  Tensor sizes: [30, 1, 0, 54]
2025-03-05 15:23:00.795718 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 55],"bool"), list[30,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 55],"bool"), list[30,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 55, 55].  Tensor sizes: [30, 1, 0, 55]
2025-03-05 15:23:00.796248 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 56],"bool"), list[30,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 56],"bool"), list[30,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 56, 56].  Tensor sizes: [30, 1, 0, 56]
2025-03-05 15:23:00.796774 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,100,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,100,57,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 100, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.797293 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,104,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,104,57,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 104, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.797823 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,109,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,109,57,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 109, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.798340 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,114,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,114,57,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 114, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.798869 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,116,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,116,57,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 116, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.799387 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,118,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,118,57,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 118, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.799921 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,121,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,121,57,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 121, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.800435 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,129,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,129,57,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 129, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.800950 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,147,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,147,57,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 147, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.801460 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,162,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,162,57,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 162, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.801991 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,170,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,170,57,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 170, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.802505 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,307,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,307,57,], ) 
 The expanded size of the tensor (307) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 307, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.803045 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 57, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.803560 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,79,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,79,57,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 79, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.804100 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,91,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,91,57,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 91, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.804623 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,95,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,95,57,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 95, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.805157 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,98,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 57],"bool"), list[30,8,98,57,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 98, 57].  Tensor sizes: [30, 1, 0, 57]
2025-03-05 15:23:00.805697 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 59],"bool"), list[30,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 59],"bool"), list[30,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 59, 59].  Tensor sizes: [30, 1, 0, 59]
2025-03-05 15:23:00.806223 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 5],"bool"), list[30,8,17,5,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 5],"bool"), list[30,8,17,5,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 17, 5].  Tensor sizes: [30, 1, 0, 5]
2025-03-05 15:23:00.806770 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 5],"bool"), list[30,8,20,5,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 5],"bool"), list[30,8,20,5,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 20, 5].  Tensor sizes: [30, 1, 0, 5]
2025-03-05 15:23:00.807306 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 5],"bool"), list[30,8,21,5,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 5],"bool"), list[30,8,21,5,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 21, 5].  Tensor sizes: [30, 1, 0, 5]
2025-03-05 15:23:00.807866 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 5],"bool"), list[30,8,23,5,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 5],"bool"), list[30,8,23,5,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 23, 5].  Tensor sizes: [30, 1, 0, 5]
2025-03-05 15:23:00.808405 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 61],"bool"), list[30,8,189,61,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 61],"bool"), list[30,8,189,61,], ) 
 The expanded size of the tensor (189) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 189, 61].  Tensor sizes: [30, 1, 0, 61]
2025-03-05 15:23:00.808939 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 61],"bool"), list[30,8,190,61,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 61],"bool"), list[30,8,190,61,], ) 
 The expanded size of the tensor (190) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 190, 61].  Tensor sizes: [30, 1, 0, 61]
2025-03-05 15:23:00.809482 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 61],"bool"), list[30,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 61],"bool"), list[30,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 61, 61].  Tensor sizes: [30, 1, 0, 61]
2025-03-05 15:23:00.810048 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 62],"bool"), list[30,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 62],"bool"), list[30,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 62, 62].  Tensor sizes: [30, 1, 0, 62]
2025-03-05 15:23:00.810603 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 63],"bool"), list[30,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 63],"bool"), list[30,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 63, 63].  Tensor sizes: [30, 1, 0, 63]
2025-03-05 15:23:00.811157 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 64],"bool"), list[30,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 64],"bool"), list[30,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 64, 64].  Tensor sizes: [30, 1, 0, 64]
2025-03-05 15:23:00.811690 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,100,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,100,65,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 100, 65].  Tensor sizes: [30, 1, 0, 65]
2025-03-05 15:23:00.812202 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,104,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,104,65,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 104, 65].  Tensor sizes: [30, 1, 0, 65]
2025-03-05 15:23:00.812723 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,111,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,111,65,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 111, 65].  Tensor sizes: [30, 1, 0, 65]
2025-03-05 15:23:00.813231 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,112,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,112,65,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 112, 65].  Tensor sizes: [30, 1, 0, 65]
2025-03-05 15:23:00.813768 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,114,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,114,65,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 114, 65].  Tensor sizes: [30, 1, 0, 65]
2025-03-05 15:23:00.814293 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,115,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,115,65,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 115, 65].  Tensor sizes: [30, 1, 0, 65]
2025-03-05 15:23:00.814839 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,117,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,117,65,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 117, 65].  Tensor sizes: [30, 1, 0, 65]
2025-03-05 15:23:00.815362 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,119,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,119,65,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 119, 65].  Tensor sizes: [30, 1, 0, 65]
2025-03-05 15:23:00.815918 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,128,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,128,65,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 128, 65].  Tensor sizes: [30, 1, 0, 65]
2025-03-05 15:23:00.816434 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,138,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,138,65,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 138, 65].  Tensor sizes: [30, 1, 0, 65]
2025-03-05 15:23:00.816949 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,149,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,149,65,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 149, 65].  Tensor sizes: [30, 1, 0, 65]
2025-03-05 15:23:00.817453 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,154,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,154,65,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 154, 65].  Tensor sizes: [30, 1, 0, 65]
2025-03-05 15:23:00.817978 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,194,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,194,65,], ) 
 The expanded size of the tensor (194) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 194, 65].  Tensor sizes: [30, 1, 0, 65]
2025-03-05 15:23:00.818493 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,226,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 65],"bool"), list[30,8,226,65,], ) 
 The expanded size of the tensor (226) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 226, 65].  Tensor sizes: [30, 1, 0, 65]
2025-03-05 15:23:00.819016 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 66],"bool"), list[30,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 66],"bool"), list[30,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 66, 66].  Tensor sizes: [30, 1, 0, 66]
2025-03-05 15:23:00.819528 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 67],"bool"), list[30,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 67],"bool"), list[30,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 67, 67].  Tensor sizes: [30, 1, 0, 67]
2025-03-05 15:23:00.820075 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 68],"bool"), list[30,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 68],"bool"), list[30,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 68, 68].  Tensor sizes: [30, 1, 0, 68]
2025-03-05 15:23:00.820595 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 69],"bool"), list[30,8,243,69,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 69],"bool"), list[30,8,243,69,], ) 
 The expanded size of the tensor (243) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 243, 69].  Tensor sizes: [30, 1, 0, 69]
2025-03-05 15:23:00.821114 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 69],"bool"), list[30,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 69],"bool"), list[30,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 69, 69].  Tensor sizes: [30, 1, 0, 69]
2025-03-05 15:23:00.821641 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 70],"bool"), list[30,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 70],"bool"), list[30,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 70, 70].  Tensor sizes: [30, 1, 0, 70]
2025-03-05 15:23:00.822161 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 71],"bool"), list[30,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 71],"bool"), list[30,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 71, 71].  Tensor sizes: [30, 1, 0, 71]
2025-03-05 15:23:00.822676 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 72],"bool"), list[30,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 72],"bool"), list[30,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 72, 72].  Tensor sizes: [30, 1, 0, 72]
2025-03-05 15:23:00.823181 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,117,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,117,73,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 117, 73].  Tensor sizes: [30, 1, 0, 73]
2025-03-05 15:23:00.823696 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,121,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,121,73,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 121, 73].  Tensor sizes: [30, 1, 0, 73]
2025-03-05 15:23:00.824204 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,124,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,124,73,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 124, 73].  Tensor sizes: [30, 1, 0, 73]
2025-03-05 15:23:00.824724 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,125,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,125,73,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 125, 73].  Tensor sizes: [30, 1, 0, 73]
2025-03-05 15:23:00.825224 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,127,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,127,73,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 127, 73].  Tensor sizes: [30, 1, 0, 73]
2025-03-05 15:23:00.825753 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,130,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,130,73,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 130, 73].  Tensor sizes: [30, 1, 0, 73]
2025-03-05 15:23:00.826255 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,135,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,135,73,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 135, 73].  Tensor sizes: [30, 1, 0, 73]
2025-03-05 15:23:00.826768 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,141,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,141,73,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 141, 73].  Tensor sizes: [30, 1, 0, 73]
2025-03-05 15:23:00.827267 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,144,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,144,73,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 144, 73].  Tensor sizes: [30, 1, 0, 73]
2025-03-05 15:23:00.827784 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,151,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,151,73,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 151, 73].  Tensor sizes: [30, 1, 0, 73]
2025-03-05 15:23:00.828283 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,155,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,155,73,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 155, 73].  Tensor sizes: [30, 1, 0, 73]
2025-03-05 15:23:00.828796 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,173,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,173,73,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 173, 73].  Tensor sizes: [30, 1, 0, 73]
2025-03-05 15:23:00.829305 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,176,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,176,73,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 176, 73].  Tensor sizes: [30, 1, 0, 73]
2025-03-05 15:23:00.829823 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 73],"bool"), list[30,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 73, 73].  Tensor sizes: [30, 1, 0, 73]
2025-03-05 15:23:00.830326 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 74],"bool"), list[30,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 74],"bool"), list[30,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 74, 74].  Tensor sizes: [30, 1, 0, 74]
2025-03-05 15:23:00.830837 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 75],"bool"), list[30,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 75],"bool"), list[30,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 75, 75].  Tensor sizes: [30, 1, 0, 75]
2025-03-05 15:23:00.831355 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 76],"bool"), list[30,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 76],"bool"), list[30,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 76, 76].  Tensor sizes: [30, 1, 0, 76]
2025-03-05 15:23:00.831864 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 77],"bool"), list[30,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 77],"bool"), list[30,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 77, 77].  Tensor sizes: [30, 1, 0, 77]
2025-03-05 15:23:00.832366 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 78],"bool"), list[30,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 78],"bool"), list[30,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 78, 78].  Tensor sizes: [30, 1, 0, 78]
2025-03-05 15:23:00.832881 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 79],"bool"), list[30,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 79],"bool"), list[30,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 79, 79].  Tensor sizes: [30, 1, 0, 79]
2025-03-05 15:23:00.833379 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 80],"bool"), list[30,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 80],"bool"), list[30,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 80, 80].  Tensor sizes: [30, 1, 0, 80]
2025-03-05 15:23:00.833888 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,119,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,119,81,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 119, 81].  Tensor sizes: [30, 1, 0, 81]
2025-03-05 15:23:00.834395 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,120,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,120,81,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 120, 81].  Tensor sizes: [30, 1, 0, 81]
2025-03-05 15:23:00.834919 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,125,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,125,81,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 125, 81].  Tensor sizes: [30, 1, 0, 81]
2025-03-05 15:23:00.835430 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,126,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,126,81,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 126, 81].  Tensor sizes: [30, 1, 0, 81]
2025-03-05 15:23:00.835948 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,127,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,127,81,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 127, 81].  Tensor sizes: [30, 1, 0, 81]
2025-03-05 15:23:00.836461 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,130,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,130,81,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 130, 81].  Tensor sizes: [30, 1, 0, 81]
2025-03-05 15:23:00.836985 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,138,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,138,81,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 138, 81].  Tensor sizes: [30, 1, 0, 81]
2025-03-05 15:23:00.837508 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,155,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,155,81,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 155, 81].  Tensor sizes: [30, 1, 0, 81]
2025-03-05 15:23:00.838018 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,158,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,158,81,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 158, 81].  Tensor sizes: [30, 1, 0, 81]
2025-03-05 15:23:00.838520 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,165,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,165,81,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 165, 81].  Tensor sizes: [30, 1, 0, 81]
2025-03-05 15:23:00.839041 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,183,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,183,81,], ) 
 The expanded size of the tensor (183) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 183, 81].  Tensor sizes: [30, 1, 0, 81]
2025-03-05 15:23:00.839546 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 81],"bool"), list[30,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 81, 81].  Tensor sizes: [30, 1, 0, 81]
2025-03-05 15:23:00.840064 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 82],"bool"), list[30,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 82],"bool"), list[30,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 82, 82].  Tensor sizes: [30, 1, 0, 82]
2025-03-05 15:23:00.840568 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 83],"bool"), list[30,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 83],"bool"), list[30,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 83, 83].  Tensor sizes: [30, 1, 0, 83]
2025-03-05 15:23:00.841161 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 84],"bool"), list[30,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 84],"bool"), list[30,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 84, 84].  Tensor sizes: [30, 1, 0, 84]
2025-03-05 15:23:00.841720 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 85],"bool"), list[30,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 85],"bool"), list[30,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 85, 85].  Tensor sizes: [30, 1, 0, 85]
2025-03-05 15:23:00.842272 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 86],"bool"), list[30,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 86],"bool"), list[30,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 86, 86].  Tensor sizes: [30, 1, 0, 86]
2025-03-05 15:23:00.843318 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 87],"bool"), list[30,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 87],"bool"), list[30,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 87, 87].  Tensor sizes: [30, 1, 0, 87]
2025-03-05 15:23:00.843975 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 88],"bool"), list[30,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 88],"bool"), list[30,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 88, 88].  Tensor sizes: [30, 1, 0, 88]
2025-03-05 15:23:00.844576 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,119,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,119,89,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 119, 89].  Tensor sizes: [30, 1, 0, 89]
2025-03-05 15:23:00.845175 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,120,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,120,89,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 120, 89].  Tensor sizes: [30, 1, 0, 89]
2025-03-05 15:23:00.845839 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,140,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,140,89,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 140, 89].  Tensor sizes: [30, 1, 0, 89]
2025-03-05 15:23:00.846908 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,142,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,142,89,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 142, 89].  Tensor sizes: [30, 1, 0, 89]
2025-03-05 15:23:00.847624 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,164,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,164,89,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 164, 89].  Tensor sizes: [30, 1, 0, 89]
2025-03-05 15:23:00.848218 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,171,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,171,89,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 171, 89].  Tensor sizes: [30, 1, 0, 89]
2025-03-05 15:23:00.848760 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,172,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,172,89,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 172, 89].  Tensor sizes: [30, 1, 0, 89]
2025-03-05 15:23:00.849293 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,176,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,176,89,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 176, 89].  Tensor sizes: [30, 1, 0, 89]
2025-03-05 15:23:00.849853 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,200,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,200,89,], ) 
 The expanded size of the tensor (200) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 200, 89].  Tensor sizes: [30, 1, 0, 89]
2025-03-05 15:23:00.850391 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,220,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 89],"bool"), list[30,8,220,89,], ) 
 The expanded size of the tensor (220) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 220, 89].  Tensor sizes: [30, 1, 0, 89]
2025-03-05 15:23:00.850928 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 90],"bool"), list[30,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 90],"bool"), list[30,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 90, 90].  Tensor sizes: [30, 1, 0, 90]
2025-03-05 15:23:00.851439 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 91],"bool"), list[30,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 91],"bool"), list[30,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 91, 91].  Tensor sizes: [30, 1, 0, 91]
2025-03-05 15:23:00.851949 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 92],"bool"), list[30,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 92],"bool"), list[30,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 92, 92].  Tensor sizes: [30, 1, 0, 92]
2025-03-05 15:23:00.852546 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 93],"bool"), list[30,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 93],"bool"), list[30,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 93, 93].  Tensor sizes: [30, 1, 0, 93]
2025-03-05 15:23:00.853354 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 94],"bool"), list[30,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 94],"bool"), list[30,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 94, 94].  Tensor sizes: [30, 1, 0, 94]
2025-03-05 15:23:00.855187 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 95],"bool"), list[30,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 95],"bool"), list[30,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 95, 95].  Tensor sizes: [30, 1, 0, 95]
2025-03-05 15:23:00.855890 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 96],"bool"), list[30,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 96],"bool"), list[30,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 96, 96].  Tensor sizes: [30, 1, 0, 96]
2025-03-05 15:23:00.856489 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,134,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,134,97,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 134, 97].  Tensor sizes: [30, 1, 0, 97]
2025-03-05 15:23:00.857028 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,144,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,144,97,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 144, 97].  Tensor sizes: [30, 1, 0, 97]
2025-03-05 15:23:00.857549 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,170,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,170,97,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 170, 97].  Tensor sizes: [30, 1, 0, 97]
2025-03-05 15:23:00.858103 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,175,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,175,97,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 175, 97].  Tensor sizes: [30, 1, 0, 97]
2025-03-05 15:23:00.858683 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,191,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,191,97,], ) 
 The expanded size of the tensor (191) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 191, 97].  Tensor sizes: [30, 1, 0, 97]
2025-03-05 15:23:00.859195 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,197,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,197,97,], ) 
 The expanded size of the tensor (197) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 197, 97].  Tensor sizes: [30, 1, 0, 97]
2025-03-05 15:23:00.859731 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,293,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,293,97,], ) 
 The expanded size of the tensor (293) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 293, 97].  Tensor sizes: [30, 1, 0, 97]
2025-03-05 15:23:00.860250 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 97],"bool"), list[30,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 97, 97].  Tensor sizes: [30, 1, 0, 97]
2025-03-05 15:23:00.860770 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 98],"bool"), list[30,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 98],"bool"), list[30,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 98, 98].  Tensor sizes: [30, 1, 0, 98]
2025-03-05 15:23:00.861287 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 99],"bool"), list[30,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 99],"bool"), list[30,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 99, 99].  Tensor sizes: [30, 1, 0, 99]
2025-03-05 15:23:00.861812 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,19,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,19,9,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 19, 9].  Tensor sizes: [30, 1, 0, 9]
2025-03-05 15:23:00.862330 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,23,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,23,9,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 23, 9].  Tensor sizes: [30, 1, 0, 9]
2025-03-05 15:23:00.862865 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,24,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,24,9,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 24, 9].  Tensor sizes: [30, 1, 0, 9]
2025-03-05 15:23:00.863845 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,26,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,26,9,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 26, 9].  Tensor sizes: [30, 1, 0, 9]
2025-03-05 15:23:00.864479 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,28,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,28,9,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 28, 9].  Tensor sizes: [30, 1, 0, 9]
2025-03-05 15:23:00.865118 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,29,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,29,9,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 29, 9].  Tensor sizes: [30, 1, 0, 9]
2025-03-05 15:23:00.865645 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,31,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,31,9,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 31, 9].  Tensor sizes: [30, 1, 0, 9]
2025-03-05 15:23:00.866359 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,32,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,32,9,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 32, 9].  Tensor sizes: [30, 1, 0, 9]
2025-03-05 15:23:00.867001 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,33,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,33,9,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 33, 9].  Tensor sizes: [30, 1, 0, 9]
2025-03-05 15:23:00.867631 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,34,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,34,9,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 34, 9].  Tensor sizes: [30, 1, 0, 9]
2025-03-05 15:23:00.868236 test begin: paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,39,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 0, 9],"bool"), list[30,8,39,9,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [30, 8, 39, 9].  Tensor sizes: [30, 1, 0, 9]
2025-03-05 15:23:00.868836 test begin: paddle.broadcast_to(Tensor([30, 1, 100, 0],"bool"), list[30,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 100, 0],"bool"), list[30,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 100, 100].  Tensor sizes: [30, 1, 100, 0]
2025-03-05 15:23:00.869438 test begin: paddle.broadcast_to(Tensor([30, 1, 100, 0],"bool"), list[30,8,100,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 100, 0],"bool"), list[30,8,100,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 100, 57].  Tensor sizes: [30, 1, 100, 0]
2025-03-05 15:23:00.870100 test begin: paddle.broadcast_to(Tensor([30, 1, 100, 0],"bool"), list[30,8,100,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 100, 0],"bool"), list[30,8,100,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 100, 65].  Tensor sizes: [30, 1, 100, 0]
2025-03-05 15:23:00.870740 test begin: paddle.broadcast_to(Tensor([30, 1, 101, 0],"bool"), list[30,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 101, 0],"bool"), list[30,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 101, 101].  Tensor sizes: [30, 1, 101, 0]
2025-03-05 15:23:00.871392 test begin: paddle.broadcast_to(Tensor([30, 1, 101, 0],"bool"), list[30,8,101,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 101, 0],"bool"), list[30,8,101,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 101, 33].  Tensor sizes: [30, 1, 101, 0]
2025-03-05 15:23:00.872022 test begin: paddle.broadcast_to(Tensor([30, 1, 102, 0],"bool"), list[30,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 102, 0],"bool"), list[30,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 102, 102].  Tensor sizes: [30, 1, 102, 0]
2025-03-05 15:23:00.872657 test begin: paddle.broadcast_to(Tensor([30, 1, 102, 0],"bool"), list[30,8,102,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 102, 0],"bool"), list[30,8,102,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 102, 41].  Tensor sizes: [30, 1, 102, 0]
2025-03-05 15:23:00.873260 test begin: paddle.broadcast_to(Tensor([30, 1, 102, 0],"bool"), list[30,8,102,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 102, 0],"bool"), list[30,8,102,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 102, 49].  Tensor sizes: [30, 1, 102, 0]
2025-03-05 15:23:00.873886 test begin: paddle.broadcast_to(Tensor([30, 1, 103, 0],"bool"), list[30,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 103, 0],"bool"), list[30,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 103, 103].  Tensor sizes: [30, 1, 103, 0]
2025-03-05 15:23:00.874498 test begin: paddle.broadcast_to(Tensor([30, 1, 103, 0],"bool"), list[30,8,103,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 103, 0],"bool"), list[30,8,103,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 103, 33].  Tensor sizes: [30, 1, 103, 0]
2025-03-05 15:23:00.875109 test begin: paddle.broadcast_to(Tensor([30, 1, 104, 0],"bool"), list[30,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 104, 0],"bool"), list[30,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 104, 104].  Tensor sizes: [30, 1, 104, 0]
2025-03-05 15:23:00.875725 test begin: paddle.broadcast_to(Tensor([30, 1, 104, 0],"bool"), list[30,8,104,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 104, 0],"bool"), list[30,8,104,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 104, 37].  Tensor sizes: [30, 1, 104, 0]
2025-03-05 15:23:00.876330 test begin: paddle.broadcast_to(Tensor([30, 1, 104, 0],"bool"), list[30,8,104,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 104, 0],"bool"), list[30,8,104,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 104, 57].  Tensor sizes: [30, 1, 104, 0]
2025-03-05 15:23:00.876934 test begin: paddle.broadcast_to(Tensor([30, 1, 104, 0],"bool"), list[30,8,104,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 104, 0],"bool"), list[30,8,104,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 104, 65].  Tensor sizes: [30, 1, 104, 0]
2025-03-05 15:23:00.877539 test begin: paddle.broadcast_to(Tensor([30, 1, 106, 0],"bool"), list[30,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 106, 0],"bool"), list[30,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 106, 106].  Tensor sizes: [30, 1, 106, 0]
2025-03-05 15:23:00.878150 test begin: paddle.broadcast_to(Tensor([30, 1, 106, 0],"bool"), list[30,8,106,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 106, 0],"bool"), list[30,8,106,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 106, 41].  Tensor sizes: [30, 1, 106, 0]
2025-03-05 15:23:00.878749 test begin: paddle.broadcast_to(Tensor([30, 1, 106, 0],"bool"), list[30,8,106,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 106, 0],"bool"), list[30,8,106,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 106, 45].  Tensor sizes: [30, 1, 106, 0]
2025-03-05 15:23:00.879416 test begin: paddle.broadcast_to(Tensor([30, 1, 108, 0],"bool"), list[30,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 108, 0],"bool"), list[30,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 108, 108].  Tensor sizes: [30, 1, 108, 0]
2025-03-05 15:23:00.880452 test begin: paddle.broadcast_to(Tensor([30, 1, 108, 0],"bool"), list[30,8,108,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 108, 0],"bool"), list[30,8,108,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 108, 33].  Tensor sizes: [30, 1, 108, 0]
2025-03-05 15:23:00.881086 test begin: paddle.broadcast_to(Tensor([30, 1, 108, 0],"bool"), list[30,8,108,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 108, 0],"bool"), list[30,8,108,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 108, 41].  Tensor sizes: [30, 1, 108, 0]
2025-03-05 15:23:00.881644 test begin: paddle.broadcast_to(Tensor([30, 1, 109, 0],"bool"), list[30,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 109, 0],"bool"), list[30,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 109, 109].  Tensor sizes: [30, 1, 109, 0]
2025-03-05 15:23:00.882197 test begin: paddle.broadcast_to(Tensor([30, 1, 109, 0],"bool"), list[30,8,109,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 109, 0],"bool"), list[30,8,109,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 109, 57].  Tensor sizes: [30, 1, 109, 0]
2025-03-05 15:23:00.882745 test begin: paddle.broadcast_to(Tensor([30, 1, 110, 0],"bool"), list[30,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 110, 0],"bool"), list[30,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 110, 110].  Tensor sizes: [30, 1, 110, 0]
2025-03-05 15:23:00.885960 test begin: paddle.broadcast_to(Tensor([30, 1, 110, 0],"bool"), list[30,8,110,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 110, 0],"bool"), list[30,8,110,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 110, 41].  Tensor sizes: [30, 1, 110, 0]
2025-03-05 15:23:00.887045 test begin: paddle.broadcast_to(Tensor([30, 1, 110, 0],"bool"), list[30,8,110,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 110, 0],"bool"), list[30,8,110,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 110, 45].  Tensor sizes: [30, 1, 110, 0]
2025-03-05 15:23:00.887612 test begin: paddle.broadcast_to(Tensor([30, 1, 111, 0],"bool"), list[30,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 111, 0],"bool"), list[30,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 111, 111].  Tensor sizes: [30, 1, 111, 0]
2025-03-05 15:23:00.888148 test begin: paddle.broadcast_to(Tensor([30, 1, 111, 0],"bool"), list[30,8,111,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 111, 0],"bool"), list[30,8,111,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 111, 45].  Tensor sizes: [30, 1, 111, 0]
2025-03-05 15:23:00.888690 test begin: paddle.broadcast_to(Tensor([30, 1, 111, 0],"bool"), list[30,8,111,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 111, 0],"bool"), list[30,8,111,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 111, 65].  Tensor sizes: [30, 1, 111, 0]
2025-03-05 15:23:00.889230 test begin: paddle.broadcast_to(Tensor([30, 1, 112, 0],"bool"), list[30,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 112, 0],"bool"), list[30,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 112, 112].  Tensor sizes: [30, 1, 112, 0]
2025-03-05 15:23:00.889781 test begin: paddle.broadcast_to(Tensor([30, 1, 112, 0],"bool"), list[30,8,112,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 112, 0],"bool"), list[30,8,112,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 112, 49].  Tensor sizes: [30, 1, 112, 0]
2025-03-05 15:23:00.890308 test begin: paddle.broadcast_to(Tensor([30, 1, 112, 0],"bool"), list[30,8,112,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 112, 0],"bool"), list[30,8,112,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 112, 65].  Tensor sizes: [30, 1, 112, 0]
2025-03-05 15:23:00.890847 test begin: paddle.broadcast_to(Tensor([30, 1, 113, 0],"bool"), list[30,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 113, 0],"bool"), list[30,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 113, 113].  Tensor sizes: [30, 1, 113, 0]
2025-03-05 15:23:00.891424 test begin: paddle.broadcast_to(Tensor([30, 1, 113, 0],"bool"), list[30,8,113,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 113, 0],"bool"), list[30,8,113,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 113, 41].  Tensor sizes: [30, 1, 113, 0]
2025-03-05 15:23:00.891983 test begin: paddle.broadcast_to(Tensor([30, 1, 114, 0],"bool"), list[30,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 114, 0],"bool"), list[30,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 114, 114].  Tensor sizes: [30, 1, 114, 0]
2025-03-05 15:23:00.892526 test begin: paddle.broadcast_to(Tensor([30, 1, 114, 0],"bool"), list[30,8,114,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 114, 0],"bool"), list[30,8,114,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 114, 57].  Tensor sizes: [30, 1, 114, 0]
2025-03-05 15:23:00.893079 test begin: paddle.broadcast_to(Tensor([30, 1, 114, 0],"bool"), list[30,8,114,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 114, 0],"bool"), list[30,8,114,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 114, 65].  Tensor sizes: [30, 1, 114, 0]
2025-03-05 15:23:00.893664 test begin: paddle.broadcast_to(Tensor([30, 1, 115, 0],"bool"), list[30,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 115, 0],"bool"), list[30,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 115, 115].  Tensor sizes: [30, 1, 115, 0]
2025-03-05 15:23:00.894221 test begin: paddle.broadcast_to(Tensor([30, 1, 115, 0],"bool"), list[30,8,115,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 115, 0],"bool"), list[30,8,115,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 115, 65].  Tensor sizes: [30, 1, 115, 0]
2025-03-05 15:23:00.894760 test begin: paddle.broadcast_to(Tensor([30, 1, 116, 0],"bool"), list[30,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 116, 0],"bool"), list[30,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 116, 116].  Tensor sizes: [30, 1, 116, 0]
2025-03-05 15:23:00.895304 test begin: paddle.broadcast_to(Tensor([30, 1, 116, 0],"bool"), list[30,8,116,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 116, 0],"bool"), list[30,8,116,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 116, 45].  Tensor sizes: [30, 1, 116, 0]
2025-03-05 15:23:00.895857 test begin: paddle.broadcast_to(Tensor([30, 1, 116, 0],"bool"), list[30,8,116,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 116, 0],"bool"), list[30,8,116,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 116, 57].  Tensor sizes: [30, 1, 116, 0]
2025-03-05 15:23:00.896399 test begin: paddle.broadcast_to(Tensor([30, 1, 117, 0],"bool"), list[30,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 117, 0],"bool"), list[30,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 117, 117].  Tensor sizes: [30, 1, 117, 0]
2025-03-05 15:23:00.896983 test begin: paddle.broadcast_to(Tensor([30, 1, 117, 0],"bool"), list[30,8,117,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 117, 0],"bool"), list[30,8,117,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 117, 65].  Tensor sizes: [30, 1, 117, 0]
2025-03-05 15:23:00.897529 test begin: paddle.broadcast_to(Tensor([30, 1, 117, 0],"bool"), list[30,8,117,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 117, 0],"bool"), list[30,8,117,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 117, 73].  Tensor sizes: [30, 1, 117, 0]
2025-03-05 15:23:00.898072 test begin: paddle.broadcast_to(Tensor([30, 1, 118, 0],"bool"), list[30,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 118, 0],"bool"), list[30,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 118, 118].  Tensor sizes: [30, 1, 118, 0]
2025-03-05 15:23:00.898615 test begin: paddle.broadcast_to(Tensor([30, 1, 118, 0],"bool"), list[30,8,118,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 118, 0],"bool"), list[30,8,118,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 118, 57].  Tensor sizes: [30, 1, 118, 0]
2025-03-05 15:23:00.899174 test begin: paddle.broadcast_to(Tensor([30, 1, 119, 0],"bool"), list[30,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 119, 0],"bool"), list[30,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 119, 119].  Tensor sizes: [30, 1, 119, 0]
2025-03-05 15:23:00.899721 test begin: paddle.broadcast_to(Tensor([30, 1, 119, 0],"bool"), list[30,8,119,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 119, 0],"bool"), list[30,8,119,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 119, 65].  Tensor sizes: [30, 1, 119, 0]
2025-03-05 15:23:00.900255 test begin: paddle.broadcast_to(Tensor([30, 1, 119, 0],"bool"), list[30,8,119,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 119, 0],"bool"), list[30,8,119,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 119, 81].  Tensor sizes: [30, 1, 119, 0]
2025-03-05 15:23:00.900790 test begin: paddle.broadcast_to(Tensor([30, 1, 119, 0],"bool"), list[30,8,119,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 119, 0],"bool"), list[30,8,119,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 119, 89].  Tensor sizes: [30, 1, 119, 0]
2025-03-05 15:23:00.901340 test begin: paddle.broadcast_to(Tensor([30, 1, 120, 0],"bool"), list[30,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 120, 0],"bool"), list[30,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 120, 120].  Tensor sizes: [30, 1, 120, 0]
2025-03-05 15:23:00.901884 test begin: paddle.broadcast_to(Tensor([30, 1, 120, 0],"bool"), list[30,8,120,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 120, 0],"bool"), list[30,8,120,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 120, 81].  Tensor sizes: [30, 1, 120, 0]
2025-03-05 15:23:00.902418 test begin: paddle.broadcast_to(Tensor([30, 1, 120, 0],"bool"), list[30,8,120,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 120, 0],"bool"), list[30,8,120,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 120, 89].  Tensor sizes: [30, 1, 120, 0]
2025-03-05 15:23:00.902952 test begin: paddle.broadcast_to(Tensor([30, 1, 121, 0],"bool"), list[30,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 121, 0],"bool"), list[30,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 121, 121].  Tensor sizes: [30, 1, 121, 0]
2025-03-05 15:23:00.903474 test begin: paddle.broadcast_to(Tensor([30, 1, 121, 0],"bool"), list[30,8,121,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 121, 0],"bool"), list[30,8,121,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 121, 37].  Tensor sizes: [30, 1, 121, 0]
2025-03-05 15:23:00.904008 test begin: paddle.broadcast_to(Tensor([30, 1, 121, 0],"bool"), list[30,8,121,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 121, 0],"bool"), list[30,8,121,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 121, 49].  Tensor sizes: [30, 1, 121, 0]
2025-03-05 15:23:00.904568 test begin: paddle.broadcast_to(Tensor([30, 1, 121, 0],"bool"), list[30,8,121,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 121, 0],"bool"), list[30,8,121,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 121, 57].  Tensor sizes: [30, 1, 121, 0]
2025-03-05 15:23:00.905142 test begin: paddle.broadcast_to(Tensor([30, 1, 121, 0],"bool"), list[30,8,121,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 121, 0],"bool"), list[30,8,121,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 121, 73].  Tensor sizes: [30, 1, 121, 0]
2025-03-05 15:23:00.905681 test begin: paddle.broadcast_to(Tensor([30, 1, 123, 0],"bool"), list[30,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 123, 0],"bool"), list[30,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 123, 123].  Tensor sizes: [30, 1, 123, 0]
2025-03-05 15:23:00.906210 test begin: paddle.broadcast_to(Tensor([30, 1, 123, 0],"bool"), list[30,8,123,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 123, 0],"bool"), list[30,8,123,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 123, 49].  Tensor sizes: [30, 1, 123, 0]
2025-03-05 15:23:00.906743 test begin: paddle.broadcast_to(Tensor([30, 1, 124, 0],"bool"), list[30,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 124, 0],"bool"), list[30,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 124, 124].  Tensor sizes: [30, 1, 124, 0]
2025-03-05 15:23:00.907288 test begin: paddle.broadcast_to(Tensor([30, 1, 124, 0],"bool"), list[30,8,124,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 124, 0],"bool"), list[30,8,124,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 124, 33].  Tensor sizes: [30, 1, 124, 0]
2025-03-05 15:23:00.907853 test begin: paddle.broadcast_to(Tensor([30, 1, 124, 0],"bool"), list[30,8,124,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 124, 0],"bool"), list[30,8,124,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 124, 73].  Tensor sizes: [30, 1, 124, 0]
2025-03-05 15:23:00.908395 test begin: paddle.broadcast_to(Tensor([30, 1, 125, 0],"bool"), list[30,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 125, 0],"bool"), list[30,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 125, 125].  Tensor sizes: [30, 1, 125, 0]
2025-03-05 15:23:00.908995 test begin: paddle.broadcast_to(Tensor([30, 1, 125, 0],"bool"), list[30,8,125,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 125, 0],"bool"), list[30,8,125,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 125, 73].  Tensor sizes: [30, 1, 125, 0]
2025-03-05 15:23:00.909537 test begin: paddle.broadcast_to(Tensor([30, 1, 125, 0],"bool"), list[30,8,125,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 125, 0],"bool"), list[30,8,125,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 125, 81].  Tensor sizes: [30, 1, 125, 0]
2025-03-05 15:23:00.910079 test begin: paddle.broadcast_to(Tensor([30, 1, 126, 0],"bool"), list[30,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 126, 0],"bool"), list[30,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 126, 126].  Tensor sizes: [30, 1, 126, 0]
2025-03-05 15:23:00.910620 test begin: paddle.broadcast_to(Tensor([30, 1, 126, 0],"bool"), list[30,8,126,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 126, 0],"bool"), list[30,8,126,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 126, 49].  Tensor sizes: [30, 1, 126, 0]
2025-03-05 15:23:00.911151 test begin: paddle.broadcast_to(Tensor([30, 1, 126, 0],"bool"), list[30,8,126,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 126, 0],"bool"), list[30,8,126,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 126, 81].  Tensor sizes: [30, 1, 126, 0]
2025-03-05 15:23:00.911683 test begin: paddle.broadcast_to(Tensor([30, 1, 127, 0],"bool"), list[30,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 127, 0],"bool"), list[30,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 127, 127].  Tensor sizes: [30, 1, 127, 0]
2025-03-05 15:23:00.912204 test begin: paddle.broadcast_to(Tensor([30, 1, 127, 0],"bool"), list[30,8,127,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 127, 0],"bool"), list[30,8,127,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 127, 73].  Tensor sizes: [30, 1, 127, 0]
2025-03-05 15:23:00.912734 test begin: paddle.broadcast_to(Tensor([30, 1, 127, 0],"bool"), list[30,8,127,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 127, 0],"bool"), list[30,8,127,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 127, 81].  Tensor sizes: [30, 1, 127, 0]
2025-03-05 15:23:00.913263 test begin: paddle.broadcast_to(Tensor([30, 1, 128, 0],"bool"), list[30,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 128, 0],"bool"), list[30,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 128, 128].  Tensor sizes: [30, 1, 128, 0]
2025-03-05 15:23:00.913813 test begin: paddle.broadcast_to(Tensor([30, 1, 128, 0],"bool"), list[30,8,128,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 128, 0],"bool"), list[30,8,128,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 128, 49].  Tensor sizes: [30, 1, 128, 0]
2025-03-05 15:23:00.914344 test begin: paddle.broadcast_to(Tensor([30, 1, 128, 0],"bool"), list[30,8,128,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 128, 0],"bool"), list[30,8,128,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 128, 65].  Tensor sizes: [30, 1, 128, 0]
2025-03-05 15:23:00.914880 test begin: paddle.broadcast_to(Tensor([30, 1, 129, 0],"bool"), list[30,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 129, 0],"bool"), list[30,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 129, 129].  Tensor sizes: [30, 1, 129, 0]
2025-03-05 15:23:00.915406 test begin: paddle.broadcast_to(Tensor([30, 1, 129, 0],"bool"), list[30,8,129,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 129, 0],"bool"), list[30,8,129,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 129, 37].  Tensor sizes: [30, 1, 129, 0]
2025-03-05 15:23:00.915930 test begin: paddle.broadcast_to(Tensor([30, 1, 129, 0],"bool"), list[30,8,129,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 129, 0],"bool"), list[30,8,129,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 129, 41].  Tensor sizes: [30, 1, 129, 0]
2025-03-05 15:23:00.916470 test begin: paddle.broadcast_to(Tensor([30, 1, 129, 0],"bool"), list[30,8,129,45,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 129, 0],"bool"), list[30,8,129,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 129, 45].  Tensor sizes: [30, 1, 129, 0]
2025-03-05 15:23:00.917017 test begin: paddle.broadcast_to(Tensor([30, 1, 129, 0],"bool"), list[30,8,129,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 129, 0],"bool"), list[30,8,129,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 129, 53].  Tensor sizes: [30, 1, 129, 0]
2025-03-05 15:23:00.917537 test begin: paddle.broadcast_to(Tensor([30, 1, 129, 0],"bool"), list[30,8,129,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 129, 0],"bool"), list[30,8,129,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 129, 57].  Tensor sizes: [30, 1, 129, 0]
2025-03-05 15:23:00.918083 test begin: paddle.broadcast_to(Tensor([30, 1, 130, 0],"bool"), list[30,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 130, 0],"bool"), list[30,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 130, 130].  Tensor sizes: [30, 1, 130, 0]
2025-03-05 15:23:00.918612 test begin: paddle.broadcast_to(Tensor([30, 1, 130, 0],"bool"), list[30,8,130,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 130, 0],"bool"), list[30,8,130,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 130, 73].  Tensor sizes: [30, 1, 130, 0]
2025-03-05 15:23:00.919141 test begin: paddle.broadcast_to(Tensor([30, 1, 130, 0],"bool"), list[30,8,130,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 130, 0],"bool"), list[30,8,130,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 130, 81].  Tensor sizes: [30, 1, 130, 0]
2025-03-05 15:23:00.919681 test begin: paddle.broadcast_to(Tensor([30, 1, 133, 0],"bool"), list[30,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 133, 0],"bool"), list[30,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 133, 133].  Tensor sizes: [30, 1, 133, 0]
2025-03-05 15:23:00.920209 test begin: paddle.broadcast_to(Tensor([30, 1, 133, 0],"bool"), list[30,8,133,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 133, 0],"bool"), list[30,8,133,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 133, 49].  Tensor sizes: [30, 1, 133, 0]
2025-03-05 15:23:00.920785 test begin: paddle.broadcast_to(Tensor([30, 1, 134, 0],"bool"), list[30,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 134, 0],"bool"), list[30,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 134, 134].  Tensor sizes: [30, 1, 134, 0]
2025-03-05 15:23:00.921324 test begin: paddle.broadcast_to(Tensor([30, 1, 134, 0],"bool"), list[30,8,134,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 134, 0],"bool"), list[30,8,134,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 134, 97].  Tensor sizes: [30, 1, 134, 0]
2025-03-05 15:23:00.921856 test begin: paddle.broadcast_to(Tensor([30, 1, 135, 0],"bool"), list[30,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 135, 0],"bool"), list[30,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 135, 135].  Tensor sizes: [30, 1, 135, 0]
2025-03-05 15:23:00.922381 test begin: paddle.broadcast_to(Tensor([30, 1, 135, 0],"bool"), list[30,8,135,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 135, 0],"bool"), list[30,8,135,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 135, 73].  Tensor sizes: [30, 1, 135, 0]
2025-03-05 15:23:00.922912 test begin: paddle.broadcast_to(Tensor([30, 1, 138, 0],"bool"), list[30,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 138, 0],"bool"), list[30,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 138, 138].  Tensor sizes: [30, 1, 138, 0]
2025-03-05 15:23:00.923437 test begin: paddle.broadcast_to(Tensor([30, 1, 138, 0],"bool"), list[30,8,138,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 138, 0],"bool"), list[30,8,138,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 138, 65].  Tensor sizes: [30, 1, 138, 0]
2025-03-05 15:23:00.923968 test begin: paddle.broadcast_to(Tensor([30, 1, 138, 0],"bool"), list[30,8,138,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 138, 0],"bool"), list[30,8,138,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 138, 81].  Tensor sizes: [30, 1, 138, 0]
2025-03-05 15:23:00.924903 test begin: paddle.broadcast_to(Tensor([30, 1, 139, 0],"bool"), list[30,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 139, 0],"bool"), list[30,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 139, 139].  Tensor sizes: [30, 1, 139, 0]
2025-03-05 15:23:00.925564 test begin: paddle.broadcast_to(Tensor([30, 1, 139, 0],"bool"), list[30,8,139,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 139, 0],"bool"), list[30,8,139,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 139, 41].  Tensor sizes: [30, 1, 139, 0]
2025-03-05 15:23:00.926224 test begin: paddle.broadcast_to(Tensor([30, 1, 140, 0],"bool"), list[30,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 140, 0],"bool"), list[30,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 140, 140].  Tensor sizes: [30, 1, 140, 0]
2025-03-05 15:23:00.926880 test begin: paddle.broadcast_to(Tensor([30, 1, 140, 0],"bool"), list[30,8,140,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 140, 0],"bool"), list[30,8,140,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 140, 89].  Tensor sizes: [30, 1, 140, 0]
2025-03-05 15:23:00.927638 test begin: paddle.broadcast_to(Tensor([30, 1, 141, 0],"bool"), list[30,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 141, 0],"bool"), list[30,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 141, 141].  Tensor sizes: [30, 1, 141, 0]
2025-03-05 15:23:00.928302 test begin: paddle.broadcast_to(Tensor([30, 1, 141, 0],"bool"), list[30,8,141,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 141, 0],"bool"), list[30,8,141,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 141, 73].  Tensor sizes: [30, 1, 141, 0]
2025-03-05 15:23:00.929394 test begin: paddle.broadcast_to(Tensor([30, 1, 142, 0],"bool"), list[30,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 142, 0],"bool"), list[30,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 142, 142].  Tensor sizes: [30, 1, 142, 0]
2025-03-05 15:23:00.930164 test begin: paddle.broadcast_to(Tensor([30, 1, 142, 0],"bool"), list[30,8,142,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 142, 0],"bool"), list[30,8,142,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 142, 89].  Tensor sizes: [30, 1, 142, 0]
2025-03-05 15:23:00.930759 test begin: paddle.broadcast_to(Tensor([30, 1, 144, 0],"bool"), list[30,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 144, 0],"bool"), list[30,8,144,144,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 144, 144].  Tensor sizes: [30, 1, 144, 0]
2025-03-05 15:23:00.931321 test begin: paddle.broadcast_to(Tensor([30, 1, 144, 0],"bool"), list[30,8,144,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 144, 0],"bool"), list[30,8,144,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 144, 25].  Tensor sizes: [30, 1, 144, 0]
2025-03-05 15:23:00.931877 test begin: paddle.broadcast_to(Tensor([30, 1, 144, 0],"bool"), list[30,8,144,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 144, 0],"bool"), list[30,8,144,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 144, 73].  Tensor sizes: [30, 1, 144, 0]
2025-03-05 15:23:00.932619 test begin: paddle.broadcast_to(Tensor([30, 1, 144, 0],"bool"), list[30,8,144,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 144, 0],"bool"), list[30,8,144,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 144, 97].  Tensor sizes: [30, 1, 144, 0]
2025-03-05 15:23:00.933242 test begin: paddle.broadcast_to(Tensor([30, 1, 147, 0],"bool"), list[30,8,147,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 147, 0],"bool"), list[30,8,147,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 147, 105].  Tensor sizes: [30, 1, 147, 0]
2025-03-05 15:23:00.933960 test begin: paddle.broadcast_to(Tensor([30, 1, 147, 0],"bool"), list[30,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 147, 0],"bool"), list[30,8,147,147,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 147, 147].  Tensor sizes: [30, 1, 147, 0]
2025-03-05 15:23:00.934714 test begin: paddle.broadcast_to(Tensor([30, 1, 147, 0],"bool"), list[30,8,147,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 147, 0],"bool"), list[30,8,147,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 147, 41].  Tensor sizes: [30, 1, 147, 0]
2025-03-05 15:23:00.935457 test begin: paddle.broadcast_to(Tensor([30, 1, 147, 0],"bool"), list[30,8,147,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 147, 0],"bool"), list[30,8,147,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 147, 57].  Tensor sizes: [30, 1, 147, 0]
2025-03-05 15:23:00.936124 test begin: paddle.broadcast_to(Tensor([30, 1, 149, 0],"bool"), list[30,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 149, 0],"bool"), list[30,8,149,149,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 149, 149].  Tensor sizes: [30, 1, 149, 0]
2025-03-05 15:23:00.936754 test begin: paddle.broadcast_to(Tensor([30, 1, 149, 0],"bool"), list[30,8,149,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 149, 0],"bool"), list[30,8,149,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 149, 65].  Tensor sizes: [30, 1, 149, 0]
2025-03-05 15:23:00.937481 test begin: paddle.broadcast_to(Tensor([30, 1, 150, 0],"bool"), list[30,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 150, 0],"bool"), list[30,8,150,150,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 150, 150].  Tensor sizes: [30, 1, 150, 0]
2025-03-05 15:23:00.938134 test begin: paddle.broadcast_to(Tensor([30, 1, 150, 0],"bool"), list[30,8,150,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 150, 0],"bool"), list[30,8,150,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 150, 49].  Tensor sizes: [30, 1, 150, 0]
2025-03-05 15:23:00.938763 test begin: paddle.broadcast_to(Tensor([30, 1, 151, 0],"bool"), list[30,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 151, 0],"bool"), list[30,8,151,151,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 151, 151].  Tensor sizes: [30, 1, 151, 0]
2025-03-05 15:23:00.939383 test begin: paddle.broadcast_to(Tensor([30, 1, 151, 0],"bool"), list[30,8,151,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 151, 0],"bool"), list[30,8,151,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 151, 53].  Tensor sizes: [30, 1, 151, 0]
2025-03-05 15:23:00.940011 test begin: paddle.broadcast_to(Tensor([30, 1, 151, 0],"bool"), list[30,8,151,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 151, 0],"bool"), list[30,8,151,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 151, 73].  Tensor sizes: [30, 1, 151, 0]
2025-03-05 15:23:00.940644 test begin: paddle.broadcast_to(Tensor([30, 1, 154, 0],"bool"), list[30,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 154, 0],"bool"), list[30,8,154,154,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 154, 154].  Tensor sizes: [30, 1, 154, 0]
2025-03-05 15:23:00.941294 test begin: paddle.broadcast_to(Tensor([30, 1, 154, 0],"bool"), list[30,8,154,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 154, 0],"bool"), list[30,8,154,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 154, 65].  Tensor sizes: [30, 1, 154, 0]
2025-03-05 15:23:00.941925 test begin: paddle.broadcast_to(Tensor([30, 1, 155, 0],"bool"), list[30,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 155, 0],"bool"), list[30,8,155,155,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 155, 155].  Tensor sizes: [30, 1, 155, 0]
2025-03-05 15:23:00.942540 test begin: paddle.broadcast_to(Tensor([30, 1, 155, 0],"bool"), list[30,8,155,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 155, 0],"bool"), list[30,8,155,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 155, 73].  Tensor sizes: [30, 1, 155, 0]
2025-03-05 15:23:00.943173 test begin: paddle.broadcast_to(Tensor([30, 1, 155, 0],"bool"), list[30,8,155,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 155, 0],"bool"), list[30,8,155,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 155, 81].  Tensor sizes: [30, 1, 155, 0]
2025-03-05 15:23:00.943804 test begin: paddle.broadcast_to(Tensor([30, 1, 158, 0],"bool"), list[30,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 158, 0],"bool"), list[30,8,158,158,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 158, 158].  Tensor sizes: [30, 1, 158, 0]
2025-03-05 15:23:00.944431 test begin: paddle.broadcast_to(Tensor([30, 1, 158, 0],"bool"), list[30,8,158,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 158, 0],"bool"), list[30,8,158,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 158, 81].  Tensor sizes: [30, 1, 158, 0]
2025-03-05 15:23:00.945058 test begin: paddle.broadcast_to(Tensor([30, 1, 162, 0],"bool"), list[30,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 162, 0],"bool"), list[30,8,162,162,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 162, 162].  Tensor sizes: [30, 1, 162, 0]
2025-03-05 15:23:00.945702 test begin: paddle.broadcast_to(Tensor([30, 1, 162, 0],"bool"), list[30,8,162,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 162, 0],"bool"), list[30,8,162,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 162, 57].  Tensor sizes: [30, 1, 162, 0]
2025-03-05 15:23:00.946328 test begin: paddle.broadcast_to(Tensor([30, 1, 163, 0],"bool"), list[30,8,163,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 163, 0],"bool"), list[30,8,163,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 163, 113].  Tensor sizes: [30, 1, 163, 0]
2025-03-05 15:23:00.946955 test begin: paddle.broadcast_to(Tensor([30, 1, 163, 0],"bool"), list[30,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 163, 0],"bool"), list[30,8,163,163,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 163, 163].  Tensor sizes: [30, 1, 163, 0]
2025-03-05 15:23:00.947580 test begin: paddle.broadcast_to(Tensor([30, 1, 164, 0],"bool"), list[30,8,164,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 164, 0],"bool"), list[30,8,164,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 164, 105].  Tensor sizes: [30, 1, 164, 0]
2025-03-05 15:23:00.948455 test begin: paddle.broadcast_to(Tensor([30, 1, 164, 0],"bool"), list[30,8,164,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 164, 0],"bool"), list[30,8,164,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 164, 113].  Tensor sizes: [30, 1, 164, 0]
2025-03-05 15:23:00.949188 test begin: paddle.broadcast_to(Tensor([30, 1, 164, 0],"bool"), list[30,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 164, 0],"bool"), list[30,8,164,164,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 164, 164].  Tensor sizes: [30, 1, 164, 0]
2025-03-05 15:23:00.949852 test begin: paddle.broadcast_to(Tensor([30, 1, 164, 0],"bool"), list[30,8,164,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 164, 0],"bool"), list[30,8,164,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 164, 89].  Tensor sizes: [30, 1, 164, 0]
2025-03-05 15:23:00.950493 test begin: paddle.broadcast_to(Tensor([30, 1, 165, 0],"bool"), list[30,8,165,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 165, 0],"bool"), list[30,8,165,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 165, 105].  Tensor sizes: [30, 1, 165, 0]
2025-03-05 15:23:00.951134 test begin: paddle.broadcast_to(Tensor([30, 1, 165, 0],"bool"), list[30,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 165, 0],"bool"), list[30,8,165,165,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 165, 165].  Tensor sizes: [30, 1, 165, 0]
2025-03-05 15:23:00.951783 test begin: paddle.broadcast_to(Tensor([30, 1, 165, 0],"bool"), list[30,8,165,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 165, 0],"bool"), list[30,8,165,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 165, 81].  Tensor sizes: [30, 1, 165, 0]
2025-03-05 15:23:00.952412 test begin: paddle.broadcast_to(Tensor([30, 1, 169, 0],"bool"), list[30,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 169, 0],"bool"), list[30,8,169,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 169, 169].  Tensor sizes: [30, 1, 169, 0]
2025-03-05 15:23:00.953059 test begin: paddle.broadcast_to(Tensor([30, 1, 169, 0],"bool"), list[30,8,169,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 169, 0],"bool"), list[30,8,169,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 169, 37].  Tensor sizes: [30, 1, 169, 0]
2025-03-05 15:23:00.953703 test begin: paddle.broadcast_to(Tensor([30, 1, 17, 0],"bool"), list[30,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 17, 0],"bool"), list[30,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 17, 17].  Tensor sizes: [30, 1, 17, 0]
2025-03-05 15:23:00.954330 test begin: paddle.broadcast_to(Tensor([30, 1, 17, 0],"bool"), list[30,8,17,5,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 17, 0],"bool"), list[30,8,17,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 17, 5].  Tensor sizes: [30, 1, 17, 0]
2025-03-05 15:23:00.954962 test begin: paddle.broadcast_to(Tensor([30, 1, 170, 0],"bool"), list[30,8,170,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 170, 0],"bool"), list[30,8,170,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 170, 129].  Tensor sizes: [30, 1, 170, 0]
2025-03-05 15:23:00.955614 test begin: paddle.broadcast_to(Tensor([30, 1, 170, 0],"bool"), list[30,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 170, 0],"bool"), list[30,8,170,170,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 170, 170].  Tensor sizes: [30, 1, 170, 0]
2025-03-05 15:23:00.956243 test begin: paddle.broadcast_to(Tensor([30, 1, 170, 0],"bool"), list[30,8,170,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 170, 0],"bool"), list[30,8,170,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 170, 57].  Tensor sizes: [30, 1, 170, 0]
2025-03-05 15:23:00.956887 test begin: paddle.broadcast_to(Tensor([30, 1, 170, 0],"bool"), list[30,8,170,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 170, 0],"bool"), list[30,8,170,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 170, 97].  Tensor sizes: [30, 1, 170, 0]
2025-03-05 15:23:00.957508 test begin: paddle.broadcast_to(Tensor([30, 1, 171, 0],"bool"), list[30,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 171, 0],"bool"), list[30,8,171,171,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 171, 171].  Tensor sizes: [30, 1, 171, 0]
2025-03-05 15:23:00.958154 test begin: paddle.broadcast_to(Tensor([30, 1, 171, 0],"bool"), list[30,8,171,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 171, 0],"bool"), list[30,8,171,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 171, 53].  Tensor sizes: [30, 1, 171, 0]
2025-03-05 15:23:00.958794 test begin: paddle.broadcast_to(Tensor([30, 1, 171, 0],"bool"), list[30,8,171,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 171, 0],"bool"), list[30,8,171,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 171, 89].  Tensor sizes: [30, 1, 171, 0]
2025-03-05 15:23:00.959427 test begin: paddle.broadcast_to(Tensor([30, 1, 172, 0],"bool"), list[30,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 172, 0],"bool"), list[30,8,172,172,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 172, 172].  Tensor sizes: [30, 1, 172, 0]
2025-03-05 15:23:00.960059 test begin: paddle.broadcast_to(Tensor([30, 1, 172, 0],"bool"), list[30,8,172,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 172, 0],"bool"), list[30,8,172,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 172, 53].  Tensor sizes: [30, 1, 172, 0]
2025-03-05 15:23:00.960768 test begin: paddle.broadcast_to(Tensor([30, 1, 172, 0],"bool"), list[30,8,172,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 172, 0],"bool"), list[30,8,172,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 172, 89].  Tensor sizes: [30, 1, 172, 0]
2025-03-05 15:23:00.961401 test begin: paddle.broadcast_to(Tensor([30, 1, 173, 0],"bool"), list[30,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 173, 0],"bool"), list[30,8,173,173,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 173, 173].  Tensor sizes: [30, 1, 173, 0]
2025-03-05 15:23:00.962040 test begin: paddle.broadcast_to(Tensor([30, 1, 173, 0],"bool"), list[30,8,173,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 173, 0],"bool"), list[30,8,173,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 173, 73].  Tensor sizes: [30, 1, 173, 0]
2025-03-05 15:23:00.962690 test begin: paddle.broadcast_to(Tensor([30, 1, 175, 0],"bool"), list[30,8,175,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 175, 0],"bool"), list[30,8,175,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 175, 113].  Tensor sizes: [30, 1, 175, 0]
2025-03-05 15:23:00.963321 test begin: paddle.broadcast_to(Tensor([30, 1, 175, 0],"bool"), list[30,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 175, 0],"bool"), list[30,8,175,175,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 175, 175].  Tensor sizes: [30, 1, 175, 0]
2025-03-05 15:23:00.963973 test begin: paddle.broadcast_to(Tensor([30, 1, 175, 0],"bool"), list[30,8,175,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 175, 0],"bool"), list[30,8,175,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 175, 97].  Tensor sizes: [30, 1, 175, 0]
2025-03-05 15:23:00.967213 test begin: paddle.broadcast_to(Tensor([30, 1, 176, 0],"bool"), list[30,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 176, 0],"bool"), list[30,8,176,176,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 176, 176].  Tensor sizes: [30, 1, 176, 0]
2025-03-05 15:23:00.968406 test begin: paddle.broadcast_to(Tensor([30, 1, 176, 0],"bool"), list[30,8,176,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 176, 0],"bool"), list[30,8,176,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 176, 73].  Tensor sizes: [30, 1, 176, 0]
2025-03-05 15:23:00.969087 test begin: paddle.broadcast_to(Tensor([30, 1, 176, 0],"bool"), list[30,8,176,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 176, 0],"bool"), list[30,8,176,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 176, 89].  Tensor sizes: [30, 1, 176, 0]
2025-03-05 15:23:00.969749 test begin: paddle.broadcast_to(Tensor([30, 1, 181, 0],"bool"), list[30,8,181,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 181, 0],"bool"), list[30,8,181,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 181, 113].  Tensor sizes: [30, 1, 181, 0]
2025-03-05 15:23:00.970403 test begin: paddle.broadcast_to(Tensor([30, 1, 181, 0],"bool"), list[30,8,181,181,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 181, 0],"bool"), list[30,8,181,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 181, 181].  Tensor sizes: [30, 1, 181, 0]
2025-03-05 15:23:00.971044 test begin: paddle.broadcast_to(Tensor([30, 1, 183, 0],"bool"), list[30,8,183,183,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 183, 0],"bool"), list[30,8,183,183,], ) 
 The expanded size of the tensor (183) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 183, 183].  Tensor sizes: [30, 1, 183, 0]
2025-03-05 15:23:00.971858 test begin: paddle.broadcast_to(Tensor([30, 1, 183, 0],"bool"), list[30,8,183,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 183, 0],"bool"), list[30,8,183,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 183, 81].  Tensor sizes: [30, 1, 183, 0]
2025-03-05 15:23:00.972426 test begin: paddle.broadcast_to(Tensor([30, 1, 187, 0],"bool"), list[30,8,187,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 187, 0],"bool"), list[30,8,187,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 187, 105].  Tensor sizes: [30, 1, 187, 0]
2025-03-05 15:23:00.973031 test begin: paddle.broadcast_to(Tensor([30, 1, 187, 0],"bool"), list[30,8,187,187,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 187, 0],"bool"), list[30,8,187,187,], ) 
 The expanded size of the tensor (187) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 187, 187].  Tensor sizes: [30, 1, 187, 0]
2025-03-05 15:23:00.973577 test begin: paddle.broadcast_to(Tensor([30, 1, 189, 0],"bool"), list[30,8,189,189,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 189, 0],"bool"), list[30,8,189,189,], ) 
 The expanded size of the tensor (189) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 189, 189].  Tensor sizes: [30, 1, 189, 0]
2025-03-05 15:23:00.974134 test begin: paddle.broadcast_to(Tensor([30, 1, 189, 0],"bool"), list[30,8,189,61,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 189, 0],"bool"), list[30,8,189,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 189, 61].  Tensor sizes: [30, 1, 189, 0]
2025-03-05 15:23:00.974672 test begin: paddle.broadcast_to(Tensor([30, 1, 19, 0],"bool"), list[30,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 19, 0],"bool"), list[30,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 19, 19].  Tensor sizes: [30, 1, 19, 0]
2025-03-05 15:23:00.975205 test begin: paddle.broadcast_to(Tensor([30, 1, 19, 0],"bool"), list[30,8,19,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 19, 0],"bool"), list[30,8,19,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 19, 9].  Tensor sizes: [30, 1, 19, 0]
2025-03-05 15:23:00.975739 test begin: paddle.broadcast_to(Tensor([30, 1, 190, 0],"bool"), list[30,8,190,190,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 190, 0],"bool"), list[30,8,190,190,], ) 
 The expanded size of the tensor (190) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 190, 190].  Tensor sizes: [30, 1, 190, 0]
2025-03-05 15:23:00.976652 test begin: paddle.broadcast_to(Tensor([30, 1, 190, 0],"bool"), list[30,8,190,61,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 190, 0],"bool"), list[30,8,190,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 190, 61].  Tensor sizes: [30, 1, 190, 0]
2025-03-05 15:23:00.977388 test begin: paddle.broadcast_to(Tensor([30, 1, 191, 0],"bool"), list[30,8,191,191,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 191, 0],"bool"), list[30,8,191,191,], ) 
 The expanded size of the tensor (191) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 191, 191].  Tensor sizes: [30, 1, 191, 0]
2025-03-05 15:23:00.978045 test begin: paddle.broadcast_to(Tensor([30, 1, 191, 0],"bool"), list[30,8,191,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 191, 0],"bool"), list[30,8,191,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 191, 97].  Tensor sizes: [30, 1, 191, 0]
2025-03-05 15:23:00.978696 test begin: paddle.broadcast_to(Tensor([30, 1, 192, 0],"bool"), list[30,8,192,137,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 192, 0],"bool"), list[30,8,192,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 192, 137].  Tensor sizes: [30, 1, 192, 0]
2025-03-05 15:23:00.979328 test begin: paddle.broadcast_to(Tensor([30, 1, 192, 0],"bool"), list[30,8,192,192,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 192, 0],"bool"), list[30,8,192,192,], ) 
 The expanded size of the tensor (192) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 192, 192].  Tensor sizes: [30, 1, 192, 0]
2025-03-05 15:23:00.980076 test begin: paddle.broadcast_to(Tensor([30, 1, 193, 0],"bool"), list[30,8,193,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 193, 0],"bool"), list[30,8,193,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 193, 105].  Tensor sizes: [30, 1, 193, 0]
2025-03-05 15:23:00.980737 test begin: paddle.broadcast_to(Tensor([30, 1, 193, 0],"bool"), list[30,8,193,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 193, 0],"bool"), list[30,8,193,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 193, 129].  Tensor sizes: [30, 1, 193, 0]
2025-03-05 15:23:00.981371 test begin: paddle.broadcast_to(Tensor([30, 1, 193, 0],"bool"), list[30,8,193,193,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 193, 0],"bool"), list[30,8,193,193,], ) 
 The expanded size of the tensor (193) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 193, 193].  Tensor sizes: [30, 1, 193, 0]
2025-03-05 15:23:00.981957 test begin: paddle.broadcast_to(Tensor([30, 1, 194, 0],"bool"), list[30,8,194,194,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 194, 0],"bool"), list[30,8,194,194,], ) 
 The expanded size of the tensor (194) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 194, 194].  Tensor sizes: [30, 1, 194, 0]
2025-03-05 15:23:00.982513 test begin: paddle.broadcast_to(Tensor([30, 1, 194, 0],"bool"), list[30,8,194,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 194, 0],"bool"), list[30,8,194,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 194, 65].  Tensor sizes: [30, 1, 194, 0]
2025-03-05 15:23:00.983055 test begin: paddle.broadcast_to(Tensor([30, 1, 197, 0],"bool"), list[30,8,197,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 197, 0],"bool"), list[30,8,197,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 197, 121].  Tensor sizes: [30, 1, 197, 0]
2025-03-05 15:23:00.983602 test begin: paddle.broadcast_to(Tensor([30, 1, 197, 0],"bool"), list[30,8,197,197,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 197, 0],"bool"), list[30,8,197,197,], ) 
 The expanded size of the tensor (197) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 197, 197].  Tensor sizes: [30, 1, 197, 0]
2025-03-05 15:23:00.984149 test begin: paddle.broadcast_to(Tensor([30, 1, 197, 0],"bool"), list[30,8,197,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 197, 0],"bool"), list[30,8,197,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 197, 97].  Tensor sizes: [30, 1, 197, 0]
2025-03-05 15:23:00.984728 test begin: paddle.broadcast_to(Tensor([30, 1, 198, 0],"bool"), list[30,8,198,145,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 198, 0],"bool"), list[30,8,198,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 198, 145].  Tensor sizes: [30, 1, 198, 0]
2025-03-05 15:23:00.985301 test begin: paddle.broadcast_to(Tensor([30, 1, 198, 0],"bool"), list[30,8,198,198,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 198, 0],"bool"), list[30,8,198,198,], ) 
 The expanded size of the tensor (198) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 198, 198].  Tensor sizes: [30, 1, 198, 0]
2025-03-05 15:23:00.985860 test begin: paddle.broadcast_to(Tensor([30, 1, 20, 0],"bool"), list[30,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 20, 0],"bool"), list[30,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 20, 20].  Tensor sizes: [30, 1, 20, 0]
2025-03-05 15:23:00.986414 test begin: paddle.broadcast_to(Tensor([30, 1, 20, 0],"bool"), list[30,8,20,5,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 20, 0],"bool"), list[30,8,20,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 20, 5].  Tensor sizes: [30, 1, 20, 0]
2025-03-05 15:23:00.987046 test begin: paddle.broadcast_to(Tensor([30, 1, 200, 0],"bool"), list[30,8,200,200,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 200, 0],"bool"), list[30,8,200,200,], ) 
 The expanded size of the tensor (200) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 200, 200].  Tensor sizes: [30, 1, 200, 0]
2025-03-05 15:23:00.987813 test begin: paddle.broadcast_to(Tensor([30, 1, 200, 0],"bool"), list[30,8,200,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 200, 0],"bool"), list[30,8,200,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 200, 89].  Tensor sizes: [30, 1, 200, 0]
2025-03-05 15:23:00.988434 test begin: paddle.broadcast_to(Tensor([30, 1, 203, 0],"bool"), list[30,8,203,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 203, 0],"bool"), list[30,8,203,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 203, 105].  Tensor sizes: [30, 1, 203, 0]
2025-03-05 15:23:00.989016 test begin: paddle.broadcast_to(Tensor([30, 1, 203, 0],"bool"), list[30,8,203,203,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 203, 0],"bool"), list[30,8,203,203,], ) 
 The expanded size of the tensor (203) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 203, 203].  Tensor sizes: [30, 1, 203, 0]
2025-03-05 15:23:00.989553 test begin: paddle.broadcast_to(Tensor([30, 1, 207, 0],"bool"), list[30,8,207,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 207, 0],"bool"), list[30,8,207,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 207, 105].  Tensor sizes: [30, 1, 207, 0]
2025-03-05 15:23:00.990100 test begin: paddle.broadcast_to(Tensor([30, 1, 207, 0],"bool"), list[30,8,207,207,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 207, 0],"bool"), list[30,8,207,207,], ) 
 The expanded size of the tensor (207) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 207, 207].  Tensor sizes: [30, 1, 207, 0]
2025-03-05 15:23:00.990634 test begin: paddle.broadcast_to(Tensor([30, 1, 209, 0],"bool"), list[30,8,209,209,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 209, 0],"bool"), list[30,8,209,209,], ) 
 The expanded size of the tensor (209) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 209, 209].  Tensor sizes: [30, 1, 209, 0]
2025-03-05 15:23:00.991183 test begin: paddle.broadcast_to(Tensor([30, 1, 209, 0],"bool"), list[30,8,209,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 209, 0],"bool"), list[30,8,209,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 209, 49].  Tensor sizes: [30, 1, 209, 0]
2025-03-05 15:23:00.991736 test begin: paddle.broadcast_to(Tensor([30, 1, 21, 0],"bool"), list[30,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 21, 0],"bool"), list[30,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 21, 21].  Tensor sizes: [30, 1, 21, 0]
2025-03-05 15:23:00.992272 test begin: paddle.broadcast_to(Tensor([30, 1, 21, 0],"bool"), list[30,8,21,5,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 21, 0],"bool"), list[30,8,21,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 21, 5].  Tensor sizes: [30, 1, 21, 0]
2025-03-05 15:23:00.992817 test begin: paddle.broadcast_to(Tensor([30, 1, 210, 0],"bool"), list[30,8,210,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 210, 0],"bool"), list[30,8,210,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 210, 121].  Tensor sizes: [30, 1, 210, 0]
2025-03-05 15:23:00.993374 test begin: paddle.broadcast_to(Tensor([30, 1, 210, 0],"bool"), list[30,8,210,210,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 210, 0],"bool"), list[30,8,210,210,], ) 
 The expanded size of the tensor (210) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 210, 210].  Tensor sizes: [30, 1, 210, 0]
2025-03-05 15:23:00.993915 test begin: paddle.broadcast_to(Tensor([30, 1, 211, 0],"bool"), list[30,8,211,105,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 211, 0],"bool"), list[30,8,211,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 211, 105].  Tensor sizes: [30, 1, 211, 0]
2025-03-05 15:23:00.994486 test begin: paddle.broadcast_to(Tensor([30, 1, 211, 0],"bool"), list[30,8,211,211,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 211, 0],"bool"), list[30,8,211,211,], ) 
 The expanded size of the tensor (211) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 211, 211].  Tensor sizes: [30, 1, 211, 0]
2025-03-05 15:23:00.995030 test begin: paddle.broadcast_to(Tensor([30, 1, 212, 0],"bool"), list[30,8,212,145,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 212, 0],"bool"), list[30,8,212,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 212, 145].  Tensor sizes: [30, 1, 212, 0]
2025-03-05 15:23:00.995549 test begin: paddle.broadcast_to(Tensor([30, 1, 212, 0],"bool"), list[30,8,212,212,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 212, 0],"bool"), list[30,8,212,212,], ) 
 The expanded size of the tensor (212) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 212, 212].  Tensor sizes: [30, 1, 212, 0]
2025-03-05 15:23:00.996097 test begin: paddle.broadcast_to(Tensor([30, 1, 220, 0],"bool"), list[30,8,220,220,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 220, 0],"bool"), list[30,8,220,220,], ) 
 The expanded size of the tensor (220) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 220, 220].  Tensor sizes: [30, 1, 220, 0]
2025-03-05 15:23:00.996624 test begin: paddle.broadcast_to(Tensor([30, 1, 220, 0],"bool"), list[30,8,220,89,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 220, 0],"bool"), list[30,8,220,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 220, 89].  Tensor sizes: [30, 1, 220, 0]
2025-03-05 15:23:00.997140 test begin: paddle.broadcast_to(Tensor([30, 1, 222, 0],"bool"), list[30,8,222,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 222, 0],"bool"), list[30,8,222,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 222, 113].  Tensor sizes: [30, 1, 222, 0]
2025-03-05 15:23:00.997675 test begin: paddle.broadcast_to(Tensor([30, 1, 222, 0],"bool"), list[30,8,222,222,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 222, 0],"bool"), list[30,8,222,222,], ) 
 The expanded size of the tensor (222) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 222, 222].  Tensor sizes: [30, 1, 222, 0]
2025-03-05 15:23:00.998203 test begin: paddle.broadcast_to(Tensor([30, 1, 226, 0],"bool"), list[30,8,226,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 226, 0],"bool"), list[30,8,226,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 226, 121].  Tensor sizes: [30, 1, 226, 0]
2025-03-05 15:23:00.998727 test begin: paddle.broadcast_to(Tensor([30, 1, 226, 0],"bool"), list[30,8,226,226,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 226, 0],"bool"), list[30,8,226,226,], ) 
 The expanded size of the tensor (226) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 226, 226].  Tensor sizes: [30, 1, 226, 0]
2025-03-05 15:23:00.999279 test begin: paddle.broadcast_to(Tensor([30, 1, 226, 0],"bool"), list[30,8,226,65,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 226, 0],"bool"), list[30,8,226,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 226, 65].  Tensor sizes: [30, 1, 226, 0]
2025-03-05 15:23:00.999830 test begin: paddle.broadcast_to(Tensor([30, 1, 227, 0],"bool"), list[30,8,227,145,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 227, 0],"bool"), list[30,8,227,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 227, 145].  Tensor sizes: [30, 1, 227, 0]
2025-03-05 15:23:01.000362 test begin: paddle.broadcast_to(Tensor([30, 1, 227, 0],"bool"), list[30,8,227,227,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 227, 0],"bool"), list[30,8,227,227,], ) 
 The expanded size of the tensor (227) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 227, 227].  Tensor sizes: [30, 1, 227, 0]
2025-03-05 15:23:01.001097 test begin: paddle.broadcast_to(Tensor([30, 1, 23, 0],"bool"), list[30,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 23, 0],"bool"), list[30,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 23, 23].  Tensor sizes: [30, 1, 23, 0]
2025-03-05 15:23:01.001831 test begin: paddle.broadcast_to(Tensor([30, 1, 23, 0],"bool"), list[30,8,23,5,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 23, 0],"bool"), list[30,8,23,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 23, 5].  Tensor sizes: [30, 1, 23, 0]
2025-03-05 15:23:01.002458 test begin: paddle.broadcast_to(Tensor([30, 1, 23, 0],"bool"), list[30,8,23,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 23, 0],"bool"), list[30,8,23,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 23, 9].  Tensor sizes: [30, 1, 23, 0]
2025-03-05 15:23:01.003095 test begin: paddle.broadcast_to(Tensor([30, 1, 24, 0],"bool"), list[30,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 24, 0],"bool"), list[30,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 24, 24].  Tensor sizes: [30, 1, 24, 0]
2025-03-05 15:23:01.003654 test begin: paddle.broadcast_to(Tensor([30, 1, 24, 0],"bool"), list[30,8,24,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 24, 0],"bool"), list[30,8,24,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 24, 9].  Tensor sizes: [30, 1, 24, 0]
2025-03-05 15:23:01.004172 test begin: paddle.broadcast_to(Tensor([30, 1, 240, 0],"bool"), list[30,8,240,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 240, 0],"bool"), list[30,8,240,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 240, 129].  Tensor sizes: [30, 1, 240, 0]
2025-03-05 15:23:01.004717 test begin: paddle.broadcast_to(Tensor([30, 1, 240, 0],"bool"), list[30,8,240,240,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 240, 0],"bool"), list[30,8,240,240,], ) 
 The expanded size of the tensor (240) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 240, 240].  Tensor sizes: [30, 1, 240, 0]
2025-03-05 15:23:01.005243 test begin: paddle.broadcast_to(Tensor([30, 1, 241, 0],"bool"), list[30,8,241,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 241, 0],"bool"), list[30,8,241,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 241, 113].  Tensor sizes: [30, 1, 241, 0]
2025-03-05 15:23:01.005801 test begin: paddle.broadcast_to(Tensor([30, 1, 241, 0],"bool"), list[30,8,241,241,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 241, 0],"bool"), list[30,8,241,241,], ) 
 The expanded size of the tensor (241) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 241, 241].  Tensor sizes: [30, 1, 241, 0]
2025-03-05 15:23:01.006334 test begin: paddle.broadcast_to(Tensor([30, 1, 243, 0],"bool"), list[30,8,243,243,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 243, 0],"bool"), list[30,8,243,243,], ) 
 The expanded size of the tensor (243) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 243, 243].  Tensor sizes: [30, 1, 243, 0]
2025-03-05 15:23:01.006888 test begin: paddle.broadcast_to(Tensor([30, 1, 243, 0],"bool"), list[30,8,243,69,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 243, 0],"bool"), list[30,8,243,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 243, 69].  Tensor sizes: [30, 1, 243, 0]
2025-03-05 15:23:01.007418 test begin: paddle.broadcast_to(Tensor([30, 1, 249, 0],"bool"), list[30,8,249,137,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 249, 0],"bool"), list[30,8,249,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 249, 137].  Tensor sizes: [30, 1, 249, 0]
2025-03-05 15:23:01.007950 test begin: paddle.broadcast_to(Tensor([30, 1, 249, 0],"bool"), list[30,8,249,249,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 249, 0],"bool"), list[30,8,249,249,], ) 
 The expanded size of the tensor (249) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 249, 249].  Tensor sizes: [30, 1, 249, 0]
2025-03-05 15:23:01.008485 test begin: paddle.broadcast_to(Tensor([30, 1, 253, 0],"bool"), list[30,8,253,137,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 253, 0],"bool"), list[30,8,253,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 253, 137].  Tensor sizes: [30, 1, 253, 0]
2025-03-05 15:23:01.009045 test begin: paddle.broadcast_to(Tensor([30, 1, 253, 0],"bool"), list[30,8,253,253,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 253, 0],"bool"), list[30,8,253,253,], ) 
 The expanded size of the tensor (253) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 253, 253].  Tensor sizes: [30, 1, 253, 0]
2025-03-05 15:23:01.009598 test begin: paddle.broadcast_to(Tensor([30, 1, 26, 0],"bool"), list[30,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 26, 0],"bool"), list[30,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 26, 26].  Tensor sizes: [30, 1, 26, 0]
2025-03-05 15:23:01.010154 test begin: paddle.broadcast_to(Tensor([30, 1, 26, 0],"bool"), list[30,8,26,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 26, 0],"bool"), list[30,8,26,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 26, 9].  Tensor sizes: [30, 1, 26, 0]
2025-03-05 15:23:01.010705 test begin: paddle.broadcast_to(Tensor([30, 1, 264, 0],"bool"), list[30,8,264,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 264, 0],"bool"), list[30,8,264,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 264, 121].  Tensor sizes: [30, 1, 264, 0]
2025-03-05 15:23:01.011246 test begin: paddle.broadcast_to(Tensor([30, 1, 264, 0],"bool"), list[30,8,264,264,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 264, 0],"bool"), list[30,8,264,264,], ) 
 The expanded size of the tensor (264) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 264, 264].  Tensor sizes: [30, 1, 264, 0]
2025-03-05 15:23:01.011787 test begin: paddle.broadcast_to(Tensor([30, 1, 268, 0],"bool"), list[30,8,268,153,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 268, 0],"bool"), list[30,8,268,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 268, 153].  Tensor sizes: [30, 1, 268, 0]
2025-03-05 15:23:01.012317 test begin: paddle.broadcast_to(Tensor([30, 1, 268, 0],"bool"), list[30,8,268,268,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 268, 0],"bool"), list[30,8,268,268,], ) 
 The expanded size of the tensor (268) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 268, 268].  Tensor sizes: [30, 1, 268, 0]
2025-03-05 15:23:01.012868 test begin: paddle.broadcast_to(Tensor([30, 1, 270, 0],"bool"), list[30,8,270,161,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 270, 0],"bool"), list[30,8,270,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 270, 161].  Tensor sizes: [30, 1, 270, 0]
2025-03-05 15:23:01.013388 test begin: paddle.broadcast_to(Tensor([30, 1, 270, 0],"bool"), list[30,8,270,270,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 270, 0],"bool"), list[30,8,270,270,], ) 
 The expanded size of the tensor (270) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 270, 270].  Tensor sizes: [30, 1, 270, 0]
2025-03-05 15:23:01.013921 test begin: paddle.broadcast_to(Tensor([30, 1, 274, 0],"bool"), list[30,8,274,169,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 274, 0],"bool"), list[30,8,274,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 274, 169].  Tensor sizes: [30, 1, 274, 0]
2025-03-05 15:23:01.014447 test begin: paddle.broadcast_to(Tensor([30, 1, 274, 0],"bool"), list[30,8,274,274,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 274, 0],"bool"), list[30,8,274,274,], ) 
 The expanded size of the tensor (274) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 274, 274].  Tensor sizes: [30, 1, 274, 0]
2025-03-05 15:23:01.014996 test begin: paddle.broadcast_to(Tensor([30, 1, 276, 0],"bool"), list[30,8,276,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 276, 0],"bool"), list[30,8,276,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 276, 129].  Tensor sizes: [30, 1, 276, 0]
2025-03-05 15:23:01.015524 test begin: paddle.broadcast_to(Tensor([30, 1, 276, 0],"bool"), list[30,8,276,276,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 276, 0],"bool"), list[30,8,276,276,], ) 
 The expanded size of the tensor (276) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 276, 276].  Tensor sizes: [30, 1, 276, 0]
2025-03-05 15:23:01.016056 test begin: paddle.broadcast_to(Tensor([30, 1, 277, 0],"bool"), list[30,8,277,129,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 277, 0],"bool"), list[30,8,277,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 277, 129].  Tensor sizes: [30, 1, 277, 0]
2025-03-05 15:23:01.016580 test begin: paddle.broadcast_to(Tensor([30, 1, 277, 0],"bool"), list[30,8,277,277,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 277, 0],"bool"), list[30,8,277,277,], ) 
 The expanded size of the tensor (277) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 277, 277].  Tensor sizes: [30, 1, 277, 0]
2025-03-05 15:23:01.017155 test begin: paddle.broadcast_to(Tensor([30, 1, 28, 0],"bool"), list[30,8,28,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 28, 0],"bool"), list[30,8,28,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 28, 13].  Tensor sizes: [30, 1, 28, 0]
2025-03-05 15:23:01.017720 test begin: paddle.broadcast_to(Tensor([30, 1, 28, 0],"bool"), list[30,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 28, 0],"bool"), list[30,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 28, 28].  Tensor sizes: [30, 1, 28, 0]
2025-03-05 15:23:01.018261 test begin: paddle.broadcast_to(Tensor([30, 1, 28, 0],"bool"), list[30,8,28,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 28, 0],"bool"), list[30,8,28,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 28, 9].  Tensor sizes: [30, 1, 28, 0]
2025-03-05 15:23:01.018801 test begin: paddle.broadcast_to(Tensor([30, 1, 29, 0],"bool"), list[30,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 29, 0],"bool"), list[30,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 29, 29].  Tensor sizes: [30, 1, 29, 0]
2025-03-05 15:23:01.019319 test begin: paddle.broadcast_to(Tensor([30, 1, 29, 0],"bool"), list[30,8,29,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 29, 0],"bool"), list[30,8,29,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 29, 9].  Tensor sizes: [30, 1, 29, 0]
2025-03-05 15:23:01.019845 test begin: paddle.broadcast_to(Tensor([30, 1, 293, 0],"bool"), list[30,8,293,293,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 293, 0],"bool"), list[30,8,293,293,], ) 
 The expanded size of the tensor (293) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 293, 293].  Tensor sizes: [30, 1, 293, 0]
2025-03-05 15:23:01.020361 test begin: paddle.broadcast_to(Tensor([30, 1, 293, 0],"bool"), list[30,8,293,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 293, 0],"bool"), list[30,8,293,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 293, 97].  Tensor sizes: [30, 1, 293, 0]
2025-03-05 15:23:01.020899 test begin: paddle.broadcast_to(Tensor([30, 1, 298, 0],"bool"), list[30,8,298,161,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 298, 0],"bool"), list[30,8,298,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 298, 161].  Tensor sizes: [30, 1, 298, 0]
2025-03-05 15:23:01.021426 test begin: paddle.broadcast_to(Tensor([30, 1, 298, 0],"bool"), list[30,8,298,298,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 298, 0],"bool"), list[30,8,298,298,], ) 
 The expanded size of the tensor (298) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 298, 298].  Tensor sizes: [30, 1, 298, 0]
2025-03-05 15:23:01.021957 test begin: paddle.broadcast_to(Tensor([30, 1, 30, 0],"bool"), list[30,8,30,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 30, 0],"bool"), list[30,8,30,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 30, 13].  Tensor sizes: [30, 1, 30, 0]
2025-03-05 15:23:01.022475 test begin: paddle.broadcast_to(Tensor([30, 1, 30, 0],"bool"), list[30,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 30, 0],"bool"), list[30,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 30, 30].  Tensor sizes: [30, 1, 30, 0]
2025-03-05 15:23:01.023020 test begin: paddle.broadcast_to(Tensor([30, 1, 302, 0],"bool"), list[30,8,302,113,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 302, 0],"bool"), list[30,8,302,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 302, 113].  Tensor sizes: [30, 1, 302, 0]
2025-03-05 15:23:01.023558 test begin: paddle.broadcast_to(Tensor([30, 1, 302, 0],"bool"), list[30,8,302,302,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 302, 0],"bool"), list[30,8,302,302,], ) 
 The expanded size of the tensor (302) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 302, 302].  Tensor sizes: [30, 1, 302, 0]
2025-03-05 15:23:01.024096 test begin: paddle.broadcast_to(Tensor([30, 1, 307, 0],"bool"), list[30,8,307,307,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 307, 0],"bool"), list[30,8,307,307,], ) 
 The expanded size of the tensor (307) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 307, 307].  Tensor sizes: [30, 1, 307, 0]
2025-03-05 15:23:01.024640 test begin: paddle.broadcast_to(Tensor([30, 1, 307, 0],"bool"), list[30,8,307,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 307, 0],"bool"), list[30,8,307,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 307, 57].  Tensor sizes: [30, 1, 307, 0]
2025-03-05 15:23:01.025206 test begin: paddle.broadcast_to(Tensor([30, 1, 31, 0],"bool"), list[30,8,31,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 31, 0],"bool"), list[30,8,31,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 31, 13].  Tensor sizes: [30, 1, 31, 0]
2025-03-05 15:23:01.025738 test begin: paddle.broadcast_to(Tensor([30, 1, 31, 0],"bool"), list[30,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 31, 0],"bool"), list[30,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 31, 31].  Tensor sizes: [30, 1, 31, 0]
2025-03-05 15:23:01.026268 test begin: paddle.broadcast_to(Tensor([30, 1, 31, 0],"bool"), list[30,8,31,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 31, 0],"bool"), list[30,8,31,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 31, 9].  Tensor sizes: [30, 1, 31, 0]
2025-03-05 15:23:01.026806 test begin: paddle.broadcast_to(Tensor([30, 1, 32, 0],"bool"), list[30,8,32,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 32, 0],"bool"), list[30,8,32,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 32, 13].  Tensor sizes: [30, 1, 32, 0]
2025-03-05 15:23:01.027338 test begin: paddle.broadcast_to(Tensor([30, 1, 32, 0],"bool"), list[30,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 32, 0],"bool"), list[30,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 32, 32].  Tensor sizes: [30, 1, 32, 0]
2025-03-05 15:23:01.027866 test begin: paddle.broadcast_to(Tensor([30, 1, 32, 0],"bool"), list[30,8,32,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 32, 0],"bool"), list[30,8,32,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 32, 9].  Tensor sizes: [30, 1, 32, 0]
2025-03-05 15:23:01.028387 test begin: paddle.broadcast_to(Tensor([30, 1, 33, 0],"bool"), list[30,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 33, 0],"bool"), list[30,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 33, 33].  Tensor sizes: [30, 1, 33, 0]
2025-03-05 15:23:01.028926 test begin: paddle.broadcast_to(Tensor([30, 1, 33, 0],"bool"), list[30,8,33,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 33, 0],"bool"), list[30,8,33,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 33, 9].  Tensor sizes: [30, 1, 33, 0]
2025-03-05 15:23:01.029454 test begin: paddle.broadcast_to(Tensor([30, 1, 336, 0],"bool"), list[30,8,336,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 336, 0],"bool"), list[30,8,336,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 336, 121].  Tensor sizes: [30, 1, 336, 0]
2025-03-05 15:23:01.030000 test begin: paddle.broadcast_to(Tensor([30, 1, 336, 0],"bool"), list[30,8,336,336,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 336, 0],"bool"), list[30,8,336,336,], ) 
 The expanded size of the tensor (336) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 336, 336].  Tensor sizes: [30, 1, 336, 0]
2025-03-05 15:23:01.030527 test begin: paddle.broadcast_to(Tensor([30, 1, 339, 0],"bool"), list[30,8,339,169,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 339, 0],"bool"), list[30,8,339,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 339, 169].  Tensor sizes: [30, 1, 339, 0]
2025-03-05 15:23:01.031060 test begin: paddle.broadcast_to(Tensor([30, 1, 339, 0],"bool"), list[30,8,339,339,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 339, 0],"bool"), list[30,8,339,339,], ) 
 The expanded size of the tensor (339) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 339, 339].  Tensor sizes: [30, 1, 339, 0]
2025-03-05 15:23:01.031580 test begin: paddle.broadcast_to(Tensor([30, 1, 34, 0],"bool"), list[30,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 34, 0],"bool"), list[30,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 34, 34].  Tensor sizes: [30, 1, 34, 0]
2025-03-05 15:23:01.032120 test begin: paddle.broadcast_to(Tensor([30, 1, 34, 0],"bool"), list[30,8,34,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 34, 0],"bool"), list[30,8,34,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 34, 9].  Tensor sizes: [30, 1, 34, 0]
2025-03-05 15:23:01.032657 test begin: paddle.broadcast_to(Tensor([30, 1, 35, 0],"bool"), list[30,8,35,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 35, 0],"bool"), list[30,8,35,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 35, 13].  Tensor sizes: [30, 1, 35, 0]
2025-03-05 15:23:01.033180 test begin: paddle.broadcast_to(Tensor([30, 1, 35, 0],"bool"), list[30,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 35, 0],"bool"), list[30,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 35, 35].  Tensor sizes: [30, 1, 35, 0]
2025-03-05 15:23:01.033706 test begin: paddle.broadcast_to(Tensor([30, 1, 355, 0],"bool"), list[30,8,355,121,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 355, 0],"bool"), list[30,8,355,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 355, 121].  Tensor sizes: [30, 1, 355, 0]
2025-03-05 15:23:01.034238 test begin: paddle.broadcast_to(Tensor([30, 1, 355, 0],"bool"), list[30,8,355,355,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 355, 0],"bool"), list[30,8,355,355,], ) 
 The expanded size of the tensor (355) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 355, 355].  Tensor sizes: [30, 1, 355, 0]
2025-03-05 15:23:01.034765 test begin: paddle.broadcast_to(Tensor([30, 1, 36, 0],"bool"), list[30,8,36,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 36, 0],"bool"), list[30,8,36,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 36, 13].  Tensor sizes: [30, 1, 36, 0]
2025-03-05 15:23:01.035290 test begin: paddle.broadcast_to(Tensor([30, 1, 36, 0],"bool"), list[30,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 36, 0],"bool"), list[30,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 36, 36].  Tensor sizes: [30, 1, 36, 0]
2025-03-05 15:23:01.035814 test begin: paddle.broadcast_to(Tensor([30, 1, 369, 0],"bool"), list[30,8,369,169,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 369, 0],"bool"), list[30,8,369,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 369, 169].  Tensor sizes: [30, 1, 369, 0]
2025-03-05 15:23:01.036345 test begin: paddle.broadcast_to(Tensor([30, 1, 369, 0],"bool"), list[30,8,369,369,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 369, 0],"bool"), list[30,8,369,369,], ) 
 The expanded size of the tensor (369) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 369, 369].  Tensor sizes: [30, 1, 369, 0]
2025-03-05 15:23:01.036875 test begin: paddle.broadcast_to(Tensor([30, 1, 39, 0],"bool"), list[30,8,39,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 39, 0],"bool"), list[30,8,39,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 39, 13].  Tensor sizes: [30, 1, 39, 0]
2025-03-05 15:23:01.037392 test begin: paddle.broadcast_to(Tensor([30, 1, 39, 0],"bool"), list[30,8,39,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 39, 0],"bool"), list[30,8,39,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 39, 17].  Tensor sizes: [30, 1, 39, 0]
2025-03-05 15:23:01.037917 test begin: paddle.broadcast_to(Tensor([30, 1, 39, 0],"bool"), list[30,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 39, 0],"bool"), list[30,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 39, 39].  Tensor sizes: [30, 1, 39, 0]
2025-03-05 15:23:01.038438 test begin: paddle.broadcast_to(Tensor([30, 1, 39, 0],"bool"), list[30,8,39,9,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 39, 0],"bool"), list[30,8,39,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 39, 9].  Tensor sizes: [30, 1, 39, 0]
2025-03-05 15:23:01.038972 test begin: paddle.broadcast_to(Tensor([30, 1, 42, 0],"bool"), list[30,8,42,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 42, 0],"bool"), list[30,8,42,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 42, 13].  Tensor sizes: [30, 1, 42, 0]
2025-03-05 15:23:01.039506 test begin: paddle.broadcast_to(Tensor([30, 1, 42, 0],"bool"), list[30,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 42, 0],"bool"), list[30,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 42, 42].  Tensor sizes: [30, 1, 42, 0]
2025-03-05 15:23:01.040090 test begin: paddle.broadcast_to(Tensor([30, 1, 43, 0],"bool"), list[30,8,43,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 43, 0],"bool"), list[30,8,43,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 43, 17].  Tensor sizes: [30, 1, 43, 0]
2025-03-05 15:23:01.040615 test begin: paddle.broadcast_to(Tensor([30, 1, 43, 0],"bool"), list[30,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 43, 0],"bool"), list[30,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 43, 43].  Tensor sizes: [30, 1, 43, 0]
2025-03-05 15:23:01.041165 test begin: paddle.broadcast_to(Tensor([30, 1, 44, 0],"bool"), list[30,8,44,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 44, 0],"bool"), list[30,8,44,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 44, 17].  Tensor sizes: [30, 1, 44, 0]
2025-03-05 15:23:01.041700 test begin: paddle.broadcast_to(Tensor([30, 1, 44, 0],"bool"), list[30,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 44, 0],"bool"), list[30,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 44, 44].  Tensor sizes: [30, 1, 44, 0]
2025-03-05 15:23:01.042275 test begin: paddle.broadcast_to(Tensor([30, 1, 457, 0],"bool"), list[30,8,457,153,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 457, 0],"bool"), list[30,8,457,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 457, 153].  Tensor sizes: [30, 1, 457, 0]
2025-03-05 15:23:01.042832 test begin: paddle.broadcast_to(Tensor([30, 1, 457, 0],"bool"), list[30,8,457,457,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 457, 0],"bool"), list[30,8,457,457,], ) 
 The expanded size of the tensor (457) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 457, 457].  Tensor sizes: [30, 1, 457, 0]
2025-03-05 15:23:01.043362 test begin: paddle.broadcast_to(Tensor([30, 1, 46, 0],"bool"), list[30,8,46,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 46, 0],"bool"), list[30,8,46,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 46, 13].  Tensor sizes: [30, 1, 46, 0]
2025-03-05 15:23:01.043952 test begin: paddle.broadcast_to(Tensor([30, 1, 46, 0],"bool"), list[30,8,46,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 46, 0],"bool"), list[30,8,46,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 46, 17].  Tensor sizes: [30, 1, 46, 0]
2025-03-05 15:23:01.044511 test begin: paddle.broadcast_to(Tensor([30, 1, 46, 0],"bool"), list[30,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 46, 0],"bool"), list[30,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 46, 46].  Tensor sizes: [30, 1, 46, 0]
2025-03-05 15:23:01.045057 test begin: paddle.broadcast_to(Tensor([30, 1, 47, 0],"bool"), list[30,8,47,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 47, 0],"bool"), list[30,8,47,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 47, 13].  Tensor sizes: [30, 1, 47, 0]
2025-03-05 15:23:01.045590 test begin: paddle.broadcast_to(Tensor([30, 1, 47, 0],"bool"), list[30,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 47, 0],"bool"), list[30,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 47, 47].  Tensor sizes: [30, 1, 47, 0]
2025-03-05 15:23:01.046113 test begin: paddle.broadcast_to(Tensor([30, 1, 477, 0],"bool"), list[30,8,477,137,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 477, 0],"bool"), list[30,8,477,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 477, 137].  Tensor sizes: [30, 1, 477, 0]
2025-03-05 15:23:01.046668 test begin: paddle.broadcast_to(Tensor([30, 1, 477, 0],"bool"), list[30,8,477,477,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 477, 0],"bool"), list[30,8,477,477,], ) 
 The expanded size of the tensor (477) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 477, 477].  Tensor sizes: [30, 1, 477, 0]
2025-03-05 15:23:01.047195 test begin: paddle.broadcast_to(Tensor([30, 1, 48, 0],"bool"), list[30,8,48,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 48, 0],"bool"), list[30,8,48,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 48, 17].  Tensor sizes: [30, 1, 48, 0]
2025-03-05 15:23:01.047737 test begin: paddle.broadcast_to(Tensor([30, 1, 48, 0],"bool"), list[30,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 48, 0],"bool"), list[30,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 48, 48].  Tensor sizes: [30, 1, 48, 0]
2025-03-05 15:23:01.048290 test begin: paddle.broadcast_to(Tensor([30, 1, 49, 0],"bool"), list[30,8,49,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 49, 0],"bool"), list[30,8,49,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 49, 17].  Tensor sizes: [30, 1, 49, 0]
2025-03-05 15:23:01.048825 test begin: paddle.broadcast_to(Tensor([30, 1, 49, 0],"bool"), list[30,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 49, 0],"bool"), list[30,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 49, 49].  Tensor sizes: [30, 1, 49, 0]
2025-03-05 15:23:01.049389 test begin: paddle.broadcast_to(Tensor([30, 1, 498, 0],"bool"), list[30,8,498,153,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 498, 0],"bool"), list[30,8,498,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 498, 153].  Tensor sizes: [30, 1, 498, 0]
2025-03-05 15:23:01.049926 test begin: paddle.broadcast_to(Tensor([30, 1, 498, 0],"bool"), list[30,8,498,498,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 498, 0],"bool"), list[30,8,498,498,], ) 
 The expanded size of the tensor (498) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 498, 498].  Tensor sizes: [30, 1, 498, 0]
2025-03-05 15:23:01.050452 test begin: paddle.broadcast_to(Tensor([30, 1, 50, 0],"bool"), list[30,8,50,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 50, 0],"bool"), list[30,8,50,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 50, 17].  Tensor sizes: [30, 1, 50, 0]
2025-03-05 15:23:01.050986 test begin: paddle.broadcast_to(Tensor([30, 1, 50, 0],"bool"), list[30,8,50,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 50, 0],"bool"), list[30,8,50,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 50, 21].  Tensor sizes: [30, 1, 50, 0]
2025-03-05 15:23:01.051515 test begin: paddle.broadcast_to(Tensor([30, 1, 50, 0],"bool"), list[30,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 50, 0],"bool"), list[30,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 50, 50].  Tensor sizes: [30, 1, 50, 0]
2025-03-05 15:23:01.054934 test begin: paddle.broadcast_to(Tensor([30, 1, 52, 0],"bool"), list[30,8,52,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 52, 0],"bool"), list[30,8,52,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 52, 17].  Tensor sizes: [30, 1, 52, 0]
2025-03-05 15:23:01.056035 test begin: paddle.broadcast_to(Tensor([30, 1, 52, 0],"bool"), list[30,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 52, 0],"bool"), list[30,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 52, 52].  Tensor sizes: [30, 1, 52, 0]
2025-03-05 15:23:01.056580 test begin: paddle.broadcast_to(Tensor([30, 1, 53, 0],"bool"), list[30,8,53,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 53, 0],"bool"), list[30,8,53,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 53, 13].  Tensor sizes: [30, 1, 53, 0]
2025-03-05 15:23:01.057123 test begin: paddle.broadcast_to(Tensor([30, 1, 53, 0],"bool"), list[30,8,53,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 53, 0],"bool"), list[30,8,53,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 53, 21].  Tensor sizes: [30, 1, 53, 0]
2025-03-05 15:23:01.057655 test begin: paddle.broadcast_to(Tensor([30, 1, 53, 0],"bool"), list[30,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 53, 0],"bool"), list[30,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 53, 53].  Tensor sizes: [30, 1, 53, 0]
2025-03-05 15:23:01.058174 test begin: paddle.broadcast_to(Tensor([30, 1, 54, 0],"bool"), list[30,8,54,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 54, 0],"bool"), list[30,8,54,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 54, 17].  Tensor sizes: [30, 1, 54, 0]
2025-03-05 15:23:01.058719 test begin: paddle.broadcast_to(Tensor([30, 1, 54, 0],"bool"), list[30,8,54,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 54, 0],"bool"), list[30,8,54,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 54, 21].  Tensor sizes: [30, 1, 54, 0]
2025-03-05 15:23:01.059256 test begin: paddle.broadcast_to(Tensor([30, 1, 54, 0],"bool"), list[30,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 54, 0],"bool"), list[30,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 54, 54].  Tensor sizes: [30, 1, 54, 0]
2025-03-05 15:23:01.059786 test begin: paddle.broadcast_to(Tensor([30, 1, 55, 0],"bool"), list[30,8,55,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 55, 0],"bool"), list[30,8,55,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 55, 13].  Tensor sizes: [30, 1, 55, 0]
2025-03-05 15:23:01.060300 test begin: paddle.broadcast_to(Tensor([30, 1, 55, 0],"bool"), list[30,8,55,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 55, 0],"bool"), list[30,8,55,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 55, 17].  Tensor sizes: [30, 1, 55, 0]
2025-03-05 15:23:01.060831 test begin: paddle.broadcast_to(Tensor([30, 1, 55, 0],"bool"), list[30,8,55,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 55, 0],"bool"), list[30,8,55,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 55, 25].  Tensor sizes: [30, 1, 55, 0]
2025-03-05 15:23:01.061375 test begin: paddle.broadcast_to(Tensor([30, 1, 55, 0],"bool"), list[30,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 55, 0],"bool"), list[30,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 55, 55].  Tensor sizes: [30, 1, 55, 0]
2025-03-05 15:23:01.062014 test begin: paddle.broadcast_to(Tensor([30, 1, 56, 0],"bool"), list[30,8,56,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 56, 0],"bool"), list[30,8,56,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 56, 25].  Tensor sizes: [30, 1, 56, 0]
2025-03-05 15:23:01.062678 test begin: paddle.broadcast_to(Tensor([30, 1, 56, 0],"bool"), list[30,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 56, 0],"bool"), list[30,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 56, 56].  Tensor sizes: [30, 1, 56, 0]
2025-03-05 15:23:01.063318 test begin: paddle.broadcast_to(Tensor([30, 1, 57, 0],"bool"), list[30,8,57,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 57, 0],"bool"), list[30,8,57,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 57, 21].  Tensor sizes: [30, 1, 57, 0]
2025-03-05 15:23:01.063959 test begin: paddle.broadcast_to(Tensor([30, 1, 57, 0],"bool"), list[30,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 57, 0],"bool"), list[30,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 57, 57].  Tensor sizes: [30, 1, 57, 0]
2025-03-05 15:23:01.064576 test begin: paddle.broadcast_to(Tensor([30, 1, 59, 0],"bool"), list[30,8,59,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 59, 0],"bool"), list[30,8,59,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 59, 21].  Tensor sizes: [30, 1, 59, 0]
2025-03-05 15:23:01.065217 test begin: paddle.broadcast_to(Tensor([30, 1, 59, 0],"bool"), list[30,8,59,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 59, 0],"bool"), list[30,8,59,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 59, 25].  Tensor sizes: [30, 1, 59, 0]
2025-03-05 15:23:01.065853 test begin: paddle.broadcast_to(Tensor([30, 1, 59, 0],"bool"), list[30,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 59, 0],"bool"), list[30,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 59, 59].  Tensor sizes: [30, 1, 59, 0]
2025-03-05 15:23:01.066484 test begin: paddle.broadcast_to(Tensor([30, 1, 61, 0],"bool"), list[30,8,61,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 61, 0],"bool"), list[30,8,61,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 61, 17].  Tensor sizes: [30, 1, 61, 0]
2025-03-05 15:23:01.067118 test begin: paddle.broadcast_to(Tensor([30, 1, 61, 0],"bool"), list[30,8,61,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 61, 0],"bool"), list[30,8,61,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 61, 25].  Tensor sizes: [30, 1, 61, 0]
2025-03-05 15:23:01.067771 test begin: paddle.broadcast_to(Tensor([30, 1, 61, 0],"bool"), list[30,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 61, 0],"bool"), list[30,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 61, 61].  Tensor sizes: [30, 1, 61, 0]
2025-03-05 15:23:01.068436 test begin: paddle.broadcast_to(Tensor([30, 1, 62, 0],"bool"), list[30,8,62,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 62, 0],"bool"), list[30,8,62,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 62, 33].  Tensor sizes: [30, 1, 62, 0]
2025-03-05 15:23:01.069100 test begin: paddle.broadcast_to(Tensor([30, 1, 62, 0],"bool"), list[30,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 62, 0],"bool"), list[30,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 62, 62].  Tensor sizes: [30, 1, 62, 0]
2025-03-05 15:23:01.069773 test begin: paddle.broadcast_to(Tensor([30, 1, 63, 0],"bool"), list[30,8,63,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 63, 0],"bool"), list[30,8,63,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 63, 17].  Tensor sizes: [30, 1, 63, 0]
2025-03-05 15:23:01.070409 test begin: paddle.broadcast_to(Tensor([30, 1, 63, 0],"bool"), list[30,8,63,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 63, 0],"bool"), list[30,8,63,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 63, 25].  Tensor sizes: [30, 1, 63, 0]
2025-03-05 15:23:01.071046 test begin: paddle.broadcast_to(Tensor([30, 1, 63, 0],"bool"), list[30,8,63,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 63, 0],"bool"), list[30,8,63,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 63, 33].  Tensor sizes: [30, 1, 63, 0]
2025-03-05 15:23:01.071713 test begin: paddle.broadcast_to(Tensor([30, 1, 63, 0],"bool"), list[30,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 63, 0],"bool"), list[30,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 63, 63].  Tensor sizes: [30, 1, 63, 0]
2025-03-05 15:23:01.072344 test begin: paddle.broadcast_to(Tensor([30, 1, 64, 0],"bool"), list[30,8,64,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 64, 0],"bool"), list[30,8,64,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 64, 21].  Tensor sizes: [30, 1, 64, 0]
2025-03-05 15:23:01.072965 test begin: paddle.broadcast_to(Tensor([30, 1, 64, 0],"bool"), list[30,8,64,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 64, 0],"bool"), list[30,8,64,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 64, 33].  Tensor sizes: [30, 1, 64, 0]
2025-03-05 15:23:01.073598 test begin: paddle.broadcast_to(Tensor([30, 1, 64, 0],"bool"), list[30,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 64, 0],"bool"), list[30,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 64, 64].  Tensor sizes: [30, 1, 64, 0]
2025-03-05 15:23:01.074226 test begin: paddle.broadcast_to(Tensor([30, 1, 66, 0],"bool"), list[30,8,66,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 66, 0],"bool"), list[30,8,66,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 66, 21].  Tensor sizes: [30, 1, 66, 0]
2025-03-05 15:23:01.074885 test begin: paddle.broadcast_to(Tensor([30, 1, 66, 0],"bool"), list[30,8,66,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 66, 0],"bool"), list[30,8,66,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 66, 25].  Tensor sizes: [30, 1, 66, 0]
2025-03-05 15:23:01.075523 test begin: paddle.broadcast_to(Tensor([30, 1, 66, 0],"bool"), list[30,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 66, 0],"bool"), list[30,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 66, 66].  Tensor sizes: [30, 1, 66, 0]
2025-03-05 15:23:01.076565 test begin: paddle.broadcast_to(Tensor([30, 1, 67, 0],"bool"), list[30,8,67,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 67, 0],"bool"), list[30,8,67,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 67, 21].  Tensor sizes: [30, 1, 67, 0]
2025-03-05 15:23:01.077304 test begin: paddle.broadcast_to(Tensor([30, 1, 67, 0],"bool"), list[30,8,67,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 67, 0],"bool"), list[30,8,67,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 67, 25].  Tensor sizes: [30, 1, 67, 0]
2025-03-05 15:23:01.077967 test begin: paddle.broadcast_to(Tensor([30, 1, 67, 0],"bool"), list[30,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 67, 0],"bool"), list[30,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 67, 67].  Tensor sizes: [30, 1, 67, 0]
2025-03-05 15:23:01.078631 test begin: paddle.broadcast_to(Tensor([30, 1, 68, 0],"bool"), list[30,8,68,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 68, 0],"bool"), list[30,8,68,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 68, 29].  Tensor sizes: [30, 1, 68, 0]
2025-03-05 15:23:01.079264 test begin: paddle.broadcast_to(Tensor([30, 1, 68, 0],"bool"), list[30,8,68,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 68, 0],"bool"), list[30,8,68,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 68, 33].  Tensor sizes: [30, 1, 68, 0]
2025-03-05 15:23:01.079931 test begin: paddle.broadcast_to(Tensor([30, 1, 68, 0],"bool"), list[30,8,68,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 68, 0],"bool"), list[30,8,68,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 68, 41].  Tensor sizes: [30, 1, 68, 0]
2025-03-05 15:23:01.080566 test begin: paddle.broadcast_to(Tensor([30, 1, 68, 0],"bool"), list[30,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 68, 0],"bool"), list[30,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 68, 68].  Tensor sizes: [30, 1, 68, 0]
2025-03-05 15:23:01.081203 test begin: paddle.broadcast_to(Tensor([30, 1, 69, 0],"bool"), list[30,8,69,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 69, 0],"bool"), list[30,8,69,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 69, 41].  Tensor sizes: [30, 1, 69, 0]
2025-03-05 15:23:01.081842 test begin: paddle.broadcast_to(Tensor([30, 1, 69, 0],"bool"), list[30,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 69, 0],"bool"), list[30,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 69, 69].  Tensor sizes: [30, 1, 69, 0]
2025-03-05 15:23:01.082497 test begin: paddle.broadcast_to(Tensor([30, 1, 70, 0],"bool"), list[30,8,70,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 70, 0],"bool"), list[30,8,70,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 70, 49].  Tensor sizes: [30, 1, 70, 0]
2025-03-05 15:23:01.083161 test begin: paddle.broadcast_to(Tensor([30, 1, 70, 0],"bool"), list[30,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 70, 0],"bool"), list[30,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 70, 70].  Tensor sizes: [30, 1, 70, 0]
2025-03-05 15:23:01.084059 test begin: paddle.broadcast_to(Tensor([30, 1, 71, 0],"bool"), list[30,8,71,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 71, 0],"bool"), list[30,8,71,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 71, 21].  Tensor sizes: [30, 1, 71, 0]
2025-03-05 15:23:01.084863 test begin: paddle.broadcast_to(Tensor([30, 1, 71, 0],"bool"), list[30,8,71,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 71, 0],"bool"), list[30,8,71,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 71, 25].  Tensor sizes: [30, 1, 71, 0]
2025-03-05 15:23:01.085739 test begin: paddle.broadcast_to(Tensor([30, 1, 71, 0],"bool"), list[30,8,71,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 71, 0],"bool"), list[30,8,71,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 71, 29].  Tensor sizes: [30, 1, 71, 0]
2025-03-05 15:23:01.086399 test begin: paddle.broadcast_to(Tensor([30, 1, 71, 0],"bool"), list[30,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 71, 0],"bool"), list[30,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 71, 71].  Tensor sizes: [30, 1, 71, 0]
2025-03-05 15:23:01.086940 test begin: paddle.broadcast_to(Tensor([30, 1, 72, 0],"bool"), list[30,8,72,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 72, 0],"bool"), list[30,8,72,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 72, 29].  Tensor sizes: [30, 1, 72, 0]
2025-03-05 15:23:01.087462 test begin: paddle.broadcast_to(Tensor([30, 1, 72, 0],"bool"), list[30,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 72, 0],"bool"), list[30,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 72, 72].  Tensor sizes: [30, 1, 72, 0]
2025-03-05 15:23:01.093534 test begin: paddle.broadcast_to(Tensor([30, 1, 73, 0],"bool"), list[30,8,73,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 73, 0],"bool"), list[30,8,73,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 73, 29].  Tensor sizes: [30, 1, 73, 0]
2025-03-05 15:23:01.094310 test begin: paddle.broadcast_to(Tensor([30, 1, 73, 0],"bool"), list[30,8,73,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 73, 0],"bool"), list[30,8,73,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 73, 41].  Tensor sizes: [30, 1, 73, 0]
2025-03-05 15:23:01.094954 test begin: paddle.broadcast_to(Tensor([30, 1, 73, 0],"bool"), list[30,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 73, 0],"bool"), list[30,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 73, 73].  Tensor sizes: [30, 1, 73, 0]
2025-03-05 15:23:01.095515 test begin: paddle.broadcast_to(Tensor([30, 1, 74, 0],"bool"), list[30,8,74,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 74, 0],"bool"), list[30,8,74,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 74, 29].  Tensor sizes: [30, 1, 74, 0]
2025-03-05 15:23:01.096087 test begin: paddle.broadcast_to(Tensor([30, 1, 74, 0],"bool"), list[30,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 74, 0],"bool"), list[30,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 74, 74].  Tensor sizes: [30, 1, 74, 0]
2025-03-05 15:23:01.096632 test begin: paddle.broadcast_to(Tensor([30, 1, 75, 0],"bool"), list[30,8,75,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 75, 0],"bool"), list[30,8,75,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 75, 17].  Tensor sizes: [30, 1, 75, 0]
2025-03-05 15:23:01.097223 test begin: paddle.broadcast_to(Tensor([30, 1, 75, 0],"bool"), list[30,8,75,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 75, 0],"bool"), list[30,8,75,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 75, 21].  Tensor sizes: [30, 1, 75, 0]
2025-03-05 15:23:01.097787 test begin: paddle.broadcast_to(Tensor([30, 1, 75, 0],"bool"), list[30,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 75, 0],"bool"), list[30,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 75, 75].  Tensor sizes: [30, 1, 75, 0]
2025-03-05 15:23:01.098306 test begin: paddle.broadcast_to(Tensor([30, 1, 76, 0],"bool"), list[30,8,76,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 76, 0],"bool"), list[30,8,76,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 76, 29].  Tensor sizes: [30, 1, 76, 0]
2025-03-05 15:23:01.098856 test begin: paddle.broadcast_to(Tensor([30, 1, 76, 0],"bool"), list[30,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 76, 0],"bool"), list[30,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 76, 76].  Tensor sizes: [30, 1, 76, 0]
2025-03-05 15:23:01.099605 test begin: paddle.broadcast_to(Tensor([30, 1, 77, 0],"bool"), list[30,8,77,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 77, 0],"bool"), list[30,8,77,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 77, 21].  Tensor sizes: [30, 1, 77, 0]
2025-03-05 15:23:01.100234 test begin: paddle.broadcast_to(Tensor([30, 1, 77, 0],"bool"), list[30,8,77,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 77, 0],"bool"), list[30,8,77,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 77, 25].  Tensor sizes: [30, 1, 77, 0]
2025-03-05 15:23:01.100923 test begin: paddle.broadcast_to(Tensor([30, 1, 77, 0],"bool"), list[30,8,77,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 77, 0],"bool"), list[30,8,77,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 77, 29].  Tensor sizes: [30, 1, 77, 0]
2025-03-05 15:23:01.101571 test begin: paddle.broadcast_to(Tensor([30, 1, 77, 0],"bool"), list[30,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 77, 0],"bool"), list[30,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 77, 77].  Tensor sizes: [30, 1, 77, 0]
2025-03-05 15:23:01.102138 test begin: paddle.broadcast_to(Tensor([30, 1, 78, 0],"bool"), list[30,8,78,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 78, 0],"bool"), list[30,8,78,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 78, 25].  Tensor sizes: [30, 1, 78, 0]
2025-03-05 15:23:01.102668 test begin: paddle.broadcast_to(Tensor([30, 1, 78, 0],"bool"), list[30,8,78,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 78, 0],"bool"), list[30,8,78,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 78, 33].  Tensor sizes: [30, 1, 78, 0]
2025-03-05 15:23:01.103235 test begin: paddle.broadcast_to(Tensor([30, 1, 78, 0],"bool"), list[30,8,78,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 78, 0],"bool"), list[30,8,78,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 78, 41].  Tensor sizes: [30, 1, 78, 0]
2025-03-05 15:23:01.103770 test begin: paddle.broadcast_to(Tensor([30, 1, 78, 0],"bool"), list[30,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 78, 0],"bool"), list[30,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 78, 78].  Tensor sizes: [30, 1, 78, 0]
2025-03-05 15:23:01.104290 test begin: paddle.broadcast_to(Tensor([30, 1, 79, 0],"bool"), list[30,8,79,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 79, 0],"bool"), list[30,8,79,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 79, 57].  Tensor sizes: [30, 1, 79, 0]
2025-03-05 15:23:01.104822 test begin: paddle.broadcast_to(Tensor([30, 1, 79, 0],"bool"), list[30,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 79, 0],"bool"), list[30,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 79, 79].  Tensor sizes: [30, 1, 79, 0]
2025-03-05 15:23:01.105406 test begin: paddle.broadcast_to(Tensor([30, 1, 80, 0],"bool"), list[30,8,80,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 80, 0],"bool"), list[30,8,80,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 80, 33].  Tensor sizes: [30, 1, 80, 0]
2025-03-05 15:23:01.105959 test begin: paddle.broadcast_to(Tensor([30, 1, 80, 0],"bool"), list[30,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 80, 0],"bool"), list[30,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 80, 80].  Tensor sizes: [30, 1, 80, 0]
2025-03-05 15:23:01.106489 test begin: paddle.broadcast_to(Tensor([30, 1, 81, 0],"bool"), list[30,8,81,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 81, 0],"bool"), list[30,8,81,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 81, 21].  Tensor sizes: [30, 1, 81, 0]
2025-03-05 15:23:01.107026 test begin: paddle.broadcast_to(Tensor([30, 1, 81, 0],"bool"), list[30,8,81,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 81, 0],"bool"), list[30,8,81,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 81, 29].  Tensor sizes: [30, 1, 81, 0]
2025-03-05 15:23:01.107677 test begin: paddle.broadcast_to(Tensor([30, 1, 81, 0],"bool"), list[30,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 81, 0],"bool"), list[30,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 81, 81].  Tensor sizes: [30, 1, 81, 0]
2025-03-05 15:23:01.108243 test begin: paddle.broadcast_to(Tensor([30, 1, 82, 0],"bool"), list[30,8,82,17,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 82, 0],"bool"), list[30,8,82,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 82, 17].  Tensor sizes: [30, 1, 82, 0]
2025-03-05 15:23:01.108821 test begin: paddle.broadcast_to(Tensor([30, 1, 82, 0],"bool"), list[30,8,82,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 82, 0],"bool"), list[30,8,82,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 82, 33].  Tensor sizes: [30, 1, 82, 0]
2025-03-05 15:23:01.109391 test begin: paddle.broadcast_to(Tensor([30, 1, 82, 0],"bool"), list[30,8,82,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 82, 0],"bool"), list[30,8,82,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 82, 41].  Tensor sizes: [30, 1, 82, 0]
2025-03-05 15:23:01.109928 test begin: paddle.broadcast_to(Tensor([30, 1, 82, 0],"bool"), list[30,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 82, 0],"bool"), list[30,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 82, 82].  Tensor sizes: [30, 1, 82, 0]
2025-03-05 15:23:01.110476 test begin: paddle.broadcast_to(Tensor([30, 1, 83, 0],"bool"), list[30,8,83,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 83, 0],"bool"), list[30,8,83,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 83, 41].  Tensor sizes: [30, 1, 83, 0]
2025-03-05 15:23:01.111006 test begin: paddle.broadcast_to(Tensor([30, 1, 83, 0],"bool"), list[30,8,83,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 83, 0],"bool"), list[30,8,83,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 83, 49].  Tensor sizes: [30, 1, 83, 0]
2025-03-05 15:23:01.111536 test begin: paddle.broadcast_to(Tensor([30, 1, 83, 0],"bool"), list[30,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 83, 0],"bool"), list[30,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 83, 83].  Tensor sizes: [30, 1, 83, 0]
2025-03-05 15:23:01.112060 test begin: paddle.broadcast_to(Tensor([30, 1, 84, 0],"bool"), list[30,8,84,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 84, 0],"bool"), list[30,8,84,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 84, 25].  Tensor sizes: [30, 1, 84, 0]
2025-03-05 15:23:01.112562 test begin: paddle.broadcast_to(Tensor([30, 1, 84, 0],"bool"), list[30,8,84,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 84, 0],"bool"), list[30,8,84,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 84, 41].  Tensor sizes: [30, 1, 84, 0]
2025-03-05 15:23:01.113083 test begin: paddle.broadcast_to(Tensor([30, 1, 84, 0],"bool"), list[30,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 84, 0],"bool"), list[30,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 84, 84].  Tensor sizes: [30, 1, 84, 0]
2025-03-05 15:23:01.113697 test begin: paddle.broadcast_to(Tensor([30, 1, 85, 0],"bool"), list[30,8,85,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 85, 0],"bool"), list[30,8,85,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 85, 33].  Tensor sizes: [30, 1, 85, 0]
2025-03-05 15:23:01.114951 test begin: paddle.broadcast_to(Tensor([30, 1, 85, 0],"bool"), list[30,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 85, 0],"bool"), list[30,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 85, 85].  Tensor sizes: [30, 1, 85, 0]
2025-03-05 15:23:01.115736 test begin: paddle.broadcast_to(Tensor([30, 1, 86, 0],"bool"), list[30,8,86,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 86, 0],"bool"), list[30,8,86,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 86, 25].  Tensor sizes: [30, 1, 86, 0]
2025-03-05 15:23:01.116428 test begin: paddle.broadcast_to(Tensor([30, 1, 86, 0],"bool"), list[30,8,86,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 86, 0],"bool"), list[30,8,86,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 86, 33].  Tensor sizes: [30, 1, 86, 0]
2025-03-05 15:23:01.117131 test begin: paddle.broadcast_to(Tensor([30, 1, 86, 0],"bool"), list[30,8,86,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 86, 0],"bool"), list[30,8,86,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 86, 37].  Tensor sizes: [30, 1, 86, 0]
2025-03-05 15:23:01.117828 test begin: paddle.broadcast_to(Tensor([30, 1, 86, 0],"bool"), list[30,8,86,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 86, 0],"bool"), list[30,8,86,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 86, 41].  Tensor sizes: [30, 1, 86, 0]
2025-03-05 15:23:01.118507 test begin: paddle.broadcast_to(Tensor([30, 1, 86, 0],"bool"), list[30,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 86, 0],"bool"), list[30,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 86, 86].  Tensor sizes: [30, 1, 86, 0]
2025-03-05 15:23:01.119241 test begin: paddle.broadcast_to(Tensor([30, 1, 87, 0],"bool"), list[30,8,87,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 87, 0],"bool"), list[30,8,87,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 87, 33].  Tensor sizes: [30, 1, 87, 0]
2025-03-05 15:23:01.119933 test begin: paddle.broadcast_to(Tensor([30, 1, 87, 0],"bool"), list[30,8,87,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 87, 0],"bool"), list[30,8,87,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 87, 49].  Tensor sizes: [30, 1, 87, 0]
2025-03-05 15:23:01.120602 test begin: paddle.broadcast_to(Tensor([30, 1, 87, 0],"bool"), list[30,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 87, 0],"bool"), list[30,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 87, 87].  Tensor sizes: [30, 1, 87, 0]
2025-03-05 15:23:01.121272 test begin: paddle.broadcast_to(Tensor([30, 1, 88, 0],"bool"), list[30,8,88,25,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 88, 0],"bool"), list[30,8,88,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 88, 25].  Tensor sizes: [30, 1, 88, 0]
2025-03-05 15:23:01.121943 test begin: paddle.broadcast_to(Tensor([30, 1, 88, 0],"bool"), list[30,8,88,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 88, 0],"bool"), list[30,8,88,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 88, 37].  Tensor sizes: [30, 1, 88, 0]
2025-03-05 15:23:01.122620 test begin: paddle.broadcast_to(Tensor([30, 1, 88, 0],"bool"), list[30,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 88, 0],"bool"), list[30,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 88, 88].  Tensor sizes: [30, 1, 88, 0]
2025-03-05 15:23:01.123278 test begin: paddle.broadcast_to(Tensor([30, 1, 90, 0],"bool"), list[30,8,90,13,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 90, 0],"bool"), list[30,8,90,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 90, 13].  Tensor sizes: [30, 1, 90, 0]
2025-03-05 15:23:01.123935 test begin: paddle.broadcast_to(Tensor([30, 1, 90, 0],"bool"), list[30,8,90,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 90, 0],"bool"), list[30,8,90,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 90, 33].  Tensor sizes: [30, 1, 90, 0]
2025-03-05 15:23:01.124628 test begin: paddle.broadcast_to(Tensor([30, 1, 90, 0],"bool"), list[30,8,90,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 90, 0],"bool"), list[30,8,90,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 90, 41].  Tensor sizes: [30, 1, 90, 0]
2025-03-05 15:23:01.125267 test begin: paddle.broadcast_to(Tensor([30, 1, 90, 0],"bool"), list[30,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 90, 0],"bool"), list[30,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 90, 90].  Tensor sizes: [30, 1, 90, 0]
2025-03-05 15:23:01.125922 test begin: paddle.broadcast_to(Tensor([30, 1, 91, 0],"bool"), list[30,8,91,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 91, 0],"bool"), list[30,8,91,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 91, 29].  Tensor sizes: [30, 1, 91, 0]
2025-03-05 15:23:01.126727 test begin: paddle.broadcast_to(Tensor([30, 1, 91, 0],"bool"), list[30,8,91,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 91, 0],"bool"), list[30,8,91,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 91, 41].  Tensor sizes: [30, 1, 91, 0]
2025-03-05 15:23:01.127500 test begin: paddle.broadcast_to(Tensor([30, 1, 91, 0],"bool"), list[30,8,91,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 91, 0],"bool"), list[30,8,91,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 91, 57].  Tensor sizes: [30, 1, 91, 0]
2025-03-05 15:23:01.128107 test begin: paddle.broadcast_to(Tensor([30, 1, 91, 0],"bool"), list[30,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 91, 0],"bool"), list[30,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 91, 91].  Tensor sizes: [30, 1, 91, 0]
2025-03-05 15:23:01.128642 test begin: paddle.broadcast_to(Tensor([30, 1, 92, 0],"bool"), list[30,8,92,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 92, 0],"bool"), list[30,8,92,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 92, 33].  Tensor sizes: [30, 1, 92, 0]
2025-03-05 15:23:01.129173 test begin: paddle.broadcast_to(Tensor([30, 1, 92, 0],"bool"), list[30,8,92,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 92, 0],"bool"), list[30,8,92,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 92, 49].  Tensor sizes: [30, 1, 92, 0]
2025-03-05 15:23:01.129695 test begin: paddle.broadcast_to(Tensor([30, 1, 92, 0],"bool"), list[30,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 92, 0],"bool"), list[30,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 92, 92].  Tensor sizes: [30, 1, 92, 0]
2025-03-05 15:23:01.130213 test begin: paddle.broadcast_to(Tensor([30, 1, 93, 0],"bool"), list[30,8,93,21,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 93, 0],"bool"), list[30,8,93,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 93, 21].  Tensor sizes: [30, 1, 93, 0]
2025-03-05 15:23:01.130772 test begin: paddle.broadcast_to(Tensor([30, 1, 93, 0],"bool"), list[30,8,93,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 93, 0],"bool"), list[30,8,93,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 93, 33].  Tensor sizes: [30, 1, 93, 0]
2025-03-05 15:23:01.131286 test begin: paddle.broadcast_to(Tensor([30, 1, 93, 0],"bool"), list[30,8,93,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 93, 0],"bool"), list[30,8,93,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 93, 49].  Tensor sizes: [30, 1, 93, 0]
2025-03-05 15:23:01.131805 test begin: paddle.broadcast_to(Tensor([30, 1, 93, 0],"bool"), list[30,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 93, 0],"bool"), list[30,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 93, 93].  Tensor sizes: [30, 1, 93, 0]
2025-03-05 15:23:01.132329 test begin: paddle.broadcast_to(Tensor([30, 1, 94, 0],"bool"), list[30,8,94,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 94, 0],"bool"), list[30,8,94,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 94, 33].  Tensor sizes: [30, 1, 94, 0]
2025-03-05 15:23:01.132874 test begin: paddle.broadcast_to(Tensor([30, 1, 94, 0],"bool"), list[30,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 94, 0],"bool"), list[30,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 94, 94].  Tensor sizes: [30, 1, 94, 0]
2025-03-05 15:23:01.133397 test begin: paddle.broadcast_to(Tensor([30, 1, 95, 0],"bool"), list[30,8,95,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 95, 0],"bool"), list[30,8,95,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 95, 57].  Tensor sizes: [30, 1, 95, 0]
2025-03-05 15:23:01.133984 test begin: paddle.broadcast_to(Tensor([30, 1, 95, 0],"bool"), list[30,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 95, 0],"bool"), list[30,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 95, 95].  Tensor sizes: [30, 1, 95, 0]
2025-03-05 15:23:01.134768 test begin: paddle.broadcast_to(Tensor([30, 1, 96, 0],"bool"), list[30,8,96,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 96, 0],"bool"), list[30,8,96,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 96, 29].  Tensor sizes: [30, 1, 96, 0]
2025-03-05 15:23:01.135404 test begin: paddle.broadcast_to(Tensor([30, 1, 96, 0],"bool"), list[30,8,96,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 96, 0],"bool"), list[30,8,96,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 96, 37].  Tensor sizes: [30, 1, 96, 0]
2025-03-05 15:23:01.136050 test begin: paddle.broadcast_to(Tensor([30, 1, 96, 0],"bool"), list[30,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 96, 0],"bool"), list[30,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 96, 96].  Tensor sizes: [30, 1, 96, 0]
2025-03-05 15:23:01.136723 test begin: paddle.broadcast_to(Tensor([30, 1, 97, 0],"bool"), list[30,8,97,33,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 97, 0],"bool"), list[30,8,97,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 97, 33].  Tensor sizes: [30, 1, 97, 0]
2025-03-05 15:23:01.137343 test begin: paddle.broadcast_to(Tensor([30, 1, 97, 0],"bool"), list[30,8,97,37,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 97, 0],"bool"), list[30,8,97,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 97, 37].  Tensor sizes: [30, 1, 97, 0]
2025-03-05 15:23:01.137966 test begin: paddle.broadcast_to(Tensor([30, 1, 97, 0],"bool"), list[30,8,97,41,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 97, 0],"bool"), list[30,8,97,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 97, 41].  Tensor sizes: [30, 1, 97, 0]
2025-03-05 15:23:01.138595 test begin: paddle.broadcast_to(Tensor([30, 1, 97, 0],"bool"), list[30,8,97,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 97, 0],"bool"), list[30,8,97,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 97, 49].  Tensor sizes: [30, 1, 97, 0]
2025-03-05 15:23:01.139218 test begin: paddle.broadcast_to(Tensor([30, 1, 97, 0],"bool"), list[30,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 97, 0],"bool"), list[30,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 97, 97].  Tensor sizes: [30, 1, 97, 0]
2025-03-05 15:23:01.140179 test begin: paddle.broadcast_to(Tensor([30, 1, 98, 0],"bool"), list[30,8,98,49,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 98, 0],"bool"), list[30,8,98,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 98, 49].  Tensor sizes: [30, 1, 98, 0]
2025-03-05 15:23:01.140864 test begin: paddle.broadcast_to(Tensor([30, 1, 98, 0],"bool"), list[30,8,98,57,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 98, 0],"bool"), list[30,8,98,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 98, 57].  Tensor sizes: [30, 1, 98, 0]
2025-03-05 15:23:01.141520 test begin: paddle.broadcast_to(Tensor([30, 1, 98, 0],"bool"), list[30,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 98, 0],"bool"), list[30,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 98, 98].  Tensor sizes: [30, 1, 98, 0]
2025-03-05 15:23:01.142228 test begin: paddle.broadcast_to(Tensor([30, 1, 99, 0],"bool"), list[30,8,99,29,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 99, 0],"bool"), list[30,8,99,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 99, 29].  Tensor sizes: [30, 1, 99, 0]
2025-03-05 15:23:01.142915 test begin: paddle.broadcast_to(Tensor([30, 1, 99, 0],"bool"), list[30,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([30, 1, 99, 0],"bool"), list[30,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [30, 8, 99, 99].  Tensor sizes: [30, 1, 99, 0]
2025-03-05 15:23:01.143553 test begin: paddle.broadcast_to(Tensor([300, 0],"float16"), list[300,40,], )

[torch error] paddle.broadcast_to(Tensor([300, 0],"float16"), list[300,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [300, 40].  Tensor sizes: [300, 0]
2025-03-05 15:23:01.144313 test begin: paddle.broadcast_to(Tensor([38, 0],"float32"), tuple(38,5,), )

[torch error] paddle.broadcast_to(Tensor([38, 0],"float32"), tuple(38,5,), ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [38, 5].  Tensor sizes: [38, 0]
2025-03-05 15:23:01.144946 test begin: paddle.broadcast_to(Tensor([38, 0],"int64"), tuple(38,1,), )

[torch error] paddle.broadcast_to(Tensor([38, 0],"int64"), tuple(38,1,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [38, 1].  Tensor sizes: [38, 0]
2025-03-05 15:23:01.145650 test begin: paddle.broadcast_to(Tensor([4, 0, 1, 13],"bool"), list[4,8,1,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 1, 13],"bool"), list[4,8,1,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 1, 13].  Tensor sizes: [4, 0, 1, 13]
2025-03-05 15:23:01.146306 test begin: paddle.broadcast_to(Tensor([4, 0, 1, 1],"bool"), list[4,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 1, 1],"bool"), list[4,8,1,1,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 1, 1].  Tensor sizes: [4, 0, 1, 1]
2025-03-05 15:23:01.146957 test begin: paddle.broadcast_to(Tensor([4, 0, 1, 25],"bool"), list[4,8,1,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 1, 25],"bool"), list[4,8,1,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 1, 25].  Tensor sizes: [4, 0, 1, 25]
2025-03-05 15:23:01.147659 test begin: paddle.broadcast_to(Tensor([4, 0, 1, 37],"bool"), list[4,8,1,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 1, 37],"bool"), list[4,8,1,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 1, 37].  Tensor sizes: [4, 0, 1, 37]
2025-03-05 15:23:01.148326 test begin: paddle.broadcast_to(Tensor([4, 0, 1, 4],"float32"), tuple(4,2,3,4,), )

[torch error] paddle.broadcast_to(Tensor([4, 0, 1, 4],"float32"), tuple(4,2,3,4,), ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 2, 3, 4].  Tensor sizes: [4, 0, 1, 4]
2025-03-05 15:23:01.149065 test begin: paddle.broadcast_to(Tensor([4, 0, 1, 5],"bool"), list[4,8,1,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 1, 5],"bool"), list[4,8,1,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 1, 5].  Tensor sizes: [4, 0, 1, 5]
2025-03-05 15:23:01.149741 test begin: paddle.broadcast_to(Tensor([4, 0, 1, 61],"bool"), list[4,8,1,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 1, 61],"bool"), list[4,8,1,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 1, 61].  Tensor sizes: [4, 0, 1, 61]
2025-03-05 15:23:01.150376 test begin: paddle.broadcast_to(Tensor([4, 0, 1, 77],"bool"), list[4,8,1,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 1, 77],"bool"), list[4,8,1,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 1, 77].  Tensor sizes: [4, 0, 1, 77]
2025-03-05 15:23:01.151020 test begin: paddle.broadcast_to(Tensor([4, 0, 10, 10],"bool"), list[4,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 10, 10],"bool"), list[4,8,10,10,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 10, 10].  Tensor sizes: [4, 0, 10, 10]
2025-03-05 15:23:01.151673 test begin: paddle.broadcast_to(Tensor([4, 0, 10, 13],"bool"), list[4,8,10,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 10, 13],"bool"), list[4,8,10,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 10, 13].  Tensor sizes: [4, 0, 10, 13]
2025-03-05 15:23:01.152325 test begin: paddle.broadcast_to(Tensor([4, 0, 10, 25],"bool"), list[4,8,10,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 10, 25],"bool"), list[4,8,10,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 10, 25].  Tensor sizes: [4, 0, 10, 25]
2025-03-05 15:23:01.152974 test begin: paddle.broadcast_to(Tensor([4, 0, 10, 37],"bool"), list[4,8,10,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 10, 37],"bool"), list[4,8,10,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 10, 37].  Tensor sizes: [4, 0, 10, 37]
2025-03-05 15:23:01.153617 test begin: paddle.broadcast_to(Tensor([4, 0, 10, 5],"bool"), list[4,8,10,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 10, 5],"bool"), list[4,8,10,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 10, 5].  Tensor sizes: [4, 0, 10, 5]
2025-03-05 15:23:01.154255 test begin: paddle.broadcast_to(Tensor([4, 0, 10, 61],"bool"), list[4,8,10,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 10, 61],"bool"), list[4,8,10,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 10, 61].  Tensor sizes: [4, 0, 10, 61]
2025-03-05 15:23:01.154889 test begin: paddle.broadcast_to(Tensor([4, 0, 10, 77],"bool"), list[4,8,10,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 10, 77],"bool"), list[4,8,10,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 10, 77].  Tensor sizes: [4, 0, 10, 77]
2025-03-05 15:23:01.155532 test begin: paddle.broadcast_to(Tensor([4, 0, 100, 100],"bool"), list[4,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 100, 100],"bool"), list[4,8,100,100,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 100, 100].  Tensor sizes: [4, 0, 100, 100]
2025-03-05 15:23:01.156243 test begin: paddle.broadcast_to(Tensor([4, 0, 100, 61],"bool"), list[4,8,100,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 100, 61],"bool"), list[4,8,100,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 100, 61].  Tensor sizes: [4, 0, 100, 61]
2025-03-05 15:23:01.156992 test begin: paddle.broadcast_to(Tensor([4, 0, 100, 77],"bool"), list[4,8,100,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 100, 77],"bool"), list[4,8,100,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 100, 77].  Tensor sizes: [4, 0, 100, 77]
2025-03-05 15:23:01.157686 test begin: paddle.broadcast_to(Tensor([4, 0, 101, 101],"bool"), list[4,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 101, 101],"bool"), list[4,8,101,101,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 101, 101].  Tensor sizes: [4, 0, 101, 101]
2025-03-05 15:23:01.164566 test begin: paddle.broadcast_to(Tensor([4, 0, 101, 61],"bool"), list[4,8,101,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 101, 61],"bool"), list[4,8,101,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 101, 61].  Tensor sizes: [4, 0, 101, 61]
2025-03-05 15:23:01.165273 test begin: paddle.broadcast_to(Tensor([4, 0, 101, 77],"bool"), list[4,8,101,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 101, 77],"bool"), list[4,8,101,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 101, 77].  Tensor sizes: [4, 0, 101, 77]
2025-03-05 15:23:01.165933 test begin: paddle.broadcast_to(Tensor([4, 0, 102, 102],"bool"), list[4,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 102, 102],"bool"), list[4,8,102,102,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 102, 102].  Tensor sizes: [4, 0, 102, 102]
2025-03-05 15:23:01.166606 test begin: paddle.broadcast_to(Tensor([4, 0, 102, 61],"bool"), list[4,8,102,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 102, 61],"bool"), list[4,8,102,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 102, 61].  Tensor sizes: [4, 0, 102, 61]
2025-03-05 15:23:01.167439 test begin: paddle.broadcast_to(Tensor([4, 0, 102, 77],"bool"), list[4,8,102,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 102, 77],"bool"), list[4,8,102,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 102, 77].  Tensor sizes: [4, 0, 102, 77]
2025-03-05 15:23:01.168145 test begin: paddle.broadcast_to(Tensor([4, 0, 103, 103],"bool"), list[4,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 103, 103],"bool"), list[4,8,103,103,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 103, 103].  Tensor sizes: [4, 0, 103, 103]
2025-03-05 15:23:01.169163 test begin: paddle.broadcast_to(Tensor([4, 0, 103, 61],"bool"), list[4,8,103,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 103, 61],"bool"), list[4,8,103,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 103, 61].  Tensor sizes: [4, 0, 103, 61]
2025-03-05 15:23:01.170134 test begin: paddle.broadcast_to(Tensor([4, 0, 103, 77],"bool"), list[4,8,103,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 103, 77],"bool"), list[4,8,103,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 103, 77].  Tensor sizes: [4, 0, 103, 77]
2025-03-05 15:23:01.170786 test begin: paddle.broadcast_to(Tensor([4, 0, 104, 104],"bool"), list[4,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 104, 104],"bool"), list[4,8,104,104,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 104, 104].  Tensor sizes: [4, 0, 104, 104]
2025-03-05 15:23:01.171445 test begin: paddle.broadcast_to(Tensor([4, 0, 104, 61],"bool"), list[4,8,104,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 104, 61],"bool"), list[4,8,104,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 104, 61].  Tensor sizes: [4, 0, 104, 61]
2025-03-05 15:23:01.172107 test begin: paddle.broadcast_to(Tensor([4, 0, 104, 77],"bool"), list[4,8,104,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 104, 77],"bool"), list[4,8,104,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 104, 77].  Tensor sizes: [4, 0, 104, 77]
2025-03-05 15:23:01.172829 test begin: paddle.broadcast_to(Tensor([4, 0, 105, 105],"bool"), list[4,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 105, 105],"bool"), list[4,8,105,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 105, 105].  Tensor sizes: [4, 0, 105, 105]
2025-03-05 15:23:01.173553 test begin: paddle.broadcast_to(Tensor([4, 0, 105, 61],"bool"), list[4,8,105,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 105, 61],"bool"), list[4,8,105,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 105, 61].  Tensor sizes: [4, 0, 105, 61]
2025-03-05 15:23:01.174216 test begin: paddle.broadcast_to(Tensor([4, 0, 105, 77],"bool"), list[4,8,105,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 105, 77],"bool"), list[4,8,105,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 105, 77].  Tensor sizes: [4, 0, 105, 77]
2025-03-05 15:23:01.174865 test begin: paddle.broadcast_to(Tensor([4, 0, 106, 106],"bool"), list[4,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 106, 106],"bool"), list[4,8,106,106,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 106, 106].  Tensor sizes: [4, 0, 106, 106]
2025-03-05 15:23:01.175566 test begin: paddle.broadcast_to(Tensor([4, 0, 106, 61],"bool"), list[4,8,106,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 106, 61],"bool"), list[4,8,106,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 106, 61].  Tensor sizes: [4, 0, 106, 61]
2025-03-05 15:23:01.176267 test begin: paddle.broadcast_to(Tensor([4, 0, 106, 77],"bool"), list[4,8,106,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 106, 77],"bool"), list[4,8,106,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 106, 77].  Tensor sizes: [4, 0, 106, 77]
2025-03-05 15:23:01.176927 test begin: paddle.broadcast_to(Tensor([4, 0, 107, 107],"bool"), list[4,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 107, 107],"bool"), list[4,8,107,107,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 107, 107].  Tensor sizes: [4, 0, 107, 107]
2025-03-05 15:23:01.177640 test begin: paddle.broadcast_to(Tensor([4, 0, 107, 61],"bool"), list[4,8,107,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 107, 61],"bool"), list[4,8,107,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 107, 61].  Tensor sizes: [4, 0, 107, 61]
2025-03-05 15:23:01.178290 test begin: paddle.broadcast_to(Tensor([4, 0, 107, 77],"bool"), list[4,8,107,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 107, 77],"bool"), list[4,8,107,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 107, 77].  Tensor sizes: [4, 0, 107, 77]
2025-03-05 15:23:01.178936 test begin: paddle.broadcast_to(Tensor([4, 0, 108, 108],"bool"), list[4,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 108, 108],"bool"), list[4,8,108,108,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 108, 108].  Tensor sizes: [4, 0, 108, 108]
2025-03-05 15:23:01.179473 test begin: paddle.broadcast_to(Tensor([4, 0, 108, 61],"bool"), list[4,8,108,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 108, 61],"bool"), list[4,8,108,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 108, 61].  Tensor sizes: [4, 0, 108, 61]
2025-03-05 15:23:01.180008 test begin: paddle.broadcast_to(Tensor([4, 0, 108, 77],"bool"), list[4,8,108,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 108, 77],"bool"), list[4,8,108,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 108, 77].  Tensor sizes: [4, 0, 108, 77]
2025-03-05 15:23:01.180529 test begin: paddle.broadcast_to(Tensor([4, 0, 109, 109],"bool"), list[4,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 109, 109],"bool"), list[4,8,109,109,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 109, 109].  Tensor sizes: [4, 0, 109, 109]
2025-03-05 15:23:01.181092 test begin: paddle.broadcast_to(Tensor([4, 0, 109, 61],"bool"), list[4,8,109,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 109, 61],"bool"), list[4,8,109,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 109, 61].  Tensor sizes: [4, 0, 109, 61]
2025-03-05 15:23:01.181638 test begin: paddle.broadcast_to(Tensor([4, 0, 109, 77],"bool"), list[4,8,109,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 109, 77],"bool"), list[4,8,109,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 109, 77].  Tensor sizes: [4, 0, 109, 77]
2025-03-05 15:23:01.182158 test begin: paddle.broadcast_to(Tensor([4, 0, 11, 11],"bool"), list[4,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 11, 11],"bool"), list[4,8,11,11,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 11, 11].  Tensor sizes: [4, 0, 11, 11]
2025-03-05 15:23:01.182740 test begin: paddle.broadcast_to(Tensor([4, 0, 11, 13],"bool"), list[4,8,11,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 11, 13],"bool"), list[4,8,11,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 11, 13].  Tensor sizes: [4, 0, 11, 13]
2025-03-05 15:23:01.183257 test begin: paddle.broadcast_to(Tensor([4, 0, 11, 25],"bool"), list[4,8,11,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 11, 25],"bool"), list[4,8,11,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 11, 25].  Tensor sizes: [4, 0, 11, 25]
2025-03-05 15:23:01.183769 test begin: paddle.broadcast_to(Tensor([4, 0, 11, 37],"bool"), list[4,8,11,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 11, 37],"bool"), list[4,8,11,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 11, 37].  Tensor sizes: [4, 0, 11, 37]
2025-03-05 15:23:01.184304 test begin: paddle.broadcast_to(Tensor([4, 0, 11, 5],"bool"), list[4,8,11,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 11, 5],"bool"), list[4,8,11,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 11, 5].  Tensor sizes: [4, 0, 11, 5]
2025-03-05 15:23:01.184821 test begin: paddle.broadcast_to(Tensor([4, 0, 11, 61],"bool"), list[4,8,11,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 11, 61],"bool"), list[4,8,11,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 11, 61].  Tensor sizes: [4, 0, 11, 61]
2025-03-05 15:23:01.185364 test begin: paddle.broadcast_to(Tensor([4, 0, 11, 77],"bool"), list[4,8,11,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 11, 77],"bool"), list[4,8,11,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 11, 77].  Tensor sizes: [4, 0, 11, 77]
2025-03-05 15:23:01.185930 test begin: paddle.broadcast_to(Tensor([4, 0, 110, 110],"bool"), list[4,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 110, 110],"bool"), list[4,8,110,110,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 110, 110].  Tensor sizes: [4, 0, 110, 110]
2025-03-05 15:23:01.186458 test begin: paddle.broadcast_to(Tensor([4, 0, 110, 61],"bool"), list[4,8,110,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 110, 61],"bool"), list[4,8,110,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 110, 61].  Tensor sizes: [4, 0, 110, 61]
2025-03-05 15:23:01.186990 test begin: paddle.broadcast_to(Tensor([4, 0, 110, 77],"bool"), list[4,8,110,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 110, 77],"bool"), list[4,8,110,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 110, 77].  Tensor sizes: [4, 0, 110, 77]
2025-03-05 15:23:01.187515 test begin: paddle.broadcast_to(Tensor([4, 0, 111, 111],"bool"), list[4,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 111, 111],"bool"), list[4,8,111,111,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 111, 111].  Tensor sizes: [4, 0, 111, 111]
2025-03-05 15:23:01.188036 test begin: paddle.broadcast_to(Tensor([4, 0, 111, 61],"bool"), list[4,8,111,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 111, 61],"bool"), list[4,8,111,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 111, 61].  Tensor sizes: [4, 0, 111, 61]
2025-03-05 15:23:01.188537 test begin: paddle.broadcast_to(Tensor([4, 0, 111, 77],"bool"), list[4,8,111,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 111, 77],"bool"), list[4,8,111,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 111, 77].  Tensor sizes: [4, 0, 111, 77]
2025-03-05 15:23:01.189077 test begin: paddle.broadcast_to(Tensor([4, 0, 112, 112],"bool"), list[4,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 112, 112],"bool"), list[4,8,112,112,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 112, 112].  Tensor sizes: [4, 0, 112, 112]
2025-03-05 15:23:01.189605 test begin: paddle.broadcast_to(Tensor([4, 0, 112, 61],"bool"), list[4,8,112,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 112, 61],"bool"), list[4,8,112,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 112, 61].  Tensor sizes: [4, 0, 112, 61]
2025-03-05 15:23:01.190112 test begin: paddle.broadcast_to(Tensor([4, 0, 112, 77],"bool"), list[4,8,112,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 112, 77],"bool"), list[4,8,112,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 112, 77].  Tensor sizes: [4, 0, 112, 77]
2025-03-05 15:23:01.190639 test begin: paddle.broadcast_to(Tensor([4, 0, 113, 113],"bool"), list[4,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 113, 113],"bool"), list[4,8,113,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 113, 113].  Tensor sizes: [4, 0, 113, 113]
2025-03-05 15:23:01.191159 test begin: paddle.broadcast_to(Tensor([4, 0, 113, 61],"bool"), list[4,8,113,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 113, 61],"bool"), list[4,8,113,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 113, 61].  Tensor sizes: [4, 0, 113, 61]
2025-03-05 15:23:01.191676 test begin: paddle.broadcast_to(Tensor([4, 0, 113, 77],"bool"), list[4,8,113,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 113, 77],"bool"), list[4,8,113,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 113, 77].  Tensor sizes: [4, 0, 113, 77]
2025-03-05 15:23:01.192183 test begin: paddle.broadcast_to(Tensor([4, 0, 114, 114],"bool"), list[4,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 114, 114],"bool"), list[4,8,114,114,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 114, 114].  Tensor sizes: [4, 0, 114, 114]
2025-03-05 15:23:01.192705 test begin: paddle.broadcast_to(Tensor([4, 0, 114, 61],"bool"), list[4,8,114,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 114, 61],"bool"), list[4,8,114,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 114, 61].  Tensor sizes: [4, 0, 114, 61]
2025-03-05 15:23:01.193267 test begin: paddle.broadcast_to(Tensor([4, 0, 114, 77],"bool"), list[4,8,114,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 114, 77],"bool"), list[4,8,114,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 114, 77].  Tensor sizes: [4, 0, 114, 77]
2025-03-05 15:23:01.193795 test begin: paddle.broadcast_to(Tensor([4, 0, 115, 115],"bool"), list[4,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 115, 115],"bool"), list[4,8,115,115,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 115, 115].  Tensor sizes: [4, 0, 115, 115]
2025-03-05 15:23:01.194311 test begin: paddle.broadcast_to(Tensor([4, 0, 115, 61],"bool"), list[4,8,115,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 115, 61],"bool"), list[4,8,115,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 115, 61].  Tensor sizes: [4, 0, 115, 61]
2025-03-05 15:23:01.194874 test begin: paddle.broadcast_to(Tensor([4, 0, 115, 77],"bool"), list[4,8,115,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 115, 77],"bool"), list[4,8,115,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 115, 77].  Tensor sizes: [4, 0, 115, 77]
2025-03-05 15:23:01.195758 test begin: paddle.broadcast_to(Tensor([4, 0, 116, 116],"bool"), list[4,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 116, 116],"bool"), list[4,8,116,116,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 116, 116].  Tensor sizes: [4, 0, 116, 116]
2025-03-05 15:23:01.196462 test begin: paddle.broadcast_to(Tensor([4, 0, 116, 61],"bool"), list[4,8,116,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 116, 61],"bool"), list[4,8,116,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 116, 61].  Tensor sizes: [4, 0, 116, 61]
2025-03-05 15:23:01.197107 test begin: paddle.broadcast_to(Tensor([4, 0, 116, 77],"bool"), list[4,8,116,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 116, 77],"bool"), list[4,8,116,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 116, 77].  Tensor sizes: [4, 0, 116, 77]
2025-03-05 15:23:01.197781 test begin: paddle.broadcast_to(Tensor([4, 0, 117, 117],"bool"), list[4,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 117, 117],"bool"), list[4,8,117,117,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 117, 117].  Tensor sizes: [4, 0, 117, 117]
2025-03-05 15:23:01.198382 test begin: paddle.broadcast_to(Tensor([4, 0, 117, 61],"bool"), list[4,8,117,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 117, 61],"bool"), list[4,8,117,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 117, 61].  Tensor sizes: [4, 0, 117, 61]
2025-03-05 15:23:01.198990 test begin: paddle.broadcast_to(Tensor([4, 0, 117, 77],"bool"), list[4,8,117,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 117, 77],"bool"), list[4,8,117,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 117, 77].  Tensor sizes: [4, 0, 117, 77]
2025-03-05 15:23:01.199595 test begin: paddle.broadcast_to(Tensor([4, 0, 118, 118],"bool"), list[4,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 118, 118],"bool"), list[4,8,118,118,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 118, 118].  Tensor sizes: [4, 0, 118, 118]
2025-03-05 15:23:01.200215 test begin: paddle.broadcast_to(Tensor([4, 0, 118, 61],"bool"), list[4,8,118,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 118, 61],"bool"), list[4,8,118,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 118, 61].  Tensor sizes: [4, 0, 118, 61]
2025-03-05 15:23:01.200839 test begin: paddle.broadcast_to(Tensor([4, 0, 118, 77],"bool"), list[4,8,118,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 118, 77],"bool"), list[4,8,118,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 118, 77].  Tensor sizes: [4, 0, 118, 77]
2025-03-05 15:23:01.201429 test begin: paddle.broadcast_to(Tensor([4, 0, 119, 119],"bool"), list[4,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 119, 119],"bool"), list[4,8,119,119,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 119, 119].  Tensor sizes: [4, 0, 119, 119]
2025-03-05 15:23:01.202032 test begin: paddle.broadcast_to(Tensor([4, 0, 119, 61],"bool"), list[4,8,119,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 119, 61],"bool"), list[4,8,119,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 119, 61].  Tensor sizes: [4, 0, 119, 61]
2025-03-05 15:23:01.202813 test begin: paddle.broadcast_to(Tensor([4, 0, 119, 77],"bool"), list[4,8,119,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 119, 77],"bool"), list[4,8,119,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 119, 77].  Tensor sizes: [4, 0, 119, 77]
2025-03-05 15:23:01.203498 test begin: paddle.broadcast_to(Tensor([4, 0, 12, 12],"bool"), list[4,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 12, 12],"bool"), list[4,8,12,12,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 12, 12].  Tensor sizes: [4, 0, 12, 12]
2025-03-05 15:23:01.204059 test begin: paddle.broadcast_to(Tensor([4, 0, 12, 13],"bool"), list[4,8,12,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 12, 13],"bool"), list[4,8,12,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 12, 13].  Tensor sizes: [4, 0, 12, 13]
2025-03-05 15:23:01.204602 test begin: paddle.broadcast_to(Tensor([4, 0, 12, 25],"bool"), list[4,8,12,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 12, 25],"bool"), list[4,8,12,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 12, 25].  Tensor sizes: [4, 0, 12, 25]
2025-03-05 15:23:01.205134 test begin: paddle.broadcast_to(Tensor([4, 0, 12, 37],"bool"), list[4,8,12,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 12, 37],"bool"), list[4,8,12,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 12, 37].  Tensor sizes: [4, 0, 12, 37]
2025-03-05 15:23:01.205655 test begin: paddle.broadcast_to(Tensor([4, 0, 12, 5],"bool"), list[4,8,12,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 12, 5],"bool"), list[4,8,12,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 12, 5].  Tensor sizes: [4, 0, 12, 5]
2025-03-05 15:23:01.206182 test begin: paddle.broadcast_to(Tensor([4, 0, 12, 61],"bool"), list[4,8,12,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 12, 61],"bool"), list[4,8,12,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 12, 61].  Tensor sizes: [4, 0, 12, 61]
2025-03-05 15:23:01.206697 test begin: paddle.broadcast_to(Tensor([4, 0, 12, 77],"bool"), list[4,8,12,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 12, 77],"bool"), list[4,8,12,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 12, 77].  Tensor sizes: [4, 0, 12, 77]
2025-03-05 15:23:01.207235 test begin: paddle.broadcast_to(Tensor([4, 0, 120, 120],"bool"), list[4,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 120, 120],"bool"), list[4,8,120,120,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 120, 120].  Tensor sizes: [4, 0, 120, 120]
2025-03-05 15:23:01.207781 test begin: paddle.broadcast_to(Tensor([4, 0, 120, 61],"bool"), list[4,8,120,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 120, 61],"bool"), list[4,8,120,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 120, 61].  Tensor sizes: [4, 0, 120, 61]
2025-03-05 15:23:01.208296 test begin: paddle.broadcast_to(Tensor([4, 0, 120, 77],"bool"), list[4,8,120,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 120, 77],"bool"), list[4,8,120,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 120, 77].  Tensor sizes: [4, 0, 120, 77]
2025-03-05 15:23:01.208817 test begin: paddle.broadcast_to(Tensor([4, 0, 121, 121],"bool"), list[4,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 121, 121],"bool"), list[4,8,121,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 121, 121].  Tensor sizes: [4, 0, 121, 121]
2025-03-05 15:23:01.209333 test begin: paddle.broadcast_to(Tensor([4, 0, 121, 61],"bool"), list[4,8,121,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 121, 61],"bool"), list[4,8,121,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 121, 61].  Tensor sizes: [4, 0, 121, 61]
2025-03-05 15:23:01.209931 test begin: paddle.broadcast_to(Tensor([4, 0, 121, 77],"bool"), list[4,8,121,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 121, 77],"bool"), list[4,8,121,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 121, 77].  Tensor sizes: [4, 0, 121, 77]
2025-03-05 15:23:01.210457 test begin: paddle.broadcast_to(Tensor([4, 0, 122, 122],"bool"), list[4,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 122, 122],"bool"), list[4,8,122,122,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 122, 122].  Tensor sizes: [4, 0, 122, 122]
2025-03-05 15:23:01.211053 test begin: paddle.broadcast_to(Tensor([4, 0, 122, 61],"bool"), list[4,8,122,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 122, 61],"bool"), list[4,8,122,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 122, 61].  Tensor sizes: [4, 0, 122, 61]
2025-03-05 15:23:01.211613 test begin: paddle.broadcast_to(Tensor([4, 0, 122, 77],"bool"), list[4,8,122,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 122, 77],"bool"), list[4,8,122,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 122, 77].  Tensor sizes: [4, 0, 122, 77]
2025-03-05 15:23:01.212171 test begin: paddle.broadcast_to(Tensor([4, 0, 123, 123],"bool"), list[4,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 123, 123],"bool"), list[4,8,123,123,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 123, 123].  Tensor sizes: [4, 0, 123, 123]
2025-03-05 15:23:01.212709 test begin: paddle.broadcast_to(Tensor([4, 0, 123, 61],"bool"), list[4,8,123,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 123, 61],"bool"), list[4,8,123,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 123, 61].  Tensor sizes: [4, 0, 123, 61]
2025-03-05 15:23:01.213275 test begin: paddle.broadcast_to(Tensor([4, 0, 123, 77],"bool"), list[4,8,123,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 123, 77],"bool"), list[4,8,123,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 123, 77].  Tensor sizes: [4, 0, 123, 77]
2025-03-05 15:23:01.213805 test begin: paddle.broadcast_to(Tensor([4, 0, 124, 124],"bool"), list[4,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 124, 124],"bool"), list[4,8,124,124,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 124, 124].  Tensor sizes: [4, 0, 124, 124]
2025-03-05 15:23:01.214383 test begin: paddle.broadcast_to(Tensor([4, 0, 124, 61],"bool"), list[4,8,124,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 124, 61],"bool"), list[4,8,124,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 124, 61].  Tensor sizes: [4, 0, 124, 61]
2025-03-05 15:23:01.215008 test begin: paddle.broadcast_to(Tensor([4, 0, 124, 77],"bool"), list[4,8,124,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 124, 77],"bool"), list[4,8,124,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 124, 77].  Tensor sizes: [4, 0, 124, 77]
2025-03-05 15:23:01.215625 test begin: paddle.broadcast_to(Tensor([4, 0, 125, 125],"bool"), list[4,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 125, 125],"bool"), list[4,8,125,125,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 125, 125].  Tensor sizes: [4, 0, 125, 125]
2025-03-05 15:23:01.216180 test begin: paddle.broadcast_to(Tensor([4, 0, 125, 61],"bool"), list[4,8,125,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 125, 61],"bool"), list[4,8,125,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 125, 61].  Tensor sizes: [4, 0, 125, 61]
2025-03-05 15:23:01.216718 test begin: paddle.broadcast_to(Tensor([4, 0, 125, 77],"bool"), list[4,8,125,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 125, 77],"bool"), list[4,8,125,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 125, 77].  Tensor sizes: [4, 0, 125, 77]
2025-03-05 15:23:01.217255 test begin: paddle.broadcast_to(Tensor([4, 0, 126, 126],"bool"), list[4,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 126, 126],"bool"), list[4,8,126,126,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 126, 126].  Tensor sizes: [4, 0, 126, 126]
2025-03-05 15:23:01.217917 test begin: paddle.broadcast_to(Tensor([4, 0, 126, 61],"bool"), list[4,8,126,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 126, 61],"bool"), list[4,8,126,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 126, 61].  Tensor sizes: [4, 0, 126, 61]
2025-03-05 15:23:01.219137 test begin: paddle.broadcast_to(Tensor([4, 0, 126, 77],"bool"), list[4,8,126,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 126, 77],"bool"), list[4,8,126,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 126, 77].  Tensor sizes: [4, 0, 126, 77]
2025-03-05 15:23:01.219750 test begin: paddle.broadcast_to(Tensor([4, 0, 127, 127],"bool"), list[4,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 127, 127],"bool"), list[4,8,127,127,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 127, 127].  Tensor sizes: [4, 0, 127, 127]
2025-03-05 15:23:01.220327 test begin: paddle.broadcast_to(Tensor([4, 0, 127, 61],"bool"), list[4,8,127,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 127, 61],"bool"), list[4,8,127,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 127, 61].  Tensor sizes: [4, 0, 127, 61]
2025-03-05 15:23:01.220880 test begin: paddle.broadcast_to(Tensor([4, 0, 127, 77],"bool"), list[4,8,127,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 127, 77],"bool"), list[4,8,127,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 127, 77].  Tensor sizes: [4, 0, 127, 77]
2025-03-05 15:23:01.221416 test begin: paddle.broadcast_to(Tensor([4, 0, 128, 128],"bool"), list[4,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 128, 128],"bool"), list[4,8,128,128,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 128, 128].  Tensor sizes: [4, 0, 128, 128]
2025-03-05 15:23:01.221976 test begin: paddle.broadcast_to(Tensor([4, 0, 128, 61],"bool"), list[4,8,128,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 128, 61],"bool"), list[4,8,128,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 128, 61].  Tensor sizes: [4, 0, 128, 61]
2025-03-05 15:23:01.222505 test begin: paddle.broadcast_to(Tensor([4, 0, 128, 77],"bool"), list[4,8,128,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 128, 77],"bool"), list[4,8,128,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 128, 77].  Tensor sizes: [4, 0, 128, 77]
2025-03-05 15:23:01.223055 test begin: paddle.broadcast_to(Tensor([4, 0, 129, 129],"bool"), list[4,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 129, 129],"bool"), list[4,8,129,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 129, 129].  Tensor sizes: [4, 0, 129, 129]
2025-03-05 15:23:01.223592 test begin: paddle.broadcast_to(Tensor([4, 0, 129, 61],"bool"), list[4,8,129,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 129, 61],"bool"), list[4,8,129,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 129, 61].  Tensor sizes: [4, 0, 129, 61]
2025-03-05 15:23:01.224130 test begin: paddle.broadcast_to(Tensor([4, 0, 129, 77],"bool"), list[4,8,129,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 129, 77],"bool"), list[4,8,129,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 129, 77].  Tensor sizes: [4, 0, 129, 77]
2025-03-05 15:23:01.224664 test begin: paddle.broadcast_to(Tensor([4, 0, 13, 13],"bool"), list[4,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 13, 13],"bool"), list[4,8,13,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 13, 13].  Tensor sizes: [4, 0, 13, 13]
2025-03-05 15:23:01.225190 test begin: paddle.broadcast_to(Tensor([4, 0, 13, 25],"bool"), list[4,8,13,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 13, 25],"bool"), list[4,8,13,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 13, 25].  Tensor sizes: [4, 0, 13, 25]
2025-03-05 15:23:01.225756 test begin: paddle.broadcast_to(Tensor([4, 0, 13, 37],"bool"), list[4,8,13,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 13, 37],"bool"), list[4,8,13,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 13, 37].  Tensor sizes: [4, 0, 13, 37]
2025-03-05 15:23:01.226359 test begin: paddle.broadcast_to(Tensor([4, 0, 13, 5],"bool"), list[4,8,13,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 13, 5],"bool"), list[4,8,13,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 13, 5].  Tensor sizes: [4, 0, 13, 5]
2025-03-05 15:23:01.226916 test begin: paddle.broadcast_to(Tensor([4, 0, 13, 61],"bool"), list[4,8,13,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 13, 61],"bool"), list[4,8,13,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 13, 61].  Tensor sizes: [4, 0, 13, 61]
2025-03-05 15:23:01.227448 test begin: paddle.broadcast_to(Tensor([4, 0, 13, 77],"bool"), list[4,8,13,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 13, 77],"bool"), list[4,8,13,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 13, 77].  Tensor sizes: [4, 0, 13, 77]
2025-03-05 15:23:01.227996 test begin: paddle.broadcast_to(Tensor([4, 0, 130, 130],"bool"), list[4,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 130, 130],"bool"), list[4,8,130,130,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 130, 130].  Tensor sizes: [4, 0, 130, 130]
2025-03-05 15:23:01.228542 test begin: paddle.broadcast_to(Tensor([4, 0, 130, 61],"bool"), list[4,8,130,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 130, 61],"bool"), list[4,8,130,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 130, 61].  Tensor sizes: [4, 0, 130, 61]
2025-03-05 15:23:01.229141 test begin: paddle.broadcast_to(Tensor([4, 0, 130, 77],"bool"), list[4,8,130,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 130, 77],"bool"), list[4,8,130,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 130, 77].  Tensor sizes: [4, 0, 130, 77]
2025-03-05 15:23:01.229776 test begin: paddle.broadcast_to(Tensor([4, 0, 131, 131],"bool"), list[4,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 131, 131],"bool"), list[4,8,131,131,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 131, 131].  Tensor sizes: [4, 0, 131, 131]
2025-03-05 15:23:01.230353 test begin: paddle.broadcast_to(Tensor([4, 0, 131, 61],"bool"), list[4,8,131,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 131, 61],"bool"), list[4,8,131,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 131, 61].  Tensor sizes: [4, 0, 131, 61]
2025-03-05 15:23:01.230936 test begin: paddle.broadcast_to(Tensor([4, 0, 131, 77],"bool"), list[4,8,131,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 131, 77],"bool"), list[4,8,131,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 131, 77].  Tensor sizes: [4, 0, 131, 77]
2025-03-05 15:23:01.231485 test begin: paddle.broadcast_to(Tensor([4, 0, 132, 132],"bool"), list[4,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 132, 132],"bool"), list[4,8,132,132,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 132, 132].  Tensor sizes: [4, 0, 132, 132]
2025-03-05 15:23:01.232051 test begin: paddle.broadcast_to(Tensor([4, 0, 132, 61],"bool"), list[4,8,132,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 132, 61],"bool"), list[4,8,132,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 132, 61].  Tensor sizes: [4, 0, 132, 61]
2025-03-05 15:23:01.232577 test begin: paddle.broadcast_to(Tensor([4, 0, 132, 77],"bool"), list[4,8,132,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 132, 77],"bool"), list[4,8,132,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 132, 77].  Tensor sizes: [4, 0, 132, 77]
2025-03-05 15:23:01.233111 test begin: paddle.broadcast_to(Tensor([4, 0, 133, 133],"bool"), list[4,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 133, 133],"bool"), list[4,8,133,133,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 133, 133].  Tensor sizes: [4, 0, 133, 133]
2025-03-05 15:23:01.233642 test begin: paddle.broadcast_to(Tensor([4, 0, 133, 61],"bool"), list[4,8,133,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 133, 61],"bool"), list[4,8,133,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 133, 61].  Tensor sizes: [4, 0, 133, 61]
2025-03-05 15:23:01.234156 test begin: paddle.broadcast_to(Tensor([4, 0, 133, 77],"bool"), list[4,8,133,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 133, 77],"bool"), list[4,8,133,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 133, 77].  Tensor sizes: [4, 0, 133, 77]
2025-03-05 15:23:01.234734 test begin: paddle.broadcast_to(Tensor([4, 0, 134, 134],"bool"), list[4,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 134, 134],"bool"), list[4,8,134,134,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 134, 134].  Tensor sizes: [4, 0, 134, 134]
2025-03-05 15:23:01.235262 test begin: paddle.broadcast_to(Tensor([4, 0, 134, 61],"bool"), list[4,8,134,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 134, 61],"bool"), list[4,8,134,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 134, 61].  Tensor sizes: [4, 0, 134, 61]
2025-03-05 15:23:01.235840 test begin: paddle.broadcast_to(Tensor([4, 0, 134, 77],"bool"), list[4,8,134,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 134, 77],"bool"), list[4,8,134,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 134, 77].  Tensor sizes: [4, 0, 134, 77]
2025-03-05 15:23:01.236366 test begin: paddle.broadcast_to(Tensor([4, 0, 135, 135],"bool"), list[4,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 135, 135],"bool"), list[4,8,135,135,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 135, 135].  Tensor sizes: [4, 0, 135, 135]
2025-03-05 15:23:01.236922 test begin: paddle.broadcast_to(Tensor([4, 0, 135, 61],"bool"), list[4,8,135,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 135, 61],"bool"), list[4,8,135,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 135, 61].  Tensor sizes: [4, 0, 135, 61]
2025-03-05 15:23:01.237456 test begin: paddle.broadcast_to(Tensor([4, 0, 135, 77],"bool"), list[4,8,135,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 135, 77],"bool"), list[4,8,135,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 135, 77].  Tensor sizes: [4, 0, 135, 77]
2025-03-05 15:23:01.237990 test begin: paddle.broadcast_to(Tensor([4, 0, 136, 136],"bool"), list[4,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 136, 136],"bool"), list[4,8,136,136,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 136, 136].  Tensor sizes: [4, 0, 136, 136]
2025-03-05 15:23:01.238521 test begin: paddle.broadcast_to(Tensor([4, 0, 136, 61],"bool"), list[4,8,136,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 136, 61],"bool"), list[4,8,136,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 136, 61].  Tensor sizes: [4, 0, 136, 61]
2025-03-05 15:23:01.239041 test begin: paddle.broadcast_to(Tensor([4, 0, 136, 77],"bool"), list[4,8,136,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 136, 77],"bool"), list[4,8,136,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 136, 77].  Tensor sizes: [4, 0, 136, 77]
2025-03-05 15:23:01.239564 test begin: paddle.broadcast_to(Tensor([4, 0, 137, 137],"bool"), list[4,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 137, 137],"bool"), list[4,8,137,137,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 137, 137].  Tensor sizes: [4, 0, 137, 137]
2025-03-05 15:23:01.240096 test begin: paddle.broadcast_to(Tensor([4, 0, 137, 61],"bool"), list[4,8,137,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 137, 61],"bool"), list[4,8,137,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 137, 61].  Tensor sizes: [4, 0, 137, 61]
2025-03-05 15:23:01.240658 test begin: paddle.broadcast_to(Tensor([4, 0, 137, 77],"bool"), list[4,8,137,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 137, 77],"bool"), list[4,8,137,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 137, 77].  Tensor sizes: [4, 0, 137, 77]
2025-03-05 15:23:01.241269 test begin: paddle.broadcast_to(Tensor([4, 0, 138, 138],"bool"), list[4,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 138, 138],"bool"), list[4,8,138,138,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 138, 138].  Tensor sizes: [4, 0, 138, 138]
2025-03-05 15:23:01.241849 test begin: paddle.broadcast_to(Tensor([4, 0, 138, 77],"bool"), list[4,8,138,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 138, 77],"bool"), list[4,8,138,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 138, 77].  Tensor sizes: [4, 0, 138, 77]
2025-03-05 15:23:01.242375 test begin: paddle.broadcast_to(Tensor([4, 0, 139, 139],"bool"), list[4,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 139, 139],"bool"), list[4,8,139,139,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 139, 139].  Tensor sizes: [4, 0, 139, 139]
2025-03-05 15:23:01.242937 test begin: paddle.broadcast_to(Tensor([4, 0, 139, 77],"bool"), list[4,8,139,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 139, 77],"bool"), list[4,8,139,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 139, 77].  Tensor sizes: [4, 0, 139, 77]
2025-03-05 15:23:01.243458 test begin: paddle.broadcast_to(Tensor([4, 0, 14, 13],"bool"), list[4,8,14,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 14, 13],"bool"), list[4,8,14,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 14, 13].  Tensor sizes: [4, 0, 14, 13]
2025-03-05 15:23:01.243987 test begin: paddle.broadcast_to(Tensor([4, 0, 14, 14],"bool"), list[4,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 14, 14],"bool"), list[4,8,14,14,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 14, 14].  Tensor sizes: [4, 0, 14, 14]
2025-03-05 15:23:01.244513 test begin: paddle.broadcast_to(Tensor([4, 0, 14, 25],"bool"), list[4,8,14,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 14, 25],"bool"), list[4,8,14,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 14, 25].  Tensor sizes: [4, 0, 14, 25]
2025-03-05 15:23:01.245044 test begin: paddle.broadcast_to(Tensor([4, 0, 14, 37],"bool"), list[4,8,14,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 14, 37],"bool"), list[4,8,14,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 14, 37].  Tensor sizes: [4, 0, 14, 37]
2025-03-05 15:23:01.245605 test begin: paddle.broadcast_to(Tensor([4, 0, 14, 61],"bool"), list[4,8,14,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 14, 61],"bool"), list[4,8,14,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 14, 61].  Tensor sizes: [4, 0, 14, 61]
2025-03-05 15:23:01.246150 test begin: paddle.broadcast_to(Tensor([4, 0, 14, 77],"bool"), list[4,8,14,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 14, 77],"bool"), list[4,8,14,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 14, 77].  Tensor sizes: [4, 0, 14, 77]
2025-03-05 15:23:01.246687 test begin: paddle.broadcast_to(Tensor([4, 0, 140, 140],"bool"), list[4,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 140, 140],"bool"), list[4,8,140,140,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 140, 140].  Tensor sizes: [4, 0, 140, 140]
2025-03-05 15:23:01.247211 test begin: paddle.broadcast_to(Tensor([4, 0, 140, 77],"bool"), list[4,8,140,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 140, 77],"bool"), list[4,8,140,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 140, 77].  Tensor sizes: [4, 0, 140, 77]
2025-03-05 15:23:01.247835 test begin: paddle.broadcast_to(Tensor([4, 0, 141, 141],"bool"), list[4,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 141, 141],"bool"), list[4,8,141,141,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 141, 141].  Tensor sizes: [4, 0, 141, 141]
2025-03-05 15:23:01.248350 test begin: paddle.broadcast_to(Tensor([4, 0, 141, 77],"bool"), list[4,8,141,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 141, 77],"bool"), list[4,8,141,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 141, 77].  Tensor sizes: [4, 0, 141, 77]
2025-03-05 15:23:01.248902 test begin: paddle.broadcast_to(Tensor([4, 0, 142, 142],"bool"), list[4,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 142, 142],"bool"), list[4,8,142,142,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 142, 142].  Tensor sizes: [4, 0, 142, 142]
2025-03-05 15:23:01.249430 test begin: paddle.broadcast_to(Tensor([4, 0, 142, 77],"bool"), list[4,8,142,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 142, 77],"bool"), list[4,8,142,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 142, 77].  Tensor sizes: [4, 0, 142, 77]
2025-03-05 15:23:01.249951 test begin: paddle.broadcast_to(Tensor([4, 0, 143, 143],"bool"), list[4,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 143, 143],"bool"), list[4,8,143,143,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 143, 143].  Tensor sizes: [4, 0, 143, 143]
2025-03-05 15:23:01.250461 test begin: paddle.broadcast_to(Tensor([4, 0, 143, 77],"bool"), list[4,8,143,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 143, 77],"bool"), list[4,8,143,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 143, 77].  Tensor sizes: [4, 0, 143, 77]
2025-03-05 15:23:01.250984 test begin: paddle.broadcast_to(Tensor([4, 0, 144, 144],"bool"), list[4,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 144, 144],"bool"), list[4,8,144,144,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 144, 144].  Tensor sizes: [4, 0, 144, 144]
2025-03-05 15:23:01.251496 test begin: paddle.broadcast_to(Tensor([4, 0, 144, 77],"bool"), list[4,8,144,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 144, 77],"bool"), list[4,8,144,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 144, 77].  Tensor sizes: [4, 0, 144, 77]
2025-03-05 15:23:01.252082 test begin: paddle.broadcast_to(Tensor([4, 0, 145, 145],"bool"), list[4,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 145, 145],"bool"), list[4,8,145,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 145, 145].  Tensor sizes: [4, 0, 145, 145]
2025-03-05 15:23:01.252661 test begin: paddle.broadcast_to(Tensor([4, 0, 145, 77],"bool"), list[4,8,145,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 145, 77],"bool"), list[4,8,145,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 145, 77].  Tensor sizes: [4, 0, 145, 77]
2025-03-05 15:23:01.253332 test begin: paddle.broadcast_to(Tensor([4, 0, 146, 146],"bool"), list[4,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 146, 146],"bool"), list[4,8,146,146,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 146, 146].  Tensor sizes: [4, 0, 146, 146]
2025-03-05 15:23:01.253967 test begin: paddle.broadcast_to(Tensor([4, 0, 146, 77],"bool"), list[4,8,146,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 146, 77],"bool"), list[4,8,146,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 146, 77].  Tensor sizes: [4, 0, 146, 77]
2025-03-05 15:23:01.254594 test begin: paddle.broadcast_to(Tensor([4, 0, 147, 147],"bool"), list[4,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 147, 147],"bool"), list[4,8,147,147,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 147, 147].  Tensor sizes: [4, 0, 147, 147]
2025-03-05 15:23:01.255307 test begin: paddle.broadcast_to(Tensor([4, 0, 147, 77],"bool"), list[4,8,147,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 147, 77],"bool"), list[4,8,147,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 147, 77].  Tensor sizes: [4, 0, 147, 77]
2025-03-05 15:23:01.256015 test begin: paddle.broadcast_to(Tensor([4, 0, 148, 148],"bool"), list[4,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 148, 148],"bool"), list[4,8,148,148,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 148, 148].  Tensor sizes: [4, 0, 148, 148]
2025-03-05 15:23:01.256669 test begin: paddle.broadcast_to(Tensor([4, 0, 148, 77],"bool"), list[4,8,148,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 148, 77],"bool"), list[4,8,148,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 148, 77].  Tensor sizes: [4, 0, 148, 77]
2025-03-05 15:23:01.257268 test begin: paddle.broadcast_to(Tensor([4, 0, 149, 149],"bool"), list[4,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 149, 149],"bool"), list[4,8,149,149,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 149, 149].  Tensor sizes: [4, 0, 149, 149]
2025-03-05 15:23:01.257875 test begin: paddle.broadcast_to(Tensor([4, 0, 149, 77],"bool"), list[4,8,149,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 149, 77],"bool"), list[4,8,149,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 149, 77].  Tensor sizes: [4, 0, 149, 77]
2025-03-05 15:23:01.258493 test begin: paddle.broadcast_to(Tensor([4, 0, 15, 13],"bool"), list[4,8,15,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 15, 13],"bool"), list[4,8,15,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 15, 13].  Tensor sizes: [4, 0, 15, 13]
2025-03-05 15:23:01.259263 test begin: paddle.broadcast_to(Tensor([4, 0, 15, 15],"bool"), list[4,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 15, 15],"bool"), list[4,8,15,15,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 15, 15].  Tensor sizes: [4, 0, 15, 15]
2025-03-05 15:23:01.259986 test begin: paddle.broadcast_to(Tensor([4, 0, 15, 25],"bool"), list[4,8,15,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 15, 25],"bool"), list[4,8,15,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 15, 25].  Tensor sizes: [4, 0, 15, 25]
2025-03-05 15:23:01.260658 test begin: paddle.broadcast_to(Tensor([4, 0, 15, 37],"bool"), list[4,8,15,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 15, 37],"bool"), list[4,8,15,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 15, 37].  Tensor sizes: [4, 0, 15, 37]
2025-03-05 15:23:01.261286 test begin: paddle.broadcast_to(Tensor([4, 0, 15, 61],"bool"), list[4,8,15,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 15, 61],"bool"), list[4,8,15,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 15, 61].  Tensor sizes: [4, 0, 15, 61]
2025-03-05 15:23:01.261960 test begin: paddle.broadcast_to(Tensor([4, 0, 15, 77],"bool"), list[4,8,15,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 15, 77],"bool"), list[4,8,15,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 15, 77].  Tensor sizes: [4, 0, 15, 77]
2025-03-05 15:23:01.262639 test begin: paddle.broadcast_to(Tensor([4, 0, 150, 150],"bool"), list[4,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 150, 150],"bool"), list[4,8,150,150,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 150, 150].  Tensor sizes: [4, 0, 150, 150]
2025-03-05 15:23:01.263183 test begin: paddle.broadcast_to(Tensor([4, 0, 150, 77],"bool"), list[4,8,150,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 150, 77],"bool"), list[4,8,150,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 150, 77].  Tensor sizes: [4, 0, 150, 77]
2025-03-05 15:23:01.263855 test begin: paddle.broadcast_to(Tensor([4, 0, 151, 151],"bool"), list[4,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 151, 151],"bool"), list[4,8,151,151,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 151, 151].  Tensor sizes: [4, 0, 151, 151]
2025-03-05 15:23:01.264389 test begin: paddle.broadcast_to(Tensor([4, 0, 151, 77],"bool"), list[4,8,151,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 151, 77],"bool"), list[4,8,151,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 151, 77].  Tensor sizes: [4, 0, 151, 77]
2025-03-05 15:23:01.264914 test begin: paddle.broadcast_to(Tensor([4, 0, 152, 152],"bool"), list[4,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 152, 152],"bool"), list[4,8,152,152,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 152, 152].  Tensor sizes: [4, 0, 152, 152]
2025-03-05 15:23:01.265426 test begin: paddle.broadcast_to(Tensor([4, 0, 152, 77],"bool"), list[4,8,152,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 152, 77],"bool"), list[4,8,152,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 152, 77].  Tensor sizes: [4, 0, 152, 77]
2025-03-05 15:23:01.265968 test begin: paddle.broadcast_to(Tensor([4, 0, 153, 153],"bool"), list[4,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 153, 153],"bool"), list[4,8,153,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 153, 153].  Tensor sizes: [4, 0, 153, 153]
2025-03-05 15:23:01.266486 test begin: paddle.broadcast_to(Tensor([4, 0, 153, 77],"bool"), list[4,8,153,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 153, 77],"bool"), list[4,8,153,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 153, 77].  Tensor sizes: [4, 0, 153, 77]
2025-03-05 15:23:01.267011 test begin: paddle.broadcast_to(Tensor([4, 0, 154, 154],"bool"), list[4,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 154, 154],"bool"), list[4,8,154,154,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 154, 154].  Tensor sizes: [4, 0, 154, 154]
2025-03-05 15:23:01.267519 test begin: paddle.broadcast_to(Tensor([4, 0, 154, 77],"bool"), list[4,8,154,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 154, 77],"bool"), list[4,8,154,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 154, 77].  Tensor sizes: [4, 0, 154, 77]
2025-03-05 15:23:01.268047 test begin: paddle.broadcast_to(Tensor([4, 0, 155, 155],"bool"), list[4,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 155, 155],"bool"), list[4,8,155,155,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 155, 155].  Tensor sizes: [4, 0, 155, 155]
2025-03-05 15:23:01.268556 test begin: paddle.broadcast_to(Tensor([4, 0, 155, 77],"bool"), list[4,8,155,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 155, 77],"bool"), list[4,8,155,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 155, 77].  Tensor sizes: [4, 0, 155, 77]
2025-03-05 15:23:01.269090 test begin: paddle.broadcast_to(Tensor([4, 0, 156, 156],"bool"), list[4,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 156, 156],"bool"), list[4,8,156,156,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 156, 156].  Tensor sizes: [4, 0, 156, 156]
2025-03-05 15:23:01.269624 test begin: paddle.broadcast_to(Tensor([4, 0, 156, 77],"bool"), list[4,8,156,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 156, 77],"bool"), list[4,8,156,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 156, 77].  Tensor sizes: [4, 0, 156, 77]
2025-03-05 15:23:01.270137 test begin: paddle.broadcast_to(Tensor([4, 0, 157, 157],"bool"), list[4,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 157, 157],"bool"), list[4,8,157,157,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 157, 157].  Tensor sizes: [4, 0, 157, 157]
2025-03-05 15:23:01.270654 test begin: paddle.broadcast_to(Tensor([4, 0, 157, 77],"bool"), list[4,8,157,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 157, 77],"bool"), list[4,8,157,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 157, 77].  Tensor sizes: [4, 0, 157, 77]
2025-03-05 15:23:01.271230 test begin: paddle.broadcast_to(Tensor([4, 0, 158, 158],"bool"), list[4,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 158, 158],"bool"), list[4,8,158,158,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 158, 158].  Tensor sizes: [4, 0, 158, 158]
2025-03-05 15:23:01.271829 test begin: paddle.broadcast_to(Tensor([4, 0, 158, 77],"bool"), list[4,8,158,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 158, 77],"bool"), list[4,8,158,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 158, 77].  Tensor sizes: [4, 0, 158, 77]
2025-03-05 15:23:01.272336 test begin: paddle.broadcast_to(Tensor([4, 0, 159, 159],"bool"), list[4,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 159, 159],"bool"), list[4,8,159,159,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 159, 159].  Tensor sizes: [4, 0, 159, 159]
2025-03-05 15:23:01.272856 test begin: paddle.broadcast_to(Tensor([4, 0, 159, 77],"bool"), list[4,8,159,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 159, 77],"bool"), list[4,8,159,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 159, 77].  Tensor sizes: [4, 0, 159, 77]
2025-03-05 15:23:01.273362 test begin: paddle.broadcast_to(Tensor([4, 0, 16, 13],"bool"), list[4,8,16,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 16, 13],"bool"), list[4,8,16,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 16, 13].  Tensor sizes: [4, 0, 16, 13]
2025-03-05 15:23:01.273881 test begin: paddle.broadcast_to(Tensor([4, 0, 16, 16],"bool"), list[4,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 16, 16],"bool"), list[4,8,16,16,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 16, 16].  Tensor sizes: [4, 0, 16, 16]
2025-03-05 15:23:01.274404 test begin: paddle.broadcast_to(Tensor([4, 0, 16, 25],"bool"), list[4,8,16,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 16, 25],"bool"), list[4,8,16,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 16, 25].  Tensor sizes: [4, 0, 16, 25]
2025-03-05 15:23:01.274931 test begin: paddle.broadcast_to(Tensor([4, 0, 16, 37],"bool"), list[4,8,16,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 16, 37],"bool"), list[4,8,16,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 16, 37].  Tensor sizes: [4, 0, 16, 37]
2025-03-05 15:23:01.275449 test begin: paddle.broadcast_to(Tensor([4, 0, 16, 61],"bool"), list[4,8,16,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 16, 61],"bool"), list[4,8,16,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 16, 61].  Tensor sizes: [4, 0, 16, 61]
2025-03-05 15:23:01.275972 test begin: paddle.broadcast_to(Tensor([4, 0, 16, 77],"bool"), list[4,8,16,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 16, 77],"bool"), list[4,8,16,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 16, 77].  Tensor sizes: [4, 0, 16, 77]
2025-03-05 15:23:01.276481 test begin: paddle.broadcast_to(Tensor([4, 0, 160, 160],"bool"), list[4,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 160, 160],"bool"), list[4,8,160,160,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 160, 160].  Tensor sizes: [4, 0, 160, 160]
2025-03-05 15:23:01.276996 test begin: paddle.broadcast_to(Tensor([4, 0, 160, 77],"bool"), list[4,8,160,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 160, 77],"bool"), list[4,8,160,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 160, 77].  Tensor sizes: [4, 0, 160, 77]
2025-03-05 15:23:01.277524 test begin: paddle.broadcast_to(Tensor([4, 0, 161, 161],"bool"), list[4,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 161, 161],"bool"), list[4,8,161,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 161, 161].  Tensor sizes: [4, 0, 161, 161]
2025-03-05 15:23:01.278037 test begin: paddle.broadcast_to(Tensor([4, 0, 161, 77],"bool"), list[4,8,161,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 161, 77],"bool"), list[4,8,161,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 161, 77].  Tensor sizes: [4, 0, 161, 77]
2025-03-05 15:23:01.278540 test begin: paddle.broadcast_to(Tensor([4, 0, 162, 162],"bool"), list[4,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 162, 162],"bool"), list[4,8,162,162,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 162, 162].  Tensor sizes: [4, 0, 162, 162]
2025-03-05 15:23:01.279089 test begin: paddle.broadcast_to(Tensor([4, 0, 162, 77],"bool"), list[4,8,162,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 162, 77],"bool"), list[4,8,162,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 162, 77].  Tensor sizes: [4, 0, 162, 77]
2025-03-05 15:23:01.279605 test begin: paddle.broadcast_to(Tensor([4, 0, 163, 163],"bool"), list[4,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 163, 163],"bool"), list[4,8,163,163,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 163, 163].  Tensor sizes: [4, 0, 163, 163]
2025-03-05 15:23:01.280119 test begin: paddle.broadcast_to(Tensor([4, 0, 163, 77],"bool"), list[4,8,163,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 163, 77],"bool"), list[4,8,163,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 163, 77].  Tensor sizes: [4, 0, 163, 77]
2025-03-05 15:23:01.280644 test begin: paddle.broadcast_to(Tensor([4, 0, 164, 164],"bool"), list[4,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 164, 164],"bool"), list[4,8,164,164,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 164, 164].  Tensor sizes: [4, 0, 164, 164]
2025-03-05 15:23:01.281159 test begin: paddle.broadcast_to(Tensor([4, 0, 164, 77],"bool"), list[4,8,164,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 164, 77],"bool"), list[4,8,164,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 164, 77].  Tensor sizes: [4, 0, 164, 77]
2025-03-05 15:23:01.281668 test begin: paddle.broadcast_to(Tensor([4, 0, 165, 165],"bool"), list[4,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 165, 165],"bool"), list[4,8,165,165,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 165, 165].  Tensor sizes: [4, 0, 165, 165]
2025-03-05 15:23:01.282169 test begin: paddle.broadcast_to(Tensor([4, 0, 165, 77],"bool"), list[4,8,165,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 165, 77],"bool"), list[4,8,165,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 165, 77].  Tensor sizes: [4, 0, 165, 77]
2025-03-05 15:23:01.282705 test begin: paddle.broadcast_to(Tensor([4, 0, 166, 166],"bool"), list[4,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 166, 166],"bool"), list[4,8,166,166,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 166, 166].  Tensor sizes: [4, 0, 166, 166]
2025-03-05 15:23:01.283281 test begin: paddle.broadcast_to(Tensor([4, 0, 166, 77],"bool"), list[4,8,166,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 166, 77],"bool"), list[4,8,166,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 166, 77].  Tensor sizes: [4, 0, 166, 77]
2025-03-05 15:23:01.284487 test begin: paddle.broadcast_to(Tensor([4, 0, 167, 167],"bool"), list[4,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 167, 167],"bool"), list[4,8,167,167,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 167, 167].  Tensor sizes: [4, 0, 167, 167]
2025-03-05 15:23:01.294856 test begin: paddle.broadcast_to(Tensor([4, 0, 167, 77],"bool"), list[4,8,167,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 167, 77],"bool"), list[4,8,167,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 167, 77].  Tensor sizes: [4, 0, 167, 77]
2025-03-05 15:23:01.295696 test begin: paddle.broadcast_to(Tensor([4, 0, 168, 168],"bool"), list[4,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 168, 168],"bool"), list[4,8,168,168,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 168, 168].  Tensor sizes: [4, 0, 168, 168]
2025-03-05 15:23:01.296466 test begin: paddle.broadcast_to(Tensor([4, 0, 168, 77],"bool"), list[4,8,168,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 168, 77],"bool"), list[4,8,168,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 168, 77].  Tensor sizes: [4, 0, 168, 77]
2025-03-05 15:23:01.297087 test begin: paddle.broadcast_to(Tensor([4, 0, 169, 169],"bool"), list[4,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 169, 169],"bool"), list[4,8,169,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 169, 169].  Tensor sizes: [4, 0, 169, 169]
2025-03-05 15:23:01.297710 test begin: paddle.broadcast_to(Tensor([4, 0, 169, 77],"bool"), list[4,8,169,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 169, 77],"bool"), list[4,8,169,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 169, 77].  Tensor sizes: [4, 0, 169, 77]
2025-03-05 15:23:01.298562 test begin: paddle.broadcast_to(Tensor([4, 0, 17, 13],"bool"), list[4,8,17,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 17, 13],"bool"), list[4,8,17,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 17, 13].  Tensor sizes: [4, 0, 17, 13]
2025-03-05 15:23:01.299292 test begin: paddle.broadcast_to(Tensor([4, 0, 17, 17],"bool"), list[4,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 17, 17],"bool"), list[4,8,17,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 17, 17].  Tensor sizes: [4, 0, 17, 17]
2025-03-05 15:23:01.300170 test begin: paddle.broadcast_to(Tensor([4, 0, 17, 25],"bool"), list[4,8,17,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 17, 25],"bool"), list[4,8,17,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 17, 25].  Tensor sizes: [4, 0, 17, 25]
2025-03-05 15:23:01.300788 test begin: paddle.broadcast_to(Tensor([4, 0, 17, 37],"bool"), list[4,8,17,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 17, 37],"bool"), list[4,8,17,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 17, 37].  Tensor sizes: [4, 0, 17, 37]
2025-03-05 15:23:01.301337 test begin: paddle.broadcast_to(Tensor([4, 0, 17, 61],"bool"), list[4,8,17,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 17, 61],"bool"), list[4,8,17,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 17, 61].  Tensor sizes: [4, 0, 17, 61]
2025-03-05 15:23:01.301875 test begin: paddle.broadcast_to(Tensor([4, 0, 17, 77],"bool"), list[4,8,17,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 17, 77],"bool"), list[4,8,17,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 17, 77].  Tensor sizes: [4, 0, 17, 77]
2025-03-05 15:23:01.302391 test begin: paddle.broadcast_to(Tensor([4, 0, 170, 170],"bool"), list[4,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 170, 170],"bool"), list[4,8,170,170,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 170, 170].  Tensor sizes: [4, 0, 170, 170]
2025-03-05 15:23:01.302934 test begin: paddle.broadcast_to(Tensor([4, 0, 170, 77],"bool"), list[4,8,170,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 170, 77],"bool"), list[4,8,170,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 170, 77].  Tensor sizes: [4, 0, 170, 77]
2025-03-05 15:23:01.303456 test begin: paddle.broadcast_to(Tensor([4, 0, 171, 171],"bool"), list[4,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 171, 171],"bool"), list[4,8,171,171,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 171, 171].  Tensor sizes: [4, 0, 171, 171]
2025-03-05 15:23:01.303990 test begin: paddle.broadcast_to(Tensor([4, 0, 171, 77],"bool"), list[4,8,171,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 171, 77],"bool"), list[4,8,171,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 171, 77].  Tensor sizes: [4, 0, 171, 77]
2025-03-05 15:23:01.304511 test begin: paddle.broadcast_to(Tensor([4, 0, 172, 172],"bool"), list[4,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 172, 172],"bool"), list[4,8,172,172,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 172, 172].  Tensor sizes: [4, 0, 172, 172]
2025-03-05 15:23:01.305230 test begin: paddle.broadcast_to(Tensor([4, 0, 172, 77],"bool"), list[4,8,172,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 172, 77],"bool"), list[4,8,172,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 172, 77].  Tensor sizes: [4, 0, 172, 77]
2025-03-05 15:23:01.322248 test begin: paddle.broadcast_to(Tensor([4, 0, 173, 173],"bool"), list[4,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 173, 173],"bool"), list[4,8,173,173,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 173, 173].  Tensor sizes: [4, 0, 173, 173]
2025-03-05 15:23:01.323403 test begin: paddle.broadcast_to(Tensor([4, 0, 173, 77],"bool"), list[4,8,173,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 173, 77],"bool"), list[4,8,173,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 173, 77].  Tensor sizes: [4, 0, 173, 77]
2025-03-05 15:23:01.324223 test begin: paddle.broadcast_to(Tensor([4, 0, 174, 174],"bool"), list[4,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 174, 174],"bool"), list[4,8,174,174,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 174, 174].  Tensor sizes: [4, 0, 174, 174]
2025-03-05 15:23:01.324853 test begin: paddle.broadcast_to(Tensor([4, 0, 174, 77],"bool"), list[4,8,174,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 174, 77],"bool"), list[4,8,174,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 174, 77].  Tensor sizes: [4, 0, 174, 77]
2025-03-05 15:23:01.325434 test begin: paddle.broadcast_to(Tensor([4, 0, 175, 175],"bool"), list[4,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 175, 175],"bool"), list[4,8,175,175,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 175, 175].  Tensor sizes: [4, 0, 175, 175]
2025-03-05 15:23:01.325992 test begin: paddle.broadcast_to(Tensor([4, 0, 175, 77],"bool"), list[4,8,175,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 175, 77],"bool"), list[4,8,175,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 175, 77].  Tensor sizes: [4, 0, 175, 77]
2025-03-05 15:23:01.326534 test begin: paddle.broadcast_to(Tensor([4, 0, 176, 176],"bool"), list[4,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 176, 176],"bool"), list[4,8,176,176,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 176, 176].  Tensor sizes: [4, 0, 176, 176]
2025-03-05 15:23:01.327084 test begin: paddle.broadcast_to(Tensor([4, 0, 176, 77],"bool"), list[4,8,176,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 176, 77],"bool"), list[4,8,176,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 176, 77].  Tensor sizes: [4, 0, 176, 77]
2025-03-05 15:23:01.327617 test begin: paddle.broadcast_to(Tensor([4, 0, 177, 177],"bool"), list[4,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 177, 177],"bool"), list[4,8,177,177,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 177, 177].  Tensor sizes: [4, 0, 177, 177]
2025-03-05 15:23:01.328148 test begin: paddle.broadcast_to(Tensor([4, 0, 177, 77],"bool"), list[4,8,177,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 177, 77],"bool"), list[4,8,177,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 177, 77].  Tensor sizes: [4, 0, 177, 77]
2025-03-05 15:23:01.328707 test begin: paddle.broadcast_to(Tensor([4, 0, 178, 178],"bool"), list[4,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 178, 178],"bool"), list[4,8,178,178,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 178, 178].  Tensor sizes: [4, 0, 178, 178]
2025-03-05 15:23:01.329235 test begin: paddle.broadcast_to(Tensor([4, 0, 178, 77],"bool"), list[4,8,178,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 178, 77],"bool"), list[4,8,178,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 178, 77].  Tensor sizes: [4, 0, 178, 77]
2025-03-05 15:23:01.329769 test begin: paddle.broadcast_to(Tensor([4, 0, 179, 179],"bool"), list[4,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 179, 179],"bool"), list[4,8,179,179,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 179, 179].  Tensor sizes: [4, 0, 179, 179]
2025-03-05 15:23:01.330290 test begin: paddle.broadcast_to(Tensor([4, 0, 179, 77],"bool"), list[4,8,179,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 179, 77],"bool"), list[4,8,179,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 179, 77].  Tensor sizes: [4, 0, 179, 77]
2025-03-05 15:23:01.330834 test begin: paddle.broadcast_to(Tensor([4, 0, 18, 13],"bool"), list[4,8,18,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 18, 13],"bool"), list[4,8,18,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 18, 13].  Tensor sizes: [4, 0, 18, 13]
2025-03-05 15:23:01.331363 test begin: paddle.broadcast_to(Tensor([4, 0, 18, 18],"bool"), list[4,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 18, 18],"bool"), list[4,8,18,18,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 18, 18].  Tensor sizes: [4, 0, 18, 18]
2025-03-05 15:23:01.331896 test begin: paddle.broadcast_to(Tensor([4, 0, 18, 25],"bool"), list[4,8,18,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 18, 25],"bool"), list[4,8,18,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 18, 25].  Tensor sizes: [4, 0, 18, 25]
2025-03-05 15:23:01.332418 test begin: paddle.broadcast_to(Tensor([4, 0, 18, 37],"bool"), list[4,8,18,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 18, 37],"bool"), list[4,8,18,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 18, 37].  Tensor sizes: [4, 0, 18, 37]
2025-03-05 15:23:01.332952 test begin: paddle.broadcast_to(Tensor([4, 0, 18, 61],"bool"), list[4,8,18,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 18, 61],"bool"), list[4,8,18,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 18, 61].  Tensor sizes: [4, 0, 18, 61]
2025-03-05 15:23:01.333467 test begin: paddle.broadcast_to(Tensor([4, 0, 18, 77],"bool"), list[4,8,18,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 18, 77],"bool"), list[4,8,18,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 18, 77].  Tensor sizes: [4, 0, 18, 77]
2025-03-05 15:23:01.334024 test begin: paddle.broadcast_to(Tensor([4, 0, 180, 180],"bool"), list[4,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 180, 180],"bool"), list[4,8,180,180,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 180, 180].  Tensor sizes: [4, 0, 180, 180]
2025-03-05 15:23:01.334550 test begin: paddle.broadcast_to(Tensor([4, 0, 180, 77],"bool"), list[4,8,180,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 180, 77],"bool"), list[4,8,180,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 180, 77].  Tensor sizes: [4, 0, 180, 77]
2025-03-05 15:23:01.335088 test begin: paddle.broadcast_to(Tensor([4, 0, 19, 13],"bool"), list[4,8,19,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 19, 13],"bool"), list[4,8,19,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 19, 13].  Tensor sizes: [4, 0, 19, 13]
2025-03-05 15:23:01.335614 test begin: paddle.broadcast_to(Tensor([4, 0, 19, 19],"bool"), list[4,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 19, 19],"bool"), list[4,8,19,19,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 19, 19].  Tensor sizes: [4, 0, 19, 19]
2025-03-05 15:23:01.336148 test begin: paddle.broadcast_to(Tensor([4, 0, 19, 25],"bool"), list[4,8,19,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 19, 25],"bool"), list[4,8,19,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 19, 25].  Tensor sizes: [4, 0, 19, 25]
2025-03-05 15:23:01.336675 test begin: paddle.broadcast_to(Tensor([4, 0, 19, 37],"bool"), list[4,8,19,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 19, 37],"bool"), list[4,8,19,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 19, 37].  Tensor sizes: [4, 0, 19, 37]
2025-03-05 15:23:01.337203 test begin: paddle.broadcast_to(Tensor([4, 0, 19, 61],"bool"), list[4,8,19,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 19, 61],"bool"), list[4,8,19,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 19, 61].  Tensor sizes: [4, 0, 19, 61]
2025-03-05 15:23:01.337729 test begin: paddle.broadcast_to(Tensor([4, 0, 19, 77],"bool"), list[4,8,19,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 19, 77],"bool"), list[4,8,19,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 19, 77].  Tensor sizes: [4, 0, 19, 77]
2025-03-05 15:23:01.338246 test begin: paddle.broadcast_to(Tensor([4, 0, 1],"int32"), tuple(4,7,1,), )

[torch error] paddle.broadcast_to(Tensor([4, 0, 1],"int32"), tuple(4,7,1,), ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 7, 1].  Tensor sizes: [4, 0, 1]
2025-03-05 15:23:01.338863 test begin: paddle.broadcast_to(Tensor([4, 0, 2, 13],"bool"), list[4,8,2,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 2, 13],"bool"), list[4,8,2,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 2, 13].  Tensor sizes: [4, 0, 2, 13]
2025-03-05 15:23:01.339404 test begin: paddle.broadcast_to(Tensor([4, 0, 2, 25],"bool"), list[4,8,2,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 2, 25],"bool"), list[4,8,2,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 2, 25].  Tensor sizes: [4, 0, 2, 25]
2025-03-05 15:23:01.339945 test begin: paddle.broadcast_to(Tensor([4, 0, 2, 2],"bool"), list[4,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 2, 2],"bool"), list[4,8,2,2,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 2, 2].  Tensor sizes: [4, 0, 2, 2]
2025-03-05 15:23:01.340473 test begin: paddle.broadcast_to(Tensor([4, 0, 2, 37],"bool"), list[4,8,2,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 2, 37],"bool"), list[4,8,2,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 2, 37].  Tensor sizes: [4, 0, 2, 37]
2025-03-05 15:23:01.341019 test begin: paddle.broadcast_to(Tensor([4, 0, 2, 5],"bool"), list[4,8,2,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 2, 5],"bool"), list[4,8,2,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 2, 5].  Tensor sizes: [4, 0, 2, 5]
2025-03-05 15:23:01.341538 test begin: paddle.broadcast_to(Tensor([4, 0, 2, 61],"bool"), list[4,8,2,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 2, 61],"bool"), list[4,8,2,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 2, 61].  Tensor sizes: [4, 0, 2, 61]
2025-03-05 15:23:01.342067 test begin: paddle.broadcast_to(Tensor([4, 0, 2, 77],"bool"), list[4,8,2,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 2, 77],"bool"), list[4,8,2,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 2, 77].  Tensor sizes: [4, 0, 2, 77]
2025-03-05 15:23:01.342602 test begin: paddle.broadcast_to(Tensor([4, 0, 20, 13],"bool"), list[4,8,20,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 20, 13],"bool"), list[4,8,20,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 20, 13].  Tensor sizes: [4, 0, 20, 13]
2025-03-05 15:23:01.343135 test begin: paddle.broadcast_to(Tensor([4, 0, 20, 20],"bool"), list[4,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 20, 20],"bool"), list[4,8,20,20,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 20, 20].  Tensor sizes: [4, 0, 20, 20]
2025-03-05 15:23:01.343664 test begin: paddle.broadcast_to(Tensor([4, 0, 20, 25],"bool"), list[4,8,20,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 20, 25],"bool"), list[4,8,20,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 20, 25].  Tensor sizes: [4, 0, 20, 25]
2025-03-05 15:23:01.344184 test begin: paddle.broadcast_to(Tensor([4, 0, 20, 37],"bool"), list[4,8,20,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 20, 37],"bool"), list[4,8,20,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 20, 37].  Tensor sizes: [4, 0, 20, 37]
2025-03-05 15:23:01.344784 test begin: paddle.broadcast_to(Tensor([4, 0, 20, 61],"bool"), list[4,8,20,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 20, 61],"bool"), list[4,8,20,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 20, 61].  Tensor sizes: [4, 0, 20, 61]
2025-03-05 15:23:01.345385 test begin: paddle.broadcast_to(Tensor([4, 0, 20, 77],"bool"), list[4,8,20,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 20, 77],"bool"), list[4,8,20,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 20, 77].  Tensor sizes: [4, 0, 20, 77]
2025-03-05 15:23:01.345999 test begin: paddle.broadcast_to(Tensor([4, 0, 21, 13],"bool"), list[4,8,21,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 21, 13],"bool"), list[4,8,21,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 21, 13].  Tensor sizes: [4, 0, 21, 13]
2025-03-05 15:23:01.346577 test begin: paddle.broadcast_to(Tensor([4, 0, 21, 21],"bool"), list[4,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 21, 21],"bool"), list[4,8,21,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 21, 21].  Tensor sizes: [4, 0, 21, 21]
2025-03-05 15:23:01.347168 test begin: paddle.broadcast_to(Tensor([4, 0, 21, 25],"bool"), list[4,8,21,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 21, 25],"bool"), list[4,8,21,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 21, 25].  Tensor sizes: [4, 0, 21, 25]
2025-03-05 15:23:01.347800 test begin: paddle.broadcast_to(Tensor([4, 0, 21, 37],"bool"), list[4,8,21,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 21, 37],"bool"), list[4,8,21,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 21, 37].  Tensor sizes: [4, 0, 21, 37]
2025-03-05 15:23:01.348359 test begin: paddle.broadcast_to(Tensor([4, 0, 21, 61],"bool"), list[4,8,21,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 21, 61],"bool"), list[4,8,21,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 21, 61].  Tensor sizes: [4, 0, 21, 61]
2025-03-05 15:23:01.348953 test begin: paddle.broadcast_to(Tensor([4, 0, 21, 77],"bool"), list[4,8,21,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 21, 77],"bool"), list[4,8,21,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 21, 77].  Tensor sizes: [4, 0, 21, 77]
2025-03-05 15:23:01.349522 test begin: paddle.broadcast_to(Tensor([4, 0, 22, 13],"bool"), list[4,8,22,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 22, 13],"bool"), list[4,8,22,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 22, 13].  Tensor sizes: [4, 0, 22, 13]
2025-03-05 15:23:01.350127 test begin: paddle.broadcast_to(Tensor([4, 0, 22, 22],"bool"), list[4,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 22, 22],"bool"), list[4,8,22,22,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 22, 22].  Tensor sizes: [4, 0, 22, 22]
2025-03-05 15:23:01.350695 test begin: paddle.broadcast_to(Tensor([4, 0, 22, 25],"bool"), list[4,8,22,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 22, 25],"bool"), list[4,8,22,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 22, 25].  Tensor sizes: [4, 0, 22, 25]
2025-03-05 15:23:01.351284 test begin: paddle.broadcast_to(Tensor([4, 0, 22, 37],"bool"), list[4,8,22,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 22, 37],"bool"), list[4,8,22,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 22, 37].  Tensor sizes: [4, 0, 22, 37]
2025-03-05 15:23:01.351857 test begin: paddle.broadcast_to(Tensor([4, 0, 22, 61],"bool"), list[4,8,22,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 22, 61],"bool"), list[4,8,22,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 22, 61].  Tensor sizes: [4, 0, 22, 61]
2025-03-05 15:23:01.352466 test begin: paddle.broadcast_to(Tensor([4, 0, 22, 77],"bool"), list[4,8,22,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 22, 77],"bool"), list[4,8,22,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 22, 77].  Tensor sizes: [4, 0, 22, 77]
2025-03-05 15:23:01.353010 test begin: paddle.broadcast_to(Tensor([4, 0, 23, 13],"bool"), list[4,8,23,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 23, 13],"bool"), list[4,8,23,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 23, 13].  Tensor sizes: [4, 0, 23, 13]
2025-03-05 15:23:01.353545 test begin: paddle.broadcast_to(Tensor([4, 0, 23, 23],"bool"), list[4,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 23, 23],"bool"), list[4,8,23,23,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 23, 23].  Tensor sizes: [4, 0, 23, 23]
2025-03-05 15:23:01.354089 test begin: paddle.broadcast_to(Tensor([4, 0, 23, 25],"bool"), list[4,8,23,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 23, 25],"bool"), list[4,8,23,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 23, 25].  Tensor sizes: [4, 0, 23, 25]
2025-03-05 15:23:01.354611 test begin: paddle.broadcast_to(Tensor([4, 0, 23, 37],"bool"), list[4,8,23,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 23, 37],"bool"), list[4,8,23,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 23, 37].  Tensor sizes: [4, 0, 23, 37]
2025-03-05 15:23:01.355155 test begin: paddle.broadcast_to(Tensor([4, 0, 23, 61],"bool"), list[4,8,23,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 23, 61],"bool"), list[4,8,23,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 23, 61].  Tensor sizes: [4, 0, 23, 61]
2025-03-05 15:23:01.355694 test begin: paddle.broadcast_to(Tensor([4, 0, 23, 77],"bool"), list[4,8,23,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 23, 77],"bool"), list[4,8,23,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 23, 77].  Tensor sizes: [4, 0, 23, 77]
2025-03-05 15:23:01.356217 test begin: paddle.broadcast_to(Tensor([4, 0, 24, 13],"bool"), list[4,8,24,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 24, 13],"bool"), list[4,8,24,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 24, 13].  Tensor sizes: [4, 0, 24, 13]
2025-03-05 15:23:01.356751 test begin: paddle.broadcast_to(Tensor([4, 0, 24, 24],"bool"), list[4,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 24, 24],"bool"), list[4,8,24,24,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 24, 24].  Tensor sizes: [4, 0, 24, 24]
2025-03-05 15:23:01.357261 test begin: paddle.broadcast_to(Tensor([4, 0, 24, 25],"bool"), list[4,8,24,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 24, 25],"bool"), list[4,8,24,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 24, 25].  Tensor sizes: [4, 0, 24, 25]
2025-03-05 15:23:01.357783 test begin: paddle.broadcast_to(Tensor([4, 0, 24, 37],"bool"), list[4,8,24,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 24, 37],"bool"), list[4,8,24,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 24, 37].  Tensor sizes: [4, 0, 24, 37]
2025-03-05 15:23:01.358304 test begin: paddle.broadcast_to(Tensor([4, 0, 24, 61],"bool"), list[4,8,24,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 24, 61],"bool"), list[4,8,24,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 24, 61].  Tensor sizes: [4, 0, 24, 61]
2025-03-05 15:23:01.358826 test begin: paddle.broadcast_to(Tensor([4, 0, 24, 77],"bool"), list[4,8,24,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 24, 77],"bool"), list[4,8,24,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 24, 77].  Tensor sizes: [4, 0, 24, 77]
2025-03-05 15:23:01.359342 test begin: paddle.broadcast_to(Tensor([4, 0, 25, 13],"bool"), list[4,8,25,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 25, 13],"bool"), list[4,8,25,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 25, 13].  Tensor sizes: [4, 0, 25, 13]
2025-03-05 15:23:01.359881 test begin: paddle.broadcast_to(Tensor([4, 0, 25, 25],"bool"), list[4,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 25, 25],"bool"), list[4,8,25,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 25, 25].  Tensor sizes: [4, 0, 25, 25]
2025-03-05 15:23:01.360442 test begin: paddle.broadcast_to(Tensor([4, 0, 25, 37],"bool"), list[4,8,25,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 25, 37],"bool"), list[4,8,25,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 25, 37].  Tensor sizes: [4, 0, 25, 37]
2025-03-05 15:23:01.360991 test begin: paddle.broadcast_to(Tensor([4, 0, 25, 61],"bool"), list[4,8,25,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 25, 61],"bool"), list[4,8,25,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 25, 61].  Tensor sizes: [4, 0, 25, 61]
2025-03-05 15:23:01.361514 test begin: paddle.broadcast_to(Tensor([4, 0, 25, 77],"bool"), list[4,8,25,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 25, 77],"bool"), list[4,8,25,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 25, 77].  Tensor sizes: [4, 0, 25, 77]
2025-03-05 15:23:01.362064 test begin: paddle.broadcast_to(Tensor([4, 0, 26, 13],"bool"), list[4,8,26,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 26, 13],"bool"), list[4,8,26,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 26, 13].  Tensor sizes: [4, 0, 26, 13]
2025-03-05 15:23:01.362573 test begin: paddle.broadcast_to(Tensor([4, 0, 26, 26],"bool"), list[4,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 26, 26],"bool"), list[4,8,26,26,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 26, 26].  Tensor sizes: [4, 0, 26, 26]
2025-03-05 15:23:01.363130 test begin: paddle.broadcast_to(Tensor([4, 0, 26, 37],"bool"), list[4,8,26,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 26, 37],"bool"), list[4,8,26,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 26, 37].  Tensor sizes: [4, 0, 26, 37]
2025-03-05 15:23:01.363711 test begin: paddle.broadcast_to(Tensor([4, 0, 26, 61],"bool"), list[4,8,26,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 26, 61],"bool"), list[4,8,26,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 26, 61].  Tensor sizes: [4, 0, 26, 61]
2025-03-05 15:23:01.364289 test begin: paddle.broadcast_to(Tensor([4, 0, 26, 77],"bool"), list[4,8,26,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 26, 77],"bool"), list[4,8,26,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 26, 77].  Tensor sizes: [4, 0, 26, 77]
2025-03-05 15:23:01.364874 test begin: paddle.broadcast_to(Tensor([4, 0, 27, 13],"bool"), list[4,8,27,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 27, 13],"bool"), list[4,8,27,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 27, 13].  Tensor sizes: [4, 0, 27, 13]
2025-03-05 15:23:01.365452 test begin: paddle.broadcast_to(Tensor([4, 0, 27, 27],"bool"), list[4,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 27, 27],"bool"), list[4,8,27,27,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 27, 27].  Tensor sizes: [4, 0, 27, 27]
2025-03-05 15:23:01.366028 test begin: paddle.broadcast_to(Tensor([4, 0, 27, 37],"bool"), list[4,8,27,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 27, 37],"bool"), list[4,8,27,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 27, 37].  Tensor sizes: [4, 0, 27, 37]
2025-03-05 15:23:01.366597 test begin: paddle.broadcast_to(Tensor([4, 0, 27, 61],"bool"), list[4,8,27,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 27, 61],"bool"), list[4,8,27,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 27, 61].  Tensor sizes: [4, 0, 27, 61]
2025-03-05 15:23:01.367159 test begin: paddle.broadcast_to(Tensor([4, 0, 27, 77],"bool"), list[4,8,27,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 27, 77],"bool"), list[4,8,27,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 27, 77].  Tensor sizes: [4, 0, 27, 77]
2025-03-05 15:23:01.367710 test begin: paddle.broadcast_to(Tensor([4, 0, 28, 13],"bool"), list[4,8,28,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 28, 13],"bool"), list[4,8,28,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 28, 13].  Tensor sizes: [4, 0, 28, 13]
2025-03-05 15:23:01.368345 test begin: paddle.broadcast_to(Tensor([4, 0, 28, 28],"bool"), list[4,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 28, 28],"bool"), list[4,8,28,28,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 28, 28].  Tensor sizes: [4, 0, 28, 28]
2025-03-05 15:23:01.369420 test begin: paddle.broadcast_to(Tensor([4, 0, 28, 37],"bool"), list[4,8,28,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 28, 37],"bool"), list[4,8,28,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 28, 37].  Tensor sizes: [4, 0, 28, 37]
2025-03-05 15:23:01.370085 test begin: paddle.broadcast_to(Tensor([4, 0, 28, 61],"bool"), list[4,8,28,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 28, 61],"bool"), list[4,8,28,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 28, 61].  Tensor sizes: [4, 0, 28, 61]
2025-03-05 15:23:01.370709 test begin: paddle.broadcast_to(Tensor([4, 0, 28, 77],"bool"), list[4,8,28,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 28, 77],"bool"), list[4,8,28,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 28, 77].  Tensor sizes: [4, 0, 28, 77]
2025-03-05 15:23:01.371324 test begin: paddle.broadcast_to(Tensor([4, 0, 29, 29],"bool"), list[4,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 29, 29],"bool"), list[4,8,29,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 29, 29].  Tensor sizes: [4, 0, 29, 29]
2025-03-05 15:23:01.371949 test begin: paddle.broadcast_to(Tensor([4, 0, 29, 37],"bool"), list[4,8,29,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 29, 37],"bool"), list[4,8,29,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 29, 37].  Tensor sizes: [4, 0, 29, 37]
2025-03-05 15:23:01.372822 test begin: paddle.broadcast_to(Tensor([4, 0, 29, 61],"bool"), list[4,8,29,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 29, 61],"bool"), list[4,8,29,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 29, 61].  Tensor sizes: [4, 0, 29, 61]
2025-03-05 15:23:01.373385 test begin: paddle.broadcast_to(Tensor([4, 0, 29, 77],"bool"), list[4,8,29,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 29, 77],"bool"), list[4,8,29,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 29, 77].  Tensor sizes: [4, 0, 29, 77]
2025-03-05 15:23:01.373930 test begin: paddle.broadcast_to(Tensor([4, 0, 2],"float32"), tuple(4,3,2,), )

[torch error] paddle.broadcast_to(Tensor([4, 0, 2],"float32"), tuple(4,3,2,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 3, 2].  Tensor sizes: [4, 0, 2]
2025-03-05 15:23:01.374447 test begin: paddle.broadcast_to(Tensor([4, 0, 3, 13],"bool"), list[4,8,3,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 3, 13],"bool"), list[4,8,3,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 3, 13].  Tensor sizes: [4, 0, 3, 13]
2025-03-05 15:23:01.375103 test begin: paddle.broadcast_to(Tensor([4, 0, 3, 25],"bool"), list[4,8,3,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 3, 25],"bool"), list[4,8,3,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 3, 25].  Tensor sizes: [4, 0, 3, 25]
2025-03-05 15:23:01.375706 test begin: paddle.broadcast_to(Tensor([4, 0, 3, 37],"bool"), list[4,8,3,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 3, 37],"bool"), list[4,8,3,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 3, 37].  Tensor sizes: [4, 0, 3, 37]
2025-03-05 15:23:01.376334 test begin: paddle.broadcast_to(Tensor([4, 0, 3, 3],"bool"), list[4,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 3, 3],"bool"), list[4,8,3,3,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 3, 3].  Tensor sizes: [4, 0, 3, 3]
2025-03-05 15:23:01.376881 test begin: paddle.broadcast_to(Tensor([4, 0, 3, 5],"bool"), list[4,8,3,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 3, 5],"bool"), list[4,8,3,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 3, 5].  Tensor sizes: [4, 0, 3, 5]
2025-03-05 15:23:01.377518 test begin: paddle.broadcast_to(Tensor([4, 0, 3, 61],"bool"), list[4,8,3,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 3, 61],"bool"), list[4,8,3,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 3, 61].  Tensor sizes: [4, 0, 3, 61]
2025-03-05 15:23:01.378142 test begin: paddle.broadcast_to(Tensor([4, 0, 3, 77],"bool"), list[4,8,3,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 3, 77],"bool"), list[4,8,3,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 3, 77].  Tensor sizes: [4, 0, 3, 77]
2025-03-05 15:23:01.378689 test begin: paddle.broadcast_to(Tensor([4, 0, 30, 30],"bool"), list[4,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 30, 30],"bool"), list[4,8,30,30,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 30, 30].  Tensor sizes: [4, 0, 30, 30]
2025-03-05 15:23:01.379341 test begin: paddle.broadcast_to(Tensor([4, 0, 30, 37],"bool"), list[4,8,30,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 30, 37],"bool"), list[4,8,30,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 30, 37].  Tensor sizes: [4, 0, 30, 37]
2025-03-05 15:23:01.380029 test begin: paddle.broadcast_to(Tensor([4, 0, 30, 61],"bool"), list[4,8,30,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 30, 61],"bool"), list[4,8,30,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 30, 61].  Tensor sizes: [4, 0, 30, 61]
2025-03-05 15:23:01.380701 test begin: paddle.broadcast_to(Tensor([4, 0, 30, 77],"bool"), list[4,8,30,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 30, 77],"bool"), list[4,8,30,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 30, 77].  Tensor sizes: [4, 0, 30, 77]
2025-03-05 15:23:01.381339 test begin: paddle.broadcast_to(Tensor([4, 0, 31, 31],"bool"), list[4,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 31, 31],"bool"), list[4,8,31,31,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 31, 31].  Tensor sizes: [4, 0, 31, 31]
2025-03-05 15:23:01.381952 test begin: paddle.broadcast_to(Tensor([4, 0, 31, 37],"bool"), list[4,8,31,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 31, 37],"bool"), list[4,8,31,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 31, 37].  Tensor sizes: [4, 0, 31, 37]
2025-03-05 15:23:01.394505 test begin: paddle.broadcast_to(Tensor([4, 0, 31, 61],"bool"), list[4,8,31,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 31, 61],"bool"), list[4,8,31,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 31, 61].  Tensor sizes: [4, 0, 31, 61]
2025-03-05 15:23:01.395961 test begin: paddle.broadcast_to(Tensor([4, 0, 31, 77],"bool"), list[4,8,31,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 31, 77],"bool"), list[4,8,31,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 31, 77].  Tensor sizes: [4, 0, 31, 77]
2025-03-05 15:23:01.397061 test begin: paddle.broadcast_to(Tensor([4, 0, 32, 32],"bool"), list[4,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 32, 32],"bool"), list[4,8,32,32,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 32, 32].  Tensor sizes: [4, 0, 32, 32]
2025-03-05 15:23:01.398381 test begin: paddle.broadcast_to(Tensor([4, 0, 32, 37],"bool"), list[4,8,32,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 32, 37],"bool"), list[4,8,32,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 32, 37].  Tensor sizes: [4, 0, 32, 37]
2025-03-05 15:23:01.399116 test begin: paddle.broadcast_to(Tensor([4, 0, 32, 61],"bool"), list[4,8,32,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 32, 61],"bool"), list[4,8,32,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 32, 61].  Tensor sizes: [4, 0, 32, 61]
2025-03-05 15:23:01.402054 test begin: paddle.broadcast_to(Tensor([4, 0, 32, 77],"bool"), list[4,8,32,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 32, 77],"bool"), list[4,8,32,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 32, 77].  Tensor sizes: [4, 0, 32, 77]
2025-03-05 15:23:01.403705 test begin: paddle.broadcast_to(Tensor([4, 0, 33, 33],"bool"), list[4,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 33, 33],"bool"), list[4,8,33,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 33, 33].  Tensor sizes: [4, 0, 33, 33]
2025-03-05 15:23:01.404691 test begin: paddle.broadcast_to(Tensor([4, 0, 33, 37],"bool"), list[4,8,33,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 33, 37],"bool"), list[4,8,33,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 33, 37].  Tensor sizes: [4, 0, 33, 37]
2025-03-05 15:23:01.405694 test begin: paddle.broadcast_to(Tensor([4, 0, 33, 61],"bool"), list[4,8,33,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 33, 61],"bool"), list[4,8,33,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 33, 61].  Tensor sizes: [4, 0, 33, 61]
2025-03-05 15:23:01.406751 test begin: paddle.broadcast_to(Tensor([4, 0, 33, 77],"bool"), list[4,8,33,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 33, 77],"bool"), list[4,8,33,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 33, 77].  Tensor sizes: [4, 0, 33, 77]
2025-03-05 15:23:01.407949 test begin: paddle.broadcast_to(Tensor([4, 0, 34, 34],"bool"), list[4,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 34, 34],"bool"), list[4,8,34,34,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 34, 34].  Tensor sizes: [4, 0, 34, 34]
2025-03-05 15:23:01.409075 test begin: paddle.broadcast_to(Tensor([4, 0, 34, 37],"bool"), list[4,8,34,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 34, 37],"bool"), list[4,8,34,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 34, 37].  Tensor sizes: [4, 0, 34, 37]
2025-03-05 15:23:01.409639 test begin: paddle.broadcast_to(Tensor([4, 0, 34, 61],"bool"), list[4,8,34,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 34, 61],"bool"), list[4,8,34,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 34, 61].  Tensor sizes: [4, 0, 34, 61]
2025-03-05 15:23:01.410197 test begin: paddle.broadcast_to(Tensor([4, 0, 34, 77],"bool"), list[4,8,34,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 34, 77],"bool"), list[4,8,34,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 34, 77].  Tensor sizes: [4, 0, 34, 77]
2025-03-05 15:23:01.410739 test begin: paddle.broadcast_to(Tensor([4, 0, 35, 35],"bool"), list[4,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 35, 35],"bool"), list[4,8,35,35,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 35, 35].  Tensor sizes: [4, 0, 35, 35]
2025-03-05 15:23:01.411259 test begin: paddle.broadcast_to(Tensor([4, 0, 35, 37],"bool"), list[4,8,35,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 35, 37],"bool"), list[4,8,35,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 35, 37].  Tensor sizes: [4, 0, 35, 37]
2025-03-05 15:23:01.411853 test begin: paddle.broadcast_to(Tensor([4, 0, 35, 61],"bool"), list[4,8,35,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 35, 61],"bool"), list[4,8,35,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 35, 61].  Tensor sizes: [4, 0, 35, 61]
2025-03-05 15:23:01.412379 test begin: paddle.broadcast_to(Tensor([4, 0, 35, 77],"bool"), list[4,8,35,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 35, 77],"bool"), list[4,8,35,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 35, 77].  Tensor sizes: [4, 0, 35, 77]
2025-03-05 15:23:01.412897 test begin: paddle.broadcast_to(Tensor([4, 0, 36, 36],"bool"), list[4,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 36, 36],"bool"), list[4,8,36,36,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 36, 36].  Tensor sizes: [4, 0, 36, 36]
2025-03-05 15:23:01.413414 test begin: paddle.broadcast_to(Tensor([4, 0, 36, 37],"bool"), list[4,8,36,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 36, 37],"bool"), list[4,8,36,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 36, 37].  Tensor sizes: [4, 0, 36, 37]
2025-03-05 15:23:01.413943 test begin: paddle.broadcast_to(Tensor([4, 0, 36, 61],"bool"), list[4,8,36,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 36, 61],"bool"), list[4,8,36,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 36, 61].  Tensor sizes: [4, 0, 36, 61]
2025-03-05 15:23:01.414448 test begin: paddle.broadcast_to(Tensor([4, 0, 36, 77],"bool"), list[4,8,36,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 36, 77],"bool"), list[4,8,36,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 36, 77].  Tensor sizes: [4, 0, 36, 77]
2025-03-05 15:23:01.414962 test begin: paddle.broadcast_to(Tensor([4, 0, 37, 37],"bool"), list[4,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 37, 37],"bool"), list[4,8,37,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 37, 37].  Tensor sizes: [4, 0, 37, 37]
2025-03-05 15:23:01.415500 test begin: paddle.broadcast_to(Tensor([4, 0, 37, 61],"bool"), list[4,8,37,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 37, 61],"bool"), list[4,8,37,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 37, 61].  Tensor sizes: [4, 0, 37, 61]
2025-03-05 15:23:01.416033 test begin: paddle.broadcast_to(Tensor([4, 0, 37, 77],"bool"), list[4,8,37,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 37, 77],"bool"), list[4,8,37,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 37, 77].  Tensor sizes: [4, 0, 37, 77]
2025-03-05 15:23:01.416549 test begin: paddle.broadcast_to(Tensor([4, 0, 38, 37],"bool"), list[4,8,38,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 38, 37],"bool"), list[4,8,38,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 38, 37].  Tensor sizes: [4, 0, 38, 37]
2025-03-05 15:23:01.417070 test begin: paddle.broadcast_to(Tensor([4, 0, 38, 38],"bool"), list[4,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 38, 38],"bool"), list[4,8,38,38,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 38, 38].  Tensor sizes: [4, 0, 38, 38]
2025-03-05 15:23:01.417662 test begin: paddle.broadcast_to(Tensor([4, 0, 38, 61],"bool"), list[4,8,38,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 38, 61],"bool"), list[4,8,38,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 38, 61].  Tensor sizes: [4, 0, 38, 61]
2025-03-05 15:23:01.418214 test begin: paddle.broadcast_to(Tensor([4, 0, 38, 77],"bool"), list[4,8,38,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 38, 77],"bool"), list[4,8,38,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 38, 77].  Tensor sizes: [4, 0, 38, 77]
2025-03-05 15:23:01.418771 test begin: paddle.broadcast_to(Tensor([4, 0, 39, 37],"bool"), list[4,8,39,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 39, 37],"bool"), list[4,8,39,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 39, 37].  Tensor sizes: [4, 0, 39, 37]
2025-03-05 15:23:01.419293 test begin: paddle.broadcast_to(Tensor([4, 0, 39, 39],"bool"), list[4,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 39, 39],"bool"), list[4,8,39,39,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 39, 39].  Tensor sizes: [4, 0, 39, 39]
2025-03-05 15:23:01.419827 test begin: paddle.broadcast_to(Tensor([4, 0, 39, 61],"bool"), list[4,8,39,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 39, 61],"bool"), list[4,8,39,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 39, 61].  Tensor sizes: [4, 0, 39, 61]
2025-03-05 15:23:01.420355 test begin: paddle.broadcast_to(Tensor([4, 0, 39, 77],"bool"), list[4,8,39,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 39, 77],"bool"), list[4,8,39,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 39, 77].  Tensor sizes: [4, 0, 39, 77]
2025-03-05 15:23:01.420878 test begin: paddle.broadcast_to(Tensor([4, 0, 4, 13],"bool"), list[4,8,4,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 4, 13],"bool"), list[4,8,4,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 4, 13].  Tensor sizes: [4, 0, 4, 13]
2025-03-05 15:23:01.422107 test begin: paddle.broadcast_to(Tensor([4, 0, 4, 25],"bool"), list[4,8,4,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 4, 25],"bool"), list[4,8,4,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 4, 25].  Tensor sizes: [4, 0, 4, 25]
2025-03-05 15:23:01.422942 test begin: paddle.broadcast_to(Tensor([4, 0, 4, 2],"float64"), tuple(4,4,4,2,), )

[torch error] paddle.broadcast_to(Tensor([4, 0, 4, 2],"float64"), tuple(4,4,4,2,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 4, 4, 2].  Tensor sizes: [4, 0, 4, 2]
2025-03-05 15:23:01.423651 test begin: paddle.broadcast_to(Tensor([4, 0, 4, 37],"bool"), list[4,8,4,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 4, 37],"bool"), list[4,8,4,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 4, 37].  Tensor sizes: [4, 0, 4, 37]
2025-03-05 15:23:01.424327 test begin: paddle.broadcast_to(Tensor([4, 0, 4, 4],"bool"), list[4,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 4, 4],"bool"), list[4,8,4,4,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 4, 4].  Tensor sizes: [4, 0, 4, 4]
2025-03-05 15:23:01.425008 test begin: paddle.broadcast_to(Tensor([4, 0, 4, 5],"bool"), list[4,8,4,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 4, 5],"bool"), list[4,8,4,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 4, 5].  Tensor sizes: [4, 0, 4, 5]
2025-03-05 15:23:01.425699 test begin: paddle.broadcast_to(Tensor([4, 0, 4, 61],"bool"), list[4,8,4,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 4, 61],"bool"), list[4,8,4,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 4, 61].  Tensor sizes: [4, 0, 4, 61]
2025-03-05 15:23:01.426382 test begin: paddle.broadcast_to(Tensor([4, 0, 4, 77],"bool"), list[4,8,4,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 4, 77],"bool"), list[4,8,4,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 4, 77].  Tensor sizes: [4, 0, 4, 77]
2025-03-05 15:23:01.427054 test begin: paddle.broadcast_to(Tensor([4, 0, 40, 37],"bool"), list[4,8,40,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 40, 37],"bool"), list[4,8,40,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 40, 37].  Tensor sizes: [4, 0, 40, 37]
2025-03-05 15:23:01.427717 test begin: paddle.broadcast_to(Tensor([4, 0, 40, 40],"bool"), list[4,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 40, 40],"bool"), list[4,8,40,40,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 40, 40].  Tensor sizes: [4, 0, 40, 40]
2025-03-05 15:23:01.428412 test begin: paddle.broadcast_to(Tensor([4, 0, 40, 61],"bool"), list[4,8,40,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 40, 61],"bool"), list[4,8,40,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 40, 61].  Tensor sizes: [4, 0, 40, 61]
2025-03-05 15:23:01.429076 test begin: paddle.broadcast_to(Tensor([4, 0, 40, 77],"bool"), list[4,8,40,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 40, 77],"bool"), list[4,8,40,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 40, 77].  Tensor sizes: [4, 0, 40, 77]
2025-03-05 15:23:01.429758 test begin: paddle.broadcast_to(Tensor([4, 0, 41, 37],"bool"), list[4,8,41,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 41, 37],"bool"), list[4,8,41,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 41, 37].  Tensor sizes: [4, 0, 41, 37]
2025-03-05 15:23:01.430387 test begin: paddle.broadcast_to(Tensor([4, 0, 41, 41],"bool"), list[4,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 41, 41],"bool"), list[4,8,41,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 41, 41].  Tensor sizes: [4, 0, 41, 41]
2025-03-05 15:23:01.431054 test begin: paddle.broadcast_to(Tensor([4, 0, 41, 61],"bool"), list[4,8,41,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 41, 61],"bool"), list[4,8,41,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 41, 61].  Tensor sizes: [4, 0, 41, 61]
2025-03-05 15:23:01.431760 test begin: paddle.broadcast_to(Tensor([4, 0, 41, 77],"bool"), list[4,8,41,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 41, 77],"bool"), list[4,8,41,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 41, 77].  Tensor sizes: [4, 0, 41, 77]
2025-03-05 15:23:01.432338 test begin: paddle.broadcast_to(Tensor([4, 0, 42, 37],"bool"), list[4,8,42,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 42, 37],"bool"), list[4,8,42,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 42, 37].  Tensor sizes: [4, 0, 42, 37]
2025-03-05 15:23:01.432882 test begin: paddle.broadcast_to(Tensor([4, 0, 42, 42],"bool"), list[4,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 42, 42],"bool"), list[4,8,42,42,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 42, 42].  Tensor sizes: [4, 0, 42, 42]
2025-03-05 15:23:01.434077 test begin: paddle.broadcast_to(Tensor([4, 0, 42, 61],"bool"), list[4,8,42,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 42, 61],"bool"), list[4,8,42,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 42, 61].  Tensor sizes: [4, 0, 42, 61]
2025-03-05 15:23:01.434742 test begin: paddle.broadcast_to(Tensor([4, 0, 42, 77],"bool"), list[4,8,42,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 42, 77],"bool"), list[4,8,42,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 42, 77].  Tensor sizes: [4, 0, 42, 77]
2025-03-05 15:23:01.435459 test begin: paddle.broadcast_to(Tensor([4, 0, 43, 37],"bool"), list[4,8,43,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 43, 37],"bool"), list[4,8,43,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 43, 37].  Tensor sizes: [4, 0, 43, 37]
2025-03-05 15:23:01.436428 test begin: paddle.broadcast_to(Tensor([4, 0, 43, 43],"bool"), list[4,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 43, 43],"bool"), list[4,8,43,43,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 43, 43].  Tensor sizes: [4, 0, 43, 43]
2025-03-05 15:23:01.437731 test begin: paddle.broadcast_to(Tensor([4, 0, 43, 61],"bool"), list[4,8,43,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 43, 61],"bool"), list[4,8,43,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 43, 61].  Tensor sizes: [4, 0, 43, 61]
2025-03-05 15:23:01.439081 test begin: paddle.broadcast_to(Tensor([4, 0, 43, 77],"bool"), list[4,8,43,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 43, 77],"bool"), list[4,8,43,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 43, 77].  Tensor sizes: [4, 0, 43, 77]
2025-03-05 15:23:01.439725 test begin: paddle.broadcast_to(Tensor([4, 0, 44, 37],"bool"), list[4,8,44,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 44, 37],"bool"), list[4,8,44,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 44, 37].  Tensor sizes: [4, 0, 44, 37]
2025-03-05 15:23:01.440377 test begin: paddle.broadcast_to(Tensor([4, 0, 44, 44],"bool"), list[4,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 44, 44],"bool"), list[4,8,44,44,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 44, 44].  Tensor sizes: [4, 0, 44, 44]
2025-03-05 15:23:01.441061 test begin: paddle.broadcast_to(Tensor([4, 0, 44, 61],"bool"), list[4,8,44,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 44, 61],"bool"), list[4,8,44,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 44, 61].  Tensor sizes: [4, 0, 44, 61]
2025-03-05 15:23:01.441727 test begin: paddle.broadcast_to(Tensor([4, 0, 44, 77],"bool"), list[4,8,44,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 44, 77],"bool"), list[4,8,44,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 44, 77].  Tensor sizes: [4, 0, 44, 77]
2025-03-05 15:23:01.442354 test begin: paddle.broadcast_to(Tensor([4, 0, 45, 37],"bool"), list[4,8,45,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 45, 37],"bool"), list[4,8,45,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 45, 37].  Tensor sizes: [4, 0, 45, 37]
2025-03-05 15:23:01.442939 test begin: paddle.broadcast_to(Tensor([4, 0, 45, 45],"bool"), list[4,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 45, 45],"bool"), list[4,8,45,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 45, 45].  Tensor sizes: [4, 0, 45, 45]
2025-03-05 15:23:01.443599 test begin: paddle.broadcast_to(Tensor([4, 0, 45, 61],"bool"), list[4,8,45,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 45, 61],"bool"), list[4,8,45,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 45, 61].  Tensor sizes: [4, 0, 45, 61]
2025-03-05 15:23:01.444227 test begin: paddle.broadcast_to(Tensor([4, 0, 45, 77],"bool"), list[4,8,45,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 45, 77],"bool"), list[4,8,45,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 45, 77].  Tensor sizes: [4, 0, 45, 77]
2025-03-05 15:23:01.444850 test begin: paddle.broadcast_to(Tensor([4, 0, 46, 37],"bool"), list[4,8,46,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 46, 37],"bool"), list[4,8,46,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 46, 37].  Tensor sizes: [4, 0, 46, 37]
2025-03-05 15:23:01.445471 test begin: paddle.broadcast_to(Tensor([4, 0, 46, 46],"bool"), list[4,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 46, 46],"bool"), list[4,8,46,46,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 46, 46].  Tensor sizes: [4, 0, 46, 46]
2025-03-05 15:23:01.446614 test begin: paddle.broadcast_to(Tensor([4, 0, 46, 61],"bool"), list[4,8,46,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 46, 61],"bool"), list[4,8,46,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 46, 61].  Tensor sizes: [4, 0, 46, 61]
2025-03-05 15:23:01.447421 test begin: paddle.broadcast_to(Tensor([4, 0, 46, 77],"bool"), list[4,8,46,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 46, 77],"bool"), list[4,8,46,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 46, 77].  Tensor sizes: [4, 0, 46, 77]
2025-03-05 15:23:01.448035 test begin: paddle.broadcast_to(Tensor([4, 0, 47, 37],"bool"), list[4,8,47,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 47, 37],"bool"), list[4,8,47,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 47, 37].  Tensor sizes: [4, 0, 47, 37]
2025-03-05 15:23:01.448580 test begin: paddle.broadcast_to(Tensor([4, 0, 47, 47],"bool"), list[4,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 47, 47],"bool"), list[4,8,47,47,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 47, 47].  Tensor sizes: [4, 0, 47, 47]
2025-03-05 15:23:01.449161 test begin: paddle.broadcast_to(Tensor([4, 0, 47, 61],"bool"), list[4,8,47,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 47, 61],"bool"), list[4,8,47,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 47, 61].  Tensor sizes: [4, 0, 47, 61]
2025-03-05 15:23:01.449693 test begin: paddle.broadcast_to(Tensor([4, 0, 47, 77],"bool"), list[4,8,47,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 47, 77],"bool"), list[4,8,47,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 47, 77].  Tensor sizes: [4, 0, 47, 77]
2025-03-05 15:23:01.450228 test begin: paddle.broadcast_to(Tensor([4, 0, 48, 37],"bool"), list[4,8,48,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 48, 37],"bool"), list[4,8,48,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 48, 37].  Tensor sizes: [4, 0, 48, 37]
2025-03-05 15:23:01.450754 test begin: paddle.broadcast_to(Tensor([4, 0, 48, 48],"bool"), list[4,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 48, 48],"bool"), list[4,8,48,48,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 48, 48].  Tensor sizes: [4, 0, 48, 48]
2025-03-05 15:23:01.451265 test begin: paddle.broadcast_to(Tensor([4, 0, 48, 61],"bool"), list[4,8,48,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 48, 61],"bool"), list[4,8,48,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 48, 61].  Tensor sizes: [4, 0, 48, 61]
2025-03-05 15:23:01.451795 test begin: paddle.broadcast_to(Tensor([4, 0, 48, 77],"bool"), list[4,8,48,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 48, 77],"bool"), list[4,8,48,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 48, 77].  Tensor sizes: [4, 0, 48, 77]
2025-03-05 15:23:01.452363 test begin: paddle.broadcast_to(Tensor([4, 0, 49, 37],"bool"), list[4,8,49,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 49, 37],"bool"), list[4,8,49,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 49, 37].  Tensor sizes: [4, 0, 49, 37]
2025-03-05 15:23:01.452921 test begin: paddle.broadcast_to(Tensor([4, 0, 49, 49],"bool"), list[4,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 49, 49],"bool"), list[4,8,49,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 49, 49].  Tensor sizes: [4, 0, 49, 49]
2025-03-05 15:23:01.453446 test begin: paddle.broadcast_to(Tensor([4, 0, 49, 61],"bool"), list[4,8,49,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 49, 61],"bool"), list[4,8,49,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 49, 61].  Tensor sizes: [4, 0, 49, 61]
2025-03-05 15:23:01.453978 test begin: paddle.broadcast_to(Tensor([4, 0, 49, 77],"bool"), list[4,8,49,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 49, 77],"bool"), list[4,8,49,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 49, 77].  Tensor sizes: [4, 0, 49, 77]
2025-03-05 15:23:01.454504 test begin: paddle.broadcast_to(Tensor([4, 0, 4],"float64"), tuple(4,4,4,), )

[torch error] paddle.broadcast_to(Tensor([4, 0, 4],"float64"), tuple(4,4,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 4, 4].  Tensor sizes: [4, 0, 4]
2025-03-05 15:23:01.455409 test begin: paddle.broadcast_to(Tensor([4, 0, 5, 13],"bool"), list[4,8,5,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 5, 13],"bool"), list[4,8,5,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 5, 13].  Tensor sizes: [4, 0, 5, 13]
2025-03-05 15:23:01.456112 test begin: paddle.broadcast_to(Tensor([4, 0, 5, 25],"bool"), list[4,8,5,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 5, 25],"bool"), list[4,8,5,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 5, 25].  Tensor sizes: [4, 0, 5, 25]
2025-03-05 15:23:01.456761 test begin: paddle.broadcast_to(Tensor([4, 0, 5, 37],"bool"), list[4,8,5,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 5, 37],"bool"), list[4,8,5,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 5, 37].  Tensor sizes: [4, 0, 5, 37]
2025-03-05 15:23:01.457381 test begin: paddle.broadcast_to(Tensor([4, 0, 5, 5],"bool"), list[4,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 5, 5],"bool"), list[4,8,5,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 5, 5].  Tensor sizes: [4, 0, 5, 5]
2025-03-05 15:23:01.458000 test begin: paddle.broadcast_to(Tensor([4, 0, 5, 61],"bool"), list[4,8,5,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 5, 61],"bool"), list[4,8,5,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 5, 61].  Tensor sizes: [4, 0, 5, 61]
2025-03-05 15:23:01.458628 test begin: paddle.broadcast_to(Tensor([4, 0, 5, 77],"bool"), list[4,8,5,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 5, 77],"bool"), list[4,8,5,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 5, 77].  Tensor sizes: [4, 0, 5, 77]
2025-03-05 15:23:01.459234 test begin: paddle.broadcast_to(Tensor([4, 0, 50, 37],"bool"), list[4,8,50,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 50, 37],"bool"), list[4,8,50,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 50, 37].  Tensor sizes: [4, 0, 50, 37]
2025-03-05 15:23:01.459907 test begin: paddle.broadcast_to(Tensor([4, 0, 50, 50],"bool"), list[4,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 50, 50],"bool"), list[4,8,50,50,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 50, 50].  Tensor sizes: [4, 0, 50, 50]
2025-03-05 15:23:01.460527 test begin: paddle.broadcast_to(Tensor([4, 0, 50, 61],"bool"), list[4,8,50,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 50, 61],"bool"), list[4,8,50,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 50, 61].  Tensor sizes: [4, 0, 50, 61]
2025-03-05 15:23:01.461148 test begin: paddle.broadcast_to(Tensor([4, 0, 50, 77],"bool"), list[4,8,50,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 50, 77],"bool"), list[4,8,50,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 50, 77].  Tensor sizes: [4, 0, 50, 77]
2025-03-05 15:23:01.461790 test begin: paddle.broadcast_to(Tensor([4, 0, 51, 37],"bool"), list[4,8,51,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 51, 37],"bool"), list[4,8,51,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 51, 37].  Tensor sizes: [4, 0, 51, 37]
2025-03-05 15:23:01.462391 test begin: paddle.broadcast_to(Tensor([4, 0, 51, 51],"bool"), list[4,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 51, 51],"bool"), list[4,8,51,51,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 51, 51].  Tensor sizes: [4, 0, 51, 51]
2025-03-05 15:23:01.463001 test begin: paddle.broadcast_to(Tensor([4, 0, 51, 61],"bool"), list[4,8,51,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 51, 61],"bool"), list[4,8,51,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 51, 61].  Tensor sizes: [4, 0, 51, 61]
2025-03-05 15:23:01.463609 test begin: paddle.broadcast_to(Tensor([4, 0, 51, 77],"bool"), list[4,8,51,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 51, 77],"bool"), list[4,8,51,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 51, 77].  Tensor sizes: [4, 0, 51, 77]
2025-03-05 15:23:01.464206 test begin: paddle.broadcast_to(Tensor([4, 0, 52, 37],"bool"), list[4,8,52,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 52, 37],"bool"), list[4,8,52,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 52, 37].  Tensor sizes: [4, 0, 52, 37]
2025-03-05 15:23:01.464805 test begin: paddle.broadcast_to(Tensor([4, 0, 52, 52],"bool"), list[4,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 52, 52],"bool"), list[4,8,52,52,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 52, 52].  Tensor sizes: [4, 0, 52, 52]
2025-03-05 15:23:01.465396 test begin: paddle.broadcast_to(Tensor([4, 0, 52, 61],"bool"), list[4,8,52,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 52, 61],"bool"), list[4,8,52,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 52, 61].  Tensor sizes: [4, 0, 52, 61]
2025-03-05 15:23:01.466093 test begin: paddle.broadcast_to(Tensor([4, 0, 52, 77],"bool"), list[4,8,52,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 52, 77],"bool"), list[4,8,52,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 52, 77].  Tensor sizes: [4, 0, 52, 77]
2025-03-05 15:23:01.466746 test begin: paddle.broadcast_to(Tensor([4, 0, 53, 37],"bool"), list[4,8,53,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 53, 37],"bool"), list[4,8,53,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 53, 37].  Tensor sizes: [4, 0, 53, 37]
2025-03-05 15:23:01.467289 test begin: paddle.broadcast_to(Tensor([4, 0, 53, 53],"bool"), list[4,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 53, 53],"bool"), list[4,8,53,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 53, 53].  Tensor sizes: [4, 0, 53, 53]
2025-03-05 15:23:01.467855 test begin: paddle.broadcast_to(Tensor([4, 0, 53, 61],"bool"), list[4,8,53,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 53, 61],"bool"), list[4,8,53,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 53, 61].  Tensor sizes: [4, 0, 53, 61]
2025-03-05 15:23:01.468426 test begin: paddle.broadcast_to(Tensor([4, 0, 53, 77],"bool"), list[4,8,53,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 53, 77],"bool"), list[4,8,53,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 53, 77].  Tensor sizes: [4, 0, 53, 77]
2025-03-05 15:23:01.468962 test begin: paddle.broadcast_to(Tensor([4, 0, 54, 37],"bool"), list[4,8,54,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 54, 37],"bool"), list[4,8,54,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 54, 37].  Tensor sizes: [4, 0, 54, 37]
2025-03-05 15:23:01.469469 test begin: paddle.broadcast_to(Tensor([4, 0, 54, 54],"bool"), list[4,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 54, 54],"bool"), list[4,8,54,54,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 54, 54].  Tensor sizes: [4, 0, 54, 54]
2025-03-05 15:23:01.469987 test begin: paddle.broadcast_to(Tensor([4, 0, 54, 61],"bool"), list[4,8,54,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 54, 61],"bool"), list[4,8,54,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 54, 61].  Tensor sizes: [4, 0, 54, 61]
2025-03-05 15:23:01.470542 test begin: paddle.broadcast_to(Tensor([4, 0, 54, 77],"bool"), list[4,8,54,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 54, 77],"bool"), list[4,8,54,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 54, 77].  Tensor sizes: [4, 0, 54, 77]
2025-03-05 15:23:01.471075 test begin: paddle.broadcast_to(Tensor([4, 0, 55, 37],"bool"), list[4,8,55,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 55, 37],"bool"), list[4,8,55,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 55, 37].  Tensor sizes: [4, 0, 55, 37]
2025-03-05 15:23:01.471592 test begin: paddle.broadcast_to(Tensor([4, 0, 55, 55],"bool"), list[4,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 55, 55],"bool"), list[4,8,55,55,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 55, 55].  Tensor sizes: [4, 0, 55, 55]
2025-03-05 15:23:01.472108 test begin: paddle.broadcast_to(Tensor([4, 0, 55, 61],"bool"), list[4,8,55,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 55, 61],"bool"), list[4,8,55,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 55, 61].  Tensor sizes: [4, 0, 55, 61]
2025-03-05 15:23:01.472617 test begin: paddle.broadcast_to(Tensor([4, 0, 55, 77],"bool"), list[4,8,55,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 55, 77],"bool"), list[4,8,55,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 55, 77].  Tensor sizes: [4, 0, 55, 77]
2025-03-05 15:23:01.473123 test begin: paddle.broadcast_to(Tensor([4, 0, 56, 37],"bool"), list[4,8,56,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 56, 37],"bool"), list[4,8,56,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 56, 37].  Tensor sizes: [4, 0, 56, 37]
2025-03-05 15:23:01.473655 test begin: paddle.broadcast_to(Tensor([4, 0, 56, 56],"bool"), list[4,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 56, 56],"bool"), list[4,8,56,56,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 56, 56].  Tensor sizes: [4, 0, 56, 56]
2025-03-05 15:23:01.474223 test begin: paddle.broadcast_to(Tensor([4, 0, 56, 61],"bool"), list[4,8,56,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 56, 61],"bool"), list[4,8,56,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 56, 61].  Tensor sizes: [4, 0, 56, 61]
2025-03-05 15:23:01.474774 test begin: paddle.broadcast_to(Tensor([4, 0, 56, 77],"bool"), list[4,8,56,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 56, 77],"bool"), list[4,8,56,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 56, 77].  Tensor sizes: [4, 0, 56, 77]
2025-03-05 15:23:01.475296 test begin: paddle.broadcast_to(Tensor([4, 0, 57, 37],"bool"), list[4,8,57,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 57, 37],"bool"), list[4,8,57,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 57, 37].  Tensor sizes: [4, 0, 57, 37]
2025-03-05 15:23:01.475810 test begin: paddle.broadcast_to(Tensor([4, 0, 57, 57],"bool"), list[4,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 57, 57],"bool"), list[4,8,57,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 57, 57].  Tensor sizes: [4, 0, 57, 57]
2025-03-05 15:23:01.476323 test begin: paddle.broadcast_to(Tensor([4, 0, 57, 61],"bool"), list[4,8,57,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 57, 61],"bool"), list[4,8,57,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 57, 61].  Tensor sizes: [4, 0, 57, 61]
2025-03-05 15:23:01.476838 test begin: paddle.broadcast_to(Tensor([4, 0, 57, 77],"bool"), list[4,8,57,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 57, 77],"bool"), list[4,8,57,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 57, 77].  Tensor sizes: [4, 0, 57, 77]
2025-03-05 15:23:01.477340 test begin: paddle.broadcast_to(Tensor([4, 0, 58, 37],"bool"), list[4,8,58,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 58, 37],"bool"), list[4,8,58,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 58, 37].  Tensor sizes: [4, 0, 58, 37]
2025-03-05 15:23:01.477849 test begin: paddle.broadcast_to(Tensor([4, 0, 58, 58],"bool"), list[4,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 58, 58],"bool"), list[4,8,58,58,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 58, 58].  Tensor sizes: [4, 0, 58, 58]
2025-03-05 15:23:01.478349 test begin: paddle.broadcast_to(Tensor([4, 0, 58, 61],"bool"), list[4,8,58,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 58, 61],"bool"), list[4,8,58,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 58, 61].  Tensor sizes: [4, 0, 58, 61]
2025-03-05 15:23:01.478877 test begin: paddle.broadcast_to(Tensor([4, 0, 58, 77],"bool"), list[4,8,58,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 58, 77],"bool"), list[4,8,58,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 58, 77].  Tensor sizes: [4, 0, 58, 77]
2025-03-05 15:23:01.479404 test begin: paddle.broadcast_to(Tensor([4, 0, 59, 37],"bool"), list[4,8,59,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 59, 37],"bool"), list[4,8,59,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 59, 37].  Tensor sizes: [4, 0, 59, 37]
2025-03-05 15:23:01.479932 test begin: paddle.broadcast_to(Tensor([4, 0, 59, 59],"bool"), list[4,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 59, 59],"bool"), list[4,8,59,59,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 59, 59].  Tensor sizes: [4, 0, 59, 59]
2025-03-05 15:23:01.480481 test begin: paddle.broadcast_to(Tensor([4, 0, 59, 61],"bool"), list[4,8,59,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 59, 61],"bool"), list[4,8,59,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 59, 61].  Tensor sizes: [4, 0, 59, 61]
2025-03-05 15:23:01.481078 test begin: paddle.broadcast_to(Tensor([4, 0, 59, 77],"bool"), list[4,8,59,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 59, 77],"bool"), list[4,8,59,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 59, 77].  Tensor sizes: [4, 0, 59, 77]
2025-03-05 15:23:01.481596 test begin: paddle.broadcast_to(Tensor([4, 0, 6, 13],"bool"), list[4,8,6,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 6, 13],"bool"), list[4,8,6,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 6, 13].  Tensor sizes: [4, 0, 6, 13]
2025-03-05 15:23:01.482108 test begin: paddle.broadcast_to(Tensor([4, 0, 6, 25],"bool"), list[4,8,6,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 6, 25],"bool"), list[4,8,6,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 6, 25].  Tensor sizes: [4, 0, 6, 25]
2025-03-05 15:23:01.482633 test begin: paddle.broadcast_to(Tensor([4, 0, 6, 37],"bool"), list[4,8,6,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 6, 37],"bool"), list[4,8,6,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 6, 37].  Tensor sizes: [4, 0, 6, 37]
2025-03-05 15:23:01.483139 test begin: paddle.broadcast_to(Tensor([4, 0, 6, 5],"bool"), list[4,8,6,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 6, 5],"bool"), list[4,8,6,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 6, 5].  Tensor sizes: [4, 0, 6, 5]
2025-03-05 15:23:01.483668 test begin: paddle.broadcast_to(Tensor([4, 0, 6, 61],"bool"), list[4,8,6,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 6, 61],"bool"), list[4,8,6,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 6, 61].  Tensor sizes: [4, 0, 6, 61]
2025-03-05 15:23:01.484176 test begin: paddle.broadcast_to(Tensor([4, 0, 6, 6],"bool"), list[4,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 6, 6],"bool"), list[4,8,6,6,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 6, 6].  Tensor sizes: [4, 0, 6, 6]
2025-03-05 15:23:01.484779 test begin: paddle.broadcast_to(Tensor([4, 0, 6, 77],"bool"), list[4,8,6,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 6, 77],"bool"), list[4,8,6,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 6, 77].  Tensor sizes: [4, 0, 6, 77]
2025-03-05 15:23:01.485548 test begin: paddle.broadcast_to(Tensor([4, 0, 60, 37],"bool"), list[4,8,60,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 60, 37],"bool"), list[4,8,60,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 60, 37].  Tensor sizes: [4, 0, 60, 37]
2025-03-05 15:23:01.486142 test begin: paddle.broadcast_to(Tensor([4, 0, 60, 60],"bool"), list[4,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 60, 60],"bool"), list[4,8,60,60,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 60, 60].  Tensor sizes: [4, 0, 60, 60]
2025-03-05 15:23:01.486668 test begin: paddle.broadcast_to(Tensor([4, 0, 60, 61],"bool"), list[4,8,60,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 60, 61],"bool"), list[4,8,60,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 60, 61].  Tensor sizes: [4, 0, 60, 61]
2025-03-05 15:23:01.487196 test begin: paddle.broadcast_to(Tensor([4, 0, 60, 77],"bool"), list[4,8,60,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 60, 77],"bool"), list[4,8,60,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 60, 77].  Tensor sizes: [4, 0, 60, 77]
2025-03-05 15:23:01.487728 test begin: paddle.broadcast_to(Tensor([4, 0, 61, 37],"bool"), list[4,8,61,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 61, 37],"bool"), list[4,8,61,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 61, 37].  Tensor sizes: [4, 0, 61, 37]
2025-03-05 15:23:01.488238 test begin: paddle.broadcast_to(Tensor([4, 0, 61, 61],"bool"), list[4,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 61, 61],"bool"), list[4,8,61,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 61, 61].  Tensor sizes: [4, 0, 61, 61]
2025-03-05 15:23:01.488753 test begin: paddle.broadcast_to(Tensor([4, 0, 61, 77],"bool"), list[4,8,61,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 61, 77],"bool"), list[4,8,61,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 61, 77].  Tensor sizes: [4, 0, 61, 77]
2025-03-05 15:23:01.489283 test begin: paddle.broadcast_to(Tensor([4, 0, 62, 37],"bool"), list[4,8,62,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 62, 37],"bool"), list[4,8,62,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 62, 37].  Tensor sizes: [4, 0, 62, 37]
2025-03-05 15:23:01.489810 test begin: paddle.broadcast_to(Tensor([4, 0, 62, 61],"bool"), list[4,8,62,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 62, 61],"bool"), list[4,8,62,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 62, 61].  Tensor sizes: [4, 0, 62, 61]
2025-03-05 15:23:01.490333 test begin: paddle.broadcast_to(Tensor([4, 0, 62, 62],"bool"), list[4,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 62, 62],"bool"), list[4,8,62,62,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 62, 62].  Tensor sizes: [4, 0, 62, 62]
2025-03-05 15:23:01.490855 test begin: paddle.broadcast_to(Tensor([4, 0, 62, 77],"bool"), list[4,8,62,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 62, 77],"bool"), list[4,8,62,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 62, 77].  Tensor sizes: [4, 0, 62, 77]
2025-03-05 15:23:01.491368 test begin: paddle.broadcast_to(Tensor([4, 0, 63, 37],"bool"), list[4,8,63,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 63, 37],"bool"), list[4,8,63,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 63, 37].  Tensor sizes: [4, 0, 63, 37]
2025-03-05 15:23:01.491886 test begin: paddle.broadcast_to(Tensor([4, 0, 63, 61],"bool"), list[4,8,63,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 63, 61],"bool"), list[4,8,63,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 63, 61].  Tensor sizes: [4, 0, 63, 61]
2025-03-05 15:23:01.492392 test begin: paddle.broadcast_to(Tensor([4, 0, 63, 63],"bool"), list[4,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 63, 63],"bool"), list[4,8,63,63,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 63, 63].  Tensor sizes: [4, 0, 63, 63]
2025-03-05 15:23:01.492956 test begin: paddle.broadcast_to(Tensor([4, 0, 63, 77],"bool"), list[4,8,63,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 63, 77],"bool"), list[4,8,63,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 63, 77].  Tensor sizes: [4, 0, 63, 77]
2025-03-05 15:23:01.493478 test begin: paddle.broadcast_to(Tensor([4, 0, 64, 37],"bool"), list[4,8,64,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 64, 37],"bool"), list[4,8,64,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 64, 37].  Tensor sizes: [4, 0, 64, 37]
2025-03-05 15:23:01.494021 test begin: paddle.broadcast_to(Tensor([4, 0, 64, 61],"bool"), list[4,8,64,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 64, 61],"bool"), list[4,8,64,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 64, 61].  Tensor sizes: [4, 0, 64, 61]
2025-03-05 15:23:01.494540 test begin: paddle.broadcast_to(Tensor([4, 0, 64, 64],"bool"), list[4,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 64, 64],"bool"), list[4,8,64,64,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 64, 64].  Tensor sizes: [4, 0, 64, 64]
2025-03-05 15:23:01.495059 test begin: paddle.broadcast_to(Tensor([4, 0, 64, 77],"bool"), list[4,8,64,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 64, 77],"bool"), list[4,8,64,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 64, 77].  Tensor sizes: [4, 0, 64, 77]
2025-03-05 15:23:01.495578 test begin: paddle.broadcast_to(Tensor([4, 0, 65, 37],"bool"), list[4,8,65,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 65, 37],"bool"), list[4,8,65,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 65, 37].  Tensor sizes: [4, 0, 65, 37]
2025-03-05 15:23:01.496107 test begin: paddle.broadcast_to(Tensor([4, 0, 65, 61],"bool"), list[4,8,65,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 65, 61],"bool"), list[4,8,65,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 65, 61].  Tensor sizes: [4, 0, 65, 61]
2025-03-05 15:23:01.496678 test begin: paddle.broadcast_to(Tensor([4, 0, 65, 65],"bool"), list[4,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 65, 65],"bool"), list[4,8,65,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 65, 65].  Tensor sizes: [4, 0, 65, 65]
2025-03-05 15:23:01.497213 test begin: paddle.broadcast_to(Tensor([4, 0, 65, 77],"bool"), list[4,8,65,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 65, 77],"bool"), list[4,8,65,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 65, 77].  Tensor sizes: [4, 0, 65, 77]
2025-03-05 15:23:01.497740 test begin: paddle.broadcast_to(Tensor([4, 0, 66, 37],"bool"), list[4,8,66,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 66, 37],"bool"), list[4,8,66,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 66, 37].  Tensor sizes: [4, 0, 66, 37]
2025-03-05 15:23:01.498269 test begin: paddle.broadcast_to(Tensor([4, 0, 66, 61],"bool"), list[4,8,66,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 66, 61],"bool"), list[4,8,66,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 66, 61].  Tensor sizes: [4, 0, 66, 61]
2025-03-05 15:23:01.498784 test begin: paddle.broadcast_to(Tensor([4, 0, 66, 66],"bool"), list[4,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 66, 66],"bool"), list[4,8,66,66,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 66, 66].  Tensor sizes: [4, 0, 66, 66]
2025-03-05 15:23:01.499824 test begin: paddle.broadcast_to(Tensor([4, 0, 66, 77],"bool"), list[4,8,66,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 66, 77],"bool"), list[4,8,66,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 66, 77].  Tensor sizes: [4, 0, 66, 77]
2025-03-05 15:23:01.500495 test begin: paddle.broadcast_to(Tensor([4, 0, 67, 37],"bool"), list[4,8,67,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 67, 37],"bool"), list[4,8,67,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 67, 37].  Tensor sizes: [4, 0, 67, 37]
2025-03-05 15:23:01.501178 test begin: paddle.broadcast_to(Tensor([4, 0, 67, 61],"bool"), list[4,8,67,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 67, 61],"bool"), list[4,8,67,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 67, 61].  Tensor sizes: [4, 0, 67, 61]
2025-03-05 15:23:01.502075 test begin: paddle.broadcast_to(Tensor([4, 0, 67, 67],"bool"), list[4,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 67, 67],"bool"), list[4,8,67,67,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 67, 67].  Tensor sizes: [4, 0, 67, 67]
2025-03-05 15:23:01.502746 test begin: paddle.broadcast_to(Tensor([4, 0, 67, 77],"bool"), list[4,8,67,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 67, 77],"bool"), list[4,8,67,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 67, 77].  Tensor sizes: [4, 0, 67, 77]
2025-03-05 15:23:01.503399 test begin: paddle.broadcast_to(Tensor([4, 0, 68, 37],"bool"), list[4,8,68,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 68, 37],"bool"), list[4,8,68,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 68, 37].  Tensor sizes: [4, 0, 68, 37]
2025-03-05 15:23:01.503992 test begin: paddle.broadcast_to(Tensor([4, 0, 68, 61],"bool"), list[4,8,68,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 68, 61],"bool"), list[4,8,68,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 68, 61].  Tensor sizes: [4, 0, 68, 61]
2025-03-05 15:23:01.504549 test begin: paddle.broadcast_to(Tensor([4, 0, 68, 68],"bool"), list[4,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 68, 68],"bool"), list[4,8,68,68,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 68, 68].  Tensor sizes: [4, 0, 68, 68]
2025-03-05 15:23:01.505088 test begin: paddle.broadcast_to(Tensor([4, 0, 68, 77],"bool"), list[4,8,68,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 68, 77],"bool"), list[4,8,68,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 68, 77].  Tensor sizes: [4, 0, 68, 77]
2025-03-05 15:23:01.505704 test begin: paddle.broadcast_to(Tensor([4, 0, 69, 37],"bool"), list[4,8,69,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 69, 37],"bool"), list[4,8,69,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 69, 37].  Tensor sizes: [4, 0, 69, 37]
2025-03-05 15:23:01.506252 test begin: paddle.broadcast_to(Tensor([4, 0, 69, 61],"bool"), list[4,8,69,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 69, 61],"bool"), list[4,8,69,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 69, 61].  Tensor sizes: [4, 0, 69, 61]
2025-03-05 15:23:01.506786 test begin: paddle.broadcast_to(Tensor([4, 0, 69, 69],"bool"), list[4,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 69, 69],"bool"), list[4,8,69,69,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 69, 69].  Tensor sizes: [4, 0, 69, 69]
2025-03-05 15:23:01.507321 test begin: paddle.broadcast_to(Tensor([4, 0, 69, 77],"bool"), list[4,8,69,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 69, 77],"bool"), list[4,8,69,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 69, 77].  Tensor sizes: [4, 0, 69, 77]
2025-03-05 15:23:01.507874 test begin: paddle.broadcast_to(Tensor([4, 0, 6],"float64"), tuple(4,7,6,), )

[torch error] paddle.broadcast_to(Tensor([4, 0, 6],"float64"), tuple(4,7,6,), ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 7, 6].  Tensor sizes: [4, 0, 6]
2025-03-05 15:23:01.508402 test begin: paddle.broadcast_to(Tensor([4, 0, 6],"int32"), tuple(4,1,6,), )

[torch error] paddle.broadcast_to(Tensor([4, 0, 6],"int32"), tuple(4,1,6,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 1, 6].  Tensor sizes: [4, 0, 6]
2025-03-05 15:23:01.509007 test begin: paddle.broadcast_to(Tensor([4, 0, 7, 13],"bool"), list[4,8,7,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 7, 13],"bool"), list[4,8,7,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 7, 13].  Tensor sizes: [4, 0, 7, 13]
2025-03-05 15:23:01.509538 test begin: paddle.broadcast_to(Tensor([4, 0, 7, 25],"bool"), list[4,8,7,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 7, 25],"bool"), list[4,8,7,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 7, 25].  Tensor sizes: [4, 0, 7, 25]
2025-03-05 15:23:01.510179 test begin: paddle.broadcast_to(Tensor([4, 0, 7, 37],"bool"), list[4,8,7,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 7, 37],"bool"), list[4,8,7,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 7, 37].  Tensor sizes: [4, 0, 7, 37]
2025-03-05 15:23:01.510758 test begin: paddle.broadcast_to(Tensor([4, 0, 7, 5],"bool"), list[4,8,7,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 7, 5],"bool"), list[4,8,7,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 7, 5].  Tensor sizes: [4, 0, 7, 5]
2025-03-05 15:23:01.511279 test begin: paddle.broadcast_to(Tensor([4, 0, 7, 61],"bool"), list[4,8,7,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 7, 61],"bool"), list[4,8,7,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 7, 61].  Tensor sizes: [4, 0, 7, 61]
2025-03-05 15:23:01.512318 test begin: paddle.broadcast_to(Tensor([4, 0, 7, 77],"bool"), list[4,8,7,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 7, 77],"bool"), list[4,8,7,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 7, 77].  Tensor sizes: [4, 0, 7, 77]
2025-03-05 15:23:01.512997 test begin: paddle.broadcast_to(Tensor([4, 0, 7, 7],"bool"), list[4,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 7, 7],"bool"), list[4,8,7,7,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 7, 7].  Tensor sizes: [4, 0, 7, 7]
2025-03-05 15:23:01.513631 test begin: paddle.broadcast_to(Tensor([4, 0, 70, 37],"bool"), list[4,8,70,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 70, 37],"bool"), list[4,8,70,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 70, 37].  Tensor sizes: [4, 0, 70, 37]
2025-03-05 15:23:01.514254 test begin: paddle.broadcast_to(Tensor([4, 0, 70, 61],"bool"), list[4,8,70,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 70, 61],"bool"), list[4,8,70,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 70, 61].  Tensor sizes: [4, 0, 70, 61]
2025-03-05 15:23:01.514885 test begin: paddle.broadcast_to(Tensor([4, 0, 70, 70],"bool"), list[4,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 70, 70],"bool"), list[4,8,70,70,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 70, 70].  Tensor sizes: [4, 0, 70, 70]
2025-03-05 15:23:01.515521 test begin: paddle.broadcast_to(Tensor([4, 0, 70, 77],"bool"), list[4,8,70,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 70, 77],"bool"), list[4,8,70,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 70, 77].  Tensor sizes: [4, 0, 70, 77]
2025-03-05 15:23:01.516152 test begin: paddle.broadcast_to(Tensor([4, 0, 71, 37],"bool"), list[4,8,71,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 71, 37],"bool"), list[4,8,71,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 71, 37].  Tensor sizes: [4, 0, 71, 37]
2025-03-05 15:23:01.516892 test begin: paddle.broadcast_to(Tensor([4, 0, 71, 61],"bool"), list[4,8,71,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 71, 61],"bool"), list[4,8,71,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 71, 61].  Tensor sizes: [4, 0, 71, 61]
2025-03-05 15:23:01.517517 test begin: paddle.broadcast_to(Tensor([4, 0, 71, 71],"bool"), list[4,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 71, 71],"bool"), list[4,8,71,71,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 71, 71].  Tensor sizes: [4, 0, 71, 71]
2025-03-05 15:23:01.518072 test begin: paddle.broadcast_to(Tensor([4, 0, 71, 77],"bool"), list[4,8,71,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 71, 77],"bool"), list[4,8,71,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 71, 77].  Tensor sizes: [4, 0, 71, 77]
2025-03-05 15:23:01.518595 test begin: paddle.broadcast_to(Tensor([4, 0, 72, 37],"bool"), list[4,8,72,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 72, 37],"bool"), list[4,8,72,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 72, 37].  Tensor sizes: [4, 0, 72, 37]
2025-03-05 15:23:01.519110 test begin: paddle.broadcast_to(Tensor([4, 0, 72, 61],"bool"), list[4,8,72,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 72, 61],"bool"), list[4,8,72,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 72, 61].  Tensor sizes: [4, 0, 72, 61]
2025-03-05 15:23:01.519638 test begin: paddle.broadcast_to(Tensor([4, 0, 72, 72],"bool"), list[4,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 72, 72],"bool"), list[4,8,72,72,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 72, 72].  Tensor sizes: [4, 0, 72, 72]
2025-03-05 15:23:01.520156 test begin: paddle.broadcast_to(Tensor([4, 0, 72, 77],"bool"), list[4,8,72,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 72, 77],"bool"), list[4,8,72,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 72, 77].  Tensor sizes: [4, 0, 72, 77]
2025-03-05 15:23:01.520681 test begin: paddle.broadcast_to(Tensor([4, 0, 73, 37],"bool"), list[4,8,73,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 73, 37],"bool"), list[4,8,73,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 73, 37].  Tensor sizes: [4, 0, 73, 37]
2025-03-05 15:23:01.521236 test begin: paddle.broadcast_to(Tensor([4, 0, 73, 61],"bool"), list[4,8,73,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 73, 61],"bool"), list[4,8,73,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 73, 61].  Tensor sizes: [4, 0, 73, 61]
2025-03-05 15:23:01.521769 test begin: paddle.broadcast_to(Tensor([4, 0, 73, 73],"bool"), list[4,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 73, 73],"bool"), list[4,8,73,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 73, 73].  Tensor sizes: [4, 0, 73, 73]
2025-03-05 15:23:01.522298 test begin: paddle.broadcast_to(Tensor([4, 0, 73, 77],"bool"), list[4,8,73,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 73, 77],"bool"), list[4,8,73,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 73, 77].  Tensor sizes: [4, 0, 73, 77]
2025-03-05 15:23:01.522824 test begin: paddle.broadcast_to(Tensor([4, 0, 74, 37],"bool"), list[4,8,74,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 74, 37],"bool"), list[4,8,74,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 74, 37].  Tensor sizes: [4, 0, 74, 37]
2025-03-05 15:23:01.523356 test begin: paddle.broadcast_to(Tensor([4, 0, 74, 61],"bool"), list[4,8,74,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 74, 61],"bool"), list[4,8,74,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 74, 61].  Tensor sizes: [4, 0, 74, 61]
2025-03-05 15:23:01.523982 test begin: paddle.broadcast_to(Tensor([4, 0, 74, 74],"bool"), list[4,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 74, 74],"bool"), list[4,8,74,74,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 74, 74].  Tensor sizes: [4, 0, 74, 74]
2025-03-05 15:23:01.524517 test begin: paddle.broadcast_to(Tensor([4, 0, 74, 77],"bool"), list[4,8,74,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 74, 77],"bool"), list[4,8,74,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 74, 77].  Tensor sizes: [4, 0, 74, 77]
2025-03-05 15:23:01.525265 test begin: paddle.broadcast_to(Tensor([4, 0, 75, 37],"bool"), list[4,8,75,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 75, 37],"bool"), list[4,8,75,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 75, 37].  Tensor sizes: [4, 0, 75, 37]
2025-03-05 15:23:01.525877 test begin: paddle.broadcast_to(Tensor([4, 0, 75, 61],"bool"), list[4,8,75,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 75, 61],"bool"), list[4,8,75,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 75, 61].  Tensor sizes: [4, 0, 75, 61]
2025-03-05 15:23:01.526672 test begin: paddle.broadcast_to(Tensor([4, 0, 75, 75],"bool"), list[4,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 75, 75],"bool"), list[4,8,75,75,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 75, 75].  Tensor sizes: [4, 0, 75, 75]
2025-03-05 15:23:01.527334 test begin: paddle.broadcast_to(Tensor([4, 0, 75, 77],"bool"), list[4,8,75,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 75, 77],"bool"), list[4,8,75,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 75, 77].  Tensor sizes: [4, 0, 75, 77]
2025-03-05 15:23:01.528029 test begin: paddle.broadcast_to(Tensor([4, 0, 76, 37],"bool"), list[4,8,76,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 76, 37],"bool"), list[4,8,76,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 76, 37].  Tensor sizes: [4, 0, 76, 37]
2025-03-05 15:23:01.528668 test begin: paddle.broadcast_to(Tensor([4, 0, 76, 61],"bool"), list[4,8,76,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 76, 61],"bool"), list[4,8,76,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 76, 61].  Tensor sizes: [4, 0, 76, 61]
2025-03-05 15:23:01.529337 test begin: paddle.broadcast_to(Tensor([4, 0, 76, 76],"bool"), list[4,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 76, 76],"bool"), list[4,8,76,76,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 76, 76].  Tensor sizes: [4, 0, 76, 76]
2025-03-05 15:23:01.529955 test begin: paddle.broadcast_to(Tensor([4, 0, 76, 77],"bool"), list[4,8,76,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 76, 77],"bool"), list[4,8,76,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 76, 77].  Tensor sizes: [4, 0, 76, 77]
2025-03-05 15:23:01.530490 test begin: paddle.broadcast_to(Tensor([4, 0, 77, 37],"bool"), list[4,8,77,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 77, 37],"bool"), list[4,8,77,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 77, 37].  Tensor sizes: [4, 0, 77, 37]
2025-03-05 15:23:01.531024 test begin: paddle.broadcast_to(Tensor([4, 0, 77, 61],"bool"), list[4,8,77,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 77, 61],"bool"), list[4,8,77,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 77, 61].  Tensor sizes: [4, 0, 77, 61]
2025-03-05 15:23:01.531532 test begin: paddle.broadcast_to(Tensor([4, 0, 77, 77],"bool"), list[4,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 77, 77],"bool"), list[4,8,77,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 77, 77].  Tensor sizes: [4, 0, 77, 77]
2025-03-05 15:23:01.532057 test begin: paddle.broadcast_to(Tensor([4, 0, 78, 37],"bool"), list[4,8,78,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 78, 37],"bool"), list[4,8,78,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 78, 37].  Tensor sizes: [4, 0, 78, 37]
2025-03-05 15:23:01.532578 test begin: paddle.broadcast_to(Tensor([4, 0, 78, 61],"bool"), list[4,8,78,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 78, 61],"bool"), list[4,8,78,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 78, 61].  Tensor sizes: [4, 0, 78, 61]
2025-03-05 15:23:01.533129 test begin: paddle.broadcast_to(Tensor([4, 0, 78, 77],"bool"), list[4,8,78,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 78, 77],"bool"), list[4,8,78,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 78, 77].  Tensor sizes: [4, 0, 78, 77]
2025-03-05 15:23:01.533659 test begin: paddle.broadcast_to(Tensor([4, 0, 78, 78],"bool"), list[4,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 78, 78],"bool"), list[4,8,78,78,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 78, 78].  Tensor sizes: [4, 0, 78, 78]
2025-03-05 15:23:01.534181 test begin: paddle.broadcast_to(Tensor([4, 0, 79, 37],"bool"), list[4,8,79,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 79, 37],"bool"), list[4,8,79,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 79, 37].  Tensor sizes: [4, 0, 79, 37]
2025-03-05 15:23:01.534704 test begin: paddle.broadcast_to(Tensor([4, 0, 79, 61],"bool"), list[4,8,79,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 79, 61],"bool"), list[4,8,79,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 79, 61].  Tensor sizes: [4, 0, 79, 61]
2025-03-05 15:23:01.535227 test begin: paddle.broadcast_to(Tensor([4, 0, 79, 77],"bool"), list[4,8,79,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 79, 77],"bool"), list[4,8,79,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 79, 77].  Tensor sizes: [4, 0, 79, 77]
2025-03-05 15:23:01.535750 test begin: paddle.broadcast_to(Tensor([4, 0, 79, 79],"bool"), list[4,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 79, 79],"bool"), list[4,8,79,79,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 79, 79].  Tensor sizes: [4, 0, 79, 79]
2025-03-05 15:23:01.536268 test begin: paddle.broadcast_to(Tensor([4, 0, 8, 13],"bool"), list[4,8,8,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 8, 13],"bool"), list[4,8,8,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 8, 13].  Tensor sizes: [4, 0, 8, 13]
2025-03-05 15:23:01.536785 test begin: paddle.broadcast_to(Tensor([4, 0, 8, 25],"bool"), list[4,8,8,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 8, 25],"bool"), list[4,8,8,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 8, 25].  Tensor sizes: [4, 0, 8, 25]
2025-03-05 15:23:01.537301 test begin: paddle.broadcast_to(Tensor([4, 0, 8, 37],"bool"), list[4,8,8,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 8, 37],"bool"), list[4,8,8,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 8, 37].  Tensor sizes: [4, 0, 8, 37]
2025-03-05 15:23:01.537823 test begin: paddle.broadcast_to(Tensor([4, 0, 8, 5],"bool"), list[4,8,8,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 8, 5],"bool"), list[4,8,8,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 8, 5].  Tensor sizes: [4, 0, 8, 5]
2025-03-05 15:23:01.538332 test begin: paddle.broadcast_to(Tensor([4, 0, 8, 61],"bool"), list[4,8,8,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 8, 61],"bool"), list[4,8,8,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 8, 61].  Tensor sizes: [4, 0, 8, 61]
2025-03-05 15:23:01.538989 test begin: paddle.broadcast_to(Tensor([4, 0, 8, 77],"bool"), list[4,8,8,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 8, 77],"bool"), list[4,8,8,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 8, 77].  Tensor sizes: [4, 0, 8, 77]
2025-03-05 15:23:01.540032 test begin: paddle.broadcast_to(Tensor([4, 0, 8, 8],"bool"), list[4,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 8, 8],"bool"), list[4,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 8, 8].  Tensor sizes: [4, 0, 8, 8]
2025-03-05 15:23:01.540720 test begin: paddle.broadcast_to(Tensor([4, 0, 80, 37],"bool"), list[4,8,80,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 80, 37],"bool"), list[4,8,80,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 80, 37].  Tensor sizes: [4, 0, 80, 37]
2025-03-05 15:23:01.541333 test begin: paddle.broadcast_to(Tensor([4, 0, 80, 61],"bool"), list[4,8,80,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 80, 61],"bool"), list[4,8,80,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 80, 61].  Tensor sizes: [4, 0, 80, 61]
2025-03-05 15:23:01.542049 test begin: paddle.broadcast_to(Tensor([4, 0, 80, 77],"bool"), list[4,8,80,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 80, 77],"bool"), list[4,8,80,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 80, 77].  Tensor sizes: [4, 0, 80, 77]
2025-03-05 15:23:01.542697 test begin: paddle.broadcast_to(Tensor([4, 0, 80, 80],"bool"), list[4,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 80, 80],"bool"), list[4,8,80,80,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 80, 80].  Tensor sizes: [4, 0, 80, 80]
2025-03-05 15:23:01.543495 test begin: paddle.broadcast_to(Tensor([4, 0, 81, 37],"bool"), list[4,8,81,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 81, 37],"bool"), list[4,8,81,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 81, 37].  Tensor sizes: [4, 0, 81, 37]
2025-03-05 15:23:01.544216 test begin: paddle.broadcast_to(Tensor([4, 0, 81, 61],"bool"), list[4,8,81,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 81, 61],"bool"), list[4,8,81,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 81, 61].  Tensor sizes: [4, 0, 81, 61]
2025-03-05 15:23:01.544947 test begin: paddle.broadcast_to(Tensor([4, 0, 81, 77],"bool"), list[4,8,81,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 81, 77],"bool"), list[4,8,81,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 81, 77].  Tensor sizes: [4, 0, 81, 77]
2025-03-05 15:23:01.545604 test begin: paddle.broadcast_to(Tensor([4, 0, 81, 81],"bool"), list[4,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 81, 81],"bool"), list[4,8,81,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 81, 81].  Tensor sizes: [4, 0, 81, 81]
2025-03-05 15:23:01.546160 test begin: paddle.broadcast_to(Tensor([4, 0, 82, 37],"bool"), list[4,8,82,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 82, 37],"bool"), list[4,8,82,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 82, 37].  Tensor sizes: [4, 0, 82, 37]
2025-03-05 15:23:01.546758 test begin: paddle.broadcast_to(Tensor([4, 0, 82, 61],"bool"), list[4,8,82,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 82, 61],"bool"), list[4,8,82,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 82, 61].  Tensor sizes: [4, 0, 82, 61]
2025-03-05 15:23:01.547369 test begin: paddle.broadcast_to(Tensor([4, 0, 82, 77],"bool"), list[4,8,82,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 82, 77],"bool"), list[4,8,82,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 82, 77].  Tensor sizes: [4, 0, 82, 77]
2025-03-05 15:23:01.547922 test begin: paddle.broadcast_to(Tensor([4, 0, 82, 82],"bool"), list[4,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 82, 82],"bool"), list[4,8,82,82,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 82, 82].  Tensor sizes: [4, 0, 82, 82]
2025-03-05 15:23:01.548473 test begin: paddle.broadcast_to(Tensor([4, 0, 83, 37],"bool"), list[4,8,83,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 83, 37],"bool"), list[4,8,83,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 83, 37].  Tensor sizes: [4, 0, 83, 37]
2025-03-05 15:23:01.549183 test begin: paddle.broadcast_to(Tensor([4, 0, 83, 61],"bool"), list[4,8,83,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 83, 61],"bool"), list[4,8,83,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 83, 61].  Tensor sizes: [4, 0, 83, 61]
2025-03-05 15:23:01.549829 test begin: paddle.broadcast_to(Tensor([4, 0, 83, 77],"bool"), list[4,8,83,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 83, 77],"bool"), list[4,8,83,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 83, 77].  Tensor sizes: [4, 0, 83, 77]
2025-03-05 15:23:01.550447 test begin: paddle.broadcast_to(Tensor([4, 0, 83, 83],"bool"), list[4,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 83, 83],"bool"), list[4,8,83,83,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 83, 83].  Tensor sizes: [4, 0, 83, 83]
2025-03-05 15:23:01.551173 test begin: paddle.broadcast_to(Tensor([4, 0, 84, 61],"bool"), list[4,8,84,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 84, 61],"bool"), list[4,8,84,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 84, 61].  Tensor sizes: [4, 0, 84, 61]
2025-03-05 15:23:01.551827 test begin: paddle.broadcast_to(Tensor([4, 0, 84, 77],"bool"), list[4,8,84,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 84, 77],"bool"), list[4,8,84,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 84, 77].  Tensor sizes: [4, 0, 84, 77]
2025-03-05 15:23:01.552450 test begin: paddle.broadcast_to(Tensor([4, 0, 84, 84],"bool"), list[4,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 84, 84],"bool"), list[4,8,84,84,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 84, 84].  Tensor sizes: [4, 0, 84, 84]
2025-03-05 15:23:01.553073 test begin: paddle.broadcast_to(Tensor([4, 0, 85, 61],"bool"), list[4,8,85,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 85, 61],"bool"), list[4,8,85,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 85, 61].  Tensor sizes: [4, 0, 85, 61]
2025-03-05 15:23:01.553795 test begin: paddle.broadcast_to(Tensor([4, 0, 85, 77],"bool"), list[4,8,85,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 85, 77],"bool"), list[4,8,85,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 85, 77].  Tensor sizes: [4, 0, 85, 77]
2025-03-05 15:23:01.554526 test begin: paddle.broadcast_to(Tensor([4, 0, 85, 85],"bool"), list[4,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 85, 85],"bool"), list[4,8,85,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 85, 85].  Tensor sizes: [4, 0, 85, 85]
2025-03-05 15:23:01.555212 test begin: paddle.broadcast_to(Tensor([4, 0, 86, 61],"bool"), list[4,8,86,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 86, 61],"bool"), list[4,8,86,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 86, 61].  Tensor sizes: [4, 0, 86, 61]
2025-03-05 15:23:01.555853 test begin: paddle.broadcast_to(Tensor([4, 0, 86, 77],"bool"), list[4,8,86,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 86, 77],"bool"), list[4,8,86,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 86, 77].  Tensor sizes: [4, 0, 86, 77]
2025-03-05 15:23:01.556467 test begin: paddle.broadcast_to(Tensor([4, 0, 86, 86],"bool"), list[4,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 86, 86],"bool"), list[4,8,86,86,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 86, 86].  Tensor sizes: [4, 0, 86, 86]
2025-03-05 15:23:01.557199 test begin: paddle.broadcast_to(Tensor([4, 0, 87, 61],"bool"), list[4,8,87,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 87, 61],"bool"), list[4,8,87,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 87, 61].  Tensor sizes: [4, 0, 87, 61]
2025-03-05 15:23:01.557909 test begin: paddle.broadcast_to(Tensor([4, 0, 87, 77],"bool"), list[4,8,87,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 87, 77],"bool"), list[4,8,87,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 87, 77].  Tensor sizes: [4, 0, 87, 77]
2025-03-05 15:23:01.558647 test begin: paddle.broadcast_to(Tensor([4, 0, 87, 87],"bool"), list[4,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 87, 87],"bool"), list[4,8,87,87,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 87, 87].  Tensor sizes: [4, 0, 87, 87]
2025-03-05 15:23:01.559339 test begin: paddle.broadcast_to(Tensor([4, 0, 88, 61],"bool"), list[4,8,88,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 88, 61],"bool"), list[4,8,88,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 88, 61].  Tensor sizes: [4, 0, 88, 61]
2025-03-05 15:23:01.560098 test begin: paddle.broadcast_to(Tensor([4, 0, 88, 77],"bool"), list[4,8,88,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 88, 77],"bool"), list[4,8,88,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 88, 77].  Tensor sizes: [4, 0, 88, 77]
2025-03-05 15:23:01.560863 test begin: paddle.broadcast_to(Tensor([4, 0, 88, 88],"bool"), list[4,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 88, 88],"bool"), list[4,8,88,88,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 88, 88].  Tensor sizes: [4, 0, 88, 88]
2025-03-05 15:23:01.561470 test begin: paddle.broadcast_to(Tensor([4, 0, 89, 61],"bool"), list[4,8,89,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 89, 61],"bool"), list[4,8,89,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 89, 61].  Tensor sizes: [4, 0, 89, 61]
2025-03-05 15:23:01.562070 test begin: paddle.broadcast_to(Tensor([4, 0, 89, 77],"bool"), list[4,8,89,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 89, 77],"bool"), list[4,8,89,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 89, 77].  Tensor sizes: [4, 0, 89, 77]
2025-03-05 15:23:01.562667 test begin: paddle.broadcast_to(Tensor([4, 0, 89, 89],"bool"), list[4,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 89, 89],"bool"), list[4,8,89,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 89, 89].  Tensor sizes: [4, 0, 89, 89]
2025-03-05 15:23:01.563229 test begin: paddle.broadcast_to(Tensor([4, 0, 9, 13],"bool"), list[4,8,9,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 9, 13],"bool"), list[4,8,9,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 9, 13].  Tensor sizes: [4, 0, 9, 13]
2025-03-05 15:23:01.563792 test begin: paddle.broadcast_to(Tensor([4, 0, 9, 25],"bool"), list[4,8,9,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 9, 25],"bool"), list[4,8,9,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 9, 25].  Tensor sizes: [4, 0, 9, 25]
2025-03-05 15:23:01.564357 test begin: paddle.broadcast_to(Tensor([4, 0, 9, 37],"bool"), list[4,8,9,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 9, 37],"bool"), list[4,8,9,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 9, 37].  Tensor sizes: [4, 0, 9, 37]
2025-03-05 15:23:01.564935 test begin: paddle.broadcast_to(Tensor([4, 0, 9, 5],"bool"), list[4,8,9,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 9, 5],"bool"), list[4,8,9,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 9, 5].  Tensor sizes: [4, 0, 9, 5]
2025-03-05 15:23:01.565492 test begin: paddle.broadcast_to(Tensor([4, 0, 9, 61],"bool"), list[4,8,9,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 9, 61],"bool"), list[4,8,9,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 9, 61].  Tensor sizes: [4, 0, 9, 61]
2025-03-05 15:23:01.566056 test begin: paddle.broadcast_to(Tensor([4, 0, 9, 77],"bool"), list[4,8,9,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 9, 77],"bool"), list[4,8,9,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 9, 77].  Tensor sizes: [4, 0, 9, 77]
2025-03-05 15:23:01.566632 test begin: paddle.broadcast_to(Tensor([4, 0, 9, 9],"bool"), list[4,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 9, 9],"bool"), list[4,8,9,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 9, 9].  Tensor sizes: [4, 0, 9, 9]
2025-03-05 15:23:01.567192 test begin: paddle.broadcast_to(Tensor([4, 0, 90, 61],"bool"), list[4,8,90,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 90, 61],"bool"), list[4,8,90,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 90, 61].  Tensor sizes: [4, 0, 90, 61]
2025-03-05 15:23:01.567788 test begin: paddle.broadcast_to(Tensor([4, 0, 90, 77],"bool"), list[4,8,90,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 90, 77],"bool"), list[4,8,90,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 90, 77].  Tensor sizes: [4, 0, 90, 77]
2025-03-05 15:23:01.568361 test begin: paddle.broadcast_to(Tensor([4, 0, 90, 90],"bool"), list[4,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 90, 90],"bool"), list[4,8,90,90,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 90, 90].  Tensor sizes: [4, 0, 90, 90]
2025-03-05 15:23:01.568943 test begin: paddle.broadcast_to(Tensor([4, 0, 91, 61],"bool"), list[4,8,91,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 91, 61],"bool"), list[4,8,91,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 91, 61].  Tensor sizes: [4, 0, 91, 61]
2025-03-05 15:23:01.569503 test begin: paddle.broadcast_to(Tensor([4, 0, 91, 77],"bool"), list[4,8,91,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 91, 77],"bool"), list[4,8,91,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 91, 77].  Tensor sizes: [4, 0, 91, 77]
2025-03-05 15:23:01.570085 test begin: paddle.broadcast_to(Tensor([4, 0, 91, 91],"bool"), list[4,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 91, 91],"bool"), list[4,8,91,91,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 91, 91].  Tensor sizes: [4, 0, 91, 91]
2025-03-05 15:23:01.570656 test begin: paddle.broadcast_to(Tensor([4, 0, 92, 61],"bool"), list[4,8,92,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 92, 61],"bool"), list[4,8,92,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 92, 61].  Tensor sizes: [4, 0, 92, 61]
2025-03-05 15:23:01.571229 test begin: paddle.broadcast_to(Tensor([4, 0, 92, 77],"bool"), list[4,8,92,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 92, 77],"bool"), list[4,8,92,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 92, 77].  Tensor sizes: [4, 0, 92, 77]
2025-03-05 15:23:01.571800 test begin: paddle.broadcast_to(Tensor([4, 0, 92, 92],"bool"), list[4,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 92, 92],"bool"), list[4,8,92,92,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 92, 92].  Tensor sizes: [4, 0, 92, 92]
2025-03-05 15:23:01.572360 test begin: paddle.broadcast_to(Tensor([4, 0, 93, 61],"bool"), list[4,8,93,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 93, 61],"bool"), list[4,8,93,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 93, 61].  Tensor sizes: [4, 0, 93, 61]
2025-03-05 15:23:01.572928 test begin: paddle.broadcast_to(Tensor([4, 0, 93, 77],"bool"), list[4,8,93,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 93, 77],"bool"), list[4,8,93,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 93, 77].  Tensor sizes: [4, 0, 93, 77]
2025-03-05 15:23:01.573481 test begin: paddle.broadcast_to(Tensor([4, 0, 93, 93],"bool"), list[4,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 93, 93],"bool"), list[4,8,93,93,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 93, 93].  Tensor sizes: [4, 0, 93, 93]
2025-03-05 15:23:01.574047 test begin: paddle.broadcast_to(Tensor([4, 0, 94, 61],"bool"), list[4,8,94,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 94, 61],"bool"), list[4,8,94,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 94, 61].  Tensor sizes: [4, 0, 94, 61]
2025-03-05 15:23:01.574626 test begin: paddle.broadcast_to(Tensor([4, 0, 94, 77],"bool"), list[4,8,94,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 94, 77],"bool"), list[4,8,94,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 94, 77].  Tensor sizes: [4, 0, 94, 77]
2025-03-05 15:23:01.575243 test begin: paddle.broadcast_to(Tensor([4, 0, 94, 94],"bool"), list[4,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 94, 94],"bool"), list[4,8,94,94,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 94, 94].  Tensor sizes: [4, 0, 94, 94]
2025-03-05 15:23:01.575803 test begin: paddle.broadcast_to(Tensor([4, 0, 95, 61],"bool"), list[4,8,95,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 95, 61],"bool"), list[4,8,95,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 95, 61].  Tensor sizes: [4, 0, 95, 61]
2025-03-05 15:23:01.576408 test begin: paddle.broadcast_to(Tensor([4, 0, 95, 77],"bool"), list[4,8,95,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 95, 77],"bool"), list[4,8,95,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 95, 77].  Tensor sizes: [4, 0, 95, 77]
2025-03-05 15:23:01.577006 test begin: paddle.broadcast_to(Tensor([4, 0, 95, 95],"bool"), list[4,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 95, 95],"bool"), list[4,8,95,95,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 95, 95].  Tensor sizes: [4, 0, 95, 95]
2025-03-05 15:23:01.577568 test begin: paddle.broadcast_to(Tensor([4, 0, 96, 61],"bool"), list[4,8,96,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 96, 61],"bool"), list[4,8,96,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 96, 61].  Tensor sizes: [4, 0, 96, 61]
2025-03-05 15:23:01.578119 test begin: paddle.broadcast_to(Tensor([4, 0, 96, 77],"bool"), list[4,8,96,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 96, 77],"bool"), list[4,8,96,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 96, 77].  Tensor sizes: [4, 0, 96, 77]
2025-03-05 15:23:01.578642 test begin: paddle.broadcast_to(Tensor([4, 0, 96, 96],"bool"), list[4,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 96, 96],"bool"), list[4,8,96,96,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 96, 96].  Tensor sizes: [4, 0, 96, 96]
2025-03-05 15:23:01.579165 test begin: paddle.broadcast_to(Tensor([4, 0, 97, 61],"bool"), list[4,8,97,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 97, 61],"bool"), list[4,8,97,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 97, 61].  Tensor sizes: [4, 0, 97, 61]
2025-03-05 15:23:01.579730 test begin: paddle.broadcast_to(Tensor([4, 0, 97, 77],"bool"), list[4,8,97,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 97, 77],"bool"), list[4,8,97,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 97, 77].  Tensor sizes: [4, 0, 97, 77]
2025-03-05 15:23:01.580249 test begin: paddle.broadcast_to(Tensor([4, 0, 97, 97],"bool"), list[4,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 97, 97],"bool"), list[4,8,97,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 97, 97].  Tensor sizes: [4, 0, 97, 97]
2025-03-05 15:23:01.580764 test begin: paddle.broadcast_to(Tensor([4, 0, 98, 61],"bool"), list[4,8,98,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 98, 61],"bool"), list[4,8,98,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 98, 61].  Tensor sizes: [4, 0, 98, 61]
2025-03-05 15:23:01.581294 test begin: paddle.broadcast_to(Tensor([4, 0, 98, 77],"bool"), list[4,8,98,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 98, 77],"bool"), list[4,8,98,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 98, 77].  Tensor sizes: [4, 0, 98, 77]
2025-03-05 15:23:01.581825 test begin: paddle.broadcast_to(Tensor([4, 0, 98, 98],"bool"), list[4,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 98, 98],"bool"), list[4,8,98,98,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 98, 98].  Tensor sizes: [4, 0, 98, 98]
2025-03-05 15:23:01.582332 test begin: paddle.broadcast_to(Tensor([4, 0, 99, 61],"bool"), list[4,8,99,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 99, 61],"bool"), list[4,8,99,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 99, 61].  Tensor sizes: [4, 0, 99, 61]
2025-03-05 15:23:01.582848 test begin: paddle.broadcast_to(Tensor([4, 0, 99, 77],"bool"), list[4,8,99,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 99, 77],"bool"), list[4,8,99,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 99, 77].  Tensor sizes: [4, 0, 99, 77]
2025-03-05 15:23:01.583355 test begin: paddle.broadcast_to(Tensor([4, 0, 99, 99],"bool"), list[4,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([4, 0, 99, 99],"bool"), list[4,8,99,99,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 8, 99, 99].  Tensor sizes: [4, 0, 99, 99]
2025-03-05 15:23:01.583863 test begin: paddle.broadcast_to(Tensor([4, 0],"bool"), list[4,2,], )

[torch error] paddle.broadcast_to(Tensor([4, 0],"bool"), list[4,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 2].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.584357 test begin: paddle.broadcast_to(Tensor([4, 0],"float32"), list[4,2,], )

[torch error] paddle.broadcast_to(Tensor([4, 0],"float32"), list[4,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 2].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.584853 test begin: paddle.broadcast_to(Tensor([4, 0],"float32"), tuple(4,2,), )

[torch error] paddle.broadcast_to(Tensor([4, 0],"float32"), tuple(4,2,), ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 2].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.585344 test begin: paddle.broadcast_to(Tensor([4, 0],"float32"), tuple(4,3,), )

[torch error] paddle.broadcast_to(Tensor([4, 0],"float32"), tuple(4,3,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 3].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.585844 test begin: paddle.broadcast_to(Tensor([4, 0],"float32"), tuple(4,4,), )

[torch error] paddle.broadcast_to(Tensor([4, 0],"float32"), tuple(4,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 4].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.586339 test begin: paddle.broadcast_to(Tensor([4, 0],"float32"), tuple(4,7,), )

[torch error] paddle.broadcast_to(Tensor([4, 0],"float32"), tuple(4,7,), ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 7].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.586870 test begin: paddle.broadcast_to(Tensor([4, 0],"float32"), tuple(4,799,), )

[torch error] paddle.broadcast_to(Tensor([4, 0],"float32"), tuple(4,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 799].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.587373 test begin: paddle.broadcast_to(Tensor([4, 0],"float64"), tuple(4,2,), )

[torch error] paddle.broadcast_to(Tensor([4, 0],"float64"), tuple(4,2,), ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 2].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.587929 test begin: paddle.broadcast_to(Tensor([4, 0],"float64"), tuple(4,4,), )

[torch error] paddle.broadcast_to(Tensor([4, 0],"float64"), tuple(4,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 4].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.588422 test begin: paddle.broadcast_to(Tensor([4, 0],"float64"), tuple(4,42,), )

[torch error] paddle.broadcast_to(Tensor([4, 0],"float64"), tuple(4,42,), ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 42].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.588923 test begin: paddle.broadcast_to(Tensor([4, 0],"float64"), tuple(4,7,), )

[torch error] paddle.broadcast_to(Tensor([4, 0],"float64"), tuple(4,7,), ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 7].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.589411 test begin: paddle.broadcast_to(Tensor([4, 0],"int32"), list[4,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 0],"int32"), list[4,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 5].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.589984 test begin: paddle.broadcast_to(Tensor([4, 0],"int32"), tuple(4,1,), )

[torch error] paddle.broadcast_to(Tensor([4, 0],"int32"), tuple(4,1,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 1].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.590512 test begin: paddle.broadcast_to(Tensor([4, 0],"int64"), shape=list[4,500,], )

[torch error] paddle.broadcast_to(Tensor([4, 0],"int64"), shape=list[4,500,], ) 
 The expanded size of the tensor (500) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 500].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.591039 test begin: paddle.broadcast_to(Tensor([4, 0],"int64"), tuple(4,799,), )

[torch error] paddle.broadcast_to(Tensor([4, 0],"int64"), tuple(4,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [4, 799].  Tensor sizes: [4, 0]
2025-03-05 15:23:01.591547 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 100],"bool"), list[4,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 100],"bool"), list[4,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 100, 100].  Tensor sizes: [4, 1, 0, 100]
2025-03-05 15:23:01.592111 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 101],"bool"), list[4,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 101],"bool"), list[4,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 101, 101].  Tensor sizes: [4, 1, 0, 101]
2025-03-05 15:23:01.592648 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 102],"bool"), list[4,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 102],"bool"), list[4,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 102, 102].  Tensor sizes: [4, 1, 0, 102]
2025-03-05 15:23:01.593215 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 103],"bool"), list[4,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 103],"bool"), list[4,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 103, 103].  Tensor sizes: [4, 1, 0, 103]
2025-03-05 15:23:01.593757 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 104],"bool"), list[4,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 104],"bool"), list[4,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 104, 104].  Tensor sizes: [4, 1, 0, 104]
2025-03-05 15:23:01.594283 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 105],"bool"), list[4,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 105],"bool"), list[4,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 105, 105].  Tensor sizes: [4, 1, 0, 105]
2025-03-05 15:23:01.594805 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 106],"bool"), list[4,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 106],"bool"), list[4,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 106, 106].  Tensor sizes: [4, 1, 0, 106]
2025-03-05 15:23:01.595329 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 107],"bool"), list[4,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 107],"bool"), list[4,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 107, 107].  Tensor sizes: [4, 1, 0, 107]
2025-03-05 15:23:01.595884 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 108],"bool"), list[4,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 108],"bool"), list[4,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 108, 108].  Tensor sizes: [4, 1, 0, 108]
2025-03-05 15:23:01.596405 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 109],"bool"), list[4,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 109],"bool"), list[4,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 109, 109].  Tensor sizes: [4, 1, 0, 109]
2025-03-05 15:23:01.596998 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 10],"bool"), list[4,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 10],"bool"), list[4,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 10, 10].  Tensor sizes: [4, 1, 0, 10]
2025-03-05 15:23:01.597513 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 110],"bool"), list[4,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 110],"bool"), list[4,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 110, 110].  Tensor sizes: [4, 1, 0, 110]
2025-03-05 15:23:01.598035 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 111],"bool"), list[4,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 111],"bool"), list[4,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 111, 111].  Tensor sizes: [4, 1, 0, 111]
2025-03-05 15:23:01.598543 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 112],"bool"), list[4,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 112],"bool"), list[4,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 112, 112].  Tensor sizes: [4, 1, 0, 112]
2025-03-05 15:23:01.599076 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 113],"bool"), list[4,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 113],"bool"), list[4,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 113, 113].  Tensor sizes: [4, 1, 0, 113]
2025-03-05 15:23:01.599594 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 114],"bool"), list[4,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 114],"bool"), list[4,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 114, 114].  Tensor sizes: [4, 1, 0, 114]
2025-03-05 15:23:01.600111 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 115],"bool"), list[4,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 115],"bool"), list[4,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 115, 115].  Tensor sizes: [4, 1, 0, 115]
2025-03-05 15:23:01.600655 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 116],"bool"), list[4,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 116],"bool"), list[4,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 116, 116].  Tensor sizes: [4, 1, 0, 116]
2025-03-05 15:23:01.601159 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 117],"bool"), list[4,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 117],"bool"), list[4,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 117, 117].  Tensor sizes: [4, 1, 0, 117]
2025-03-05 15:23:01.601672 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 118],"bool"), list[4,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 118],"bool"), list[4,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 118, 118].  Tensor sizes: [4, 1, 0, 118]
2025-03-05 15:23:01.602178 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 119],"bool"), list[4,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 119],"bool"), list[4,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 119, 119].  Tensor sizes: [4, 1, 0, 119]
2025-03-05 15:23:01.602708 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 11],"bool"), list[4,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 11],"bool"), list[4,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 11, 11].  Tensor sizes: [4, 1, 0, 11]
2025-03-05 15:23:01.603221 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 120],"bool"), list[4,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 120],"bool"), list[4,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 120, 120].  Tensor sizes: [4, 1, 0, 120]
2025-03-05 15:23:01.603746 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 121],"bool"), list[4,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 121],"bool"), list[4,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 121, 121].  Tensor sizes: [4, 1, 0, 121]
2025-03-05 15:23:01.604253 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 122],"bool"), list[4,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 122],"bool"), list[4,8,122,122,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 122, 122].  Tensor sizes: [4, 1, 0, 122]
2025-03-05 15:23:01.604805 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 123],"bool"), list[4,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 123],"bool"), list[4,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 123, 123].  Tensor sizes: [4, 1, 0, 123]
2025-03-05 15:23:01.605316 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 124],"bool"), list[4,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 124],"bool"), list[4,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 124, 124].  Tensor sizes: [4, 1, 0, 124]
2025-03-05 15:23:01.605951 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 125],"bool"), list[4,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 125],"bool"), list[4,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 125, 125].  Tensor sizes: [4, 1, 0, 125]
2025-03-05 15:23:01.606505 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 126],"bool"), list[4,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 126],"bool"), list[4,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 126, 126].  Tensor sizes: [4, 1, 0, 126]
2025-03-05 15:23:01.607079 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 127],"bool"), list[4,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 127],"bool"), list[4,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 127, 127].  Tensor sizes: [4, 1, 0, 127]
2025-03-05 15:23:01.607615 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 128],"bool"), list[4,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 128],"bool"), list[4,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 128, 128].  Tensor sizes: [4, 1, 0, 128]
2025-03-05 15:23:01.608145 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 129],"bool"), list[4,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 129],"bool"), list[4,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 129, 129].  Tensor sizes: [4, 1, 0, 129]
2025-03-05 15:23:01.608671 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 12],"bool"), list[4,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 12],"bool"), list[4,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 12, 12].  Tensor sizes: [4, 1, 0, 12]
2025-03-05 15:23:01.609210 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 130],"bool"), list[4,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 130],"bool"), list[4,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 130, 130].  Tensor sizes: [4, 1, 0, 130]
2025-03-05 15:23:01.609763 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 131],"bool"), list[4,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 131],"bool"), list[4,8,131,131,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 131, 131].  Tensor sizes: [4, 1, 0, 131]
2025-03-05 15:23:01.610283 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 132],"bool"), list[4,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 132],"bool"), list[4,8,132,132,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 132, 132].  Tensor sizes: [4, 1, 0, 132]
2025-03-05 15:23:01.610808 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 133],"bool"), list[4,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 133],"bool"), list[4,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 133, 133].  Tensor sizes: [4, 1, 0, 133]
2025-03-05 15:23:01.611321 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 134],"bool"), list[4,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 134],"bool"), list[4,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 134, 134].  Tensor sizes: [4, 1, 0, 134]
2025-03-05 15:23:01.611921 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 135],"bool"), list[4,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 135],"bool"), list[4,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 135, 135].  Tensor sizes: [4, 1, 0, 135]
2025-03-05 15:23:01.612591 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 136],"bool"), list[4,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 136],"bool"), list[4,8,136,136,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 136, 136].  Tensor sizes: [4, 1, 0, 136]
2025-03-05 15:23:01.613160 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 137],"bool"), list[4,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 137],"bool"), list[4,8,137,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 137, 137].  Tensor sizes: [4, 1, 0, 137]
2025-03-05 15:23:01.613709 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 138],"bool"), list[4,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 138],"bool"), list[4,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 138, 138].  Tensor sizes: [4, 1, 0, 138]
2025-03-05 15:23:01.614236 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 139],"bool"), list[4,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 139],"bool"), list[4,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 139, 139].  Tensor sizes: [4, 1, 0, 139]
2025-03-05 15:23:01.614784 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,1,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,1,13,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 1, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.615309 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,10,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,10,13,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 10, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.615851 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,11,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,11,13,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 11, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.616369 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,12,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,12,13,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 12, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.616897 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 13, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.617418 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,14,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,14,13,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 14, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.617951 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,15,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,15,13,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 15, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.618498 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,16,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,16,13,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 16, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.619041 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,17,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,17,13,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 17, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.619563 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,18,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,18,13,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 18, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.620088 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,19,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,19,13,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 19, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.620626 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,2,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,2,13,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 2, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.621154 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,20,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,20,13,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 20, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.621690 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,21,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,21,13,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 21, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.622269 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,22,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,22,13,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 22, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.622874 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,23,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,23,13,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 23, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.623451 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,24,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,24,13,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 24, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.624038 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,25,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,25,13,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 25, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.624628 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,26,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,26,13,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 26, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.625205 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,27,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,27,13,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 27, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.625752 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,28,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,28,13,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 28, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.626306 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,3,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,3,13,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 3, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.626848 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,4,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,4,13,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 4, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.627402 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,5,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,5,13,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 5, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.627940 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,6,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,6,13,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 6, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.628476 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,7,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,7,13,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 7, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.629019 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,8,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,8,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 8, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.629549 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,9,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 13],"bool"), list[4,8,9,13,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 9, 13].  Tensor sizes: [4, 1, 0, 13]
2025-03-05 15:23:01.630082 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 140],"bool"), list[4,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 140],"bool"), list[4,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 140, 140].  Tensor sizes: [4, 1, 0, 140]
2025-03-05 15:23:01.630625 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 141],"bool"), list[4,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 141],"bool"), list[4,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 141, 141].  Tensor sizes: [4, 1, 0, 141]
2025-03-05 15:23:01.631163 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 142],"bool"), list[4,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 142],"bool"), list[4,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 142, 142].  Tensor sizes: [4, 1, 0, 142]
2025-03-05 15:23:01.631695 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 143],"bool"), list[4,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 143],"bool"), list[4,8,143,143,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 143, 143].  Tensor sizes: [4, 1, 0, 143]
2025-03-05 15:23:01.632231 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 144],"bool"), list[4,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 144],"bool"), list[4,8,144,144,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 144, 144].  Tensor sizes: [4, 1, 0, 144]
2025-03-05 15:23:01.632777 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 145],"bool"), list[4,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 145],"bool"), list[4,8,145,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 145, 145].  Tensor sizes: [4, 1, 0, 145]
2025-03-05 15:23:01.633307 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 146],"bool"), list[4,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 146],"bool"), list[4,8,146,146,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 146, 146].  Tensor sizes: [4, 1, 0, 146]
2025-03-05 15:23:01.633840 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 147],"bool"), list[4,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 147],"bool"), list[4,8,147,147,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 147, 147].  Tensor sizes: [4, 1, 0, 147]
2025-03-05 15:23:01.634394 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 148],"bool"), list[4,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 148],"bool"), list[4,8,148,148,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 148, 148].  Tensor sizes: [4, 1, 0, 148]
2025-03-05 15:23:01.634966 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 149],"bool"), list[4,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 149],"bool"), list[4,8,149,149,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 149, 149].  Tensor sizes: [4, 1, 0, 149]
2025-03-05 15:23:01.635504 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 14],"bool"), list[4,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 14],"bool"), list[4,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 14, 14].  Tensor sizes: [4, 1, 0, 14]
2025-03-05 15:23:01.639973 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 150],"bool"), list[4,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 150],"bool"), list[4,8,150,150,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 150, 150].  Tensor sizes: [4, 1, 0, 150]
2025-03-05 15:23:01.640565 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 151],"bool"), list[4,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 151],"bool"), list[4,8,151,151,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 151, 151].  Tensor sizes: [4, 1, 0, 151]
2025-03-05 15:23:01.641123 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 152],"bool"), list[4,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 152],"bool"), list[4,8,152,152,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 152, 152].  Tensor sizes: [4, 1, 0, 152]
2025-03-05 15:23:01.641691 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 153],"bool"), list[4,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 153],"bool"), list[4,8,153,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 153, 153].  Tensor sizes: [4, 1, 0, 153]
2025-03-05 15:23:01.642251 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 154],"bool"), list[4,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 154],"bool"), list[4,8,154,154,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 154, 154].  Tensor sizes: [4, 1, 0, 154]
2025-03-05 15:23:01.642794 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 155],"bool"), list[4,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 155],"bool"), list[4,8,155,155,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 155, 155].  Tensor sizes: [4, 1, 0, 155]
2025-03-05 15:23:01.643334 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 156],"bool"), list[4,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 156],"bool"), list[4,8,156,156,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 156, 156].  Tensor sizes: [4, 1, 0, 156]
2025-03-05 15:23:01.643876 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 157],"bool"), list[4,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 157],"bool"), list[4,8,157,157,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 157, 157].  Tensor sizes: [4, 1, 0, 157]
2025-03-05 15:23:01.644423 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 158],"bool"), list[4,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 158],"bool"), list[4,8,158,158,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 158, 158].  Tensor sizes: [4, 1, 0, 158]
2025-03-05 15:23:01.644959 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 159],"bool"), list[4,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 159],"bool"), list[4,8,159,159,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 159, 159].  Tensor sizes: [4, 1, 0, 159]
2025-03-05 15:23:01.645487 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 15],"bool"), list[4,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 15],"bool"), list[4,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 15, 15].  Tensor sizes: [4, 1, 0, 15]
2025-03-05 15:23:01.646031 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 160],"bool"), list[4,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 160],"bool"), list[4,8,160,160,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 160, 160].  Tensor sizes: [4, 1, 0, 160]
2025-03-05 15:23:01.646565 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 161],"bool"), list[4,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 161],"bool"), list[4,8,161,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 161, 161].  Tensor sizes: [4, 1, 0, 161]
2025-03-05 15:23:01.647173 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 162],"bool"), list[4,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 162],"bool"), list[4,8,162,162,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 162, 162].  Tensor sizes: [4, 1, 0, 162]
2025-03-05 15:23:01.647755 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 163],"bool"), list[4,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 163],"bool"), list[4,8,163,163,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 163, 163].  Tensor sizes: [4, 1, 0, 163]
2025-03-05 15:23:01.648300 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 164],"bool"), list[4,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 164],"bool"), list[4,8,164,164,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 164, 164].  Tensor sizes: [4, 1, 0, 164]
2025-03-05 15:23:01.648849 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 165],"bool"), list[4,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 165],"bool"), list[4,8,165,165,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 165, 165].  Tensor sizes: [4, 1, 0, 165]
2025-03-05 15:23:01.649433 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 166],"bool"), list[4,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 166],"bool"), list[4,8,166,166,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 166, 166].  Tensor sizes: [4, 1, 0, 166]
2025-03-05 15:23:01.650035 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 167],"bool"), list[4,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 167],"bool"), list[4,8,167,167,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 167, 167].  Tensor sizes: [4, 1, 0, 167]
2025-03-05 15:23:01.650564 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 168],"bool"), list[4,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 168],"bool"), list[4,8,168,168,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 168, 168].  Tensor sizes: [4, 1, 0, 168]
2025-03-05 15:23:01.651144 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 169],"bool"), list[4,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 169],"bool"), list[4,8,169,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 169, 169].  Tensor sizes: [4, 1, 0, 169]
2025-03-05 15:23:01.651697 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 16],"bool"), list[4,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 16],"bool"), list[4,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 16, 16].  Tensor sizes: [4, 1, 0, 16]
2025-03-05 15:23:01.652232 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 170],"bool"), list[4,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 170],"bool"), list[4,8,170,170,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 170, 170].  Tensor sizes: [4, 1, 0, 170]
2025-03-05 15:23:01.652803 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 171],"bool"), list[4,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 171],"bool"), list[4,8,171,171,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 171, 171].  Tensor sizes: [4, 1, 0, 171]
2025-03-05 15:23:01.653390 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 172],"bool"), list[4,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 172],"bool"), list[4,8,172,172,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 172, 172].  Tensor sizes: [4, 1, 0, 172]
2025-03-05 15:23:01.653977 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 173],"bool"), list[4,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 173],"bool"), list[4,8,173,173,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 173, 173].  Tensor sizes: [4, 1, 0, 173]
2025-03-05 15:23:01.654551 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 174],"bool"), list[4,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 174],"bool"), list[4,8,174,174,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 174, 174].  Tensor sizes: [4, 1, 0, 174]
2025-03-05 15:23:01.655113 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 175],"bool"), list[4,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 175],"bool"), list[4,8,175,175,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 175, 175].  Tensor sizes: [4, 1, 0, 175]
2025-03-05 15:23:01.655682 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 176],"bool"), list[4,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 176],"bool"), list[4,8,176,176,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 176, 176].  Tensor sizes: [4, 1, 0, 176]
2025-03-05 15:23:01.656284 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 177],"bool"), list[4,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 177],"bool"), list[4,8,177,177,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 177, 177].  Tensor sizes: [4, 1, 0, 177]
2025-03-05 15:23:01.656835 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 178],"bool"), list[4,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 178],"bool"), list[4,8,178,178,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 178, 178].  Tensor sizes: [4, 1, 0, 178]
2025-03-05 15:23:01.657358 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 179],"bool"), list[4,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 179],"bool"), list[4,8,179,179,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 179, 179].  Tensor sizes: [4, 1, 0, 179]
2025-03-05 15:23:01.657879 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 17],"bool"), list[4,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 17],"bool"), list[4,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 17, 17].  Tensor sizes: [4, 1, 0, 17]
2025-03-05 15:23:01.658394 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 180],"bool"), list[4,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 180],"bool"), list[4,8,180,180,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 180, 180].  Tensor sizes: [4, 1, 0, 180]
2025-03-05 15:23:01.658935 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 18],"bool"), list[4,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 18],"bool"), list[4,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 18, 18].  Tensor sizes: [4, 1, 0, 18]
2025-03-05 15:23:01.659548 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 19],"bool"), list[4,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 19],"bool"), list[4,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 19, 19].  Tensor sizes: [4, 1, 0, 19]
2025-03-05 15:23:01.660113 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 1],"bool"), list[4,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 1],"bool"), list[4,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 1, 1].  Tensor sizes: [4, 1, 0, 1]
2025-03-05 15:23:01.660644 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 20],"bool"), list[4,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 20],"bool"), list[4,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 20, 20].  Tensor sizes: [4, 1, 0, 20]
2025-03-05 15:23:01.661156 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 21],"bool"), list[4,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 21],"bool"), list[4,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 21, 21].  Tensor sizes: [4, 1, 0, 21]
2025-03-05 15:23:01.661680 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 22],"bool"), list[4,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 22],"bool"), list[4,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 22, 22].  Tensor sizes: [4, 1, 0, 22]
2025-03-05 15:23:01.662199 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 23],"bool"), list[4,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 23],"bool"), list[4,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 23, 23].  Tensor sizes: [4, 1, 0, 23]
2025-03-05 15:23:01.662721 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 24],"bool"), list[4,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 24],"bool"), list[4,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 24, 24].  Tensor sizes: [4, 1, 0, 24]
2025-03-05 15:23:01.663306 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,1,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,1,25,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 1, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.663867 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,10,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,10,25,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 10, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.664415 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,11,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,11,25,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 11, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.664968 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,12,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,12,25,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 12, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.665515 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,13,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,13,25,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 13, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.666066 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,14,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,14,25,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 14, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.666622 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,15,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,15,25,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 15, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.667166 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,16,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,16,25,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 16, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.667738 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,17,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,17,25,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 17, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.668281 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,18,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,18,25,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 18, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.668826 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,19,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,19,25,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 19, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.669375 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,2,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,2,25,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 2, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.669930 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,20,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,20,25,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 20, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.670481 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,21,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,21,25,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 21, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.671027 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,22,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,22,25,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 22, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.671565 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,23,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,23,25,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 23, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.672114 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,24,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,24,25,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 24, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.672681 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 25, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.673280 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,3,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,3,25,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 3, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.673821 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,4,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,4,25,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 4, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.674380 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,5,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,5,25,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 5, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.674931 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,6,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,6,25,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 6, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.675475 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,7,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,7,25,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 7, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.676020 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,8,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,8,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 8, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.676557 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,9,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 25],"bool"), list[4,8,9,25,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 9, 25].  Tensor sizes: [4, 1, 0, 25]
2025-03-05 15:23:01.677087 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 26],"bool"), list[4,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 26],"bool"), list[4,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 26, 26].  Tensor sizes: [4, 1, 0, 26]
2025-03-05 15:23:01.677616 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 27],"bool"), list[4,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 27],"bool"), list[4,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 27, 27].  Tensor sizes: [4, 1, 0, 27]
2025-03-05 15:23:01.678134 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 28],"bool"), list[4,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 28],"bool"), list[4,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 28, 28].  Tensor sizes: [4, 1, 0, 28]
2025-03-05 15:23:01.678645 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 29],"bool"), list[4,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 29],"bool"), list[4,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 29, 29].  Tensor sizes: [4, 1, 0, 29]
2025-03-05 15:23:01.679165 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 2],"bool"), list[4,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 2],"bool"), list[4,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 2, 2].  Tensor sizes: [4, 1, 0, 2]
2025-03-05 15:23:01.679707 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 30],"bool"), list[4,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 30],"bool"), list[4,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 30, 30].  Tensor sizes: [4, 1, 0, 30]
2025-03-05 15:23:01.680320 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 31],"bool"), list[4,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 31],"bool"), list[4,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 31, 31].  Tensor sizes: [4, 1, 0, 31]
2025-03-05 15:23:01.680845 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 32],"bool"), list[4,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 32],"bool"), list[4,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 32, 32].  Tensor sizes: [4, 1, 0, 32]
2025-03-05 15:23:01.681359 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 33],"bool"), list[4,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 33],"bool"), list[4,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 33, 33].  Tensor sizes: [4, 1, 0, 33]
2025-03-05 15:23:01.681883 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 34],"bool"), list[4,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 34],"bool"), list[4,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 34, 34].  Tensor sizes: [4, 1, 0, 34]
2025-03-05 15:23:01.682401 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 35],"bool"), list[4,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 35],"bool"), list[4,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 35, 35].  Tensor sizes: [4, 1, 0, 35]
2025-03-05 15:23:01.682929 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 36],"bool"), list[4,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 36],"bool"), list[4,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 36, 36].  Tensor sizes: [4, 1, 0, 36]
2025-03-05 15:23:01.683479 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,1,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,1,37,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 1, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.684042 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,10,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,10,37,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 10, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.684604 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,11,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,11,37,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 11, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.685152 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,12,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,12,37,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 12, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.685706 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,13,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,13,37,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 13, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.686252 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,14,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,14,37,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 14, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.686797 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,15,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,15,37,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 15, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.687339 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,16,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,16,37,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 16, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.687890 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,17,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,17,37,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 17, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.688430 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,18,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,18,37,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 18, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.688956 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,19,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,19,37,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 19, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.689469 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,2,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,2,37,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 2, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.690007 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,20,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,20,37,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 20, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.690532 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,21,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,21,37,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 21, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.691053 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,22,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,22,37,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 22, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.691575 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,23,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,23,37,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 23, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.692100 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,24,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,24,37,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 24, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.692648 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,25,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,25,37,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 25, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.693164 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,26,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,26,37,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 26, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.693686 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,27,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,27,37,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 27, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.694199 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,28,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,28,37,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 28, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.694729 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,29,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,29,37,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 29, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.695239 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,3,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,3,37,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 3, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.695756 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,30,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,30,37,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 30, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.696288 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,31,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,31,37,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 31, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.696813 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,32,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,32,37,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 32, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.697317 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,33,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,33,37,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 33, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.697852 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,34,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,34,37,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 34, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.698425 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,35,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,35,37,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 35, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.698988 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,36,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,36,37,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 36, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.699510 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 37, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.700059 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,38,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,38,37,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 38, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.701237 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,39,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,39,37,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 39, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.702010 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,4,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,4,37,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 4, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.702597 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,40,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,40,37,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 40, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.703146 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,41,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,41,37,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 41, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.703687 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,42,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,42,37,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 42, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.704707 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,43,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,43,37,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 43, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.705368 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,44,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,44,37,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 44, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.705993 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,45,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,45,37,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 45, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.706612 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,46,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,46,37,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 46, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.707237 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,47,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,47,37,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 47, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.707865 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,48,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,48,37,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 48, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.708587 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,49,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,49,37,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 49, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.709200 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,5,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,5,37,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 5, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.709941 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,50,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,50,37,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 50, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.710595 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,51,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,51,37,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 51, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.711150 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,52,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,52,37,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 52, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.711701 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,53,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,53,37,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 53, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.712237 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,54,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,54,37,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 54, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.712777 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,55,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,55,37,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 55, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.713306 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,56,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,56,37,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 56, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.713892 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,57,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,57,37,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 57, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.714412 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,58,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,58,37,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 58, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.714941 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,59,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,59,37,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 59, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.715460 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,6,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,6,37,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 6, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.716009 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,60,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,60,37,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 60, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.716538 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,61,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,61,37,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 61, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.717068 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,62,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,62,37,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 62, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.717598 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,63,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,63,37,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 63, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.718112 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,64,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,64,37,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 64, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.718645 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,65,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,65,37,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 65, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.719161 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,66,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,66,37,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 66, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.719699 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,67,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,67,37,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 67, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.720218 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,68,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,68,37,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 68, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.720739 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,69,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,69,37,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 69, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.721252 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,7,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,7,37,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 7, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.721777 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,70,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,70,37,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 70, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.722289 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,71,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,71,37,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 71, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.722812 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,72,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,72,37,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 72, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.723341 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,73,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,73,37,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 73, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.723876 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,74,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,74,37,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 74, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.724390 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,75,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,75,37,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 75, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.724916 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,76,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,76,37,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 76, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.725503 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,77,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,77,37,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 77, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.726318 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,78,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,78,37,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 78, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.726944 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,79,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,79,37,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 79, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.727489 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,8,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,8,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 8, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.728027 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,80,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,80,37,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 80, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.728548 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,81,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,81,37,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 81, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.729075 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,82,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,82,37,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 82, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.729602 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,83,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,83,37,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 83, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.730117 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,9,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 37],"bool"), list[4,8,9,37,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 9, 37].  Tensor sizes: [4, 1, 0, 37]
2025-03-05 15:23:01.730633 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 38],"bool"), list[4,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 38],"bool"), list[4,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 38, 38].  Tensor sizes: [4, 1, 0, 38]
2025-03-05 15:23:01.731205 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 39],"bool"), list[4,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 39],"bool"), list[4,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 39, 39].  Tensor sizes: [4, 1, 0, 39]
2025-03-05 15:23:01.731751 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 3],"bool"), list[4,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 3],"bool"), list[4,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 3, 3].  Tensor sizes: [4, 1, 0, 3]
2025-03-05 15:23:01.732339 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 40],"bool"), list[4,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 40],"bool"), list[4,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 40, 40].  Tensor sizes: [4, 1, 0, 40]
2025-03-05 15:23:01.732922 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 41],"bool"), list[4,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 41],"bool"), list[4,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 41, 41].  Tensor sizes: [4, 1, 0, 41]
2025-03-05 15:23:01.733449 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 42],"bool"), list[4,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 42],"bool"), list[4,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 42, 42].  Tensor sizes: [4, 1, 0, 42]
2025-03-05 15:23:01.734007 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 43],"bool"), list[4,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 43],"bool"), list[4,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 43, 43].  Tensor sizes: [4, 1, 0, 43]
2025-03-05 15:23:01.734540 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 44],"bool"), list[4,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 44],"bool"), list[4,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 44, 44].  Tensor sizes: [4, 1, 0, 44]
2025-03-05 15:23:01.735072 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 45],"bool"), list[4,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 45],"bool"), list[4,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 45, 45].  Tensor sizes: [4, 1, 0, 45]
2025-03-05 15:23:01.735596 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 46],"bool"), list[4,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 46],"bool"), list[4,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 46, 46].  Tensor sizes: [4, 1, 0, 46]
2025-03-05 15:23:01.736113 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 47],"bool"), list[4,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 47],"bool"), list[4,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 47, 47].  Tensor sizes: [4, 1, 0, 47]
2025-03-05 15:23:01.736632 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 48],"bool"), list[4,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 48],"bool"), list[4,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 48, 48].  Tensor sizes: [4, 1, 0, 48]
2025-03-05 15:23:01.737161 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 49],"bool"), list[4,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 49],"bool"), list[4,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 49, 49].  Tensor sizes: [4, 1, 0, 49]
2025-03-05 15:23:01.737702 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 4],"bool"), list[4,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 4],"bool"), list[4,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 4, 4].  Tensor sizes: [4, 1, 0, 4]
2025-03-05 15:23:01.738281 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 50],"bool"), list[4,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 50],"bool"), list[4,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 50, 50].  Tensor sizes: [4, 1, 0, 50]
2025-03-05 15:23:01.739106 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 51],"bool"), list[4,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 51],"bool"), list[4,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 51, 51].  Tensor sizes: [4, 1, 0, 51]
2025-03-05 15:23:01.739725 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 52],"bool"), list[4,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 52],"bool"), list[4,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 52, 52].  Tensor sizes: [4, 1, 0, 52]
2025-03-05 15:23:01.740268 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 53],"bool"), list[4,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 53],"bool"), list[4,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 53, 53].  Tensor sizes: [4, 1, 0, 53]
2025-03-05 15:23:01.740795 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 54],"bool"), list[4,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 54],"bool"), list[4,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 54, 54].  Tensor sizes: [4, 1, 0, 54]
2025-03-05 15:23:01.741308 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 55],"bool"), list[4,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 55],"bool"), list[4,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 55, 55].  Tensor sizes: [4, 1, 0, 55]
2025-03-05 15:23:01.741824 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 56],"bool"), list[4,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 56],"bool"), list[4,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 56, 56].  Tensor sizes: [4, 1, 0, 56]
2025-03-05 15:23:01.742339 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 57],"bool"), list[4,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 57],"bool"), list[4,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 57, 57].  Tensor sizes: [4, 1, 0, 57]
2025-03-05 15:23:01.742862 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 58],"bool"), list[4,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 58],"bool"), list[4,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 58, 58].  Tensor sizes: [4, 1, 0, 58]
2025-03-05 15:23:01.743371 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 59],"bool"), list[4,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 59],"bool"), list[4,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 59, 59].  Tensor sizes: [4, 1, 0, 59]
2025-03-05 15:23:01.743911 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,1,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,1,5,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 1, 5].  Tensor sizes: [4, 1, 0, 5]
2025-03-05 15:23:01.744430 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,10,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,10,5,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 10, 5].  Tensor sizes: [4, 1, 0, 5]
2025-03-05 15:23:01.744954 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,11,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,11,5,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 11, 5].  Tensor sizes: [4, 1, 0, 5]
2025-03-05 15:23:01.745460 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,12,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,12,5,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 12, 5].  Tensor sizes: [4, 1, 0, 5]
2025-03-05 15:23:01.745982 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,13,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,13,5,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 13, 5].  Tensor sizes: [4, 1, 0, 5]
2025-03-05 15:23:01.746495 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,2,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,2,5,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 2, 5].  Tensor sizes: [4, 1, 0, 5]
2025-03-05 15:23:01.747497 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,3,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,3,5,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 3, 5].  Tensor sizes: [4, 1, 0, 5]
2025-03-05 15:23:01.748245 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,4,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,4,5,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 4, 5].  Tensor sizes: [4, 1, 0, 5]
2025-03-05 15:23:01.748892 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 5, 5].  Tensor sizes: [4, 1, 0, 5]
2025-03-05 15:23:01.749502 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,6,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,6,5,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 6, 5].  Tensor sizes: [4, 1, 0, 5]
2025-03-05 15:23:01.750128 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,7,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,7,5,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 7, 5].  Tensor sizes: [4, 1, 0, 5]
2025-03-05 15:23:01.750681 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,8,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,8,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 8, 5].  Tensor sizes: [4, 1, 0, 5]
2025-03-05 15:23:01.751206 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,9,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 5],"bool"), list[4,8,9,5,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 9, 5].  Tensor sizes: [4, 1, 0, 5]
2025-03-05 15:23:01.751721 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 60],"bool"), list[4,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 60],"bool"), list[4,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 60, 60].  Tensor sizes: [4, 1, 0, 60]
2025-03-05 15:23:01.752466 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,1,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,1,61,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 1, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.753115 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,10,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,10,61,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 10, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.753777 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,100,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,100,61,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 100, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.754410 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,101,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,101,61,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 101, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.755030 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,102,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,102,61,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 102, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.755636 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,103,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,103,61,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 103, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.756252 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,104,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,104,61,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 104, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.756859 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,105,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,105,61,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 105, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.757480 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,106,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,106,61,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 106, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.758103 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,107,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,107,61,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 107, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.758751 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,108,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,108,61,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 108, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.759393 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,109,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,109,61,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 109, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.760140 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,11,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,11,61,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 11, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.760821 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,110,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,110,61,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 110, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.761371 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,111,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,111,61,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 111, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.761991 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,112,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,112,61,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 112, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.762820 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,113,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,113,61,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 113, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.763441 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,114,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,114,61,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 114, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.764058 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,115,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,115,61,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 115, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.764660 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,116,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,116,61,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 116, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.765257 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,117,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,117,61,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 117, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.765879 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,118,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,118,61,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 118, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.766475 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,119,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,119,61,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 119, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.767077 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,12,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,12,61,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 12, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.767683 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,120,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,120,61,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 120, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.768285 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,121,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,121,61,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 121, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.768907 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,122,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,122,61,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 122, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.769604 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,123,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,123,61,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 123, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.770239 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,124,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,124,61,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 124, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.770850 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,125,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,125,61,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 125, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.771382 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,126,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,126,61,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 126, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.771990 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,127,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,127,61,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 127, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.772574 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,128,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,128,61,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 128, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.773128 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,129,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,129,61,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 129, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.773659 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,13,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,13,61,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 13, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.774169 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,130,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,130,61,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 130, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.774698 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,131,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,131,61,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 131, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.775205 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,132,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,132,61,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 132, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.775720 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,133,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,133,61,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 133, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.776231 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,134,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,134,61,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 134, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.776744 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,135,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,135,61,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 135, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.777252 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,136,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,136,61,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 136, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.777765 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,137,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,137,61,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 137, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.778266 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,14,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,14,61,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 14, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.778791 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,15,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,15,61,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 15, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.779320 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,16,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,16,61,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 16, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.779912 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,17,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,17,61,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 17, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.781071 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,18,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,18,61,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 18, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.781683 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,19,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,19,61,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 19, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.782224 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,2,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,2,61,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 2, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.782835 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,20,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,20,61,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 20, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.783394 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,21,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,21,61,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 21, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.783951 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,22,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,22,61,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 22, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.784483 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,23,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,23,61,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 23, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.785042 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,24,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,24,61,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 24, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.785579 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,25,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,25,61,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 25, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.786101 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,26,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,26,61,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 26, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.786667 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,27,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,27,61,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 27, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.787201 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,28,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,28,61,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 28, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.787778 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,29,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,29,61,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 29, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.788300 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,3,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,3,61,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 3, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.788825 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,30,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,30,61,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 30, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.789332 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,31,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,31,61,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 31, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.789872 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,32,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,32,61,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 32, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.790422 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,33,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,33,61,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 33, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.790945 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,34,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,34,61,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 34, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.791458 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,35,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,35,61,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 35, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.792009 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,36,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,36,61,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 36, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.792524 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,37,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,37,61,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 37, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.793047 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,38,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,38,61,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 38, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.793566 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,39,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,39,61,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 39, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.794087 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,4,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,4,61,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 4, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.795010 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,40,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,40,61,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 40, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.795642 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,41,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,41,61,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 41, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.796257 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,42,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,42,61,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 42, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.796870 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,43,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,43,61,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 43, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.797470 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,44,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,44,61,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 44, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.798072 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,45,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,45,61,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 45, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.798801 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,46,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,46,61,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 46, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.799441 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,47,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,47,61,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 47, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.800049 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,48,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,48,61,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 48, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.800708 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,49,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,49,61,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 49, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.801308 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,5,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,5,61,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 5, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.801909 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,50,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,50,61,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 50, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.802495 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,51,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,51,61,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 51, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.803098 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,52,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,52,61,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 52, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.803708 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,53,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,53,61,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 53, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.804299 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,54,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,54,61,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 54, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.804951 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,55,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,55,61,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 55, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.805551 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,56,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,56,61,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 56, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.806161 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,57,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,57,61,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 57, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.806793 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,58,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,58,61,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 58, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.807377 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,59,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,59,61,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 59, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.808021 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,6,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,6,61,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 6, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.808642 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,60,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,60,61,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 60, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.809248 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 61, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.809871 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,62,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,62,61,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 62, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.810514 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,63,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,63,61,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 63, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.811128 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,64,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,64,61,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 64, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.811730 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,65,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,65,61,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 65, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.812337 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,66,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,66,61,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 66, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.812953 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,67,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,67,61,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 67, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.813551 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,68,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,68,61,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 68, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.814156 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,69,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,69,61,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 69, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.814765 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,7,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,7,61,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 7, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.815352 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,70,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,70,61,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 70, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.815982 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,71,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,71,61,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 71, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.816595 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,72,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,72,61,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 72, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.817338 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,73,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,73,61,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 73, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.817970 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,74,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,74,61,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 74, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.818507 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,75,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,75,61,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 75, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.819052 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,76,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,76,61,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 76, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.819563 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,77,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,77,61,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 77, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.820083 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,78,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,78,61,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 78, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.820594 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,79,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,79,61,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 79, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.821107 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,8,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,8,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 8, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.821631 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,80,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,80,61,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 80, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.822182 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,81,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,81,61,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 81, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.822710 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,82,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,82,61,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 82, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.823226 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,83,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,83,61,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 83, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.823766 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,84,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,84,61,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 84, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.824271 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,85,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,85,61,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 85, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.824837 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,86,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,86,61,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 86, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.825376 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,87,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,87,61,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 87, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.825905 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,88,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,88,61,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 88, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.826413 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,89,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,89,61,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 89, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.826930 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,9,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,9,61,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 9, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.827443 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,90,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,90,61,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 90, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.827964 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,91,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,91,61,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 91, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.828469 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,92,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,92,61,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 92, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.828998 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,93,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,93,61,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 93, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.829510 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,94,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,94,61,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 94, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.830050 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,95,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,95,61,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 95, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.830568 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,96,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,96,61,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 96, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.831093 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,97,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,97,61,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 97, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.831615 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,98,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,98,61,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 98, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.832140 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,99,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 61],"bool"), list[4,8,99,61,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 99, 61].  Tensor sizes: [4, 1, 0, 61]
2025-03-05 15:23:01.832714 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 62],"bool"), list[4,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 62],"bool"), list[4,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 62, 62].  Tensor sizes: [4, 1, 0, 62]
2025-03-05 15:23:01.833227 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 63],"bool"), list[4,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 63],"bool"), list[4,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 63, 63].  Tensor sizes: [4, 1, 0, 63]
2025-03-05 15:23:01.833823 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 64],"bool"), list[4,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 64],"bool"), list[4,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 64, 64].  Tensor sizes: [4, 1, 0, 64]
2025-03-05 15:23:01.834646 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 65],"bool"), list[4,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 65],"bool"), list[4,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 65, 65].  Tensor sizes: [4, 1, 0, 65]
2025-03-05 15:23:01.835292 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 66],"bool"), list[4,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 66],"bool"), list[4,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 66, 66].  Tensor sizes: [4, 1, 0, 66]
2025-03-05 15:23:01.835916 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 67],"bool"), list[4,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 67],"bool"), list[4,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 67, 67].  Tensor sizes: [4, 1, 0, 67]
2025-03-05 15:23:01.836517 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 68],"bool"), list[4,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 68],"bool"), list[4,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 68, 68].  Tensor sizes: [4, 1, 0, 68]
2025-03-05 15:23:01.837170 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 69],"bool"), list[4,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 69],"bool"), list[4,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 69, 69].  Tensor sizes: [4, 1, 0, 69]
2025-03-05 15:23:01.837767 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 6],"bool"), list[4,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 6],"bool"), list[4,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 6, 6].  Tensor sizes: [4, 1, 0, 6]
2025-03-05 15:23:01.838320 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 70],"bool"), list[4,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 70],"bool"), list[4,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 70, 70].  Tensor sizes: [4, 1, 0, 70]
2025-03-05 15:23:01.838861 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 71],"bool"), list[4,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 71],"bool"), list[4,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 71, 71].  Tensor sizes: [4, 1, 0, 71]
2025-03-05 15:23:01.839392 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 72],"bool"), list[4,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 72],"bool"), list[4,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 72, 72].  Tensor sizes: [4, 1, 0, 72]
2025-03-05 15:23:01.839914 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 73],"bool"), list[4,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 73],"bool"), list[4,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 73, 73].  Tensor sizes: [4, 1, 0, 73]
2025-03-05 15:23:01.840435 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 74],"bool"), list[4,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 74],"bool"), list[4,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 74, 74].  Tensor sizes: [4, 1, 0, 74]
2025-03-05 15:23:01.840951 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 75],"bool"), list[4,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 75],"bool"), list[4,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 75, 75].  Tensor sizes: [4, 1, 0, 75]
2025-03-05 15:23:01.841462 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 76],"bool"), list[4,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 76],"bool"), list[4,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 76, 76].  Tensor sizes: [4, 1, 0, 76]
2025-03-05 15:23:01.841981 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,1,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,1,77,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 1, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.842522 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,10,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,10,77,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 10, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.843055 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,100,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,100,77,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 100, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.843566 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,101,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,101,77,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 101, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.844618 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,102,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,102,77,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 102, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.845284 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,103,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,103,77,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 103, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.845915 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,104,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,104,77,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 104, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.846527 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,105,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,105,77,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 105, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.847241 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,106,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,106,77,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 106, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.847876 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,107,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,107,77,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 107, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.848492 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,108,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,108,77,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 108, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.849122 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,109,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,109,77,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 109, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.849730 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,11,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,11,77,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 11, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.850384 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,110,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,110,77,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 110, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.850994 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,111,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,111,77,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 111, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.851606 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,112,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,112,77,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 112, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.852228 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,113,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,113,77,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 113, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.852889 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,114,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,114,77,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 114, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.853427 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,115,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,115,77,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 115, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.854076 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,116,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,116,77,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 116, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.854727 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,117,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,117,77,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 117, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.855372 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,118,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,118,77,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 118, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.855990 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,119,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,119,77,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 119, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.856602 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,12,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,12,77,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 12, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.857200 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,120,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,120,77,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 120, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.857885 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,121,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,121,77,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 121, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.858488 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,122,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,122,77,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 122, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.859111 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,123,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,123,77,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 123, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.859716 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,124,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,124,77,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 124, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.860358 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,125,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,125,77,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 125, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.860969 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,126,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,126,77,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 126, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.861575 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,127,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,127,77,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 127, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.862180 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,128,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,128,77,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 128, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.862787 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,129,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,129,77,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 129, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.863387 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,13,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,13,77,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 13, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.863984 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,130,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,130,77,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 130, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.864595 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,131,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,131,77,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 131, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.865195 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,132,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,132,77,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 132, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.865805 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,133,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,133,77,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 133, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.866404 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,134,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,134,77,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 134, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.867018 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,135,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,135,77,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 135, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.867674 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,136,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,136,77,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 136, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.868289 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,137,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,137,77,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 137, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.868900 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,138,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,138,77,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 138, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.869541 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,139,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,139,77,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 139, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.870154 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,14,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,14,77,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 14, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.870765 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,140,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,140,77,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 140, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.871364 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,141,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,141,77,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 141, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.872017 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,142,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,142,77,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 142, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.872626 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,143,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,143,77,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 143, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.873237 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,144,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,144,77,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 144, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.873903 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,145,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,145,77,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 145, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.874532 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,146,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,146,77,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 146, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.875148 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,147,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,147,77,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 147, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.875754 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,148,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,148,77,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 148, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.876354 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,149,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,149,77,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 149, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.876956 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,15,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,15,77,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 15, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.877568 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,150,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,150,77,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 150, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.878194 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,151,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,151,77,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 151, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.878806 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,152,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,152,77,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 152, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.879410 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,153,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,153,77,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 153, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.880012 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,154,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,154,77,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 154, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.880615 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,155,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,155,77,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 155, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.881224 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,156,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,156,77,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 156, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.881822 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,157,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,157,77,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 157, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.882412 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,158,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,158,77,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 158, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.883014 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,159,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,159,77,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 159, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.883803 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,16,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,16,77,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 16, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.884511 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,160,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,160,77,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 160, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.885105 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,161,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,161,77,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 161, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.885664 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,162,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,162,77,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 162, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.886265 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,163,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,163,77,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 163, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.886823 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,164,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,164,77,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 164, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.887365 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,165,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,165,77,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 165, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.887932 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,166,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,166,77,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 166, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.888521 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,167,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,167,77,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 167, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.889081 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,168,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,168,77,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 168, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.889643 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,169,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,169,77,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 169, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.890171 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,17,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,17,77,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 17, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.890726 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,170,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,170,77,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 170, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.891249 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,171,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,171,77,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 171, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.891861 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,172,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,172,77,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 172, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.892388 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,173,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,173,77,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 173, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.892923 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,174,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,174,77,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 174, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.893440 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,175,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,175,77,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 175, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.893954 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,176,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,176,77,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 176, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.894477 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,177,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,177,77,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 177, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.895003 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,178,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,178,77,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 178, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.895553 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,179,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,179,77,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 179, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.896208 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,18,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,18,77,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 18, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.896759 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,180,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,180,77,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 180, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.897468 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,19,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,19,77,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 19, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.898022 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,2,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,2,77,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 2, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.898543 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,20,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,20,77,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 20, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.899077 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,21,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,21,77,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 21, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.899594 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,22,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,22,77,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 22, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.900112 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,23,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,23,77,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 23, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.900642 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,24,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,24,77,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 24, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.901151 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,25,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,25,77,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 25, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.901676 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,26,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,26,77,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 26, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.902186 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,27,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,27,77,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 27, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.902709 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,28,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,28,77,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 28, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.903215 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,29,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,29,77,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 29, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.903734 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,3,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,3,77,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 3, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.904233 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,30,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,30,77,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 30, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.904751 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,31,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,31,77,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 31, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.905319 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,32,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,32,77,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 32, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.905847 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,33,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,33,77,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 33, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.906362 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,34,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,34,77,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 34, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.907426 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,35,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,35,77,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 35, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.908108 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,36,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,36,77,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 36, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.908666 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,37,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,37,77,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 37, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.909192 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,38,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,38,77,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 38, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.909731 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,39,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,39,77,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 39, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.910298 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,4,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,4,77,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 4, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.910833 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,40,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,40,77,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 40, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.911363 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,41,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,41,77,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 41, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.911890 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,42,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,42,77,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 42, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.912412 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,43,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,43,77,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 43, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.912934 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,44,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,44,77,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 44, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.913451 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,45,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,45,77,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 45, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.913970 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,46,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,46,77,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 46, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.914484 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,47,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,47,77,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 47, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.915005 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,48,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,48,77,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 48, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.915534 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,49,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,49,77,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 49, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.916063 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,5,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,5,77,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 5, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.916577 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,50,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,50,77,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 50, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.917106 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,51,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,51,77,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 51, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.917632 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,52,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,52,77,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 52, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.918147 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,53,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,53,77,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 53, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.918685 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,54,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,54,77,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 54, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.919250 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,55,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,55,77,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 55, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.919808 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,56,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,56,77,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 56, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.920336 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,57,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,57,77,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 57, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.920857 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,58,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,58,77,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 58, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.921367 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,59,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,59,77,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 59, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.921888 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,6,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,6,77,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 6, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.922399 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,60,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,60,77,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 60, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.922925 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,61,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,61,77,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 61, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.923520 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,62,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,62,77,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 62, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.924088 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,63,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,63,77,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 63, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.924680 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,64,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,64,77,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 64, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.925216 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,65,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,65,77,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 65, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.925753 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,66,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,66,77,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 66, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.926261 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,67,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,67,77,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 67, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.926844 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,68,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,68,77,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 68, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.927428 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,69,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,69,77,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 69, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.928033 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,7,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,7,77,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 7, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.928615 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,70,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,70,77,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 70, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.929156 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,71,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,71,77,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 71, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.929680 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,72,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,72,77,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 72, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.930197 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,73,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,73,77,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 73, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.930719 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,74,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,74,77,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 74, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.931234 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,75,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,75,77,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 75, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.931824 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,76,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,76,77,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 76, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.932352 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 77, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.932871 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,78,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,78,77,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 78, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.933384 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,79,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,79,77,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 79, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.933906 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,8,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,8,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 8, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.934427 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,80,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,80,77,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 80, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.934945 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,81,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,81,77,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 81, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.935464 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,82,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,82,77,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 82, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.935980 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,83,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,83,77,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 83, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.936494 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,84,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,84,77,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 84, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.937144 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,85,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,85,77,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 85, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.937766 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,86,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,86,77,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 86, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.938363 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,87,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,87,77,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 87, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.939006 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,88,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,88,77,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 88, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.939554 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,89,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,89,77,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 89, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.940100 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,9,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,9,77,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 9, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.940619 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,90,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,90,77,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 90, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.941194 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,91,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,91,77,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 91, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.941777 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,92,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,92,77,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 92, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.942331 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,93,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,93,77,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 93, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.942885 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,94,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,94,77,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 94, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.943435 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,95,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,95,77,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 95, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.943992 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,96,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,96,77,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 96, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.944562 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,97,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,97,77,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 97, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.945129 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,98,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,98,77,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 98, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.945692 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,99,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 77],"bool"), list[4,8,99,77,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 99, 77].  Tensor sizes: [4, 1, 0, 77]
2025-03-05 15:23:01.946239 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 78],"bool"), list[4,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 78],"bool"), list[4,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 78, 78].  Tensor sizes: [4, 1, 0, 78]
2025-03-05 15:23:01.946788 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 79],"bool"), list[4,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 79],"bool"), list[4,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 79, 79].  Tensor sizes: [4, 1, 0, 79]
2025-03-05 15:23:01.947329 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 7],"bool"), list[4,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 7],"bool"), list[4,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 7, 7].  Tensor sizes: [4, 1, 0, 7]
2025-03-05 15:23:01.947879 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 80],"bool"), list[4,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 80],"bool"), list[4,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 80, 80].  Tensor sizes: [4, 1, 0, 80]
2025-03-05 15:23:01.948420 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 81],"bool"), list[4,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 81],"bool"), list[4,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 81, 81].  Tensor sizes: [4, 1, 0, 81]
2025-03-05 15:23:01.949016 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 82],"bool"), list[4,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 82],"bool"), list[4,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 82, 82].  Tensor sizes: [4, 1, 0, 82]
2025-03-05 15:23:01.949541 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 83],"bool"), list[4,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 83],"bool"), list[4,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 83, 83].  Tensor sizes: [4, 1, 0, 83]
2025-03-05 15:23:01.950077 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 84],"bool"), list[4,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 84],"bool"), list[4,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 84, 84].  Tensor sizes: [4, 1, 0, 84]
2025-03-05 15:23:01.950597 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 85],"bool"), list[4,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 85],"bool"), list[4,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 85, 85].  Tensor sizes: [4, 1, 0, 85]
2025-03-05 15:23:01.951124 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 86],"bool"), list[4,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 86],"bool"), list[4,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 86, 86].  Tensor sizes: [4, 1, 0, 86]
2025-03-05 15:23:01.951642 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 87],"bool"), list[4,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 87],"bool"), list[4,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 87, 87].  Tensor sizes: [4, 1, 0, 87]
2025-03-05 15:23:01.952179 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 88],"bool"), list[4,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 88],"bool"), list[4,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 88, 88].  Tensor sizes: [4, 1, 0, 88]
2025-03-05 15:23:01.952704 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 89],"bool"), list[4,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 89],"bool"), list[4,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 89, 89].  Tensor sizes: [4, 1, 0, 89]
2025-03-05 15:23:01.953212 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 8],"bool"), list[4,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 8],"bool"), list[4,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 8, 8].  Tensor sizes: [4, 1, 0, 8]
2025-03-05 15:23:01.953738 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 90],"bool"), list[4,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 90],"bool"), list[4,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 90, 90].  Tensor sizes: [4, 1, 0, 90]
2025-03-05 15:23:01.954247 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 91],"bool"), list[4,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 91],"bool"), list[4,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 91, 91].  Tensor sizes: [4, 1, 0, 91]
2025-03-05 15:23:01.954763 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 92],"bool"), list[4,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 92],"bool"), list[4,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 92, 92].  Tensor sizes: [4, 1, 0, 92]
2025-03-05 15:23:01.955278 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 93],"bool"), list[4,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 93],"bool"), list[4,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 93, 93].  Tensor sizes: [4, 1, 0, 93]
2025-03-05 15:23:01.955856 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 94],"bool"), list[4,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 94],"bool"), list[4,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 94, 94].  Tensor sizes: [4, 1, 0, 94]
2025-03-05 15:23:01.956429 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 95],"bool"), list[4,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 95],"bool"), list[4,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 95, 95].  Tensor sizes: [4, 1, 0, 95]
2025-03-05 15:23:01.957033 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 96],"bool"), list[4,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 96],"bool"), list[4,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 96, 96].  Tensor sizes: [4, 1, 0, 96]
2025-03-05 15:23:01.957606 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 97],"bool"), list[4,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 97],"bool"), list[4,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 97, 97].  Tensor sizes: [4, 1, 0, 97]
2025-03-05 15:23:01.958161 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 98],"bool"), list[4,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 98],"bool"), list[4,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 98, 98].  Tensor sizes: [4, 1, 0, 98]
2025-03-05 15:23:01.958743 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 99],"bool"), list[4,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 99],"bool"), list[4,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 99, 99].  Tensor sizes: [4, 1, 0, 99]
2025-03-05 15:23:01.959301 test begin: paddle.broadcast_to(Tensor([4, 1, 0, 9],"bool"), list[4,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0, 9],"bool"), list[4,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 8, 9, 9].  Tensor sizes: [4, 1, 0, 9]
2025-03-05 15:23:01.959851 test begin: paddle.broadcast_to(Tensor([4, 1, 0],"int32"), tuple(4,1,6,), )

[torch error] paddle.broadcast_to(Tensor([4, 1, 0],"int32"), tuple(4,1,6,), ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 1, 6].  Tensor sizes: [4, 1, 0]
2025-03-05 15:23:01.960488 test begin: paddle.broadcast_to(Tensor([4, 1, 1, 0],"bool"), list[4,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 1, 0],"bool"), list[4,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 1, 1].  Tensor sizes: [4, 1, 1, 0]
2025-03-05 15:23:01.961041 test begin: paddle.broadcast_to(Tensor([4, 1, 1, 0],"bool"), list[4,8,1,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 1, 0],"bool"), list[4,8,1,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 1, 13].  Tensor sizes: [4, 1, 1, 0]
2025-03-05 15:23:01.961577 test begin: paddle.broadcast_to(Tensor([4, 1, 1, 0],"bool"), list[4,8,1,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 1, 0],"bool"), list[4,8,1,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 1, 25].  Tensor sizes: [4, 1, 1, 0]
2025-03-05 15:23:01.962121 test begin: paddle.broadcast_to(Tensor([4, 1, 1, 0],"bool"), list[4,8,1,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 1, 0],"bool"), list[4,8,1,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 1, 37].  Tensor sizes: [4, 1, 1, 0]
2025-03-05 15:23:01.962700 test begin: paddle.broadcast_to(Tensor([4, 1, 1, 0],"bool"), list[4,8,1,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 1, 0],"bool"), list[4,8,1,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 1, 5].  Tensor sizes: [4, 1, 1, 0]
2025-03-05 15:23:01.963213 test begin: paddle.broadcast_to(Tensor([4, 1, 1, 0],"bool"), list[4,8,1,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 1, 0],"bool"), list[4,8,1,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 1, 61].  Tensor sizes: [4, 1, 1, 0]
2025-03-05 15:23:01.963744 test begin: paddle.broadcast_to(Tensor([4, 1, 1, 0],"bool"), list[4,8,1,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 1, 0],"bool"), list[4,8,1,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 1, 77].  Tensor sizes: [4, 1, 1, 0]
2025-03-05 15:23:01.964257 test begin: paddle.broadcast_to(Tensor([4, 1, 10, 0],"bool"), list[4,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 10, 0],"bool"), list[4,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 10, 10].  Tensor sizes: [4, 1, 10, 0]
2025-03-05 15:23:01.964780 test begin: paddle.broadcast_to(Tensor([4, 1, 10, 0],"bool"), list[4,8,10,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 10, 0],"bool"), list[4,8,10,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 10, 13].  Tensor sizes: [4, 1, 10, 0]
2025-03-05 15:23:01.965294 test begin: paddle.broadcast_to(Tensor([4, 1, 10, 0],"bool"), list[4,8,10,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 10, 0],"bool"), list[4,8,10,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 10, 25].  Tensor sizes: [4, 1, 10, 0]
2025-03-05 15:23:01.965809 test begin: paddle.broadcast_to(Tensor([4, 1, 10, 0],"bool"), list[4,8,10,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 10, 0],"bool"), list[4,8,10,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 10, 37].  Tensor sizes: [4, 1, 10, 0]
2025-03-05 15:23:01.966320 test begin: paddle.broadcast_to(Tensor([4, 1, 10, 0],"bool"), list[4,8,10,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 10, 0],"bool"), list[4,8,10,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 10, 5].  Tensor sizes: [4, 1, 10, 0]
2025-03-05 15:23:01.966841 test begin: paddle.broadcast_to(Tensor([4, 1, 10, 0],"bool"), list[4,8,10,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 10, 0],"bool"), list[4,8,10,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 10, 61].  Tensor sizes: [4, 1, 10, 0]
2025-03-05 15:23:01.967383 test begin: paddle.broadcast_to(Tensor([4, 1, 10, 0],"bool"), list[4,8,10,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 10, 0],"bool"), list[4,8,10,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 10, 77].  Tensor sizes: [4, 1, 10, 0]
2025-03-05 15:23:01.967994 test begin: paddle.broadcast_to(Tensor([4, 1, 100, 0],"bool"), list[4,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 100, 0],"bool"), list[4,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 100, 100].  Tensor sizes: [4, 1, 100, 0]
2025-03-05 15:23:01.968546 test begin: paddle.broadcast_to(Tensor([4, 1, 100, 0],"bool"), list[4,8,100,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 100, 0],"bool"), list[4,8,100,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 100, 61].  Tensor sizes: [4, 1, 100, 0]
2025-03-05 15:23:01.969108 test begin: paddle.broadcast_to(Tensor([4, 1, 100, 0],"bool"), list[4,8,100,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 100, 0],"bool"), list[4,8,100,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 100, 77].  Tensor sizes: [4, 1, 100, 0]
2025-03-05 15:23:01.969687 test begin: paddle.broadcast_to(Tensor([4, 1, 101, 0],"bool"), list[4,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 101, 0],"bool"), list[4,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 101, 101].  Tensor sizes: [4, 1, 101, 0]
2025-03-05 15:23:01.970281 test begin: paddle.broadcast_to(Tensor([4, 1, 101, 0],"bool"), list[4,8,101,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 101, 0],"bool"), list[4,8,101,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 101, 61].  Tensor sizes: [4, 1, 101, 0]
2025-03-05 15:23:01.970951 test begin: paddle.broadcast_to(Tensor([4, 1, 101, 0],"bool"), list[4,8,101,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 101, 0],"bool"), list[4,8,101,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 101, 77].  Tensor sizes: [4, 1, 101, 0]
2025-03-05 15:23:01.971525 test begin: paddle.broadcast_to(Tensor([4, 1, 102, 0],"bool"), list[4,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 102, 0],"bool"), list[4,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 102, 102].  Tensor sizes: [4, 1, 102, 0]
2025-03-05 15:23:01.972092 test begin: paddle.broadcast_to(Tensor([4, 1, 102, 0],"bool"), list[4,8,102,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 102, 0],"bool"), list[4,8,102,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 102, 61].  Tensor sizes: [4, 1, 102, 0]
2025-03-05 15:23:01.972653 test begin: paddle.broadcast_to(Tensor([4, 1, 102, 0],"bool"), list[4,8,102,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 102, 0],"bool"), list[4,8,102,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 102, 77].  Tensor sizes: [4, 1, 102, 0]
2025-03-05 15:23:01.973210 test begin: paddle.broadcast_to(Tensor([4, 1, 103, 0],"bool"), list[4,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 103, 0],"bool"), list[4,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 103, 103].  Tensor sizes: [4, 1, 103, 0]
2025-03-05 15:23:01.973766 test begin: paddle.broadcast_to(Tensor([4, 1, 103, 0],"bool"), list[4,8,103,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 103, 0],"bool"), list[4,8,103,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 103, 61].  Tensor sizes: [4, 1, 103, 0]
2025-03-05 15:23:01.974314 test begin: paddle.broadcast_to(Tensor([4, 1, 103, 0],"bool"), list[4,8,103,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 103, 0],"bool"), list[4,8,103,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 103, 77].  Tensor sizes: [4, 1, 103, 0]
2025-03-05 15:23:01.974866 test begin: paddle.broadcast_to(Tensor([4, 1, 104, 0],"bool"), list[4,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 104, 0],"bool"), list[4,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 104, 104].  Tensor sizes: [4, 1, 104, 0]
2025-03-05 15:23:01.975410 test begin: paddle.broadcast_to(Tensor([4, 1, 104, 0],"bool"), list[4,8,104,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 104, 0],"bool"), list[4,8,104,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 104, 61].  Tensor sizes: [4, 1, 104, 0]
2025-03-05 15:23:01.975971 test begin: paddle.broadcast_to(Tensor([4, 1, 104, 0],"bool"), list[4,8,104,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 104, 0],"bool"), list[4,8,104,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 104, 77].  Tensor sizes: [4, 1, 104, 0]
2025-03-05 15:23:01.976611 test begin: paddle.broadcast_to(Tensor([4, 1, 105, 0],"bool"), list[4,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 105, 0],"bool"), list[4,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 105, 105].  Tensor sizes: [4, 1, 105, 0]
2025-03-05 15:23:01.977770 test begin: paddle.broadcast_to(Tensor([4, 1, 105, 0],"bool"), list[4,8,105,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 105, 0],"bool"), list[4,8,105,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 105, 61].  Tensor sizes: [4, 1, 105, 0]
2025-03-05 15:23:01.978440 test begin: paddle.broadcast_to(Tensor([4, 1, 105, 0],"bool"), list[4,8,105,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 105, 0],"bool"), list[4,8,105,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 105, 77].  Tensor sizes: [4, 1, 105, 0]
2025-03-05 15:23:01.979028 test begin: paddle.broadcast_to(Tensor([4, 1, 106, 0],"bool"), list[4,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 106, 0],"bool"), list[4,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 106, 106].  Tensor sizes: [4, 1, 106, 0]
2025-03-05 15:23:01.979564 test begin: paddle.broadcast_to(Tensor([4, 1, 106, 0],"bool"), list[4,8,106,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 106, 0],"bool"), list[4,8,106,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 106, 61].  Tensor sizes: [4, 1, 106, 0]
2025-03-05 15:23:01.980115 test begin: paddle.broadcast_to(Tensor([4, 1, 106, 0],"bool"), list[4,8,106,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 106, 0],"bool"), list[4,8,106,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 106, 77].  Tensor sizes: [4, 1, 106, 0]
2025-03-05 15:23:01.980640 test begin: paddle.broadcast_to(Tensor([4, 1, 107, 0],"bool"), list[4,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 107, 0],"bool"), list[4,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 107, 107].  Tensor sizes: [4, 1, 107, 0]
2025-03-05 15:23:01.981208 test begin: paddle.broadcast_to(Tensor([4, 1, 107, 0],"bool"), list[4,8,107,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 107, 0],"bool"), list[4,8,107,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 107, 61].  Tensor sizes: [4, 1, 107, 0]
2025-03-05 15:23:01.981762 test begin: paddle.broadcast_to(Tensor([4, 1, 107, 0],"bool"), list[4,8,107,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 107, 0],"bool"), list[4,8,107,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 107, 77].  Tensor sizes: [4, 1, 107, 0]
2025-03-05 15:23:01.982286 test begin: paddle.broadcast_to(Tensor([4, 1, 108, 0],"bool"), list[4,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 108, 0],"bool"), list[4,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 108, 108].  Tensor sizes: [4, 1, 108, 0]
2025-03-05 15:23:01.982816 test begin: paddle.broadcast_to(Tensor([4, 1, 108, 0],"bool"), list[4,8,108,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 108, 0],"bool"), list[4,8,108,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 108, 61].  Tensor sizes: [4, 1, 108, 0]
2025-03-05 15:23:01.983348 test begin: paddle.broadcast_to(Tensor([4, 1, 108, 0],"bool"), list[4,8,108,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 108, 0],"bool"), list[4,8,108,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 108, 77].  Tensor sizes: [4, 1, 108, 0]
2025-03-05 15:23:01.983879 test begin: paddle.broadcast_to(Tensor([4, 1, 109, 0],"bool"), list[4,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 109, 0],"bool"), list[4,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 109, 109].  Tensor sizes: [4, 1, 109, 0]
2025-03-05 15:23:01.984396 test begin: paddle.broadcast_to(Tensor([4, 1, 109, 0],"bool"), list[4,8,109,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 109, 0],"bool"), list[4,8,109,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 109, 61].  Tensor sizes: [4, 1, 109, 0]
2025-03-05 15:23:01.984921 test begin: paddle.broadcast_to(Tensor([4, 1, 109, 0],"bool"), list[4,8,109,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 109, 0],"bool"), list[4,8,109,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 109, 77].  Tensor sizes: [4, 1, 109, 0]
2025-03-05 15:23:01.985436 test begin: paddle.broadcast_to(Tensor([4, 1, 11, 0],"bool"), list[4,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 11, 0],"bool"), list[4,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 11, 11].  Tensor sizes: [4, 1, 11, 0]
2025-03-05 15:23:01.985956 test begin: paddle.broadcast_to(Tensor([4, 1, 11, 0],"bool"), list[4,8,11,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 11, 0],"bool"), list[4,8,11,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 11, 13].  Tensor sizes: [4, 1, 11, 0]
2025-03-05 15:23:01.986476 test begin: paddle.broadcast_to(Tensor([4, 1, 11, 0],"bool"), list[4,8,11,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 11, 0],"bool"), list[4,8,11,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 11, 25].  Tensor sizes: [4, 1, 11, 0]
2025-03-05 15:23:01.987035 test begin: paddle.broadcast_to(Tensor([4, 1, 11, 0],"bool"), list[4,8,11,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 11, 0],"bool"), list[4,8,11,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 11, 37].  Tensor sizes: [4, 1, 11, 0]
2025-03-05 15:23:01.987555 test begin: paddle.broadcast_to(Tensor([4, 1, 11, 0],"bool"), list[4,8,11,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 11, 0],"bool"), list[4,8,11,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 11, 5].  Tensor sizes: [4, 1, 11, 0]
2025-03-05 15:23:01.988075 test begin: paddle.broadcast_to(Tensor([4, 1, 11, 0],"bool"), list[4,8,11,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 11, 0],"bool"), list[4,8,11,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 11, 61].  Tensor sizes: [4, 1, 11, 0]
2025-03-05 15:23:01.988589 test begin: paddle.broadcast_to(Tensor([4, 1, 11, 0],"bool"), list[4,8,11,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 11, 0],"bool"), list[4,8,11,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 11, 77].  Tensor sizes: [4, 1, 11, 0]
2025-03-05 15:23:01.989101 test begin: paddle.broadcast_to(Tensor([4, 1, 110, 0],"bool"), list[4,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 110, 0],"bool"), list[4,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 110, 110].  Tensor sizes: [4, 1, 110, 0]
2025-03-05 15:23:01.989617 test begin: paddle.broadcast_to(Tensor([4, 1, 110, 0],"bool"), list[4,8,110,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 110, 0],"bool"), list[4,8,110,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 110, 61].  Tensor sizes: [4, 1, 110, 0]
2025-03-05 15:23:01.990139 test begin: paddle.broadcast_to(Tensor([4, 1, 110, 0],"bool"), list[4,8,110,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 110, 0],"bool"), list[4,8,110,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 110, 77].  Tensor sizes: [4, 1, 110, 0]
2025-03-05 15:23:01.990745 test begin: paddle.broadcast_to(Tensor([4, 1, 111, 0],"bool"), list[4,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 111, 0],"bool"), list[4,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 111, 111].  Tensor sizes: [4, 1, 111, 0]
2025-03-05 15:23:01.991274 test begin: paddle.broadcast_to(Tensor([4, 1, 111, 0],"bool"), list[4,8,111,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 111, 0],"bool"), list[4,8,111,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 111, 61].  Tensor sizes: [4, 1, 111, 0]
2025-03-05 15:23:01.991874 test begin: paddle.broadcast_to(Tensor([4, 1, 111, 0],"bool"), list[4,8,111,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 111, 0],"bool"), list[4,8,111,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 111, 77].  Tensor sizes: [4, 1, 111, 0]
2025-03-05 15:23:01.992846 test begin: paddle.broadcast_to(Tensor([4, 1, 112, 0],"bool"), list[4,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 112, 0],"bool"), list[4,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 112, 112].  Tensor sizes: [4, 1, 112, 0]
2025-03-05 15:23:01.993483 test begin: paddle.broadcast_to(Tensor([4, 1, 112, 0],"bool"), list[4,8,112,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 112, 0],"bool"), list[4,8,112,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 112, 61].  Tensor sizes: [4, 1, 112, 0]
2025-03-05 15:23:01.994099 test begin: paddle.broadcast_to(Tensor([4, 1, 112, 0],"bool"), list[4,8,112,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 112, 0],"bool"), list[4,8,112,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 112, 77].  Tensor sizes: [4, 1, 112, 0]
2025-03-05 15:23:01.994723 test begin: paddle.broadcast_to(Tensor([4, 1, 113, 0],"bool"), list[4,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 113, 0],"bool"), list[4,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 113, 113].  Tensor sizes: [4, 1, 113, 0]
2025-03-05 15:23:01.995328 test begin: paddle.broadcast_to(Tensor([4, 1, 113, 0],"bool"), list[4,8,113,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 113, 0],"bool"), list[4,8,113,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 113, 61].  Tensor sizes: [4, 1, 113, 0]
2025-03-05 15:23:01.995930 test begin: paddle.broadcast_to(Tensor([4, 1, 113, 0],"bool"), list[4,8,113,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 113, 0],"bool"), list[4,8,113,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 113, 77].  Tensor sizes: [4, 1, 113, 0]
2025-03-05 15:23:01.996526 test begin: paddle.broadcast_to(Tensor([4, 1, 114, 0],"bool"), list[4,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 114, 0],"bool"), list[4,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 114, 114].  Tensor sizes: [4, 1, 114, 0]
2025-03-05 15:23:01.997156 test begin: paddle.broadcast_to(Tensor([4, 1, 114, 0],"bool"), list[4,8,114,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 114, 0],"bool"), list[4,8,114,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 114, 61].  Tensor sizes: [4, 1, 114, 0]
2025-03-05 15:23:01.997754 test begin: paddle.broadcast_to(Tensor([4, 1, 114, 0],"bool"), list[4,8,114,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 114, 0],"bool"), list[4,8,114,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 114, 77].  Tensor sizes: [4, 1, 114, 0]
2025-03-05 15:23:01.998347 test begin: paddle.broadcast_to(Tensor([4, 1, 115, 0],"bool"), list[4,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 115, 0],"bool"), list[4,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 115, 115].  Tensor sizes: [4, 1, 115, 0]
2025-03-05 15:23:01.998945 test begin: paddle.broadcast_to(Tensor([4, 1, 115, 0],"bool"), list[4,8,115,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 115, 0],"bool"), list[4,8,115,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 115, 61].  Tensor sizes: [4, 1, 115, 0]
2025-03-05 15:23:01.999546 test begin: paddle.broadcast_to(Tensor([4, 1, 115, 0],"bool"), list[4,8,115,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 115, 0],"bool"), list[4,8,115,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 115, 77].  Tensor sizes: [4, 1, 115, 0]
2025-03-05 15:23:02.000150 test begin: paddle.broadcast_to(Tensor([4, 1, 116, 0],"bool"), list[4,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 116, 0],"bool"), list[4,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 116, 116].  Tensor sizes: [4, 1, 116, 0]
2025-03-05 15:23:02.001134 test begin: paddle.broadcast_to(Tensor([4, 1, 116, 0],"bool"), list[4,8,116,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 116, 0],"bool"), list[4,8,116,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 116, 61].  Tensor sizes: [4, 1, 116, 0]
2025-03-05 15:23:02.001802 test begin: paddle.broadcast_to(Tensor([4, 1, 116, 0],"bool"), list[4,8,116,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 116, 0],"bool"), list[4,8,116,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 116, 77].  Tensor sizes: [4, 1, 116, 0]
2025-03-05 15:23:02.002417 test begin: paddle.broadcast_to(Tensor([4, 1, 117, 0],"bool"), list[4,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 117, 0],"bool"), list[4,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 117, 117].  Tensor sizes: [4, 1, 117, 0]
2025-03-05 15:23:02.003046 test begin: paddle.broadcast_to(Tensor([4, 1, 117, 0],"bool"), list[4,8,117,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 117, 0],"bool"), list[4,8,117,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 117, 61].  Tensor sizes: [4, 1, 117, 0]
2025-03-05 15:23:02.003750 test begin: paddle.broadcast_to(Tensor([4, 1, 117, 0],"bool"), list[4,8,117,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 117, 0],"bool"), list[4,8,117,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 117, 77].  Tensor sizes: [4, 1, 117, 0]
2025-03-05 15:23:02.004366 test begin: paddle.broadcast_to(Tensor([4, 1, 118, 0],"bool"), list[4,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 118, 0],"bool"), list[4,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 118, 118].  Tensor sizes: [4, 1, 118, 0]
2025-03-05 15:23:02.004979 test begin: paddle.broadcast_to(Tensor([4, 1, 118, 0],"bool"), list[4,8,118,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 118, 0],"bool"), list[4,8,118,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 118, 61].  Tensor sizes: [4, 1, 118, 0]
2025-03-05 15:23:02.005606 test begin: paddle.broadcast_to(Tensor([4, 1, 118, 0],"bool"), list[4,8,118,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 118, 0],"bool"), list[4,8,118,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 118, 77].  Tensor sizes: [4, 1, 118, 0]
2025-03-05 15:23:02.006211 test begin: paddle.broadcast_to(Tensor([4, 1, 119, 0],"bool"), list[4,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 119, 0],"bool"), list[4,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 119, 119].  Tensor sizes: [4, 1, 119, 0]
2025-03-05 15:23:02.006832 test begin: paddle.broadcast_to(Tensor([4, 1, 119, 0],"bool"), list[4,8,119,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 119, 0],"bool"), list[4,8,119,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 119, 61].  Tensor sizes: [4, 1, 119, 0]
2025-03-05 15:23:02.007432 test begin: paddle.broadcast_to(Tensor([4, 1, 119, 0],"bool"), list[4,8,119,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 119, 0],"bool"), list[4,8,119,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 119, 77].  Tensor sizes: [4, 1, 119, 0]
2025-03-05 15:23:02.008139 test begin: paddle.broadcast_to(Tensor([4, 1, 12, 0],"bool"), list[4,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 12, 0],"bool"), list[4,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 12, 12].  Tensor sizes: [4, 1, 12, 0]
2025-03-05 15:23:02.008792 test begin: paddle.broadcast_to(Tensor([4, 1, 12, 0],"bool"), list[4,8,12,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 12, 0],"bool"), list[4,8,12,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 12, 13].  Tensor sizes: [4, 1, 12, 0]
2025-03-05 15:23:02.009424 test begin: paddle.broadcast_to(Tensor([4, 1, 12, 0],"bool"), list[4,8,12,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 12, 0],"bool"), list[4,8,12,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 12, 25].  Tensor sizes: [4, 1, 12, 0]
2025-03-05 15:23:02.010055 test begin: paddle.broadcast_to(Tensor([4, 1, 12, 0],"bool"), list[4,8,12,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 12, 0],"bool"), list[4,8,12,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 12, 37].  Tensor sizes: [4, 1, 12, 0]
2025-03-05 15:23:02.010701 test begin: paddle.broadcast_to(Tensor([4, 1, 12, 0],"bool"), list[4,8,12,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 12, 0],"bool"), list[4,8,12,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 12, 5].  Tensor sizes: [4, 1, 12, 0]
2025-03-05 15:23:02.011727 test begin: paddle.broadcast_to(Tensor([4, 1, 12, 0],"bool"), list[4,8,12,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 12, 0],"bool"), list[4,8,12,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 12, 61].  Tensor sizes: [4, 1, 12, 0]
2025-03-05 15:23:02.012517 test begin: paddle.broadcast_to(Tensor([4, 1, 12, 0],"bool"), list[4,8,12,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 12, 0],"bool"), list[4,8,12,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 12, 77].  Tensor sizes: [4, 1, 12, 0]
2025-03-05 15:23:02.013244 test begin: paddle.broadcast_to(Tensor([4, 1, 120, 0],"bool"), list[4,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 120, 0],"bool"), list[4,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 120, 120].  Tensor sizes: [4, 1, 120, 0]
2025-03-05 15:23:02.013826 test begin: paddle.broadcast_to(Tensor([4, 1, 120, 0],"bool"), list[4,8,120,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 120, 0],"bool"), list[4,8,120,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 120, 61].  Tensor sizes: [4, 1, 120, 0]
2025-03-05 15:23:02.014549 test begin: paddle.broadcast_to(Tensor([4, 1, 120, 0],"bool"), list[4,8,120,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 120, 0],"bool"), list[4,8,120,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 120, 77].  Tensor sizes: [4, 1, 120, 0]
2025-03-05 15:23:02.015277 test begin: paddle.broadcast_to(Tensor([4, 1, 121, 0],"bool"), list[4,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 121, 0],"bool"), list[4,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 121, 121].  Tensor sizes: [4, 1, 121, 0]
2025-03-05 15:23:02.016022 test begin: paddle.broadcast_to(Tensor([4, 1, 121, 0],"bool"), list[4,8,121,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 121, 0],"bool"), list[4,8,121,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 121, 61].  Tensor sizes: [4, 1, 121, 0]
2025-03-05 15:23:02.016704 test begin: paddle.broadcast_to(Tensor([4, 1, 121, 0],"bool"), list[4,8,121,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 121, 0],"bool"), list[4,8,121,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 121, 77].  Tensor sizes: [4, 1, 121, 0]
2025-03-05 15:23:02.017348 test begin: paddle.broadcast_to(Tensor([4, 1, 122, 0],"bool"), list[4,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 122, 0],"bool"), list[4,8,122,122,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 122, 122].  Tensor sizes: [4, 1, 122, 0]
2025-03-05 15:23:02.017984 test begin: paddle.broadcast_to(Tensor([4, 1, 122, 0],"bool"), list[4,8,122,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 122, 0],"bool"), list[4,8,122,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 122, 61].  Tensor sizes: [4, 1, 122, 0]
2025-03-05 15:23:02.018656 test begin: paddle.broadcast_to(Tensor([4, 1, 122, 0],"bool"), list[4,8,122,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 122, 0],"bool"), list[4,8,122,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 122, 77].  Tensor sizes: [4, 1, 122, 0]
2025-03-05 15:23:02.019316 test begin: paddle.broadcast_to(Tensor([4, 1, 123, 0],"bool"), list[4,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 123, 0],"bool"), list[4,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 123, 123].  Tensor sizes: [4, 1, 123, 0]
2025-03-05 15:23:02.019956 test begin: paddle.broadcast_to(Tensor([4, 1, 123, 0],"bool"), list[4,8,123,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 123, 0],"bool"), list[4,8,123,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 123, 61].  Tensor sizes: [4, 1, 123, 0]
2025-03-05 15:23:02.020603 test begin: paddle.broadcast_to(Tensor([4, 1, 123, 0],"bool"), list[4,8,123,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 123, 0],"bool"), list[4,8,123,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 123, 77].  Tensor sizes: [4, 1, 123, 0]
2025-03-05 15:23:02.021234 test begin: paddle.broadcast_to(Tensor([4, 1, 124, 0],"bool"), list[4,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 124, 0],"bool"), list[4,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 124, 124].  Tensor sizes: [4, 1, 124, 0]
2025-03-05 15:23:02.021867 test begin: paddle.broadcast_to(Tensor([4, 1, 124, 0],"bool"), list[4,8,124,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 124, 0],"bool"), list[4,8,124,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 124, 61].  Tensor sizes: [4, 1, 124, 0]
2025-03-05 15:23:02.022484 test begin: paddle.broadcast_to(Tensor([4, 1, 124, 0],"bool"), list[4,8,124,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 124, 0],"bool"), list[4,8,124,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 124, 77].  Tensor sizes: [4, 1, 124, 0]
2025-03-05 15:23:02.023117 test begin: paddle.broadcast_to(Tensor([4, 1, 125, 0],"bool"), list[4,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 125, 0],"bool"), list[4,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 125, 125].  Tensor sizes: [4, 1, 125, 0]
2025-03-05 15:23:02.023756 test begin: paddle.broadcast_to(Tensor([4, 1, 125, 0],"bool"), list[4,8,125,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 125, 0],"bool"), list[4,8,125,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 125, 61].  Tensor sizes: [4, 1, 125, 0]
2025-03-05 15:23:02.024382 test begin: paddle.broadcast_to(Tensor([4, 1, 125, 0],"bool"), list[4,8,125,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 125, 0],"bool"), list[4,8,125,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 125, 77].  Tensor sizes: [4, 1, 125, 0]
2025-03-05 15:23:02.025033 test begin: paddle.broadcast_to(Tensor([4, 1, 126, 0],"bool"), list[4,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 126, 0],"bool"), list[4,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 126, 126].  Tensor sizes: [4, 1, 126, 0]
2025-03-05 15:23:02.025677 test begin: paddle.broadcast_to(Tensor([4, 1, 126, 0],"bool"), list[4,8,126,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 126, 0],"bool"), list[4,8,126,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 126, 61].  Tensor sizes: [4, 1, 126, 0]
2025-03-05 15:23:02.026508 test begin: paddle.broadcast_to(Tensor([4, 1, 126, 0],"bool"), list[4,8,126,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 126, 0],"bool"), list[4,8,126,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 126, 77].  Tensor sizes: [4, 1, 126, 0]
2025-03-05 15:23:02.027073 test begin: paddle.broadcast_to(Tensor([4, 1, 127, 0],"bool"), list[4,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 127, 0],"bool"), list[4,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 127, 127].  Tensor sizes: [4, 1, 127, 0]
2025-03-05 15:23:02.027608 test begin: paddle.broadcast_to(Tensor([4, 1, 127, 0],"bool"), list[4,8,127,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 127, 0],"bool"), list[4,8,127,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 127, 61].  Tensor sizes: [4, 1, 127, 0]
2025-03-05 15:23:02.028139 test begin: paddle.broadcast_to(Tensor([4, 1, 127, 0],"bool"), list[4,8,127,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 127, 0],"bool"), list[4,8,127,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 127, 77].  Tensor sizes: [4, 1, 127, 0]
2025-03-05 15:23:02.028689 test begin: paddle.broadcast_to(Tensor([4, 1, 128, 0],"bool"), list[4,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 128, 0],"bool"), list[4,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 128, 128].  Tensor sizes: [4, 1, 128, 0]
2025-03-05 15:23:02.029259 test begin: paddle.broadcast_to(Tensor([4, 1, 128, 0],"bool"), list[4,8,128,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 128, 0],"bool"), list[4,8,128,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 128, 61].  Tensor sizes: [4, 1, 128, 0]
2025-03-05 15:23:02.029802 test begin: paddle.broadcast_to(Tensor([4, 1, 128, 0],"bool"), list[4,8,128,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 128, 0],"bool"), list[4,8,128,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 128, 77].  Tensor sizes: [4, 1, 128, 0]
2025-03-05 15:23:02.030319 test begin: paddle.broadcast_to(Tensor([4, 1, 129, 0],"bool"), list[4,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 129, 0],"bool"), list[4,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 129, 129].  Tensor sizes: [4, 1, 129, 0]
2025-03-05 15:23:02.030854 test begin: paddle.broadcast_to(Tensor([4, 1, 129, 0],"bool"), list[4,8,129,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 129, 0],"bool"), list[4,8,129,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 129, 61].  Tensor sizes: [4, 1, 129, 0]
2025-03-05 15:23:02.031372 test begin: paddle.broadcast_to(Tensor([4, 1, 129, 0],"bool"), list[4,8,129,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 129, 0],"bool"), list[4,8,129,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 129, 77].  Tensor sizes: [4, 1, 129, 0]
2025-03-05 15:23:02.031883 test begin: paddle.broadcast_to(Tensor([4, 1, 13, 0],"bool"), list[4,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 13, 0],"bool"), list[4,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 13, 13].  Tensor sizes: [4, 1, 13, 0]
2025-03-05 15:23:02.032408 test begin: paddle.broadcast_to(Tensor([4, 1, 13, 0],"bool"), list[4,8,13,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 13, 0],"bool"), list[4,8,13,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 13, 25].  Tensor sizes: [4, 1, 13, 0]
2025-03-05 15:23:02.032946 test begin: paddle.broadcast_to(Tensor([4, 1, 13, 0],"bool"), list[4,8,13,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 13, 0],"bool"), list[4,8,13,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 13, 37].  Tensor sizes: [4, 1, 13, 0]
2025-03-05 15:23:02.033467 test begin: paddle.broadcast_to(Tensor([4, 1, 13, 0],"bool"), list[4,8,13,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 13, 0],"bool"), list[4,8,13,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 13, 5].  Tensor sizes: [4, 1, 13, 0]
2025-03-05 15:23:02.033997 test begin: paddle.broadcast_to(Tensor([4, 1, 13, 0],"bool"), list[4,8,13,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 13, 0],"bool"), list[4,8,13,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 13, 61].  Tensor sizes: [4, 1, 13, 0]
2025-03-05 15:23:02.034510 test begin: paddle.broadcast_to(Tensor([4, 1, 13, 0],"bool"), list[4,8,13,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 13, 0],"bool"), list[4,8,13,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 13, 77].  Tensor sizes: [4, 1, 13, 0]
2025-03-05 15:23:02.035035 test begin: paddle.broadcast_to(Tensor([4, 1, 130, 0],"bool"), list[4,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 130, 0],"bool"), list[4,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 130, 130].  Tensor sizes: [4, 1, 130, 0]
2025-03-05 15:23:02.035572 test begin: paddle.broadcast_to(Tensor([4, 1, 130, 0],"bool"), list[4,8,130,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 130, 0],"bool"), list[4,8,130,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 130, 61].  Tensor sizes: [4, 1, 130, 0]
2025-03-05 15:23:02.036106 test begin: paddle.broadcast_to(Tensor([4, 1, 130, 0],"bool"), list[4,8,130,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 130, 0],"bool"), list[4,8,130,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 130, 77].  Tensor sizes: [4, 1, 130, 0]
2025-03-05 15:23:02.036623 test begin: paddle.broadcast_to(Tensor([4, 1, 131, 0],"bool"), list[4,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 131, 0],"bool"), list[4,8,131,131,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 131, 131].  Tensor sizes: [4, 1, 131, 0]
2025-03-05 15:23:02.037143 test begin: paddle.broadcast_to(Tensor([4, 1, 131, 0],"bool"), list[4,8,131,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 131, 0],"bool"), list[4,8,131,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 131, 61].  Tensor sizes: [4, 1, 131, 0]
2025-03-05 15:23:02.037659 test begin: paddle.broadcast_to(Tensor([4, 1, 131, 0],"bool"), list[4,8,131,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 131, 0],"bool"), list[4,8,131,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 131, 77].  Tensor sizes: [4, 1, 131, 0]
2025-03-05 15:23:02.038188 test begin: paddle.broadcast_to(Tensor([4, 1, 132, 0],"bool"), list[4,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 132, 0],"bool"), list[4,8,132,132,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 132, 132].  Tensor sizes: [4, 1, 132, 0]
2025-03-05 15:23:02.038720 test begin: paddle.broadcast_to(Tensor([4, 1, 132, 0],"bool"), list[4,8,132,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 132, 0],"bool"), list[4,8,132,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 132, 61].  Tensor sizes: [4, 1, 132, 0]
2025-03-05 15:23:02.039231 test begin: paddle.broadcast_to(Tensor([4, 1, 132, 0],"bool"), list[4,8,132,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 132, 0],"bool"), list[4,8,132,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 132, 77].  Tensor sizes: [4, 1, 132, 0]
2025-03-05 15:23:02.039754 test begin: paddle.broadcast_to(Tensor([4, 1, 133, 0],"bool"), list[4,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 133, 0],"bool"), list[4,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 133, 133].  Tensor sizes: [4, 1, 133, 0]
2025-03-05 15:23:02.040562 test begin: paddle.broadcast_to(Tensor([4, 1, 133, 0],"bool"), list[4,8,133,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 133, 0],"bool"), list[4,8,133,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 133, 61].  Tensor sizes: [4, 1, 133, 0]
2025-03-05 15:23:02.041260 test begin: paddle.broadcast_to(Tensor([4, 1, 133, 0],"bool"), list[4,8,133,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 133, 0],"bool"), list[4,8,133,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 133, 77].  Tensor sizes: [4, 1, 133, 0]
2025-03-05 15:23:02.041909 test begin: paddle.broadcast_to(Tensor([4, 1, 134, 0],"bool"), list[4,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 134, 0],"bool"), list[4,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 134, 134].  Tensor sizes: [4, 1, 134, 0]
2025-03-05 15:23:02.042541 test begin: paddle.broadcast_to(Tensor([4, 1, 134, 0],"bool"), list[4,8,134,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 134, 0],"bool"), list[4,8,134,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 134, 61].  Tensor sizes: [4, 1, 134, 0]
2025-03-05 15:23:02.043152 test begin: paddle.broadcast_to(Tensor([4, 1, 134, 0],"bool"), list[4,8,134,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 134, 0],"bool"), list[4,8,134,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 134, 77].  Tensor sizes: [4, 1, 134, 0]
2025-03-05 15:23:02.043696 test begin: paddle.broadcast_to(Tensor([4, 1, 135, 0],"bool"), list[4,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 135, 0],"bool"), list[4,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 135, 135].  Tensor sizes: [4, 1, 135, 0]
2025-03-05 15:23:02.044228 test begin: paddle.broadcast_to(Tensor([4, 1, 135, 0],"bool"), list[4,8,135,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 135, 0],"bool"), list[4,8,135,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 135, 61].  Tensor sizes: [4, 1, 135, 0]
2025-03-05 15:23:02.044770 test begin: paddle.broadcast_to(Tensor([4, 1, 135, 0],"bool"), list[4,8,135,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 135, 0],"bool"), list[4,8,135,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 135, 77].  Tensor sizes: [4, 1, 135, 0]
2025-03-05 15:23:02.045301 test begin: paddle.broadcast_to(Tensor([4, 1, 136, 0],"bool"), list[4,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 136, 0],"bool"), list[4,8,136,136,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 136, 136].  Tensor sizes: [4, 1, 136, 0]
2025-03-05 15:23:02.045832 test begin: paddle.broadcast_to(Tensor([4, 1, 136, 0],"bool"), list[4,8,136,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 136, 0],"bool"), list[4,8,136,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 136, 61].  Tensor sizes: [4, 1, 136, 0]
2025-03-05 15:23:02.046344 test begin: paddle.broadcast_to(Tensor([4, 1, 136, 0],"bool"), list[4,8,136,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 136, 0],"bool"), list[4,8,136,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 136, 77].  Tensor sizes: [4, 1, 136, 0]
2025-03-05 15:23:02.046896 test begin: paddle.broadcast_to(Tensor([4, 1, 137, 0],"bool"), list[4,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 137, 0],"bool"), list[4,8,137,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 137, 137].  Tensor sizes: [4, 1, 137, 0]
2025-03-05 15:23:02.047419 test begin: paddle.broadcast_to(Tensor([4, 1, 137, 0],"bool"), list[4,8,137,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 137, 0],"bool"), list[4,8,137,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 137, 61].  Tensor sizes: [4, 1, 137, 0]
2025-03-05 15:23:02.047941 test begin: paddle.broadcast_to(Tensor([4, 1, 137, 0],"bool"), list[4,8,137,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 137, 0],"bool"), list[4,8,137,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 137, 77].  Tensor sizes: [4, 1, 137, 0]
2025-03-05 15:23:02.048455 test begin: paddle.broadcast_to(Tensor([4, 1, 138, 0],"bool"), list[4,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 138, 0],"bool"), list[4,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 138, 138].  Tensor sizes: [4, 1, 138, 0]
2025-03-05 15:23:02.048962 test begin: paddle.broadcast_to(Tensor([4, 1, 138, 0],"bool"), list[4,8,138,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 138, 0],"bool"), list[4,8,138,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 138, 77].  Tensor sizes: [4, 1, 138, 0]
2025-03-05 15:23:02.049480 test begin: paddle.broadcast_to(Tensor([4, 1, 139, 0],"bool"), list[4,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 139, 0],"bool"), list[4,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 139, 139].  Tensor sizes: [4, 1, 139, 0]
2025-03-05 15:23:02.050009 test begin: paddle.broadcast_to(Tensor([4, 1, 139, 0],"bool"), list[4,8,139,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 139, 0],"bool"), list[4,8,139,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 139, 77].  Tensor sizes: [4, 1, 139, 0]
2025-03-05 15:23:02.050518 test begin: paddle.broadcast_to(Tensor([4, 1, 14, 0],"bool"), list[4,8,14,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 14, 0],"bool"), list[4,8,14,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 14, 13].  Tensor sizes: [4, 1, 14, 0]
2025-03-05 15:23:02.051039 test begin: paddle.broadcast_to(Tensor([4, 1, 14, 0],"bool"), list[4,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 14, 0],"bool"), list[4,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 14, 14].  Tensor sizes: [4, 1, 14, 0]
2025-03-05 15:23:02.051561 test begin: paddle.broadcast_to(Tensor([4, 1, 14, 0],"bool"), list[4,8,14,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 14, 0],"bool"), list[4,8,14,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 14, 25].  Tensor sizes: [4, 1, 14, 0]
2025-03-05 15:23:02.052096 test begin: paddle.broadcast_to(Tensor([4, 1, 14, 0],"bool"), list[4,8,14,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 14, 0],"bool"), list[4,8,14,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 14, 37].  Tensor sizes: [4, 1, 14, 0]
2025-03-05 15:23:02.052678 test begin: paddle.broadcast_to(Tensor([4, 1, 14, 0],"bool"), list[4,8,14,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 14, 0],"bool"), list[4,8,14,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 14, 61].  Tensor sizes: [4, 1, 14, 0]
2025-03-05 15:23:02.053205 test begin: paddle.broadcast_to(Tensor([4, 1, 14, 0],"bool"), list[4,8,14,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 14, 0],"bool"), list[4,8,14,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 14, 77].  Tensor sizes: [4, 1, 14, 0]
2025-03-05 15:23:02.053727 test begin: paddle.broadcast_to(Tensor([4, 1, 140, 0],"bool"), list[4,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 140, 0],"bool"), list[4,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 140, 140].  Tensor sizes: [4, 1, 140, 0]
2025-03-05 15:23:02.054232 test begin: paddle.broadcast_to(Tensor([4, 1, 140, 0],"bool"), list[4,8,140,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 140, 0],"bool"), list[4,8,140,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 140, 77].  Tensor sizes: [4, 1, 140, 0]
2025-03-05 15:23:02.054752 test begin: paddle.broadcast_to(Tensor([4, 1, 141, 0],"bool"), list[4,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 141, 0],"bool"), list[4,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 141, 141].  Tensor sizes: [4, 1, 141, 0]
2025-03-05 15:23:02.055302 test begin: paddle.broadcast_to(Tensor([4, 1, 141, 0],"bool"), list[4,8,141,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 141, 0],"bool"), list[4,8,141,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 141, 77].  Tensor sizes: [4, 1, 141, 0]
2025-03-05 15:23:02.055835 test begin: paddle.broadcast_to(Tensor([4, 1, 142, 0],"bool"), list[4,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 142, 0],"bool"), list[4,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 142, 142].  Tensor sizes: [4, 1, 142, 0]
2025-03-05 15:23:02.056347 test begin: paddle.broadcast_to(Tensor([4, 1, 142, 0],"bool"), list[4,8,142,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 142, 0],"bool"), list[4,8,142,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 142, 77].  Tensor sizes: [4, 1, 142, 0]
2025-03-05 15:23:02.056869 test begin: paddle.broadcast_to(Tensor([4, 1, 143, 0],"bool"), list[4,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 143, 0],"bool"), list[4,8,143,143,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 143, 143].  Tensor sizes: [4, 1, 143, 0]
2025-03-05 15:23:02.057388 test begin: paddle.broadcast_to(Tensor([4, 1, 143, 0],"bool"), list[4,8,143,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 143, 0],"bool"), list[4,8,143,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 143, 77].  Tensor sizes: [4, 1, 143, 0]
2025-03-05 15:23:02.057908 test begin: paddle.broadcast_to(Tensor([4, 1, 144, 0],"bool"), list[4,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 144, 0],"bool"), list[4,8,144,144,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 144, 144].  Tensor sizes: [4, 1, 144, 0]
2025-03-05 15:23:02.058412 test begin: paddle.broadcast_to(Tensor([4, 1, 144, 0],"bool"), list[4,8,144,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 144, 0],"bool"), list[4,8,144,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 144, 77].  Tensor sizes: [4, 1, 144, 0]
2025-03-05 15:23:02.058934 test begin: paddle.broadcast_to(Tensor([4, 1, 145, 0],"bool"), list[4,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 145, 0],"bool"), list[4,8,145,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 145, 145].  Tensor sizes: [4, 1, 145, 0]
2025-03-05 15:23:02.059444 test begin: paddle.broadcast_to(Tensor([4, 1, 145, 0],"bool"), list[4,8,145,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 145, 0],"bool"), list[4,8,145,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 145, 77].  Tensor sizes: [4, 1, 145, 0]
2025-03-05 15:23:02.059986 test begin: paddle.broadcast_to(Tensor([4, 1, 146, 0],"bool"), list[4,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 146, 0],"bool"), list[4,8,146,146,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 146, 146].  Tensor sizes: [4, 1, 146, 0]
2025-03-05 15:23:02.060499 test begin: paddle.broadcast_to(Tensor([4, 1, 146, 0],"bool"), list[4,8,146,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 146, 0],"bool"), list[4,8,146,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 146, 77].  Tensor sizes: [4, 1, 146, 0]
2025-03-05 15:23:02.061022 test begin: paddle.broadcast_to(Tensor([4, 1, 147, 0],"bool"), list[4,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 147, 0],"bool"), list[4,8,147,147,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 147, 147].  Tensor sizes: [4, 1, 147, 0]
2025-03-05 15:23:02.061537 test begin: paddle.broadcast_to(Tensor([4, 1, 147, 0],"bool"), list[4,8,147,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 147, 0],"bool"), list[4,8,147,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 147, 77].  Tensor sizes: [4, 1, 147, 0]
2025-03-05 15:23:02.062065 test begin: paddle.broadcast_to(Tensor([4, 1, 148, 0],"bool"), list[4,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 148, 0],"bool"), list[4,8,148,148,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 148, 148].  Tensor sizes: [4, 1, 148, 0]
2025-03-05 15:23:02.062564 test begin: paddle.broadcast_to(Tensor([4, 1, 148, 0],"bool"), list[4,8,148,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 148, 0],"bool"), list[4,8,148,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 148, 77].  Tensor sizes: [4, 1, 148, 0]
2025-03-05 15:23:02.063101 test begin: paddle.broadcast_to(Tensor([4, 1, 149, 0],"bool"), list[4,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 149, 0],"bool"), list[4,8,149,149,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 149, 149].  Tensor sizes: [4, 1, 149, 0]
2025-03-05 15:23:02.063617 test begin: paddle.broadcast_to(Tensor([4, 1, 149, 0],"bool"), list[4,8,149,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 149, 0],"bool"), list[4,8,149,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 149, 77].  Tensor sizes: [4, 1, 149, 0]
2025-03-05 15:23:02.064131 test begin: paddle.broadcast_to(Tensor([4, 1, 15, 0],"bool"), list[4,8,15,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 15, 0],"bool"), list[4,8,15,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 15, 13].  Tensor sizes: [4, 1, 15, 0]
2025-03-05 15:23:02.064652 test begin: paddle.broadcast_to(Tensor([4, 1, 15, 0],"bool"), list[4,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 15, 0],"bool"), list[4,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 15, 15].  Tensor sizes: [4, 1, 15, 0]
2025-03-05 15:23:02.065171 test begin: paddle.broadcast_to(Tensor([4, 1, 15, 0],"bool"), list[4,8,15,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 15, 0],"bool"), list[4,8,15,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 15, 25].  Tensor sizes: [4, 1, 15, 0]
2025-03-05 15:23:02.065742 test begin: paddle.broadcast_to(Tensor([4, 1, 15, 0],"bool"), list[4,8,15,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 15, 0],"bool"), list[4,8,15,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 15, 37].  Tensor sizes: [4, 1, 15, 0]
2025-03-05 15:23:02.066261 test begin: paddle.broadcast_to(Tensor([4, 1, 15, 0],"bool"), list[4,8,15,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 15, 0],"bool"), list[4,8,15,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 15, 61].  Tensor sizes: [4, 1, 15, 0]
2025-03-05 15:23:02.066850 test begin: paddle.broadcast_to(Tensor([4, 1, 15, 0],"bool"), list[4,8,15,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 15, 0],"bool"), list[4,8,15,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 15, 77].  Tensor sizes: [4, 1, 15, 0]
2025-03-05 15:23:02.067391 test begin: paddle.broadcast_to(Tensor([4, 1, 150, 0],"bool"), list[4,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 150, 0],"bool"), list[4,8,150,150,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 150, 150].  Tensor sizes: [4, 1, 150, 0]
2025-03-05 15:23:02.067921 test begin: paddle.broadcast_to(Tensor([4, 1, 150, 0],"bool"), list[4,8,150,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 150, 0],"bool"), list[4,8,150,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 150, 77].  Tensor sizes: [4, 1, 150, 0]
2025-03-05 15:23:02.068438 test begin: paddle.broadcast_to(Tensor([4, 1, 151, 0],"bool"), list[4,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 151, 0],"bool"), list[4,8,151,151,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 151, 151].  Tensor sizes: [4, 1, 151, 0]
2025-03-05 15:23:02.068970 test begin: paddle.broadcast_to(Tensor([4, 1, 151, 0],"bool"), list[4,8,151,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 151, 0],"bool"), list[4,8,151,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 151, 77].  Tensor sizes: [4, 1, 151, 0]
2025-03-05 15:23:02.069502 test begin: paddle.broadcast_to(Tensor([4, 1, 152, 0],"bool"), list[4,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 152, 0],"bool"), list[4,8,152,152,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 152, 152].  Tensor sizes: [4, 1, 152, 0]
2025-03-05 15:23:02.070048 test begin: paddle.broadcast_to(Tensor([4, 1, 152, 0],"bool"), list[4,8,152,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 152, 0],"bool"), list[4,8,152,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 152, 77].  Tensor sizes: [4, 1, 152, 0]
2025-03-05 15:23:02.070559 test begin: paddle.broadcast_to(Tensor([4, 1, 153, 0],"bool"), list[4,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 153, 0],"bool"), list[4,8,153,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 153, 153].  Tensor sizes: [4, 1, 153, 0]
2025-03-05 15:23:02.071092 test begin: paddle.broadcast_to(Tensor([4, 1, 153, 0],"bool"), list[4,8,153,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 153, 0],"bool"), list[4,8,153,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 153, 77].  Tensor sizes: [4, 1, 153, 0]
2025-03-05 15:23:02.071624 test begin: paddle.broadcast_to(Tensor([4, 1, 154, 0],"bool"), list[4,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 154, 0],"bool"), list[4,8,154,154,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 154, 154].  Tensor sizes: [4, 1, 154, 0]
2025-03-05 15:23:02.072152 test begin: paddle.broadcast_to(Tensor([4, 1, 154, 0],"bool"), list[4,8,154,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 154, 0],"bool"), list[4,8,154,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 154, 77].  Tensor sizes: [4, 1, 154, 0]
2025-03-05 15:23:02.072676 test begin: paddle.broadcast_to(Tensor([4, 1, 155, 0],"bool"), list[4,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 155, 0],"bool"), list[4,8,155,155,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 155, 155].  Tensor sizes: [4, 1, 155, 0]
2025-03-05 15:23:02.073191 test begin: paddle.broadcast_to(Tensor([4, 1, 155, 0],"bool"), list[4,8,155,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 155, 0],"bool"), list[4,8,155,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 155, 77].  Tensor sizes: [4, 1, 155, 0]
2025-03-05 15:23:02.073708 test begin: paddle.broadcast_to(Tensor([4, 1, 156, 0],"bool"), list[4,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 156, 0],"bool"), list[4,8,156,156,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 156, 156].  Tensor sizes: [4, 1, 156, 0]
2025-03-05 15:23:02.074217 test begin: paddle.broadcast_to(Tensor([4, 1, 156, 0],"bool"), list[4,8,156,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 156, 0],"bool"), list[4,8,156,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 156, 77].  Tensor sizes: [4, 1, 156, 0]
2025-03-05 15:23:02.074732 test begin: paddle.broadcast_to(Tensor([4, 1, 157, 0],"bool"), list[4,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 157, 0],"bool"), list[4,8,157,157,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 157, 157].  Tensor sizes: [4, 1, 157, 0]
2025-03-05 15:23:02.075258 test begin: paddle.broadcast_to(Tensor([4, 1, 157, 0],"bool"), list[4,8,157,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 157, 0],"bool"), list[4,8,157,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 157, 77].  Tensor sizes: [4, 1, 157, 0]
2025-03-05 15:23:02.075788 test begin: paddle.broadcast_to(Tensor([4, 1, 158, 0],"bool"), list[4,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 158, 0],"bool"), list[4,8,158,158,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 158, 158].  Tensor sizes: [4, 1, 158, 0]
2025-03-05 15:23:02.076302 test begin: paddle.broadcast_to(Tensor([4, 1, 158, 0],"bool"), list[4,8,158,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 158, 0],"bool"), list[4,8,158,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 158, 77].  Tensor sizes: [4, 1, 158, 0]
2025-03-05 15:23:02.076847 test begin: paddle.broadcast_to(Tensor([4, 1, 159, 0],"bool"), list[4,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 159, 0],"bool"), list[4,8,159,159,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 159, 159].  Tensor sizes: [4, 1, 159, 0]
2025-03-05 15:23:02.077376 test begin: paddle.broadcast_to(Tensor([4, 1, 159, 0],"bool"), list[4,8,159,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 159, 0],"bool"), list[4,8,159,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 159, 77].  Tensor sizes: [4, 1, 159, 0]
2025-03-05 15:23:02.077898 test begin: paddle.broadcast_to(Tensor([4, 1, 16, 0],"bool"), list[4,8,16,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 16, 0],"bool"), list[4,8,16,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 16, 13].  Tensor sizes: [4, 1, 16, 0]
2025-03-05 15:23:02.078416 test begin: paddle.broadcast_to(Tensor([4, 1, 16, 0],"bool"), list[4,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 16, 0],"bool"), list[4,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 16, 16].  Tensor sizes: [4, 1, 16, 0]
2025-03-05 15:23:02.078938 test begin: paddle.broadcast_to(Tensor([4, 1, 16, 0],"bool"), list[4,8,16,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 16, 0],"bool"), list[4,8,16,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 16, 25].  Tensor sizes: [4, 1, 16, 0]
2025-03-05 15:23:02.079443 test begin: paddle.broadcast_to(Tensor([4, 1, 16, 0],"bool"), list[4,8,16,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 16, 0],"bool"), list[4,8,16,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 16, 37].  Tensor sizes: [4, 1, 16, 0]
2025-03-05 15:23:02.081292 test begin: paddle.broadcast_to(Tensor([4, 1, 16, 0],"bool"), list[4,8,16,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 16, 0],"bool"), list[4,8,16,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 16, 61].  Tensor sizes: [4, 1, 16, 0]
2025-03-05 15:23:02.081840 test begin: paddle.broadcast_to(Tensor([4, 1, 16, 0],"bool"), list[4,8,16,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 16, 0],"bool"), list[4,8,16,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 16, 77].  Tensor sizes: [4, 1, 16, 0]
2025-03-05 15:23:02.082384 test begin: paddle.broadcast_to(Tensor([4, 1, 160, 0],"bool"), list[4,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 160, 0],"bool"), list[4,8,160,160,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 160, 160].  Tensor sizes: [4, 1, 160, 0]
2025-03-05 15:23:02.082920 test begin: paddle.broadcast_to(Tensor([4, 1, 160, 0],"bool"), list[4,8,160,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 160, 0],"bool"), list[4,8,160,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 160, 77].  Tensor sizes: [4, 1, 160, 0]
2025-03-05 15:23:02.083444 test begin: paddle.broadcast_to(Tensor([4, 1, 161, 0],"bool"), list[4,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 161, 0],"bool"), list[4,8,161,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 161, 161].  Tensor sizes: [4, 1, 161, 0]
2025-03-05 15:23:02.083985 test begin: paddle.broadcast_to(Tensor([4, 1, 161, 0],"bool"), list[4,8,161,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 161, 0],"bool"), list[4,8,161,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 161, 77].  Tensor sizes: [4, 1, 161, 0]
2025-03-05 15:23:02.084505 test begin: paddle.broadcast_to(Tensor([4, 1, 162, 0],"bool"), list[4,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 162, 0],"bool"), list[4,8,162,162,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 162, 162].  Tensor sizes: [4, 1, 162, 0]
2025-03-05 15:23:02.085067 test begin: paddle.broadcast_to(Tensor([4, 1, 162, 0],"bool"), list[4,8,162,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 162, 0],"bool"), list[4,8,162,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 162, 77].  Tensor sizes: [4, 1, 162, 0]
2025-03-05 15:23:02.085682 test begin: paddle.broadcast_to(Tensor([4, 1, 163, 0],"bool"), list[4,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 163, 0],"bool"), list[4,8,163,163,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 163, 163].  Tensor sizes: [4, 1, 163, 0]
2025-03-05 15:23:02.086195 test begin: paddle.broadcast_to(Tensor([4, 1, 163, 0],"bool"), list[4,8,163,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 163, 0],"bool"), list[4,8,163,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 163, 77].  Tensor sizes: [4, 1, 163, 0]
2025-03-05 15:23:02.086710 test begin: paddle.broadcast_to(Tensor([4, 1, 164, 0],"bool"), list[4,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 164, 0],"bool"), list[4,8,164,164,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 164, 164].  Tensor sizes: [4, 1, 164, 0]
2025-03-05 15:23:02.087216 test begin: paddle.broadcast_to(Tensor([4, 1, 164, 0],"bool"), list[4,8,164,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 164, 0],"bool"), list[4,8,164,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 164, 77].  Tensor sizes: [4, 1, 164, 0]
2025-03-05 15:23:02.087756 test begin: paddle.broadcast_to(Tensor([4, 1, 165, 0],"bool"), list[4,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 165, 0],"bool"), list[4,8,165,165,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 165, 165].  Tensor sizes: [4, 1, 165, 0]
2025-03-05 15:23:02.088268 test begin: paddle.broadcast_to(Tensor([4, 1, 165, 0],"bool"), list[4,8,165,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 165, 0],"bool"), list[4,8,165,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 165, 77].  Tensor sizes: [4, 1, 165, 0]
2025-03-05 15:23:02.088799 test begin: paddle.broadcast_to(Tensor([4, 1, 166, 0],"bool"), list[4,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 166, 0],"bool"), list[4,8,166,166,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 166, 166].  Tensor sizes: [4, 1, 166, 0]
2025-03-05 15:23:02.089324 test begin: paddle.broadcast_to(Tensor([4, 1, 166, 0],"bool"), list[4,8,166,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 166, 0],"bool"), list[4,8,166,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 166, 77].  Tensor sizes: [4, 1, 166, 0]
2025-03-05 15:23:02.089844 test begin: paddle.broadcast_to(Tensor([4, 1, 167, 0],"bool"), list[4,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 167, 0],"bool"), list[4,8,167,167,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 167, 167].  Tensor sizes: [4, 1, 167, 0]
2025-03-05 15:23:02.090369 test begin: paddle.broadcast_to(Tensor([4, 1, 167, 0],"bool"), list[4,8,167,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 167, 0],"bool"), list[4,8,167,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 167, 77].  Tensor sizes: [4, 1, 167, 0]
2025-03-05 15:23:02.090901 test begin: paddle.broadcast_to(Tensor([4, 1, 168, 0],"bool"), list[4,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 168, 0],"bool"), list[4,8,168,168,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 168, 168].  Tensor sizes: [4, 1, 168, 0]
2025-03-05 15:23:02.091406 test begin: paddle.broadcast_to(Tensor([4, 1, 168, 0],"bool"), list[4,8,168,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 168, 0],"bool"), list[4,8,168,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 168, 77].  Tensor sizes: [4, 1, 168, 0]
2025-03-05 15:23:02.091939 test begin: paddle.broadcast_to(Tensor([4, 1, 169, 0],"bool"), list[4,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 169, 0],"bool"), list[4,8,169,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 169, 169].  Tensor sizes: [4, 1, 169, 0]
2025-03-05 15:23:02.092475 test begin: paddle.broadcast_to(Tensor([4, 1, 169, 0],"bool"), list[4,8,169,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 169, 0],"bool"), list[4,8,169,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 169, 77].  Tensor sizes: [4, 1, 169, 0]
2025-03-05 15:23:02.093010 test begin: paddle.broadcast_to(Tensor([4, 1, 17, 0],"bool"), list[4,8,17,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 17, 0],"bool"), list[4,8,17,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 17, 13].  Tensor sizes: [4, 1, 17, 0]
2025-03-05 15:23:02.093526 test begin: paddle.broadcast_to(Tensor([4, 1, 17, 0],"bool"), list[4,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 17, 0],"bool"), list[4,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 17, 17].  Tensor sizes: [4, 1, 17, 0]
2025-03-05 15:23:02.094046 test begin: paddle.broadcast_to(Tensor([4, 1, 17, 0],"bool"), list[4,8,17,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 17, 0],"bool"), list[4,8,17,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 17, 25].  Tensor sizes: [4, 1, 17, 0]
2025-03-05 15:23:02.094597 test begin: paddle.broadcast_to(Tensor([4, 1, 17, 0],"bool"), list[4,8,17,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 17, 0],"bool"), list[4,8,17,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 17, 37].  Tensor sizes: [4, 1, 17, 0]
2025-03-05 15:23:02.095126 test begin: paddle.broadcast_to(Tensor([4, 1, 17, 0],"bool"), list[4,8,17,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 17, 0],"bool"), list[4,8,17,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 17, 61].  Tensor sizes: [4, 1, 17, 0]
2025-03-05 15:23:02.095656 test begin: paddle.broadcast_to(Tensor([4, 1, 17, 0],"bool"), list[4,8,17,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 17, 0],"bool"), list[4,8,17,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 17, 77].  Tensor sizes: [4, 1, 17, 0]
2025-03-05 15:23:02.096182 test begin: paddle.broadcast_to(Tensor([4, 1, 170, 0],"bool"), list[4,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 170, 0],"bool"), list[4,8,170,170,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 170, 170].  Tensor sizes: [4, 1, 170, 0]
2025-03-05 15:23:02.096700 test begin: paddle.broadcast_to(Tensor([4, 1, 170, 0],"bool"), list[4,8,170,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 170, 0],"bool"), list[4,8,170,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 170, 77].  Tensor sizes: [4, 1, 170, 0]
2025-03-05 15:23:02.097217 test begin: paddle.broadcast_to(Tensor([4, 1, 171, 0],"bool"), list[4,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 171, 0],"bool"), list[4,8,171,171,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 171, 171].  Tensor sizes: [4, 1, 171, 0]
2025-03-05 15:23:02.097733 test begin: paddle.broadcast_to(Tensor([4, 1, 171, 0],"bool"), list[4,8,171,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 171, 0],"bool"), list[4,8,171,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 171, 77].  Tensor sizes: [4, 1, 171, 0]
2025-03-05 15:23:02.098255 test begin: paddle.broadcast_to(Tensor([4, 1, 172, 0],"bool"), list[4,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 172, 0],"bool"), list[4,8,172,172,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 172, 172].  Tensor sizes: [4, 1, 172, 0]
2025-03-05 15:23:02.098773 test begin: paddle.broadcast_to(Tensor([4, 1, 172, 0],"bool"), list[4,8,172,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 172, 0],"bool"), list[4,8,172,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 172, 77].  Tensor sizes: [4, 1, 172, 0]
Error: Can not import paddle core while this file exists: /usr/local/lib/python3.9/dist-packages/paddle/base/libpaddle.so
KeyboardInterrupt

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/host_home/wanghuan29/APItest/PaddleAPITest/engine.py", line 1, in <module>
    from tester import TensorConfig, APIConfig, analyse_configs
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/__init__.py", line 1, in <module>
    from .base import APITestBase
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/base.py", line 2, in <module>
    from .api_config import TensorConfig, APIConfig, analyse_configs, USE_CACHED_NUMPY, cached_numpy
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/api_config/__init__.py", line 1, in <module>
    from .config_analyzer import TensorConfig, APIConfig, analyse_configs, USE_CACHED_NUMPY, cached_numpy
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/api_config/config_analyzer.py", line 3, in <module>
    import paddle
  File "/usr/local/lib/python3.9/dist-packages/paddle/__init__.py", line 38, in <module>
    from .base import core  # noqa: F401
  File "/usr/local/lib/python3.9/dist-packages/paddle/base/__init__.py", line 38, in <module>
    from . import (  # noqa: F401
  File "/usr/local/lib/python3.9/dist-packages/paddle/base/backward.py", line 28, in <module>
    from . import core, framework, log_helper, unique_name
  File "/usr/local/lib/python3.9/dist-packages/paddle/base/core.py", line 387, in <module>
    raise e
  File "/usr/local/lib/python3.9/dist-packages/paddle/base/core.py", line 267, in <module>
    from . import libpaddle
ImportError: initialization failed
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/_vendor/pyparsing.py", line 1402, in _parseNoCache
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/_vendor/pyparsing.py", line 2432, in parseImpl
IndexError: string index out of range

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/host_home/wanghuan29/APItest/PaddleAPITest/engine.py", line 1, in <module>
    from tester import TensorConfig, APIConfig, analyse_configs
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/__init__.py", line 1, in <module>
    from .base import APITestBase
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/base.py", line 2, in <module>
    from .api_config import TensorConfig, APIConfig, analyse_configs, USE_CACHED_NUMPY, cached_numpy
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/api_config/__init__.py", line 1, in <module>
    from .config_analyzer import TensorConfig, APIConfig, analyse_configs, USE_CACHED_NUMPY, cached_numpy
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/api_config/config_analyzer.py", line 3, in <module>
    import paddle
  File "/usr/local/lib/python3.9/dist-packages/paddle/__init__.py", line 38, in <module>
    from .base import core  # noqa: F401
  File "/usr/local/lib/python3.9/dist-packages/paddle/base/__init__.py", line 38, in <module>
    from . import (  # noqa: F401
  File "/usr/local/lib/python3.9/dist-packages/paddle/base/dataset.py", line 23, in <module>
    from ..utils import deprecated
  File "/usr/local/lib/python3.9/dist-packages/paddle/utils/__init__.py", line 16, in <module>
    from . import (  # noqa: F401
  File "/usr/local/lib/python3.9/dist-packages/paddle/utils/cpp_extension/__init__.py", line 15, in <module>
    from .cpp_extension import (
  File "/usr/local/lib/python3.9/dist-packages/paddle/utils/cpp_extension/cpp_extension.py", line 23, in <module>
    import setuptools
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 986, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 664, in _load_unlocked
  File "<frozen importlib._bootstrap>", line 627, in _load_backward_compatible
  File "<frozen zipimport>", line 259, in load_module
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/setuptools/__init__.py", line 16, in <module>
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 986, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 664, in _load_unlocked
  File "<frozen importlib._bootstrap>", line 627, in _load_backward_compatible
  File "<frozen zipimport>", line 259, in load_module
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/setuptools/version.py", line 4, in <module>
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/__init__.py", line 463, in get_distribution
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/__init__.py", line 3135, in parse
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/__init__.py", line 3080, in parse_requirements
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/__init__.py", line 3090, in __init__
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/_vendor/packaging/requirements.py", line 98, in __init__
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/_vendor/pyparsing.py", line 1644, in parseString
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/_vendor/pyparsing.py", line 1402, in _parseNoCache
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/_vendor/pyparsing.py", line 3417, in parseImpl
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/_vendor/pyparsing.py", line 1402, in _parseNoCache
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/_vendor/pyparsing.py", line 4005, in parseImpl
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/_vendor/pyparsing.py", line 1402, in _parseNoCache
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/_vendor/pyparsing.py", line 3400, in parseImpl
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/_vendor/pyparsing.py", line 1402, in _parseNoCache
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/_vendor/pyparsing.py", line 3739, in parseImpl
  File "/usr/local/lib/python3.9/dist-packages/setuptools-50.3.2-py3.9.egg/pkg_resources/_vendor/pyparsing.py", line 1402, in _parseNoCache
KeyboardInterrupt
2025-03-05 15:42:45.244987 test begin: paddle.renorm(Tensor([0, 2, 3],"float32"), 1.0, 2, 2.05, )

W0305 15:42:51.041745 153432 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0305 15:42:51.042657 153432 gpu_resources.cc:164] device: 0, cuDNN Version: 8.6.


--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_renorm(_object*, _object*, _object*)
1   renorm_ad_func(paddle::Tensor const&, float, int, float)
2   paddle::experimental::renorm(paddle::Tensor const&, float, int, float)
3   void phi::RenormKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, float, int, float, phi::DenseTensor*)
4   void phi::funcs::RenormFunc<float>(phi::GPUContext const&, float const*, float*, float, int, float, long, common::DDim const&, long)

----------------------
Error Message Summary:
----------------------
FatalError: `Erroneous arithmetic operation` is detected by the operating system.
  [TimeInfo: *** Aborted at 1741160598 (unix time) try "date -d @1741160598" if you are using GNU date ***]
  [SignalInfo: *** SIGFPE (@0x7f4416011139) received by PID 153109 (TID 0x7f4300949700) from PID 369168697 ***]

2025-03-05 15:43:46.961743 test begin: paddle.renorm(Tensor([0, 20, 1],"float32"), 1.0, -1, 2.05, )

W0305 15:43:52.612063 159007 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0305 15:43:52.612926 159007 gpu_resources.cc:164] device: 0, cuDNN Version: 8.6.


--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_renorm(_object*, _object*, _object*)
1   renorm_ad_func(paddle::Tensor const&, float, int, float)
2   paddle::experimental::renorm(paddle::Tensor const&, float, int, float)
3   void phi::RenormKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, float, int, float, phi::DenseTensor*)
4   void phi::funcs::RenormFunc<float>(phi::GPUContext const&, float const*, float*, float, int, float, long, common::DDim const&, long)

----------------------
Error Message Summary:
----------------------
FatalError: `Erroneous arithmetic operation` is detected by the operating system.
  [TimeInfo: *** Aborted at 1741160667 (unix time) try "date -d @1741160667" if you are using GNU date ***]
  [SignalInfo: *** SIGFPE (@0x7fa2397f2139) received by PID 158616 (TID 0x7fa163f48700) from PID 964632889 ***]

2025-03-05 15:44:59.133004 test begin: paddle.renorm(Tensor([10, 0, 1],"float32"), 1.0, -1, 2.05, )

W0305 15:45:04.571945  3629 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0305 15:45:04.573014  3629 gpu_resources.cc:164] device: 0, cuDNN Version: 8.6.


--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_renorm(_object*, _object*, _object*)
1   renorm_ad_func(paddle::Tensor const&, float, int, float)
2   paddle::experimental::renorm(paddle::Tensor const&, float, int, float)
3   void phi::RenormKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, float, int, float, phi::DenseTensor*)
4   void phi::funcs::RenormFunc<float>(phi::GPUContext const&, float const*, float*, float, int, float, long, common::DDim const&, long)

----------------------
Error Message Summary:
----------------------
FatalError: `Erroneous arithmetic operation` is detected by the operating system.
  [TimeInfo: *** Aborted at 1741160730 (unix time) try "date -d @1741160730" if you are using GNU date ***]
  [SignalInfo: *** SIGFPE (@0x7fc199ebe139) received by PID 3155 (TID 0x7fc0a2949700) from PID 18446744071996956985 ***]

2025-03-05 15:45:59.682612 test begin: paddle.renorm(Tensor([10, 20, 0],"float32"), 1.0, -1, 2.05, )

W0305 15:46:04.889645 11882 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0305 15:46:04.890604 11882 gpu_resources.cc:164] device: 0, cuDNN Version: 8.6.


--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_renorm(_object*, _object*, _object*)
1   renorm_ad_func(paddle::Tensor const&, float, int, float)
2   paddle::experimental::renorm(paddle::Tensor const&, float, int, float)
3   void phi::RenormKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, float, int, float, phi::DenseTensor*)
4   void phi::funcs::RenormFunc<float>(phi::GPUContext const&, float const*, float*, float, int, float, long, common::DDim const&, long)

----------------------
Error Message Summary:
----------------------
FatalError: `Erroneous arithmetic operation` is detected by the operating system.
  [TimeInfo: *** Aborted at 1741160790 (unix time) try "date -d @1741160790" if you are using GNU date ***]
  [SignalInfo: *** SIGFPE (@0x7f97ea7e3139) received by PID 11128 (TID 0x7f971334a700) from PID 18446744073348723001 ***]

2025-03-05 15:46:59.973852 test begin: paddle.renorm(Tensor([2, 0, 3],"float32"), 1.0, -1, 2.05, )

W0305 15:47:05.379981 20404 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0305 15:47:05.380813 20404 gpu_resources.cc:164] device: 0, cuDNN Version: 8.6.


--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_renorm(_object*, _object*, _object*)
1   renorm_ad_func(paddle::Tensor const&, float, int, float)
2   paddle::experimental::renorm(paddle::Tensor const&, float, int, float)
3   void phi::RenormKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, float, int, float, phi::DenseTensor*)
4   void phi::funcs::RenormFunc<float>(phi::GPUContext const&, float const*, float*, float, int, float, long, common::DDim const&, long)

----------------------
Error Message Summary:
----------------------
FatalError: `Erroneous arithmetic operation` is detected by the operating system.
  [TimeInfo: *** Aborted at 1741160849 (unix time) try "date -d @1741160849" if you are using GNU date ***]
  [SignalInfo: *** SIGFPE (@0x7efc375f4139) received by PID 20005 (TID 0x7efb5ddc2700) from PID 928989497 ***]

2025-03-05 15:48:05.059620 test begin: paddle.renorm(Tensor([2, 0, 3],"float32"), 1.0, 2, 2.05, )

W0305 15:48:11.239446 29249 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0305 15:48:11.240346 29249 gpu_resources.cc:164] device: 0, cuDNN Version: 8.6.


--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_renorm(_object*, _object*, _object*)
1   renorm_ad_func(paddle::Tensor const&, float, int, float)
2   paddle::experimental::renorm(paddle::Tensor const&, float, int, float)
3   void phi::RenormKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, float, int, float, phi::DenseTensor*)
4   void phi::funcs::RenormFunc<float>(phi::GPUContext const&, float const*, float*, float, int, float, long, common::DDim const&, long)

----------------------
Error Message Summary:
----------------------
FatalError: `Erroneous arithmetic operation` is detected by the operating system.
  [TimeInfo: *** Aborted at 1741160923 (unix time) try "date -d @1741160923" if you are using GNU date ***]
  [SignalInfo: *** SIGFPE (@0x7f05e2933139) received by PID 28553 (TID 0x7f04a934a700) from PID 18446744073215881529 ***]

2025-03-05 15:49:12.911380 test begin: paddle.renorm(Tensor([2, 2, 0],"float32"), 1.0, -1, 2.05, )

W0305 15:49:18.123570 39138 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0305 15:49:18.124611 39138 gpu_resources.cc:164] device: 0, cuDNN Version: 8.6.


--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_renorm(_object*, _object*, _object*)
1   renorm_ad_func(paddle::Tensor const&, float, int, float)
2   paddle::experimental::renorm(paddle::Tensor const&, float, int, float)
3   void phi::RenormKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, float, int, float, phi::DenseTensor*)
4   void phi::funcs::RenormFunc<float>(phi::GPUContext const&, float const*, float*, float, int, float, long, common::DDim const&, long)

----------------------
Error Message Summary:
----------------------
FatalError: `Erroneous arithmetic operation` is detected by the operating system.
  [TimeInfo: *** Aborted at 1741160982 (unix time) try "date -d @1741160982" if you are using GNU date ***]
  [SignalInfo: *** SIGFPE (@0x7fae5533e139) received by PID 38522 (TID 0x7fad67f48700) from PID 1429463353 ***]

2025-03-05 15:50:14.405444 test begin: paddle.renorm(Tensor([2, 2, 0],"float32"), 1.0, 2, 2.05, )

W0305 15:50:21.466508 47354 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0305 15:50:21.467510 47354 gpu_resources.cc:164] device: 0, cuDNN Version: 8.6.


--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_renorm(_object*, _object*, _object*)
1   renorm_ad_func(paddle::Tensor const&, float, int, float)
2   paddle::experimental::renorm(paddle::Tensor const&, float, int, float)
3   void phi::RenormKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, float, int, float, phi::DenseTensor*)
4   void phi::funcs::RenormFunc<float>(phi::GPUContext const&, float const*, float*, float, int, float, long, common::DDim const&, long)

----------------------
Error Message Summary:
----------------------
FatalError: `Erroneous arithmetic operation` is detected by the operating system.
  [TimeInfo: *** Aborted at 1741161051 (unix time) try "date -d @1741161051" if you are using GNU date ***]
  [SignalInfo: *** SIGFPE (@0x7f606c6b8139) received by PID 46691 (TID 0x7f5f852b7700) from PID 1818984761 ***]

2025-03-05 15:51:29.689028 test begin: paddle.renorm(x=Tensor([0, 2, 3],"float32"), p=1, axis=0, max_norm=5, )

W0305 15:51:39.939108 56673 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0305 15:51:39.940095 56673 gpu_resources.cc:164] device: 0, cuDNN Version: 8.6.


--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_renorm(_object*, _object*, _object*)
1   renorm_ad_func(paddle::Tensor const&, float, int, float)
2   paddle::experimental::renorm(paddle::Tensor const&, float, int, float)
3   void phi::RenormKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, float, int, float, phi::DenseTensor*)
4   void phi::funcs::RenormFunc<float>(phi::GPUContext const&, float const*, float*, float, int, float, long, common::DDim const&, long)

----------------------
Error Message Summary:
----------------------
FatalError: `Erroneous arithmetic operation` is detected by the operating system.
  [TimeInfo: *** Aborted at 1741161144 (unix time) try "date -d @1741161144" if you are using GNU date ***]
  [SignalInfo: *** SIGFPE (@0x7f29e3e18139) received by PID 56066 (TID 0x7f29087c3700) from PID 18446744073237791033 ***]

2025-03-05 15:52:55.980626 test begin: paddle.renorm(x=Tensor([0, 2, 3],"float64"), p=1, axis=0, max_norm=5, )

W0305 15:53:04.083371 66836 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0305 15:53:04.084426 66836 gpu_resources.cc:164] device: 0, cuDNN Version: 8.6.


--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_renorm(_object*, _object*, _object*)
1   renorm_ad_func(paddle::Tensor const&, float, int, float)
2   paddle::experimental::renorm(paddle::Tensor const&, float, int, float)
3   void phi::RenormKernel<double, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, float, int, float, phi::DenseTensor*)
4   void phi::funcs::RenormFunc<double>(phi::GPUContext const&, double const*, double*, float, int, float, long, common::DDim const&, long)

----------------------
Error Message Summary:
----------------------
FatalError: `Erroneous arithmetic operation` is detected by the operating system.
  [TimeInfo: *** Aborted at 1741161255 (unix time) try "date -d @1741161255" if you are using GNU date ***]
  [SignalInfo: *** SIGFPE (@0x7f5e3b871da9) received by PID 66024 (TID 0x7f5d3fdc2700) from PID 998710697 ***]

2025-03-05 15:54:45.727519 test begin: paddle.renorm(x=Tensor([0, 2, 3],"float64"), p=1.2, axis=2, max_norm=6.5, )

W0305 15:54:50.618005 75921 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0305 15:54:50.618863 75921 gpu_resources.cc:164] device: 0, cuDNN Version: 8.6.


--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_renorm(_object*, _object*, _object*)
1   renorm_ad_func(paddle::Tensor const&, float, int, float)
2   paddle::experimental::renorm(paddle::Tensor const&, float, int, float)
3   void phi::RenormKernel<double, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, float, int, float, phi::DenseTensor*)
4   void phi::funcs::RenormFunc<double>(phi::GPUContext const&, double const*, double*, float, int, float, long, common::DDim const&, long)

----------------------
Error Message Summary:
----------------------
FatalError: `Erroneous arithmetic operation` is detected by the operating system.
  [TimeInfo: *** Aborted at 1741161313 (unix time) try "date -d @1741161313" if you are using GNU date ***]
  [SignalInfo: *** SIGFPE (@0x7f39dce84da9) received by PID 75603 (TID 0x7f3901abb700) from PID 18446744073120796073 ***]

2025-03-05 15:55:45.134842 test begin: paddle.renorm(x=Tensor([0, 2, 3],"float64"), p=1.5, axis=2, max_norm=20, )

[Skip]
2025-03-05 15:55:45.135578 test begin: paddle.renorm(x=Tensor([0, 2, 3],"float64"), p=2, axis=1, max_norm=20, )

[Skip]
2025-03-05 15:55:45.135898 test begin: paddle.renorm(x=Tensor([0, 2, 3],"float64"), p=2, axis=1, max_norm=40, )

[Skip]
2025-03-05 15:55:45.136157 test begin: paddle.renorm(x=Tensor([0, 2, 3],"float64"), p=2, axis=1, max_norm=50, )

[Skip]
2025-03-05 15:55:45.136399 test begin: paddle.renorm(x=Tensor([3, 0, 3],"float32"), p=1, axis=0, max_norm=5, )

[Skip]
2025-03-05 15:55:45.136612 test begin: paddle.renorm(x=Tensor([3, 0, 3],"float64"), p=1, axis=0, max_norm=5, )

[Skip]
2025-03-05 15:55:45.136798 test begin: paddle.renorm(x=Tensor([3, 0, 3],"float64"), p=1.2, axis=2, max_norm=6.5, )

[Skip]
2025-03-05 15:55:45.136971 test begin: paddle.renorm(x=Tensor([3, 0, 3],"float64"), p=1.5, axis=2, max_norm=20, )

[Skip]
2025-03-05 15:55:45.137151 test begin: paddle.renorm(x=Tensor([3, 0, 3],"float64"), p=2, axis=1, max_norm=20, )

[Skip]
2025-03-05 15:55:45.137320 test begin: paddle.renorm(x=Tensor([3, 0, 3],"float64"), p=2, axis=1, max_norm=40, )

[Skip]
2025-03-05 15:55:45.137498 test begin: paddle.renorm(x=Tensor([3, 0, 3],"float64"), p=2, axis=1, max_norm=50, )

[Skip]
2025-03-05 15:55:45.137702 test begin: paddle.renorm(x=Tensor([3, 2, 0],"float32"), p=1, axis=0, max_norm=5, )

[Skip]
2025-03-05 15:55:45.137870 test begin: paddle.renorm(x=Tensor([3, 2, 0],"float64"), p=1, axis=0, max_norm=5, )

[Skip]
2025-03-05 15:55:45.138035 test begin: paddle.renorm(x=Tensor([3, 2, 0],"float64"), p=1.2, axis=2, max_norm=6.5, )

[Skip]
2025-03-05 15:55:45.138200 test begin: paddle.renorm(x=Tensor([3, 2, 0],"float64"), p=1.5, axis=2, max_norm=20, )

[Skip]
2025-03-05 15:55:45.138364 test begin: paddle.renorm(x=Tensor([3, 2, 0],"float64"), p=2, axis=1, max_norm=20, )

[Skip]
2025-03-05 15:55:45.138530 test begin: paddle.renorm(x=Tensor([3, 2, 0],"float64"), p=2, axis=1, max_norm=40, )

[Skip]
2025-03-05 15:55:45.138723 test begin: paddle.renorm(x=Tensor([3, 2, 0],"float64"), p=2, axis=1, max_norm=50, )

[Skip]
Traceback (most recent call last):
  File "/host_home/wanghuan29/APItest/PaddleAPITest/engine.py", line 1, in <module>
    from tester import TensorConfig, APIConfig, analyse_configs
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/__init__.py", line 1, in <module>
    from .base import APITestBase
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/base.py", line 2, in <module>
    from .api_config import TensorConfig, APIConfig, analyse_configs, USE_CACHED_NUMPY, cached_numpy
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/api_config/__init__.py", line 1, in <module>
    from .config_analyzer import TensorConfig, APIConfig, analyse_configs, USE_CACHED_NUMPY, cached_numpy
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/api_config/config_analyzer.py", line 9, in <module>
    import torch
  File "/usr/local/lib/python3.9/dist-packages/torch/__init__.py", line 367, in <module>
    from torch._C import *  # noqa: F403
  File "<frozen importlib._bootstrap>", line 203, in _lock_unlock_module
KeyboardInterrupt
Traceback (most recent call last):
  File "/host_home/wanghuan29/APItest/PaddleAPITest/engine.py", line 1, in <module>
    from tester import TensorConfig, APIConfig, analyse_configs
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/__init__.py", line 1, in <module>
    from .base import APITestBase
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/base.py", line 2, in <module>
    from .api_config import TensorConfig, APIConfig, analyse_configs, USE_CACHED_NUMPY, cached_numpy
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/api_config/__init__.py", line 1, in <module>
    from .config_analyzer import TensorConfig, APIConfig, analyse_configs, USE_CACHED_NUMPY, cached_numpy
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/api_config/config_analyzer.py", line 3, in <module>
    import paddle
  File "/usr/local/lib/python3.9/dist-packages/paddle/__init__.py", line 38, in <module>
    from .base import core  # noqa: F401
  File "/usr/local/lib/python3.9/dist-packages/paddle/base/__init__.py", line 38, in <module>
    from . import (  # noqa: F401
  File "/usr/local/lib/python3.9/dist-packages/paddle/base/dataset.py", line 23, in <module>
    from ..utils import deprecated
  File "/usr/local/lib/python3.9/dist-packages/paddle/utils/__init__.py", line 16, in <module>
    from . import (  # noqa: F401
  File "/usr/local/lib/python3.9/dist-packages/paddle/utils/cpp_extension/__init__.py", line 15, in <module>
    from .cpp_extension import (
  File "/usr/local/lib/python3.9/dist-packages/paddle/utils/cpp_extension/cpp_extension.py", line 24, in <module>
    from setuptools.command.easy_install import easy_install
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 986, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 664, in _load_unlocked
  File "<frozen importlib._bootstrap>", line 627, in _load_backward_compatible
  File "<frozen zipimport>", line 241, in load_module
  File "<frozen zipimport>", line 713, in _get_module_code
  File "<frozen zipimport>", line 647, in _compile_source
KeyboardInterrupt
