paddle.put_along_axis(Tensor([1, 8000],"float32"), Tensor([1, 799],"int64"), Tensor([1, 799],"float32"), 1, )
paddle.put_along_axis(Tensor([10, 8000],"float32"), Tensor([10, 799],"int64"), Tensor([10, 799],"float32"), 1, )
paddle.put_along_axis(Tensor([2, 8000],"float32"), Tensor([2, 799],"int64"), Tensor([2, 799],"float32"), 1, )
paddle.put_along_axis(Tensor([3, 8000],"float32"), Tensor([3, 799],"int64"), Tensor([3, 799],"float32"), 1, )
paddle.put_along_axis(Tensor([4, 8000],"float32"), Tensor([4, 799],"int64"), Tensor([4, 799],"float32"), 1, )
paddle.put_along_axis(Tensor([5, 8000],"float32"), Tensor([5, 799],"int64"), Tensor([5, 799],"float32"), 1, )
paddle.put_along_axis(Tensor([6, 8000],"float32"), Tensor([6, 799],"int64"), Tensor([6, 799],"float32"), 1, )
paddle.put_along_axis(Tensor([64, 1327104],"float32"), Tensor([64, 1327104],"int64"), Tensor([64, 1327104],"float32"), 1, )
paddle.put_along_axis(Tensor([7, 8000],"float32"), Tensor([7, 799],"int64"), Tensor([7, 799],"float32"), 1, )
paddle.put_along_axis(Tensor([8, 8000],"float32"), Tensor([8, 799],"int64"), Tensor([8, 799],"float32"), 1, )
paddle.put_along_axis(Tensor([9, 8000],"float32"), Tensor([9, 799],"int64"), Tensor([9, 799],"float32"), 1, )
paddle.linalg.eigvalsh(Tensor([0, 5, 5],"float32"), )
paddle.linalg.eigvalsh(Tensor([2, 5, 5],"complex64"), )
paddle.linalg.eigvalsh(Tensor([2, 5, 5],"float32"), )
paddle.linalg.eigvalsh(x=Tensor([4, 5, 5],"float64"), )
paddle.linalg.eigvalsh(x=Tensor([4, 5, 5],"float64"), UPLO="U", )
paddle.linalg.eigvalsh(x=Tensor([5, 10, 10],"complex128"), )
paddle.linalg.eigvalsh(x=Tensor([5, 10, 10],"complex128"), UPLO="U", )
paddle.linalg.eigvals(Tensor([128, 128],"complex128"), name="large_x", )
paddle.linalg.eigvals(Tensor([128, 128],"complex64"), name="large_x", )
paddle.linalg.eigvals(Tensor([128, 128],"float32"), name="large_x", )
paddle.linalg.eigvals(Tensor([128, 128],"float64"), name="large_x", )
paddle.linalg.eigvals(Tensor([6, 6],"complex128"), name="small_x", )
paddle.linalg.eigvals(Tensor([6, 6],"complex64"), name="small_x", )
paddle.linalg.eigvals(Tensor([6, 6],"float32"), name="small_x", )
paddle.linalg.eigvals(x=Tensor([2, 4, 4],"float64"), )
paddle.linalg.eigvals(x=Tensor([4, 4],"float32"), )
paddle.linalg.eigh(Tensor([2, 5, 5],"float32"), )
paddle.linalg.eigh(Tensor([4, 4, 4],"complex128"), "L", )
paddle.linalg.eigh(Tensor([4, 4, 4],"complex64"), "L", )
paddle.linalg.eigh(Tensor([4, 4, 4],"float32"), "L", )
paddle.linalg.eigh(Tensor([4, 4, 4],"float64"), "L", )
paddle.linalg.triangular_solve(x=Tensor([4, 4],"float64"), y=Tensor([4, 4],"float64"), upper=False, transpose=True, )
paddle.linalg.triangular_solve(x=Tensor([4, 4],"float64"), y=Tensor([4, 4],"float64"), upper=False, transpose=True, unitriangular=True, )
paddle.pow(Tensor([216],"int32"), Tensor([216],"int32"), )
paddle.pow(Tensor([282],"int64"), Tensor([282],"int64"), )
paddle.pow(x=Tensor([2, 2, 2],"float64"), y=Tensor([2, 2, 2],"float64"), )
paddle.pow(x=Tensor([2, 2, 2],"float64"), y=Tensor([2],"float64"), )
paddle.pow(x=Tensor([2, 2, 2],"int32"), y=Tensor([2, 2, 2],"int32"), )
paddle.pow(x=Tensor([2, 2, 2],"int64"), y=Tensor([2, 2, 2],"int64"), )
paddle.pow(Tensor([],"float64"), Tensor([1],"float64"), )
paddle.pow(Tensor([],"float64"), Tensor([247],"float64"), )
paddle.pow(Tensor([],"float64"), Tensor([6],"float64"), )
paddle.pow(x=Tensor([2, 2, 2],"float32"), y=Tensor([2, 2, 2],"float32"), )
paddle.pow(Tensor([],"float32"), Tensor([1],"float32"), )
paddle.pow(Tensor([],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.pow(Tensor([],"float32"), Tensor([207],"float32"), )
paddle.pow(Tensor([],"float32"), Tensor([209],"float32"), )
paddle.pow(Tensor([],"float32"), Tensor([210],"float32"), )
paddle.pow(Tensor([],"float32"), Tensor([4],"float32"), )
paddle.pow(Tensor([],"float32"), Tensor([5, 9],"float32"), )
paddle.pow(Tensor([],"float32"), Tensor([8],"float32"), )
paddle.pow(Tensor([],"float32"), Tensor([],"float32"), )
paddle.pow(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.pow(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.pow(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.pow(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.pow(Tensor([4, 3, 2],"float64"), Tensor([4, 3, 2],"float16"), )
paddle.pow(Tensor([4, 3, 2],"float64"), Tensor([4, 3, 2],"float32"), )
paddle.pow(Tensor([3],"float32"), Tensor([3],"float32"), )
paddle.pow(Tensor([3, 3],"float32"), Tensor([3, 3],"float32"), )
paddle.pow(Tensor([267],"float64"), Tensor([267],"float64"), )
paddle.pow(Tensor([280],"float32"), Tensor([280],"float32"), )
paddle.pow(Tensor([2, 3, 4],"float32"), Tensor([],"float32"), )
paddle.pow(Tensor([5, 9, 7],"float64"), Tensor([7],"float64"), )

