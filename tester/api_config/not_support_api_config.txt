paddle.arange(0, Tensor([],"float64"), dtype="float64", )
paddle.arange(0, Tensor([],"int64"), 1, dtype=Dtype(int64), )
paddle.arange(end=Tensor([],"int64"), )
paddle.arange(start=1, end=20, step=Tensor([1],"int64"), dtype=type(numpy.float32), )
paddle.bernoulli(Tensor([],"float32"), )
paddle.binomial(Tensor([16384, 1024],"int64"), Tensor([],"float32"), )
paddle.empty(shape=Tensor([2],"int32"), dtype=None, )
paddle.empty(shape=Tensor([2],"int32"), dtype=type(bool), )
paddle.empty(shape=Tensor([2],"int32"), dtype=type(numpy.int32), )
paddle.full(shape=list[Tensor([],"int64"),4,], fill_value=Tensor([1],"int64"), dtype=Dtype(int64), )
paddle.full(shape=list[Tensor([],"int64"),8,], fill_value=False, dtype="bool", )
paddle.full(shape=list[Tensor([1],"int32"),Tensor([1],"int32"),], fill_value=10000000000, )
paddle.full(shape=list[Tensor([1],"int32"),Tensor([1],"int32"),], fill_value=3.8, )
paddle.full(shape=Tensor([1],"int32"), dtype="float32", fill_value=1.1, )
paddle.full(shape=Tensor([2],"int32"), fill_value=Tensor([1],"float32"), )
paddle.full(shape=Tensor([2],"int64"), fill_value=Tensor([1],"float32"), dtype=type(numpy.float32), )
paddle.full(shape=Tensor([2],"int64"), fill_value=Tensor([1],"int32"), dtype=type(numpy.int32), )
paddle.geometric.sample_neighbors(Tensor([88],"int64"), Tensor([21],"int64"), Tensor([5],"int64"), eids=Tensor([88],"int64"), perm_buffer=Tensor([88],"int64"), sample_size=5, return_eids=True, )
paddle.incubate.nn.functional.block_multihead_attention(Tensor([128, 1536],"float16"), Tensor([4, 8, 64, 64],"float16"), Tensor([4, 8, 64, 64],"float16"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([128],"int32"), Tensor([2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), Tensor([2, 2],"int32"), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 64, 64, False, )
paddle.incubate.nn.functional.block_multihead_attention(Tensor([128, 1536],"float16"), Tensor([4, 8, 64, 64],"float16"), Tensor([4, 8, 64, 64],"float16"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([128],"int32"), Tensor([2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), Tensor([2, 2],"int32"), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 64, 64, False, out_scale=1.0, )
paddle.incubate.nn.functional.block_multihead_attention(Tensor([128, 1536],"float16"), Tensor([4, 8, 64, 64],"float16"), Tensor([4, 8, 64, 64],"float16"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([128],"int32"), Tensor([2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), Tensor([2, 2],"int32"), None, None, None, None, None, None, None, None, None, None, None, None, Tensor([2, 1, 128, 1, 32],"float32"), None, None, 64, 64, False, )
paddle.incubate.nn.functional.block_multihead_attention(Tensor([128, 1536],"float16"), Tensor([4, 8, 64, 64],"float16"), Tensor([4, 8, 64, 64],"float16"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([128],"int32"), Tensor([2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), Tensor([2, 2],"int32"), None, None, None, None, None, None, None, None, None, None, Tensor([1],"int32"), Tensor([1],"int32"), None, None, None, 64, 64, False, )
paddle.incubate.nn.functional.block_multihead_attention(Tensor([128, 768],"float16"), Tensor([4, 2, 64, 64],"float16"), Tensor([4, 2, 64, 64],"float16"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([128],"int32"), Tensor([2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), Tensor([2, 2],"int32"), None, None, None, None, None, None, None, None, None, None, Tensor([1],"int32"), Tensor([1],"int32"), None, None, None, 64, 64, False, )
paddle.incubate.nn.functional.block_multihead_attention(Tensor([2, 1536],"float16"), Tensor([4, 8, 64, 64],"float16"), Tensor([4, 8, 64, 64],"float16"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), Tensor([2, 2],"int32"), None, None, None, None, None, None, None, None, None, None, Tensor([1],"int32"), Tensor([1],"int32"), None, None, Tensor([2, 8, 1, 65],"float16"), 1, 64, False, )
paddle.incubate.nn.functional.block_multihead_attention(Tensor([2, 768],"float16"), Tensor([4, 2, 64, 64],"float16"), Tensor([4, 2, 64, 64],"float16"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), Tensor([2, 2],"int32"), None, None, None, None, None, None, None, None, None, None, Tensor([1],"int32"), Tensor([1],"int32"), None, None, Tensor([2, 8, 1, 65],"float16"), 1, 64, False, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([32, 256],"float16"), Tensor([256],"float16"), Tensor([256],"float16"), 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([32, 256],"float16"), Tensor([256],"float16"), Tensor([256],"float16"), 1e-06, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([32, 256],"float16"), )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([32, 256],"float16"), Tensor([256],"float16"), Tensor([256],"float16"), 1e-06, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([32, 256],"float16"), quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([32, 256],"float16"), Tensor([256],"float16"), Tensor([256],"float16"), 1e-06, begin_norm_axis=1, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([32, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([32, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-06, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([32, 256],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.masked_multihead_attention(Tensor([2, 12288],"float16"), Tensor([2, 2, 32, 33, 128],"float16"), Tensor([3, 32, 128],"float16"), Tensor([2, 1, 1, 33],"float16"), None, None, None, None, None, None, None, 1, 0, False, "default", -1, 1, 126, -126, )
paddle.incubate.nn.functional.masked_multihead_attention(Tensor([2, 12288],"float16"), Tensor([2, 2, 32, 33, 128],"float16"), Tensor([3, 32, 128],"float16"), Tensor([2, 1, 1, 33],"float16"), None, None, None, None, None, None, None, 1, 0, False, "default", 10, 1, 126, -126, )
paddle.incubate.nn.functional.masked_multihead_attention(Tensor([2, 12288],"int32"), Tensor([2, 2, 32, 33, 128],"float16"), Tensor([3, 32, 128],"float16"), Tensor([2, 1, 1, 33],"float16"), None, None, None, None, Tensor([3, 32, 128],"float32"), None, None, 1, 0, False, "fp16", -1, 1, 126, -126, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 8, 64, 16],"float32"), Tensor([1, 2, 64, 16],"float32"), Tensor([1, 2, 64, 16],"float32"), Tensor([1],"int32"), Tensor([1],"int32"), Tensor([1, 1, 64, 64],"float32"), 0.25, )
paddle.isfinite(Tensor([11, 17],"complex64"), )
paddle.isfinite(Tensor([2, 3, 4, 5],"complex128"), )
paddle.isinf(Tensor([11, 17],"complex64"), )
paddle.isinf(Tensor([2, 3, 4, 5],"complex128"), )
paddle.isnan(Tensor([11, 17],"complex64"), )
paddle.isnan(Tensor([2, 3, 4, 5],"complex128"), )
paddle.linalg.cholesky(Tensor([2, 2],"float32"), )
paddle.linalg.cholesky(Tensor([2, 2],"float64"), )
paddle.linalg.cholesky(Tensor([3, 3],"float64"), )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=None, aweights=Tensor([10],"int32"), )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int64"), aweights=Tensor([10],"float64"), )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=None, aweights=Tensor([10],"int32"), )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int64"), aweights=Tensor([10],"float64"), )
paddle.linalg.eigh(Tensor([0, 0],"float32"), )
paddle.linalg.eigh(Tensor([0, 5, 5],"float32"), )
paddle.linalg.lstsq(Tensor([2, 3, 10],"float32"), Tensor([2, 3, 4],"float32"), rcond=1e-15, driver="gelss", )
paddle.linalg.lstsq(Tensor([200, 100],"float64"), Tensor([200, 50],"float64"), rcond=1e-15, driver="gelsd", )
paddle.linalg.lstsq(Tensor([3, 2],"float64"), Tensor([3, 3],"float64"), rcond=1e-07, driver="gelsd", )
paddle.linalg.lstsq(Tensor([5, 4],"float64"), Tensor([5, 3],"float64"), rcond=1e-15, driver="gelsd", )
paddle.linalg.lstsq(Tensor([5, 5],"float64"), Tensor([5, 1],"float64"), rcond=None, driver="gelss", )
paddle.linalg.lstsq(Tensor([50, 600],"float64"), Tensor([50, 300],"float64"), rcond=1e-15, driver="gelss", )
paddle.linalg.lstsq(Tensor([8, 2],"float32"), Tensor([8, 10],"float32"), rcond=1e-15, driver="gelsy", )
paddle.linalg.lu_unpack(Tensor([2, 3, 5],"float32"), Tensor([2, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([2, 3, 5],"float64"), Tensor([2, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([2, 5, 3, 5],"float32"), Tensor([2, 5, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([2, 5, 3, 5],"float64"), Tensor([2, 5, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 3, 3],"float64"), Tensor([3, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 3],"float32"), Tensor([3],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 3],"float64"), Tensor([3],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 5, 5, 5],"float32"), Tensor([3, 5, 5],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 5, 5, 5],"float64"), Tensor([3, 5, 5],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 5, 5],"float32"), Tensor([3, 5],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 5, 5],"float64"), Tensor([3, 5],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 5],"float32"), Tensor([3],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 5],"float64"), Tensor([3],"int32"), )
paddle.linalg.lu_unpack(Tensor([4, 5, 3],"float32"), Tensor([4, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([4, 5, 3],"float64"), Tensor([4, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([4, 5, 5, 3],"float32"), Tensor([4, 5, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([4, 5, 5, 3],"float64"), Tensor([4, 5, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([5, 3, 3, 3],"float64"), Tensor([5, 3, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([5, 3],"float32"), Tensor([3],"int32"), )
paddle.linalg.lu_unpack(Tensor([5, 3],"float64"), Tensor([3],"int32"), )
paddle.linalg.lu_unpack(Tensor([5, 5],"float32"), Tensor([5],"int32"), )
paddle.linalg.lu_unpack(Tensor([5, 5],"float64"), Tensor([5],"int32"), )
paddle.linalg.matrix_power(Tensor([0, 0],"float32"), 2, )
paddle.linalg.matrix_power(Tensor([2, 3, 0, 0],"float32"), 2, )
paddle.linalg.norm(Tensor([2, 3, 4, 5],"bfloat16"), 2.0, 1, False, )
paddle.linalg.solve(Tensor([10, 0, 0],"float32"), Tensor([10, 0, 0],"float32"), left=False, )
paddle.linalg.svdvals(Tensor([1, 12, 10],"float32"), )
paddle.log(x=Tensor([2, 2],"int32"), )
paddle.logaddexp(Tensor([10, 200, 300],"int32"), Tensor([10, 200, 300],"int32"), )
paddle.logaddexp(Tensor([10, 200, 300],"int64"), Tensor([10, 200, 300],"int64"), )
paddle.matmul(Tensor([1, 2, 2048, 2048],"bfloat16"), Tensor([1, 2, 2048, 128],"bfloat16"), )
paddle.matmul(x=Tensor([1, 2, 2048, 128],"bfloat16"), y=Tensor([1, 2, 2048, 128],"bfloat16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([3, 2, 2, 5],"float64"), y=Tensor([5],"float64"), transpose_x=False, transpose_y=True, )
paddle.matrix_transpose(Tensor([],"float32"), )
paddle.max(Tensor([10, 10, 9, 9],"float64"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.max(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.max(Tensor([2, 3],"float32"), axis=Tensor([],"int64"), )
paddle.max(x=Tensor([2, 3],"float32"), axis=Tensor([1],"int64"), )
paddle.mean(Tensor([1, 4],"float32"), axis=Tensor([],"int64"), )
paddle.mean(x=Tensor([2, 1, 3],"float64"), axis=Tensor([2],"int64"), )
paddle.min(Tensor([10, 10, 9, 9],"float64"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.min(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.min(x=Tensor([2, 3],"float32"), axis=Tensor([1],"int32"), )
paddle.multinomial(Tensor([1, 8000],"float32"), 1, )
paddle.multinomial(Tensor([10, 8000],"float32"), 1, )
paddle.multinomial(Tensor([1000],"float64"), num_samples=100, replacement=False, )
paddle.multinomial(Tensor([1024, 10000],"float32"), 1, replacement=False, )
paddle.multinomial(Tensor([1024, 10000],"float32"), 20000, replacement=True, )
paddle.multinomial(Tensor([1024, 10000],"float32"), 5000, replacement=False, )
paddle.multinomial(Tensor([2, 7],"float32"), num_samples=5, replacement=True, name=None, )
paddle.multinomial(Tensor([2, 7],"float64"), num_samples=5, replacement=True, name=None, )
paddle.multinomial(Tensor([2, 8000],"float32"), 1, )
paddle.multinomial(Tensor([3, 10000],"float32"), )
paddle.multinomial(Tensor([3, 4],"float64"), num_samples=100000, replacement=True, )
paddle.multinomial(Tensor([3, 8000],"float32"), 1, )
paddle.multinomial(Tensor([4, 8000],"float32"), 1, )
paddle.multinomial(Tensor([4],"float32"), num_samples=10, replacement=True, )
paddle.multinomial(Tensor([4],"float64"), num_samples=100000, replacement=True, )
paddle.multinomial(Tensor([5, 8000],"float32"), 1, )
paddle.multinomial(Tensor([6, 8000],"float32"), 1, )
paddle.multinomial(Tensor([6],"float32"), name=None, )
paddle.multinomial(Tensor([6],"float32"), num_samples=Tensor([],"int64"), name=None, )
paddle.multinomial(Tensor([6],"float64"), name=None, )
paddle.multinomial(Tensor([6],"float64"), num_samples=Tensor([],"int64"), name=None, )
paddle.multinomial(Tensor([7, 8000],"float32"), 1, )
paddle.multinomial(Tensor([7],"float32"), num_samples=4, name=None, )
paddle.multinomial(Tensor([7],"float64"), num_samples=4, name=None, )
paddle.multinomial(Tensor([8, 8000],"float32"), 1, )
paddle.multinomial(Tensor([9, 8000],"float32"), 1, )
paddle.multiplex(inputs=list[Tensor([2, 3],"float32"),Tensor([2, 3],"float32"),Tensor([2, 3],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([3, 3],"float32"),Tensor([3, 3],"float32"),Tensor([3, 3],"float32"),], index=Tensor([3, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),], index=Tensor([4, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([7, 4],"float32"),Tensor([7, 4],"float32"),], index=Tensor([6, 1],"int32"), )
paddle.multiply(Tensor([40, 40],"bfloat16"), Tensor([40, 40],"bfloat16"), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 4],"float64"), output_size=Tensor([2],"int64"), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 4, 4, 3],"float64"), output_size=Tensor([2],"int32"), data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 32],"float64"), output_size=Tensor([3],"int64"), )
paddle.nn.functional.adaptive_log_softmax_with_loss(Tensor([128, 16],"float32"), Tensor([128],"int64"), Tensor([16, 8],"float32"), list[list[Tensor([16, 8],"float32"),Tensor([8, 5],"float32"),],list[Tensor([16, 4],"float32"),Tensor([4, 5],"float32"),],list[Tensor([16, 2],"float32"),Tensor([2, 5],"float32"),],], list[5,10,15,20,], None, )
paddle.nn.functional.adaptive_log_softmax_with_loss(Tensor([4, 8],"float32"), Tensor([4],"int64"), Tensor([8, 3],"float32"), list[list[Tensor([8, 4],"float32"),Tensor([4, 2],"float32"),],], list[2,4,], None, )
paddle.nn.functional.adaptive_log_softmax_with_loss(Tensor([8, 8],"float32"), Tensor([8],"int64"), Tensor([8, 3],"float32"), list[list[Tensor([8, 4],"float32"),Tensor([4, 2],"float32"),],], list[2,4,], None, )
paddle.nn.functional.affine_grid(Tensor([1, 2, 3],"float32"), Tensor([4],"int32"), align_corners=True, )
paddle.nn.functional.affine_grid(Tensor([1, 2, 3],"float64"), Tensor([4],"int32"), align_corners=True, )
paddle.nn.functional.affine_grid(Tensor([4, 2, 3],"float64"), Tensor([4],"int32"), align_corners=False, )
paddle.nn.functional.affine_grid(Tensor([4, 2, 3],"float64"), Tensor([4],"int32"), align_corners=True, )
paddle.nn.functional.alpha_dropout(x=Tensor([40, 40],"bfloat16"), p=0.0, )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 1, 2],"float64"), label=Tensor([1, 1, 2],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 21504, 10],"float32"), Tensor([1, 21504, 10],"float32"), weight=Tensor([1, 21504, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 21504, 15],"float32"), Tensor([1, 21504, 15],"float32"), weight=Tensor([1, 21504, 15],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 24276, 10],"float32"), Tensor([1, 24276, 10],"float32"), weight=Tensor([1, 24276, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 27216, 10],"float32"), Tensor([1, 27216, 10],"float32"), weight=Tensor([1, 27216, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 30324, 10],"float32"), Tensor([1, 30324, 10],"float32"), weight=Tensor([1, 30324, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 33600, 10],"float32"), Tensor([1, 33600, 10],"float32"), weight=Tensor([1, 33600, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 37044, 10],"float32"), Tensor([1, 37044, 10],"float32"), weight=Tensor([1, 37044, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 40656, 10],"float32"), Tensor([1, 40656, 10],"float32"), weight=Tensor([1, 40656, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 44436, 10],"float32"), Tensor([1, 44436, 10],"float32"), weight=Tensor([1, 44436, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 48384, 10],"float32"), Tensor([1, 48384, 10],"float32"), weight=Tensor([1, 48384, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 52500, 10],"float32"), Tensor([1, 52500, 10],"float32"), weight=Tensor([1, 52500, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 56784, 10],"float32"), Tensor([1, 56784, 10],"float32"), weight=Tensor([1, 56784, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 61236, 10],"float32"), Tensor([1, 61236, 10],"float32"), weight=Tensor([1, 61236, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 65856, 10],"float32"), Tensor([1, 65856, 10],"float32"), weight=Tensor([1, 65856, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 70644, 10],"float32"), Tensor([1, 70644, 10],"float32"), weight=Tensor([1, 70644, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 75600, 10],"float32"), Tensor([1, 75600, 10],"float32"), weight=Tensor([1, 75600, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 8400, 2],"float32"), Tensor([1, 8400, 2],"float32"), weight=Tensor([1, 8400, 2],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([100, 1],"float32"), Tensor([100, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1000, 1],"float32"), Tensor([1000, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1003, 1],"float32"), Tensor([1003, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1003, 7, 4],"float32"), Tensor([1003, 7, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1008, 1],"float32"), Tensor([1008, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10080, 1],"float32"), Tensor([10080, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1009, 1],"float32"), Tensor([1009, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([101, 4],"float32"), Tensor([101, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1010, 1],"float32"), Tensor([1010, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1012, 1],"float32"), Tensor([1012, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1014, 1],"float32"), Tensor([1014, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1015, 1],"float32"), Tensor([1015, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10160, 1],"float32"), Tensor([10160, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1019, 1],"float32"), Tensor([1019, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([102, 1],"float32"), Tensor([102, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([102, 4],"float32"), Tensor([102, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([10204, 1],"float32"), Tensor([10204, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1021, 2, 4],"float32"), Tensor([1021, 2, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10244, 11],"float32"), Tensor([10244, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10284, 1],"float32"), Tensor([10284, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10285, 11],"float32"), Tensor([10285, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10304, 1],"float32"), Tensor([10304, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10308, 4],"float32"), Tensor([10308, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([103286, 1],"float32"), Tensor([103286, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1034, 1],"float32"), Tensor([1034, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10344, 11],"float32"), Tensor([10344, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1035, 1],"float32"), Tensor([1035, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10352, 1],"float32"), Tensor([10352, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1036, 1],"float32"), Tensor([1036, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10370, 1],"float32"), Tensor([10370, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10372, 11],"float32"), Tensor([10372, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1038, 3, 4],"float32"), Tensor([1038, 3, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([104, 1],"float32"), Tensor([104, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1041, 2, 4],"float32"), Tensor([1041, 2, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1042, 1],"float32"), Tensor([1042, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1043, 2, 4],"float32"), Tensor([1043, 2, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1047, 1],"float32"), Tensor([1047, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1049, 1],"float32"), Tensor([1049, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([105, 1],"float32"), Tensor([105, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([105, 2, 4],"float32"), Tensor([105, 2, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1051, 1],"float32"), Tensor([1051, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10521, 11],"float32"), Tensor([10521, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([105581, 1],"float32"), Tensor([105581, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1056, 1],"float32"), Tensor([1056, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([106, 1, 4],"float32"), Tensor([106, 1, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1060, 1],"float32"), Tensor([1060, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1062, 1],"float32"), Tensor([1062, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([106204, 1],"float32"), Tensor([106204, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1063, 1],"float32"), Tensor([1063, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1065, 1],"float32"), Tensor([1065, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1066, 1],"float32"), Tensor([1066, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1069, 1],"float32"), Tensor([1069, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([107, 1, 4],"float32"), Tensor([107, 1, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([107, 2, 4],"float32"), Tensor([107, 2, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([107, 4],"float32"), Tensor([107, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([107416, 1],"float32"), Tensor([107416, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10746, 1],"float32"), Tensor([10746, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1077, 1],"float32"), Tensor([1077, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1078, 6, 4],"float32"), Tensor([1078, 6, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10780, 1],"float32"), Tensor([10780, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([108, 1],"float32"), Tensor([108, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([108, 4],"float32"), Tensor([108, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1080, 1],"float32"), Tensor([1080, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1082, 1],"float32"), Tensor([1082, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1082, 4, 4],"float32"), Tensor([1082, 4, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([108273, 1],"float32"), Tensor([108273, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10880, 11],"float32"), Tensor([10880, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([109, 1, 4],"float32"), Tensor([109, 1, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10912, 11],"float32"), Tensor([10912, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10934, 1],"float32"), Tensor([10934, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1096, 1],"float32"), Tensor([1096, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1098, 1],"float32"), Tensor([1098, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([110, 1],"float32"), Tensor([110, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([110, 2, 4],"float32"), Tensor([110, 2, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([110, 4],"float32"), Tensor([110, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1100, 1],"float32"), Tensor([1100, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1102, 1],"float32"), Tensor([1102, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1107, 1],"float32"), Tensor([1107, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1108, 1],"float32"), Tensor([1108, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([111, 1],"float32"), Tensor([111, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([11144, 11],"float32"), Tensor([11144, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([111776, 11],"float32"), Tensor([111776, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1119, 2, 4],"float32"), Tensor([1119, 2, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1119, 5, 4],"float32"), Tensor([1119, 5, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([11190, 1],"float32"), Tensor([11190, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1120, 1],"float32"), Tensor([1120, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([112112, 11],"float32"), Tensor([112112, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([112230, 11],"float32"), Tensor([112230, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1123, 1],"float32"), Tensor([1123, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1124, 1],"float32"), Tensor([1124, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([11253, 1],"float32"), Tensor([11253, 1],"float32"), reduction="none", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), Tensor([1],"float32"), output_size=Tensor([2],"int64"), )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 2, 2, 6],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=Tensor([2],"int32"), stride=2, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
paddle.nn.functional.ctc_loss(Tensor([3, 3, 15],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int64"), Tensor([3],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([4, 4, 34],"float32"), Tensor([4, 4],"int32"), Tensor([4],"int64"), Tensor([4],"int64"), blank=33, reduction="mean", )
paddle.nn.functional.ctc_loss(Tensor([4, 4, 34],"float32"), Tensor([4, 4],"int32"), Tensor([4],"int64"), Tensor([4],"int64"), blank=33, reduction="sum", )
paddle.nn.functional.ctc_loss(Tensor([40, 4, 6625],"float32"), Tensor([4, 25],"int32"), Tensor([4],"int64"), Tensor([4],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([40, 8, 6625],"float32"), Tensor([8, 25],"int32"), Tensor([8],"int64"), Tensor([8],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([5, 2, 3],"float64"), labels=Tensor([2, 3],"int32"), input_lengths=Tensor([2],"int64"), label_lengths=Tensor([2],"int64"), blank=0, reduction="mean", )
paddle.nn.functional.ctc_loss(Tensor([5, 2, 3],"float64"), labels=Tensor([2, 3],"int32"), input_lengths=Tensor([2],"int64"), label_lengths=Tensor([2],"int64"), blank=0, reduction="none", )
paddle.nn.functional.ctc_loss(Tensor([5, 2, 3],"float64"), Tensor([2, 3],"int32"), Tensor([2],"int64"), Tensor([2],"int64"), 0, "mean", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([5, 2, 3],"float64"), Tensor([2, 3],"int32"), Tensor([2],"int64"), Tensor([2],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.dice_loss(Tensor([5, 2],"float64"), label=Tensor([5, 1],"int64"), epsilon=1e-05, )
paddle.nn.functional.embedding(Tensor([1, 1, 1],"int64"), weight=Tensor([20, 32],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 10],"int64"), weight=Tensor([10, 32],"float64"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 10],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 100],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 101],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 102],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 103],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 104],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 105],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 106],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 107],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 108],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 109],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 11],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 110],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 111],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 112],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 113],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 114],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 115],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 116],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 117],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 118],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 119],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 120],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.feature_alpha_dropout(x=Tensor([40, 40],"bfloat16"), p=0.0, )
paddle.nn.functional.gather_tree(Tensor([11, 4, 4],"int64"), Tensor([11, 4, 4],"int64"), )
paddle.nn.functional.gather_tree(Tensor([11, 4, 8],"int64"), Tensor([11, 4, 8],"int64"), )
paddle.nn.functional.gather_tree(Tensor([21, 8, 4],"int64"), Tensor([21, 8, 4],"int64"), )
paddle.nn.functional.gather_tree(Tensor([3, 2, 2],"int64"), Tensor([3, 2, 2],"int64"), )
paddle.nn.functional.gather_tree(Tensor([6, 4, 4],"int64"), Tensor([6, 4, 4],"int64"), )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2, 1],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2, 1],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), full=True, reduction="mean", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), full=True, reduction="sum", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), True, 1e-06, "mean", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), True, 1e-06, "sum", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float64"), Tensor([10, 2],"float64"), Tensor([10, 2],"float64"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float64"), Tensor([10, 2],"float64"), Tensor([10, 2],"float64"), full=False, reduction="none", )
paddle.nn.functional.interpolate(Tensor([1, 2, 256, 256],"float32"), list[Tensor([1],"int64"),Tensor([1],"int64"),], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=Tensor([1],"int32"), scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 6, 6],"float32"), size=None, scale_factor=Tensor([3],"int64"), mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 640, 640],"float32"), size=Tensor([2],"int64"), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 3, 640, 640],"float32"), size=Tensor([2],"int64"), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float64"), size=None, scale_factor=Tensor([2],"float32"), mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float64"), size=Tensor([2],"int32"), scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([8, 3, 640, 640],"float32"), size=Tensor([2],"int64"), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 3, 4],"int32"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 3, 4],"int64"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 2, 6, 6, 6],"int64"), scale_factor=Tensor([3],"int64"), mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 6, 6],"float32"), scale_factor=Tensor([3],"int64"), mode="trilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 6],"float32"), scale_factor=list[Tensor([],"float32"),Tensor([],"float32"),], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 6],"float32"), scale_factor=Tensor([],"float32"), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 6],"float32"), size=list[Tensor([],"int32"),Tensor([],"int32"),], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 6],"int64"), scale_factor=Tensor([2],"int64"), mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6],"float32"), scale_factor=Tensor([1],"float32"), mode="LINEAR", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(x=Tensor([4, 128, 38, 38],"float32"), size=Tensor([2],"int32"), mode="nearest", )
paddle.nn.functional.interpolate(x=Tensor([4, 256, 19, 19],"float32"), size=Tensor([2],"int32"), mode="nearest", )
paddle.nn.functional.linear(x=Tensor([1, 10],"float16"), weight=Tensor([10, 1],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 10],"float16"), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 10],"float32"), weight=Tensor([10, 10],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 5],"float32"), weight=Tensor([5, 5],"float16"), bias=Tensor([5],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 96],"float32"), weight=Tensor([96, 4],"float16"), bias=Tensor([4],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 10],"float16"), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([100, 1000],"float32"), weight=Tensor([1000, 1000],"float16"), bias=Tensor([1000],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([100, 1024],"float32"), weight=Tensor([1024, 1024],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([100, 1024],"float32"), weight=Tensor([1024, 1024],"float16"), bias=Tensor([1024],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 2],"float32"), weight=Tensor([2, 2],"float16"), bias=Tensor([2],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 2],"float32"), weight=Tensor([2, 4],"float16"), bias=Tensor([4],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 2048],"float16"), weight=Tensor([2048, 102],"float32"), bias=Tensor([102],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 8, 8, 8],"float32"), weight=Tensor([8, 8],"float16"), bias=Tensor([8],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([32, 1000],"float32"), weight=Tensor([1000, 1000],"float16"), bias=Tensor([1000],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 5],"float32"), weight=Tensor([5, 5],"float16"), bias=Tensor([5],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 2048],"float16"), weight=Tensor([2048, 102],"float32"), bias=Tensor([102],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 4096],"float16"), weight=Tensor([4096, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([1, 10],"float32"),), weight=Tensor([10, 10],"float16"), bias=None, name=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([2, 4],"float64"), label=Tensor([2],"int64"), margin1=0.8, margin2=0.0, margin3=0.15, scale=40.0, group=None, return_softmax=False, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([2, 4],"float64"), label=Tensor([2],"int64"), margin1=1.0, margin2=0.5, margin3=0.0, scale=64.0, group=None, return_softmax=False, reduction="mean", )
paddle.nn.functional.margin_cross_entropy(Tensor([2, 4],"float64"), label=Tensor([2],"int64"), margin1=1.0, margin2=0.7, margin3=0.2, scale=32.0, group=None, return_softmax=False, reduction="mean", )
paddle.nn.functional.margin_cross_entropy(Tensor([2, 4],"float64"), Tensor([2],"int64"), margin1=1.0, margin2=0.7, margin3=0.2, scale=64.0, return_softmax=True, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 37],"float16"), Tensor([5],"int64"), return_softmax=False, margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, group=None, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 37],"float32"), Tensor([5],"int64"), return_softmax=False, margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, group=None, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 37],"float64"), Tensor([5],"int64"), margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, return_softmax=True, reduction="mean", )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 37],"float64"), Tensor([5],"int64"), margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, return_softmax=True, reduction="sum", )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 37],"float64"), Tensor([5],"int64"), margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, return_softmax=True, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 37],"float64"), Tensor([5],"int64"), return_softmax=False, margin1=1.0, margin2=0.0, margin3=0.35, scale=2.0, group=None, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 37],"float64"), Tensor([5],"int64"), return_softmax=False, margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, group=None, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 37],"float64"), Tensor([5],"int64"), return_softmax=False, margin1=1.35, margin2=0.0, margin3=0.0, scale=2.0, group=None, reduction=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float32"), Tensor([1, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float32"), Tensor([2, 4, 11, 11],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float64"), Tensor([2, 4, 11, 11],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float32"), Tensor([2, 4, 20, 10],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float64"), Tensor([2, 4, 20, 10],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float32"), Tensor([2, 4, 21, 21],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float64"), Tensor([2, 4, 21, 21],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 7, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 2, 5, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.multi_margin_loss(input=Tensor([5, 2],"float64"), label=Tensor([5],"int64"), p=1, margin=1.0, weight=Tensor([2],"float64"), reduction="mean", )
paddle.nn.functional.multi_margin_loss(input=Tensor([5, 2],"float64"), label=Tensor([5],"int64"), p=2, margin=1.0, weight=None, reduction="mean", )
paddle.nn.functional.multi_margin_loss(Tensor([5, 2],"float64"), Tensor([5],"int64"), p=1, margin=1.0, weight=Tensor([2],"float64"), reduction="mean", name=None, )
paddle.nn.functional.multi_margin_loss(Tensor([5, 2],"float64"), Tensor([5],"int64"), p=2, margin=1.0, weight=None, reduction="mean", name=None, )
paddle.nn.functional.nll_loss(Tensor([10, 10],"float64"), Tensor([10],"int64"), weight=None, ignore_index=-100, reduction="mean", name=None, )
paddle.nn.functional.nll_loss(Tensor([10, 10],"float64"), Tensor([10],"int64"), weight=None, ignore_index=-100, reduction="sum", name=None, )
paddle.nn.functional.nll_loss(Tensor([10, 10],"float64"), Tensor([10],"int64"), weight=Tensor([10],"float64"), ignore_index=-100, reduction="mean", name=None, )
paddle.nn.functional.nll_loss(Tensor([10, 10],"float64"), Tensor([10],"int64"), weight=Tensor([10],"float64"), ignore_index=-100, reduction="none", name=None, )
paddle.nn.functional.nll_loss(Tensor([10, 10],"float64"), Tensor([10],"int64"), weight=Tensor([10],"float64"), ignore_index=-100, reduction="sum", name=None, )
paddle.nn.functional.nll_loss(Tensor([4, 4],"float32"), Tensor([4],"int64"), )
paddle.nn.functional.nll_loss(Tensor([5, 2],"float64"), label=Tensor([5, 5],"int64"), weight=None, ignore_index=-100, reduction="mean", name=None, )
paddle.nn.functional.nll_loss(Tensor([5, 2],"float64"), Tensor([5, 5],"int64"), weight=None, ignore_index=-100, reduction="mean", name=None, )
paddle.nn.functional.nll_loss(Tensor([5, 3, 2, 4],"float32"), Tensor([5, 2, 4],"int64"), )
paddle.nn.functional.nll_loss(Tensor([5, 3, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"int64"), weight=None, ignore_index=-100, reduction="mean", name=None, )
paddle.nn.functional.nll_loss(Tensor([5, 3, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"int64"), weight=Tensor([3],"float64"), ignore_index=-100, reduction="mean", name=None, )
paddle.nn.functional.nll_loss(Tensor([5, 3, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"int64"), weight=Tensor([3],"float64"), ignore_index=-100, reduction="none", name=None, )
paddle.nn.functional.nll_loss(Tensor([5, 3, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"int64"), weight=Tensor([3],"float64"), ignore_index=-100, reduction="sum", name=None, )
paddle.nn.functional.nll_loss(Tensor([5, 3, 5, 5],"float64"), Tensor([5, 5, 5],"int64"), weight=None, ignore_index=-100, reduction="mean", name=None, )
paddle.nn.functional.nll_loss(Tensor([5, 3, 5, 5],"float64"), Tensor([5, 5, 5],"int64"), weight=None, ignore_index=-100, reduction="sum", name=None, )
paddle.nn.functional.nll_loss(Tensor([5, 3, 5, 5],"float64"), Tensor([5, 5, 5],"int64"), weight=Tensor([3],"float64"), ignore_index=-100, reduction="mean", name=None, )
paddle.nn.functional.nll_loss(Tensor([5, 3, 5, 5],"float64"), Tensor([5, 5, 5],"int64"), weight=Tensor([3],"float64"), ignore_index=-100, reduction="sum", name=None, )
paddle.nn.functional.nll_loss(Tensor([5, 3],"float32"), Tensor([5],"int64"), )
paddle.nn.functional.pad(Tensor([1, 1, 1, 1],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 10, 10],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 100, 100],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 100, 100],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 101, 101],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 101, 101],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 102, 102],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 102, 102],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 103, 103],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 103, 103],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 104, 104],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 104, 104],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 105, 105],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 106, 106],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 106, 106],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 107, 107],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 108, 108],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 108, 108],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 109, 109],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 109, 109],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 11, 11],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 110, 110],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 110, 110],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 111, 111],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 111, 111],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 112, 112],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 112, 112],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 113, 113],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 113, 113],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 114, 114],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 114, 114],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 115, 115],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 115, 115],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 116, 116],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 116, 116],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 117, 117],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 117, 117],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 118, 118],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 118, 118],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 119, 119],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 119, 119],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 12, 12],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 120, 120],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 120, 120],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 121, 121],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 121, 121],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 122, 122],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 123, 123],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 123, 123],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 124, 124],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 124, 124],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 125, 125],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 125, 125],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 126, 126],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 126, 126],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 127, 127],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 127, 127],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 128, 128],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 128, 128],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 128, 224],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 129, 129],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 129, 129],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 13, 13],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 130, 130],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 130, 130],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 131, 131],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 132, 132],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 133, 133],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 133, 133],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 134, 134],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 134, 134],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 135, 135],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 135, 135],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 136, 136],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 137, 137],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 138, 138],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 138, 138],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 139, 139],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 139, 139],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 14, 14],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 140, 140],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 140, 140],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 141, 141],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 141, 141],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 142, 142],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 142, 142],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 143, 143],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 144, 144],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 144, 144],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 145, 145],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 146, 146],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 147, 147],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 147, 147],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 148, 148],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 149, 149],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 149, 149],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 15, 15],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 150, 150],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 150, 150],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 151, 151],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 151, 151],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 152, 152],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 153, 153],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 154, 154],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 154, 154],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 155, 155],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 155, 155],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 156, 156],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 157, 157],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 158, 158],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 158, 158],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 159, 159],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 16, 16],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 160, 160],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 160, 416],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 161, 161],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 162, 162],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 162, 162],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 163, 163],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 163, 163],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 164, 164],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 164, 164],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 165, 165],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 165, 165],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 166, 166],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 167, 167],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 168, 168],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 169, 169],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 169, 169],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 17, 17],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 17, 17],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 170, 170],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 170, 170],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 171, 171],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 171, 171],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 172, 172],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 172, 172],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 173, 173],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 173, 173],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 174, 174],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 175, 175],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 175, 175],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 176, 176],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 176, 176],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 177, 177],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 178, 178],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 179, 179],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 18, 18],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 180, 180],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 181, 181],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 181, 181],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 182, 182],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 183, 183],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 183, 183],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 184, 184],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 185, 185],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 186, 186],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 187, 187],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 187, 187],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 188, 188],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 189, 189],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 189, 189],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 19, 19],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 19, 19],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 190, 190],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 190, 190],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 191, 191],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 191, 191],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 192, 192],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 192, 192],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 192, 512],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 193, 193],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 193, 193],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 194, 194],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 194, 194],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 195, 195],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 196, 196],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 197, 197],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 197, 197],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 198, 198],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 198, 198],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 199, 199],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 2, 2],"int32"), pad=list[2,2,2,2,2,2,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 2, 2],"int64"), pad=list[2,2,2,2,2,2,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 2],"int32"), pad=list[2,2,2,2,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 2],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 2],"int64"), pad=list[2,2,2,2,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 20, 20],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 20, 20],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 200, 200],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 200, 200],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 201, 201],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 202, 202],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 203, 203],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 203, 203],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 204, 204],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 205, 205],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 206, 206],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 207, 207],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 207, 207],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 208, 208],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 209, 209],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 209, 209],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 21, 21],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 21, 21],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 210, 210],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 210, 210],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 211, 211],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 211, 211],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 212, 212],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 212, 212],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 213, 213],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 214, 214],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 215, 215],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 216, 216],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 217, 217],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 218, 218],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 219, 219],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 22, 22],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 220, 220],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 220, 220],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 221, 221],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 222, 222],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 222, 222],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 223, 223],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 224, 224],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 225, 225],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 226, 226],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 226, 226],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 227, 227],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 227, 227],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 228, 228],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 229, 229],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 23, 23],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 23, 23],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 230, 230],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 231, 231],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 232, 232],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 233, 233],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 234, 234],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 235, 235],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 236, 236],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 237, 237],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 238, 238],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 239, 239],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 24, 24],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 24, 24],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 240, 240],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 240, 240],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 241, 241],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 241, 241],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 242, 242],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 243, 243],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 243, 243],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 244, 244],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 245, 245],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 246, 246],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 247, 247],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 248, 248],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 249, 249],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 249, 249],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 25, 25],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 250, 250],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 251, 251],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 252, 252],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 253, 253],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 253, 253],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 254, 254],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 255, 255],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 256, 256],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 257, 257],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 258, 258],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 259, 259],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 26, 26],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 26, 26],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 260, 260],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 261, 261],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 262, 262],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 263, 263],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 264, 264],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 264, 264],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 265, 265],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 266, 266],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 267, 267],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 268, 268],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 268, 268],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 269, 269],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 27, 27],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 270, 270],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 270, 270],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 271, 271],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 272, 272],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 273, 273],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 274, 274],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 274, 274],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 275, 275],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 276, 276],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 276, 276],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 277, 277],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 277, 277],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 278, 278],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 279, 279],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 28, 28],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 28, 28],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 280, 280],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 281, 281],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 282, 282],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 283, 283],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 284, 284],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 285, 285],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 286, 286],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 287, 287],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 288, 288],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 289, 289],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 29, 29],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 29, 29],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 290, 290],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 291, 291],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 292, 292],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 293, 293],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 293, 293],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 298, 298],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 3, 3],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 30, 30],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 30, 30],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 302, 302],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 307, 307],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 31, 31],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 31, 31],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 32, 32],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 32, 32],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 32, 512],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 32, 544],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 32, 576],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 32, 672],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 33, 33],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 33, 33],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 336, 336],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 339, 339],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 34, 34],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 34, 34],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 35, 35],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 35, 35],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 355, 355],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 36, 36],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 36, 36],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 369, 369],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 37, 37],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 38, 38],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 39, 39],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 39, 39],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 4, 4],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 40, 40],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 41, 41],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 42, 42],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 42, 42],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 43, 43],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 43, 43],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 44, 44],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 44, 44],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 45, 45],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 457, 457],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 46, 46],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 46, 46],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 47, 47],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 47, 47],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 477, 477],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 48, 48],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 48, 48],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 49, 49],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 49, 49],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 498, 498],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 5, 5],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 50, 50],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 50, 50],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 51, 51],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 52, 52],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 52, 52],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 53, 53],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 53, 53],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 54, 54],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 54, 54],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 55, 55],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 55, 55],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 56, 56],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 56, 56],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 57, 57],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 57, 57],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 58, 58],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 59, 59],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 59, 59],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 6, 6],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 60, 60],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 61, 61],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 61, 61],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 62, 62],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 62, 62],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 63, 63],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 63, 63],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 64, 64],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 64, 64],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 65, 65],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 66, 66],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 66, 66],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 67, 67],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 67, 67],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 68, 68],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 68, 68],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 69, 69],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 69, 69],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 7, 7],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 70, 70],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 70, 70],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 71, 71],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 71, 71],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 72, 72],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 72, 72],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 73, 73],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 73, 73],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 74, 74],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 74, 74],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 75, 75],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 75, 75],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 76, 76],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 76, 76],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 77, 77],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 77, 77],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 78, 78],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 78, 78],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 79, 79],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 79, 79],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 8, 8],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 80, 80],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 80, 80],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 81, 81],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 81, 81],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 82, 82],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 82, 82],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 83, 83],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 83, 83],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 84, 84],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 84, 84],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 85, 85],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 85, 85],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 86, 86],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 86, 86],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 87, 87],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 87, 87],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 88, 88],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 88, 88],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 89, 89],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 9, 9],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 90, 90],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 90, 90],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 91, 91],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 91, 91],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 92, 92],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 92, 92],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 93, 93],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 93, 93],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 94, 94],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 94, 94],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 95, 95],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 95, 95],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 160],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 256],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 288],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 384],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 416],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 448],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 576],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 608],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 640],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 96],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 96],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 97, 97],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 97, 97],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 98, 98],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 98, 98],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 99, 99],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 99, 99],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 104],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 112],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 144],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 152],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 160],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 64],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 72],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 96],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 32, 56],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 40, 104],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 48, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 8, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 8, 136],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 8, 144],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 8, 168],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 2, 3],"int32"), pad=list[1,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 3],"int32"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 3],"int32"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 3],"int32"), pad=list[2,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 3],"int64"), pad=list[1,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 3],"int64"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 3],"int64"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 3],"int64"), pad=list[2,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 20],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 32],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 36],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 48],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 52],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 56],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 72],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 76],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 80],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 16, 28],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 20, 52],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 24, 64],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 4, 64],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 4, 68],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 4, 72],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 4, 84],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 6, 6, 3],"float32"), Tensor([4],"int32"), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 64, 16, 256],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 16, 272],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 16, 288],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 16, 336],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 128],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 144],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 192],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 208],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 224],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 288],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 304],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 320],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 80],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 64, 112],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 80, 208],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 96, 256],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 1, 32, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 32, 160],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 32, 192],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 32, 224],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 32, 256],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 32, 288],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 32, 320],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 32, 384],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 32, 64],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 32, 96],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 160],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 192],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 224],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 256],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 288],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 320],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 352],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 384],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 416],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 512],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 544],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 1, 32, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 1, 32, 64],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 1, 32, 640],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 1, 64, 160],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 1, 64, 224],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 1, 64, 320],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 1, 64, 512],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 1, 64, 64],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 1, 64, 640],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 1, 96, 224],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 1, 96, 320],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 1, 96, 480],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 16, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 16, 160],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 16, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 16, 56],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 16, 80],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 24, 120],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 24, 56],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 24, 80],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 8, 160],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 8, 32],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 3, 4, 5],"complex128"), pad=Tensor([4],"int32"), mode="constant", value=100, )
paddle.nn.functional.pad(Tensor([2, 3, 4, 5],"complex128"), pad=Tensor([4],"int32"), mode="constant", value=100, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 5],"complex128"), pad=Tensor([4],"int32"), mode="constant", value=100, data_format="NHWC", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 5],"complex64"), pad=Tensor([4],"int32"), mode="constant", value=100, )
paddle.nn.functional.pad(Tensor([2, 3, 4, 5],"complex64"), pad=Tensor([4],"int32"), mode="constant", value=100, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 5],"complex64"), pad=Tensor([4],"int32"), mode="constant", value=100, data_format="NHWC", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 5],"float32"), pad=Tensor([4],"int32"), mode="constant", value=100, )
paddle.nn.functional.pad(Tensor([2, 3, 4, 5],"float32"), pad=Tensor([4],"int32"), mode="constant", value=100, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 5],"float32"), pad=Tensor([4],"int32"), mode="constant", value=100, data_format="NHWC", )
paddle.nn.functional.pad(Tensor([2, 64, 16, 32],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 64, 16, 320],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 64, 16, 64],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 64, 32, 112],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 64, 32, 160],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 64, 32, 256],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 64, 32, 32],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 64, 32, 320],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 64, 32, 80],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 64, 48, 112],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 64, 48, 160],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 64, 48, 240],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([3, 1, 32, 160],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([3, 1, 64, 32],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([3, 1, 64, 416],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([3, 1, 64, 672],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 7],"complex128"), pad=Tensor([6],"int64"), mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 7],"complex128"), pad=Tensor([6],"int64"), mode="reflect", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 7],"complex64"), pad=Tensor([6],"int64"), mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 7],"complex64"), pad=Tensor([6],"int64"), mode="reflect", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 7],"float32"), pad=Tensor([6],"int64"), mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 7],"float32"), pad=Tensor([6],"int64"), mode="reflect", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5],"complex128"), pad=Tensor([2],"int32"), mode="constant", value=100, )
paddle.nn.functional.pad(Tensor([3, 4, 5],"complex128"), pad=Tensor([2],"int32"), mode="constant", value=100, data_format="NCL", )
paddle.nn.functional.pad(Tensor([3, 4, 5],"complex128"), pad=Tensor([2],"int32"), mode="constant", value=100, data_format="NLC", )
paddle.nn.functional.pad(Tensor([3, 4, 5],"complex64"), pad=Tensor([2],"int32"), mode="constant", value=100, )
paddle.nn.functional.pad(Tensor([3, 4, 5],"complex64"), pad=Tensor([2],"int32"), mode="constant", value=100, data_format="NCL", )
paddle.nn.functional.pad(Tensor([3, 4, 5],"complex64"), pad=Tensor([2],"int32"), mode="constant", value=100, data_format="NLC", )
paddle.nn.functional.pad(Tensor([3, 4, 5],"float32"), pad=Tensor([2],"int32"), mode="constant", value=100, )
paddle.nn.functional.pad(Tensor([3, 4, 5],"float32"), pad=Tensor([2],"int32"), mode="constant", value=100, data_format="NCL", )
paddle.nn.functional.pad(Tensor([3, 4, 5],"float32"), pad=Tensor([2],"int32"), mode="constant", value=100, data_format="NLC", )
paddle.nn.functional.pad(Tensor([3, 64, 16, 80],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([3, 64, 32, 16],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([3, 64, 32, 208],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([3, 64, 32, 336],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([4, 1, 32, 288],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([4, 1, 32, 32],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([4, 1, 32, 480],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([4, 1, 32, 608],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([4, 1, 32, 96],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([4, 1, 64, 96],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([4, 3, 224, 224],"int64"), pad=list[2,2,4,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 6, 6, 6],"int32"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 6, 6, 6],"int64"), pad=list[1,2,3,4,5,6,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 6, 6, 6],"int64"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 6, 6, 6],"int64"), pad=Tensor([6],"int32"), mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 6, 6, 6],"int64"), pad=tuple(1,2,3,4,5,6,), mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 6, 6],"int32"), pad=list[2,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([4, 6, 6],"int64"), pad=list[1,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([4, 6, 6],"int64"), pad=list[2,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([4, 6, 6],"int64"), pad=Tensor([2],"int32"), mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([4, 6, 6],"int64"), pad=tuple(1,2,), mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([4, 64, 16, 144],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([4, 64, 16, 240],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([4, 64, 16, 304],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([4, 64, 16, 48],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([4, 64, 32, 48],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([5, 1, 64, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([5, 1, 64, 256],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([5, 1, 64, 576],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([6, 1, 32, 192],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([6, 1, 32, 352],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([6, 1, 32, 448],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([6, 1, 64, 384],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([7, 1, 64, 192],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([7, 1, 64, 608],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([8, 1, 32, 256],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([8, 1, 64, 448],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([8, 1, 64, 480],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([9, 1, 32, 416],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([9, 1, 64, 352],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"bfloat16"), Tensor([10, 2],"bfloat16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"bfloat16"), Tensor([10, 2],"bfloat16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.rnnt_loss(Tensor([3, 4, 3, 3],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), blank=0, fastemit_lambda=0.0, reduction="none", name=None, )
paddle.nn.functional.rnnt_loss(Tensor([3, 4, 3, 3],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), blank=0, reduction="mean", fastemit_lambda=0.0, )
paddle.nn.functional.sequence_mask(Tensor([0],"int64"), )
paddle.nn.functional.sequence_mask(Tensor([3],"float32"), dtype=type(numpy.float64), )
paddle.nn.functional.softmax(Tensor([1, 2, 2048, 2048],"bfloat16"), )
paddle.nn.functional.softmax(Tensor([2, 2],"float32"), axis=Tensor([],"int64"), )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([1, 10],"float32"), Tensor([1, 1],"int64"), )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([100, 10],"float32"), Tensor([100, 1],"int64"), )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 32, 64],"float32"), Tensor([2, 1, 32, 64],"int64"), axis=1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 32, 64],"float32"), Tensor([2, 16, 1, 64],"int64"), axis=2, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 32, 64],"float32"), Tensor([2, 16, 32, 1],"int64"), axis=-1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 32, 64],"float32"), Tensor([2, 16, 32, 1],"int64"), axis=3, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16],"float32"), Tensor([2, 1],"int64"), )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16],"float32"), Tensor([2, 1],"int64"), return_softmax=True, )
paddle.nn.functional.sparse_attention(Tensor([1, 1, 8, 4],"float64"), Tensor([1, 1, 8, 4],"float64"), Tensor([1, 1, 8, 4],"float64"), Tensor([1, 1, 9],"int32"), Tensor([1, 1, 16],"int32"), key_padding_mask=Tensor([1, 8],"float64"), attn_mask=Tensor([8, 8],"float64"), )
paddle.nn.functional.sparse_attention(Tensor([2, 1, 64, 32],"float64"), Tensor([2, 1, 64, 32],"float64"), Tensor([2, 1, 64, 32],"float64"), Tensor([2, 1, 65],"int32"), Tensor([2, 1, 128],"int32"), )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 224],"int32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 224],"int64"), list[1,2,3,4,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 224],"int64"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 224],"int64"), list[2,2,4,1,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 224],"int64"), Tensor([4],"int32"), )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 224],"int64"), tuple(1,2,3,4,), )
paddle.normal(0.0, 1.0, list[Tensor([],"int32"),Tensor([],"int32"),Tensor([],"int32"),], )
paddle.ones(list[Tensor([],"int32"),Tensor([],"int32"),Tensor([],"int32"),], )
paddle.ones(shape=Tensor([1],"int32"), )
paddle.ones(shape=Tensor([1],"int32"), dtype=type(numpy.int64), )
paddle.ones(shape=Tensor([2],"int32"), )
paddle.ones(shape=Tensor([2],"int32"), dtype="int32", )
paddle.ones(Tensor([],"int64"), dtype=type(bool), )
paddle.ones(tuple(Tensor([],"int64"),Tensor([],"int64"),), dtype="bool", )
paddle.outer(Tensor([5, 10, 10],"int32"), Tensor([2, 10],"int32"), )
paddle.outer(Tensor([5, 10, 10],"int64"), Tensor([2, 10],"int64"), )
paddle.prod(Tensor([10, 10, 9, 9],"float64"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.prod(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.prod(Tensor([2, 2],"float64"), axis=Tensor([1],"int64"), )
paddle.prod(x=Tensor([2, 2],"float64"), axis=Tensor([1],"int64"), )
paddle.put_along_axis(Tensor([1, 3],"float32"), Tensor([1, 1],"int64"), Tensor([],"float32"), 0, "add", )
paddle.put_along_axis(Tensor([1, 3],"float32"), Tensor([1, 1],"int64"), Tensor([],"float32"), 0, "mul", )
paddle.put_along_axis(Tensor([1, 3],"float32"), Tensor([1, 1],"int64"), Tensor([],"float32"), 0, )
paddle.put_along_axis(Tensor([1, 8000],"float32"), Tensor([1, 799],"int64"), Tensor([1, 799],"float32"), 1, )
paddle.put_along_axis(Tensor([10, 10, 10],"float32"), Tensor([5, 5, 5],"int64"), Tensor([5, 5, 5],"float32"), 1, "mul", True, False, )
paddle.put_along_axis(Tensor([10, 10, 10],"int32"), Tensor([5, 5, 5],"int32"), Tensor([5, 5, 5],"int32"), 1, "mul", True, False, )
paddle.put_along_axis(Tensor([10, 10, 10],"int64"), Tensor([5, 5, 5],"int64"), Tensor([5, 5, 5],"int64"), 1, "mul", True, False, )
paddle.put_along_axis(Tensor([10, 10, 10],"uint8"), Tensor([5, 5, 5],"int64"), Tensor([5, 5, 5],"uint8"), 1, "mul", True, False, )
paddle.put_along_axis(Tensor([10, 8000],"float32"), Tensor([10, 799],"int64"), Tensor([10, 799],"float32"), 1, )
paddle.put_along_axis(Tensor([2, 2],"float32"), Tensor([2, 2],"int64"), Tensor([],"float32"), 0, "add", )
paddle.quantile(Tensor([5, 3, 4],"float64"), q=Tensor([2],"float32"), axis=list[1,2,], keepdim=True, )
paddle.repeat_interleave(Tensor([],"float32"), Tensor([1],"int32"), None, )
paddle.repeat_interleave(Tensor([16, 16],"float32"), repeats=2, axis=Tensor([],"int32"), name=None, )
paddle.repeat_interleave(Tensor([2, 3],"bfloat16"), Tensor([6],"int32"), None, )
paddle.repeat_interleave(Tensor([2, 3],"int32"), Tensor([6],"int32"), None, )
paddle.repeat_interleave(Tensor([24, 16],"float32"), repeats=2, axis=Tensor([],"int32"), name=None, )
paddle.repeat_interleave(Tensor([3, 4],"float32"), Tensor([3],"int32"), axis=0, )
paddle.repeat_interleave(Tensor([3, 4],"float32"), Tensor([4],"int32"), 1, )
paddle.repeat_interleave(Tensor([3, 4],"float32"), Tensor([4],"int32"), -1, )
paddle.repeat_interleave(x=Tensor([4, 2, 4, 4, 5],"int32"), repeats=Tensor([2],"int32"), axis=1, )
paddle.reshape(Tensor([1, 1],"float32"), list[Tensor([],"int32"),Tensor([],"int32"),], )
paddle.reshape(Tensor([1, 1],"float32"), Tensor([1],"int32"), )
paddle.reshape(Tensor([1, 1],"float32"), Tensor([3],"int32"), )
paddle.reshape(Tensor([1, 100],"float64"), Tensor([2],"int64"), )
paddle.reshape(Tensor([1, 2, 3],"float32"), Tensor([3],"int64"), )
paddle.reshape(Tensor([1, 2, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([1, 2, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([1, 4, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([1, 4, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([10, 20, 1],"float32"), Tensor([1],"int64"), )
paddle.reshape(Tensor([100],"float32"), Tensor([1],"int64"), )
paddle.reshape(Tensor([100],"float64"), Tensor([1],"int64"), )
paddle.reshape(Tensor([1000, 2],"float64"), Tensor([2],"int64"), )
paddle.reshape(Tensor([2, 1, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 1, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 1, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 64, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 8, 16],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 8, 8, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 25],"float32"), shape=list[Tensor([1],"int32"),10,], )
paddle.reshape(Tensor([2, 25],"float32"), shape=Tensor([3],"int32"), )
paddle.reshape(Tensor([2, 4, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 4, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 8, 1, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 8, 64, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([3, 3, 1],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([3, 3, 3],"float32"), list[3,Tensor([],"int32"),3,], )
paddle.reshape(Tensor([3],"float32"), Tensor([1],"int64"), )
paddle.reshape(Tensor([3],"float64"), Tensor([1],"int64"), )
paddle.reshape(Tensor([4, 1],"float32"), list[Tensor([],"int64"),1,Tensor([],"int64"),], )
paddle.reshape(Tensor([5, 7],"int32"), shape=tuple(Tensor([],"int64"),Tensor([],"int64"),), )
paddle.reshape(Tensor([8, 26, 1, 40, 1],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),-1,], )
paddle.reshape(Tensor([8, 26, 40],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(x=Tensor([2, 2],"float64"), shape=Tensor([2],"int32"), )
paddle.roll(Tensor([0, 3],"float32"), shifts=1, axis=0, )
paddle.roll(Tensor([3, 3],"bool"), shifts=1, )
paddle.roll(Tensor([3, 3],"bool"), shifts=1, axis=0, )
paddle.roll(Tensor([4, 0, 3],"float32"), shifts=1, axis=0, )
paddle.scatter(Tensor([100, 1],"float32"), Tensor([100],"int64"), Tensor([100, 1],"float32"), )
paddle.scatter(Tensor([100, 1],"int64"), Tensor([100],"int64"), Tensor([100, 1],"int64"), )
paddle.scatter(Tensor([1200, 1],"float32"), Tensor([4],"int64"), Tensor([4, 1],"float32"), )
paddle.scatter(Tensor([1200, 1],"int64"), Tensor([4],"int64"), Tensor([4, 1],"int64"), )
paddle.scatter(Tensor([1600, 1],"float32"), Tensor([800],"int64"), Tensor([800, 1],"float32"), )
paddle.scatter(Tensor([1600, 1],"int64"), Tensor([800],"int64"), Tensor([800, 1],"int64"), )
paddle.scatter(Tensor([192, 1],"float32"), Tensor([96],"int64"), Tensor([96, 1],"float32"), )
paddle.scatter_nd(Tensor([1],"int64"), Tensor([],"float32"), list[5,], )
paddle.scatter_nd(Tensor([28, 1],"int64"), Tensor([28],"float32"), list[128,], )
paddle.scatter_nd(Tensor([3, 1],"int64"), Tensor([3],"int64"), list[8,], )
paddle.scatter_nd(Tensor([3, 2],"int64"), Tensor([3, 9, 10],"float32"), list[3,5,9,10,], )
paddle.scatter_nd_add(Tensor([1, 2, 2],"float32"), Tensor([1, 3],"int64"), Tensor([1],"float32"), )
paddle.scatter_nd_add(Tensor([2, 2, 2],"float32"), Tensor([2, 3],"int64"), Tensor([2],"float32"), )
paddle.scatter_nd_add(Tensor([2, 3, 4],"int64"), Tensor([2, 3],"int64"), Tensor([2],"int64"), )
paddle.scatter_nd_add(Tensor([3, 5, 9, 10],"float32"), Tensor([3, 2],"int64"), Tensor([3, 9, 10],"float32"), )
paddle.scatter_nd_add(x=Tensor([2, 3, 4, 2, 4],"float64"), index=Tensor([2, 3],"int64"), updates=Tensor([2, 2, 4],"float64"), )
paddle.scatter_nd_add(x=Tensor([2, 3, 4],"float32"), index=Tensor([2, 3],"int64"), updates=Tensor([2],"float32"), )
paddle.scatter_nd_add(x=Tensor([2, 3, 4],"float64"), index=Tensor([2, 3],"int64"), updates=Tensor([2],"float64"), )
paddle.scatter_nd_add(x=Tensor([2, 3, 4],"int32"), index=Tensor([2, 3],"int64"), updates=Tensor([2],"int32"), )
paddle.scatter_nd_add(x=Tensor([2, 3, 4],"int64"), index=Tensor([2, 3],"int64"), updates=Tensor([2],"int64"), )
paddle.shard_index(input=Tensor([2, 1],"int64"), index_num=20, nshards=2, shard_id=1, )
paddle.shard_index(input=Tensor([2, 1],"int64"), index_num=6, nshards=40, shard_id=4, )
paddle.shard_index(input=Tensor([4, 1],"int64"), index_num=13, nshards=3, shard_id=0, )
paddle.shard_index(input=Tensor([4, 2, 1],"int64"), index_num=20, nshards=4, shard_id=1, )
paddle.shard_index(input=Tensor([4, 2, 1],"int64"), index_num=20, nshards=4, shard_id=1, ignore_value=16, )
paddle.sign(Tensor([1, 4],"float32"), )
paddle.signal.istft(Tensor([257, 471],"complex128"), 512, None, None, Tensor([512],"float64"), True, False, True, None, False, )
paddle.slice(Tensor([0],"float32"), axes=list[0,], starts=list[0,], ends=list[0,], )
paddle.slice(Tensor([1, 11, 32],"float64"), axes=list[1,], starts=list[Tensor([1],"int32"),], ends=list[Tensor([1],"int32"),], )
paddle.slice(Tensor([4, 3, 6],"int64"), axes=list[2,], starts=list[2,], ends=list[2,], )
paddle.slice(Tensor([4, 3, 6],"int64"), axes=list[2,], starts=list[5,], ends=list[5,], )
paddle.slice(Tensor([4, 5, 6],"float32"), axes=list[0,1,2,], starts=Tensor([3],"int32"), ends=Tensor([3],"int32"), )
paddle.slice(Tensor([4, 5, 6],"float32"), axes=list[0,1,2,], starts=Tensor([3],"int64"), ends=Tensor([3],"int64"), )
paddle.slice(Tensor([4, 6, 3],"int64"), axes=list[1,], starts=list[2,], ends=list[2,], )
paddle.slice(Tensor([4, 6, 3],"int64"), axes=list[1,], starts=list[5,], ends=list[5,], )
paddle.slice(Tensor([4, 6],"int64"), axes=list[1,], starts=list[2,], ends=list[2,], )
paddle.slice(Tensor([4, 6],"int64"), axes=list[1,], starts=list[5,], ends=list[5,], )
paddle.slice(Tensor([5, 3, 3],"float32"), list[1,2,], list[Tensor([],"int32"),Tensor([],"int32"),], list[Tensor([],"int32"),Tensor([],"int32"),], )
paddle.slice(Tensor([6, 4, 3],"int64"), axes=list[0,], starts=list[2,], ends=list[2,], )
paddle.slice(Tensor([6, 4, 3],"int64"), axes=list[0,], starts=list[5,], ends=list[5,], )
paddle.slice(Tensor([6, 4],"int64"), axes=list[0,], starts=list[2,], ends=list[2,], )
paddle.slice(Tensor([6, 4],"int64"), axes=list[0,], starts=list[5,], ends=list[5,], )
paddle.slice(Tensor([6],"int64"), axes=list[0,], starts=list[2,], ends=list[2,], )
paddle.slice(Tensor([6],"int64"), axes=list[0,], starts=list[5,], ends=list[5,], )
paddle.slice(Tensor([7],"int64"), axes=list[0,], starts=list[16,], ends=list[16,], )
paddle.slice(Tensor([7],"int64"), axes=list[0,], starts=list[2,], ends=list[2,], )
paddle.slice(Tensor([7],"int64"), axes=list[0,], starts=list[5,], ends=list[5,], )
paddle.slice(Tensor([7],"int64"), axes=list[0,], starts=list[6,], ends=list[6,], )
paddle.split(Tensor([3, 8, 5],"float64"), num_or_sections=2, axis=Tensor([1],"int64"), )
paddle.split(Tensor([4, 6, 6],"int32"), num_or_sections=list[-1,], axis=Tensor([1],"int32"), )
paddle.split(Tensor([4, 6, 6],"int32"), num_or_sections=list[2,2,2,], axis=Tensor([1],"int32"), )
paddle.split(x=Tensor([2, 3],"int32"), num_or_sections=3, axis=Tensor([1],"int32"), )
paddle.square(Tensor([0, 0, 0],"float32"), )
paddle.square(Tensor([0],"float32"), )
paddle.squeeze(Tensor([],"float32"), axis=Tensor([1],"int32"), )
paddle.squeeze(Tensor([1, 2, 1, 3],"float32"), axis=Tensor([2],"int64"), )
paddle.squeeze(Tensor([5, 1, 10],"float32"), Tensor([],"int64"), )
paddle.squeeze(x=Tensor([1, 2, 1, 3],"float64"), axis=Tensor([2],"int64"), )
paddle.strided_slice(Tensor([5, 5, 5],"float32"), list[1,2,], list[Tensor([],"int32"),Tensor([],"int32"),], list[Tensor([],"int32"),Tensor([],"int32"),], list[Tensor([],"int32"),Tensor([],"int32"),], )
paddle.sum(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.sum(Tensor([2, 2],"float64"), axis=Tensor([2],"int64"), )
paddle.sum(x=Tensor([2, 2],"float64"), axis=Tensor([1],"int64"), )
paddle.take_along_axis(Tensor([1, 36828, 4],"float32"), Tensor([1, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([1, 38367, 4],"float32"), Tensor([1, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([1, 6380, 4],"float32"), Tensor([1, 300, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([1, 8550, 4],"float32"), Tensor([1, 300, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([1],"float32"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([128, 8],"float32"), Tensor([128, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([168],"float64"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([2, 2],"float32"), Tensor([4, 2],"float32"), 0, )
paddle.take_along_axis(Tensor([2, 2],"float32"), Tensor([4, 2],"int64"), 0, )
paddle.take_along_axis(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 4],"int32"), axis=0, )
paddle.take_along_axis(Tensor([2, 3],"float32"), Tensor([2, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([2, 3],"float64"), Tensor([1, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([2160],"float64"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([28, 5],"float32"), Tensor([28, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([3, 2, 5],"float32"), Tensor([1, 1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 3, 3],"float32"), Tensor([1, 3, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([3, 3, 3],"float64"), Tensor([1, 3, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([3, 3],"float32"), Tensor([1, 3],"float32"), 0, )
paddle.take_along_axis(Tensor([3, 3],"float32"), Tensor([1, 3],"int64"), 0, )
paddle.take_along_axis(Tensor([3, 3],"float32"), Tensor([1, 3],"int64"), 0, False, )
paddle.take_along_axis(Tensor([3, 5],"float32"), Tensor([1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 5],"float32"), Tensor([3, 2],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 5],"float64"), Tensor([1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"int32"), axis=3, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 2, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"int32"), axis=4, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 2, 5],"float64"), Tensor([3, 6, 3, 4, 2, 1],"int32"), axis=5, )
paddle.take_along_axis(Tensor([3],"float32"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([30, 5],"float32"), Tensor([30, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([38, 5],"float32"), Tensor([38, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([4, 2],"float32"), Tensor([4, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([4, 2],"float64"), Tensor([1, 1],"int64"), 1, )
paddle.take_along_axis(Tensor([4, 3, 2],"float32"), Tensor([1, 3, 2],"int64"), axis=1, )
paddle.take_along_axis(Tensor([4, 3],"float32"), Tensor([4, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([4, 4, 4, 2],"float64"), Tensor([1, 1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([4, 4, 4],"float64"), Tensor([1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([4, 4],"float64"), Tensor([1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([4, 42],"float64"), Tensor([4, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([4, 7, 6],"float64"), Tensor([4, 1, 6],"int32"), axis=1, )
paddle.take_along_axis(Tensor([4, 7, 6],"float64"), Tensor([4, 7, 1],"int32"), axis=2, )
paddle.take_along_axis(Tensor([4, 7],"float32"), Tensor([4, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([4, 7],"float64"), Tensor([4, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([4],"float32"), Tensor([1],"int64"), 0, )
paddle.take_along_axis(Tensor([4],"float64"), Tensor([1],"int64"), 0, )
paddle.take_along_axis(Tensor([5, 12],"float64"), Tensor([5, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([5, 2],"float32"), Tensor([5, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([5, 3, 4],"float64"), Tensor([5, 1, 4],"int32"), axis=1, )
paddle.take_along_axis(Tensor([6],"float32"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([7, 24],"float64"), Tensor([7, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([8, 3],"float32"), Tensor([8, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([8],"float32"), Tensor([1],"int32"), axis=0, )
paddle.tanh(x=Tensor([2, 3, 4],"float64"), name="test name", )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,0,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,0,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,0,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,0,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,0,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,0,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-3,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,None,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,None,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,0,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,0,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,0,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,0,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,0,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,0,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,0,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,0,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,0,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,0,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,0,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,0,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,3,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-3,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,3,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-3,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,None,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,None,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,None,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,None,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,None,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,None,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,0,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,0,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,0,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,0,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,0,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,0,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,0,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,0,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,0,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,0,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,0,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,0,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,3,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-3,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,3,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-3,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,None,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,None,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,None,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,None,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,None,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,None,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,0,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,0,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,0,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,0,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,0,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,0,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,0,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,0,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,0,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,0,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,0,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,0,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,3,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-3,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-3,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,None,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,None,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,None,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,None,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,None,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,0,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,0,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,0,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,0,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,0,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,0,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-1,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-1,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-1,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-2,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-2,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-2,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-3,1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-3,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-3,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([0, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1],"int32"), Tensor([1],"int64"), )
paddle.Tensor.__getitem__(Tensor([1, 1],"int32"), Tensor([100],"int64"), )
paddle.Tensor.__getitem__(Tensor([1, 10, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 100, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 101, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 102, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 103, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 104, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 105, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 106, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 107, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 108, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 109, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 11, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 110, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 111, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 112, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 113, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 114, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 115, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 116, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 117, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 118, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 119, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 12, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 120, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 121, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 122, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 123, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 124, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 125, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 126, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 127, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 128, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 129, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 13, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 130, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 131, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 132, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 133, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 134, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 135, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 136, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 137, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 138, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 139, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 14, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 140, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 141, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 142, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 143, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 144, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 145, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 146, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 147, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 148, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 149, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 15, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 150, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 151, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 152, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 153, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 154, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 155, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 156, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 157, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 158, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 159, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 16, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 160, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 161, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 162, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 163, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 164, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 165, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 166, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 167, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 168, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 169, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 17, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 170, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 171, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 172, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 173, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 174, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 175, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 176, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 177, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 178, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 179, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 18, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 180, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 181, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 182, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 183, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 184, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 185, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 186, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 187, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 188, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 189, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 19, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 190, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 191, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 192, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 193, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 194, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 195, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 196, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 197, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 198, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 199, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 2, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 20, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 200, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 201, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 202, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 203, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 204, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 205, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 206, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 207, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 208, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 209, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 21, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 210, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 211, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 212, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 213, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 214, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 215, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 216, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 217, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 218, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 219, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 22, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 220, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 221, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 222, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 223, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 224, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 225, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 226, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 227, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 228, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 229, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 23, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 230, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 231, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 232, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 233, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 234, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 235, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 236, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 237, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 238, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 239, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 24, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 240, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 241, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 242, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 243, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 244, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 245, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 246, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 247, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 248, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 249, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 25, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 250, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 26, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 27, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 28, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 29, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 3, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 3],"int64"), Tensor([1],"int64"), )
paddle.Tensor.__getitem__(Tensor([1, 30, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 31, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 32, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 33, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 34, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 35, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 36, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 37, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 38, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 39, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 4, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 40, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 41, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 42, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 43, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 44, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 45, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 46, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 47, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 48, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 49, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 5, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 50, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([105],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([109],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([113],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([121],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([129],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([13],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([137],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([145],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([153],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([157],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([161],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([169],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([17],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([181],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([21],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([217],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([229],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([241],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([25],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([261],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([29],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([33],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([37],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([385],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([41],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([45],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([49],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([5],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([53],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([57],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([61],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([65],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([69],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([73],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([77],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([81],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([85],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([89],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([9],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 505, 256],"float32"), tuple(slice(None,None,None),Tensor([97],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 51, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 52, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 53, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 54, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 55, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 56, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 57, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 58, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 59, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 6, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 60, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 61, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 62, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 63, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 64, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 65, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 66, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 67, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 68, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 69, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 7, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 70, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 71, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 72, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 73, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 74, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 75, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 76, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 77, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 77, 768],"float32"), tuple(Tensor([1],"int64"),Tensor([1],"int64"),), )
paddle.Tensor.__getitem__(Tensor([1, 78, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 79, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 8, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 80, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 81, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 82, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 83, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 84, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 85, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 86, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 87, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 88, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 89, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 9, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 90, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 91, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 92, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 93, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 94, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 95, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 96, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 97, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 98, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([1, 99, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 1, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 10, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 100, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 101, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 102, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 103, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 104, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 105, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 106, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 107, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 108, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 109, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 11, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 110, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 111, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 112, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 113, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 114, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 115, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 116, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 117, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 118, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 119, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 12, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 120, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 121, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 122, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 123, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 124, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 125, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 126, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 127, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 128, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 129, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 13, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 130, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 131, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 132, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 133, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 134, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 135, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 136, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 137, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 138, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 139, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 14, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 140, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 141, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 142, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 143, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 144, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 145, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 146, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 147, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 148, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 149, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 15, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 150, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 151, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 152, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 153, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 154, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 155, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 156, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 157, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 158, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 159, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 16, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 160, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 161, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 162, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 163, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 164, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 165, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 166, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 167, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 168, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 169, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 17, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 170, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 171, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 172, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 173, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 174, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 175, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 176, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 177, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 178, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 179, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 18, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 180, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 181, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 182, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 183, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 184, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 185, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 19, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 2, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 20, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 21, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 22, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 23, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 24, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 25, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 26, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 27, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 28, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 29, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 3, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 30, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 31, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 32, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 33, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 34, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 35, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 36, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 37, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 38, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 39, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 4, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 40, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 41, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 42, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 43, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 44, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 45, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 46, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 47, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 48, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 49, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 5, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 50, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 51, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 52, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 53, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 54, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 55, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 56, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 57, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 58, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 59, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 6, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 60, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 61, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 62, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 63, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 64, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 65, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 66, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 67, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 68, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 69, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 7, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 70, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 71, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 72, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 73, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 74, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 75, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 76, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 77, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 78, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 79, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 8, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 80, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 81, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 82, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 83, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 84, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 85, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 86, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 87, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 88, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 89, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 9, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 90, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 91, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 92, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 93, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 94, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 95, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 96, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 97, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 98, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10, 99, 256],"float32"), tuple(slice(None,None,None),slice(None,0,None),), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([116],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([1240],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([1501],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([216],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([2896],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([3860],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([4320],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([4360],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([4385],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([450],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([4705],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5005],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5011],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5022],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5029],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5050],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5105],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5122],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5172],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5220],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5281],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5311],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5316],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5417],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5422],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5456],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5458],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5544],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5572],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5646],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5657],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5659],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5685],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5775],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5794],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5847],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5946],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([5970],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6002],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6006],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6072],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6145],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6189],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6198],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6235],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6288],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6340],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6346],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6424],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6569],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6666],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6678],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6688],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6689],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6709],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6759],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6850],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6908],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6909],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([6961],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7074],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7206],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7207],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7298],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7308],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7349],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7420],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7441],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7454],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7455],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7610],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7695],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7781],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7842],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([7846],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8075],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8100],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8122],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8333],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8355],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8381],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8442],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8460],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8475],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8589],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8597],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8758],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8771],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8816],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([8846],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([9021],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([9168],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([9322],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([9437],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([9451],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 11],"float32"), Tensor([9969],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([116],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([1240],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([1501],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([216],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([2896],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([3860],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([4320],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([4360],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([4385],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([450],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([4705],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5005],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5011],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5022],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5029],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5050],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5105],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5122],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5172],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5220],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5281],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5311],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5316],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5417],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5422],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5456],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5458],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5544],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5572],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5646],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5657],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5659],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5685],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5775],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5794],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5847],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5946],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([5970],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6002],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6006],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6072],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6145],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6189],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6198],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6235],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6288],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6340],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6346],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6424],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6569],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6666],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6678],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6688],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6689],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6709],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6759],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6850],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6908],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6909],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([6961],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7074],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7206],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7207],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7298],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7308],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7349],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7420],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7441],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7454],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7455],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7610],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7695],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7781],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7842],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([7846],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8075],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8100],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8122],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8333],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8355],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8381],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8442],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8460],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8475],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8589],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8597],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8758],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8771],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8816],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([8846],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([9021],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([9168],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([9322],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([9437],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([9451],"int64"), )
paddle.Tensor.__getitem__(Tensor([10105, 4],"float32"), Tensor([9969],"int64"), )
paddle.Tensor.__getitem__(Tensor([1024],"bfloat16"), Tensor([512],"int64"), )
paddle.Tensor.__getitem__(Tensor([1024],"float16"), Tensor([512],"int64"), )
paddle.Tensor.__getitem__(Tensor([1024],"float32"), Tensor([512],"int64"), )
paddle.Tensor.__getitem__(Tensor([1024],"float64"), Tensor([512],"int64"), )
paddle.Tensor.__getitem__(Tensor([1024],"int32"), Tensor([512],"int64"), )
paddle.Tensor.__getitem__(Tensor([1024],"int64"), Tensor([512],"int64"), )
paddle.Tensor.__getitem__(Tensor([10285, 1],"float32"), Tensor([100],"int64"), )
paddle.Tensor.__getitem__(Tensor([10285, 1],"float32"), Tensor([1015],"int64"), )
paddle.Tensor.__getitem__(Tensor([10285, 1],"float32"), Tensor([1021],"int64"), )
paddle.Tensor.__getitem__(Tensor([10285, 1],"float32"), Tensor([1039],"int64"), )
paddle.Tensor.__getitem__(Tensor([10285, 1],"float32"), Tensor([1049],"int64"), )
paddle.Tensor.__getitem__(Tensor([10285, 1],"float32"), Tensor([105],"int64"), )
paddle.Tensor.__getitem__(Tensor([10285, 1],"float32"), Tensor([1063],"int64"), )
paddle.Tensor.__getitem__(Tensor([10285, 1],"float32"), Tensor([1069],"int64"), )
paddle.Tensor.__getitem__(Tensor([10285, 1],"float32"), Tensor([108],"int64"), )
paddle.Tensor.__getitem__(Tensor([10285, 1],"float32"), Tensor([1096],"int64"), )
paddle.Tensor.__getitem__(Tensor([10285, 1],"float32"), Tensor([110],"int64"), )
paddle.Tensor.__getitem__(Tensor([10285, 1],"float32"), Tensor([1102],"int64"), )
paddle.Tensor.__getitem__(Tensor([10285, 1],"float32"), Tensor([111],"int64"), )
paddle.Tensor.__getitem__(Tensor([6380, 4],"float32"), Tensor([1],"int64"), )
paddle.Tensor.__setitem__(Tensor([36],"float64"), 0, Tensor([],"float64"), )
paddle.Tensor.__setitem__(Tensor([36858],"float32"), Tensor([36840],"int64"), 1.0, )
paddle.Tensor.expand(Tensor([],"float32"), tuple(Tensor([],"int64"),), )
paddle.tensordot(Tensor([0, 0, 5, 5],"float32"), Tensor([0, 0, 5, 5],"float32"), list[list[],list[],], )
paddle.tensordot(Tensor([0, 5, 5, 5],"float64"), Tensor([0, 5, 5, 5],"float64"), list[list[],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float32"), Tensor([0, 5, 5, 5],"float32"), list[list[],list[],], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), list[Tensor([2],"int64"),Tensor([2],"int64"),], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([2, 2],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(Tensor([2],"int64"),Tensor([2],"int64"),), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), list[Tensor([2],"int64"),Tensor([2],"int64"),], )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), Tensor([2, 2],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(Tensor([2],"int64"),Tensor([2],"int64"),), )
paddle.tensordot(Tensor([5, 0, 5, 0],"float32"), Tensor([5, 0, 5, 0],"float32"), list[list[],list[],], )
paddle.tensordot(Tensor([5, 5, 0, 5],"float32"), Tensor([5, 5, 0, 5],"float32"), list[list[],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 0],"float32"), Tensor([5, 5, 5, 0],"float32"), list[list[],list[],], )
paddle.tile(Tensor([1, 4],"float32"), list[Tensor([],"int64"),1,], )
paddle.tile(Tensor([1, 8],"float32"), list[Tensor([],"int64"),1,], )
paddle.tile(x=Tensor([3],"int64"), repeat_times=Tensor([2],"int32"), )
paddle.topk(Tensor([100],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1003],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1008],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1009],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1010],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1012],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([10121],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1015],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1017],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1018],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1019],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([102],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1021],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1023],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1029],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([10307],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1032],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1033],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1034],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1036],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1037],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1038],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1039],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([104],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1041],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1042],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1043],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1047],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1049],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([105],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1051],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1056],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([106],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1060],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1063],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1065],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1069],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([107],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([10709],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1073],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1074],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1078],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1079],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([108],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1080],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1082],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1084],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([109],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1096],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1097],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1098],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([110],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1100],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1102],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1107],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([111],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1116],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1118],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1119],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([112],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1122],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1123],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1125],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1127],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1128],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([113],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1130],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1131],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1133],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1134],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1136],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1138],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([114],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1140],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1142],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1143],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1145],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1146],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([115],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1155],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([11585],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([116],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1165],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1166],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([117],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1173],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1174],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1177],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1179],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1181],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1182],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1187],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1190],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1192],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1194],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1195],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1199],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([120],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([12011],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1204],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1205],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([121],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1210],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1214],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1215],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1219],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([122],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1221],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1222],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1223],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1224],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1228],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1229],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([123],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1231],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1232],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1237],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([124],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1240],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1241],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1245],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1251],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1253],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1261],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1263],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1264],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1265],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1268],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1269],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1270],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1271],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1272],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1274],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1275],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1278],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([128],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1280],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1281],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1286],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([129],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([12906],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1291],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1292],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1294],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([13, 11],"float64"), k=Tensor([1],"int64"), )
paddle.topk(Tensor([130],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1307],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([131],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1312],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1315],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1316],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1317],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1319],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1325],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1326],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1328],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1329],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([133],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1332],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1334],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1336],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1337],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([134],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1348],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([135],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1350],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1357],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1360],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1367],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([137],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1374],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1376],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([138],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1384],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1388],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1397],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([140],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([141],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1411],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1414],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1419],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([142],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1423],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1426],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1428],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([143],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1430],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1432],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1434],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1435],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1437],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1438],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1439],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([144],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1444],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1445],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([145],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1453],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1455],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1464],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1465],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1466],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1468],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([147],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1470],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([148],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1482],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1483],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([14877],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1492],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([150],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1501],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1502],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1505],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([15050],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([15083],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1509],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1522],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([154],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1541],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1543],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1548],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([155],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([156],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1567],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([158],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1587],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1589],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([159],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1592],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1598],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([160],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1605],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([161],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([16121],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1616],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1617],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([162],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1627],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1628],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1629],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([163],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1630],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([16333],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([164],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1643],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([165],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1651],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1655],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([166],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1661],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1662],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1664],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1665],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1667],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([167],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1676],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([16779],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1678],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([168],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1684],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1685],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1687],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1688],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([169],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1697],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([170],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1702],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1706],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([171],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1710],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1713],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1714],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1717],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([172],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1723],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([173],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1735],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([174],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1742],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1748],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([175],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1751],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1754],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1755],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([176],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1761],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1763],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([17630],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1765],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([178],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1781],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1789],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([179],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1793],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1799],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([180],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([181],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1811],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1812],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1813],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1818],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([182],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([183],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1831],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1833],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1837],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([184],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([185],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1852],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1856],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1857],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1866],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([187],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([188],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1882],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1888],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([189],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1892],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1894],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([190],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1914],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([192],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1920],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1927],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1929],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([193],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([194],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1946],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([195],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([196],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1961],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1964],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1966],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([197],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([198],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1983],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([199],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1992],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([1996],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([200],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2002],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2004],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([201],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2010],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2019],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([202],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2026],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2028],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2029],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2035],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2038],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2042],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2049],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([205],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2056],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([206],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2061],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2068],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([207],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2072],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2073],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2076],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([208],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([209],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2093],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2097],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2099],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([210],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2113],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([212],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2126],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([213],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2131],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2142],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2146],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([215],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2152],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2153],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([216],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2160],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2166],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([217],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([218],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2183],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2184],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2199],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([220],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2202],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([221],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2214],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2215],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([222],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([223],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([224],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2248],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([225],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([226],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2267],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([227],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2279],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([228],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2288],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2297],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2298],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([230],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2309],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([231],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2311],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2318],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([232],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2321],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([233],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2343],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2347],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([235],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2351],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2368],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2369],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([237],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([238],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2382],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2386],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2391],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2395],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([240],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2402],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2406],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([241],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([242],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([243],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2444],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2450],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2454],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2459],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([246],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2464],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([248],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([249],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([250],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2505],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2510],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2513],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2519],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([252],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2522],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2528],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([254],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([255],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2551],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2568],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2573],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2589],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([259],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2590],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2591],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2593],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2607],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([261],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2618],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([263],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2635],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2636],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([265],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2654],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([266],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2665],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2669],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2675],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([268],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2682],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([269],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2699],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([270],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2700],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([271],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2712],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([272],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2734],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([274],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2758],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([276],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([277],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2773],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([278],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([279],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([280],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2805],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([281],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2812],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2815],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([282],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([283],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([284],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2846],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2869],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([287],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2871],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2878],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([288],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([289],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2894],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2896],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2899],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([290],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2907],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2910],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([292],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2923],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([293],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2939],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([294],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([2948],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([295],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([297],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([298],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([300],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([301],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([302],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3026],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3036],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([305],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3052],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([306],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3060],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3061],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3066],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([307],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3072],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3094],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([310],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([311],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([312],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3124],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([314],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3140],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([315],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3157],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3162],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3163],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3166],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([318],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3186],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([319],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([320],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([321],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3223],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3228],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([324],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3240],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([325],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([326],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3260],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3273],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3274],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([328],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3281],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3288],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([329],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([330],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([331],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3317],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3321],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3328],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([333],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3347],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3351],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([336],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3369],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([337],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([338],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([339],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3396],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([341],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3414],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3419],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3421],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3427],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3432],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3433],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([344],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([345],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3456],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([347],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3479],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([348],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([350],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3502],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3503],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3507],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([351],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([354],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3540],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([355],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([356],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3563],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3566],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3574],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([358],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3585],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([359],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3593],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3598],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([360],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3600],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([362],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3635],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([365],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3653],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([366],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([367],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3675],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([368],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3691],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3721],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([373],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([374],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3747],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([376],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([377],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([378],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3780],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3785],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3793],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3797],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([380],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3801],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3806],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3812],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3816],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3826],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([384],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3846],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([385],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3851],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([386],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3860],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([387],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3891],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([390],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3908],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([391],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([392],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([393],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3933],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3938],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3939],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([394],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3944],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([395],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([396],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([398],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([3987],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([401],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([403],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4038],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([405],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([406],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([407],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([409],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4101],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4115],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([413],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([414],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([415],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4150],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4156],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4158],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([417],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([419],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4195],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([420],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([421],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4213],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4215],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([423],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([424],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([425],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([426],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([428],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([429],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([430],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([431],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4320],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4322],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([434],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([435],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4354],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([436],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4360],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4375],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4385],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([439],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([441],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([443],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4438],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([444],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([445],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4455],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([446],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4465],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4481],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4488],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([449],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([45],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([450],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4506],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([451],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([452],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([453],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4542],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([455],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4562],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([458],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([459],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4600],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4606],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([461],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([462],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([466],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4661],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4662],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([468],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([469],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4705],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4710],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([472],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([473],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([475],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4758],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([477],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([478],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([479],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4796],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([482],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4822],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([485],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([486],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([487],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4882],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([489],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4897],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([492],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4928],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([495],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4959],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([4968],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([499],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([50],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([500],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5005],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5011],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([502],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5022],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5029],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([504],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5043],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5045],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([505],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5050],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([507],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([508],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([509],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5105],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([511],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5112],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([512],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5122],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([514],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([516],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([517],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5172],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([518],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5186],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([520],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5203],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5209],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([521],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5220],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5221],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([525],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([528],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5281],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([530],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([531],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5311],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5316],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([533],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([534],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([535],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5358],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([536],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([537],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([539],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5390],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([540],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5414],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5417],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5422],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([543],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([544],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5447],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5456],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5458],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5468],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([550],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5501],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([552],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([553],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5535],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([554],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5544],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([556],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5572],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([558],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([560],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([561],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([562],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5620],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5634],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5635],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([564],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5646],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([565],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5657],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5659],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([566],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([568],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5685],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([569],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5697],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([57],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([570],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([571],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([572],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5725],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5736],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([576],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5772],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5775],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5781],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5794],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5810],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([583],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([584],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5847],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([587],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5871],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([588],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5893],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([590],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([593],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5946],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([596],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([597],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5970],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([5972],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6, 7, 8],"float64"), k=Tensor([1],"int64"), axis=1, )
paddle.topk(Tensor([60],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6002],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6006],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([603],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6054],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([606],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6068],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([607],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6072],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([610],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([611],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([612],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6145],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([615],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([616],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([617],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6178],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6189],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([619],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6198],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([62],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([620],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([621],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6235],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6288],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([629],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([631],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6310],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([632],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([633],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6340],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6346],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6359],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([636],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([637],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([638],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6407],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([641],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6422],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6424],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6432],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6433],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6457],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([647],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6479],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([648],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6484],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([65],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([650],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6542],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([656],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6569],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([658],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([659],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6593],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([66],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([660],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6617],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([662],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6666],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6678],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([668],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6688],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6689],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6709],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6712],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6759],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6760],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6779],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([678],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([679],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([680],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6842],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([685],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6850],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([688],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6905],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6908],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6909],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([691],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6936],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6938],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6942],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([6961],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([699],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([70],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7007],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7030],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([704],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7046],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([705],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([706],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7074],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7094],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([710],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([711],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([712],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7142],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([717],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7173],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([719],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([720],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7206],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7207],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([723],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([724],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([728],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7298],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7308],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([731],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([733],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7349],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([735],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([736],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([738],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7420],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([743],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([744],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7441],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7449],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7454],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7455],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([746],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([747],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([749],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([75],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([752],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([756],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([759],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([760],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7610],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([764],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7654],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7662],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([768],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7695],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([770],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([772],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([776],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7781],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([780],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([781],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([784],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7842],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7846],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7865],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([787],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([788],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([789],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([791],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([792],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([793],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7968],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7984],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([799],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([7993],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([80],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([800],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([801],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([804],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8075],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([808],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([809],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([81],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8100],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([811],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([812],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8122],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([814],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([816],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8160],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8165],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([817],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([820],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([825],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([827],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8280],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8295],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([83],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([830],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8333],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([834],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([835],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8355],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([836],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8381],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([840],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([841],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([843],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([844],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8442],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8460],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([847],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8475],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([848],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([849],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([852],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([853],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([854],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([855],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8568],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([857],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8589],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8597],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([86],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([860],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([865],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([867],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8679],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([868],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([87],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([870],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8717],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([872],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([873],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([874],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([875],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8758],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8771],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([880],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([881],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8816],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8846],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([888],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([889],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([891],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([8910],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([892],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([895],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([897],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([9021],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([905],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([907],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([910],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([912],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([913],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([915],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([9168],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([92],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([9203],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([921],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([925],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([926],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([9263],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([929],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([931],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([932],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([9322],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([934],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([935],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([940],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([943],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([9437],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([9451],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([946],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([947],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([9485],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([949],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([95],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([950],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([951],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([952],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([954],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([957],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([959],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([961],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([962],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([963],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([966],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([969],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([97],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([9749],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([982],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([984],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([989],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([99],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([991],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([9911],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([993],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([9969],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([997],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.topk(Tensor([999],"float32"), k=Tensor([],"int64"), largest=False, )
paddle.unflatten(x=Tensor([4, 6, 16],"float32"), axis=0, shape=Tensor([2],"int64"), )
paddle.unsqueeze(Tensor([],"float32"), axis=Tensor([],"int32"), )
paddle.unsqueeze(Tensor([5, 10],"float32"), Tensor([2],"int64"), )
paddle.unsqueeze(x=Tensor([2, 3],"float64"), axis=Tensor([3],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(fpn_rois=Tensor([10, 4],"float32"), min_level=2, max_level=5, refer_level=4, refer_scale=224, rois_num=Tensor([2],"int32"), )
paddle.vision.ops.nms(Tensor([64, 4],"float32"), 0.5, Tensor([64],"float32"), Tensor([64],"int64"), list[0,1,2,3,], 20, )
paddle.vision.ops.psroi_pool(Tensor([2, 128, 32, 32],"float32"), Tensor([4, 4],"float32"), Tensor([2],"int32"), 8, 1.1, )
paddle.vision.ops.psroi_pool(Tensor([2, 128, 32, 32],"float64"), Tensor([4, 4],"float64"), Tensor([2],"int32"), 8, 1.1, )
paddle.vision.ops.psroi_pool(Tensor([2, 490, 28, 28],"float32"), Tensor([3, 4],"float32"), Tensor([2],"int32"), 7, )
paddle.vision.ops.psroi_pool(Tensor([2, 490, 28, 28],"float32"), Tensor([3, 4],"float32"), Tensor([2],"int32"), tuple(7,7,), )
paddle.vision.ops.psroi_pool(Tensor([2, 490, 28, 28],"float64"), Tensor([3, 4],"float64"), Tensor([2],"int32"), tuple(7,7,), )
paddle.vision.ops.psroi_pool(Tensor([3, 12, 6, 4],"float64"), Tensor([6, 4],"float64"), Tensor([3],"int32"), tuple(2,2,), 0.25, )
paddle.where(Tensor([18],"bool"), )
paddle.where(Tensor([20],"bool"), )
paddle.where(Tensor([64],"bool"), )
paddle.where(Tensor([64],"int32"), )
paddle.zeros(shape=Tensor([2],"int32"), )
paddle.zeros(shape=Tensor([2],"int32"), dtype="int32", )
paddle.zeros(Tensor([2],"int32"), dtype=Dtype(float32), )
paddle.zeros(Tensor([2],"int64"), )
