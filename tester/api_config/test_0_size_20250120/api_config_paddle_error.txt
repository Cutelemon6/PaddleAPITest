paddle.abs_(Tensor([0, 20, 1],"float32"), )
paddle.abs_(Tensor([10, 0, 1],"float32"), )
paddle.abs_(Tensor([10, 20, 0],"float32"), )
paddle.abs_(Tensor([0, 20],"int32"), )
paddle.abs_(Tensor([10, 0],"int32"), )
paddle.amax(Tensor([10, 10, 0],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amax(Tensor([10, 0, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amax(Tensor([0, 10, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amax(Tensor([2, 2, 0],"int32"), tuple(0,1,), False, )
paddle.amax(Tensor([2, 0],"float64"), 0, False, )
paddle.amax(Tensor([0, 4],"float64"), 1, True, )
paddle.amin(Tensor([10, 10, 0],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amin(Tensor([10, 0, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amin(Tensor([0, 10, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amin(Tensor([2, 2, 0],"int32"), tuple(0,1,), False, )
paddle.amin(Tensor([2, 0],"float64"), 0, False, )
paddle.amin(Tensor([0, 4],"float64"), 1, True, )
paddle.argmax(Tensor([0, 1000],"float32"), axis=1, )
paddle.argmax(Tensor([0, 32],"float64"), axis=-1, )
paddle.argmax(Tensor([0, 8, 14, 12],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([1, 8, 0, 12],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([1, 8, 14, 0],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([0, 10],"float32"), axis=1, )
paddle.argmax(Tensor([0, 10],"float32"), axis=-1, )
paddle.argmax(Tensor([0, 10],"float32"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([0, 3, 4],"float64"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([2, 0, 4],"float64"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([3, 0, 3, 3, 3, 3],"float64"), axis=0, )
paddle.argmax(Tensor([3, 3, 0, 3, 3, 3],"float64"), axis=0, )
paddle.argmax(Tensor([3, 3, 3, 0, 3, 3],"float64"), axis=0, )
paddle.argmax(Tensor([3, 3, 3, 3, 0, 3],"float64"), axis=0, )
paddle.argmax(Tensor([3, 3, 3, 3, 3, 0],"float64"), axis=0, )
paddle.argmax(Tensor([4, 0, 4, 4, 4],"float64"), axis=0, )
paddle.argmax(Tensor([4, 4, 0, 4, 4],"float64"), axis=0, )
paddle.argmax(Tensor([4, 4, 4, 0, 4],"float64"), axis=0, )
paddle.argmax(Tensor([4, 4, 4, 4, 0],"float64"), axis=0, )
paddle.argmax(Tensor([0, 6],"float32"), axis=1, )
paddle.argmax(Tensor([5, 0, 5, 5],"float64"), axis=0, )
paddle.argmax(Tensor([5, 5, 0, 5],"float64"), axis=0, )
paddle.argmax(Tensor([5, 5, 5, 0],"float64"), axis=0, )
paddle.argmin(Tensor([0, 10],"float32"), axis=1, )
paddle.argmin(Tensor([0, 10],"float32"), axis=-1, )
paddle.argmin(Tensor([0, 10],"float32"), axis=-1, keepdim=True, )
paddle.argmin(Tensor([3, 0, 3, 3, 3, 3],"float64"), axis=0, )
paddle.argmin(Tensor([3, 3, 0, 3, 3, 3],"float64"), axis=0, )
paddle.argmin(Tensor([3, 3, 3, 0, 3, 3],"float64"), axis=0, )
paddle.argmin(Tensor([3, 3, 3, 3, 0, 3],"float64"), axis=0, )
paddle.argmin(Tensor([3, 3, 3, 3, 3, 0],"float64"), axis=0, )
paddle.argmin(Tensor([4, 0, 4, 4, 4],"float64"), axis=0, )
paddle.argmin(Tensor([4, 4, 0, 4, 4],"float64"), axis=0, )
paddle.argmin(Tensor([4, 4, 4, 0, 4],"float64"), axis=0, )
paddle.argmin(Tensor([4, 4, 4, 4, 0],"float64"), axis=0, )
paddle.argmin(Tensor([5, 0, 5, 5],"float64"), axis=0, )
paddle.argmin(Tensor([5, 5, 0, 5],"float64"), axis=0, )
paddle.argmin(Tensor([5, 5, 5, 0],"float64"), axis=0, )
paddle.as_complex(Tensor([0, 10, 10, 2],"float32"), )
paddle.as_complex(Tensor([10, 0, 10, 2],"float32"), )
paddle.as_complex(Tensor([10, 10, 0, 2],"float32"), )
paddle.as_complex(Tensor([0, 10, 2],"float64"), )
paddle.as_complex(Tensor([10, 0, 2],"float64"), )
paddle.as_complex(Tensor([0, 4, 2],"float32"), )
paddle.as_complex(Tensor([2, 0, 2],"float32"), )
paddle.as_complex(Tensor([0, 4, 2],"float64"), )
paddle.as_complex(Tensor([2, 0, 2],"float64"), )
paddle.bincount(Tensor([0],"int32"), weights=Tensor([16],"float32"), )
paddle.column_stack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.column_stack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.column_stack(list[Tensor([0, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 0],"float64"),], )
paddle.column_stack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.column_stack(list[Tensor([0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0],"float64"),], )
paddle.column_stack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.column_stack(list[Tensor([0],"float64"),], )
paddle.column_stack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.column_stack(list[Tensor([0, 2],"float64"),], )
paddle.column_stack(list[Tensor([3, 0],"float64"),], )
paddle.column_stack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.column_stack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], )
paddle.column_stack(list[Tensor([0, 4, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 0, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 0, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 0],"float64"),], )
paddle.column_stack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], )
paddle.column_stack(list[Tensor([0, 4, 2],"float64"),], )
paddle.column_stack(list[Tensor([3, 0, 2],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 0],"float64"),], )
paddle.column_stack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.column_stack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float32"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"int32"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"int32"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"int32"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"int64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"int64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"int64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 2],"float32"),Tensor([0, 1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1],"float32"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"float32"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1],"float32"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0],"float32"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1],"int32"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"int32"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1],"int32"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0],"int32"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1],"int64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"int64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1],"int64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0],"int64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1],"int64"),Tensor([0, 2],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 0],"int64"),Tensor([1, 0],"int64"),], axis=1, )
paddle.concat(list[Tensor([0, 10, 5],"float32"),Tensor([0, 10, 5],"float32"),], )
paddle.concat(list[Tensor([1, 0, 5],"float32"),Tensor([1, 0, 5],"float32"),], )
paddle.concat(list[Tensor([1, 10, 0],"float32"),Tensor([1, 10, 0],"float32"),], )
paddle.concat(list[Tensor([0, 12, 10, 10],"float32"),Tensor([0, 12, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 10, 10],"float32"),Tensor([1, 0, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 12, 0, 10],"float32"),Tensor([1, 12, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 12, 10, 0],"float32"),Tensor([1, 12, 10, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 128, 10, 10],"float32"),Tensor([0, 32, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 0, 10],"float32"),Tensor([1, 32, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 10, 0],"float32"),Tensor([1, 32, 10, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 128, 20, 20],"float32"),Tensor([0, 32, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 0, 20],"float32"),Tensor([1, 32, 0, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 20, 0],"float32"),Tensor([1, 32, 20, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 160, 10, 10],"float32"),Tensor([0, 32, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 160, 0, 10],"float32"),Tensor([1, 32, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 160, 10, 0],"float32"),Tensor([1, 32, 10, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 160, 20, 20],"float32"),Tensor([0, 32, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 160, 0, 20],"float32"),Tensor([1, 32, 0, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 160, 20, 0],"float32"),Tensor([1, 32, 20, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 192, 10, 10],"float32"),Tensor([0, 32, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 192, 0, 10],"float32"),Tensor([1, 32, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 192, 10, 0],"float32"),Tensor([1, 32, 10, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 192, 20, 20],"float32"),Tensor([0, 32, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 192, 0, 20],"float32"),Tensor([1, 32, 0, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 192, 20, 0],"float32"),Tensor([1, 32, 20, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2, 1],"float64"),Tensor([0, 2, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 2, 0],"float64"),Tensor([1, 2, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 2, 8, 4],"float32"),Tensor([0, 2, 8, 4],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 8, 4],"float32"),Tensor([1, 0, 8, 4],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 2, 0, 4],"float32"),Tensor([1, 2, 0, 4],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 2, 8, 0],"float32"),Tensor([1, 2, 8, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], )
paddle.concat(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 2],"int64"),Tensor([0, 2],"int64"),], )
paddle.concat(list[Tensor([1, 0],"int64"),Tensor([1, 0],"int64"),], )
paddle.concat(list[Tensor([0, 224, 10, 10],"float32"),Tensor([0, 32, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 224, 0, 10],"float32"),Tensor([1, 32, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 224, 10, 0],"float32"),Tensor([1, 32, 10, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 224, 20, 20],"float32"),Tensor([0, 32, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 224, 0, 20],"float32"),Tensor([1, 32, 0, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 224, 20, 0],"float32"),Tensor([1, 32, 20, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 24, 5, 5],"float32"),Tensor([0, 24, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 5, 5],"float32"),Tensor([1, 0, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 24, 0, 5],"float32"),Tensor([1, 24, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 24, 5, 0],"float32"),Tensor([1, 24, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256, 10, 10],"float32"),Tensor([0, 32, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 0, 10],"float32"),Tensor([1, 32, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 10, 0],"float32"),Tensor([1, 32, 10, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 288, 10, 10],"float32"),Tensor([0, 32, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 288, 0, 10],"float32"),Tensor([1, 32, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 288, 10, 0],"float32"),Tensor([1, 32, 10, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 288, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 288, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 288, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 3, 256, 256],"float32"),Tensor([0, 10, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 256, 256],"float32"),Tensor([1, 0, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 3, 0, 256],"float32"),Tensor([1, 10, 0, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 3, 256, 0],"float32"),Tensor([1, 10, 256, 0],"float32"),], 1, )
paddle.concat(list[Tensor([0, 3, 32, 32],"float32"),Tensor([0, 10, 32, 32],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 32, 32],"float32"),Tensor([1, 0, 32, 32],"float32"),], 1, )
paddle.concat(list[Tensor([1, 3, 0, 32],"float32"),Tensor([1, 10, 0, 32],"float32"),], 1, )
paddle.concat(list[Tensor([1, 3, 32, 0],"float32"),Tensor([1, 10, 32, 0],"float32"),], 1, )
paddle.concat(list[Tensor([0, 320, 10, 10],"float32"),Tensor([0, 32, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 320, 0, 10],"float32"),Tensor([1, 32, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 320, 10, 0],"float32"),Tensor([1, 32, 10, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 320, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 320, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 320, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 352, 10, 10],"float32"),Tensor([0, 32, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 352, 0, 10],"float32"),Tensor([1, 32, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 352, 10, 0],"float32"),Tensor([1, 32, 10, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 352, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 352, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 352, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 384, 10, 10],"float32"),Tensor([0, 32, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 384, 0, 10],"float32"),Tensor([1, 32, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 384, 10, 0],"float32"),Tensor([1, 32, 10, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 384, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 384, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 384, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 4, 10],"float32"),Tensor([0, 4, 10],"float32"),Tensor([0, 4, 10],"float32"),], 0, )
paddle.concat(list[Tensor([1, 0, 10],"float32"),Tensor([1, 0, 10],"float32"),Tensor([1, 0, 10],"float32"),], 0, )
paddle.concat(list[Tensor([1, 4, 0],"float32"),Tensor([1, 4, 0],"float32"),Tensor([1, 4, 0],"float32"),], 0, )
paddle.concat(list[Tensor([0, 4, 8, 4],"float32"),Tensor([0, 4, 8, 4],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 4, 0, 4],"float32"),Tensor([1, 4, 0, 4],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 4, 8, 0],"float32"),Tensor([1, 4, 8, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 416, 10, 10],"float32"),Tensor([0, 32, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 416, 0, 10],"float32"),Tensor([1, 32, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 416, 10, 0],"float32"),Tensor([1, 32, 10, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 416, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 416, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 416, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 448, 10, 10],"float32"),Tensor([0, 32, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 448, 0, 10],"float32"),Tensor([1, 32, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 448, 10, 0],"float32"),Tensor([1, 32, 10, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 448, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 448, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 448, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 48, 3, 3],"float32"),Tensor([0, 48, 3, 3],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 3, 3],"float32"),Tensor([1, 0, 3, 3],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 48, 0, 3],"float32"),Tensor([1, 48, 0, 3],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 48, 3, 0],"float32"),Tensor([1, 48, 3, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 480, 10, 10],"float32"),Tensor([0, 32, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 480, 0, 10],"float32"),Tensor([1, 32, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 480, 10, 0],"float32"),Tensor([1, 32, 10, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 480, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 480, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 480, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 5, 1],"float64"),Tensor([0, 5, 1],"float64"),Tensor([0, 5, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 5, 0],"float64"),Tensor([1, 5, 0],"float64"),Tensor([1, 5, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 5],"float64"),Tensor([0, 5],"float64"),Tensor([0, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 512, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 2, 2],"float32"),Tensor([1, 0, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 512, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 512, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 512, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 512, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 512, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 544, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 544, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 544, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 544, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 544, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 544, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 576, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 576, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 576, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 576, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 576, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 576, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 608, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 608, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 608, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 608, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 608, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 608, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 64, 20, 20],"float32"),Tensor([0, 32, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 64, 0, 20],"float32"),Tensor([1, 32, 0, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 64, 20, 0],"float32"),Tensor([1, 32, 20, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 640, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 640, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 640, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 640, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 640, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 640, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 672, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 672, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 672, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 672, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 672, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 672, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 704, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 704, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 704, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 704, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 704, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 704, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 736, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 736, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 736, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 736, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 736, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 736, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 768, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 768, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 768, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 768, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 768, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 768, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 800, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 800, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 800, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 800, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 800, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 800, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 832, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 832, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 832, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 832, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 832, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 832, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 864, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 864, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 864, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 864, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 864, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 864, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 896, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 896, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 896, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 896, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 896, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 896, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 928, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 928, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 928, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 928, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 928, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 928, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 96, 20, 20],"float32"),Tensor([0, 32, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 96, 0, 20],"float32"),Tensor([1, 32, 0, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 96, 20, 0],"float32"),Tensor([1, 32, 20, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 960, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 960, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 960, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 960, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 960, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 960, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 992, 2, 2],"float32"),Tensor([0, 32, 2, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 992, 0, 2],"float32"),Tensor([1, 32, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 992, 2, 0],"float32"),Tensor([1, 32, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 992, 5, 5],"float32"),Tensor([0, 32, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 992, 0, 5],"float32"),Tensor([1, 32, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 992, 5, 0],"float32"),Tensor([1, 32, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.concat(list[Tensor([0],"int32"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"int64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], axis=0, )
paddle.concat(list[Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),], axis=0, )
paddle.concat(list[Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 200],"float32"),Tensor([0, 200],"float32"),], )
paddle.concat(list[Tensor([100, 0],"float32"),Tensor([100, 0],"float32"),], )
paddle.concat(list[Tensor([0],"bfloat16"),Tensor([0],"bfloat16"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float16"),Tensor([0],"float16"),], )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.concat(list[Tensor([0],"int32"),Tensor([0],"int32"),], )
paddle.concat(list[Tensor([0],"int64"),Tensor([0],"int64"),], )
paddle.concat(list[Tensor([0, 20],"float32"),Tensor([0, 20],"float32"),], axis=0, )
paddle.concat(list[Tensor([11, 0],"float32"),Tensor([11, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 4, 8],"float64"),Tensor([0, 4, 8],"float64"),], -1, )
paddle.concat(list[Tensor([12, 0, 8],"float64"),Tensor([12, 0, 8],"float64"),], -1, )
paddle.concat(list[Tensor([12, 4, 0],"float64"),Tensor([12, 4, 0],"float64"),], -1, )
paddle.concat(list[Tensor([0, 128, 2],"float32"),Tensor([0, 128, 2],"float32"),], )
paddle.concat(list[Tensor([128, 0, 2],"float32"),Tensor([128, 0, 2],"float32"),], )
paddle.concat(list[Tensor([128, 128, 0],"float32"),Tensor([128, 128, 0],"float32"),], )
paddle.concat(list[Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),], axis=1, )
paddle.concat(list[Tensor([128, 0],"float32"),Tensor([128, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 512],"float16"),Tensor([0, 128],"float16"),Tensor([0, 128],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 0],"float16"),Tensor([128, 0],"float16"),Tensor([128, 0],"float16"),], axis=1, )
paddle.concat(list[Tensor([0, 512],"int32"),Tensor([0, 128],"int32"),Tensor([0, 128],"int32"),], axis=1, )
paddle.concat(list[Tensor([128, 0],"int32"),Tensor([128, 0],"int32"),Tensor([128, 0],"int32"),], axis=1, )
paddle.concat(list[Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 2],"float32"),Tensor([2, 0, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 1, 8, 4],"float32"),Tensor([0, 1, 8, 4],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2, 0, 8, 4],"float32"),Tensor([2, 0, 8, 4],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2, 1, 0, 4],"float32"),Tensor([2, 1, 0, 4],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2, 1, 8, 0],"float32"),Tensor([2, 1, 8, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 5],"float32"),Tensor([2, 0, 5],"float32"),], )
paddle.concat(list[Tensor([2, 10, 0],"float32"),Tensor([2, 10, 0],"float32"),], )
paddle.concat(list[Tensor([0, 1008, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 14, 14],"float32"),Tensor([2, 0, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1008, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1008, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1024, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1024, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1024, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1024, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 7, 7],"float32"),Tensor([2, 0, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1024, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1024, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1056, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1056, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1056, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1056, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1056, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1056, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1056, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1056, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1056, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1056, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1056, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1056, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1088, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1088, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1088, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1088, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1088, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1088, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1104, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1104, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1104, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1104, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1104, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1104, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 112, 13, 13],"float32"),Tensor([0, 288, 13, 13],"float32"),Tensor([0, 64, 13, 13],"float32"),Tensor([0, 64, 13, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 13, 13],"float32"),Tensor([2, 0, 13, 13],"float32"),Tensor([2, 0, 13, 13],"float32"),Tensor([2, 0, 13, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 112, 0, 13],"float32"),Tensor([2, 288, 0, 13],"float32"),Tensor([2, 64, 0, 13],"float32"),Tensor([2, 64, 0, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 112, 13, 0],"float32"),Tensor([2, 288, 13, 0],"float32"),Tensor([2, 64, 13, 0],"float32"),Tensor([2, 64, 13, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 112, 28, 28],"float32"),Tensor([0, 112, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 28, 28],"float32"),Tensor([2, 0, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 112, 0, 28],"float32"),Tensor([2, 112, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 112, 28, 0],"float32"),Tensor([2, 112, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1120, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1120, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1120, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1120, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1120, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1120, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1152, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1152, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1152, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1152, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1152, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1152, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1152, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1152, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1152, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1152, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1152, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1152, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 116, 14, 14],"float32"),Tensor([0, 116, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 116, 0, 14],"float32"),Tensor([2, 116, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 116, 14, 0],"float32"),Tensor([2, 116, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1184, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1184, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1184, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1184, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1184, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1184, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 12, 28, 28],"float32"),Tensor([0, 12, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 12, 0, 28],"float32"),Tensor([2, 12, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 12, 28, 0],"float32"),Tensor([2, 12, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),], axis=1, )
paddle.concat(list[Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),], axis=1, )
paddle.concat(list[Tensor([0, 1200, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1200, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1200, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1200, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1200, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1200, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1216, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1216, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1216, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1216, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1216, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1216, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1248, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1248, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1248, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1248, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1248, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1248, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1248, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1248, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1248, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1248, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1248, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1248, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 128, 13, 13],"float32"),Tensor([0, 256, 13, 13],"float32"),Tensor([0, 64, 13, 13],"float32"),Tensor([0, 64, 13, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 128, 0, 13],"float32"),Tensor([2, 256, 0, 13],"float32"),Tensor([2, 64, 0, 13],"float32"),Tensor([2, 64, 0, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 128, 13, 0],"float32"),Tensor([2, 256, 13, 0],"float32"),Tensor([2, 64, 13, 0],"float32"),Tensor([2, 64, 13, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 128, 26, 26],"float32"),Tensor([0, 128, 26, 26],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 26, 26],"float32"),Tensor([2, 0, 26, 26],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 128, 0, 26],"float32"),Tensor([2, 128, 0, 26],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 128, 26, 0],"float32"),Tensor([2, 128, 26, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 128, 27, 27],"float32"),Tensor([0, 128, 27, 27],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 27, 27],"float32"),Tensor([2, 0, 27, 27],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 128, 0, 27],"float32"),Tensor([2, 128, 0, 27],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 128, 27, 0],"float32"),Tensor([2, 128, 27, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 128, 27, 27],"float32"),Tensor([0, 192, 27, 27],"float32"),Tensor([0, 96, 27, 27],"float32"),Tensor([0, 64, 27, 27],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 27, 27],"float32"),Tensor([2, 0, 27, 27],"float32"),Tensor([2, 0, 27, 27],"float32"),Tensor([2, 0, 27, 27],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 128, 0, 27],"float32"),Tensor([2, 192, 0, 27],"float32"),Tensor([2, 96, 0, 27],"float32"),Tensor([2, 64, 0, 27],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 128, 27, 0],"float32"),Tensor([2, 192, 27, 0],"float32"),Tensor([2, 96, 27, 0],"float32"),Tensor([2, 64, 27, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 128, 28, 28],"float32"),Tensor([0, 32, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 128, 0, 28],"float32"),Tensor([2, 32, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 128, 28, 0],"float32"),Tensor([2, 32, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 128, 54, 54],"float32"),Tensor([0, 128, 54, 54],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 54, 54],"float32"),Tensor([2, 0, 54, 54],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 128, 0, 54],"float32"),Tensor([2, 128, 0, 54],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 128, 54, 0],"float32"),Tensor([2, 128, 54, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 128, 56, 56],"float32"),Tensor([0, 32, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 56, 56],"float32"),Tensor([2, 0, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 128, 0, 56],"float32"),Tensor([2, 32, 0, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 128, 56, 0],"float32"),Tensor([2, 32, 56, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1280, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1280, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1280, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1280, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1280, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1280, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1296, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1296, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1296, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1296, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1296, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1296, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1312, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1312, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1312, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1312, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1312, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1312, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1344, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1344, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1344, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1344, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1344, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1344, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1344, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1344, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1344, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1344, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1344, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1344, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1376, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1376, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1376, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1376, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1376, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1376, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1392, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1392, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1392, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1392, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1392, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1392, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1408, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1408, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1408, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1408, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1408, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1408, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 144, 56, 56],"float32"),Tensor([0, 48, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 144, 0, 56],"float32"),Tensor([2, 48, 0, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 144, 56, 0],"float32"),Tensor([2, 48, 56, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1440, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1440, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1440, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1440, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1440, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1440, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1440, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1440, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1440, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1440, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1440, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1440, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1472, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1472, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1472, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1472, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1472, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1472, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1488, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1488, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1488, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1488, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1488, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1488, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1504, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1504, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1504, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1504, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1504, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1504, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1536, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1536, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1536, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1536, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1536, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1536, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1536, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1536, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1536, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1536, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1536, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1536, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1568, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1568, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1568, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1568, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1568, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1568, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1584, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1584, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1584, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1584, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1584, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1584, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 16, 28, 28],"float32"),Tensor([0, 16, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 16, 0, 28],"float32"),Tensor([2, 16, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 16, 28, 0],"float32"),Tensor([2, 16, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 160, 13, 13],"float32"),Tensor([0, 224, 13, 13],"float32"),Tensor([0, 64, 13, 13],"float32"),Tensor([0, 64, 13, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 160, 0, 13],"float32"),Tensor([2, 224, 0, 13],"float32"),Tensor([2, 64, 0, 13],"float32"),Tensor([2, 64, 0, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 160, 13, 0],"float32"),Tensor([2, 224, 13, 0],"float32"),Tensor([2, 64, 13, 0],"float32"),Tensor([2, 64, 13, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 160, 28, 28],"float32"),Tensor([0, 32, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 160, 0, 28],"float32"),Tensor([2, 32, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 160, 28, 0],"float32"),Tensor([2, 32, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 160, 56, 56],"float32"),Tensor([0, 32, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 160, 0, 56],"float32"),Tensor([2, 32, 0, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 160, 56, 0],"float32"),Tensor([2, 32, 56, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1600, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1600, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1600, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1600, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1600, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1600, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1632, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1632, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1632, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1632, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1632, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1632, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1632, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1632, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1632, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1632, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1632, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1632, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1664, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1664, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1664, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1664, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1664, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1664, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1680, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1680, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1680, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1680, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1680, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1680, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1696, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1696, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1696, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1696, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1696, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1696, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1728, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1728, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1728, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1728, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1728, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1728, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1728, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1728, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1728, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1728, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1728, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1728, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 176, 14, 14],"float32"),Tensor([0, 176, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 176, 0, 14],"float32"),Tensor([2, 176, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 176, 14, 0],"float32"),Tensor([2, 176, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1760, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1760, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1760, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1760, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1760, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1760, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1776, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1776, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1776, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1776, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1776, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1776, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1792, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1792, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1792, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1792, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1792, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1792, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1824, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1824, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1824, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1824, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1824, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1824, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1824, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1824, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1824, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1824, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1824, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1824, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1856, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1856, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1856, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1856, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1856, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1856, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1872, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1872, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1872, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1872, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1872, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1872, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1888, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1888, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1888, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1888, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1888, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1888, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 192, 12, 12],"float32"),Tensor([0, 192, 12, 12],"float32"),Tensor([0, 192, 12, 12],"float32"),Tensor([0, 192, 12, 12],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 12, 12],"float32"),Tensor([2, 0, 12, 12],"float32"),Tensor([2, 0, 12, 12],"float32"),Tensor([2, 0, 12, 12],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 0, 12],"float32"),Tensor([2, 192, 0, 12],"float32"),Tensor([2, 192, 0, 12],"float32"),Tensor([2, 192, 0, 12],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 12, 0],"float32"),Tensor([2, 192, 12, 0],"float32"),Tensor([2, 192, 12, 0],"float32"),Tensor([2, 192, 12, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 192, 13, 13],"float32"),Tensor([0, 192, 13, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 13, 13],"float32"),Tensor([2, 0, 13, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 0, 13],"float32"),Tensor([2, 192, 0, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 13, 0],"float32"),Tensor([2, 192, 13, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 192, 13, 13],"float32"),Tensor([0, 208, 13, 13],"float32"),Tensor([0, 48, 13, 13],"float32"),Tensor([0, 64, 13, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 0, 13],"float32"),Tensor([2, 208, 0, 13],"float32"),Tensor([2, 48, 0, 13],"float32"),Tensor([2, 64, 0, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 13, 0],"float32"),Tensor([2, 208, 13, 0],"float32"),Tensor([2, 48, 13, 0],"float32"),Tensor([2, 64, 13, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 192, 26, 26],"float32"),Tensor([0, 192, 26, 26],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 0, 26],"float32"),Tensor([2, 192, 0, 26],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 26, 0],"float32"),Tensor([2, 192, 26, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 192, 28, 28],"float32"),Tensor([0, 32, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 0, 28],"float32"),Tensor([2, 32, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 28, 0],"float32"),Tensor([2, 32, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 192, 28, 28],"float32"),Tensor([0, 48, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 0, 28],"float32"),Tensor([2, 48, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 28, 0],"float32"),Tensor([2, 48, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 192, 56, 56],"float32"),Tensor([0, 32, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 0, 56],"float32"),Tensor([2, 32, 0, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 56, 0],"float32"),Tensor([2, 32, 56, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 192, 56, 56],"float32"),Tensor([0, 48, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 0, 56],"float32"),Tensor([2, 48, 0, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 56, 0],"float32"),Tensor([2, 48, 56, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1920, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1920, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1920, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1920, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1920, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1920, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1920, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1920, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1920, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1920, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1920, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1920, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1952, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1952, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1952, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1952, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1952, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1952, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1968, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1968, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1968, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1968, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1968, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1968, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1984, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1984, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1984, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1984, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1984, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1984, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2, 8, 8],"float32"),Tensor([0, 2, 8, 8],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2, 0, 8, 8],"float32"),Tensor([2, 0, 8, 8],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2, 2, 0, 8],"float32"),Tensor([2, 2, 0, 8],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2, 2, 8, 0],"float32"),Tensor([2, 2, 8, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2, 0],"float32"),Tensor([1, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),], )
paddle.concat(list[Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 2],"int64"),Tensor([0, 2],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),], axis=0, )
paddle.concat(list[Tensor([0, 2],"int64"),Tensor([0, 2],"int64"),], axis=1, )
paddle.concat(list[Tensor([0, 20, 20],"float16"),Tensor([0, 20, 20],"float16"),], )
paddle.concat(list[Tensor([2, 0, 20],"float16"),Tensor([2, 0, 20],"float16"),], )
paddle.concat(list[Tensor([2, 20, 0],"float16"),Tensor([2, 20, 0],"float16"),], )
paddle.concat(list[Tensor([0, 2016, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2016, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2016, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2016, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2016, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2016, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2016, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2016, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2016, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2016, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2016, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2016, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2048, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2048, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2048, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2048, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2048, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2048, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2064, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2064, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2064, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2064, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2064, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2064, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2080, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2080, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2080, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2080, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2080, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2080, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2112, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2112, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2112, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2112, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2112, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2112, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2112, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2112, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2112, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2144, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2144, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2144, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2144, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2144, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2144, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2160, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2160, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2160, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2176, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2176, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2176, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2176, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2176, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2176, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2208, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2208, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2208, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2208, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2208, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2208, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 224, 28, 28],"float32"),Tensor([0, 32, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 224, 0, 28],"float32"),Tensor([2, 32, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 224, 28, 0],"float32"),Tensor([2, 32, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 224, 56, 56],"float32"),Tensor([0, 32, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 224, 0, 56],"float32"),Tensor([2, 32, 0, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 224, 56, 0],"float32"),Tensor([2, 32, 56, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2240, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2240, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2240, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2240, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2240, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2240, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2272, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2272, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2272, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2272, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2272, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2272, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2304, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2304, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2304, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 232, 7, 7],"float32"),Tensor([0, 232, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 232, 0, 7],"float32"),Tensor([2, 232, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 232, 7, 0],"float32"),Tensor([2, 232, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2336, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2336, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2336, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2368, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2368, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2368, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 24, 14, 14],"float32"),Tensor([0, 24, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 24, 0, 14],"float32"),Tensor([2, 24, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 24, 14, 0],"float32"),Tensor([2, 24, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 24, 28, 28],"float32"),Tensor([0, 24, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 24, 0, 28],"float32"),Tensor([2, 24, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 24, 28, 0],"float32"),Tensor([2, 24, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 240, 28, 28],"float32"),Tensor([0, 48, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 240, 0, 28],"float32"),Tensor([2, 48, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 240, 28, 0],"float32"),Tensor([2, 48, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 240, 56, 56],"float32"),Tensor([0, 48, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 240, 0, 56],"float32"),Tensor([2, 48, 0, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 240, 56, 0],"float32"),Tensor([2, 48, 56, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2400, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2400, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2400, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2432, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2432, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2432, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 244, 14, 14],"float32"),Tensor([0, 244, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 244, 0, 14],"float32"),Tensor([2, 244, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 244, 14, 0],"float32"),Tensor([2, 244, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2464, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2464, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2464, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2496, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2496, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2496, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2528, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2528, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2528, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256, 12, 12],"float32"),Tensor([0, 256, 12, 12],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 12, 12],"float32"),Tensor([2, 0, 12, 12],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 0, 12],"float32"),Tensor([2, 256, 0, 12],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 12, 0],"float32"),Tensor([2, 256, 12, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256, 13, 13],"float32"),Tensor([0, 256, 13, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 0, 13],"float32"),Tensor([2, 256, 0, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 13, 0],"float32"),Tensor([2, 256, 13, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256, 13, 13],"float32"),Tensor([0, 320, 13, 13],"float32"),Tensor([0, 128, 13, 13],"float32"),Tensor([0, 128, 13, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 0, 13],"float32"),Tensor([2, 320, 0, 13],"float32"),Tensor([2, 128, 0, 13],"float32"),Tensor([2, 128, 0, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 13, 0],"float32"),Tensor([2, 320, 13, 0],"float32"),Tensor([2, 128, 13, 0],"float32"),Tensor([2, 128, 13, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256, 26, 26],"float32"),Tensor([0, 256, 26, 26],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 0, 26],"float32"),Tensor([2, 256, 0, 26],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 26, 0],"float32"),Tensor([2, 256, 26, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256, 28, 28],"float32"),Tensor([0, 32, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 0, 28],"float32"),Tensor([2, 32, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 28, 0],"float32"),Tensor([2, 32, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256, 6, 6],"float32"),Tensor([0, 320, 6, 6],"float32"),Tensor([0, 128, 6, 6],"float32"),Tensor([0, 128, 6, 6],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 6, 6],"float32"),Tensor([2, 0, 6, 6],"float32"),Tensor([2, 0, 6, 6],"float32"),Tensor([2, 0, 6, 6],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 0, 6],"float32"),Tensor([2, 320, 0, 6],"float32"),Tensor([2, 128, 0, 6],"float32"),Tensor([2, 128, 0, 6],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 6, 0],"float32"),Tensor([2, 320, 6, 0],"float32"),Tensor([2, 128, 6, 0],"float32"),Tensor([2, 128, 6, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2560, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2560, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2560, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2592, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2592, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2592, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2624, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2624, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2624, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2656, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2656, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2656, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 288, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 288, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 288, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 288, 28, 28],"float32"),Tensor([0, 32, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 288, 0, 28],"float32"),Tensor([2, 32, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 288, 28, 0],"float32"),Tensor([2, 32, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 288, 28, 28],"float32"),Tensor([0, 48, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 288, 0, 28],"float32"),Tensor([2, 48, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 288, 28, 0],"float32"),Tensor([2, 48, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 288, 56, 56],"float32"),Tensor([0, 48, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 288, 0, 56],"float32"),Tensor([2, 48, 0, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 288, 56, 0],"float32"),Tensor([2, 48, 56, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 3, 4],"float32"),Tensor([0, 3, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 4],"float32"),Tensor([2, 0, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 3, 0],"float32"),Tensor([2, 3, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 3],"float64"),Tensor([0, 3],"float64"),], axis=1, )
paddle.concat(list[Tensor([0, 3],"float64"),Tensor([0, 3],"float64"),Tensor([0, 3],"float64"),], )
paddle.concat(list[Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),], )
paddle.concat(list[Tensor([0, 3],"float64"),Tensor([0, 3],"float64"),Tensor([0, 3],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),], axis=1, )
paddle.concat(list[Tensor([0, 32, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 32, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 32, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 32, 32, 128],"float16"),Tensor([0, 32, 1, 128],"float16"),], axis=2, )
paddle.concat(list[Tensor([2, 0, 32, 128],"float16"),Tensor([2, 0, 1, 128],"float16"),], axis=2, )
paddle.concat(list[Tensor([2, 32, 0, 128],"float16"),Tensor([2, 32, 0, 128],"float16"),], axis=2, )
paddle.concat(list[Tensor([2, 32, 32, 0],"float16"),Tensor([2, 32, 1, 0],"float16"),], axis=2, )
paddle.concat(list[Tensor([0, 320, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 320, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 320, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 320, 28, 28],"float32"),Tensor([0, 32, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 320, 0, 28],"float32"),Tensor([2, 32, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 320, 28, 0],"float32"),Tensor([2, 32, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 320, 5, 5],"float32"),Tensor([0, 192, 5, 5],"float32"),Tensor([0, 768, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 5, 5],"float32"),Tensor([2, 0, 5, 5],"float32"),Tensor([2, 0, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 320, 0, 5],"float32"),Tensor([2, 192, 0, 5],"float32"),Tensor([2, 768, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 320, 5, 0],"float32"),Tensor([2, 192, 5, 0],"float32"),Tensor([2, 768, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 320, 5, 5],"float32"),Tensor([0, 768, 5, 5],"float32"),Tensor([0, 768, 5, 5],"float32"),Tensor([0, 192, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 5, 5],"float32"),Tensor([2, 0, 5, 5],"float32"),Tensor([2, 0, 5, 5],"float32"),Tensor([2, 0, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 320, 0, 5],"float32"),Tensor([2, 768, 0, 5],"float32"),Tensor([2, 768, 0, 5],"float32"),Tensor([2, 192, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 320, 5, 0],"float32"),Tensor([2, 768, 5, 0],"float32"),Tensor([2, 768, 5, 0],"float32"),Tensor([2, 192, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 336, 28, 28],"float32"),Tensor([0, 48, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 336, 0, 28],"float32"),Tensor([2, 48, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 336, 28, 0],"float32"),Tensor([2, 48, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 336, 56, 56],"float32"),Tensor([0, 48, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 336, 0, 56],"float32"),Tensor([2, 48, 0, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 336, 56, 0],"float32"),Tensor([2, 48, 56, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 352, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 352, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 352, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 352, 28, 28],"float32"),Tensor([0, 32, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 352, 0, 28],"float32"),Tensor([2, 32, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 352, 28, 0],"float32"),Tensor([2, 32, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 352, 7, 7],"float32"),Tensor([0, 352, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 352, 0, 7],"float32"),Tensor([2, 352, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 352, 7, 0],"float32"),Tensor([2, 352, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 384, 12, 12],"float32"),Tensor([0, 96, 12, 12],"float32"),Tensor([0, 288, 12, 12],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 12, 12],"float32"),Tensor([2, 0, 12, 12],"float32"),Tensor([2, 0, 12, 12],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 0, 12],"float32"),Tensor([2, 96, 0, 12],"float32"),Tensor([2, 288, 0, 12],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 12, 0],"float32"),Tensor([2, 96, 12, 0],"float32"),Tensor([2, 288, 12, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 384, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 384, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 384, 28, 28],"float32"),Tensor([0, 32, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 0, 28],"float32"),Tensor([2, 32, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 28, 0],"float32"),Tensor([2, 32, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 384, 28, 28],"float32"),Tensor([0, 48, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 0, 28],"float32"),Tensor([2, 48, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 28, 0],"float32"),Tensor([2, 48, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 384, 5, 5],"float32"),Tensor([0, 384, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 5, 5],"float32"),Tensor([2, 0, 5, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 0, 5],"float32"),Tensor([2, 384, 0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 5, 0],"float32"),Tensor([2, 384, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 384, 6, 6],"float32"),Tensor([0, 384, 6, 6],"float32"),Tensor([0, 128, 6, 6],"float32"),Tensor([0, 128, 6, 6],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 0, 6],"float32"),Tensor([2, 384, 0, 6],"float32"),Tensor([2, 128, 0, 6],"float32"),Tensor([2, 128, 0, 6],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 6, 0],"float32"),Tensor([2, 384, 6, 0],"float32"),Tensor([2, 128, 6, 0],"float32"),Tensor([2, 128, 6, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 4, 0, 4],"float32"),Tensor([2, 4, 0, 4],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2, 4, 8, 0],"float32"),Tensor([2, 4, 8, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 416, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 416, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 416, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 416, 28, 28],"float32"),Tensor([0, 32, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 416, 0, 28],"float32"),Tensor([2, 32, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 416, 28, 0],"float32"),Tensor([2, 32, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 432, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 432, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 432, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 432, 28, 28],"float32"),Tensor([0, 48, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 432, 0, 28],"float32"),Tensor([2, 48, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 432, 28, 0],"float32"),Tensor([2, 48, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 448, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 448, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 448, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 448, 28, 28],"float32"),Tensor([0, 32, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 448, 0, 28],"float32"),Tensor([2, 32, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 448, 28, 0],"float32"),Tensor([2, 32, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 48, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 48, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 48, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 48, 7, 7],"float32"),Tensor([0, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 48, 0, 7],"float32"),Tensor([2, 48, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 48, 7, 0],"float32"),Tensor([2, 48, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 480, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 480, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 480, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 480, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 480, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 480, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 480, 28, 28],"float32"),Tensor([0, 32, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 480, 0, 28],"float32"),Tensor([2, 32, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 480, 28, 0],"float32"),Tensor([2, 32, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 480, 28, 28],"float32"),Tensor([0, 48, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 480, 0, 28],"float32"),Tensor([2, 48, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 480, 28, 0],"float32"),Tensor([2, 48, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 488, 7, 7],"float32"),Tensor([0, 488, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 488, 0, 7],"float32"),Tensor([2, 488, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 488, 7, 0],"float32"),Tensor([2, 488, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 5],"float32"),Tensor([0, 3],"float32"),Tensor([0, 5],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 512, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 512, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 512, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 512, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 512, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 512, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0],"float16"),Tensor([2, 0],"float16"),Tensor([2, 0],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 0],"int32"),Tensor([2, 0],"int32"),Tensor([2, 0],"int32"),], axis=1, )
paddle.concat(list[Tensor([0, 528, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 528, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 528, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 528, 28, 28],"float32"),Tensor([0, 48, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 528, 0, 28],"float32"),Tensor([2, 48, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 528, 28, 0],"float32"),Tensor([2, 48, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 544, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 544, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 544, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 544, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 544, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 544, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 576, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 576, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 576, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 576, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 576, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 576, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 576, 28, 28],"float32"),Tensor([0, 48, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 576, 0, 28],"float32"),Tensor([2, 48, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 576, 28, 0],"float32"),Tensor([2, 48, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 576, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 576, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 576, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 58, 28, 28],"float32"),Tensor([0, 58, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 58, 0, 28],"float32"),Tensor([2, 58, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 58, 28, 0],"float32"),Tensor([2, 58, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 608, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 608, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 608, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 608, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 608, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 608, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 624, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 624, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 624, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 624, 28, 28],"float32"),Tensor([0, 48, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 624, 0, 28],"float32"),Tensor([2, 48, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 624, 28, 0],"float32"),Tensor([2, 48, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 64, 25, 25],"float32"),Tensor([0, 64, 25, 25],"float32"),Tensor([0, 96, 25, 25],"float32"),Tensor([0, 32, 25, 25],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 25, 25],"float32"),Tensor([2, 0, 25, 25],"float32"),Tensor([2, 0, 25, 25],"float32"),Tensor([2, 0, 25, 25],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 64, 0, 25],"float32"),Tensor([2, 64, 0, 25],"float32"),Tensor([2, 96, 0, 25],"float32"),Tensor([2, 32, 0, 25],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 64, 25, 0],"float32"),Tensor([2, 64, 25, 0],"float32"),Tensor([2, 96, 25, 0],"float32"),Tensor([2, 32, 25, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 64, 25, 25],"float32"),Tensor([0, 64, 25, 25],"float32"),Tensor([0, 96, 25, 25],"float32"),Tensor([0, 64, 25, 25],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 64, 0, 25],"float32"),Tensor([2, 64, 0, 25],"float32"),Tensor([2, 96, 0, 25],"float32"),Tensor([2, 64, 0, 25],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 64, 25, 0],"float32"),Tensor([2, 64, 25, 0],"float32"),Tensor([2, 96, 25, 0],"float32"),Tensor([2, 64, 25, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 64, 27, 27],"float32"),Tensor([0, 128, 27, 27],"float32"),Tensor([0, 32, 27, 27],"float32"),Tensor([0, 32, 27, 27],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 64, 0, 27],"float32"),Tensor([2, 128, 0, 27],"float32"),Tensor([2, 32, 0, 27],"float32"),Tensor([2, 32, 0, 27],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 64, 27, 0],"float32"),Tensor([2, 128, 27, 0],"float32"),Tensor([2, 32, 27, 0],"float32"),Tensor([2, 32, 27, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 64, 54, 54],"float32"),Tensor([0, 64, 54, 54],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 64, 0, 54],"float32"),Tensor([2, 64, 0, 54],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 64, 54, 0],"float32"),Tensor([2, 64, 54, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 64, 55, 55],"float32"),Tensor([0, 64, 55, 55],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0, 55, 55],"float32"),Tensor([2, 0, 55, 55],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 64, 0, 55],"float32"),Tensor([2, 64, 0, 55],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 64, 55, 0],"float32"),Tensor([2, 64, 55, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 64, 56, 56],"float32"),Tensor([0, 32, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 64, 0, 56],"float32"),Tensor([2, 32, 0, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 64, 56, 0],"float32"),Tensor([2, 32, 56, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 64, 7, 7],"float32"),Tensor([0, 64, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 64, 0, 7],"float32"),Tensor([2, 64, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 64, 7, 0],"float32"),Tensor([2, 64, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 640, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 640, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 640, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 640, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 640, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 640, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 66],"float32"),Tensor([0, 66],"float32"),Tensor([0, 66],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 672, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 672, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 672, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 672, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 672, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 672, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 672, 28, 28],"float32"),Tensor([0, 48, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 672, 0, 28],"float32"),Tensor([2, 48, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 672, 28, 0],"float32"),Tensor([2, 48, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 672, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 672, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 672, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 704, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 704, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 704, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 704, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 704, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 704, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 720, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 720, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 720, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 720, 28, 28],"float32"),Tensor([0, 48, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 720, 0, 28],"float32"),Tensor([2, 48, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 720, 28, 0],"float32"),Tensor([2, 48, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 736, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 736, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 736, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 736, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 736, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 736, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 768, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 768, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 768, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 768, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 768, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 768, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 768, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 768, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 768, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 8, 128, 64],"float16"),Tensor([0, 8, 1, 64],"float16"),], axis=2, )
paddle.concat(list[Tensor([2, 0, 128, 64],"float16"),Tensor([2, 0, 1, 64],"float16"),], axis=2, )
paddle.concat(list[Tensor([2, 8, 0, 64],"float16"),Tensor([2, 8, 0, 64],"float16"),], axis=2, )
paddle.concat(list[Tensor([2, 8, 128, 0],"float16"),Tensor([2, 8, 1, 0],"float16"),], axis=2, )
paddle.concat(list[Tensor([0, 8, 64, 64],"float16"),Tensor([0, 8, 1, 64],"float16"),], axis=2, )
paddle.concat(list[Tensor([2, 0, 64, 64],"float16"),Tensor([2, 0, 1, 64],"float16"),], axis=2, )
paddle.concat(list[Tensor([2, 8, 64, 0],"float16"),Tensor([2, 8, 1, 0],"float16"),], axis=2, )
paddle.concat(list[Tensor([0, 8, 64, 64],"float16"),Tensor([0, 8, 64, 64],"float16"),], axis=2, )
paddle.concat(list[Tensor([2, 0, 64, 64],"float16"),Tensor([2, 0, 64, 64],"float16"),], axis=2, )
paddle.concat(list[Tensor([2, 8, 64, 0],"float16"),Tensor([2, 8, 64, 0],"float16"),], axis=2, )
paddle.concat(list[Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([2, 8, 0],"float32"),Tensor([2, 8, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 800, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 800, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 800, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 800, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 800, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 800, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 816, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 816, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 816, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 832, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 832, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 832, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 832, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 832, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 832, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 864, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 864, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 864, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 864, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 864, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 864, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 864, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 864, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 864, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 88, 28, 28],"float32"),Tensor([0, 88, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 88, 0, 28],"float32"),Tensor([2, 88, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 88, 28, 0],"float32"),Tensor([2, 88, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 896, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 896, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 896, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 896, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 896, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 896, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 912, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 912, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 912, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 928, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 928, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 928, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 928, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 928, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 928, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 96, 56, 56],"float32"),Tensor([0, 32, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 96, 0, 56],"float32"),Tensor([2, 32, 0, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 96, 56, 0],"float32"),Tensor([2, 32, 56, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 96, 56, 56],"float32"),Tensor([0, 48, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 96, 0, 56],"float32"),Tensor([2, 48, 0, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 96, 56, 0],"float32"),Tensor([2, 48, 56, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 96, 7, 7],"float32"),Tensor([0, 96, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 96, 0, 7],"float32"),Tensor([2, 96, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 96, 7, 0],"float32"),Tensor([2, 96, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 960, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 960, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 960, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 960, 14, 14],"float32"),Tensor([0, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 960, 0, 14],"float32"),Tensor([2, 48, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 960, 14, 0],"float32"),Tensor([2, 48, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 960, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 960, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 960, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 992, 14, 14],"float32"),Tensor([0, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 992, 0, 14],"float32"),Tensor([2, 32, 0, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 992, 14, 0],"float32"),Tensor([2, 32, 14, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 992, 7, 7],"float32"),Tensor([0, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 992, 0, 7],"float32"),Tensor([2, 32, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 992, 7, 0],"float32"),Tensor([2, 32, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"int64"),Tensor([0],"int64"),], -1, )
paddle.concat(list[Tensor([0],"int64"),Tensor([0],"int64"),], axis=0, )
paddle.concat(list[Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2048, 0],"float32"),Tensor([2048, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0, 100, 120],"float64"),Tensor([0, 100, 120],"float64"),], axis=0, )
paddle.concat(list[Tensor([3, 0, 120],"float64"),Tensor([3, 0, 120],"float64"),], axis=0, )
paddle.concat(list[Tensor([3, 100, 0],"float64"),Tensor([3, 100, 0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0, 2, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 2, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 2, 1],"float64"),Tensor([0, 2, 1],"float64"),Tensor([0, 2, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 0, 1],"float64"),Tensor([3, 0, 1],"float64"),Tensor([3, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 2, 0],"float64"),Tensor([3, 2, 0],"float64"),Tensor([3, 2, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 0],"float32"),Tensor([1, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 4, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], )
paddle.concat(list[Tensor([3, 0],"float32"),Tensor([3, 0],"float32"),Tensor([3, 0],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),], 1, )
paddle.concat(list[Tensor([32, 0],"float32"),Tensor([32, 0],"float32"),], 1, )
paddle.concat(list[Tensor([0, 13],"float32"),Tensor([0, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([34, 0],"float32"),Tensor([34, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 10],"float32"),], 1, )
paddle.concat(list[Tensor([4, 0],"float32"),], 1, )
paddle.concat(list[Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),], 1, )
paddle.concat(list[Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),], 1, )
paddle.concat(list[Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),], 1, )
paddle.concat(list[Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),], 1, )
paddle.concat(list[Tensor([0, 101],"float16"),Tensor([0, 101],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 0],"float16"),Tensor([4, 0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0, 101],"float32"),Tensor([0, 101],"float32"),], axis=-1, )
paddle.concat(list[Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 101],"float64"),Tensor([0, 101],"float64"),], axis=-1, )
paddle.concat(list[Tensor([4, 0],"float64"),Tensor([4, 0],"float64"),], axis=-1, )
paddle.concat(list[Tensor([0, 12, 32],"float64"),Tensor([0, 12, 32],"float64"),], -1, )
paddle.concat(list[Tensor([4, 0, 32],"float64"),Tensor([4, 0, 32],"float64"),], -1, )
paddle.concat(list[Tensor([4, 12, 0],"float64"),Tensor([4, 12, 0],"float64"),], -1, )
paddle.concat(list[Tensor([0, 12, 8],"float64"),Tensor([0, 12, 8],"float64"),], -1, )
paddle.concat(list[Tensor([4, 0, 8],"float64"),Tensor([4, 0, 8],"float64"),], -1, )
paddle.concat(list[Tensor([0, 128, 76, 76],"float32"),Tensor([0, 256, 76, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 0, 76, 76],"float32"),Tensor([4, 0, 76, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 128, 0, 76],"float32"),Tensor([4, 256, 0, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 128, 76, 0],"float32"),Tensor([4, 256, 76, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 0],"float32"),Tensor([1, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([4, 0, 20],"float16"),Tensor([4, 0, 20],"float16"),], )
paddle.concat(list[Tensor([4, 20, 0],"float16"),Tensor([4, 20, 0],"float16"),], )
paddle.concat(list[Tensor([0, 256, 38, 38],"float32"),Tensor([0, 512, 38, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 0, 38, 38],"float32"),Tensor([4, 0, 38, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 0, 38],"float32"),Tensor([4, 512, 0, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 38, 0],"float32"),Tensor([4, 512, 38, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], )
paddle.concat(list[Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),], )
paddle.concat(list[Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),], )
paddle.concat(list[Tensor([0, 5, 20],"float32"),Tensor([0, 5, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 0, 20],"float32"),Tensor([4, 0, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 5, 0],"float32"),Tensor([4, 5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 50, 50, 5],"float32"),Tensor([0, 50, 50, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 0, 50, 5],"float32"),Tensor([60, 0, 50, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 50, 0, 5],"float32"),Tensor([60, 50, 0, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 50, 50, 0],"float32"),Tensor([60, 50, 50, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 4098],"float32"),Tensor([0, 4098],"float32"),], )
paddle.concat(list[Tensor([4098, 0],"float32"),Tensor([4098, 0],"float32"),], )
paddle.concat(list[Tensor([5, 0],"float64"),Tensor([5, 0],"float64"),Tensor([5, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 2, 2],"float32"),Tensor([0, 2, 2],"float32"),], axis=2, )
paddle.concat(list[Tensor([5, 0, 2],"float32"),Tensor([5, 0, 2],"float32"),], axis=2, )
paddle.concat(list[Tensor([5, 2, 0],"float32"),Tensor([5, 2, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 2, 4],"float32"),Tensor([0, 2, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([5, 0, 4],"float32"),Tensor([5, 0, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([5, 2, 0],"float32"),Tensor([5, 2, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([5, 0],"float32"),Tensor([5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([5, 0],"float32"),Tensor([5, 0],"float32"),Tensor([5, 0],"float32"),Tensor([5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 50, 50],"float32"),Tensor([0, 50, 50],"float32"),], axis=0, )
paddle.concat(list[Tensor([5, 0, 50],"float32"),Tensor([10, 0, 50],"float32"),], axis=0, )
paddle.concat(list[Tensor([5, 50, 0],"float32"),Tensor([10, 50, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0, 32],"float16"),Tensor([0, 32],"float16"),], axis=-1, )
paddle.concat(list[Tensor([64, 0],"float16"),Tensor([64, 0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0, 96],"float32"),Tensor([0, 96],"float32"),], 0, )
paddle.concat(list[Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),], 0, )
paddle.concat(list[Tensor([65, 0],"float16"),Tensor([65, 0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0, 100],"float16"),Tensor([0, 100],"float16"),], axis=-1, )
paddle.concat(list[Tensor([8, 0],"float16"),Tensor([8, 0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0, 100],"float32"),Tensor([0, 100],"float32"),], axis=-1, )
paddle.concat(list[Tensor([8, 0],"float32"),Tensor([8, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 100],"float64"),Tensor([0, 100],"float64"),], axis=-1, )
paddle.concat(list[Tensor([8, 0],"float64"),Tensor([8, 0],"float64"),], axis=-1, )
paddle.concat(list[Tensor([0, 16, 128, 64],"float32"),Tensor([0, 16, 1, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([8, 0, 128, 64],"float32"),Tensor([8, 0, 1, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([8, 16, 0, 64],"float32"),Tensor([8, 16, 0, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([8, 16, 128, 0],"float32"),Tensor([8, 16, 1, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 16, 2],"float32"),Tensor([0, 16, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([8, 0, 2],"float32"),Tensor([8, 0, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([8, 16, 0],"float32"),Tensor([8, 16, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 16],"float32"),Tensor([0, 8],"float32"),], 1, )
paddle.concat(list[Tensor([8, 0],"float32"),Tensor([8, 0],"float32"),], 1, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(tuple(Tensor([0, 3, 28, 28],"float32"),Tensor([0, 1, 28, 28],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 28, 28],"float32"),Tensor([1, 0, 28, 28],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 0, 28],"float32"),Tensor([1, 1, 0, 28],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 28, 0],"float32"),Tensor([1, 1, 28, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 3, 280, 350],"float32"),Tensor([0, 1, 280, 350],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 280, 350],"float32"),Tensor([1, 0, 280, 350],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 0, 350],"float32"),Tensor([1, 1, 0, 350],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 280, 0],"float32"),Tensor([1, 1, 280, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 3, 32, 26],"float32"),Tensor([0, 1, 32, 26],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 32, 26],"float32"),Tensor([1, 0, 32, 26],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 0, 26],"float32"),Tensor([1, 1, 0, 26],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 32, 0],"float32"),Tensor([1, 1, 32, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 3, 400, 300],"float32"),Tensor([0, 1, 400, 300],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 400, 300],"float32"),Tensor([1, 0, 400, 300],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 0, 300],"float32"),Tensor([1, 1, 0, 300],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 400, 0],"float32"),Tensor([1, 1, 400, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 3, 410, 440],"float32"),Tensor([0, 1, 410, 440],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 410, 440],"float32"),Tensor([1, 0, 410, 440],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 0, 440],"float32"),Tensor([1, 1, 0, 440],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 410, 0],"float32"),Tensor([1, 1, 410, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 3, 432, 448],"float32"),Tensor([0, 1, 432, 448],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 432, 448],"float32"),Tensor([1, 0, 432, 448],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 0, 448],"float32"),Tensor([1, 1, 0, 448],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 432, 0],"float32"),Tensor([1, 1, 432, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 3, 458, 384],"float32"),Tensor([0, 1, 458, 384],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 458, 384],"float32"),Tensor([1, 0, 458, 384],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 0, 384],"float32"),Tensor([1, 1, 0, 384],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 458, 0],"float32"),Tensor([1, 1, 458, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 3, 498, 494],"float32"),Tensor([0, 1, 498, 494],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 498, 494],"float32"),Tensor([1, 0, 498, 494],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 0, 494],"float32"),Tensor([1, 1, 0, 494],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 498, 0],"float32"),Tensor([1, 1, 498, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 3, 64, 64],"float32"),Tensor([0, 1, 64, 64],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 64, 64],"float32"),Tensor([1, 0, 64, 64],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 0, 64],"float32"),Tensor([1, 1, 0, 64],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 64, 0],"float32"),Tensor([1, 1, 64, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 3, 8, 8],"float32"),Tensor([0, 1, 8, 8],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 8, 8],"float32"),Tensor([1, 0, 8, 8],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 0, 8],"float32"),Tensor([1, 1, 0, 8],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 3, 8, 0],"float32"),Tensor([1, 1, 8, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0],"float32"),), )
paddle.concat(tuple(Tensor([0],"float64"),Tensor([0],"float64"),), )
paddle.concat(tuple(Tensor([0, 12],"float64"),), 1, )
paddle.concat(tuple(Tensor([2, 0],"float64"),), 1, )
paddle.concat(tuple(Tensor([0, 2],"float32"),Tensor([0, 1],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 3, 32, 32],"float32"),Tensor([0, 3, 32, 32],"float32"),), 1, )
paddle.concat(tuple(Tensor([2, 0, 32, 32],"float32"),Tensor([2, 0, 32, 32],"float32"),), 1, )
paddle.concat(tuple(Tensor([2, 3, 0, 32],"float32"),Tensor([2, 3, 0, 32],"float32"),), 1, )
paddle.concat(tuple(Tensor([2, 3, 32, 0],"float32"),Tensor([2, 3, 32, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 3, 4, 4],"float32"),Tensor([0, 1, 4, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([2, 0, 4, 4],"float32"),Tensor([2, 0, 4, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([2, 3, 0, 4],"float32"),Tensor([2, 1, 0, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([2, 3, 4, 0],"float32"),Tensor([2, 1, 4, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([2, 0, 8, 8],"float32"),Tensor([2, 0, 8, 8],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([2, 3, 0, 8],"float32"),Tensor([2, 1, 0, 8],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([2, 3, 8, 0],"float32"),Tensor([2, 1, 8, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 3],"float64"),), 1, )
paddle.concat(tuple(Tensor([0],"float32"),Tensor([0],"float32"),), )
paddle.concat(tuple(Tensor([0],"float64"),), )
paddle.concat(tuple(Tensor([0, 3],"float32"),), 1, )
paddle.concat(tuple(Tensor([3, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 1],"float32"),), 1, )
paddle.concat(tuple(Tensor([5, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 2],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),), 1, )
paddle.concat(tuple(Tensor([5, 0],"float32"),Tensor([5, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 4],"float32"),), 1, )
paddle.concat(tuple(Tensor([0],"float16"),Tensor([0],"float16"),), )
paddle.concat(x=list[Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([0, 8, 14, 12],"float32"),Tensor([0, 8, 14, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 0, 14, 12],"float32"),Tensor([1, 0, 14, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 8, 0, 12],"float32"),Tensor([1, 8, 0, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 8, 14, 0],"float32"),Tensor([1, 8, 14, 0],"float32"),], axis=0, )
paddle.cumulative_trapezoid(y=Tensor([0, 4],"float16"), x=Tensor([0, 4],"float16"), )
paddle.cumulative_trapezoid(y=Tensor([4, 0],"float16"), x=Tensor([4, 0],"float16"), )
paddle.diag(Tensor([10, 0],"float32"), offset=1, )
paddle.diag(Tensor([0, 10],"float32"), offset=-1, )
paddle.diag(Tensor([0, 1500],"float32"), offset=-1, )
paddle.diag(Tensor([2000, 0],"float32"), offset=1, )
paddle.diag(Tensor([0, 2000],"float32"), offset=-1, )
paddle.dist(Tensor([0, 2, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(Tensor([2, 0, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(Tensor([2, 2, 3, 0],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(Tensor([0, 2, 3, 2],"float32"), Tensor([0, 1, 3, 1],"float32"), 2, )
paddle.dist(Tensor([2, 0, 3, 2],"float32"), Tensor([1, 0, 3, 1],"float32"), 2, )
paddle.dist(Tensor([2, 2, 0, 2],"float32"), Tensor([1, 1, 0, 1],"float32"), 2, )
paddle.dist(Tensor([2, 2, 3, 0],"float32"), Tensor([1, 1, 3, 0],"float32"), 2, )
paddle.dist(Tensor([0, 2],"float32"), Tensor([0, 2],"float32"), 0, )
paddle.dist(Tensor([2, 0],"float32"), Tensor([2, 0],"float32"), 0, )
paddle.dist(Tensor([0, 3],"float32"), Tensor([0, 3],"float32"), )
paddle.dist(Tensor([2, 0],"float32"), Tensor([2, 0],"float32"), )
paddle.dstack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.dstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.dstack(list[Tensor([0, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 0],"float64"),], )
paddle.dstack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.dstack(list[Tensor([0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 0],"float64"),], )
paddle.dstack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.dstack(list[Tensor([0],"float64"),], )
paddle.dstack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.dstack(list[Tensor([0, 2],"float64"),], )
paddle.dstack(list[Tensor([3, 0],"float64"),], )
paddle.dstack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.dstack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], )
paddle.dstack(list[Tensor([0, 4, 2, 5],"float64"),], )
paddle.dstack(list[Tensor([3, 0, 2, 5],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 0, 5],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 2, 0],"float64"),], )
paddle.dstack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.dstack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], )
paddle.dstack(list[Tensor([0, 4, 2],"float64"),], )
paddle.dstack(list[Tensor([3, 0, 2],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 0],"float64"),], )
paddle.dstack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.dstack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], )
paddle.hstack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.hstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.hstack(list[Tensor([0, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 0],"float64"),], )
paddle.hstack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.hstack(list[Tensor([0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0],"float64"),], )
paddle.hstack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.hstack(list[Tensor([0],"float64"),], )
paddle.hstack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.hstack(list[Tensor([0, 2],"float64"),], )
paddle.hstack(list[Tensor([3, 0],"float64"),], )
paddle.hstack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.hstack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], )
paddle.hstack(list[Tensor([0, 4, 2, 5],"float64"),], )
paddle.hstack(list[Tensor([3, 0, 2, 5],"float64"),], )
paddle.hstack(list[Tensor([3, 4, 0, 5],"float64"),], )
paddle.hstack(list[Tensor([3, 4, 2, 0],"float64"),], )
paddle.hstack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.hstack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
paddle.hstack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )
paddle.hstack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], )
paddle.hstack(list[Tensor([0, 4, 2],"float64"),], )
paddle.hstack(list[Tensor([3, 0, 2],"float64"),], )
paddle.hstack(list[Tensor([3, 4, 0],"float64"),], )
paddle.hstack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.hstack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
paddle.hstack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], )
paddle.inner(Tensor([2, 0],"float32"), Tensor([3, 0],"float32"), )
paddle.inner(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.kron(Tensor([2, 2],"complex128"), Tensor([0, 2, 3],"float64"), )
paddle.kron(Tensor([2, 2],"complex128"), Tensor([2, 0, 3],"float64"), )
paddle.kron(Tensor([2, 2],"complex128"), Tensor([2, 2, 0],"float64"), )
paddle.kron(Tensor([2, 2],"complex128"), Tensor([0, 3],"float64"), )
paddle.kron(Tensor([2, 2],"complex128"), Tensor([3, 0],"float64"), )
paddle.kron(Tensor([0, 2],"complex128"), Tensor([0, 3],"float64"), )
paddle.kron(Tensor([2, 0],"complex128"), Tensor([3, 0],"float64"), )
paddle.kron(Tensor([2, 2],"complex64"), Tensor([0, 2, 3],"float32"), )
paddle.kron(Tensor([2, 2],"complex64"), Tensor([2, 0, 3],"float32"), )
paddle.kron(Tensor([2, 2],"complex64"), Tensor([2, 2, 0],"float32"), )
paddle.kron(Tensor([2, 2],"complex64"), Tensor([0, 3],"float32"), )
paddle.kron(Tensor([2, 2],"complex64"), Tensor([3, 0],"float32"), )
paddle.kron(Tensor([0, 2],"complex64"), Tensor([0, 3],"float32"), )
paddle.kron(Tensor([2, 0],"complex64"), Tensor([3, 0],"float32"), )
paddle.kron(Tensor([0, 2],"float32"), Tensor([3, 3],"complex64"), )
paddle.kron(Tensor([2, 0],"float32"), Tensor([3, 3],"complex64"), )
paddle.kron(Tensor([0, 2],"float32"), Tensor([0, 3],"complex64"), )
paddle.kron(Tensor([2, 0],"float32"), Tensor([3, 0],"complex64"), )
paddle.kron(Tensor([0, 2],"float64"), Tensor([3, 3],"complex128"), )
paddle.kron(Tensor([2, 0],"float64"), Tensor([3, 3],"complex128"), )
paddle.kron(Tensor([0, 2],"float64"), Tensor([0, 3],"complex128"), )
paddle.kron(Tensor([2, 0],"float64"), Tensor([3, 0],"complex128"), )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([0, 28, 28],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 0, 28],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 28, 0],"float32"), 0.36, )
paddle.lerp(Tensor([0, 1, 1],"float32"), Tensor([0, 28, 28],"float32"), 0.36, )
paddle.lerp(Tensor([1, 0, 1],"float32"), Tensor([3, 0, 28],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 0],"float32"), Tensor([3, 28, 0],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([0, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 0, 8],"float32"), 0.3, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 8, 0],"float32"), 0.3, )
paddle.lerp(Tensor([0, 1, 1],"float32"), Tensor([0, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([1, 0, 1],"float32"), Tensor([3, 0, 8],"float32"), 0.3, )
paddle.lerp(Tensor([1, 1, 0],"float32"), Tensor([3, 8, 0],"float32"), 0.3, )
paddle.lerp(Tensor([1, 28, 28],"float32"), Tensor([0, 28, 28],"float32"), 1.0, )
paddle.lerp(Tensor([0, 28, 28],"float32"), Tensor([0, 28, 28],"float32"), 1.0, )
paddle.lerp(Tensor([1, 0, 28],"float32"), Tensor([3, 0, 28],"float32"), 1.0, )
paddle.lerp(Tensor([1, 28, 0],"float32"), Tensor([3, 28, 0],"float32"), 1.0, )
paddle.lerp(Tensor([0, 3, 4],"float64"), Tensor([1, 3, 4],"float64"), Tensor([1, 3, 4],"float64"), )
paddle.lerp(Tensor([1, 3, 4],"float64"), Tensor([0, 3, 4],"float64"), Tensor([1, 3, 4],"float64"), )
paddle.lerp(Tensor([0, 3, 4],"float64"), Tensor([0, 3, 4],"float64"), Tensor([0, 3, 4],"float64"), )
paddle.lerp(Tensor([1, 0, 4],"float64"), Tensor([1, 0, 4],"float64"), Tensor([1, 0, 4],"float64"), )
paddle.lerp(Tensor([1, 3, 0],"float64"), Tensor([1, 3, 0],"float64"), Tensor([1, 3, 0],"float64"), )
paddle.lerp(Tensor([0, 3],"float64"), Tensor([1, 3],"float64"), Tensor([1, 3],"float64"), )
paddle.lerp(Tensor([1, 3],"float64"), Tensor([0, 3],"float64"), Tensor([1, 3],"float64"), )
paddle.lerp(Tensor([0, 3],"float64"), Tensor([0, 3],"float64"), Tensor([0, 3],"float64"), )
paddle.lerp(Tensor([1, 0],"float64"), Tensor([1, 0],"float64"), Tensor([1, 0],"float64"), )
paddle.lerp(Tensor([1, 8, 8],"float32"), Tensor([0, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([0, 8, 8],"float32"), Tensor([0, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([1, 0, 8],"float32"), Tensor([3, 0, 8],"float32"), 1.1, )
paddle.lerp(Tensor([1, 8, 0],"float32"), Tensor([3, 8, 0],"float32"), 1.1, )
paddle.lerp(Tensor([0],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([1],"float32"), Tensor([0],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([0],"float32"), Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.lerp(Tensor([0],"float64"), Tensor([1],"float64"), Tensor([1],"float64"), )
paddle.lerp(Tensor([1],"float64"), Tensor([0],"float64"), Tensor([1],"float64"), )
paddle.lerp(Tensor([0],"float64"), Tensor([0],"float64"), Tensor([0],"float64"), )
paddle.lerp(Tensor([10, 1, 0, 5, 5],"float32"), Tensor([10, 5, 1, 5, 5],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([10, 1, 10, 5, 5],"float32"), Tensor([10, 0, 1, 5, 5],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([10, 5, 10, 1, 0],"float32"), Tensor([10, 5, 10, 5, 1],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([10, 5, 10, 1, 5],"float32"), Tensor([10, 5, 10, 0, 1],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 0, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 3, 0, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 3, 8, 0],"float32"), 0.3, )
paddle.lerp(Tensor([0, 1, 1, 1],"float32"), Tensor([0, 3, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 0, 1, 1],"float32"), Tensor([2, 0, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 0, 1],"float32"), Tensor([2, 3, 0, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 1, 0],"float32"), Tensor([2, 3, 8, 0],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 8, 8],"float32"), Tensor([2, 0, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([0, 1, 8, 8],"float32"), Tensor([0, 3, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([2, 0, 8, 8],"float32"), Tensor([2, 0, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([2, 1, 0, 8],"float32"), Tensor([2, 3, 0, 8],"float32"), 1.1, )
paddle.lerp(Tensor([2, 1, 8, 0],"float32"), Tensor([2, 3, 8, 0],"float32"), 1.1, )
paddle.lerp(Tensor([2, 0],"float32"), Tensor([2, 1],"float32"), Tensor([2, 1],"float32"), )
paddle.lerp(Tensor([2, 1],"float32"), Tensor([2, 0],"float32"), Tensor([2, 1],"float32"), )
paddle.lerp(Tensor([0, 1],"float32"), Tensor([0, 1],"float32"), Tensor([0, 1],"float32"), )
paddle.lerp(Tensor([2, 0],"float32"), Tensor([2, 0],"float32"), Tensor([2, 0],"float32"), )
paddle.lerp(Tensor([2, 0, 5],"float32"), Tensor([3, 2, 1, 5],"float32"), 0.5, )
paddle.lerp(Tensor([2, 2, 5],"float32"), Tensor([0, 2, 1, 5],"float32"), 0.5, )
paddle.lerp(Tensor([0, 3, 8, 8],"float32"), Tensor([0, 3, 8, 8],"float32"), 2.1, )
paddle.lerp(Tensor([2, 0, 8, 8],"float32"), Tensor([2, 0, 8, 8],"float32"), 2.1, )
paddle.lerp(Tensor([2, 3, 0, 8],"float32"), Tensor([2, 3, 0, 8],"float32"), 2.1, )
paddle.lerp(Tensor([2, 3, 8, 0],"float32"), Tensor([2, 3, 8, 0],"float32"), 2.1, )
paddle.lerp(Tensor([0, 28, 28],"float32"), Tensor([0, 28, 28],"float32"), 1.2, )
paddle.lerp(Tensor([3, 0, 28],"float32"), Tensor([3, 0, 28],"float32"), 1.2, )
paddle.lerp(Tensor([3, 28, 0],"float32"), Tensor([3, 28, 0],"float32"), 1.2, )
paddle.lerp(Tensor([0, 8, 8],"float32"), Tensor([0, 8, 8],"float32"), 2.1, )
paddle.lerp(Tensor([3, 0, 8],"float32"), Tensor([3, 0, 8],"float32"), 2.1, )
paddle.lerp(Tensor([3, 8, 0],"float32"), Tensor([3, 8, 0],"float32"), 2.1, )
paddle.lerp(Tensor([4, 0, 6],"float64"), Tensor([4, 1, 6],"float64"), Tensor([4, 1, 6],"float64"), )
paddle.lerp(Tensor([4, 1, 6],"float64"), Tensor([4, 0, 6],"float64"), Tensor([4, 1, 6],"float64"), )
paddle.lerp(Tensor([0, 1, 6],"float64"), Tensor([0, 1, 6],"float64"), Tensor([0, 1, 6],"float64"), )
paddle.lerp(Tensor([4, 0, 6],"float64"), Tensor([4, 0, 6],"float64"), Tensor([4, 0, 6],"float64"), )
paddle.lerp(Tensor([4, 1, 0],"float64"), Tensor([4, 1, 0],"float64"), Tensor([4, 1, 0],"float64"), )
paddle.lerp(Tensor([4, 0],"float32"), Tensor([4, 1],"float32"), Tensor([4, 1],"float32"), )
paddle.lerp(Tensor([4, 1],"float32"), Tensor([4, 0],"float32"), Tensor([4, 1],"float32"), )
paddle.lerp(Tensor([4, 0],"float32"), Tensor([4, 0],"float32"), Tensor([4, 0],"float32"), )
paddle.lerp(Tensor([4, 0],"float64"), Tensor([4, 1],"float64"), Tensor([4, 1],"float64"), )
paddle.lerp(Tensor([4, 1],"float64"), Tensor([4, 0],"float64"), Tensor([4, 1],"float64"), )
paddle.lerp(Tensor([0, 1],"float64"), Tensor([0, 1],"float64"), Tensor([0, 1],"float64"), )
paddle.lerp(Tensor([4, 0],"float64"), Tensor([4, 0],"float64"), Tensor([4, 0],"float64"), )
paddle.lerp(Tensor([4, 7, 0],"float64"), Tensor([4, 7, 1],"float64"), Tensor([4, 7, 1],"float64"), )
paddle.lerp(Tensor([4, 7, 1],"float64"), Tensor([4, 7, 0],"float64"), Tensor([4, 7, 1],"float64"), )
paddle.lerp(Tensor([0, 7, 1],"float64"), Tensor([0, 7, 1],"float64"), Tensor([0, 7, 1],"float64"), )
paddle.lerp(Tensor([4, 0, 1],"float64"), Tensor([4, 0, 1],"float64"), Tensor([4, 0, 1],"float64"), )
paddle.lerp(Tensor([4, 7, 0],"float64"), Tensor([4, 7, 0],"float64"), Tensor([4, 7, 0],"float64"), )
paddle.lerp(Tensor([5, 0, 4],"float64"), Tensor([5, 1, 4],"float64"), Tensor([5, 1, 4],"float64"), )
paddle.lerp(Tensor([5, 1, 4],"float64"), Tensor([5, 0, 4],"float64"), Tensor([5, 1, 4],"float64"), )
paddle.lerp(Tensor([0, 1, 4],"float64"), Tensor([0, 1, 4],"float64"), Tensor([0, 1, 4],"float64"), )
paddle.lerp(Tensor([5, 0, 4],"float64"), Tensor([5, 0, 4],"float64"), Tensor([5, 0, 4],"float64"), )
paddle.lerp(Tensor([5, 1, 0],"float64"), Tensor([5, 1, 0],"float64"), Tensor([5, 1, 0],"float64"), )
paddle.lerp(Tensor([5, 0],"float64"), Tensor([5, 1],"float64"), Tensor([5, 1],"float64"), )
paddle.lerp(Tensor([5, 1],"float64"), Tensor([5, 0],"float64"), Tensor([5, 1],"float64"), )
paddle.lerp(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), )
paddle.lerp(Tensor([7, 0],"float64"), Tensor([7, 1],"float64"), Tensor([7, 1],"float64"), )
paddle.lerp(Tensor([7, 1],"float64"), Tensor([7, 0],"float64"), Tensor([7, 1],"float64"), )
paddle.lerp(Tensor([7, 0],"float64"), Tensor([7, 0],"float64"), Tensor([7, 0],"float64"), )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), 1, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), 1, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), -1, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), -1, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), 2, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), 2, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), -2, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), -2, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), math.inf, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), math.inf, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), None, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), None, )
paddle.linalg.cond(Tensor([0, 3],"float32"), )
paddle.linalg.cond(Tensor([3, 0],"float32"), )
paddle.linalg.cond(Tensor([0, 3],"float32"), p=1, )
paddle.linalg.cond(Tensor([3, 0],"float32"), p=1, )
paddle.linalg.cond(Tensor([0, 3],"float32"), p=-1, )
paddle.linalg.cond(Tensor([3, 0],"float32"), p=-1, )
paddle.linalg.cond(Tensor([0, 3],"float32"), p=2, )
paddle.linalg.cond(Tensor([3, 0],"float32"), p=2, )
paddle.linalg.cond(Tensor([0, 3],"float32"), p=math.inf, )
paddle.linalg.cond(Tensor([3, 0],"float32"), p=math.inf, )
paddle.linalg.cond(Tensor([3, 5, 0, 1],"float32"), 2, )
paddle.linalg.cond(Tensor([3, 5, 4, 0],"float32"), 2, )
paddle.linalg.cond(Tensor([3, 5, 0, 1],"float32"), -2, )
paddle.linalg.cond(Tensor([3, 5, 4, 0],"float32"), -2, )
paddle.linalg.cond(Tensor([3, 5, 0, 1],"float32"), None, )
paddle.linalg.cond(Tensor([3, 5, 4, 0],"float32"), None, )
paddle.linalg.cond(Tensor([3, 0, 6],"float64"), 1, )
paddle.linalg.cond(Tensor([3, 6, 0],"float64"), 1, )
paddle.linalg.cond(Tensor([3, 0, 6],"float64"), -1, )
paddle.linalg.cond(Tensor([3, 6, 0],"float64"), -1, )
paddle.linalg.cond(Tensor([3, 0, 6],"float64"), 2, )
paddle.linalg.cond(Tensor([3, 6, 0],"float64"), 2, )
paddle.linalg.cond(Tensor([3, 0, 6],"float64"), -2, )
paddle.linalg.cond(Tensor([3, 6, 0],"float64"), -2, )
paddle.linalg.cond(Tensor([3, 0, 6],"float64"), math.inf, )
paddle.linalg.cond(Tensor([3, 6, 0],"float64"), math.inf, )
paddle.linalg.cond(Tensor([3, 0, 6],"float64"), -math.inf, )
paddle.linalg.cond(Tensor([3, 6, 0],"float64"), -math.inf, )
paddle.linalg.cond(Tensor([3, 0, 6],"float64"), None, )
paddle.linalg.cond(Tensor([3, 6, 0],"float64"), None, )
paddle.linalg.cond(Tensor([4, 0, 10],"float32"), 2, )
paddle.linalg.cond(Tensor([4, 2, 0],"float32"), 2, )
paddle.linalg.cond(Tensor([4, 0, 10],"float32"), -2, )
paddle.linalg.cond(Tensor([4, 2, 0],"float32"), -2, )
paddle.linalg.cond(Tensor([4, 0, 10],"float32"), None, )
paddle.linalg.cond(Tensor([4, 2, 0],"float32"), None, )
paddle.linalg.cond(Tensor([0, 5],"float32"), 1, )
paddle.linalg.cond(Tensor([5, 0],"float32"), 1, )
paddle.linalg.cond(Tensor([0, 5],"float32"), -1, )
paddle.linalg.cond(Tensor([5, 0],"float32"), -1, )
paddle.linalg.cond(Tensor([0, 5],"float32"), 2, )
paddle.linalg.cond(Tensor([5, 0],"float32"), 2, )
paddle.linalg.cond(Tensor([0, 5],"float32"), -2, )
paddle.linalg.cond(Tensor([5, 0],"float32"), -2, )
paddle.linalg.cond(Tensor([0, 5],"float32"), math.inf, )
paddle.linalg.cond(Tensor([5, 0],"float32"), math.inf, )
paddle.linalg.cond(Tensor([0, 5],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([5, 0],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([0, 5],"float32"), None, )
paddle.linalg.cond(Tensor([5, 0],"float32"), None, )
paddle.linalg.cond(Tensor([0, 7],"float64"), 2, )
paddle.linalg.cond(Tensor([9, 0],"float64"), 2, )
paddle.linalg.cond(Tensor([0, 7],"float64"), -2, )
paddle.linalg.cond(Tensor([9, 0],"float64"), -2, )
paddle.linalg.cond(Tensor([0, 7],"float64"), None, )
paddle.linalg.cond(Tensor([9, 0],"float64"), None, )
paddle.linalg.eigvals(Tensor([0, 9, 2, 2],"complex128"), name="small_x", )
paddle.linalg.eigvals(Tensor([6, 0, 2, 2],"complex128"), name="small_x", )
paddle.linalg.eigvals(Tensor([0, 9, 2, 2],"complex64"), name="small_x", )
paddle.linalg.eigvals(Tensor([6, 0, 2, 2],"complex64"), name="small_x", )
paddle.linalg.eigvals(Tensor([0, 9, 2, 2],"float32"), name="small_x", )
paddle.linalg.eigvals(Tensor([6, 0, 2, 2],"float32"), name="small_x", )
paddle.linalg.eigvals(Tensor([0, 9, 2, 2],"float64"), name="small_x", )
paddle.linalg.eigvals(Tensor([6, 0, 2, 2],"float64"), name="small_x", )
paddle.linalg.lstsq(Tensor([10, 0],"float32"), Tensor([10, 8],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([0, 5],"float32"), Tensor([0, 8],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 0],"float32"), Tensor([10, 0],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 7, 0],"float64"), Tensor([10, 7, 6],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 7, 3],"float64"), Tensor([10, 7, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([0, 7, 3],"float64"), Tensor([0, 7, 6],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 0, 3],"float64"), Tensor([10, 0, 6],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 7, 0],"float64"), Tensor([10, 7, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 8, 0],"float64"), Tensor([10, 8, 10],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 8, 6],"float64"), Tensor([10, 8, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([0, 8, 6],"float64"), Tensor([0, 8, 10],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 0, 6],"float64"), Tensor([10, 0, 10],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 8, 0],"float64"), Tensor([10, 8, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([3, 2, 0],"float32"), Tensor([3, 2, 15],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([3, 0, 8],"float32"), Tensor([3, 0, 15],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([3, 2, 0],"float32"), Tensor([3, 2, 0],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([5, 0],"float64"), Tensor([5, 8],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([0, 10],"float64"), Tensor([0, 8],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([9, 0],"float32"), Tensor([9, 5],"float32"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([0, 9],"float32"), Tensor([0, 5],"float32"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([9, 0],"float32"), Tensor([9, 0],"float32"), rcond=1e-15, driver="gels", )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4, 5],"float64"), p=-2, axis=list[1,2,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 4, 0],"float64"), p=-2, axis=list[1,2,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4, 5],"float64"), p=-2, axis=list[1,2,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 4, 0],"float64"), p=-2, axis=list[1,2,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4],"float64"), p="fro", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p="fro", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p="fro", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4],"float64"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4],"float64"), p="nuc", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p="nuc", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4],"float64"), p="nuc", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p="nuc", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), hermitian=True, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), hermitian=True, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), hermitian=True, atol=0.015, rtol=None, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), hermitian=True, atol=0.015, rtol=None, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), hermitian=True, atol=0.2, rtol=0.05, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), hermitian=True, atol=0.2, rtol=0.05, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), hermitian=True, atol=None, rtol=1.1, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), hermitian=True, atol=None, rtol=1.1, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), tol=Tensor([2],"float32"), )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), tol=Tensor([2],"float32"), )
paddle.linalg.matrix_rank(Tensor([0, 200],"float64"), Tensor([200, 200],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([200, 0],"float64"), Tensor([200, 200],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([0, 200],"float64"), Tensor([0, 200],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([200, 0],"float64"), Tensor([200, 0],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([0, 3],"float32"), 0.1, True, )
paddle.linalg.matrix_rank(Tensor([3, 0],"float32"), 0.1, True, )
paddle.linalg.matrix_rank(Tensor([0, 4, 5, 5],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 0, 5, 5],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 5],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 0],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 5],"float64"), hermitian=True, atol=0.5, rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 0],"float64"), hermitian=True, atol=0.5, rtol=None, )
paddle.linalg.matrix_rank(Tensor([0, 4, 5, 6],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([3, 0, 5, 6],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 6],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 0],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([3, 0, 5],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 0],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 0, 5],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 8],"float64"), 0.1, hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 0],"float64"), 0.1, hermitian=False, )
paddle.linalg.matrix_rank(Tensor([0, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 1],"float32"), rtol=Tensor([3, 1],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 8],"float64"), hermitian=False, atol=Tensor([3, 1],"float32"), rtol=Tensor([3, 1],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 0],"float64"), hermitian=False, atol=Tensor([3, 1],"float32"), rtol=Tensor([3, 1],"float32"), )
paddle.linalg.matrix_rank(Tensor([0, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 0, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 0],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([0, 4, 7, 8],"float64"), Tensor([3, 4],"float32"), hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 0, 7, 8],"float64"), Tensor([3, 4],"float32"), hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 8],"float64"), Tensor([3, 4],"float32"), hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 0],"float64"), Tensor([3, 4],"float32"), hermitian=False, )
paddle.linalg.matrix_rank(Tensor([0, 1],"float64"), Tensor([1, 4],"float64"), False, )
paddle.linalg.matrix_rank(Tensor([5, 0],"float64"), Tensor([1, 4],"float64"), False, )
paddle.linalg.matrix_rank(Tensor([0, 1],"float64"), Tensor([0, 4],"float64"), False, )
paddle.linalg.matrix_rank(Tensor([5, 0],"float64"), Tensor([1, 0],"float64"), False, )
paddle.linalg.norm(Tensor([0],"float32"), 2.0, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=0, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=0, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=math.inf, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=math.inf, axis=-1, )
paddle.linalg.norm(Tensor([0, 3, 4, 5],"bfloat16"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2, 0, 4, 5],"bfloat16"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2, 3, 0, 5],"bfloat16"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2, 3, 4, 0],"bfloat16"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([0, 3, 4, 5],"float64"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2, 0, 4, 5],"float64"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2, 3, 0, 5],"float64"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2, 3, 4, 0],"float64"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([0, 3, 4, 5],"float64"), p="fro", axis=list[1,2,], keepdim=False, )
paddle.linalg.norm(Tensor([2, 0, 4, 5],"float64"), p="fro", axis=list[1,2,], keepdim=False, )
paddle.linalg.norm(Tensor([2, 3, 0, 5],"float64"), p="fro", axis=list[1,2,], keepdim=False, )
paddle.linalg.norm(Tensor([2, 3, 4, 0],"float64"), p="fro", axis=list[1,2,], keepdim=False, )
paddle.linalg.norm(Tensor([0],"float32"), )
paddle.linalg.norm(Tensor([0],"float32"), p=1, )
paddle.linalg.norm(Tensor([0],"float32"), p=1, axis=0, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), 0.0, 2, True, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), 0.0, 2, True, )
paddle.linalg.norm(Tensor([3, 20, 0],"float32"), 0.0, 2, True, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), 2.0, -1, False, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), 2.0, -1, False, )
paddle.linalg.norm(Tensor([3, 20, 0],"float32"), 2.0, -1, False, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), 2.0, 2, True, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), 2.0, 2, True, )
paddle.linalg.norm(Tensor([3, 20, 0],"float32"), 2.0, 2, True, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), math.inf, 2, True, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), math.inf, 2, True, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), -math.inf, 2, True, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), -math.inf, 2, True, )
paddle.linalg.norm(Tensor([0, 6],"float32"), )
paddle.linalg.norm(Tensor([4, 0],"float32"), )
paddle.linalg.norm(Tensor([0, 6],"float32"), p=1, axis=list[0,1,], )
paddle.linalg.norm(Tensor([4, 0],"float32"), p=-math.inf, axis=list[0,1,], )
paddle.linalg.norm(Tensor([0, 5, 5],"float32"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([5, 0, 5],"float32"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([5, 5, 0],"float32"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([0, 50, 20],"float64"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([50, 0, 20],"float64"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([50, 50, 0],"float64"), p=2.0, axis=-1, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float64"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float64"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=0, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=0, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=0, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=0, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=1, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=1, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=1, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=1, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=2, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=2, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=2, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=2, axis=1, keepdim=True, )
paddle.linalg.ormqr(Tensor([3, 3],"float32"), Tensor([0],"float32"), Tensor([3, 3],"float32"), )
paddle.linalg.pca_lowrank(Tensor([0, 100, 4],"float64"), q=2, )
paddle.linalg.pca_lowrank(Tensor([0, 100, 4],"float64"), q=4, )
paddle.linalg.pca_lowrank(Tensor([0, 100, 40],"float64"), q=12, )
paddle.linalg.pca_lowrank(Tensor([0, 100, 40],"float64"), q=6, )
paddle.linalg.pca_lowrank(Tensor([0, 100, 40],"float64"), q=8, )
paddle.linalg.pca_lowrank(Tensor([0, 17, 4],"float64"), q=2, )
paddle.linalg.pca_lowrank(Tensor([0, 17, 4],"float64"), q=4, )
paddle.linalg.pca_lowrank(Tensor([0, 4, 100],"float64"), q=2, )
paddle.linalg.pca_lowrank(Tensor([0, 4, 100],"float64"), q=4, )
paddle.linalg.pca_lowrank(Tensor([0, 4, 17],"float64"), q=2, )
paddle.linalg.pca_lowrank(Tensor([0, 4, 17],"float64"), q=4, )
paddle.linalg.pca_lowrank(Tensor([0, 40, 100],"float64"), q=12, )
paddle.linalg.pca_lowrank(Tensor([0, 40, 100],"float64"), q=6, )
paddle.linalg.pca_lowrank(Tensor([0, 40, 100],"float64"), q=8, )
paddle.linalg.pca_lowrank(Tensor([0, 3, 100, 4],"float64"), q=2, )
paddle.linalg.pca_lowrank(Tensor([2, 0, 100, 4],"float64"), q=2, )
paddle.linalg.pca_lowrank(Tensor([0, 3, 100, 4],"float64"), q=4, )
paddle.linalg.pca_lowrank(Tensor([2, 0, 100, 4],"float64"), q=4, )
paddle.linalg.pca_lowrank(Tensor([0, 3, 100, 40],"float64"), q=12, )
paddle.linalg.pca_lowrank(Tensor([2, 0, 100, 40],"float64"), q=12, )
paddle.linalg.pca_lowrank(Tensor([0, 3, 100, 40],"float64"), q=6, )
paddle.linalg.pca_lowrank(Tensor([2, 0, 100, 40],"float64"), q=6, )
paddle.linalg.pca_lowrank(Tensor([0, 3, 100, 40],"float64"), q=8, )
paddle.linalg.pca_lowrank(Tensor([2, 0, 100, 40],"float64"), q=8, )
paddle.linalg.pca_lowrank(Tensor([0, 3, 17, 4],"float64"), q=2, )
paddle.linalg.pca_lowrank(Tensor([2, 0, 17, 4],"float64"), q=2, )
paddle.linalg.pca_lowrank(Tensor([0, 3, 17, 4],"float64"), q=4, )
paddle.linalg.pca_lowrank(Tensor([2, 0, 17, 4],"float64"), q=4, )
paddle.linalg.pca_lowrank(Tensor([0, 3, 4, 100],"float64"), q=2, )
paddle.linalg.pca_lowrank(Tensor([2, 0, 4, 100],"float64"), q=2, )
paddle.linalg.pca_lowrank(Tensor([0, 3, 4, 100],"float64"), q=4, )
paddle.linalg.pca_lowrank(Tensor([2, 0, 4, 100],"float64"), q=4, )
paddle.linalg.pca_lowrank(Tensor([0, 3, 4, 17],"float64"), q=2, )
paddle.linalg.pca_lowrank(Tensor([2, 0, 4, 17],"float64"), q=2, )
paddle.linalg.pca_lowrank(Tensor([0, 3, 4, 17],"float64"), q=4, )
paddle.linalg.pca_lowrank(Tensor([2, 0, 4, 17],"float64"), q=4, )
paddle.linalg.pca_lowrank(Tensor([0, 3, 40, 100],"float64"), q=12, )
paddle.linalg.pca_lowrank(Tensor([2, 0, 40, 100],"float64"), q=12, )
paddle.linalg.pca_lowrank(Tensor([0, 3, 40, 100],"float64"), q=6, )
paddle.linalg.pca_lowrank(Tensor([2, 0, 40, 100],"float64"), q=6, )
paddle.linalg.pca_lowrank(Tensor([0, 3, 40, 100],"float64"), q=8, )
paddle.linalg.pca_lowrank(Tensor([2, 0, 40, 100],"float64"), q=8, )
paddle.linalg.pca_lowrank(Tensor([0, 5],"float64"), None, center=False, )
paddle.linalg.pca_lowrank(Tensor([5, 0],"float64"), None, center=False, )
paddle.linalg.pinv(Tensor([0, 200, 300],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([2, 0, 300],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([2, 200, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 4, 5],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 0, 5],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 4, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 5, 4],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 0, 4],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 5, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 5, 5],"complex128"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([3, 0, 5],"complex128"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([3, 5, 0],"complex128"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([0, 5, 5],"complex64"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([3, 0, 5],"complex64"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([3, 5, 0],"complex64"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([0, 5, 5],"float32"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 0, 5],"float32"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 5, 0],"float32"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 5, 5],"float32"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([3, 0, 5],"float32"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([3, 5, 0],"float32"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([0, 5, 5],"float64"), rcond=1e-10, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 0, 5],"float64"), rcond=1e-10, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 5, 0],"float64"), rcond=1e-10, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 5, 5],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 5, 5],"float64"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([3, 0, 5],"float64"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([3, 5, 0],"float64"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([0, 6, 5, 4],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 0, 5, 4],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 6, 0, 4],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 6, 5, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 5],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([4, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 4],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([5, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 5],"complex128"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([5, 0],"complex128"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([0, 5],"float64"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([5, 0],"float64"), rcond=1e-15, hermitian=True, )
paddle.linalg.svd_lowrank(Tensor([0, 100, 40],"float64"), q=12, )
paddle.linalg.svd_lowrank(Tensor([0, 100, 40],"float64"), q=6, )
paddle.linalg.svd_lowrank(Tensor([0, 100, 40],"float64"), q=8, )
paddle.linalg.svd_lowrank(Tensor([0, 17, 4],"float64"), q=2, )
paddle.linalg.svd_lowrank(Tensor([0, 17, 4],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([0, 4, 17],"float64"), q=2, )
paddle.linalg.svd_lowrank(Tensor([0, 4, 17],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([0, 40, 100],"float64"), q=12, )
paddle.linalg.svd_lowrank(Tensor([0, 40, 100],"float64"), q=6, )
paddle.linalg.svd_lowrank(Tensor([0, 40, 100],"float64"), q=8, )
paddle.linalg.svd_lowrank(Tensor([0, 3, 100, 40],"float64"), q=12, )
paddle.linalg.svd_lowrank(Tensor([2, 0, 100, 40],"float64"), q=12, )
paddle.linalg.svd_lowrank(Tensor([0, 3, 100, 40],"float64"), q=6, )
paddle.linalg.svd_lowrank(Tensor([2, 0, 100, 40],"float64"), q=6, )
paddle.linalg.svd_lowrank(Tensor([0, 3, 100, 40],"float64"), q=8, )
paddle.linalg.svd_lowrank(Tensor([2, 0, 100, 40],"float64"), q=8, )
paddle.linalg.svd_lowrank(Tensor([0, 3, 17, 4],"float64"), q=2, )
paddle.linalg.svd_lowrank(Tensor([2, 0, 17, 4],"float64"), q=2, )
paddle.linalg.svd_lowrank(Tensor([0, 3, 17, 4],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([2, 0, 17, 4],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([0, 3, 4, 17],"float64"), q=2, )
paddle.linalg.svd_lowrank(Tensor([2, 0, 4, 17],"float64"), q=2, )
paddle.linalg.svd_lowrank(Tensor([0, 3, 4, 17],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([2, 0, 4, 17],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([0, 3, 40, 100],"float64"), q=12, )
paddle.linalg.svd_lowrank(Tensor([2, 0, 40, 100],"float64"), q=12, )
paddle.linalg.svd_lowrank(Tensor([0, 3, 40, 100],"float64"), q=6, )
paddle.linalg.svd_lowrank(Tensor([2, 0, 40, 100],"float64"), q=6, )
paddle.linalg.svd_lowrank(Tensor([0, 3, 40, 100],"float64"), q=8, )
paddle.linalg.svd_lowrank(Tensor([2, 0, 40, 100],"float64"), q=8, )
paddle.linalg.vector_norm(x=Tensor([0, 14, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1, 0, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1, 14, 5, 0],"complex128"), p=math.inf, axis=2, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 14, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1, 0, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1, 14, 5, 0],"complex128"), p=math.inf, axis=2, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 3, 4],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 3, 4],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float32"), p=2, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float32"), p=2, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float32"), p=2, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float32"), p=2, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=0, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=0, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=0, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=0, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=0, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=0, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=0, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=0, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=1, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=1, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=1, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=1, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=2, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=2, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=2, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=2, axis=1, keepdim=True, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float32"), 2, False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float64"), list[0,-1,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float64"), list[0,-1,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float64"), list[0,-1,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float64"), list[0,-1,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float64"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float64"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float64"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float64"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float64"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float64"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float64"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float64"), list[-1,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float64"), list[-1,], True, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float64"), list[-1,], True, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float64"), list[-1,], True, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float64"), list[-1,], True, )
paddle.logsumexp(Tensor([0, 200, 40],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([30, 0, 40],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([30, 200, 0],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([0, 200, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([30, 0, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([30, 200, 0],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([0, 5, 6],"float64"), list[-1,], False, )
paddle.logsumexp(Tensor([4, 0, 6],"float64"), list[-1,], False, )
paddle.logsumexp(Tensor([4, 5, 0],"float64"), list[-1,], False, )
paddle.logsumexp(Tensor([0],"float32"), axis=0, )
paddle.masked_select(Tensor([0, 1],"float32"), Tensor([1, 1],"bool"), )
paddle.masked_select(Tensor([1, 0],"float32"), Tensor([1, 1],"bool"), )
paddle.masked_select(Tensor([1, 1],"float32"), Tensor([0, 1],"bool"), )
paddle.masked_select(Tensor([1, 1],"float32"), Tensor([1, 0],"bool"), )
paddle.masked_select(Tensor([0, 1],"float32"), Tensor([0, 1],"bool"), )
paddle.masked_select(Tensor([1, 0],"float32"), Tensor([1, 0],"bool"), )
paddle.masked_select(Tensor([0, 2, 2],"float32"), Tensor([1, 2, 2],"bool"), )
paddle.masked_select(Tensor([1, 2, 2],"float32"), Tensor([0, 2, 2],"bool"), )
paddle.masked_select(Tensor([0, 2, 2],"float32"), Tensor([0, 2, 2],"bool"), )
paddle.masked_select(Tensor([1, 0, 2],"float32"), Tensor([1, 0, 2],"bool"), )
paddle.masked_select(Tensor([1, 2, 0],"float32"), Tensor([1, 2, 0],"bool"), )
paddle.masked_select(Tensor([0, 10],"float32"), Tensor([0, 10],"bool"), )
paddle.masked_select(Tensor([10, 0],"float32"), Tensor([10, 0],"bool"), )
paddle.masked_select(Tensor([0, 2],"float32"), Tensor([0, 2],"bool"), )
paddle.masked_select(Tensor([2, 0],"float32"), Tensor([2, 0],"bool"), )
paddle.masked_select(Tensor([3, 0],"float32"), Tensor([3, 1],"bool"), )
paddle.masked_select(Tensor([0, 4],"float32"), Tensor([0, 1],"bool"), )
paddle.masked_select(Tensor([3, 0],"float32"), Tensor([3, 0],"bool"), )
paddle.masked_select(Tensor([0, 50],"float64"), Tensor([0, 50],"bool"), )
paddle.masked_select(Tensor([50, 0],"float64"), Tensor([50, 0],"bool"), )
paddle.masked_select(Tensor([0, 6, 8],"float32"), Tensor([0, 6, 8],"bool"), )
paddle.masked_select(Tensor([88, 0, 8],"float32"), Tensor([88, 0, 8],"bool"), )
paddle.masked_select(Tensor([88, 6, 0],"float32"), Tensor([88, 6, 0],"bool"), )
paddle.mean(Tensor([0, 1, 1, 1, 3],"float64"), )
paddle.mean(Tensor([1, 0, 1, 1, 3],"float64"), )
paddle.mean(Tensor([1, 1, 0, 1, 3],"float64"), )
paddle.mean(Tensor([1, 1, 1, 0, 3],"float64"), )
paddle.mean(Tensor([1, 1, 1, 1, 0],"float64"), )
paddle.mean(Tensor([0, 1, 100],"float32"), )
paddle.mean(Tensor([1, 0, 100],"float32"), )
paddle.mean(Tensor([1, 1, 0],"float32"), )
paddle.mean(Tensor([0, 1, 16, 16],"float32"), )
paddle.mean(Tensor([1, 0, 16, 16],"float32"), )
paddle.mean(Tensor([1, 1, 0, 16],"float32"), )
paddle.mean(Tensor([1, 1, 16, 0],"float32"), )
paddle.mean(Tensor([0, 1, 16, 16],"float64"), )
paddle.mean(Tensor([1, 0, 16, 16],"float64"), )
paddle.mean(Tensor([1, 1, 0, 16],"float64"), )
paddle.mean(Tensor([1, 1, 16, 0],"float64"), )
paddle.mean(Tensor([0, 1, 16, 8, 4],"float32"), )
paddle.mean(Tensor([1, 0, 16, 8, 4],"float32"), )
paddle.mean(Tensor([1, 1, 0, 8, 4],"float32"), )
paddle.mean(Tensor([1, 1, 16, 0, 4],"float32"), )
paddle.mean(Tensor([1, 1, 16, 8, 0],"float32"), )
paddle.mean(Tensor([0, 1, 17, 9, 5],"float16"), )
paddle.mean(Tensor([1, 0, 17, 9, 5],"float16"), )
paddle.mean(Tensor([1, 1, 0, 9, 5],"float16"), )
paddle.mean(Tensor([1, 1, 17, 0, 5],"float16"), )
paddle.mean(Tensor([1, 1, 17, 9, 0],"float16"), )
paddle.mean(Tensor([0, 1, 17, 9, 5],"float32"), )
paddle.mean(Tensor([1, 0, 17, 9, 5],"float32"), )
paddle.mean(Tensor([1, 1, 0, 9, 5],"float32"), )
paddle.mean(Tensor([1, 1, 17, 0, 5],"float32"), )
paddle.mean(Tensor([1, 1, 17, 9, 0],"float32"), )
paddle.mean(Tensor([0, 1, 2, 4, 10],"float16"), )
paddle.mean(Tensor([1, 0, 2, 4, 10],"float16"), )
paddle.mean(Tensor([1, 1, 0, 4, 10],"float16"), )
paddle.mean(Tensor([1, 1, 2, 0, 10],"float16"), )
paddle.mean(Tensor([1, 1, 2, 4, 0],"float16"), )
paddle.mean(Tensor([0, 1, 2, 4, 10],"float64"), )
paddle.mean(Tensor([1, 0, 2, 4, 10],"float64"), )
paddle.mean(Tensor([1, 1, 0, 4, 10],"float64"), )
paddle.mean(Tensor([1, 1, 2, 0, 10],"float64"), )
paddle.mean(Tensor([1, 1, 2, 4, 0],"float64"), )
paddle.mean(Tensor([0, 1, 2, 4, 4],"float64"), )
paddle.mean(Tensor([1, 0, 2, 4, 4],"float64"), )
paddle.mean(Tensor([1, 1, 0, 4, 4],"float64"), )
paddle.mean(Tensor([1, 1, 2, 0, 4],"float64"), )
paddle.mean(Tensor([0, 1, 4, 2, 2, 2],"float64"), )
paddle.mean(Tensor([1, 0, 4, 2, 2, 2],"float64"), )
paddle.mean(Tensor([1, 1, 0, 2, 2, 2],"float64"), )
paddle.mean(Tensor([1, 1, 4, 0, 2, 2],"float64"), )
paddle.mean(Tensor([1, 1, 4, 2, 0, 2],"float64"), )
paddle.mean(Tensor([1, 1, 4, 2, 2, 0],"float64"), )
paddle.mean(Tensor([0, 1, 4, 4],"float32"), )
paddle.mean(Tensor([1, 0, 4, 4],"float32"), )
paddle.mean(Tensor([1, 1, 0, 4],"float32"), )
paddle.mean(Tensor([1, 1, 4, 0],"float32"), )
paddle.mean(Tensor([0, 1, 5],"float32"), )
paddle.mean(Tensor([1, 0, 5],"float32"), )
paddle.mean(Tensor([0, 1, 64, 32],"float16"), )
paddle.mean(Tensor([1, 0, 64, 32],"float16"), )
paddle.mean(Tensor([1, 1, 0, 32],"float16"), )
paddle.mean(Tensor([1, 1, 64, 0],"float16"), )
paddle.mean(Tensor([0, 1, 64, 32],"float64"), )
paddle.mean(Tensor([1, 0, 64, 32],"float64"), )
paddle.mean(Tensor([1, 1, 0, 32],"float64"), )
paddle.mean(Tensor([1, 1, 64, 0],"float64"), )
paddle.mean(Tensor([0, 1, 65, 129],"float16"), )
paddle.mean(Tensor([1, 0, 65, 129],"float16"), )
paddle.mean(Tensor([1, 1, 0, 129],"float16"), )
paddle.mean(Tensor([1, 1, 65, 0],"float16"), )
paddle.mean(Tensor([0, 1, 65, 129],"float64"), )
paddle.mean(Tensor([1, 0, 65, 129],"float64"), )
paddle.mean(Tensor([1, 1, 0, 129],"float64"), )
paddle.mean(Tensor([1, 1, 65, 0],"float64"), )
paddle.mean(Tensor([0, 1, 8, 10, 12],"float64"), )
paddle.mean(Tensor([1, 0, 8, 10, 12],"float64"), )
paddle.mean(Tensor([1, 1, 0, 10, 12],"float64"), )
paddle.mean(Tensor([1, 1, 8, 0, 12],"float64"), )
paddle.mean(Tensor([1, 1, 8, 10, 0],"float64"), )
paddle.mean(Tensor([0, 1, 8, 16],"float32"), )
paddle.mean(Tensor([1, 0, 8, 16],"float32"), )
paddle.mean(Tensor([1, 1, 8, 0],"float32"), )
paddle.mean(Tensor([0, 1, 8, 32],"float16"), )
paddle.mean(Tensor([1, 0, 8, 32],"float16"), )
paddle.mean(Tensor([1, 1, 8, 0],"float16"), )
paddle.mean(Tensor([0, 1, 8, 32],"float64"), )
paddle.mean(Tensor([1, 0, 8, 32],"float64"), )
paddle.mean(Tensor([1, 1, 8, 0],"float64"), )
paddle.mean(Tensor([0, 1, 8, 8, 4],"float32"), )
paddle.mean(Tensor([1, 0, 8, 8, 4],"float32"), )
paddle.mean(Tensor([1, 1, 8, 0, 4],"float32"), )
paddle.mean(Tensor([1, 1, 8, 8, 0],"float32"), )
paddle.mean(Tensor([0, 1],"float32"), )
paddle.mean(Tensor([1, 0],"float32"), )
paddle.mean(Tensor([0, 1],"float32"), name=None, )
paddle.mean(Tensor([1, 0],"float32"), name=None, )
paddle.mean(Tensor([0, 1],"float64"), )
paddle.mean(Tensor([1, 0],"float64"), )
paddle.mean(Tensor([0, 10, 100],"float16"), )
paddle.mean(Tensor([1, 0, 100],"float16"), )
paddle.mean(Tensor([1, 10, 0],"float16"), )
paddle.mean(Tensor([0, 100, 1],"float64"), )
paddle.mean(Tensor([1, 0, 1],"float64"), )
paddle.mean(Tensor([1, 100, 0],"float64"), )
paddle.mean(Tensor([0, 100, 2, 2, 2, 2],"float16"), )
paddle.mean(Tensor([1, 0, 2, 2, 2, 2],"float16"), )
paddle.mean(Tensor([1, 100, 0, 2, 2, 2],"float16"), )
paddle.mean(Tensor([1, 100, 2, 0, 2, 2],"float16"), )
paddle.mean(Tensor([1, 100, 2, 2, 0, 2],"float16"), )
paddle.mean(Tensor([1, 100, 2, 2, 2, 0],"float16"), )
paddle.mean(Tensor([0, 100, 2, 2, 2, 2],"float64"), )
paddle.mean(Tensor([1, 0, 2, 2, 2, 2],"float64"), )
paddle.mean(Tensor([1, 100, 0, 2, 2, 2],"float64"), )
paddle.mean(Tensor([1, 100, 2, 0, 2, 2],"float64"), )
paddle.mean(Tensor([1, 100, 2, 2, 0, 2],"float64"), )
paddle.mean(Tensor([1, 100, 2, 2, 2, 0],"float64"), )
paddle.mean(Tensor([0, 100],"float64"), )
paddle.mean(Tensor([0, 120],"float64"), )
paddle.mean(Tensor([0, 2, 1, 1, 5],"float64"), )
paddle.mean(Tensor([1, 0, 1, 1, 5],"float64"), )
paddle.mean(Tensor([1, 2, 0, 1, 5],"float64"), )
paddle.mean(Tensor([1, 2, 1, 0, 5],"float64"), )
paddle.mean(Tensor([1, 2, 1, 1, 0],"float64"), )
paddle.mean(Tensor([0, 2, 2, 2, 2, 100],"float16"), )
paddle.mean(Tensor([1, 0, 2, 2, 2, 100],"float16"), )
paddle.mean(Tensor([1, 2, 0, 2, 2, 100],"float16"), )
paddle.mean(Tensor([1, 2, 2, 0, 2, 100],"float16"), )
paddle.mean(Tensor([1, 2, 2, 2, 0, 100],"float16"), )
paddle.mean(Tensor([1, 2, 2, 2, 2, 0],"float16"), )
paddle.mean(Tensor([0, 2, 2, 2, 2, 100],"float64"), )
paddle.mean(Tensor([1, 0, 2, 2, 2, 100],"float64"), )
paddle.mean(Tensor([1, 2, 0, 2, 2, 100],"float64"), )
paddle.mean(Tensor([1, 2, 2, 0, 2, 100],"float64"), )
paddle.mean(Tensor([1, 2, 2, 2, 0, 100],"float64"), )
paddle.mean(Tensor([1, 2, 2, 2, 2, 0],"float64"), )
paddle.mean(Tensor([0, 2, 3, 4, 4, 3, 3],"float64"), )
paddle.mean(Tensor([1, 0, 3, 4, 4, 3, 3],"float64"), )
paddle.mean(Tensor([1, 2, 0, 4, 4, 3, 3],"float64"), )
paddle.mean(Tensor([1, 2, 3, 0, 4, 3, 3],"float64"), )
paddle.mean(Tensor([1, 2, 3, 4, 0, 3, 3],"float64"), )
paddle.mean(Tensor([1, 2, 3, 4, 4, 0, 3],"float64"), )
paddle.mean(Tensor([1, 2, 3, 4, 4, 3, 0],"float64"), )
paddle.mean(Tensor([0, 2, 3, 4, 5, 6],"float16"), )
paddle.mean(Tensor([1, 0, 3, 4, 5, 6],"float16"), )
paddle.mean(Tensor([1, 2, 0, 4, 5, 6],"float16"), )
paddle.mean(Tensor([1, 2, 3, 0, 5, 6],"float16"), )
paddle.mean(Tensor([1, 2, 3, 4, 0, 6],"float16"), )
paddle.mean(Tensor([1, 2, 3, 4, 5, 0],"float16"), )
paddle.mean(Tensor([0, 2, 3, 4, 5, 6],"float64"), )
paddle.mean(Tensor([1, 0, 3, 4, 5, 6],"float64"), )
paddle.mean(Tensor([1, 2, 0, 4, 5, 6],"float64"), )
paddle.mean(Tensor([1, 2, 3, 0, 5, 6],"float64"), )
paddle.mean(Tensor([1, 2, 3, 4, 0, 6],"float64"), )
paddle.mean(Tensor([1, 2, 3, 4, 5, 0],"float64"), )
paddle.mean(Tensor([0, 2, 6, 6],"float32"), )
paddle.mean(Tensor([1, 0, 6, 6],"float32"), )
paddle.mean(Tensor([1, 2, 0, 6],"float32"), )
paddle.mean(Tensor([1, 2, 6, 0],"float32"), )
paddle.mean(Tensor([0, 2],"float64"), )
paddle.mean(Tensor([0, 200, 3],"float16"), )
paddle.mean(Tensor([1, 0, 3],"float16"), )
paddle.mean(Tensor([1, 200, 0],"float16"), )
paddle.mean(Tensor([0, 200, 3],"float64"), )
paddle.mean(Tensor([1, 0, 3],"float64"), )
paddle.mean(Tensor([1, 200, 0],"float64"), )
paddle.mean(Tensor([0, 28, 28],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 0, 28],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 28, 0],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([0, 3, 1, 1, 1],"float16"), )
paddle.mean(Tensor([1, 0, 1, 1, 1],"float16"), )
paddle.mean(Tensor([1, 3, 0, 1, 1],"float16"), )
paddle.mean(Tensor([1, 3, 1, 0, 1],"float16"), )
paddle.mean(Tensor([1, 3, 1, 1, 0],"float16"), )
paddle.mean(Tensor([0, 3, 1, 1, 1],"float64"), )
paddle.mean(Tensor([1, 0, 1, 1, 1],"float64"), )
paddle.mean(Tensor([1, 3, 0, 1, 1],"float64"), )
paddle.mean(Tensor([1, 3, 1, 0, 1],"float64"), )
paddle.mean(Tensor([1, 3, 1, 1, 0],"float64"), )
paddle.mean(Tensor([0, 3, 100],"float16"), )
paddle.mean(Tensor([1, 3, 0],"float16"), )
paddle.mean(Tensor([0, 3, 100],"float64"), )
paddle.mean(Tensor([1, 0, 100],"float64"), )
paddle.mean(Tensor([1, 3, 0],"float64"), )
paddle.mean(Tensor([0, 3, 2, 2, 3],"float64"), )
paddle.mean(Tensor([1, 0, 2, 2, 3],"float64"), )
paddle.mean(Tensor([1, 3, 0, 2, 3],"float64"), )
paddle.mean(Tensor([1, 3, 2, 0, 3],"float64"), )
paddle.mean(Tensor([1, 3, 2, 2, 0],"float64"), )
paddle.mean(Tensor([0, 3, 2, 6],"float64"), )
paddle.mean(Tensor([1, 0, 2, 6],"float64"), )
paddle.mean(Tensor([1, 3, 0, 6],"float64"), )
paddle.mean(Tensor([1, 3, 2, 0],"float64"), )
paddle.mean(Tensor([0, 3, 256, 256],"float32"), )
paddle.mean(Tensor([1, 0, 256, 256],"float32"), )
paddle.mean(Tensor([1, 3, 0, 256],"float32"), )
paddle.mean(Tensor([1, 3, 256, 0],"float32"), )
paddle.mean(Tensor([0, 3, 3, 3, 3],"float64"), )
paddle.mean(Tensor([1, 0, 3, 3, 3],"float64"), )
paddle.mean(Tensor([1, 3, 0, 3, 3],"float64"), )
paddle.mean(Tensor([1, 3, 3, 0, 3],"float64"), )
paddle.mean(Tensor([1, 3, 3, 3, 0],"float64"), )
paddle.mean(Tensor([0, 3, 3, 5],"float32"), )
paddle.mean(Tensor([1, 0, 3, 5],"float32"), )
paddle.mean(Tensor([1, 3, 0, 5],"float32"), )
paddle.mean(Tensor([1, 3, 3, 0],"float32"), )
paddle.mean(Tensor([0, 3, 32, 32],"float32"), )
paddle.mean(Tensor([1, 0, 32, 32],"float32"), )
paddle.mean(Tensor([1, 3, 0, 32],"float32"), )
paddle.mean(Tensor([1, 3, 32, 0],"float32"), )
paddle.mean(Tensor([0, 3, 4, 1, 1],"float64"), )
paddle.mean(Tensor([1, 0, 4, 1, 1],"float64"), )
paddle.mean(Tensor([1, 3, 4, 0, 1],"float64"), )
paddle.mean(Tensor([1, 3, 4, 1, 0],"float64"), )
paddle.mean(Tensor([0, 3, 4, 2, 2],"float64"), )
paddle.mean(Tensor([1, 0, 4, 2, 2],"float64"), )
paddle.mean(Tensor([1, 3, 0, 2, 2],"float64"), )
paddle.mean(Tensor([1, 3, 4, 0, 2],"float64"), )
paddle.mean(Tensor([1, 3, 4, 2, 0],"float64"), )
paddle.mean(Tensor([0, 3, 5, 5, 5],"float16"), )
paddle.mean(Tensor([1, 0, 5, 5, 5],"float16"), )
paddle.mean(Tensor([1, 3, 0, 5, 5],"float16"), )
paddle.mean(Tensor([1, 3, 5, 0, 5],"float16"), )
paddle.mean(Tensor([1, 3, 5, 5, 0],"float16"), )
paddle.mean(Tensor([0, 3, 5, 5, 5],"float64"), )
paddle.mean(Tensor([1, 0, 5, 5, 5],"float64"), )
paddle.mean(Tensor([1, 3, 0, 5, 5],"float64"), )
paddle.mean(Tensor([1, 3, 5, 0, 5],"float64"), )
paddle.mean(Tensor([1, 3, 5, 5, 0],"float64"), )
paddle.mean(Tensor([0, 3, 50],"float16"), )
paddle.mean(Tensor([1, 0, 50],"float16"), )
paddle.mean(Tensor([0, 3, 50],"float64"), )
paddle.mean(Tensor([1, 0, 50],"float64"), )
paddle.mean(Tensor([0, 3, 6, 3, 3],"float16"), )
paddle.mean(Tensor([1, 0, 6, 3, 3],"float16"), )
paddle.mean(Tensor([1, 3, 0, 3, 3],"float16"), )
paddle.mean(Tensor([1, 3, 6, 0, 3],"float16"), )
paddle.mean(Tensor([1, 3, 6, 3, 0],"float16"), )
paddle.mean(Tensor([0, 3, 6, 3, 3],"float64"), )
paddle.mean(Tensor([1, 0, 6, 3, 3],"float64"), )
paddle.mean(Tensor([1, 3, 6, 0, 3],"float64"), )
paddle.mean(Tensor([1, 3, 6, 3, 0],"float64"), )
paddle.mean(Tensor([0, 3, 6, 3, 4],"float64"), )
paddle.mean(Tensor([1, 0, 6, 3, 4],"float64"), )
paddle.mean(Tensor([1, 3, 0, 3, 4],"float64"), )
paddle.mean(Tensor([1, 3, 6, 0, 4],"float64"), )
paddle.mean(Tensor([0, 3, 6, 8, 3],"float16"), )
paddle.mean(Tensor([1, 0, 6, 8, 3],"float16"), )
paddle.mean(Tensor([1, 3, 0, 8, 3],"float16"), )
paddle.mean(Tensor([1, 3, 6, 8, 0],"float16"), )
paddle.mean(Tensor([0, 3, 6, 8, 3],"float64"), )
paddle.mean(Tensor([1, 0, 6, 8, 3],"float64"), )
paddle.mean(Tensor([1, 3, 0, 8, 3],"float64"), )
paddle.mean(Tensor([1, 3, 6, 8, 0],"float64"), )
paddle.mean(Tensor([0, 3, 6, 8, 4],"float64"), )
paddle.mean(Tensor([1, 0, 6, 8, 4],"float64"), )
paddle.mean(Tensor([1, 3, 0, 8, 4],"float64"), )
paddle.mean(Tensor([0, 3, 7, 7, 7],"float64"), )
paddle.mean(Tensor([1, 0, 7, 7, 7],"float64"), )
paddle.mean(Tensor([1, 3, 0, 7, 7],"float64"), )
paddle.mean(Tensor([1, 3, 7, 0, 7],"float64"), )
paddle.mean(Tensor([1, 3, 7, 7, 0],"float64"), )
paddle.mean(Tensor([0, 3, 7, 9, 11],"float64"), )
paddle.mean(Tensor([1, 0, 7, 9, 11],"float64"), )
paddle.mean(Tensor([1, 3, 0, 9, 11],"float64"), )
paddle.mean(Tensor([1, 3, 7, 0, 11],"float64"), )
paddle.mean(Tensor([1, 3, 7, 9, 0],"float64"), )
paddle.mean(Tensor([0, 3, 8, 10, 12],"float64"), )
paddle.mean(Tensor([1, 3, 0, 10, 12],"float64"), )
paddle.mean(Tensor([1, 3, 8, 0, 12],"float64"), )
paddle.mean(Tensor([1, 3, 8, 10, 0],"float64"), )
paddle.mean(Tensor([0, 3, 8, 3, 2],"float64"), )
paddle.mean(Tensor([1, 0, 8, 3, 2],"float64"), )
paddle.mean(Tensor([1, 3, 0, 3, 2],"float64"), )
paddle.mean(Tensor([1, 3, 8, 0, 2],"float64"), )
paddle.mean(Tensor([1, 3, 8, 3, 0],"float64"), )
paddle.mean(Tensor([0, 3, 8, 7, 6],"float16"), )
paddle.mean(Tensor([1, 0, 8, 7, 6],"float16"), )
paddle.mean(Tensor([1, 3, 0, 7, 6],"float16"), )
paddle.mean(Tensor([1, 3, 8, 0, 6],"float16"), )
paddle.mean(Tensor([1, 3, 8, 7, 0],"float16"), )
paddle.mean(Tensor([0, 3, 8, 7, 6],"float64"), )
paddle.mean(Tensor([1, 0, 8, 7, 6],"float64"), )
paddle.mean(Tensor([1, 3, 0, 7, 6],"float64"), )
paddle.mean(Tensor([1, 3, 8, 0, 6],"float64"), )
paddle.mean(Tensor([1, 3, 8, 7, 0],"float64"), )
paddle.mean(Tensor([0, 4, 3, 2, 100],"float16"), )
paddle.mean(Tensor([1, 0, 3, 2, 100],"float16"), )
paddle.mean(Tensor([1, 4, 0, 2, 100],"float16"), )
paddle.mean(Tensor([1, 4, 3, 0, 100],"float16"), )
paddle.mean(Tensor([1, 4, 3, 2, 0],"float16"), )
paddle.mean(Tensor([0, 4, 32, 32],"float16"), )
paddle.mean(Tensor([1, 0, 32, 32],"float16"), )
paddle.mean(Tensor([1, 4, 0, 32],"float16"), )
paddle.mean(Tensor([1, 4, 32, 0],"float16"), )
paddle.mean(Tensor([0, 4, 4, 100],"float16"), )
paddle.mean(Tensor([1, 0, 4, 100],"float16"), )
paddle.mean(Tensor([1, 4, 0, 100],"float16"), )
paddle.mean(Tensor([1, 4, 4, 0],"float16"), )
paddle.mean(Tensor([0, 4, 4, 8],"float64"), )
paddle.mean(Tensor([1, 0, 4, 8],"float64"), )
paddle.mean(Tensor([1, 4, 0, 8],"float64"), )
paddle.mean(Tensor([1, 4, 4, 0],"float64"), )
paddle.mean(Tensor([0, 4],"float16"), )
paddle.mean(Tensor([1, 0],"float16"), )
paddle.mean(Tensor([0, 5, 2, 1, 3],"float64"), )
paddle.mean(Tensor([1, 0, 2, 1, 3],"float64"), )
paddle.mean(Tensor([1, 5, 0, 1, 3],"float64"), )
paddle.mean(Tensor([1, 5, 2, 0, 3],"float64"), )
paddle.mean(Tensor([1, 5, 2, 1, 0],"float64"), )
paddle.mean(Tensor([0, 5, 2, 2, 7],"float64"), )
paddle.mean(Tensor([1, 0, 2, 2, 7],"float64"), )
paddle.mean(Tensor([1, 5, 0, 2, 7],"float64"), )
paddle.mean(Tensor([1, 5, 2, 0, 7],"float64"), )
paddle.mean(Tensor([1, 5, 2, 2, 0],"float64"), )
paddle.mean(Tensor([0, 5, 2],"float64"), )
paddle.mean(Tensor([1, 0, 2],"float64"), )
paddle.mean(Tensor([1, 5, 0],"float64"), )
paddle.mean(Tensor([0, 5, 5, 5, 3],"float64"), )
paddle.mean(Tensor([1, 0, 5, 5, 3],"float64"), )
paddle.mean(Tensor([1, 5, 0, 5, 3],"float64"), )
paddle.mean(Tensor([1, 5, 5, 0, 3],"float64"), )
paddle.mean(Tensor([1, 5, 5, 5, 0],"float64"), )
paddle.mean(Tensor([0, 5, 5],"float64"), )
paddle.mean(Tensor([1, 0, 5],"float64"), )
paddle.mean(Tensor([0, 5],"float16"), )
paddle.mean(Tensor([0, 50, 3],"float64"), )
paddle.mean(Tensor([1, 50, 0],"float64"), )
paddle.mean(Tensor([0, 6, 7, 4, 3],"float64"), )
paddle.mean(Tensor([1, 0, 7, 4, 3],"float64"), )
paddle.mean(Tensor([1, 6, 0, 4, 3],"float64"), )
paddle.mean(Tensor([1, 6, 7, 0, 3],"float64"), )
paddle.mean(Tensor([1, 6, 7, 4, 0],"float64"), )
paddle.mean(Tensor([0, 6, 7, 5, 3],"float64"), )
paddle.mean(Tensor([1, 0, 7, 5, 3],"float64"), )
paddle.mean(Tensor([1, 6, 0, 5, 3],"float64"), )
paddle.mean(Tensor([1, 6, 7, 5, 0],"float64"), )
paddle.mean(Tensor([0, 64, 64, 64],"float32"), )
paddle.mean(Tensor([1, 0, 64, 64],"float32"), )
paddle.mean(Tensor([1, 64, 0, 64],"float32"), )
paddle.mean(Tensor([1, 64, 64, 0],"float32"), )
paddle.mean(Tensor([0, 7, 3, 2, 3],"float64"), )
paddle.mean(Tensor([1, 0, 3, 2, 3],"float64"), )
paddle.mean(Tensor([1, 7, 0, 2, 3],"float64"), )
paddle.mean(Tensor([1, 7, 3, 0, 3],"float64"), )
paddle.mean(Tensor([1, 7, 3, 2, 0],"float64"), )
paddle.mean(Tensor([0, 7, 3, 3, 3],"float64"), )
paddle.mean(Tensor([1, 7, 0, 3, 3],"float64"), )
paddle.mean(Tensor([1, 7, 3, 3, 0],"float64"), )
paddle.mean(Tensor([0, 7, 7, 7, 3],"float64"), )
paddle.mean(Tensor([1, 0, 7, 7, 3],"float64"), )
paddle.mean(Tensor([1, 7, 0, 7, 3],"float64"), )
paddle.mean(Tensor([1, 7, 7, 0, 3],"float64"), )
paddle.mean(Tensor([1, 7, 7, 7, 0],"float64"), )
paddle.mean(Tensor([0, 7, 8, 6, 3],"float64"), )
paddle.mean(Tensor([1, 0, 8, 6, 3],"float64"), )
paddle.mean(Tensor([1, 7, 0, 6, 3],"float64"), )
paddle.mean(Tensor([1, 7, 8, 0, 3],"float64"), )
paddle.mean(Tensor([1, 7, 8, 6, 0],"float64"), )
paddle.mean(Tensor([0, 8, 2],"float64"), )
paddle.mean(Tensor([1, 8, 0],"float64"), )
paddle.mean(Tensor([0, 8, 4, 3],"float64"), )
paddle.mean(Tensor([1, 0, 4, 3],"float64"), )
paddle.mean(Tensor([1, 8, 0, 3],"float64"), )
paddle.mean(Tensor([1, 8, 4, 0],"float64"), )
paddle.mean(Tensor([0, 8, 4, 4],"float64"), )
paddle.mean(Tensor([1, 0, 4, 4],"float64"), )
paddle.mean(Tensor([1, 8, 0, 4],"float64"), )
paddle.mean(Tensor([0, 8, 5, 5],"float64"), )
paddle.mean(Tensor([1, 0, 5, 5],"float64"), )
paddle.mean(Tensor([1, 8, 0, 5],"float64"), )
paddle.mean(Tensor([1, 8, 5, 0],"float64"), )
paddle.mean(Tensor([0, 8, 6, 6],"float64"), )
paddle.mean(Tensor([1, 0, 6, 6],"float64"), )
paddle.mean(Tensor([1, 8, 0, 6],"float64"), )
paddle.mean(Tensor([1, 8, 6, 0],"float64"), )
paddle.mean(Tensor([0, 8, 8],"float32"), )
paddle.mean(Tensor([1, 0, 8],"float32"), )
paddle.mean(Tensor([1, 8, 0],"float32"), )
paddle.mean(Tensor([0, 8, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 0, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 8, 0],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([0],"float32"), )
paddle.mean(Tensor([0],"float32"), name=None, )
paddle.mean(Tensor([0],"float64"), )
paddle.mean(Tensor([10, 0],"float32"), )
paddle.mean(Tensor([0, 10, 10],"float16"), )
paddle.mean(Tensor([10, 0, 10],"float16"), )
paddle.mean(Tensor([10, 10, 0],"float16"), )
paddle.mean(Tensor([0, 10, 10],"float32"), )
paddle.mean(Tensor([10, 0, 10],"float32"), )
paddle.mean(Tensor([10, 10, 0],"float32"), )
paddle.mean(Tensor([0, 10, 10],"float64"), )
paddle.mean(Tensor([10, 0, 10],"float64"), )
paddle.mean(Tensor([10, 10, 0],"float64"), )
paddle.mean(Tensor([0, 10, 20],"float64"), )
paddle.mean(Tensor([10, 0, 20],"float64"), )
paddle.mean(Tensor([0, 10, 5],"float64"), name=None, )
paddle.mean(Tensor([10, 0, 5],"float64"), name=None, )
paddle.mean(Tensor([10, 10, 0],"float64"), name=None, )
paddle.mean(Tensor([0, 10],"complex128"), )
paddle.mean(Tensor([10, 0],"complex128"), )
paddle.mean(Tensor([0, 10],"complex64"), )
paddle.mean(Tensor([10, 0],"complex64"), )
paddle.mean(Tensor([0, 10],"float16"), )
paddle.mean(Tensor([10, 0],"float16"), )
paddle.mean(Tensor([0, 10],"float32"), )
paddle.mean(Tensor([0, 10],"float32"), name=None, )
paddle.mean(Tensor([10, 0],"float32"), name=None, )
paddle.mean(Tensor([0, 10],"float64"), )
paddle.mean(Tensor([10, 0],"float64"), )
paddle.mean(Tensor([0, 12],"float16"), )
paddle.mean(Tensor([0, 12],"float32"), )
paddle.mean(Tensor([0, 12],"float64"), )
paddle.mean(Tensor([0, 16, 4, 4],"float32"), )
paddle.mean(Tensor([10, 0, 4, 4],"float32"), )
paddle.mean(Tensor([10, 16, 0, 4],"float32"), )
paddle.mean(Tensor([10, 16, 4, 0],"float32"), )
paddle.mean(Tensor([0, 16],"float32"), )
paddle.mean(Tensor([0, 2, 3, 2],"float32"), )
paddle.mean(Tensor([10, 0, 3, 2],"float32"), )
paddle.mean(Tensor([10, 2, 0, 2],"float32"), )
paddle.mean(Tensor([10, 2, 3, 0],"float32"), )
paddle.mean(Tensor([0, 2, 30, 30],"float32"), )
paddle.mean(Tensor([10, 0, 30, 30],"float32"), )
paddle.mean(Tensor([10, 2, 0, 30],"float32"), )
paddle.mean(Tensor([10, 2, 30, 0],"float32"), )
paddle.mean(Tensor([0, 2, 4, 1],"float64"), )
paddle.mean(Tensor([10, 0, 4, 1],"float64"), )
paddle.mean(Tensor([10, 2, 0, 1],"float64"), )
paddle.mean(Tensor([10, 2, 4, 0],"float64"), )
paddle.mean(Tensor([0, 2, 4],"float64"), )
paddle.mean(Tensor([10, 0, 4],"float64"), )
paddle.mean(Tensor([10, 2, 0],"float64"), )
paddle.mean(Tensor([0, 2, 5],"float32"), )
paddle.mean(Tensor([10, 0, 5],"float32"), )
paddle.mean(Tensor([10, 2, 0],"float32"), )
paddle.mean(Tensor([0, 2],"bfloat16"), )
paddle.mean(Tensor([10, 0],"bfloat16"), )
paddle.mean(Tensor([0, 2],"float16"), )
paddle.mean(Tensor([0, 2],"float32"), )
paddle.mean(Tensor([0, 2],"float32"), name=None, )
paddle.mean(Tensor([0, 20],"float64"), )
paddle.mean(Tensor([0, 3, 10],"float64"), )
paddle.mean(Tensor([10, 3, 0],"float64"), )
paddle.mean(Tensor([0, 3, 3],"float64"), )
paddle.mean(Tensor([10, 0, 3],"float64"), )
paddle.mean(Tensor([10, 0, 32, 32],"float32"), )
paddle.mean(Tensor([10, 3, 0, 32],"float32"), )
paddle.mean(Tensor([10, 3, 32, 0],"float32"), )
paddle.mean(Tensor([0, 3, 5],"float64"), )
paddle.mean(Tensor([10, 0, 5],"float64"), )
paddle.mean(Tensor([0, 3, 6],"float64"), )
paddle.mean(Tensor([10, 0, 6],"float64"), )
paddle.mean(Tensor([0, 3],"float16"), )
paddle.mean(Tensor([0, 3],"float64"), )
paddle.mean(Tensor([0, 5, 12],"float64"), )
paddle.mean(Tensor([10, 0, 12],"float64"), )
paddle.mean(Tensor([10, 5, 0],"float64"), )
paddle.mean(Tensor([0, 5],"float32"), )
paddle.mean(Tensor([0, 50],"float16"), )
paddle.mean(Tensor([0, 50],"float32"), )
paddle.mean(Tensor([0, 6, 3],"float64"), )
paddle.mean(Tensor([10, 6, 0],"float64"), )
paddle.mean(Tensor([0, 64],"complex128"), )
paddle.mean(Tensor([0, 64],"complex64"), )
paddle.mean(Tensor([0, 64],"float16"), )
paddle.mean(Tensor([0, 64],"float64"), )
paddle.mean(Tensor([0, 8, 5],"float64"), )
paddle.mean(Tensor([10, 8, 0],"float64"), )
paddle.mean(Tensor([0, 1, 1],"float64"), )
paddle.mean(Tensor([100, 0, 1],"float64"), )
paddle.mean(Tensor([100, 1, 0],"float64"), )
paddle.mean(Tensor([0, 1],"float16"), )
paddle.mean(Tensor([100, 0],"float16"), )
paddle.mean(Tensor([100, 0],"float32"), )
paddle.mean(Tensor([100, 0],"float64"), )
paddle.mean(Tensor([0, 100],"float16"), )
paddle.mean(Tensor([0, 100],"float32"), )
paddle.mean(Tensor([0, 200],"float32"), )
paddle.mean(Tensor([0, 200],"float64"), )
paddle.mean(Tensor([0, 300],"complex128"), )
paddle.mean(Tensor([100, 0],"complex128"), )
paddle.mean(Tensor([0, 300],"complex64"), )
paddle.mean(Tensor([100, 0],"complex64"), )
paddle.mean(Tensor([0, 300],"float16"), )
paddle.mean(Tensor([0, 300],"float64"), )
paddle.mean(Tensor([0],"float16"), )
paddle.mean(Tensor([101, 0],"float16"), )
paddle.mean(Tensor([101, 0],"float64"), )
paddle.mean(Tensor([0, 11],"float64"), )
paddle.mean(Tensor([11, 0],"float64"), )
paddle.mean(Tensor([0, 17],"float32"), )
paddle.mean(Tensor([11, 0],"float32"), )
paddle.mean(Tensor([0, 1, 10, 1],"float64"), )
paddle.mean(Tensor([12, 0, 10, 1],"float64"), )
paddle.mean(Tensor([12, 1, 0, 1],"float64"), )
paddle.mean(Tensor([12, 1, 10, 0],"float64"), )
paddle.mean(Tensor([12, 0],"complex128"), )
paddle.mean(Tensor([12, 0],"complex64"), )
paddle.mean(Tensor([12, 0],"float16"), )
paddle.mean(Tensor([12, 0],"float32"), )
paddle.mean(Tensor([12, 0],"float64"), )
paddle.mean(Tensor([0, 14],"complex128"), )
paddle.mean(Tensor([0, 14],"complex64"), )
paddle.mean(Tensor([0, 14],"float16"), )
paddle.mean(Tensor([0, 18],"complex128"), )
paddle.mean(Tensor([0, 26],"float64"), )
paddle.mean(Tensor([12, 0, 2],"float64"), )
paddle.mean(Tensor([12, 5, 0],"float64"), )
paddle.mean(Tensor([0, 5, 4],"float64"), )
paddle.mean(Tensor([12, 0, 4],"float64"), )
paddle.mean(Tensor([12, 8, 0],"float64"), )
paddle.mean(Tensor([0, 8, 4],"float64"), )
paddle.mean(Tensor([12, 0, 8],"float32"), )
paddle.mean(Tensor([12, 8, 0],"float32"), )
paddle.mean(Tensor([0, 8],"float64"), )
paddle.mean(Tensor([0, 84],"float32"), axis=0, )
paddle.mean(Tensor([120, 0],"float32"), axis=0, )
paddle.mean(Tensor([0, 240],"float32"), )
paddle.mean(Tensor([124, 0],"float32"), )
paddle.mean(Tensor([1242, 0],"float32"), )
paddle.mean(Tensor([128, 0],"float32"), )
paddle.mean(Tensor([0, 64, 64],"float16"), )
paddle.mean(Tensor([128, 0, 64],"float16"), )
paddle.mean(Tensor([128, 64, 0],"float16"), )
paddle.mean(Tensor([0, 17],"float64"), )
paddle.mean(Tensor([13, 0],"float64"), )
paddle.mean(Tensor([0, 170],"float64"), )
paddle.mean(Tensor([14, 0],"float64"), )
paddle.mean(Tensor([0, 45],"float64"), )
paddle.mean(Tensor([15, 0, 10],"float64"), )
paddle.mean(Tensor([15, 10, 0],"float64"), )
paddle.mean(Tensor([0, 15],"float64"), )
paddle.mean(Tensor([15, 0],"float64"), )
paddle.mean(Tensor([0, 20, 5, 5],"float32"), )
paddle.mean(Tensor([15, 0, 5, 5],"float32"), )
paddle.mean(Tensor([15, 20, 0, 5],"float32"), )
paddle.mean(Tensor([15, 20, 5, 0],"float32"), )
paddle.mean(Tensor([15, 0, 3],"float64"), )
paddle.mean(Tensor([15, 3, 0],"float64"), )
paddle.mean(Tensor([0, 5],"float64"), )
paddle.mean(Tensor([0, 1, 20],"float32"), )
paddle.mean(Tensor([16, 0, 20],"float32"), )
paddle.mean(Tensor([16, 1, 0],"float32"), )
paddle.mean(Tensor([16, 0],"float64"), )
paddle.mean(Tensor([0, 150],"float32"), axis=1, )
paddle.mean(Tensor([16, 0],"float32"), axis=1, )
paddle.mean(Tensor([0, 20],"float32"), )
paddle.mean(Tensor([16, 0],"float32"), )
paddle.mean(Tensor([0, 256],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([16, 0],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([0, 256],"float64"), axis=-1, keepdim=True, )
paddle.mean(Tensor([16, 0],"float64"), axis=-1, keepdim=True, )
paddle.mean(Tensor([0, 3],"float32"), )
paddle.mean(Tensor([0, 6],"float64"), )
paddle.mean(Tensor([0, 5, 7, 2],"float32"), )
paddle.mean(Tensor([17, 0, 7, 2],"float32"), )
paddle.mean(Tensor([17, 5, 0, 2],"float32"), )
paddle.mean(Tensor([17, 5, 7, 0],"float32"), )
paddle.mean(Tensor([0, 1, 1, 1, 1],"float16"), )
paddle.mean(Tensor([2, 0, 1, 1, 1],"float16"), )
paddle.mean(Tensor([2, 1, 0, 1, 1],"float16"), )
paddle.mean(Tensor([2, 1, 1, 0, 1],"float16"), )
paddle.mean(Tensor([2, 1, 1, 1, 0],"float16"), )
paddle.mean(Tensor([0, 1, 1, 1, 1],"float32"), )
paddle.mean(Tensor([2, 0, 1, 1, 1],"float32"), )
paddle.mean(Tensor([2, 1, 0, 1, 1],"float32"), )
paddle.mean(Tensor([2, 1, 1, 0, 1],"float32"), )
paddle.mean(Tensor([2, 1, 1, 1, 0],"float32"), )
paddle.mean(Tensor([0, 1, 1, 2],"float16"), )
paddle.mean(Tensor([2, 0, 1, 2],"float16"), )
paddle.mean(Tensor([2, 1, 0, 2],"float16"), )
paddle.mean(Tensor([2, 1, 1, 0],"float16"), )
paddle.mean(Tensor([0, 1, 1, 2],"float64"), )
paddle.mean(Tensor([2, 0, 1, 2],"float64"), )
paddle.mean(Tensor([2, 1, 0, 2],"float64"), )
paddle.mean(Tensor([2, 1, 1, 0],"float64"), )
paddle.mean(Tensor([0, 1, 1, 3],"float16"), )
paddle.mean(Tensor([2, 0, 1, 3],"float16"), )
paddle.mean(Tensor([2, 1, 0, 3],"float16"), )
paddle.mean(Tensor([0, 1, 1, 3],"float32"), )
paddle.mean(Tensor([2, 0, 1, 3],"float32"), )
paddle.mean(Tensor([2, 1, 0, 3],"float32"), )
paddle.mean(Tensor([2, 1, 1, 0],"float32"), )
paddle.mean(Tensor([0, 1, 1, 3],"float64"), )
paddle.mean(Tensor([2, 0, 1, 3],"float64"), )
paddle.mean(Tensor([2, 1, 0, 3],"float64"), )
paddle.mean(Tensor([0, 1, 2, 3],"float32"), )
paddle.mean(Tensor([2, 0, 2, 3],"float32"), )
paddle.mean(Tensor([2, 1, 2, 0],"float32"), )
paddle.mean(Tensor([0, 1, 2, 4],"float16"), )
paddle.mean(Tensor([2, 0, 2, 4],"float16"), )
paddle.mean(Tensor([2, 1, 0, 4],"float16"), )
paddle.mean(Tensor([2, 1, 2, 0],"float16"), )
paddle.mean(Tensor([0, 1, 2, 4],"float64"), )
paddle.mean(Tensor([2, 0, 2, 4],"float64"), )
paddle.mean(Tensor([2, 1, 0, 4],"float64"), )
paddle.mean(Tensor([2, 1, 2, 0],"float64"), )
paddle.mean(Tensor([0, 1, 8, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2, 0, 8, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2, 1, 0, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2, 1, 8, 0],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2, 0],"float16"), )
paddle.mean(Tensor([2, 0],"float32"), )
paddle.mean(Tensor([2, 0],"float32"), name=None, )
paddle.mean(Tensor([2, 0],"float64"), )
paddle.mean(Tensor([2, 0, 10],"float32"), )
paddle.mean(Tensor([2, 10, 0],"float32"), )
paddle.mean(Tensor([0, 10, 10],"float32"), name=None, )
paddle.mean(Tensor([2, 0, 10],"float32"), name=None, )
paddle.mean(Tensor([2, 10, 0],"float32"), name=None, )
paddle.mean(Tensor([2, 0, 10],"float64"), )
paddle.mean(Tensor([2, 10, 0],"float64"), )
paddle.mean(Tensor([0, 10, 12],"float64"), )
paddle.mean(Tensor([2, 0, 12],"float64"), )
paddle.mean(Tensor([0, 10, 4],"float32"), )
paddle.mean(Tensor([2, 0, 4],"float32"), )
paddle.mean(Tensor([0, 10, 5],"float64"), )
paddle.mean(Tensor([2, 0, 5],"float64"), )
paddle.mean(Tensor([0, 100, 3, 2, 2],"float16"), )
paddle.mean(Tensor([2, 0, 3, 2, 2],"float16"), )
paddle.mean(Tensor([2, 100, 0, 2, 2],"float16"), )
paddle.mean(Tensor([2, 100, 3, 0, 2],"float16"), )
paddle.mean(Tensor([2, 100, 3, 2, 0],"float16"), )
paddle.mean(Tensor([0, 100, 3, 2, 2],"float64"), )
paddle.mean(Tensor([2, 0, 3, 2, 2],"float64"), )
paddle.mean(Tensor([2, 100, 0, 2, 2],"float64"), )
paddle.mean(Tensor([2, 100, 3, 0, 2],"float64"), )
paddle.mean(Tensor([2, 100, 3, 2, 0],"float64"), )
paddle.mean(Tensor([0, 100, 3, 4],"float64"), )
paddle.mean(Tensor([2, 0, 3, 4],"float64"), )
paddle.mean(Tensor([2, 100, 0, 4],"float64"), )
paddle.mean(Tensor([2, 100, 3, 0],"float64"), )
paddle.mean(Tensor([0, 100, 3, 5],"float16"), )
paddle.mean(Tensor([2, 0, 3, 5],"float16"), )
paddle.mean(Tensor([2, 100, 0, 5],"float16"), )
paddle.mean(Tensor([2, 100, 3, 0],"float16"), )
paddle.mean(Tensor([0, 100, 3, 5],"float64"), )
paddle.mean(Tensor([2, 0, 3, 5],"float64"), )
paddle.mean(Tensor([2, 100, 0, 5],"float64"), )
paddle.mean(Tensor([0, 100, 3],"float16"), )
paddle.mean(Tensor([2, 0, 3],"float16"), )
paddle.mean(Tensor([2, 100, 0],"float16"), )
paddle.mean(Tensor([0, 100, 3],"float64"), )
paddle.mean(Tensor([2, 0, 3],"float64"), )
paddle.mean(Tensor([2, 100, 0],"float64"), )
paddle.mean(Tensor([0, 100, 4, 5],"float32"), )
paddle.mean(Tensor([2, 0, 4, 5],"float32"), )
paddle.mean(Tensor([2, 100, 0, 5],"float32"), )
paddle.mean(Tensor([2, 100, 4, 0],"float32"), )
paddle.mean(Tensor([0, 100, 4, 5],"float64"), )
paddle.mean(Tensor([2, 0, 4, 5],"float64"), )
paddle.mean(Tensor([2, 100, 4, 0],"float64"), )
paddle.mean(Tensor([0, 100, 4],"float32"), )
paddle.mean(Tensor([2, 100, 0],"float32"), )
paddle.mean(Tensor([0, 12, 10],"float64"), )
paddle.mean(Tensor([2, 12, 0],"float64"), )
paddle.mean(Tensor([0, 12, 12],"float64"), )
paddle.mean(Tensor([0, 12, 16],"float64"), )
paddle.mean(Tensor([2, 0, 16],"float64"), )
paddle.mean(Tensor([0, 12, 9, 6, 6],"complex128"), )
paddle.mean(Tensor([2, 0, 9, 6, 6],"complex128"), )
paddle.mean(Tensor([2, 12, 0, 6, 6],"complex128"), )
paddle.mean(Tensor([2, 12, 9, 0, 6],"complex128"), )
paddle.mean(Tensor([2, 12, 9, 6, 0],"complex128"), )
paddle.mean(Tensor([0, 12, 9, 6, 6],"complex64"), )
paddle.mean(Tensor([2, 0, 9, 6, 6],"complex64"), )
paddle.mean(Tensor([2, 12, 0, 6, 6],"complex64"), )
paddle.mean(Tensor([2, 12, 9, 0, 6],"complex64"), )
paddle.mean(Tensor([2, 12, 9, 6, 0],"complex64"), )
paddle.mean(Tensor([0, 12, 9, 6, 6],"float16"), )
paddle.mean(Tensor([2, 0, 9, 6, 6],"float16"), )
paddle.mean(Tensor([2, 12, 0, 6, 6],"float16"), )
paddle.mean(Tensor([2, 12, 9, 0, 6],"float16"), )
paddle.mean(Tensor([2, 12, 9, 6, 0],"float16"), )
paddle.mean(Tensor([0, 12, 9, 6, 6],"float64"), )
paddle.mean(Tensor([2, 0, 9, 6, 6],"float64"), )
paddle.mean(Tensor([2, 12, 0, 6, 6],"float64"), )
paddle.mean(Tensor([2, 12, 9, 0, 6],"float64"), )
paddle.mean(Tensor([2, 12, 9, 6, 0],"float64"), )
paddle.mean(Tensor([0, 2, 10],"float32"), )
paddle.mean(Tensor([2, 2, 0],"float32"), )
paddle.mean(Tensor([0, 2, 2],"float32"), )
paddle.mean(Tensor([2, 0, 2],"float32"), )
paddle.mean(Tensor([0, 2, 3, 4],"float64"), )
paddle.mean(Tensor([2, 2, 0, 4],"float64"), )
paddle.mean(Tensor([2, 2, 3, 0],"float64"), )
paddle.mean(Tensor([0, 2, 3],"float32"), )
paddle.mean(Tensor([2, 0, 3],"float32"), )
paddle.mean(Tensor([0, 2, 3],"float64"), )
paddle.mean(Tensor([2, 2, 0],"float64"), )
paddle.mean(Tensor([0, 2, 32, 8],"float64"), )
paddle.mean(Tensor([2, 0, 32, 8],"float64"), )
paddle.mean(Tensor([2, 2, 0, 8],"float64"), )
paddle.mean(Tensor([2, 2, 32, 0],"float64"), )
paddle.mean(Tensor([0, 2, 60, 30],"float64"), )
paddle.mean(Tensor([2, 0, 60, 30],"float64"), )
paddle.mean(Tensor([2, 2, 0, 30],"float64"), )
paddle.mean(Tensor([2, 2, 60, 0],"float64"), )
paddle.mean(Tensor([0, 20, 20, 3],"float16"), )
paddle.mean(Tensor([2, 0, 20, 3],"float16"), )
paddle.mean(Tensor([2, 20, 0, 3],"float16"), )
paddle.mean(Tensor([2, 20, 20, 0],"float16"), )
paddle.mean(Tensor([0, 20, 25],"float32"), )
paddle.mean(Tensor([2, 0, 25],"float32"), )
paddle.mean(Tensor([2, 20, 0],"float32"), )
paddle.mean(Tensor([0, 3, 1, 1],"float16"), )
paddle.mean(Tensor([2, 0, 1, 1],"float16"), )
paddle.mean(Tensor([2, 3, 0, 1],"float16"), )
paddle.mean(Tensor([2, 3, 1, 0],"float16"), )
paddle.mean(Tensor([0, 3, 1, 1],"float32"), )
paddle.mean(Tensor([2, 0, 1, 1],"float32"), )
paddle.mean(Tensor([2, 3, 0, 1],"float32"), )
paddle.mean(Tensor([2, 3, 1, 0],"float32"), )
paddle.mean(Tensor([0, 3, 1, 1],"float64"), )
paddle.mean(Tensor([2, 0, 1, 1],"float64"), )
paddle.mean(Tensor([2, 3, 0, 1],"float64"), )
paddle.mean(Tensor([2, 3, 1, 0],"float64"), )
paddle.mean(Tensor([0, 3, 10, 14, 18],"float32"), )
paddle.mean(Tensor([2, 0, 10, 14, 18],"float32"), )
paddle.mean(Tensor([2, 3, 0, 14, 18],"float32"), )
paddle.mean(Tensor([2, 3, 10, 0, 18],"float32"), )
paddle.mean(Tensor([2, 3, 10, 14, 0],"float32"), )
paddle.mean(Tensor([0, 3, 10, 5],"complex128"), )
paddle.mean(Tensor([2, 0, 10, 5],"complex128"), )
paddle.mean(Tensor([2, 3, 0, 5],"complex128"), )
paddle.mean(Tensor([2, 3, 10, 0],"complex128"), )
paddle.mean(Tensor([0, 3, 10, 5],"complex64"), )
paddle.mean(Tensor([2, 0, 10, 5],"complex64"), )
paddle.mean(Tensor([2, 3, 0, 5],"complex64"), )
paddle.mean(Tensor([2, 3, 10, 0],"complex64"), )
paddle.mean(Tensor([0, 3, 10, 5],"float64"), )
paddle.mean(Tensor([2, 0, 10, 5],"float64"), )
paddle.mean(Tensor([2, 3, 0, 5],"float64"), )
paddle.mean(Tensor([2, 3, 10, 0],"float64"), )
paddle.mean(Tensor([2, 0, 100],"float64"), )
paddle.mean(Tensor([2, 3, 0],"float64"), )
paddle.mean(Tensor([0, 3, 12, 12, 12],"float16"), )
paddle.mean(Tensor([2, 0, 12, 12, 12],"float16"), )
paddle.mean(Tensor([2, 3, 0, 12, 12],"float16"), )
paddle.mean(Tensor([2, 3, 12, 0, 12],"float16"), )
paddle.mean(Tensor([2, 3, 12, 12, 0],"float16"), )
paddle.mean(Tensor([0, 3, 12, 12, 12],"float32"), )
paddle.mean(Tensor([2, 0, 12, 12, 12],"float32"), )
paddle.mean(Tensor([2, 3, 0, 12, 12],"float32"), )
paddle.mean(Tensor([2, 3, 12, 0, 12],"float32"), )
paddle.mean(Tensor([2, 3, 12, 12, 0],"float32"), )
paddle.mean(Tensor([0, 3, 12, 3, 2],"complex128"), )
paddle.mean(Tensor([2, 0, 12, 3, 2],"complex128"), )
paddle.mean(Tensor([2, 3, 0, 3, 2],"complex128"), )
paddle.mean(Tensor([2, 3, 12, 0, 2],"complex128"), )
paddle.mean(Tensor([2, 3, 12, 3, 0],"complex128"), )
paddle.mean(Tensor([0, 3, 12, 3, 2],"complex64"), )
paddle.mean(Tensor([2, 0, 12, 3, 2],"complex64"), )
paddle.mean(Tensor([2, 3, 0, 3, 2],"complex64"), )
paddle.mean(Tensor([2, 3, 12, 0, 2],"complex64"), )
paddle.mean(Tensor([2, 3, 12, 3, 0],"complex64"), )
paddle.mean(Tensor([0, 3, 12, 3, 2],"float64"), )
paddle.mean(Tensor([2, 0, 12, 3, 2],"float64"), )
paddle.mean(Tensor([2, 3, 0, 3, 2],"float64"), )
paddle.mean(Tensor([2, 3, 12, 0, 2],"float64"), )
paddle.mean(Tensor([2, 3, 12, 3, 0],"float64"), )
paddle.mean(Tensor([0, 3, 13, 10, 7],"complex128"), )
paddle.mean(Tensor([2, 0, 13, 10, 7],"complex128"), )
paddle.mean(Tensor([2, 3, 0, 10, 7],"complex128"), )
paddle.mean(Tensor([2, 3, 13, 0, 7],"complex128"), )
paddle.mean(Tensor([2, 3, 13, 10, 0],"complex128"), )
paddle.mean(Tensor([0, 3, 13, 10, 7],"complex64"), )
paddle.mean(Tensor([2, 0, 13, 10, 7],"complex64"), )
paddle.mean(Tensor([2, 3, 0, 10, 7],"complex64"), )
paddle.mean(Tensor([2, 3, 13, 0, 7],"complex64"), )
paddle.mean(Tensor([2, 3, 13, 10, 0],"complex64"), )
paddle.mean(Tensor([0, 3, 13, 10, 7],"float16"), )
paddle.mean(Tensor([2, 0, 13, 10, 7],"float16"), )
paddle.mean(Tensor([2, 3, 0, 10, 7],"float16"), )
paddle.mean(Tensor([2, 3, 13, 0, 7],"float16"), )
paddle.mean(Tensor([2, 3, 13, 10, 0],"float16"), )
paddle.mean(Tensor([0, 3, 13, 10, 7],"float64"), )
paddle.mean(Tensor([2, 0, 13, 10, 7],"float64"), )
paddle.mean(Tensor([2, 3, 0, 10, 7],"float64"), )
paddle.mean(Tensor([2, 3, 13, 0, 7],"float64"), )
paddle.mean(Tensor([2, 3, 13, 10, 0],"float64"), )
paddle.mean(Tensor([0, 3, 16, 16, 8],"float32"), )
paddle.mean(Tensor([2, 0, 16, 16, 8],"float32"), )
paddle.mean(Tensor([2, 3, 0, 16, 8],"float32"), )
paddle.mean(Tensor([2, 3, 16, 0, 8],"float32"), )
paddle.mean(Tensor([2, 3, 16, 16, 0],"float32"), )
paddle.mean(Tensor([0, 3, 16, 4, 10],"float32"), )
paddle.mean(Tensor([2, 0, 16, 4, 10],"float32"), )
paddle.mean(Tensor([2, 3, 0, 4, 10],"float32"), )
paddle.mean(Tensor([2, 3, 16, 0, 10],"float32"), )
paddle.mean(Tensor([2, 3, 16, 4, 0],"float32"), )
paddle.mean(Tensor([0, 3, 2, 2, 100],"float64"), )
paddle.mean(Tensor([2, 0, 2, 2, 100],"float64"), )
paddle.mean(Tensor([2, 3, 0, 2, 100],"float64"), )
paddle.mean(Tensor([2, 3, 2, 0, 100],"float64"), )
paddle.mean(Tensor([2, 3, 2, 2, 0],"float64"), )
paddle.mean(Tensor([0, 3, 2, 2],"float32"), )
paddle.mean(Tensor([2, 0, 2, 2],"float32"), )
paddle.mean(Tensor([2, 3, 0, 2],"float32"), )
paddle.mean(Tensor([2, 3, 2, 0],"float32"), )
paddle.mean(Tensor([0, 3, 2, 2],"float64"), )
paddle.mean(Tensor([2, 0, 2, 2],"float64"), )
paddle.mean(Tensor([2, 3, 0, 2],"float64"), )
paddle.mean(Tensor([2, 3, 2, 0],"float64"), )
paddle.mean(Tensor([0, 3, 2, 3, 3],"float32"), )
paddle.mean(Tensor([2, 0, 2, 3, 3],"float32"), )
paddle.mean(Tensor([2, 3, 0, 3, 3],"float32"), )
paddle.mean(Tensor([2, 3, 2, 0, 3],"float32"), )
paddle.mean(Tensor([2, 3, 2, 3, 0],"float32"), )
paddle.mean(Tensor([2, 0, 2, 6],"float64"), )
paddle.mean(Tensor([2, 3, 0, 6],"float64"), )
paddle.mean(Tensor([0, 3, 20],"float32"), )
paddle.mean(Tensor([2, 0, 20],"float32"), )
paddle.mean(Tensor([2, 3, 0],"float32"), )
paddle.mean(Tensor([0, 3, 20],"float64"), )
paddle.mean(Tensor([2, 0, 20],"float64"), )
paddle.mean(Tensor([0, 3, 3, 3, 3],"float16"), )
paddle.mean(Tensor([2, 0, 3, 3, 3],"float16"), )
paddle.mean(Tensor([2, 3, 0, 3, 3],"float16"), )
paddle.mean(Tensor([2, 3, 3, 0, 3],"float16"), )
paddle.mean(Tensor([2, 3, 3, 3, 0],"float16"), )
paddle.mean(Tensor([0, 3, 3, 3, 3],"float32"), )
paddle.mean(Tensor([2, 0, 3, 3, 3],"float32"), )
paddle.mean(Tensor([2, 3, 3, 0, 3],"float32"), )
paddle.mean(Tensor([2, 3, 3, 3, 0],"float32"), )
paddle.mean(Tensor([0, 3, 3, 3],"float16"), )
paddle.mean(Tensor([2, 0, 3, 3],"float16"), )
paddle.mean(Tensor([2, 3, 0, 3],"float16"), )
paddle.mean(Tensor([2, 3, 3, 0],"float16"), )
paddle.mean(Tensor([0, 3, 3, 3],"float64"), )
paddle.mean(Tensor([2, 0, 3, 3],"float64"), )
paddle.mean(Tensor([2, 3, 0, 3],"float64"), )
paddle.mean(Tensor([2, 3, 3, 0],"float64"), )
paddle.mean(Tensor([0, 3, 30, 20, 25],"float32"), )
paddle.mean(Tensor([2, 0, 30, 20, 25],"float32"), )
paddle.mean(Tensor([2, 3, 0, 20, 25],"float32"), )
paddle.mean(Tensor([2, 3, 30, 0, 25],"float32"), )
paddle.mean(Tensor([2, 3, 30, 20, 0],"float32"), )
paddle.mean(Tensor([2, 0, 32, 32],"float32"), )
paddle.mean(Tensor([2, 3, 0, 32],"float32"), )
paddle.mean(Tensor([2, 3, 32, 0],"float32"), )
paddle.mean(Tensor([0, 3, 32, 64],"float64"), )
paddle.mean(Tensor([2, 0, 32, 64],"float64"), )
paddle.mean(Tensor([2, 3, 0, 64],"float64"), )
paddle.mean(Tensor([2, 3, 32, 0],"float64"), )
paddle.mean(Tensor([0, 3, 4, 1],"float64"), )
paddle.mean(Tensor([2, 0, 4, 1],"float64"), )
paddle.mean(Tensor([2, 3, 4, 0],"float64"), )
paddle.mean(Tensor([0, 3, 4, 3],"float64"), )
paddle.mean(Tensor([2, 0, 4, 3],"float64"), )
paddle.mean(Tensor([0, 3, 4, 5, 2],"float64"), )
paddle.mean(Tensor([2, 0, 4, 5, 2],"float64"), )
paddle.mean(Tensor([2, 3, 0, 5, 2],"float64"), )
paddle.mean(Tensor([2, 3, 4, 0, 2],"float64"), )
paddle.mean(Tensor([2, 3, 4, 5, 0],"float64"), )
paddle.mean(Tensor([0, 3, 4, 5, 6],"float64"), )
paddle.mean(Tensor([2, 0, 4, 5, 6],"float64"), )
paddle.mean(Tensor([2, 3, 0, 5, 6],"float64"), )
paddle.mean(Tensor([2, 3, 4, 0, 6],"float64"), )
paddle.mean(Tensor([0, 3, 4, 5],"float16"), )
paddle.mean(Tensor([2, 0, 4, 5],"float16"), )
paddle.mean(Tensor([2, 3, 0, 5],"float16"), )
paddle.mean(Tensor([2, 3, 4, 0],"float16"), )
paddle.mean(Tensor([0, 3, 4, 5],"float64"), )
paddle.mean(Tensor([0, 3, 4, 50],"float64"), )
paddle.mean(Tensor([2, 0, 4, 50],"float64"), )
paddle.mean(Tensor([2, 3, 0, 50],"float64"), )
paddle.mean(Tensor([0, 3, 4],"float16"), )
paddle.mean(Tensor([2, 0, 4],"float16"), )
paddle.mean(Tensor([2, 3, 0],"float16"), )
paddle.mean(Tensor([0, 3, 4],"float64"), )
paddle.mean(Tensor([2, 0, 4],"float64"), )
paddle.mean(Tensor([0, 3, 5, 100],"float64"), )
paddle.mean(Tensor([2, 0, 5, 100],"float64"), )
paddle.mean(Tensor([2, 3, 0, 100],"float64"), )
paddle.mean(Tensor([2, 3, 5, 0],"float64"), )
paddle.mean(Tensor([0, 3, 5, 5],"float16"), )
paddle.mean(Tensor([2, 0, 5, 5],"float16"), )
paddle.mean(Tensor([2, 3, 5, 0],"float16"), )
paddle.mean(Tensor([0, 3, 5, 5],"float32"), )
paddle.mean(Tensor([2, 0, 5, 5],"float32"), )
paddle.mean(Tensor([2, 3, 0, 5],"float32"), )
paddle.mean(Tensor([2, 3, 5, 0],"float32"), )
paddle.mean(Tensor([0, 3, 5, 5],"float64"), )
paddle.mean(Tensor([2, 0, 5, 5],"float64"), )
paddle.mean(Tensor([0, 3, 5, 7, 9],"float32"), )
paddle.mean(Tensor([2, 0, 5, 7, 9],"float32"), )
paddle.mean(Tensor([2, 3, 0, 7, 9],"float32"), )
paddle.mean(Tensor([2, 3, 5, 0, 9],"float32"), )
paddle.mean(Tensor([2, 3, 5, 7, 0],"float32"), )
paddle.mean(Tensor([0, 3, 5, 7, 9],"float64"), )
paddle.mean(Tensor([2, 0, 5, 7, 9],"float64"), )
paddle.mean(Tensor([2, 3, 0, 7, 9],"float64"), )
paddle.mean(Tensor([2, 3, 5, 0, 9],"float64"), )
paddle.mean(Tensor([2, 3, 5, 7, 0],"float64"), )
paddle.mean(Tensor([0, 3, 7, 10, 13],"float32"), )
paddle.mean(Tensor([2, 0, 7, 10, 13],"float32"), )
paddle.mean(Tensor([2, 3, 0, 10, 13],"float32"), )
paddle.mean(Tensor([2, 3, 7, 0, 13],"float32"), )
paddle.mean(Tensor([2, 3, 7, 10, 0],"float32"), )
paddle.mean(Tensor([0, 3, 7, 10, 7],"complex128"), )
paddle.mean(Tensor([2, 0, 7, 10, 7],"complex128"), )
paddle.mean(Tensor([2, 3, 7, 0, 7],"complex128"), )
paddle.mean(Tensor([2, 3, 7, 10, 0],"complex128"), )
paddle.mean(Tensor([0, 3, 7, 10, 7],"complex64"), )
paddle.mean(Tensor([2, 0, 7, 10, 7],"complex64"), )
paddle.mean(Tensor([2, 3, 7, 0, 7],"complex64"), )
paddle.mean(Tensor([2, 3, 7, 10, 0],"complex64"), )
paddle.mean(Tensor([0, 3, 7, 10, 7],"float16"), )
paddle.mean(Tensor([2, 0, 7, 10, 7],"float16"), )
paddle.mean(Tensor([2, 3, 7, 0, 7],"float16"), )
paddle.mean(Tensor([2, 3, 7, 10, 0],"float16"), )
paddle.mean(Tensor([0, 3, 7, 10, 7],"float64"), )
paddle.mean(Tensor([2, 0, 7, 10, 7],"float64"), )
paddle.mean(Tensor([2, 3, 7, 0, 7],"float64"), )
paddle.mean(Tensor([2, 3, 7, 10, 0],"float64"), )
paddle.mean(Tensor([0, 3, 7, 7],"float16"), )
paddle.mean(Tensor([2, 0, 7, 7],"float16"), )
paddle.mean(Tensor([2, 3, 0, 7],"float16"), )
paddle.mean(Tensor([2, 3, 7, 0],"float16"), )
paddle.mean(Tensor([0, 3, 7, 7],"float32"), )
paddle.mean(Tensor([2, 0, 7, 7],"float32"), )
paddle.mean(Tensor([2, 3, 0, 7],"float32"), )
paddle.mean(Tensor([2, 3, 7, 0],"float32"), )
paddle.mean(Tensor([0, 3, 7, 7],"float64"), )
paddle.mean(Tensor([2, 0, 7, 7],"float64"), )
paddle.mean(Tensor([2, 3, 0, 7],"float64"), )
paddle.mean(Tensor([2, 3, 7, 0],"float64"), )
paddle.mean(Tensor([0, 3, 8, 5],"float64"), )
paddle.mean(Tensor([2, 0, 8, 5],"float64"), )
paddle.mean(Tensor([2, 3, 8, 0],"float64"), )
paddle.mean(Tensor([0, 3, 9, 6, 7],"complex128"), )
paddle.mean(Tensor([2, 0, 9, 6, 7],"complex128"), )
paddle.mean(Tensor([2, 3, 0, 6, 7],"complex128"), )
paddle.mean(Tensor([2, 3, 9, 0, 7],"complex128"), )
paddle.mean(Tensor([2, 3, 9, 6, 0],"complex128"), )
paddle.mean(Tensor([0, 3, 9, 6, 7],"complex64"), )
paddle.mean(Tensor([2, 0, 9, 6, 7],"complex64"), )
paddle.mean(Tensor([2, 3, 0, 6, 7],"complex64"), )
paddle.mean(Tensor([2, 3, 9, 0, 7],"complex64"), )
paddle.mean(Tensor([2, 3, 9, 6, 0],"complex64"), )
paddle.mean(Tensor([0, 3, 9, 6, 7],"float16"), )
paddle.mean(Tensor([2, 0, 9, 6, 7],"float16"), )
paddle.mean(Tensor([2, 3, 0, 6, 7],"float16"), )
paddle.mean(Tensor([2, 3, 9, 0, 7],"float16"), )
paddle.mean(Tensor([2, 3, 9, 6, 0],"float16"), )
paddle.mean(Tensor([0, 3, 9, 6, 7],"float64"), )
paddle.mean(Tensor([2, 0, 9, 6, 7],"float64"), )
paddle.mean(Tensor([2, 3, 0, 6, 7],"float64"), )
paddle.mean(Tensor([2, 3, 9, 0, 7],"float64"), )
paddle.mean(Tensor([2, 3, 9, 6, 0],"float64"), )
paddle.mean(Tensor([0, 300, 2048],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([2, 0, 2048],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([2, 300, 0],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([0, 4, 14, 16],"float64"), )
paddle.mean(Tensor([2, 0, 14, 16],"float64"), )
paddle.mean(Tensor([2, 4, 0, 16],"float64"), )
paddle.mean(Tensor([2, 4, 14, 0],"float64"), )
paddle.mean(Tensor([0, 4, 2, 3, 10],"complex128"), )
paddle.mean(Tensor([2, 0, 2, 3, 10],"complex128"), )
paddle.mean(Tensor([2, 4, 0, 3, 10],"complex128"), )
paddle.mean(Tensor([2, 4, 2, 0, 10],"complex128"), )
paddle.mean(Tensor([2, 4, 2, 3, 0],"complex128"), )
paddle.mean(Tensor([0, 4, 2, 3, 10],"complex64"), )
paddle.mean(Tensor([2, 0, 2, 3, 10],"complex64"), )
paddle.mean(Tensor([2, 4, 0, 3, 10],"complex64"), )
paddle.mean(Tensor([2, 4, 2, 0, 10],"complex64"), )
paddle.mean(Tensor([2, 4, 2, 3, 0],"complex64"), )
paddle.mean(Tensor([0, 4, 2, 3, 10],"float64"), )
paddle.mean(Tensor([2, 0, 2, 3, 10],"float64"), )
paddle.mean(Tensor([2, 4, 0, 3, 10],"float64"), )
paddle.mean(Tensor([2, 4, 2, 0, 10],"float64"), )
paddle.mean(Tensor([2, 4, 2, 3, 0],"float64"), )
paddle.mean(Tensor([0, 4, 3, 3],"float64"), )
paddle.mean(Tensor([2, 4, 0, 3],"float64"), )
paddle.mean(Tensor([2, 4, 3, 0],"float64"), )
paddle.mean(Tensor([0, 4, 3, 5],"float32"), )
paddle.mean(Tensor([2, 0, 3, 5],"float32"), )
paddle.mean(Tensor([2, 4, 0, 5],"float32"), )
paddle.mean(Tensor([2, 4, 3, 0],"float32"), )
paddle.mean(Tensor([0, 4, 4, 4],"float32"), )
paddle.mean(Tensor([2, 0, 4, 4],"float32"), )
paddle.mean(Tensor([2, 4, 0, 4],"float32"), )
paddle.mean(Tensor([2, 4, 4, 0],"float32"), )
paddle.mean(Tensor([0, 4, 4, 4],"float64"), )
paddle.mean(Tensor([2, 0, 4, 4],"float64"), )
paddle.mean(Tensor([2, 4, 0, 4],"float64"), )
paddle.mean(Tensor([2, 4, 4, 0],"float64"), )
paddle.mean(Tensor([0, 4, 4, 9],"float64"), )
paddle.mean(Tensor([2, 0, 4, 9],"float64"), )
paddle.mean(Tensor([2, 4, 0, 9],"float64"), )
paddle.mean(Tensor([0, 4, 4],"float16"), )
paddle.mean(Tensor([2, 4, 0],"float16"), )
paddle.mean(Tensor([0, 4, 4],"float64"), )
paddle.mean(Tensor([2, 4, 0],"float64"), )
paddle.mean(Tensor([0, 4, 5, 6],"float64"), )
paddle.mean(Tensor([2, 0, 5, 6],"float64"), )
paddle.mean(Tensor([2, 4, 0, 6],"float64"), )
paddle.mean(Tensor([2, 4, 5, 0],"float64"), )
paddle.mean(Tensor([0, 4, 5],"float16"), )
paddle.mean(Tensor([2, 0, 5],"float16"), )
paddle.mean(Tensor([0, 4, 5],"float32"), )
paddle.mean(Tensor([2, 0, 5],"float32"), )
paddle.mean(Tensor([2, 4, 0],"float32"), )
paddle.mean(Tensor([0, 4, 5],"float64"), )
paddle.mean(Tensor([0, 4, 64],"complex128"), )
paddle.mean(Tensor([2, 0, 64],"complex128"), )
paddle.mean(Tensor([2, 4, 0],"complex128"), )
paddle.mean(Tensor([0, 4, 64],"complex64"), )
paddle.mean(Tensor([2, 0, 64],"complex64"), )
paddle.mean(Tensor([2, 4, 0],"complex64"), )
paddle.mean(Tensor([0, 4, 64],"float32"), )
paddle.mean(Tensor([2, 0, 64],"float32"), )
paddle.mean(Tensor([0, 4, 64],"float64"), )
paddle.mean(Tensor([2, 0, 64],"float64"), )
paddle.mean(Tensor([0, 4],"float32"), )
paddle.mean(Tensor([0, 4],"float64"), )
paddle.mean(Tensor([0, 40, 5, 5],"float32"), )
paddle.mean(Tensor([2, 40, 0, 5],"float32"), )
paddle.mean(Tensor([2, 40, 5, 0],"float32"), )
paddle.mean(Tensor([0, 5, 12],"float16"), )
paddle.mean(Tensor([2, 0, 12],"float16"), )
paddle.mean(Tensor([2, 5, 0],"float16"), )
paddle.mean(Tensor([0, 5, 12],"float32"), )
paddle.mean(Tensor([2, 0, 12],"float32"), )
paddle.mean(Tensor([2, 5, 0],"float32"), )
paddle.mean(Tensor([2, 5, 0],"float64"), )
paddle.mean(Tensor([2, 0, 2],"float64"), )
paddle.mean(Tensor([0, 5, 20],"float16"), )
paddle.mean(Tensor([2, 0, 20],"float16"), )
paddle.mean(Tensor([0, 5, 20],"float64"), )
paddle.mean(Tensor([0, 5, 3, 1, 1, 1, 4, 2],"float64"), )
paddle.mean(Tensor([2, 0, 3, 1, 1, 1, 4, 2],"float64"), )
paddle.mean(Tensor([2, 5, 0, 1, 1, 1, 4, 2],"float64"), )
paddle.mean(Tensor([2, 5, 3, 0, 1, 1, 4, 2],"float64"), )
paddle.mean(Tensor([2, 5, 3, 1, 0, 1, 4, 2],"float64"), )
paddle.mean(Tensor([2, 5, 3, 1, 1, 0, 4, 2],"float64"), )
paddle.mean(Tensor([2, 5, 3, 1, 1, 1, 0, 2],"float64"), )
paddle.mean(Tensor([2, 5, 3, 1, 1, 1, 4, 0],"float64"), )
paddle.mean(Tensor([0, 5, 3, 3],"float64"), )
paddle.mean(Tensor([2, 5, 0, 3],"float64"), )
paddle.mean(Tensor([2, 5, 3, 0],"float64"), )
paddle.mean(Tensor([0, 5, 3, 4, 2],"float16"), )
paddle.mean(Tensor([2, 0, 3, 4, 2],"float16"), )
paddle.mean(Tensor([2, 5, 0, 4, 2],"float16"), )
paddle.mean(Tensor([2, 5, 3, 0, 2],"float16"), )
paddle.mean(Tensor([2, 5, 3, 4, 0],"float16"), )
paddle.mean(Tensor([0, 5, 3, 4, 2],"float64"), )
paddle.mean(Tensor([2, 0, 3, 4, 2],"float64"), )
paddle.mean(Tensor([2, 5, 0, 4, 2],"float64"), )
paddle.mean(Tensor([2, 5, 3, 0, 2],"float64"), )
paddle.mean(Tensor([2, 5, 3, 4, 0],"float64"), )
paddle.mean(Tensor([0, 5, 5, 3],"float16"), )
paddle.mean(Tensor([2, 0, 5, 3],"float16"), )
paddle.mean(Tensor([2, 5, 0, 3],"float16"), )
paddle.mean(Tensor([2, 5, 5, 0],"float16"), )
paddle.mean(Tensor([0, 5, 5, 3],"float32"), )
paddle.mean(Tensor([2, 0, 5, 3],"float32"), )
paddle.mean(Tensor([2, 5, 0, 3],"float32"), )
paddle.mean(Tensor([2, 5, 5, 0],"float32"), )
paddle.mean(Tensor([0, 5, 5, 3],"float64"), )
paddle.mean(Tensor([2, 0, 5, 3],"float64"), )
paddle.mean(Tensor([2, 5, 5, 0],"float64"), )
paddle.mean(Tensor([0, 5, 5, 5, 6],"float32"), )
paddle.mean(Tensor([2, 0, 5, 5, 6],"float32"), )
paddle.mean(Tensor([2, 5, 0, 5, 6],"float32"), )
paddle.mean(Tensor([2, 5, 5, 0, 6],"float32"), )
paddle.mean(Tensor([2, 5, 5, 5, 0],"float32"), )
paddle.mean(Tensor([0, 5, 6, 7, 6],"complex128"), )
paddle.mean(Tensor([2, 0, 6, 7, 6],"complex128"), )
paddle.mean(Tensor([2, 5, 0, 7, 6],"complex128"), )
paddle.mean(Tensor([2, 5, 6, 0, 6],"complex128"), )
paddle.mean(Tensor([2, 5, 6, 7, 0],"complex128"), )
paddle.mean(Tensor([0, 5, 6, 7, 6],"complex64"), )
paddle.mean(Tensor([2, 0, 6, 7, 6],"complex64"), )
paddle.mean(Tensor([2, 5, 0, 7, 6],"complex64"), )
paddle.mean(Tensor([2, 5, 6, 0, 6],"complex64"), )
paddle.mean(Tensor([2, 5, 6, 7, 0],"complex64"), )
paddle.mean(Tensor([0, 5, 6, 7, 6],"float16"), )
paddle.mean(Tensor([2, 0, 6, 7, 6],"float16"), )
paddle.mean(Tensor([2, 5, 0, 7, 6],"float16"), )
paddle.mean(Tensor([2, 5, 6, 0, 6],"float16"), )
paddle.mean(Tensor([2, 5, 6, 7, 0],"float16"), )
paddle.mean(Tensor([0, 5, 6, 7, 6],"float64"), )
paddle.mean(Tensor([2, 0, 6, 7, 6],"float64"), )
paddle.mean(Tensor([2, 5, 0, 7, 6],"float64"), )
paddle.mean(Tensor([2, 5, 6, 0, 6],"float64"), )
paddle.mean(Tensor([2, 5, 6, 7, 0],"float64"), )
paddle.mean(Tensor([0, 6, 3, 3],"float64"), )
paddle.mean(Tensor([2, 6, 0, 3],"float64"), )
paddle.mean(Tensor([2, 6, 3, 0],"float64"), )
paddle.mean(Tensor([0, 6, 4, 4],"float64"), )
paddle.mean(Tensor([2, 6, 0, 4],"float64"), )
paddle.mean(Tensor([2, 6, 4, 0],"float64"), )
paddle.mean(Tensor([0, 6, 5, 5],"float32"), )
paddle.mean(Tensor([2, 6, 0, 5],"float32"), )
paddle.mean(Tensor([2, 6, 5, 0],"float32"), )
paddle.mean(Tensor([0, 6, 6, 3],"float32"), )
paddle.mean(Tensor([2, 0, 6, 3],"float32"), )
paddle.mean(Tensor([2, 6, 0, 3],"float32"), )
paddle.mean(Tensor([2, 6, 6, 0],"float32"), )
paddle.mean(Tensor([0, 6, 6, 3],"float64"), )
paddle.mean(Tensor([2, 0, 6, 3],"float64"), )
paddle.mean(Tensor([2, 6, 6, 0],"float64"), )
paddle.mean(Tensor([0, 6, 6, 4, 6],"float32"), )
paddle.mean(Tensor([2, 0, 6, 4, 6],"float32"), )
paddle.mean(Tensor([2, 6, 0, 4, 6],"float32"), )
paddle.mean(Tensor([2, 6, 6, 0, 6],"float32"), )
paddle.mean(Tensor([2, 6, 6, 4, 0],"float32"), )
paddle.mean(Tensor([0, 6, 6, 6],"float32"), )
paddle.mean(Tensor([2, 0, 6, 6],"float32"), )
paddle.mean(Tensor([2, 6, 0, 6],"float32"), )
paddle.mean(Tensor([0, 6, 7, 7, 7],"float32"), )
paddle.mean(Tensor([2, 0, 7, 7, 7],"float32"), )
paddle.mean(Tensor([2, 6, 0, 7, 7],"float32"), )
paddle.mean(Tensor([2, 6, 7, 0, 7],"float32"), )
paddle.mean(Tensor([2, 6, 7, 7, 0],"float32"), )
paddle.mean(Tensor([0, 6, 7, 7],"float64"), )
paddle.mean(Tensor([2, 6, 0, 7],"float64"), )
paddle.mean(Tensor([2, 6, 7, 0],"float64"), )
paddle.mean(Tensor([0, 7, 7, 3],"float16"), )
paddle.mean(Tensor([2, 0, 7, 3],"float16"), )
paddle.mean(Tensor([2, 7, 0, 3],"float16"), )
paddle.mean(Tensor([2, 7, 7, 0],"float16"), )
paddle.mean(Tensor([0, 7, 7, 3],"float32"), )
paddle.mean(Tensor([2, 0, 7, 3],"float32"), )
paddle.mean(Tensor([2, 7, 0, 3],"float32"), )
paddle.mean(Tensor([2, 7, 7, 0],"float32"), )
paddle.mean(Tensor([0, 7, 7, 3],"float64"), )
paddle.mean(Tensor([2, 0, 7, 3],"float64"), )
paddle.mean(Tensor([2, 7, 0, 3],"float64"), )
paddle.mean(Tensor([2, 7, 7, 0],"float64"), )
paddle.mean(Tensor([0, 7, 7, 7, 6],"float32"), )
paddle.mean(Tensor([2, 0, 7, 7, 6],"float32"), )
paddle.mean(Tensor([2, 7, 0, 7, 6],"float32"), )
paddle.mean(Tensor([2, 7, 7, 0, 6],"float32"), )
paddle.mean(Tensor([2, 7, 7, 7, 0],"float32"), )
paddle.mean(Tensor([2, 8, 0],"float64"), )
paddle.mean(Tensor([0, 8, 2048],"float32"), axis=1, )
paddle.mean(Tensor([2, 0, 2048],"float32"), axis=1, )
paddle.mean(Tensor([2, 8, 0],"float32"), axis=1, )
paddle.mean(Tensor([0, 8, 4, 4],"float32"), )
paddle.mean(Tensor([2, 8, 0, 4],"float32"), )
paddle.mean(Tensor([2, 8, 4, 0],"float32"), )
paddle.mean(Tensor([0, 80],"float64"), )
paddle.mean(Tensor([0, 9, 4, 4],"float16"), )
paddle.mean(Tensor([2, 0, 4, 4],"float16"), )
paddle.mean(Tensor([2, 9, 0, 4],"float16"), )
paddle.mean(Tensor([2, 9, 4, 0],"float16"), )
paddle.mean(Tensor([0, 9, 4, 4],"float64"), )
paddle.mean(Tensor([2, 9, 0, 4],"float64"), )
paddle.mean(Tensor([2, 9, 4, 0],"float64"), )
paddle.mean(Tensor([0, 9, 9, 9, 6],"float32"), )
paddle.mean(Tensor([2, 0, 9, 9, 6],"float32"), )
paddle.mean(Tensor([2, 9, 0, 9, 6],"float32"), )
paddle.mean(Tensor([2, 9, 9, 0, 6],"float32"), )
paddle.mean(Tensor([2, 9, 9, 9, 0],"float32"), )
paddle.mean(Tensor([20, 0],"float64"), )
paddle.mean(Tensor([0, 2, 2],"float64"), )
paddle.mean(Tensor([20, 0, 2],"float64"), )
paddle.mean(Tensor([20, 2, 0],"float64"), )
paddle.mean(Tensor([20, 0, 4],"float64"), )
paddle.mean(Tensor([0, 2, 5, 7, 3],"float32"), )
paddle.mean(Tensor([20, 0, 5, 7, 3],"float32"), )
paddle.mean(Tensor([20, 2, 0, 7, 3],"float32"), )
paddle.mean(Tensor([20, 2, 5, 0, 3],"float32"), )
paddle.mean(Tensor([20, 2, 5, 7, 0],"float32"), )
paddle.mean(Tensor([20, 0, 3],"float64"), )
paddle.mean(Tensor([20, 3, 0],"float64"), )
paddle.mean(Tensor([0, 30],"float16"), )
paddle.mean(Tensor([20, 0],"float16"), )
paddle.mean(Tensor([0, 30],"float32"), )
paddle.mean(Tensor([20, 0],"float32"), )
paddle.mean(Tensor([0, 30],"float64"), )
paddle.mean(Tensor([0, 5, 2],"float16"), )
paddle.mean(Tensor([20, 0, 2],"float16"), )
paddle.mean(Tensor([20, 5, 0],"float16"), )
paddle.mean(Tensor([20, 5, 0],"float64"), )
paddle.mean(Tensor([20, 0, 7, 2],"float32"), )
paddle.mean(Tensor([20, 5, 0, 2],"float32"), )
paddle.mean(Tensor([20, 5, 7, 0],"float32"), )
paddle.mean(Tensor([0, 14],"float64"), )
paddle.mean(Tensor([22, 0],"float64"), )
paddle.mean(Tensor([0, 2, 5, 6, 3],"float32"), )
paddle.mean(Tensor([25, 0, 5, 6, 3],"float32"), )
paddle.mean(Tensor([25, 2, 0, 6, 3],"float32"), )
paddle.mean(Tensor([25, 2, 5, 0, 3],"float32"), )
paddle.mean(Tensor([25, 2, 5, 6, 0],"float32"), )
paddle.mean(Tensor([0, 5, 6, 2],"float32"), )
paddle.mean(Tensor([25, 0, 6, 2],"float32"), )
paddle.mean(Tensor([25, 5, 0, 2],"float32"), )
paddle.mean(Tensor([25, 5, 6, 0],"float32"), )
paddle.mean(Tensor([253, 0],"float64"), )
paddle.mean(Tensor([0, 1, 10],"float16"), )
paddle.mean(Tensor([3, 0, 10],"float16"), )
paddle.mean(Tensor([3, 1, 0],"float16"), )
paddle.mean(Tensor([3, 10, 0],"float16"), )
paddle.mean(Tensor([3, 0, 10],"float64"), )
paddle.mean(Tensor([3, 10, 0],"float64"), )
paddle.mean(Tensor([3, 0, 12],"float64"), )
paddle.mean(Tensor([0, 10, 5, 5],"float64"), )
paddle.mean(Tensor([3, 0, 5, 5],"float64"), )
paddle.mean(Tensor([3, 10, 0, 5],"float64"), )
paddle.mean(Tensor([3, 10, 5, 0],"float64"), )
paddle.mean(Tensor([0, 10, 8],"complex128"), )
paddle.mean(Tensor([3, 0, 8],"complex128"), )
paddle.mean(Tensor([3, 10, 0],"complex128"), )
paddle.mean(Tensor([0, 10, 8],"complex64"), )
paddle.mean(Tensor([3, 0, 8],"complex64"), )
paddle.mean(Tensor([3, 10, 0],"complex64"), )
paddle.mean(Tensor([0, 10, 8],"float64"), )
paddle.mean(Tensor([3, 0, 8],"float64"), )
paddle.mean(Tensor([3, 0],"float32"), )
paddle.mean(Tensor([0, 15, 15],"float64"), )
paddle.mean(Tensor([3, 0, 15],"float64"), )
paddle.mean(Tensor([3, 15, 0],"float64"), )
paddle.mean(Tensor([0, 16, 15],"float64"), )
paddle.mean(Tensor([3, 16, 0],"float64"), )
paddle.mean(Tensor([0, 2, 1, 4],"float64"), )
paddle.mean(Tensor([3, 0, 1, 4],"float64"), )
paddle.mean(Tensor([3, 2, 0, 4],"float64"), )
paddle.mean(Tensor([3, 2, 1, 0],"float64"), )
paddle.mean(Tensor([0, 2, 12, 12],"float64"), )
paddle.mean(Tensor([3, 0, 12, 12],"float64"), )
paddle.mean(Tensor([3, 2, 0, 12],"float64"), )
paddle.mean(Tensor([3, 2, 12, 0],"float64"), )
paddle.mean(Tensor([0, 2, 12, 4, 4],"float32"), )
paddle.mean(Tensor([3, 0, 12, 4, 4],"float32"), )
paddle.mean(Tensor([3, 2, 0, 4, 4],"float32"), )
paddle.mean(Tensor([3, 2, 12, 0, 4],"float32"), )
paddle.mean(Tensor([3, 2, 12, 4, 0],"float32"), )
paddle.mean(Tensor([0, 2, 2, 1, 10],"float16"), )
paddle.mean(Tensor([3, 0, 2, 1, 10],"float16"), )
paddle.mean(Tensor([3, 2, 0, 1, 10],"float16"), )
paddle.mean(Tensor([3, 2, 2, 0, 10],"float16"), )
paddle.mean(Tensor([3, 2, 2, 1, 0],"float16"), )
paddle.mean(Tensor([0, 2, 2, 1, 10],"float64"), )
paddle.mean(Tensor([3, 0, 2, 1, 10],"float64"), )
paddle.mean(Tensor([3, 2, 0, 1, 10],"float64"), )
paddle.mean(Tensor([3, 2, 2, 0, 10],"float64"), )
paddle.mean(Tensor([3, 2, 2, 1, 0],"float64"), )
paddle.mean(Tensor([0, 2, 2, 4, 5, 2],"float16"), )
paddle.mean(Tensor([3, 0, 2, 4, 5, 2],"float16"), )
paddle.mean(Tensor([3, 2, 0, 4, 5, 2],"float16"), )
paddle.mean(Tensor([3, 2, 2, 0, 5, 2],"float16"), )
paddle.mean(Tensor([3, 2, 2, 4, 0, 2],"float16"), )
paddle.mean(Tensor([3, 2, 2, 4, 5, 0],"float16"), )
paddle.mean(Tensor([0, 2, 2, 4, 5, 2],"float64"), )
paddle.mean(Tensor([3, 0, 2, 4, 5, 2],"float64"), )
paddle.mean(Tensor([3, 2, 0, 4, 5, 2],"float64"), )
paddle.mean(Tensor([3, 2, 2, 0, 5, 2],"float64"), )
paddle.mean(Tensor([3, 2, 2, 4, 0, 2],"float64"), )
paddle.mean(Tensor([3, 2, 2, 4, 5, 0],"float64"), )
paddle.mean(Tensor([0, 2, 2, 4],"float64"), )
paddle.mean(Tensor([3, 0, 2, 4],"float64"), )
paddle.mean(Tensor([3, 2, 2, 0],"float64"), )
paddle.mean(Tensor([0, 2, 32, 16, 8],"float16"), )
paddle.mean(Tensor([3, 0, 32, 16, 8],"float16"), )
paddle.mean(Tensor([3, 2, 0, 16, 8],"float16"), )
paddle.mean(Tensor([3, 2, 32, 0, 8],"float16"), )
paddle.mean(Tensor([3, 2, 32, 16, 0],"float16"), )
paddle.mean(Tensor([0, 2, 32, 16, 8],"float32"), )
paddle.mean(Tensor([3, 0, 32, 16, 8],"float32"), )
paddle.mean(Tensor([3, 2, 0, 16, 8],"float32"), )
paddle.mean(Tensor([3, 2, 32, 0, 8],"float32"), )
paddle.mean(Tensor([3, 2, 32, 16, 0],"float32"), )
paddle.mean(Tensor([0, 2, 33, 19, 7],"float32"), )
paddle.mean(Tensor([3, 0, 33, 19, 7],"float32"), )
paddle.mean(Tensor([3, 2, 0, 19, 7],"float32"), )
paddle.mean(Tensor([3, 2, 33, 0, 7],"float32"), )
paddle.mean(Tensor([3, 2, 33, 19, 0],"float32"), )
paddle.mean(Tensor([0, 2, 5, 10],"float16"), )
paddle.mean(Tensor([3, 0, 5, 10],"float16"), )
paddle.mean(Tensor([3, 2, 0, 10],"float16"), )
paddle.mean(Tensor([3, 2, 5, 0],"float16"), )
paddle.mean(Tensor([0, 2, 5, 10],"float64"), )
paddle.mean(Tensor([3, 0, 5, 10],"float64"), )
paddle.mean(Tensor([3, 2, 0, 10],"float64"), )
paddle.mean(Tensor([3, 2, 5, 0],"float64"), )
paddle.mean(Tensor([0, 2, 5, 6],"float64"), )
paddle.mean(Tensor([3, 0, 5, 6],"float64"), )
paddle.mean(Tensor([3, 2, 0, 6],"float64"), )
paddle.mean(Tensor([0, 2, 6],"float64"), )
paddle.mean(Tensor([3, 0, 6],"float64"), )
paddle.mean(Tensor([3, 2, 0],"float64"), )
paddle.mean(Tensor([0, 2, 64, 32],"float64"), )
paddle.mean(Tensor([3, 0, 64, 32],"float64"), )
paddle.mean(Tensor([3, 2, 0, 32],"float64"), )
paddle.mean(Tensor([3, 2, 64, 0],"float64"), )
paddle.mean(Tensor([0, 2, 66, 40],"float64"), )
paddle.mean(Tensor([3, 0, 66, 40],"float64"), )
paddle.mean(Tensor([3, 2, 0, 40],"float64"), )
paddle.mean(Tensor([3, 2, 66, 0],"float64"), )
paddle.mean(Tensor([0, 2, 7, 7],"float64"), )
paddle.mean(Tensor([3, 0, 7, 7],"float64"), )
paddle.mean(Tensor([3, 2, 0, 7],"float64"), )
paddle.mean(Tensor([3, 2, 7, 0],"float64"), )
paddle.mean(Tensor([0, 2, 8, 66, 40],"float64"), )
paddle.mean(Tensor([3, 0, 8, 66, 40],"float64"), )
paddle.mean(Tensor([3, 2, 0, 66, 40],"float64"), )
paddle.mean(Tensor([3, 2, 8, 0, 40],"float64"), )
paddle.mean(Tensor([3, 2, 8, 66, 0],"float64"), )
paddle.mean(Tensor([0, 20, 1],"float16"), )
paddle.mean(Tensor([3, 0, 1],"float16"), )
paddle.mean(Tensor([3, 20, 0],"float16"), )
paddle.mean(Tensor([0, 20, 1],"float32"), )
paddle.mean(Tensor([3, 0, 1],"float32"), )
paddle.mean(Tensor([3, 20, 0],"float32"), )
paddle.mean(Tensor([0, 20],"float16"), )
paddle.mean(Tensor([3, 0],"float16"), )
paddle.mean(Tensor([3, 0],"float64"), )
paddle.mean(Tensor([0, 3, 10, 10],"float32"), )
paddle.mean(Tensor([3, 0, 10, 10],"float32"), )
paddle.mean(Tensor([3, 3, 0, 10],"float32"), )
paddle.mean(Tensor([3, 3, 10, 0],"float32"), )
paddle.mean(Tensor([0, 3, 10, 10],"float32"), name=None, )
paddle.mean(Tensor([3, 0, 10, 10],"float32"), name=None, )
paddle.mean(Tensor([3, 3, 0, 10],"float32"), name=None, )
paddle.mean(Tensor([3, 3, 10, 0],"float32"), name=None, )
paddle.mean(Tensor([0, 3, 10, 8],"float16"), )
paddle.mean(Tensor([3, 0, 10, 8],"float16"), )
paddle.mean(Tensor([3, 3, 0, 8],"float16"), )
paddle.mean(Tensor([3, 3, 10, 0],"float16"), )
paddle.mean(Tensor([0, 3, 10, 8],"float64"), )
paddle.mean(Tensor([3, 0, 10, 8],"float64"), )
paddle.mean(Tensor([3, 3, 0, 8],"float64"), )
paddle.mean(Tensor([3, 3, 10, 0],"float64"), )
paddle.mean(Tensor([0, 3, 11, 11, 11],"float16"), )
paddle.mean(Tensor([3, 0, 11, 11, 11],"float16"), )
paddle.mean(Tensor([3, 3, 0, 11, 11],"float16"), )
paddle.mean(Tensor([3, 3, 11, 0, 11],"float16"), )
paddle.mean(Tensor([3, 3, 11, 11, 0],"float16"), )
paddle.mean(Tensor([0, 3, 11, 11, 11],"float32"), )
paddle.mean(Tensor([3, 0, 11, 11, 11],"float32"), )
paddle.mean(Tensor([3, 3, 0, 11, 11],"float32"), )
paddle.mean(Tensor([3, 3, 11, 0, 11],"float32"), )
paddle.mean(Tensor([3, 3, 11, 11, 0],"float32"), )
paddle.mean(Tensor([0, 3, 11, 11],"float16"), )
paddle.mean(Tensor([3, 0, 11, 11],"float16"), )
paddle.mean(Tensor([3, 3, 0, 11],"float16"), )
paddle.mean(Tensor([3, 3, 11, 0],"float16"), )
paddle.mean(Tensor([0, 3, 11, 11],"float64"), )
paddle.mean(Tensor([3, 0, 11, 11],"float64"), )
paddle.mean(Tensor([3, 3, 0, 11],"float64"), )
paddle.mean(Tensor([3, 3, 11, 0],"float64"), )
paddle.mean(Tensor([0, 3, 12, 12],"float16"), )
paddle.mean(Tensor([3, 0, 12, 12],"float16"), )
paddle.mean(Tensor([3, 3, 0, 12],"float16"), )
paddle.mean(Tensor([3, 3, 12, 0],"float16"), )
paddle.mean(Tensor([0, 3, 12, 12],"float64"), )
paddle.mean(Tensor([3, 3, 0, 12],"float64"), )
paddle.mean(Tensor([3, 3, 12, 0],"float64"), )
paddle.mean(Tensor([0, 3, 2, 4],"float16"), )
paddle.mean(Tensor([3, 0, 2, 4],"float16"), )
paddle.mean(Tensor([3, 3, 0, 4],"float16"), )
paddle.mean(Tensor([3, 3, 2, 0],"float16"), )
paddle.mean(Tensor([0, 3, 2, 4],"float32"), )
paddle.mean(Tensor([3, 0, 2, 4],"float32"), )
paddle.mean(Tensor([3, 3, 0, 4],"float32"), )
paddle.mean(Tensor([3, 3, 2, 0],"float32"), )
paddle.mean(Tensor([0, 3, 2, 4],"float64"), )
paddle.mean(Tensor([3, 3, 0, 4],"float64"), )
paddle.mean(Tensor([3, 3, 2, 0],"float64"), )
paddle.mean(Tensor([3, 0, 20],"float64"), )
paddle.mean(Tensor([3, 3, 0],"float64"), )
paddle.mean(Tensor([3, 0, 3, 3],"float64"), )
paddle.mean(Tensor([3, 3, 0, 3],"float64"), )
paddle.mean(Tensor([3, 3, 3, 0],"float64"), )
paddle.mean(Tensor([0, 3, 3, 6],"float64"), )
paddle.mean(Tensor([3, 0, 3, 6],"float64"), )
paddle.mean(Tensor([3, 3, 0, 6],"float64"), )
paddle.mean(Tensor([3, 0, 3],"float64"), )
paddle.mean(Tensor([0, 3, 6, 4],"float16"), )
paddle.mean(Tensor([3, 0, 6, 4],"float16"), )
paddle.mean(Tensor([3, 3, 6, 0],"float16"), )
paddle.mean(Tensor([0, 3, 6, 4],"float64"), )
paddle.mean(Tensor([3, 0, 6, 4],"float64"), )
paddle.mean(Tensor([3, 3, 6, 0],"float64"), )
paddle.mean(Tensor([0, 3, 8, 12],"float64"), )
paddle.mean(Tensor([3, 0, 8, 12],"float64"), )
paddle.mean(Tensor([3, 3, 8, 0],"float64"), )
paddle.mean(Tensor([0, 4, 10],"float64"), )
paddle.mean(Tensor([3, 4, 0],"float64"), )
paddle.mean(Tensor([0, 4, 2, 6],"float64"), )
paddle.mean(Tensor([3, 0, 2, 6],"float64"), )
paddle.mean(Tensor([3, 4, 0, 6],"float64"), )
paddle.mean(Tensor([3, 4, 2, 0],"float64"), )
paddle.mean(Tensor([0, 4, 5, 3],"float16"), )
paddle.mean(Tensor([3, 0, 5, 3],"float16"), )
paddle.mean(Tensor([3, 4, 0, 3],"float16"), )
paddle.mean(Tensor([3, 4, 5, 0],"float16"), )
paddle.mean(Tensor([0, 4, 5, 3],"float32"), )
paddle.mean(Tensor([3, 0, 5, 3],"float32"), )
paddle.mean(Tensor([3, 4, 0, 3],"float32"), )
paddle.mean(Tensor([3, 4, 5, 0],"float32"), )
paddle.mean(Tensor([0, 4, 5, 3],"float64"), )
paddle.mean(Tensor([3, 0, 5, 3],"float64"), )
paddle.mean(Tensor([3, 4, 0, 3],"float64"), )
paddle.mean(Tensor([3, 4, 5, 0],"float64"), )
paddle.mean(Tensor([3, 0, 5],"float64"), )
paddle.mean(Tensor([0, 4, 64, 64],"float32"), )
paddle.mean(Tensor([3, 0, 64, 64],"float32"), )
paddle.mean(Tensor([3, 4, 0, 64],"float32"), )
paddle.mean(Tensor([3, 4, 64, 0],"float32"), )
paddle.mean(Tensor([0, 40],"float16"), )
paddle.mean(Tensor([0, 40],"float32"), )
paddle.mean(Tensor([0, 40],"float64"), )
paddle.mean(Tensor([3, 0, 2],"float64"), )
paddle.mean(Tensor([3, 5, 0],"float64"), )
paddle.mean(Tensor([0, 5, 47],"float64"), )
paddle.mean(Tensor([3, 0, 47],"float64"), )
paddle.mean(Tensor([0, 5],"float32"), axis=None, )
paddle.mean(Tensor([3, 0],"float32"), axis=None, )
paddle.mean(Tensor([0, 6, 2, 2],"float64"), )
paddle.mean(Tensor([3, 0, 2, 2],"float64"), )
paddle.mean(Tensor([3, 6, 0, 2],"float64"), )
paddle.mean(Tensor([3, 6, 2, 0],"float64"), )
paddle.mean(Tensor([0, 7],"float64"), )
paddle.mean(Tensor([0, 8],"float32"), )
paddle.mean(Tensor([30, 0],"float64"), )
paddle.mean(Tensor([0, 10, 64],"float32"), )
paddle.mean(Tensor([30, 0, 64],"float32"), )
paddle.mean(Tensor([30, 10, 0],"float32"), )
paddle.mean(Tensor([0, 15],"float32"), )
paddle.mean(Tensor([30, 0],"float32"), )
paddle.mean(Tensor([0, 200, 40],"float32"), axis=1, keepdim=False, )
paddle.mean(Tensor([30, 0, 40],"float32"), axis=1, keepdim=False, )
paddle.mean(Tensor([30, 200, 0],"float32"), axis=1, keepdim=False, )
paddle.mean(Tensor([0, 200, 40],"float32"), axis=-1, keepdim=False, )
paddle.mean(Tensor([30, 0, 40],"float32"), axis=-1, keepdim=False, )
paddle.mean(Tensor([30, 200, 0],"float32"), axis=-1, keepdim=False, )
paddle.mean(Tensor([0, 200, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.mean(Tensor([30, 0, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.mean(Tensor([30, 200, 0],"float32"), axis=list[0,2,], keepdim=False, )
paddle.mean(Tensor([32, 0],"float32"), )
paddle.mean(Tensor([32, 0],"float64"), )
paddle.mean(Tensor([0, 32],"float32"), )
paddle.mean(Tensor([0, 32],"float64"), )
paddle.mean(Tensor([0, 16],"float64"), )
paddle.mean(Tensor([36, 0],"float64"), )
paddle.mean(Tensor([4, 0, 1, 1, 1],"float16"), )
paddle.mean(Tensor([4, 1, 0, 1, 1],"float16"), )
paddle.mean(Tensor([4, 1, 1, 0, 1],"float16"), )
paddle.mean(Tensor([4, 1, 1, 1, 0],"float16"), )
paddle.mean(Tensor([0, 1, 1, 1, 1],"float64"), )
paddle.mean(Tensor([4, 0, 1, 1, 1],"float64"), )
paddle.mean(Tensor([4, 1, 0, 1, 1],"float64"), )
paddle.mean(Tensor([4, 1, 1, 0, 1],"float64"), )
paddle.mean(Tensor([4, 1, 1, 1, 0],"float64"), )
paddle.mean(Tensor([0, 1, 1, 1],"float16"), )
paddle.mean(Tensor([4, 0, 1, 1],"float16"), )
paddle.mean(Tensor([4, 1, 0, 1],"float16"), )
paddle.mean(Tensor([4, 1, 1, 0],"float16"), )
paddle.mean(Tensor([0, 1, 1, 1],"float64"), )
paddle.mean(Tensor([4, 0, 1, 1],"float64"), )
paddle.mean(Tensor([4, 1, 0, 1],"float64"), )
paddle.mean(Tensor([4, 1, 1, 0],"float64"), )
paddle.mean(Tensor([0, 1, 2, 2, 2],"float16"), )
paddle.mean(Tensor([4, 0, 2, 2, 2],"float16"), )
paddle.mean(Tensor([4, 1, 0, 2, 2],"float16"), )
paddle.mean(Tensor([4, 1, 2, 0, 2],"float16"), )
paddle.mean(Tensor([4, 1, 2, 2, 0],"float16"), )
paddle.mean(Tensor([0, 1, 2, 2, 2],"float32"), )
paddle.mean(Tensor([4, 0, 2, 2, 2],"float32"), )
paddle.mean(Tensor([4, 1, 0, 2, 2],"float32"), )
paddle.mean(Tensor([4, 1, 2, 0, 2],"float32"), )
paddle.mean(Tensor([4, 1, 2, 2, 0],"float32"), )
paddle.mean(Tensor([0, 1, 2, 2],"float16"), )
paddle.mean(Tensor([4, 0, 2, 2],"float16"), )
paddle.mean(Tensor([4, 1, 0, 2],"float16"), )
paddle.mean(Tensor([4, 1, 2, 0],"float16"), )
paddle.mean(Tensor([0, 1, 2, 2],"float64"), )
paddle.mean(Tensor([4, 0, 2, 2],"float64"), )
paddle.mean(Tensor([4, 1, 0, 2],"float64"), )
paddle.mean(Tensor([4, 1, 2, 0],"float64"), )
paddle.mean(Tensor([0, 1, 6],"float16"), )
paddle.mean(Tensor([4, 0, 6],"float16"), )
paddle.mean(Tensor([4, 1, 0],"float16"), )
paddle.mean(Tensor([0, 1, 6],"float64"), )
paddle.mean(Tensor([4, 0, 6],"float64"), )
paddle.mean(Tensor([4, 1, 0],"float64"), )
paddle.mean(Tensor([4, 0],"float32"), )
paddle.mean(Tensor([4, 0],"float64"), )
paddle.mean(Tensor([0, 10, 10, 10],"float16"), )
paddle.mean(Tensor([4, 0, 10, 10],"float16"), )
paddle.mean(Tensor([4, 10, 0, 10],"float16"), )
paddle.mean(Tensor([4, 10, 10, 0],"float16"), )
paddle.mean(Tensor([0, 10, 64],"float64"), )
paddle.mean(Tensor([4, 0, 64],"float64"), )
paddle.mean(Tensor([4, 10, 0],"float64"), )
paddle.mean(Tensor([0, 10],"float32"), axis=-1, )
paddle.mean(Tensor([4, 0],"float32"), axis=-1, )
paddle.mean(Tensor([0, 100, 16],"float32"), )
paddle.mean(Tensor([4, 0, 16],"float32"), )
paddle.mean(Tensor([4, 100, 0],"float32"), )
paddle.mean(Tensor([0, 100, 4, 4],"float16"), )
paddle.mean(Tensor([4, 0, 4, 4],"float16"), )
paddle.mean(Tensor([4, 100, 0, 4],"float16"), )
paddle.mean(Tensor([4, 100, 4, 0],"float16"), )
paddle.mean(Tensor([0, 100, 4, 4],"float32"), )
paddle.mean(Tensor([4, 0, 4, 4],"float32"), )
paddle.mean(Tensor([4, 100, 0, 4],"float32"), )
paddle.mean(Tensor([4, 100, 4, 0],"float32"), )
paddle.mean(Tensor([0, 12, 4],"float64"), )
paddle.mean(Tensor([4, 0, 4],"float64"), )
paddle.mean(Tensor([4, 12, 0],"float64"), )
paddle.mean(Tensor([4, 0, 6, 6],"float32"), )
paddle.mean(Tensor([4, 2, 0, 6],"float32"), )
paddle.mean(Tensor([4, 2, 6, 0],"float32"), )
paddle.mean(Tensor([0, 2, 6],"float16"), )
paddle.mean(Tensor([4, 2, 0],"float16"), )
paddle.mean(Tensor([4, 2, 0],"float64"), )
paddle.mean(Tensor([0, 3, 1],"float16"), )
paddle.mean(Tensor([4, 0, 1],"float16"), )
paddle.mean(Tensor([4, 3, 0],"float16"), )
paddle.mean(Tensor([0, 3, 1],"float64"), )
paddle.mean(Tensor([4, 0, 1],"float64"), )
paddle.mean(Tensor([4, 3, 0],"float64"), )
paddle.mean(Tensor([0, 3, 2, 1],"float64"), )
paddle.mean(Tensor([4, 0, 2, 1],"float64"), )
paddle.mean(Tensor([4, 3, 0, 1],"float64"), )
paddle.mean(Tensor([4, 3, 2, 0],"float64"), )
paddle.mean(Tensor([0, 3, 2],"float32"), )
paddle.mean(Tensor([4, 0, 2],"float32"), )
paddle.mean(Tensor([4, 3, 0],"float32"), )
paddle.mean(Tensor([0, 3, 2],"float64"), )
paddle.mean(Tensor([4, 0, 2],"float64"), )
paddle.mean(Tensor([0, 3, 2],"float64"), name=None, )
paddle.mean(Tensor([4, 0, 2],"float64"), name=None, )
paddle.mean(Tensor([4, 3, 0],"float64"), name=None, )
paddle.mean(Tensor([0, 3],"float32"), axis=list[0,], )
paddle.mean(Tensor([4, 0],"float32"), axis=list[0,], )
paddle.mean(Tensor([0, 3],"float64"), axis=list[0,], )
paddle.mean(Tensor([4, 0],"float64"), axis=list[0,], )
paddle.mean(Tensor([0, 4, 2, 2],"float16"), )
paddle.mean(Tensor([4, 4, 0, 2],"float16"), )
paddle.mean(Tensor([4, 4, 2, 0],"float16"), )
paddle.mean(Tensor([0, 4, 2, 2],"float32"), )
paddle.mean(Tensor([4, 0, 2, 2],"float32"), )
paddle.mean(Tensor([4, 4, 0, 2],"float32"), )
paddle.mean(Tensor([4, 4, 2, 0],"float32"), )
paddle.mean(Tensor([0, 4, 6, 3],"float16"), )
paddle.mean(Tensor([4, 0, 6, 3],"float16"), )
paddle.mean(Tensor([4, 4, 0, 3],"float16"), )
paddle.mean(Tensor([4, 4, 6, 0],"float16"), )
paddle.mean(Tensor([0, 4, 6, 3],"float64"), )
paddle.mean(Tensor([4, 0, 6, 3],"float64"), )
paddle.mean(Tensor([4, 4, 0, 3],"float64"), )
paddle.mean(Tensor([4, 4, 6, 0],"float64"), )
paddle.mean(Tensor([0, 5, 1],"float64"), )
paddle.mean(Tensor([4, 5, 0],"float64"), )
paddle.mean(Tensor([4, 0, 2],"float16"), )
paddle.mean(Tensor([4, 5, 0],"float16"), )
paddle.mean(Tensor([0, 5, 3],"float64"), )
paddle.mean(Tensor([4, 0, 3],"float64"), )
paddle.mean(Tensor([0, 6, 4, 4],"float32"), )
paddle.mean(Tensor([4, 6, 0, 4],"float32"), )
paddle.mean(Tensor([4, 6, 4, 0],"float32"), )
paddle.mean(Tensor([0, 6, 7, 16],"float64"), )
paddle.mean(Tensor([4, 0, 7, 16],"float64"), )
paddle.mean(Tensor([4, 6, 0, 16],"float64"), )
paddle.mean(Tensor([4, 6, 7, 0],"float64"), )
paddle.mean(Tensor([0, 64],"float32"), axis=-1, )
paddle.mean(Tensor([0, 8, 16, 1],"float64"), )
paddle.mean(Tensor([4, 0, 16, 1],"float64"), )
paddle.mean(Tensor([4, 8, 0, 1],"float64"), )
paddle.mean(Tensor([4, 8, 16, 0],"float64"), )
paddle.mean(Tensor([0, 8, 16],"float64"), )
paddle.mean(Tensor([4, 0, 16],"float64"), )
paddle.mean(Tensor([4, 8, 0],"float64"), )
paddle.mean(Tensor([0, 8, 4],"complex128"), )
paddle.mean(Tensor([4, 0, 4],"complex128"), )
paddle.mean(Tensor([4, 8, 0],"complex128"), )
paddle.mean(Tensor([0, 9, 7, 13, 4],"complex128"), )
paddle.mean(Tensor([4, 0, 7, 13, 4],"complex128"), )
paddle.mean(Tensor([4, 9, 0, 13, 4],"complex128"), )
paddle.mean(Tensor([4, 9, 7, 0, 4],"complex128"), )
paddle.mean(Tensor([4, 9, 7, 13, 0],"complex128"), )
paddle.mean(Tensor([0, 9, 7, 13, 4],"complex64"), )
paddle.mean(Tensor([4, 0, 7, 13, 4],"complex64"), )
paddle.mean(Tensor([4, 9, 0, 13, 4],"complex64"), )
paddle.mean(Tensor([4, 9, 7, 0, 4],"complex64"), )
paddle.mean(Tensor([4, 9, 7, 13, 0],"complex64"), )
paddle.mean(Tensor([0, 9, 7, 13, 4],"float16"), )
paddle.mean(Tensor([4, 0, 7, 13, 4],"float16"), )
paddle.mean(Tensor([4, 9, 0, 13, 4],"float16"), )
paddle.mean(Tensor([4, 9, 7, 0, 4],"float16"), )
paddle.mean(Tensor([4, 9, 7, 13, 0],"float16"), )
paddle.mean(Tensor([0, 9, 7, 13, 4],"float64"), )
paddle.mean(Tensor([4, 0, 7, 13, 4],"float64"), )
paddle.mean(Tensor([4, 9, 0, 13, 4],"float64"), )
paddle.mean(Tensor([4, 9, 7, 0, 4],"float64"), )
paddle.mean(Tensor([4, 9, 7, 13, 0],"float64"), )
paddle.mean(Tensor([0, 9, 7, 5, 4],"complex128"), )
paddle.mean(Tensor([4, 0, 7, 5, 4],"complex128"), )
paddle.mean(Tensor([4, 9, 0, 5, 4],"complex128"), )
paddle.mean(Tensor([4, 9, 7, 5, 0],"complex128"), )
paddle.mean(Tensor([0, 9, 7, 5, 4],"complex64"), )
paddle.mean(Tensor([4, 0, 7, 5, 4],"complex64"), )
paddle.mean(Tensor([4, 9, 0, 5, 4],"complex64"), )
paddle.mean(Tensor([4, 9, 7, 5, 0],"complex64"), )
paddle.mean(Tensor([0, 9, 7, 5, 4],"float16"), )
paddle.mean(Tensor([4, 0, 7, 5, 4],"float16"), )
paddle.mean(Tensor([4, 9, 0, 5, 4],"float16"), )
paddle.mean(Tensor([4, 9, 7, 5, 0],"float16"), )
paddle.mean(Tensor([0, 9, 7, 5, 4],"float64"), )
paddle.mean(Tensor([4, 0, 7, 5, 4],"float64"), )
paddle.mean(Tensor([4, 9, 0, 5, 4],"float64"), )
paddle.mean(Tensor([4, 9, 7, 5, 0],"float64"), )
paddle.mean(Tensor([0, 9, 7, 7],"float64"), )
paddle.mean(Tensor([4, 0, 7, 7],"float64"), )
paddle.mean(Tensor([4, 9, 0, 7],"float64"), )
paddle.mean(Tensor([4, 9, 7, 0],"float64"), )
paddle.mean(Tensor([0, 120],"float32"), axis=0, )
paddle.mean(Tensor([400, 0],"float32"), axis=0, )
paddle.mean(Tensor([47, 0, 3],"float64"), )
paddle.mean(Tensor([47, 5, 0],"float64"), )
paddle.mean(Tensor([5, 0, 1],"float64"), )
paddle.mean(Tensor([5, 1, 0],"float64"), )
paddle.mean(Tensor([0, 1, 10],"float64"), )
paddle.mean(Tensor([5, 0, 10],"float64"), )
paddle.mean(Tensor([5, 0, 20],"float32"), )
paddle.mean(Tensor([5, 1, 0],"float32"), )
paddle.mean(Tensor([0, 1],"complex128"), )
paddle.mean(Tensor([5, 0],"complex128"), )
paddle.mean(Tensor([0, 1],"complex64"), )
paddle.mean(Tensor([5, 0],"complex64"), )
paddle.mean(Tensor([5, 0],"float16"), )
paddle.mean(Tensor([5, 0],"float32"), )
paddle.mean(Tensor([5, 0],"float64"), )
paddle.mean(Tensor([0, 10, 6],"float64"), )
paddle.mean(Tensor([5, 0, 6],"float64"), )
paddle.mean(Tensor([5, 10, 0],"float64"), )
paddle.mean(Tensor([0, 15],"complex128"), )
paddle.mean(Tensor([0, 15],"complex64"), )
paddle.mean(Tensor([0, 2, 10, 2],"complex128"), )
paddle.mean(Tensor([5, 0, 10, 2],"complex128"), )
paddle.mean(Tensor([5, 2, 0, 2],"complex128"), )
paddle.mean(Tensor([5, 2, 10, 0],"complex128"), )
paddle.mean(Tensor([0, 2, 10, 2],"complex64"), )
paddle.mean(Tensor([5, 0, 10, 2],"complex64"), )
paddle.mean(Tensor([5, 2, 0, 2],"complex64"), )
paddle.mean(Tensor([5, 2, 10, 0],"complex64"), )
paddle.mean(Tensor([0, 2, 10, 2],"float64"), )
paddle.mean(Tensor([5, 0, 10, 2],"float64"), )
paddle.mean(Tensor([5, 2, 0, 2],"float64"), )
paddle.mean(Tensor([5, 2, 10, 0],"float64"), )
paddle.mean(Tensor([5, 0, 10],"float32"), )
paddle.mean(Tensor([5, 2, 0],"float32"), )
paddle.mean(Tensor([0, 2],"float64"), axis=1, )
paddle.mean(Tensor([5, 0],"float64"), axis=1, )
paddle.mean(Tensor([0, 3, 2, 1, 4],"float64"), )
paddle.mean(Tensor([5, 0, 2, 1, 4],"float64"), )
paddle.mean(Tensor([5, 3, 0, 1, 4],"float64"), )
paddle.mean(Tensor([5, 3, 2, 0, 4],"float64"), )
paddle.mean(Tensor([5, 3, 2, 1, 0],"float64"), )
paddle.mean(Tensor([0, 40],"complex128"), )
paddle.mean(Tensor([0, 40],"complex64"), )
paddle.mean(Tensor([0, 5, 1],"float16"), )
paddle.mean(Tensor([5, 0, 1],"float16"), )
paddle.mean(Tensor([5, 5, 0],"float16"), )
paddle.mean(Tensor([5, 5, 0],"float64"), )
paddle.mean(Tensor([0, 5, 5],"float32"), )
paddle.mean(Tensor([5, 0, 5],"float32"), )
paddle.mean(Tensor([5, 5, 0],"float32"), )
paddle.mean(Tensor([5, 0, 5],"float64"), )
paddle.mean(Tensor([0, 5],"float64"), name=None, )
paddle.mean(Tensor([5, 0],"float64"), name=None, )
paddle.mean(Tensor([0, 6, 1],"float32"), )
paddle.mean(Tensor([5, 0, 1],"float32"), )
paddle.mean(Tensor([5, 6, 0],"float32"), )
paddle.mean(Tensor([0, 6, 2],"float16"), )
paddle.mean(Tensor([5, 0, 2],"float16"), )
paddle.mean(Tensor([5, 6, 0],"float16"), )
paddle.mean(Tensor([0, 6, 2],"float64"), )
paddle.mean(Tensor([5, 0, 2],"float64"), )
paddle.mean(Tensor([5, 6, 0],"float64"), )
paddle.mean(Tensor([5, 0, 4, 4],"float32"), )
paddle.mean(Tensor([5, 6, 0, 4],"float32"), )
paddle.mean(Tensor([5, 6, 4, 0],"float32"), )
paddle.mean(Tensor([0, 6],"complex128"), )
paddle.mean(Tensor([0, 6],"complex64"), )
paddle.mean(Tensor([0, 6],"float16"), )
paddle.mean(Tensor([0, 7],"complex128"), )
paddle.mean(Tensor([0, 7],"complex64"), )
paddle.mean(Tensor([0, 7],"float16"), )
paddle.mean(Tensor([0],"float32"), axis=0, )
paddle.mean(Tensor([0],"float64"), name=None, )
paddle.mean(Tensor([50, 0],"float64"), )
paddle.mean(Tensor([512, 0],"float32"), )
paddle.mean(Tensor([58, 0],"float32"), )
paddle.mean(Tensor([0, 10, 12],"complex128"), )
paddle.mean(Tensor([6, 0, 12],"complex128"), )
paddle.mean(Tensor([6, 10, 0],"complex128"), )
paddle.mean(Tensor([0, 10, 12],"complex64"), )
paddle.mean(Tensor([6, 0, 12],"complex64"), )
paddle.mean(Tensor([6, 10, 0],"complex64"), )
paddle.mean(Tensor([6, 0, 12],"float64"), )
paddle.mean(Tensor([6, 10, 0],"float64"), )
paddle.mean(Tensor([6, 0],"float16"), )
paddle.mean(Tensor([6, 0],"float64"), )
paddle.mean(Tensor([0, 2, 60, 10],"float64"), )
paddle.mean(Tensor([6, 0, 60, 10],"float64"), )
paddle.mean(Tensor([6, 2, 0, 10],"float64"), )
paddle.mean(Tensor([6, 2, 60, 0],"float64"), )
paddle.mean(Tensor([6, 0, 2, 2],"float64"), )
paddle.mean(Tensor([6, 3, 0, 2],"float64"), )
paddle.mean(Tensor([6, 3, 2, 0],"float64"), )
paddle.mean(Tensor([6, 0],"float32"), axis=list[0,], )
paddle.mean(Tensor([6, 0, 2, 2],"float16"), )
paddle.mean(Tensor([6, 4, 0, 2],"float16"), )
paddle.mean(Tensor([6, 4, 2, 0],"float16"), )
paddle.mean(Tensor([0, 4, 2, 2],"float64"), )
paddle.mean(Tensor([6, 4, 0, 2],"float64"), )
paddle.mean(Tensor([6, 4, 2, 0],"float64"), )
paddle.mean(Tensor([0, 4, 2, 3],"float16"), )
paddle.mean(Tensor([6, 0, 2, 3],"float16"), )
paddle.mean(Tensor([6, 4, 0, 3],"float16"), )
paddle.mean(Tensor([0, 4, 2, 3],"float64"), )
paddle.mean(Tensor([6, 0, 2, 3],"float64"), )
paddle.mean(Tensor([6, 4, 0, 3],"float64"), )
paddle.mean(Tensor([0, 4, 4, 4],"float16"), )
paddle.mean(Tensor([6, 0, 4, 4],"float16"), )
paddle.mean(Tensor([6, 4, 0, 4],"float16"), )
paddle.mean(Tensor([6, 4, 4, 0],"float16"), )
paddle.mean(Tensor([6, 0, 4, 4],"float64"), )
paddle.mean(Tensor([6, 4, 0, 4],"float64"), )
paddle.mean(Tensor([6, 4, 4, 0],"float64"), )
paddle.mean(Tensor([0, 5, 5, 4],"float64"), )
paddle.mean(Tensor([6, 0, 5, 4],"float64"), )
paddle.mean(Tensor([6, 5, 0, 4],"float64"), )
paddle.mean(Tensor([6, 5, 5, 0],"float64"), )
paddle.mean(Tensor([6, 0],"complex128"), )
paddle.mean(Tensor([6, 0],"complex64"), )
paddle.mean(Tensor([0, 9],"float32"), axis=1, )
paddle.mean(Tensor([6, 0],"float32"), axis=1, )
paddle.mean(Tensor([60, 0],"float16"), )
paddle.mean(Tensor([60, 0],"float64"), )
paddle.mean(Tensor([64, 0],"float16"), )
paddle.mean(Tensor([64, 0],"float32"), )
paddle.mean(Tensor([64, 0],"float64"), )
paddle.mean(Tensor([0, 64, 128],"float16"), )
paddle.mean(Tensor([64, 0, 128],"float16"), )
paddle.mean(Tensor([64, 64, 0],"float16"), )
paddle.mean(Tensor([0, 15],"float16"), )
paddle.mean(Tensor([7, 0],"float16"), )
paddle.mean(Tensor([7, 0],"float64"), )
paddle.mean(Tensor([7, 0],"float32"), )
paddle.mean(Tensor([0, 11],"float32"), axis=list[0,], )
paddle.mean(Tensor([8, 0],"float32"), axis=list[0,], )
paddle.mean(Tensor([0, 12],"float32"), axis=list[0,], )
paddle.mean(Tensor([0, 128],"float64"), )
paddle.mean(Tensor([8, 0],"float64"), )
paddle.mean(Tensor([0, 16, 64],"float32"), )
paddle.mean(Tensor([8, 0, 64],"float32"), )
paddle.mean(Tensor([8, 16, 0],"float32"), )
paddle.mean(Tensor([0, 16, 7, 7],"float32"), )
paddle.mean(Tensor([8, 0, 7, 7],"float32"), )
paddle.mean(Tensor([8, 16, 0, 7],"float32"), )
paddle.mean(Tensor([8, 16, 7, 0],"float32"), )
paddle.mean(Tensor([8, 0, 2, 1, 10],"float64"), )
paddle.mean(Tensor([8, 2, 0, 1, 10],"float64"), )
paddle.mean(Tensor([8, 2, 2, 0, 10],"float64"), )
paddle.mean(Tensor([8, 2, 2, 1, 0],"float64"), )
paddle.mean(Tensor([8, 0],"float32"), )
paddle.mean(Tensor([0, 3, 2, 3],"float64"), )
paddle.mean(Tensor([8, 0, 2, 3],"float64"), )
paddle.mean(Tensor([8, 3, 0, 3],"float64"), )
paddle.mean(Tensor([8, 3, 2, 0],"float64"), )
paddle.mean(Tensor([0, 3, 5, 4],"float64"), )
paddle.mean(Tensor([8, 0, 5, 4],"float64"), )
paddle.mean(Tensor([8, 3, 0, 4],"float64"), )
paddle.mean(Tensor([8, 3, 5, 0],"float64"), )
paddle.mean(Tensor([0, 4, 4],"float32"), )
paddle.mean(Tensor([8, 0, 4],"float32"), )
paddle.mean(Tensor([8, 4, 0],"float32"), )
paddle.mean(Tensor([8, 0, 4],"float64"), )
paddle.mean(Tensor([8, 4, 0],"float64"), )
paddle.mean(Tensor([0, 8, 16, 16],"float32"), )
paddle.mean(Tensor([8, 0, 16, 16],"float32"), )
paddle.mean(Tensor([8, 8, 0, 16],"float32"), )
paddle.mean(Tensor([8, 8, 16, 0],"float32"), )
paddle.mean(Tensor([0, 8, 16, 16],"float64"), )
paddle.mean(Tensor([8, 0, 16, 16],"float64"), )
paddle.mean(Tensor([8, 8, 0, 16],"float64"), )
paddle.mean(Tensor([8, 8, 16, 0],"float64"), )
paddle.mean(Tensor([80, 0],"float64"), )
paddle.mean(Tensor([0, 10],"float32"), axis=0, )
paddle.mean(Tensor([84, 0],"float32"), axis=0, )
paddle.mean(Tensor([9, 0],"float16"), )
paddle.mean(Tensor([9, 0],"float32"), )
paddle.mean(Tensor([9, 0],"float64"), )
paddle.mean(x=Tensor([0, 1],"float32"), )
paddle.mean(x=Tensor([1, 0],"float32"), )
paddle.mean(x=Tensor([0, 102],"float16"), )
paddle.mean(x=Tensor([2, 0],"float16"), )
paddle.mean(x=Tensor([0, 102],"float32"), )
paddle.mean(x=Tensor([2, 0],"float32"), )
paddle.mean(x=Tensor([4, 0],"float32"), )
paddle.mean(x=Tensor([0, 1],"float16"), )
paddle.mean(x=Tensor([8, 0],"float16"), )
paddle.mean(x=Tensor([8, 0],"float32"), )
paddle.nn.functional.elu_(Tensor([0, 20, 1],"float32"), )
paddle.nn.functional.elu_(Tensor([10, 0, 1],"float32"), )
paddle.nn.functional.elu_(Tensor([10, 20, 0],"float32"), )
paddle.nn.functional.hardtanh_(Tensor([0, 20, 1],"float32"), -1.0, 1.0, )
paddle.nn.functional.hardtanh_(Tensor([10, 0, 1],"float32"), -1.0, 1.0, )
paddle.nn.functional.hardtanh_(Tensor([10, 20, 0],"float32"), -1.0, 1.0, )
paddle.nn.functional.leaky_relu_(Tensor([0, 20, 1],"float32"), 0.01, )
paddle.nn.functional.leaky_relu_(Tensor([10, 0, 1],"float32"), 0.01, )
paddle.nn.functional.leaky_relu_(Tensor([10, 20, 0],"float32"), 0.01, )
paddle.nn.functional.normalize(Tensor([0],"float32"), axis=0, epsilon=1e-10, )
paddle.nn.functional.normalize(Tensor([0],"float32"), axis=0, epsilon=1e-12, )
paddle.nn.functional.normalize(Tensor([0, 10],"float32"), )
paddle.nn.functional.normalize(Tensor([10, 0],"float32"), )
paddle.nn.functional.normalize(Tensor([0, 10],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([10, 0],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([0, 10],"float32"), p=1.5, )
paddle.nn.functional.normalize(Tensor([10, 0],"float32"), p=1.5, )
paddle.nn.functional.normalize(Tensor([0, 5],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([0, 27],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([2, 0],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([0, 8, 7, 10],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([2, 0, 7, 10],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([2, 8, 0, 10],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([2, 8, 7, 0],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([0],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([0, 18],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([3, 0],"float32"), axis=1, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 1],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 1],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([100],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 0],"float32"), y=Tensor([100, 1],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(x=Tensor([0, 100],"float32"), y=Tensor([0, 1],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 0],"float32"), y=Tensor([100, 0],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(x=Tensor([0, 100],"float32"), y=Tensor([100],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.relu_(Tensor([0, 20, 1],"float32"), )
paddle.nn.functional.relu_(Tensor([10, 0, 1],"float32"), )
paddle.nn.functional.relu_(Tensor([10, 20, 0],"float32"), )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([0, 5],"float64"), positive=Tensor([0, 5],"float64"), negative=Tensor([0, 5],"float64"), distance_function=None, margin=0.3, swap=False, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 0],"float64"), positive=Tensor([5, 0],"float64"), negative=Tensor([5, 0],"float64"), distance_function=None, margin=0.3, swap=False, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([0, 5],"float64"), positive=Tensor([0, 5],"float64"), negative=Tensor([0, 5],"float64"), distance_function=None, margin=0.3, swap=False, reduction="none", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 0],"float64"), positive=Tensor([5, 0],"float64"), negative=Tensor([5, 0],"float64"), distance_function=None, margin=0.3, swap=False, reduction="none", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([0, 5],"float64"), positive=Tensor([0, 5],"float64"), negative=Tensor([0, 5],"float64"), distance_function=None, margin=0.3, swap=False, reduction="sum", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 0],"float64"), positive=Tensor([5, 0],"float64"), negative=Tensor([5, 0],"float64"), distance_function=None, margin=0.3, swap=False, reduction="sum", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([0, 5],"float64"), positive=Tensor([0, 5],"float64"), negative=Tensor([0, 5],"float64"), distance_function=None, margin=0.3, swap=True, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 0],"float64"), positive=Tensor([5, 0],"float64"), negative=Tensor([5, 0],"float64"), distance_function=None, margin=0.3, swap=True, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), margin=0.3, swap=False, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), margin=0.3, swap=False, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), margin=0.3, swap=False, reduction="none", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), margin=0.3, swap=False, reduction="none", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), margin=0.3, swap=False, reduction="sum", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), margin=0.3, swap=False, reduction="sum", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), margin=0.3, swap=True, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), margin=0.3, swap=True, reduction="mean", name=None, )
paddle.pdist(Tensor([0, 20],"float32"), 0, )
paddle.pdist(Tensor([10, 0],"float32"), 0, )
paddle.pdist(Tensor([0, 20],"float32"), 1.0, )
paddle.pdist(Tensor([10, 0],"float32"), 1.0, )
paddle.pdist(Tensor([0, 20],"float32"), 1.5, )
paddle.pdist(Tensor([10, 0],"float32"), 1.5, )
paddle.pdist(Tensor([0, 20],"float32"), 2.0, )
paddle.pdist(Tensor([10, 0],"float32"), 2.0, )
paddle.pdist(Tensor([0, 20],"float32"), 2.5, )
paddle.pdist(Tensor([10, 0],"float32"), 2.5, )
paddle.pdist(Tensor([0, 20],"float32"), 3.0, )
paddle.pdist(Tensor([10, 0],"float32"), 3.0, )
paddle.pdist(Tensor([0, 20],"float32"), math.inf, )
paddle.pdist(Tensor([10, 0],"float32"), math.inf, )
paddle.pdist(Tensor([0, 20],"float64"), 2.0, )
paddle.pdist(Tensor([50, 0],"float64"), 2.0, )
paddle.prod(Tensor([0, 10, 5],"complex64"), )
paddle.prod(Tensor([10, 0, 5],"complex64"), )
paddle.prod(Tensor([10, 10, 0],"complex64"), )
paddle.prod(Tensor([0, 10, 5],"complex64"), axis=1, )
paddle.prod(Tensor([10, 0, 5],"complex64"), axis=1, )
paddle.prod(Tensor([10, 10, 0],"complex64"), axis=1, )
paddle.prod(Tensor([0, 10, 5],"complex64"), axis=1, keepdim=True, )
paddle.prod(Tensor([10, 0, 5],"complex64"), axis=1, keepdim=True, )
paddle.prod(Tensor([10, 10, 0],"complex64"), axis=1, keepdim=True, )
paddle.prod(Tensor([0, 10, 5],"float32"), )
paddle.prod(Tensor([10, 0, 5],"float32"), )
paddle.prod(Tensor([10, 10, 0],"float32"), )
paddle.prod(Tensor([0, 10, 5],"float32"), axis=1, )
paddle.prod(Tensor([10, 0, 5],"float32"), axis=1, )
paddle.prod(Tensor([10, 10, 0],"float32"), axis=1, )
paddle.prod(Tensor([0, 10, 5],"float32"), axis=-1, )
paddle.prod(Tensor([10, 0, 5],"float32"), axis=-1, )
paddle.prod(Tensor([10, 10, 0],"float32"), axis=-1, )
paddle.prod(Tensor([0, 10, 5],"float32"), axis=1, keepdim=True, )
paddle.prod(Tensor([10, 0, 5],"float32"), axis=1, keepdim=True, )
paddle.prod(Tensor([10, 10, 0],"float32"), axis=1, keepdim=True, )
paddle.prod(Tensor([0],"float32"), axis=0, )
paddle.row_stack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0],"float64"),], )
paddle.row_stack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.row_stack(list[Tensor([0],"float64"),], )
paddle.row_stack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.row_stack(list[Tensor([0, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 0],"float64"),], )
paddle.row_stack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 0],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], )
paddle.sgn(Tensor([0, 4],"complex128"), )
paddle.sgn(Tensor([2, 0],"complex128"), )
paddle.sgn(Tensor([0, 4],"complex64"), )
paddle.sgn(Tensor([2, 0],"complex64"), )
paddle.std(Tensor([0, 84],"float32"), axis=0, )
paddle.std(Tensor([120, 0],"float32"), axis=0, )
paddle.std(Tensor([0, 150],"float32"), axis=1, )
paddle.std(Tensor([16, 0],"float32"), axis=1, )
paddle.std(Tensor([0],"float32"), )
paddle.std(Tensor([0, 5],"float32"), )
paddle.std(Tensor([3, 0],"float32"), )
paddle.std(Tensor([0, 120],"float32"), axis=0, )
paddle.std(Tensor([400, 0],"float32"), axis=0, )
paddle.std(Tensor([0, 9],"float32"), axis=1, )
paddle.std(Tensor([6, 0],"float32"), axis=1, )
paddle.std(Tensor([0, 10],"float32"), axis=0, )
paddle.std(Tensor([84, 0],"float32"), axis=0, )
paddle.tensordot(Tensor([0, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 0, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 0],"float32"), Tensor([4, 4, 5],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([0, 4, 5],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 0, 5],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([0, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 0, 4],"float64"), Tensor([4, 4, 5],"float64"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 0],"float64"), Tensor([4, 4, 5],"float64"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([0, 4, 5],"float64"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 0, 5],"float64"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), Tensor([1],"int64"), )
paddle.trapezoid(Tensor([0],"float32"), dx=2.0, )
paddle.trapezoid(y=Tensor([4, 0],"float16"), x=Tensor([4, 4],"float16"), )
paddle.trapezoid(y=Tensor([0, 4],"float16"), x=Tensor([0, 4],"float16"), )
paddle.trapezoid(y=Tensor([4, 0],"float16"), x=Tensor([4, 0],"float16"), )
paddle.unflatten(x=Tensor([4, 0, 16],"float32"), axis=0, shape=list[-1,], )
paddle.unflatten(x=Tensor([4, 6, 0],"float32"), axis=0, shape=list[-1,], )
paddle.unflatten(x=Tensor([4, 0, 16],"float32"), axis=0, shape=tuple(-1,), )
paddle.unflatten(x=Tensor([4, 6, 0],"float32"), axis=0, shape=tuple(-1,), )
paddle.unflatten(x=Tensor([4, 0, 16],"float32"), axis=0, shape=tuple(-1,2,), )
paddle.unflatten(x=Tensor([4, 6, 0],"float32"), axis=0, shape=tuple(-1,2,), )
paddle.unflatten(x=Tensor([0, 6, 16],"float32"), axis=-1, shape=list[-1,2,], )
paddle.unflatten(x=Tensor([4, 0, 16],"float32"), axis=-1, shape=list[-1,2,], )
paddle.var(Tensor([0, 256],"float32"), axis=-1, keepdim=True, )
paddle.var(Tensor([16, 0],"float32"), axis=-1, keepdim=True, )
paddle.var(Tensor([0, 256],"float64"), axis=-1, keepdim=True, )
paddle.var(Tensor([16, 0],"float64"), axis=-1, keepdim=True, )
paddle.var(Tensor([0],"float32"), )
paddle.vstack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.vstack(list[Tensor([0, 1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.vstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 0],"float64"),], )
paddle.vstack(list[Tensor([0, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.vstack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 0],"float64"),], )
paddle.vstack(list[Tensor([0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.vstack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0],"float64"),], )
paddle.vstack(list[Tensor([0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.vstack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 0],"float64"),], )
paddle.vstack(list[Tensor([0, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], )
paddle.vstack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 4, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 0, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 0, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 2, 0],"float64"),], )
paddle.vstack(list[Tensor([0, 4, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 0, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], )
paddle.vstack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 4, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 0, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 0],"float64"),], )
paddle.vstack(list[Tensor([0, 4, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], )
paddle.vstack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], name=None, )
