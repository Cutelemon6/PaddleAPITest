paddle.Tensor.__abs__(Tensor([10, 228170138],"float32"), )
paddle.Tensor.__abs__(Tensor([2228225, 1024],"float32"), )
paddle.Tensor.__abs__(Tensor([2281701379],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 1],"float32"), Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 2281701379],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 2281701379],"float32"), Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1024],"float32"), Tensor([1, 2228225, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1024],"float32"), Tensor([2228225, 1, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1024],"float32"), Tensor([2228225, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 2281701379, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 2281701379, 1],"float32"), Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 2281701379],"float32"), 1e-05, )
paddle.Tensor.__add__(Tensor([1, 1, 2281701379],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([1, 1, 2281701379],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([1, 1, 2281701379],"float32"), Tensor([1, 1, 2281701379],"float32"), )
paddle.Tensor.__add__(Tensor([1, 10, 114085069, 2],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([1, 10, 15, 15211343],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([1, 10, 228170138],"float32"), -0.5, )
paddle.Tensor.__add__(Tensor([1, 108, 6, 49, 49],"float32"), Tensor([8800, 108, 1, 49, 49],"float32"), )
paddle.Tensor.__add__(Tensor([1, 108, 6, 49, 71861],"float32"), Tensor([1, 108, 1, 49, 71861],"float32"), )
paddle.Tensor.__add__(Tensor([1, 108, 6, 71861, 49],"float32"), Tensor([1, 108, 1, 71861, 49],"float32"), )
paddle.Tensor.__add__(Tensor([1, 108, 8800, 49, 49],"float32"), Tensor([1, 108, 1, 49, 49],"float32"), )
paddle.Tensor.__add__(Tensor([1, 108, 8800, 49, 49],"float32"), Tensor([1, 108, 8800, 49, 49],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 1, 4, 1, 2],"float32"), Tensor([1, 11, 6482107, 4, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 1, 4, 1, 2],"float32"), Tensor([1, 11, 8, 4, 3241054, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 1, 4, 1, 2],"float32"), Tensor([810264, 11, 8, 4, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 10, 20742740],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([1, 11, 20742740, 10],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([1, 12, 1, 190141782],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 190141782, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 190141782],"float32"), 0.0, )
paddle.Tensor.__add__(Tensor([1, 1444, 1, 1580126],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([1, 1444, 1580126, 1],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([1, 158386, 6, 49, 49],"float32"), Tensor([1, 158386, 1, 49, 49],"float32"), )
paddle.Tensor.__add__(Tensor([1, 192, 11883862],"float32"), 1.0, )
paddle.Tensor.__add__(Tensor([1, 2, 1140850690],"float32"), 1, )
paddle.Tensor.__add__(Tensor([1, 20, 114085069],"float32"), 1e-07, )
paddle.Tensor.__add__(Tensor([1, 221848, 10285],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([1, 2228225, 1024],"float32"), Tensor([1, 1, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([1, 2228225, 1024],"float32"), Tensor([1, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([1, 2228225, 1024],"float32"), Tensor([1, 2228225, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([1, 2281701379, 1, 1],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([1, 2281701379, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 2281701379, 1, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 2281701379, 1, 1],"float32"), Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 2281701379, 1],"float32"), 1e-05, )
paddle.Tensor.__add__(Tensor([1, 2281701379, 1],"float32"), 1e-07, )
paddle.Tensor.__add__(Tensor([1, 2281701379],"float32"), 1e-08, )
paddle.Tensor.__add__(Tensor([1, 2281701379],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([1, 2281701379],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([1, 2281701379],"int32"), 0, )
paddle.Tensor.__add__(Tensor([1, 228170138, 1, 10],"float32"), 2.0, )
paddle.Tensor.__add__(Tensor([1, 22817014, 10, 10],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([1, 22817014, 100],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([1, 23047489, 99],"float32"), Tensor([99],"float32"), )
paddle.Tensor.__add__(Tensor([1, 253522376, 9],"float32"), 0.0, )
paddle.Tensor.__add__(Tensor([1, 280, 108653, 25, 3],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([1, 280, 376, 25, 867],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([1, 280, 376, 7225, 3],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([1, 285212673, 8],"float32"), -0.5, )
paddle.Tensor.__add__(Tensor([1, 3, 1, 16, 1, 32, 1485483],"float32"), 2, )
paddle.Tensor.__add__(Tensor([1, 3, 1, 16, 1, 47535446, 1],"float32"), 2, )
paddle.Tensor.__add__(Tensor([1, 3, 1, 16, 1485483, 32, 1],"float32"), 2, )
paddle.Tensor.__add__(Tensor([1, 3, 1, 23767723, 1, 32, 1],"float32"), 2, )
paddle.Tensor.__add__(Tensor([1, 3, 126761188, 6],"float32"), Tensor([6],"float32"), )
paddle.Tensor.__add__(Tensor([1, 3, 1485483, 16, 1, 32, 1],"float32"), 2, )
paddle.Tensor.__add__(Tensor([1, 3, 95070891, 2, 4],"float32"), Tensor([2, 4],"float32"), )
paddle.Tensor.__add__(Tensor([1, 4456449, 1, 16, 1, 32, 1],"float32"), 2, )
paddle.Tensor.__add__(Tensor([1, 5, 1, 456340276],"float32"), 2.0, )
paddle.Tensor.__add__(Tensor([1, 5, 45634028, 10],"float32"), 2.0, )
paddle.Tensor.__add__(Tensor([1, 570425345, 4],"float32"), 1.0, )
paddle.Tensor.__add__(Tensor([1, 57042535, 5, 2, 4],"float32"), Tensor([2, 4],"float32"), )
paddle.Tensor.__add__(Tensor([1, 760567127, 3],"float32"), 1, )
paddle.Tensor.__add__(Tensor([1, 76056713, 15, 2],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([1, 76056713, 5, 6],"float32"), Tensor([6],"float32"), )
paddle.Tensor.__add__(Tensor([1, 80912, 376, 25, 3],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([10, 20, 11408507],"float32"), 2, )
paddle.Tensor.__add__(Tensor([10, 228170138, 1],"float32"), 2, )
paddle.Tensor.__add__(Tensor([10, 228170138],"float32"), 0.1, )
paddle.Tensor.__add__(Tensor([10, 228170138],"float32"), 0.5723649429247001, )
paddle.Tensor.__add__(Tensor([10, 228170138],"float32"), 0.9189385332046727, )
paddle.Tensor.__add__(Tensor([10, 228170138],"float32"), 160.0, )
paddle.Tensor.__add__(Tensor([10, 228170138],"float32"), 80.0, )
paddle.Tensor.__add__(Tensor([10, 4, 7, 8148934],"float32"), 0, )
paddle.Tensor.__add__(Tensor([10, 4, 8148934, 7],"float32"), 0, )
paddle.Tensor.__add__(Tensor([10, 4656534, 7, 7],"float32"), 0, )
paddle.Tensor.__add__(Tensor([100, 200, 214749],"float16"), 2.0, )
paddle.Tensor.__add__(Tensor([100, 22817014],"float32"), 40.0, )
paddle.Tensor.__add__(Tensor([100, 429497, 100],"float16"), 2.0, )
paddle.Tensor.__add__(Tensor([1000, 4294968],"float16"), 0.0, )
paddle.Tensor.__add__(Tensor([1003, 2274877],"float32"), 1e-07, )
paddle.Tensor.__add__(Tensor([104, 21939437],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([1073741825, 4],"float16"), 0.7, )
paddle.Tensor.__add__(Tensor([10],"float32"), Tensor([228170138, 10],"float32"), )
paddle.Tensor.__add__(Tensor([1124, 2029984],"float32"), 0.23000000000000004, )
paddle.Tensor.__add__(Tensor([114085069, 20, 1],"float32"), 1e-07, )
paddle.Tensor.__add__(Tensor([114085069, 20, 1],"float32"), 2, )
paddle.Tensor.__add__(Tensor([114085069, 20],"float32"), 0.5723649429247001, )
paddle.Tensor.__add__(Tensor([114085069, 4, 5],"float32"), 3, )
paddle.Tensor.__add__(Tensor([114085069, 4, 5],"float32"), 4, )
paddle.Tensor.__add__(Tensor([114085069, 4, 5],"float32"), 5, )
paddle.Tensor.__add__(Tensor([1140850690, 1, 2, 1],"float32"), 1e-15, )
paddle.Tensor.__add__(Tensor([1140850690, 2],"float32"), 0.9189385332046727, )
paddle.Tensor.__add__(Tensor([1140850690, 2],"float32"), 2.0, )
paddle.Tensor.__add__(Tensor([11606, 3, 256, 256],"float32"), 1e-12, )
paddle.Tensor.__add__(Tensor([11641334, 4, 7, 7],"float32"), 0, )
paddle.Tensor.__add__(Tensor([12, 1901418, 10, 10, 1],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([12, 3, 10, 10, 633806],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([12, 3, 10, 6338060, 1],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([12, 3, 6338060, 10, 1],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([1200, 1901418, 1],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([1200, 4, 475355],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([124, 128, 2568, 56],"float32"), Tensor([128, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([124, 128, 56, 2568],"float32"), Tensor([128, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([128, 128, 2],"float32"), Tensor([69633, 128, 128, 2],"float32"), )
paddle.Tensor.__add__(Tensor([128, 17825793],"float32"), -3.141592653589793, )
paddle.Tensor.__add__(Tensor([128, 17825793],"float32"), 20.0, )
paddle.Tensor.__add__(Tensor([12988, 175678],"float32"), -39.6, )
paddle.Tensor.__add__(Tensor([12988, 175678],"float32"), 0.08, )
paddle.Tensor.__add__(Tensor([13, 175515491, 1],"float32"), 1e-12, )
paddle.Tensor.__add__(Tensor([13, 175515491],"int32"), 7, )
paddle.Tensor.__add__(Tensor([13, 2, 16, 4, 1371215],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([13, 2, 16, 5484860, 1],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([13, 2, 21939437, 4, 1],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([13, 2742430, 16, 4, 1],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([13, 7, 25073642],"float32"), 1e-12, )
paddle.Tensor.__add__(Tensor([131073, 128, 16, 16],"float16"), 3, )
paddle.Tensor.__add__(Tensor([14, 162978670],"float32"), 13.0, )
paddle.Tensor.__add__(Tensor([1431655766, 3],"float16"), 0.5772156649015329, )
paddle.Tensor.__add__(Tensor([1467, 108, 6, 49, 49],"float32"), Tensor([1, 108, 1, 49, 49],"float32"), )
paddle.Tensor.__add__(Tensor([1467, 108, 6, 49, 49],"float32"), Tensor([1467, 108, 1, 49, 49],"float32"), )
paddle.Tensor.__add__(Tensor([1485483, 3, 1, 16, 1, 32, 1],"float32"), 2, )
paddle.Tensor.__add__(Tensor([1580126, 1444, 1, 1],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([16, 1, 1, 142606337],"float32"), 1e-08, )
paddle.Tensor.__add__(Tensor([16, 1, 142606337, 1],"float32"), 1e-08, )
paddle.Tensor.__add__(Tensor([16, 142606337, 1, 1],"float32"), 1e-08, )
paddle.Tensor.__add__(Tensor([16, 142606337],"float32"), 0.05, )
paddle.Tensor.__add__(Tensor([16, 142606337],"float32"), 1e-05, )
paddle.Tensor.__add__(Tensor([16, 142606337],"float32"), 99, )
paddle.Tensor.__add__(Tensor([162978670, 14],"float32"), 13.0, )
paddle.Tensor.__add__(Tensor([16800, 135816],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([170628, 13373],"float32"), -51.1, )
paddle.Tensor.__add__(Tensor([17825793, 128],"float32"), 1e-08, )
paddle.Tensor.__add__(Tensor([17825793, 128],"float32"), 20.0, )
paddle.Tensor.__add__(Tensor([17825793, 2, 16, 4, 1],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([187679, 12158],"float32"), 1.0, )
paddle.Tensor.__add__(Tensor([190141782, 12, 1, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([190141782, 12],"float32"), 5, )
paddle.Tensor.__add__(Tensor([19014179, 3, 5, 2, 4],"float32"), Tensor([2, 4],"float32"), )
paddle.Tensor.__add__(Tensor([19840882, 1, 115],"float32"), 0.0001, )
paddle.Tensor.__add__(Tensor([2, 1, 1140850690],"float32"), 0.0001, )
paddle.Tensor.__add__(Tensor([2, 1, 512, 4, 557057],"float32"), 1e-08, )
paddle.Tensor.__add__(Tensor([2, 1, 512, 557057, 4],"float32"), 1e-08, )
paddle.Tensor.__add__(Tensor([2, 1, 71303169, 4, 4],"float32"), 1e-08, )
paddle.Tensor.__add__(Tensor([2, 1140850690],"float32"), 0.4, )
paddle.Tensor.__add__(Tensor([2, 1140850690],"float32"), 0.5723649429247004, )
paddle.Tensor.__add__(Tensor([2, 1140850690],"float32"), 1.1447298858494002, )
paddle.Tensor.__add__(Tensor([2, 1140850690],"float32"), 1e-16, )
paddle.Tensor.__add__(Tensor([2, 1140850690],"float32"), 2.0, )
paddle.Tensor.__add__(Tensor([2, 1140850690],"int32"), 128, )
paddle.Tensor.__add__(Tensor([2, 1140850690],"int64"), 1e-15, )
paddle.Tensor.__add__(Tensor([2, 139265, 512, 4, 4],"float32"), 1e-08, )
paddle.Tensor.__add__(Tensor([2, 142606337, 8],"float32"), -0.2, )
paddle.Tensor.__add__(Tensor([2, 142606337, 8],"float32"), 4.0, )
paddle.Tensor.__add__(Tensor([2, 16, 71303169],"float32"), 99, )
paddle.Tensor.__add__(Tensor([2, 2, 570425345],"float32"), 1.5, )
paddle.Tensor.__add__(Tensor([2, 2147483649],"float16"), 0.7, )
paddle.Tensor.__add__(Tensor([2, 2228225, 16, 32],"float32"), 99, )
paddle.Tensor.__add__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 660215],"float32"), 1, )
paddle.Tensor.__add__(Tensor([2, 3, 4, 2, 3, 4, 2, 495161, 4],"float32"), 1, )
paddle.Tensor.__add__(Tensor([2, 3, 4, 2, 3, 4, 330108, 3, 4],"float32"), 1, )
paddle.Tensor.__add__(Tensor([2, 3, 4, 2, 3, 660215, 2, 3, 4],"float32"), 1, )
paddle.Tensor.__add__(Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"float32"), 1, )
paddle.Tensor.__add__(Tensor([2, 3, 4, 330108, 3, 4, 2, 3, 4],"float32"), 1, )
paddle.Tensor.__add__(Tensor([2, 3, 660215, 2, 3, 4, 2, 3, 4],"float32"), 1, )
paddle.Tensor.__add__(Tensor([2, 35651585, 32],"float32"), 99, )
paddle.Tensor.__add__(Tensor([2, 3],"float32"), Tensor([380283564, 2, 3],"float32"), )
paddle.Tensor.__add__(Tensor([2, 4, 134217729, 2, 2],"float16"), Tensor([4, 1, 1, 1],"float16"), )
paddle.Tensor.__add__(Tensor([2, 4, 3, 2, 89478486],"float16"), Tensor([4, 1, 1, 1],"float16"), )
paddle.Tensor.__add__(Tensor([2, 4, 3, 89478486, 2],"float16"), Tensor([4, 1, 1, 1],"float16"), )
paddle.Tensor.__add__(Tensor([2, 495161, 4, 2, 3, 4, 2, 3, 4],"float32"), 1, )
paddle.Tensor.__add__(Tensor([2, 570425345, 2],"float32"), 1.5, )
paddle.Tensor.__add__(Tensor([2, 8, 142606337],"float32"), -0.2, )
paddle.Tensor.__add__(Tensor([2, 8, 142606337],"float32"), 4.0, )
paddle.Tensor.__add__(Tensor([2, 8, 16, 8912897],"float32"), 99, )
paddle.Tensor.__add__(Tensor([2, 8, 4456449, 32],"float32"), 99, )
paddle.Tensor.__add__(Tensor([2, 9920441, 115],"float32"), 0.0001, )
paddle.Tensor.__add__(Tensor([2074274, 11, 10, 10],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([21126865, 12, 9],"float32"), 0.0, )
paddle.Tensor.__add__(Tensor([2147483649, 2],"float16"), 0.0, )
paddle.Tensor.__add__(Tensor([214749, 200, 100],"float16"), 2.0, )
paddle.Tensor.__add__(Tensor([221848, 1, 10285],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([221848, 10285],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([2228225, 1, 1024],"float32"), Tensor([1, 1, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([2228225, 1, 1024],"float32"), Tensor([1, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([2228225, 1, 1024],"float32"), Tensor([2228225, 1, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([2228225, 1024],"float32"), 0.1, )
paddle.Tensor.__add__(Tensor([2281701379, 1, 1, 1],"float32"), 1e-08, )
paddle.Tensor.__add__(Tensor([2281701379, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([2281701379, 1, 1, 1],"float32"), Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([2281701379, 1, 1],"float32"), 1e-05, )
paddle.Tensor.__add__(Tensor([2281701379, 1],"float32"), -3.141592653589793, )
paddle.Tensor.__add__(Tensor([2281701379, 1],"float32"), -39.6, )
paddle.Tensor.__add__(Tensor([2281701379, 1],"float32"), -51.1, )
paddle.Tensor.__add__(Tensor([2281701379, 1],"float32"), 0.08, )
paddle.Tensor.__add__(Tensor([2281701379, 1],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([2281701379, 1],"float32"), 1e-05, )
paddle.Tensor.__add__(Tensor([2281701379, 1],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([2281701379, 1],"int32"), 0, )
paddle.Tensor.__add__(Tensor([2281701379, 1],"int32"), 128, )
paddle.Tensor.__add__(Tensor([2281701379, 1],"int64"), 1e-15, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), -1, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), -1.78, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), -39.52, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), -6.907755278982137, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 0.01, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 0.16, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 0.23000000000000004, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 1.0, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 1.0000000000000002e-10, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 1.7170948287741004, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 1.8378770664093453, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 10, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 1e-05, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 1e-07, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 1e-11, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 1e-16, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 2, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 3, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 4, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 5, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 6, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 7, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 8, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), 9, )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.__add__(Tensor([2281701379],"int32"), 10086, )
paddle.Tensor.__add__(Tensor([2281701379],"int32"), 110, )
paddle.Tensor.__add__(Tensor([2281701379],"int64"), 0.0, )
paddle.Tensor.__add__(Tensor([2281701379],"int64"), 1e-15, )
paddle.Tensor.__add__(Tensor([228170138, 10],"float32"), 100, )
paddle.Tensor.__add__(Tensor([228170138, 10],"float32"), 160.0, )
paddle.Tensor.__add__(Tensor([228170138, 10],"float32"), 80.0, )
paddle.Tensor.__add__(Tensor([22817014, 1, 100],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([22817014, 100],"float32"), 40.0, )
paddle.Tensor.__add__(Tensor([23047489, 1, 99],"float32"), Tensor([99],"float32"), )
paddle.Tensor.__add__(Tensor([24422, 93431],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([25352238, 3, 5, 6],"float32"), Tensor([6],"float32"), )
paddle.Tensor.__add__(Tensor([278529, 1, 512, 4, 4],"float32"), 1e-08, )
paddle.Tensor.__add__(Tensor([28, 81489335],"float32"), 0.45, )
paddle.Tensor.__add__(Tensor([28, 81489335],"float32"), 4.0, )
paddle.Tensor.__add__(Tensor([285212673, 8],"float32"), -0.2, )
paddle.Tensor.__add__(Tensor([28521268, 10, 8],"float32"), -0.5, )
paddle.Tensor.__add__(Tensor([289, 280, 376, 25, 3],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([2970966, 192, 4],"float32"), 1.0, )
paddle.Tensor.__add__(Tensor([298496, 39, 14, 14, 1],"float32"), 1.7658252716064453, )
paddle.Tensor.__add__(Tensor([3, 1, 2, 380283564],"float32"), 1e-15, )
paddle.Tensor.__add__(Tensor([3, 1, 760567127, 1],"float32"), 1e-15, )
paddle.Tensor.__add__(Tensor([3, 152113426, 5],"float32"), 3, )
paddle.Tensor.__add__(Tensor([3, 152113426, 5],"float32"), 4, )
paddle.Tensor.__add__(Tensor([3, 152113426, 5],"float32"), 5, )
paddle.Tensor.__add__(Tensor([3, 380283564, 2, 1],"float32"), 1e-15, )
paddle.Tensor.__add__(Tensor([3, 3840, 198065],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([3, 4, 190141782],"float32"), 3, )
paddle.Tensor.__add__(Tensor([3, 4, 190141782],"float32"), 4, )
paddle.Tensor.__add__(Tensor([3, 4, 190141782],"float32"), 5, )
paddle.Tensor.__add__(Tensor([3, 4, 4, 5, 9507090],"float32"), 1, )
paddle.Tensor.__add__(Tensor([3, 4, 4, 6790778, 7],"float32"), 1, )
paddle.Tensor.__add__(Tensor([3, 4, 5432623, 5, 7],"float32"), 1, )
paddle.Tensor.__add__(Tensor([3, 5432623, 4, 5, 7],"float32"), 1, )
paddle.Tensor.__add__(Tensor([3, 74275, 10240],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([3, 760567127],"float32"), 100, )
paddle.Tensor.__add__(Tensor([3, 760567127],"float32"), 1e-12, )
paddle.Tensor.__add__(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), 1, )
paddle.Tensor.__add__(Tensor([32, 1, 240, 297097],"float32"), 0.00574634, )
paddle.Tensor.__add__(Tensor([32, 1, 297097, 240],"float32"), 0.00574634, )
paddle.Tensor.__add__(Tensor([32, 1238, 240, 240],"float32"), 0.00574634, )
paddle.Tensor.__add__(Tensor([32, 71303169],"float32"), 31.0, )
paddle.Tensor.__add__(Tensor([325957340, 7, 1],"float32"), 1e-12, )
paddle.Tensor.__add__(Tensor([325957340, 7],"float32"), 1e-07, )
paddle.Tensor.__add__(Tensor([32],"float32"), Tensor([10186167, 7, 32],"float32"), )
paddle.Tensor.__add__(Tensor([32],"float32"), Tensor([13, 5484860, 32],"float32"), )
paddle.Tensor.__add__(Tensor([330108, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), 1, )
paddle.Tensor.__add__(Tensor([33554433, 128],"float16"), Tensor([128],"float16"), )
paddle.Tensor.__add__(Tensor([35651585, 8, 8],"float32"), -0.2, )
paddle.Tensor.__add__(Tensor([35651585, 8, 8],"float32"), 4.0, )
paddle.Tensor.__add__(Tensor([371371, 6144],"float32"), 1e-16, )
paddle.Tensor.__add__(Tensor([380283564, 2, 3],"float32"), 1, )
paddle.Tensor.__add__(Tensor([39613, 1, 240, 240],"float32"), 0.00574634, )
paddle.Tensor.__add__(Tensor([4, 128, 16, 524289],"float16"), 3, )
paddle.Tensor.__add__(Tensor([4, 128, 524289, 16],"float16"), 3, )
paddle.Tensor.__add__(Tensor([4, 15, 3, 256, 49517],"float32"), 1e-12, )
paddle.Tensor.__add__(Tensor([4, 15, 3, 49517, 256],"float32"), 1e-12, )
paddle.Tensor.__add__(Tensor([4, 15, 581, 256, 256],"float32"), 1e-12, )
paddle.Tensor.__add__(Tensor([4, 19513, 94, 311],"float32"), 1.0, )
paddle.Tensor.__add__(Tensor([4, 2902, 3, 256, 256],"float32"), 1e-12, )
paddle.Tensor.__add__(Tensor([4, 4194305, 16, 16],"float16"), 3, )
paddle.Tensor.__add__(Tensor([4, 81, 22645, 311],"float32"), 1.0, )
paddle.Tensor.__add__(Tensor([4, 81, 94, 74918],"float32"), 1.0, )
paddle.Tensor.__add__(Tensor([4074467, 4, 4, 5, 7],"float32"), 1, )
paddle.Tensor.__add__(Tensor([421120, 25, 217],"float32"), 1e-08, )
paddle.Tensor.__add__(Tensor([421120, 5419, 1],"float32"), 1e-08, )
paddle.Tensor.__add__(Tensor([4294967297],"float16"), 0.001, )
paddle.Tensor.__add__(Tensor([4294967297],"float16"), 0.3, )
paddle.Tensor.__add__(Tensor([4294967297],"float16"), 0.5772156649015329, )
paddle.Tensor.__add__(Tensor([4294967297],"float16"), 0.9189385332046727, )
paddle.Tensor.__add__(Tensor([4294967297],"float16"), 1e-06, )
paddle.Tensor.__add__(Tensor([4456449, 16, 32],"float32"), 99, )
paddle.Tensor.__add__(Tensor([4456449, 512],"float32"), 64, )
paddle.Tensor.__add__(Tensor([45634028, 5, 1, 10],"float32"), 2.0, )
paddle.Tensor.__add__(Tensor([47535446, 48],"float32"), 47.0, )
paddle.Tensor.__add__(Tensor([48, 47535446],"float32"), 47.0, )
paddle.Tensor.__add__(Tensor([5, 456340276],"float32"), 5, )
paddle.Tensor.__add__(Tensor([5, 858993460],"float16"), 0.5772156649015329, )
paddle.Tensor.__add__(Tensor([50, 232827, 14, 14, 1],"float32"), 1.7658252716064453, )
paddle.Tensor.__add__(Tensor([50, 39, 14, 14, 5970],"float32"), 1.7658252716064453, )
paddle.Tensor.__add__(Tensor([50, 39, 14, 83579, 1],"float32"), 1.7658252716064453, )
paddle.Tensor.__add__(Tensor([50, 39, 83579, 14, 1],"float32"), 1.7658252716064453, )
paddle.Tensor.__add__(Tensor([512, 4456449],"float32"), 64, )
paddle.Tensor.__add__(Tensor([557057, 8, 16, 32],"float32"), 99, )
paddle.Tensor.__add__(Tensor([5685, 128, 56, 56],"float32"), Tensor([128, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([570425345, 2, 2],"float32"), 1.5, )
paddle.Tensor.__add__(Tensor([570425345, 4, 1],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([570425345, 4],"float32"), 0.4, )
paddle.Tensor.__add__(Tensor([59, 3840, 10240],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([64, 3, 256, 46422],"float32"), 1e-12, )
paddle.Tensor.__add__(Tensor([64, 3, 46422, 256],"float32"), 1e-12, )
paddle.Tensor.__add__(Tensor([64, 545, 256, 256],"float32"), 1e-12, )
paddle.Tensor.__add__(Tensor([69142467, 33],"float32"), 0.05, )
paddle.Tensor.__add__(Tensor([71303169, 32],"float32"), 0.23000000000000004, )
paddle.Tensor.__add__(Tensor([71303169, 32],"float32"), 31.0, )
paddle.Tensor.__add__(Tensor([71303169, 32],"float32"), 99, )
paddle.Tensor.__add__(Tensor([760567127, 3],"float32"), 0.5723649429247004, )
paddle.Tensor.__add__(Tensor([760567127, 3],"float32"), 1.0, )
paddle.Tensor.__add__(Tensor([760567127, 3],"float32"), 1.1447298858494002, )
paddle.Tensor.__add__(Tensor([760567127, 3],"float32"), 1e-12, )
paddle.Tensor.__add__(Tensor([760567127, 3],"int32"), 7, )
paddle.Tensor.__add__(Tensor([7605672, 10, 15, 2],"float32"), 0.5, )
paddle.Tensor.__add__(Tensor([7605672, 3, 10, 10, 1],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([774, 15, 3, 256, 256],"float32"), 1e-12, )
paddle.Tensor.__add__(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), 1, )
paddle.Tensor.__add__(Tensor([8, 285212673],"float32"), -0.2, )
paddle.Tensor.__add__(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), 1, )
paddle.Tensor.__add__(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), 1, )
paddle.Tensor.__add__(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), 1, )
paddle.Tensor.__add__(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), 1, )
paddle.Tensor.__add__(Tensor([81489335, 28],"float32"), 0.45, )
paddle.Tensor.__add__(Tensor([81489335, 28],"float32"), 4.0, )
paddle.Tensor.__add__(Tensor([89478486, 4, 3, 2, 2],"float16"), Tensor([4, 1, 1, 1],"float16"), )
paddle.Tensor.__add__(Tensor([91268056, 25, 1],"float32"), 1e-08, )
paddle.Tensor.__add__(Tensor([964, 81, 94, 311],"float32"), 1.0, )
paddle.Tensor.__and__(Tensor([1, 1, 1, 2281701379],"bool"), Tensor([1, 1, 1, 2281701379],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 23],"bool"), Tensor([1, 1, 99204408, 23],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 23],"bool"), Tensor([1, 99204408, 1, 23],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 23],"bool"), Tensor([99204408, 1, 1, 23],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 24],"bool"), Tensor([1, 1, 95070891, 24],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 24],"bool"), Tensor([1, 95070891, 1, 24],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 24],"bool"), Tensor([95070891, 1, 1, 24],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 25],"bool"), Tensor([1, 1, 91268056, 25],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 25],"bool"), Tensor([1, 91268056, 1, 25],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 25],"bool"), Tensor([91268056, 1, 1, 25],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 26],"bool"), Tensor([1, 1, 87757746, 26],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 26],"bool"), Tensor([1, 87757746, 1, 26],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 26],"bool"), Tensor([87757746, 1, 1, 26],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 114085069, 20],"bool"), Tensor([1, 1, 114085069, 20],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 20, 114085069],"bool"), Tensor([1, 1, 20, 114085069],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 20, 20],"bool"), Tensor([1, 5704254, 20, 20],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 20, 20],"bool"), Tensor([5704254, 1, 20, 20],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 87757746, 26],"bool"), Tensor([1, 1, 1, 26],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 87757746, 26],"bool"), Tensor([1, 1, 87757746, 26],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 91268056, 25],"bool"), Tensor([1, 1, 1, 25],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 91268056, 25],"bool"), Tensor([1, 1, 91268056, 25],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 95070891, 24],"bool"), Tensor([1, 1, 1, 24],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 95070891, 24],"bool"), Tensor([1, 1, 95070891, 24],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 99204408, 23],"bool"), Tensor([1, 1, 1, 23],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 99204408, 23],"bool"), Tensor([1, 1, 99204408, 23],"bool"), )
paddle.Tensor.__and__(Tensor([1, 106106, 21504],"bool"), Tensor([1, 106106, 21504],"bool"), )
paddle.Tensor.__and__(Tensor([1, 25, 21504],"bool"), Tensor([4245, 25, 21504],"bool"), )
paddle.Tensor.__and__(Tensor([1, 25, 91268056],"bool"), Tensor([1, 25, 91268056],"bool"), )
paddle.Tensor.__and__(Tensor([1, 36828, 4],"bool"), Tensor([15489, 36828, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 36828, 61956],"bool"), Tensor([1, 36828, 61956],"bool"), )
paddle.Tensor.__and__(Tensor([1, 38367, 4],"bool"), Tensor([14868, 38367, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 38367, 59471],"bool"), Tensor([1, 38367, 59471],"bool"), )
paddle.Tensor.__and__(Tensor([1, 570425345, 4],"bool"), Tensor([1, 570425345, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 5704254, 20, 20],"bool"), Tensor([1, 1, 20, 20],"bool"), )
paddle.Tensor.__and__(Tensor([1, 5704254, 20, 20],"bool"), Tensor([1, 5704254, 20, 20],"bool"), )
paddle.Tensor.__and__(Tensor([1, 6380, 357634],"bool"), Tensor([1, 6380, 357634],"bool"), )
paddle.Tensor.__and__(Tensor([1, 6380, 4],"bool"), Tensor([89409, 6380, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 8550, 266866],"bool"), Tensor([1, 8550, 266866],"bool"), )
paddle.Tensor.__and__(Tensor([1, 8550, 4],"bool"), Tensor([66717, 8550, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 87757746, 1, 26],"bool"), Tensor([1, 1, 1, 26],"bool"), )
paddle.Tensor.__and__(Tensor([1, 87757746, 1, 26],"bool"), Tensor([1, 87757746, 1, 26],"bool"), )
paddle.Tensor.__and__(Tensor([1, 91268056, 1, 25],"bool"), Tensor([1, 1, 1, 25],"bool"), )
paddle.Tensor.__and__(Tensor([1, 91268056, 1, 25],"bool"), Tensor([1, 91268056, 1, 25],"bool"), )
paddle.Tensor.__and__(Tensor([1, 95070891, 1, 24],"bool"), Tensor([1, 1, 1, 24],"bool"), )
paddle.Tensor.__and__(Tensor([1, 95070891, 1, 24],"bool"), Tensor([1, 95070891, 1, 24],"bool"), )
paddle.Tensor.__and__(Tensor([1, 99204408, 1, 23],"bool"), Tensor([1, 1, 1, 23],"bool"), )
paddle.Tensor.__and__(Tensor([1, 99204408, 1, 23],"bool"), Tensor([1, 99204408, 1, 23],"bool"), )
paddle.Tensor.__and__(Tensor([1140850690, 2],"bool"), Tensor([1140850690, 2],"bool"), )
paddle.Tensor.__and__(Tensor([142606337, 16],"bool"), Tensor([142606337, 16],"bool"), )
paddle.Tensor.__and__(Tensor([14868, 38367, 4],"bool"), Tensor([1, 38367, 4],"bool"), )
paddle.Tensor.__and__(Tensor([14868, 38367, 4],"bool"), Tensor([14868, 38367, 4],"bool"), )
paddle.Tensor.__and__(Tensor([15489, 36828, 4],"bool"), Tensor([1, 36828, 4],"bool"), )
paddle.Tensor.__and__(Tensor([15489, 36828, 4],"bool"), Tensor([15489, 36828, 4],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1140850690],"bool"), Tensor([2, 1140850690],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2281701379],"bool"), Tensor([2281701379],"bool"), )
paddle.Tensor.__and__(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.Tensor.__and__(Tensor([228170138, 10],"bool"), Tensor([228170138, 10],"bool"), )
paddle.Tensor.__and__(Tensor([285212673, 8],"bool"), Tensor([285212673, 8],"bool"), )
paddle.Tensor.__and__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([4245, 25, 21504],"bool"), Tensor([1, 25, 21504],"bool"), )
paddle.Tensor.__and__(Tensor([4245, 25, 21504],"bool"), Tensor([4245, 25, 21504],"bool"), )
paddle.Tensor.__and__(Tensor([456340276, 5],"bool"), Tensor([456340276, 5],"bool"), )
paddle.Tensor.__and__(Tensor([5704254, 1, 20, 20],"bool"), Tensor([1, 1, 20, 20],"bool"), )
paddle.Tensor.__and__(Tensor([5704254, 1, 20, 20],"bool"), Tensor([5704254, 1, 20, 20],"bool"), )
paddle.Tensor.__and__(Tensor([66717, 8550, 4],"bool"), Tensor([1, 8550, 4],"bool"), )
paddle.Tensor.__and__(Tensor([66717, 8550, 4],"bool"), Tensor([66717, 8550, 4],"bool"), )
paddle.Tensor.__and__(Tensor([87757746, 1, 1, 26],"bool"), Tensor([1, 1, 1, 26],"bool"), )
paddle.Tensor.__and__(Tensor([87757746, 1, 1, 26],"bool"), Tensor([87757746, 1, 1, 26],"bool"), )
paddle.Tensor.__and__(Tensor([89409, 6380, 4],"bool"), Tensor([1, 6380, 4],"bool"), )
paddle.Tensor.__and__(Tensor([89409, 6380, 4],"bool"), Tensor([89409, 6380, 4],"bool"), )
paddle.Tensor.__and__(Tensor([91268056, 1, 1, 25],"bool"), Tensor([1, 1, 1, 25],"bool"), )
paddle.Tensor.__and__(Tensor([91268056, 1, 1, 25],"bool"), Tensor([91268056, 1, 1, 25],"bool"), )
paddle.Tensor.__and__(Tensor([95070891, 1, 1, 24],"bool"), Tensor([1, 1, 1, 24],"bool"), )
paddle.Tensor.__and__(Tensor([95070891, 1, 1, 24],"bool"), Tensor([95070891, 1, 1, 24],"bool"), )
paddle.Tensor.__and__(Tensor([99204408, 1, 1, 23],"bool"), Tensor([1, 1, 1, 23],"bool"), )
paddle.Tensor.__and__(Tensor([99204408, 1, 1, 23],"bool"), Tensor([99204408, 1, 1, 23],"bool"), )
paddle.Tensor.__div__(Tensor([4456449, 16, 32],"float32"), 2, )
paddle.Tensor.__div__(Tensor([8, 16, 17825793],"float32"), 2, )
paddle.Tensor.__div__(Tensor([8, 8912897, 32],"float32"), 2, )
paddle.Tensor.__eq__(Tensor([1, 1, 1, 2281701379],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([1, 1, 10, 16],"float32"), Tensor([1, 14260634, 10, 16],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1, 10, 16],"float32"), Tensor([14260634, 1, 10, 16],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1, 10, 228170138],"float32"), Tensor([1, 1, 10, 228170138],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1, 142606337, 16],"float32"), Tensor([1, 1, 142606337, 16],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1, 2048, 2048],"float16"), Tensor([1, 1025, 2048, 2048],"float16"), )
paddle.Tensor.__eq__(Tensor([1, 1, 2048, 2048],"float16"), Tensor([1025, 1, 2048, 2048],"float16"), )
paddle.Tensor.__eq__(Tensor([1, 1, 2048, 2097153],"float16"), Tensor([1, 1, 2048, 2097153],"float16"), )
paddle.Tensor.__eq__(Tensor([1, 1, 2097153, 2048],"float16"), Tensor([1, 1, 2097153, 2048],"float16"), )
paddle.Tensor.__eq__(Tensor([1, 1, 2281701379, 1],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([1, 1, 2281701379],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([1, 10, 228170138],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([1, 1000],"float32"), Tensor([2281702, 1000],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 101, 22591103],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([1, 102, 22369622],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([1, 1024, 1, 1],"float32"), Tensor([1, 1024, 1, 2228225],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 1, 1],"float32"), Tensor([1, 1024, 2228225, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 1, 1],"float32"), Tensor([2228225, 1024, 1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 1, 2228225],"float32"), Tensor([1, 1024, 1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 1, 2228225],"float32"), Tensor([1, 1024, 1, 2228225],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 1114113, 2],"float32"), Tensor([1, 1024, 1114113, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 2, 1114113],"float32"), Tensor([1, 1024, 2, 1114113],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 2, 2],"float32"), Tensor([557057, 1024, 2, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 2228225, 1],"float32"), Tensor([1, 1024, 1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 2228225, 1],"float32"), Tensor([1, 1024, 2228225, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 2228225],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([1, 1025, 2048, 2048],"float16"), Tensor([1, 1, 2048, 2048],"float16"), )
paddle.Tensor.__eq__(Tensor([1, 1025, 2048, 2048],"float16"), Tensor([1, 1025, 2048, 2048],"float16"), )
paddle.Tensor.__eq__(Tensor([1, 128, 10, 10],"float32"), Tensor([178258, 128, 10, 10],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 128, 10, 1782580],"float32"), Tensor([1, 128, 10, 1782580],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 128, 1782580, 10],"float32"), Tensor([1, 128, 1782580, 10],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 14260634, 10, 16],"float32"), Tensor([1, 1, 10, 16],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 14260634, 10, 16],"float32"), Tensor([1, 14260634, 10, 16],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 2200291, 1037],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([1, 2228225, 1024],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([1, 2281701379, 1, 1],"float32"), Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 2281701379, 1, 1],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([1, 2281701379, 1],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([1, 2281701379],"float32"), 5, )
paddle.Tensor.__eq__(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 2281701379],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([1, 2281701379],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([1, 2281701379],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([1, 2281701379],"int64"), 2, )
paddle.Tensor.__eq__(Tensor([1, 2281701379],"int64"), 255, )
paddle.Tensor.__eq__(Tensor([1, 2281701379],"int64"), 3, )
paddle.Tensor.__eq__(Tensor([1, 2281701379],"int64"), 98, )
paddle.Tensor.__eq__(Tensor([1, 22817014, 10, 10],"float32"), Tensor([1, 22817014, 10, 10],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 4456449, 512],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([1, 4456449, 512],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([1, 496, 4600205],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([1, 496, 4600205],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([1, 512, 4456449],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([1, 512, 4456449],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([1, 570425345, 2, 2],"float32"), Tensor([1, 570425345, 2, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 800, 2852127],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([10, 1, 457255, 499],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([10, 1, 499, 457255],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([10, 10, 42949673],"float16"), -1.0, )
paddle.Tensor.__eq__(Tensor([10, 10, 42949673],"float16"), 1.0, )
paddle.Tensor.__eq__(Tensor([10, 85899346, 5],"float16"), -1.0, )
paddle.Tensor.__eq__(Tensor([10, 85899346, 5],"float16"), 1.0, )
paddle.Tensor.__eq__(Tensor([10, 917, 499, 499],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([100, 22817014],"float32"), math.inf, )
paddle.Tensor.__eq__(Tensor([1025, 1, 2048, 2048],"float16"), Tensor([1, 1, 2048, 2048],"float16"), )
paddle.Tensor.__eq__(Tensor([1025, 1, 2048, 2048],"float16"), Tensor([1025, 1, 2048, 2048],"float16"), )
paddle.Tensor.__eq__(Tensor([103713700, 22],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([114085069, 20],"float32"), -3.4028234663852886e+38, )
paddle.Tensor.__eq__(Tensor([114085069, 20],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([114085069, 20],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([119304648, 3, 3, 4],"float16"), -1.0, )
paddle.Tensor.__eq__(Tensor([119304648, 3, 3, 4],"float16"), 1.0, )
paddle.Tensor.__eq__(Tensor([12, 190141782],"int32"), 49407, )
paddle.Tensor.__eq__(Tensor([12, 190141782],"int32"), Tensor([1],"int32"), )
paddle.Tensor.__eq__(Tensor([120089547, 19],"float32"), -3.4028234663852886e+38, )
paddle.Tensor.__eq__(Tensor([13, 175515491, 1],"int32"), Tensor([13, 1, 7],"int32"), )
paddle.Tensor.__eq__(Tensor([13, 175515491, 1],"int64"), Tensor([13, 1, 7],"int64"), )
paddle.Tensor.__eq__(Tensor([13, 175515491],"int32"), -100, )
paddle.Tensor.__eq__(Tensor([13, 7, 1],"int32"), Tensor([13, 1, 175515491],"int32"), )
paddle.Tensor.__eq__(Tensor([13, 7, 1],"int64"), Tensor([13, 1, 175515491],"int64"), )
paddle.Tensor.__eq__(Tensor([13, 7, 25073642],"int32"), Tensor([13, 1, 25073642],"int32"), )
paddle.Tensor.__eq__(Tensor([13, 7, 25073642],"int64"), Tensor([13, 1, 25073642],"int64"), )
paddle.Tensor.__eq__(Tensor([134217729, 17],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([14, 162978670],"float32"), 1.0, )
paddle.Tensor.__eq__(Tensor([14, 162978670],"int32"), 98, )
paddle.Tensor.__eq__(Tensor([14, 162978670],"int64"), 255, )
paddle.Tensor.__eq__(Tensor([14, 162978670],"int64"), 98, )
paddle.Tensor.__eq__(Tensor([142606337, 16],"int64"), 3, )
paddle.Tensor.__eq__(Tensor([142606337, 16],"int64"), 4, )
paddle.Tensor.__eq__(Tensor([14260634, 1, 10, 16],"float32"), Tensor([1, 1, 10, 16],"float32"), )
paddle.Tensor.__eq__(Tensor([14260634, 1, 10, 16],"float32"), Tensor([14260634, 1, 10, 16],"float32"), )
paddle.Tensor.__eq__(Tensor([1431655766, 3],"float16"), -1.0, )
paddle.Tensor.__eq__(Tensor([1431655766, 3],"float16"), 1.0, )
paddle.Tensor.__eq__(Tensor([14870, 153450],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([14870, 153450],"float32"), Tensor([14870, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([15171, 150402],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([15171, 150402],"float32"), Tensor([15171, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([152113426, 15],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([152113426, 3, 1, 5],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([16520, 138120],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([16520, 138120],"float32"), Tensor([16520, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([175515491, 13],"float32"), Tensor([13],"float32"), )
paddle.Tensor.__eq__(Tensor([178258, 128, 10, 10],"float32"), Tensor([1, 128, 10, 10],"float32"), )
paddle.Tensor.__eq__(Tensor([178258, 128, 10, 10],"float32"), Tensor([178258, 128, 10, 10],"float32"), )
paddle.Tensor.__eq__(Tensor([190141782, 12],"float32"), Tensor([12],"float32"), )
paddle.Tensor.__eq__(Tensor([2, 10, 114085069],"float32"), Tensor([2, 10, 114085069],"float32"), )
paddle.Tensor.__eq__(Tensor([2, 1140850690, 1],"int64"), Tensor([2, 1140850690, 1],"int64"), )
paddle.Tensor.__eq__(Tensor([2, 1140850690],"float32"), -3.4028234663852886e+38, )
paddle.Tensor.__eq__(Tensor([2, 1140850690],"float32"), 0.0, )
paddle.Tensor.__eq__(Tensor([2, 1140850690],"int64"), 130001, )
paddle.Tensor.__eq__(Tensor([2, 1140850690],"int64"), 130004, )
paddle.Tensor.__eq__(Tensor([2, 1140850690],"int64"), 3, )
paddle.Tensor.__eq__(Tensor([2, 1140850690],"int64"), 4, )
paddle.Tensor.__eq__(Tensor([2, 228170138, 1, 5],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([2, 3, 1, 380283564],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([2, 3, 1],"int64"), Tensor([2, 3, 380283564],"int64"), )
paddle.Tensor.__eq__(Tensor([2, 3, 380283564],"int64"), Tensor([2, 3, 1],"int64"), )
paddle.Tensor.__eq__(Tensor([2, 3, 380283564],"int64"), Tensor([2, 3, 380283564],"int64"), )
paddle.Tensor.__eq__(Tensor([2, 3, 76056713, 5],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([2, 35652, 32000],"float32"), Tensor([2, 35652, 32000],"float32"), )
paddle.Tensor.__eq__(Tensor([2, 4457, 256000],"float32"), Tensor([2, 4457, 256000],"float32"), )
paddle.Tensor.__eq__(Tensor([20, 1, 152, 750560],"float32"), 1, )
paddle.Tensor.__eq__(Tensor([20, 1, 419431, 272],"float32"), 1, )
paddle.Tensor.__eq__(Tensor([20, 2760, 152, 272],"float32"), 1, )
paddle.Tensor.__eq__(Tensor([207427399, 11],"float32"), Tensor([11],"float32"), )
paddle.Tensor.__eq__(Tensor([207427399, 11],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([21559, 105840],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([21559, 105840],"float32"), Tensor([21559, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2177, 1024, 1024],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([21939437, 104],"int64"), 2, )
paddle.Tensor.__eq__(Tensor([22152441, 103],"int64"), 2, )
paddle.Tensor.__eq__(Tensor([2228225, 1024, 1, 1],"float32"), Tensor([1, 1024, 1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2228225, 1024, 1, 1],"float32"), Tensor([2228225, 1024, 1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([22369622, 102, 1],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([22369622, 102],"int64"), 2, )
paddle.Tensor.__eq__(Tensor([22591103, 101, 1],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([22591103, 101],"int64"), 2, )
paddle.Tensor.__eq__(Tensor([227, 10051548],"float32"), math.inf, )
paddle.Tensor.__eq__(Tensor([2281701379, 1, 1, 1],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([2281701379, 1, 1],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([2281701379, 1],"float32"), 0.0, )
paddle.Tensor.__eq__(Tensor([2281701379, 1],"float32"), 5, )
paddle.Tensor.__eq__(Tensor([2281701379, 1],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([2281701379, 1],"int32"), 98, )
paddle.Tensor.__eq__(Tensor([2281701379, 1],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([2281701379, 1],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([2281701379, 1],"int64"), 255, )
paddle.Tensor.__eq__(Tensor([2281701379, 1],"int64"), 3, )
paddle.Tensor.__eq__(Tensor([2281701379, 1],"int64"), 98, )
paddle.Tensor.__eq__(Tensor([2281701379],"float32"), 0.0, )
paddle.Tensor.__eq__(Tensor([2281701379],"float32"), 0.15, )
paddle.Tensor.__eq__(Tensor([2281701379],"float32"), 240.0, )
paddle.Tensor.__eq__(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.__eq__(Tensor([2281701379],"int32"), -1, )
paddle.Tensor.__eq__(Tensor([2281701379],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([2281701379],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([2281701379],"int32"), 2, )
paddle.Tensor.__eq__(Tensor([2281701379],"int32"), 3, )
paddle.Tensor.__eq__(Tensor([2281701379],"int32"), 4, )
paddle.Tensor.__eq__(Tensor([2281701379],"int32"), 5, )
paddle.Tensor.__eq__(Tensor([2281701379],"int32"), 6, )
paddle.Tensor.__eq__(Tensor([2281701379],"int32"), 7, )
paddle.Tensor.__eq__(Tensor([2281701379],"int32"), 80, )
paddle.Tensor.__eq__(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 10, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 100, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 101, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 102, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 103, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 104, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 105, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 106, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 107, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 108, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 109, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 11, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 110, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 111, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 112, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 113, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 114, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 115, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 116, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 117, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 118, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 119, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 12, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 120, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 121, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 122, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 123, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 124, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 125, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 126, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 127, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 128, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 129, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 13, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 130, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 130001, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 130004, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 131, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 132, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 133, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 134, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 135, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 136, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 137, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 138, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 139, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 14, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 140, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 141, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 142, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 143, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 144, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 145, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 146, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 147, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 148, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 149, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 15, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 16, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 17, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 18, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 19, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 20, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 21, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 22, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 23, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 24, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 25, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 26, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 27, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 28, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 29, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 3, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 30, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 31, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 32, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 33, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 34, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 35, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 36, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 37, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 38, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 39, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 40, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 41, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 42, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 43, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 44, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 45, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 46, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 47, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 48, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 49, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 5, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 50, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 50257, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 51, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 52, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 53, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 54, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 55, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 56, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 57, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 58, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 59, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 6, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 60, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 61, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 62, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 63, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 64, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 65, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 66, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 67, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 68, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 69, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 7, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 70, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 71, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 72, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 73, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 74, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 75, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 76, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 77, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 78, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 79, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 8, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 81, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 82, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 83, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 84, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 85, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 86, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 87, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 88, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 89, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 9, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 90, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 91, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 92, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 93, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 94, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 95, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 96, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 97, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 98, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 99, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.Tensor.__eq__(Tensor([228170138, 10, 1],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([228170138, 10],"float32"), Tensor([10],"float32"), )
paddle.Tensor.__eq__(Tensor([228170138, 10],"int64"), 130001, )
paddle.Tensor.__eq__(Tensor([228170138, 10],"int64"), 130004, )
paddle.Tensor.__eq__(Tensor([228170138, 10],"int64"), 3, )
paddle.Tensor.__eq__(Tensor([228170138, 10],"int64"), 4, )
paddle.Tensor.__eq__(Tensor([22817014, 100],"int64"), 2, )
paddle.Tensor.__eq__(Tensor([2281702, 1000],"float32"), Tensor([1, 1000],"float32"), )
paddle.Tensor.__eq__(Tensor([2281702, 1000],"float32"), Tensor([2281702, 1000],"float32"), )
paddle.Tensor.__eq__(Tensor([253522376, 9],"float32"), math.inf, )
paddle.Tensor.__eq__(Tensor([253522376, 9],"int32"), -100, )
paddle.Tensor.__eq__(Tensor([256, 8912897],"float32"), math.inf, )
paddle.Tensor.__eq__(Tensor([2751, 800, 1037],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([285212673, 8, 1, 1],"float32"), Tensor([2, 3],"float32"), )
paddle.Tensor.__eq__(Tensor([285212673, 8, 1, 1],"int32"), Tensor([2, 3],"int32"), )
paddle.Tensor.__eq__(Tensor([285212673, 8],"float32"), 1.0, )
paddle.Tensor.__eq__(Tensor([285212673, 8],"int32"), 98, )
paddle.Tensor.__eq__(Tensor([285212673, 8],"int64"), 255, )
paddle.Tensor.__eq__(Tensor([3, 1431655766],"float16"), -1.0, )
paddle.Tensor.__eq__(Tensor([3, 1431655766],"float16"), 1.0, )
paddle.Tensor.__eq__(Tensor([3, 760567127],"float32"), -1.0, )
paddle.Tensor.__eq__(Tensor([3, 760567127],"float32"), 1.0, )
paddle.Tensor.__eq__(Tensor([325957340, 7, 1],"int32"), Tensor([325957340, 1, 7],"int32"), )
paddle.Tensor.__eq__(Tensor([325957340, 7],"int32"), -100, )
paddle.Tensor.__eq__(Tensor([325957340, 7],"int32"), 49407, )
paddle.Tensor.__eq__(Tensor([325957340, 7],"int32"), 98, )
paddle.Tensor.__eq__(Tensor([325957340, 7],"int32"), Tensor([1],"int32"), )
paddle.Tensor.__eq__(Tensor([325957340, 7],"int64"), 255, )
paddle.Tensor.__eq__(Tensor([325957340, 7],"int64"), 98, )
paddle.Tensor.__eq__(Tensor([34817, 4, 128, 128],"float32"), 1, )
paddle.Tensor.__eq__(Tensor([4, 1073741825, 1, 1],"bfloat16"), Tensor([2, 3],"bfloat16"), )
paddle.Tensor.__eq__(Tensor([4, 3, 3, 119304648],"float16"), -1.0, )
paddle.Tensor.__eq__(Tensor([4, 3, 3, 119304648],"float16"), 1.0, )
paddle.Tensor.__eq__(Tensor([4, 3, 357913942],"float16"), 1.0, )
paddle.Tensor.__eq__(Tensor([4, 3, 89478486, 4],"float16"), -1.0, )
paddle.Tensor.__eq__(Tensor([4, 3, 89478486, 4],"float16"), 1.0, )
paddle.Tensor.__eq__(Tensor([4, 34817, 128, 128],"float32"), 1, )
paddle.Tensor.__eq__(Tensor([4, 357913942, 3],"float16"), -1.0, )
paddle.Tensor.__eq__(Tensor([4, 357913942, 3],"float16"), 1.0, )
paddle.Tensor.__eq__(Tensor([4, 4, 1114113, 128],"float32"), 1, )
paddle.Tensor.__eq__(Tensor([4, 4, 128, 1114113],"float32"), 1, )
paddle.Tensor.__eq__(Tensor([4, 570425345, 1, 1],"float32"), Tensor([2, 3],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 570425345, 1, 1],"int32"), Tensor([2, 3],"int32"), )
paddle.Tensor.__eq__(Tensor([4, 570425345],"float32"), -3.4028234663852886e+38, )
paddle.Tensor.__eq__(Tensor([4, 570425345],"int32"), 49, )
paddle.Tensor.__eq__(Tensor([4, 89478486, 3, 4],"float16"), -1.0, )
paddle.Tensor.__eq__(Tensor([4, 89478486, 3, 4],"float16"), 1.0, )
paddle.Tensor.__eq__(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.Tensor.__eq__(Tensor([4554295, 501],"int32"), 49, )
paddle.Tensor.__eq__(Tensor([456340276, 5],"float32"), -3.4028234663852886e+38, )
paddle.Tensor.__eq__(Tensor([456340276, 5],"float32"), 0.0, )
paddle.Tensor.__eq__(Tensor([477218589, 3, 3],"float16"), -1.0, )
paddle.Tensor.__eq__(Tensor([477218589, 3, 3],"float16"), 1.0, )
paddle.Tensor.__eq__(Tensor([536870913, 8, 1, 1],"bfloat16"), Tensor([2, 3],"bfloat16"), )
paddle.Tensor.__eq__(Tensor([536870913, 8, 1, 1],"float16"), Tensor([2, 3],"float16"), )
paddle.Tensor.__eq__(Tensor([55189, 1, 152, 272],"float32"), 1, )
paddle.Tensor.__eq__(Tensor([557057, 1024, 2, 2],"float32"), Tensor([1, 1024, 2, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([557057, 1024, 2, 2],"float32"), Tensor([557057, 1024, 2, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([60044774, 38],"float32"), math.inf, )
paddle.Tensor.__eq__(Tensor([7131, 10, 32000],"float32"), Tensor([7131, 10, 32000],"float32"), )
paddle.Tensor.__eq__(Tensor([760567127, 3, 1],"int64"), Tensor([760567127, 3, 1],"int64"), )
paddle.Tensor.__eq__(Tensor([760567127, 3],"float32"), -1.0, )
paddle.Tensor.__eq__(Tensor([760567127, 3],"float32"), -3.4028234663852886e+38, )
paddle.Tensor.__eq__(Tensor([760567127, 3],"float32"), 1.0, )
paddle.Tensor.__eq__(Tensor([760567127, 3],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([8, 285212673],"int32"), 49, )
paddle.Tensor.__eq__(Tensor([8, 5, 7, 8148934],"float32"), 1, )
paddle.Tensor.__eq__(Tensor([8, 5, 8148934, 7],"float32"), 1, )
paddle.Tensor.__eq__(Tensor([8, 5820667, 7, 7],"float32"), 1, )
paddle.Tensor.__eq__(Tensor([85899346, 10, 5],"float16"), -1.0, )
paddle.Tensor.__eq__(Tensor([85899346, 10, 5],"float16"), 1.0, )
paddle.Tensor.__eq__(Tensor([8705, 512, 512],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([8705, 512, 512],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([892, 10, 256000],"float32"), Tensor([892, 10, 256000],"float32"), )
paddle.Tensor.__eq__(Tensor([8985, 496, 512],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([8985, 496, 512],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([9164, 1, 499, 499],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([9313067, 5, 7, 7],"float32"), 1, )
paddle.Tensor.__floordiv__(Tensor([1, 2281701379],"int64"), 250054, )
paddle.Tensor.__floordiv__(Tensor([1, 2281701379],"int64"), 32000, )
paddle.Tensor.__floordiv__(Tensor([1, 2281701379],"int64"), 99, )
paddle.Tensor.__floordiv__(Tensor([10, 228170138],"int32"), Tensor([10, 228170138],"int32"), )
paddle.Tensor.__floordiv__(Tensor([10, 228170138],"int64"), Tensor([10, 228170138],"int64"), )
paddle.Tensor.__floordiv__(Tensor([114085069, 20],"int32"), Tensor([114085069, 20],"int32"), )
paddle.Tensor.__floordiv__(Tensor([1140850690, 2],"int64"), 100, )
paddle.Tensor.__floordiv__(Tensor([1140850690, 2],"int64"), 123, )
paddle.Tensor.__floordiv__(Tensor([1140850690, 2],"int64"), 256, )
paddle.Tensor.__floordiv__(Tensor([1140850690, 2],"int64"), 256000, )
paddle.Tensor.__floordiv__(Tensor([1140850690, 2],"int64"), 32000, )
paddle.Tensor.__floordiv__(Tensor([1140850690, 2],"int64"), 99, )
paddle.Tensor.__floordiv__(Tensor([190141782, 3, 4],"bool"), 1, )
paddle.Tensor.__floordiv__(Tensor([190141782, 3, 4],"bool"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([190141782, 3, 4],"float32"), 1, )
paddle.Tensor.__floordiv__(Tensor([190141782, 3, 4],"float32"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([190141782, 3, 4],"int32"), 1, )
paddle.Tensor.__floordiv__(Tensor([190141782, 3, 4],"int32"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([190141782, 3, 4],"int64"), 1, )
paddle.Tensor.__floordiv__(Tensor([190141782, 3, 4],"int64"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([1],"int64"), Tensor([2281701379],"int64"), )
paddle.Tensor.__floordiv__(Tensor([2, 1140850690],"int64"), 100, )
paddle.Tensor.__floordiv__(Tensor([2, 1140850690],"int64"), 123, )
paddle.Tensor.__floordiv__(Tensor([2, 1140850690],"int64"), 256, )
paddle.Tensor.__floordiv__(Tensor([2, 1140850690],"int64"), 256000, )
paddle.Tensor.__floordiv__(Tensor([2, 1140850690],"int64"), 32000, )
paddle.Tensor.__floordiv__(Tensor([2, 1140850690],"int64"), 4, )
paddle.Tensor.__floordiv__(Tensor([2, 1140850690],"int64"), 99, )
paddle.Tensor.__floordiv__(Tensor([2, 2, 570425345],"int64"), 2, )
paddle.Tensor.__floordiv__(Tensor([2, 285212673, 4],"bool"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 285212673, 4],"bool"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 285212673, 4],"float32"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 285212673, 4],"float32"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 285212673, 4],"int32"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 285212673, 4],"int32"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 285212673, 4],"int64"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 285212673, 4],"int64"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 380283564],"bool"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 380283564],"bool"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 380283564],"float32"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 380283564],"float32"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 380283564],"int32"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 380283564],"int32"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 380283564],"int64"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 380283564],"int64"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"bfloat16"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"bfloat16"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"float16"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"float16"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"int8"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"int8"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"uint8"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"uint8"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"bfloat16"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"bfloat16"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"float16"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"float16"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"int8"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"int8"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"uint8"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"uint8"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 570425345, 2],"int64"), 2, )
paddle.Tensor.__floordiv__(Tensor([2228225, 1024],"int64"), Tensor([2228225, 1024],"int64"), )
paddle.Tensor.__floordiv__(Tensor([2281701379],"float32"), 2, )
paddle.Tensor.__floordiv__(Tensor([2281701379],"int32"), 2, )
paddle.Tensor.__floordiv__(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.Tensor.__floordiv__(Tensor([2281701379],"int64"), 1, )
paddle.Tensor.__floordiv__(Tensor([2281701379],"int64"), 2, )
paddle.Tensor.__floordiv__(Tensor([2281701379],"int64"), 4, )
paddle.Tensor.__floordiv__(Tensor([2281701379],"int64"), 7, )
paddle.Tensor.__floordiv__(Tensor([2281701379],"int64"), Tensor([1],"int64"), )
paddle.Tensor.__floordiv__(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.Tensor.__floordiv__(Tensor([285212673, 8],"int64"), 250054, )
paddle.Tensor.__floordiv__(Tensor([285212673, 8],"int64"), 32000, )
paddle.Tensor.__floordiv__(Tensor([285212673, 8],"int64"), 99, )
paddle.Tensor.__floordiv__(Tensor([357913942, 3, 4],"bfloat16"), 1, )
paddle.Tensor.__floordiv__(Tensor([357913942, 3, 4],"bfloat16"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([357913942, 3, 4],"float16"), 1, )
paddle.Tensor.__floordiv__(Tensor([357913942, 3, 4],"float16"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([357913942, 3, 4],"int8"), 1, )
paddle.Tensor.__floordiv__(Tensor([357913942, 3, 4],"int8"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([357913942, 3, 4],"uint8"), 1, )
paddle.Tensor.__floordiv__(Tensor([357913942, 3, 4],"uint8"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__floordiv__(Tensor([4, 536870913, 2],"bfloat16"), Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.__floordiv__(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"bfloat16"), )
paddle.Tensor.__floordiv__(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.__floordiv__(Tensor([4, 570425345],"int64"), 4, )
paddle.Tensor.__floordiv__(Tensor([570425345, 2, 2],"int64"), 2, )
paddle.Tensor.__floordiv__(Tensor([570425345, 4],"int64"), 100, )
paddle.Tensor.__floordiv__(Tensor([570425345, 4],"int64"), 123, )
paddle.Tensor.__floordiv__(Tensor([570425345, 4],"int64"), 256, )
paddle.Tensor.__floordiv__(Tensor([570425345, 4],"int64"), 256000, )
paddle.Tensor.__floordiv__(Tensor([570425345, 4],"int64"), 32000, )
paddle.Tensor.__floordiv__(Tensor([570425345, 4],"int64"), 99, )
paddle.Tensor.__floordiv__(Tensor([715827883, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__floordiv__(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"bfloat16"), )
paddle.Tensor.__floordiv__(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__floordiv__(Tensor([7605672, 300],"int64"), 4, )
paddle.Tensor.__ge__(Tensor([1, 106106, 21504],"float32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 14260634, 160],"float32"), Tensor([13, 14260634, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 160, 14260634],"float32"), Tensor([13, 1, 14260634],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 160, 14260634],"float32"), Tensor([13, 1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 2281701379, 1],"float32"), Tensor([13, 1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 2281701379],"float32"), 0.5, )
paddle.Tensor.__ge__(Tensor([1, 2281701379],"float32"), 0.6, )
paddle.Tensor.__ge__(Tensor([1, 2281701379],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 25, 91268056],"float32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 4294967297],"float16"), Tensor([1, 1],"float16"), )
paddle.Tensor.__ge__(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.Tensor.__ge__(Tensor([10, 228170138],"float32"), 1, )
paddle.Tensor.__ge__(Tensor([10, 228170138],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([10, 429496730],"float16"), 1, )
paddle.Tensor.__ge__(Tensor([100, 22817014],"float32"), -1.0, )
paddle.Tensor.__ge__(Tensor([100, 22817014],"float32"), -10.0, )
paddle.Tensor.__ge__(Tensor([1000, 2281702],"float32"), -13, )
paddle.Tensor.__ge__(Tensor([1000, 2281702],"float32"), -18, )
paddle.Tensor.__ge__(Tensor([1000, 2281702],"float32"), -8, )
paddle.Tensor.__ge__(Tensor([1124, 2029984],"float32"), 0, )
paddle.Tensor.__ge__(Tensor([11408507, 200],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([11408507, 200],"float32"), Tensor([11408507, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([128, 33554433],"float16"), 127, )
paddle.Tensor.__ge__(Tensor([13, 175515491],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([131073, 8, 64, 64],"float16"), 127, )
paddle.Tensor.__ge__(Tensor([134218, 32000],"float16"), Tensor([1, 1],"float16"), )
paddle.Tensor.__ge__(Tensor([134218, 32000],"float16"), Tensor([134218, 1],"float16"), )
paddle.Tensor.__ge__(Tensor([14, 162978670],"int64"), 160, )
paddle.Tensor.__ge__(Tensor([14260634, 1, 160],"float32"), Tensor([14260634, 1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([14260634, 160, 1],"float32"), Tensor([14260634, 1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([1431655766, 3],"float16"), 0.0, )
paddle.Tensor.__ge__(Tensor([14870, 153450],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([15171, 150402],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([16, 142606337],"float32"), 0, )
paddle.Tensor.__ge__(Tensor([162978670, 14],"int64"), 160, )
paddle.Tensor.__ge__(Tensor([16520, 138120],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([190141782, 12],"float32"), 1, )
paddle.Tensor.__ge__(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.__ge__(Tensor([2, 1140850690],"float32"), 0.0, )
paddle.Tensor.__ge__(Tensor([2, 1140850690],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2, 2147483649],"float16"), 0.0, )
paddle.Tensor.__ge__(Tensor([2, 2147483649],"float16"), 127, )
paddle.Tensor.__ge__(Tensor([2, 524289, 64, 64],"float16"), 127, )
paddle.Tensor.__ge__(Tensor([2, 8, 4194305, 64],"float16"), 127, )
paddle.Tensor.__ge__(Tensor([2, 8, 64, 4194305],"float16"), 127, )
paddle.Tensor.__ge__(Tensor([21298, 107136],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([21559, 105840],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([22084, 103320],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([2270350, 1005],"float32"), 0.5, )
paddle.Tensor.__ge__(Tensor([2272611, 1004],"float32"), 0.5, )
paddle.Tensor.__ge__(Tensor([2274877, 1003],"float32"), 0.5, )
paddle.Tensor.__ge__(Tensor([2277148, 1002],"float32"), 0.5, )
paddle.Tensor.__ge__(Tensor([2279422, 1001],"float32"), 0.5, )
paddle.Tensor.__ge__(Tensor([2281701379],"float32"), -5.0, )
paddle.Tensor.__ge__(Tensor([2281701379],"float32"), 0.5, )
paddle.Tensor.__ge__(Tensor([2281701379],"float32"), 0.6, )
paddle.Tensor.__ge__(Tensor([2281701379],"float32"), 3.0, )
paddle.Tensor.__ge__(Tensor([2281701379],"float32"), 4, )
paddle.Tensor.__ge__(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__ge__(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.__ge__(Tensor([2281701379],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2281701379],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([2281701379],"int64"), 1, )
paddle.Tensor.__ge__(Tensor([2281701379],"int64"), 10, )
paddle.Tensor.__ge__(Tensor([2281701379],"int64"), 12, )
paddle.Tensor.__ge__(Tensor([2281701379],"int64"), 15, )
paddle.Tensor.__ge__(Tensor([2281701379],"int64"), 2, )
paddle.Tensor.__ge__(Tensor([2281701379],"int64"), 5, )
paddle.Tensor.__ge__(Tensor([228170138, 5, 2],"float32"), 1, )
paddle.Tensor.__ge__(Tensor([228171, 100, 100],"float32"), 0.0, )
paddle.Tensor.__ge__(Tensor([23047489, 99],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([23047489, 99],"float32"), Tensor([23047489, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([253522376, 9],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2910334, 784],"float32"), -13, )
paddle.Tensor.__ge__(Tensor([2910334, 784],"float32"), -18, )
paddle.Tensor.__ge__(Tensor([2910334, 784],"float32"), -8, )
paddle.Tensor.__ge__(Tensor([325957340, 7],"int64"), 160, )
paddle.Tensor.__ge__(Tensor([357913942, 12],"float16"), 1, )
paddle.Tensor.__ge__(Tensor([38028357, 60],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([4, 285212673, 2],"float32"), 1, )
paddle.Tensor.__ge__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__ge__(Tensor([4, 5, 114085069],"float32"), 1, )
paddle.Tensor.__ge__(Tensor([4, 5, 214748365],"float16"), 1, )
paddle.Tensor.__ge__(Tensor([4, 536870913, 2],"float16"), 1, )
paddle.Tensor.__ge__(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.__ge__(Tensor([4245, 25, 21504],"float32"), 0, )
paddle.Tensor.__ge__(Tensor([4294967297, 1],"float16"), 0.0, )
paddle.Tensor.__ge__(Tensor([429496730, 5, 2],"float16"), 1, )
paddle.Tensor.__ge__(Tensor([4456449, 512],"float32"), 0.6, )
paddle.Tensor.__ge__(Tensor([45359, 50304],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([45359, 50304],"float32"), Tensor([45359, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([4563403, 500],"float32"), -1.0, )
paddle.Tensor.__ge__(Tensor([4563403, 500],"float32"), -10.0, )
paddle.Tensor.__ge__(Tensor([7, 325957340],"int64"), 160, )
paddle.Tensor.__ge__(Tensor([71303169, 32],"float32"), 0, )
paddle.Tensor.__ge__(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__ge__(Tensor([760567127, 3],"float32"), 0.0, )
paddle.Tensor.__ge__(Tensor([76057, 30000],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([76057, 30000],"float32"), Tensor([76057, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([8, 100, 2852127],"float32"), 0.0, )
paddle.Tensor.__ge__(Tensor([8, 2852127, 100],"float32"), 0.0, )
paddle.Tensor.__ge__(Tensor([8388609, 512],"float16"), 127, )
paddle.Tensor.__gt__(Tensor([1, 1, 1, 2281701379],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([1, 1, 2281701379, 1],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([1, 1, 2281701379],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 1, 2281701379],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([1, 1, 2281701379],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([1, 1, 2281701379],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 1, 2281701379],"float32"), Tensor([1, 1, 2281701379],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 1, 3565159, 640],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 1, 429, 5318652],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 10164, 224489],"float32"), 0.01, )
paddle.Tensor.__gt__(Tensor([1, 106106, 21504],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([1, 106106, 21504],"float32"), 1.000000001, )
paddle.Tensor.__gt__(Tensor([1, 11109, 205393],"float32"), 0.01, )
paddle.Tensor.__gt__(Tensor([1, 12096, 188633],"float32"), 0.01, )
paddle.Tensor.__gt__(Tensor([1, 162978670, 14, 1],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 162978670, 14, 1],"int32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 221848, 10285],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([1, 221848, 10285],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 221848, 10285],"float32"), Tensor([1, 221848, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 2281701379, 1, 1],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([1, 2281701379],"float32"), -1, )
paddle.Tensor.__gt__(Tensor([1, 2281701379],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 2281701379],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([1, 2281701379],"float32"), 0.75, )
paddle.Tensor.__gt__(Tensor([1, 2281701379],"float32"), 0.9, )
paddle.Tensor.__gt__(Tensor([1, 25, 91268056],"float32"), 1.000000001, )
paddle.Tensor.__gt__(Tensor([1, 300, 176, 43215],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 300, 184, 41336],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 300, 192, 39613],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 300, 39613, 192],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 300, 41336, 184],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 300, 43215, 176],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 36828, 61956],"float32"), 0.01, )
paddle.Tensor.__gt__(Tensor([1, 38367, 59471],"float32"), 0.01, )
paddle.Tensor.__gt__(Tensor([1, 4294967297],"float16"), 0.7, )
paddle.Tensor.__gt__(Tensor([1, 4294967297],"float16"), 1e-05, )
paddle.Tensor.__gt__(Tensor([1, 547828, 4165],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 547828, 4165],"float32"), Tensor([1, 547828, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 570425345, 4],"float32"), 0.01, )
paddle.Tensor.__gt__(Tensor([1, 59417, 38402],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 59417, 38402],"float32"), Tensor([1, 59417, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 61595, 37044],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 61896, 192, 192],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 61906, 36858],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 61906, 36858],"float32"), Tensor([1, 61906, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 634159, 3598],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 634159, 3598],"float32"), Tensor([1, 634159, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 67395, 184, 184],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 67908, 33600],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 67908, 33600],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([1, 67908, 33600],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([1, 7, 14, 23282668],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 7, 14, 23282668],"int32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 7, 325957340, 1],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 7, 325957340, 1],"int32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 73661, 176, 176],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 75245, 30324],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 75245, 30324],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([1, 75245, 30324],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([1, 8311, 429, 640],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 83837, 27216],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 83837, 27216],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([1, 83837, 27216],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([1, 93991, 24276],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 93991, 24276],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([1, 93991, 24276],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([10, 228170138],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.Tensor.__gt__(Tensor([100, 22817014],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([100, 22817014],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([100, 42949673],"float16"), 0.5, )
paddle.Tensor.__gt__(Tensor([1000, 2281702],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([10000, 228171],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([104, 21939437],"float32"), -0.8775825618903728, )
paddle.Tensor.__gt__(Tensor([106106, 1, 21504],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([1073741825, 1, 4],"float16"), 0.5, )
paddle.Tensor.__gt__(Tensor([1073741825, 4],"float16"), 1e-05, )
paddle.Tensor.__gt__(Tensor([1140850690, 2],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([119304648, 3, 12],"float16"), 1e-05, )
paddle.Tensor.__gt__(Tensor([128, 17825793],"float32"), -0.8775825618903728, )
paddle.Tensor.__gt__(Tensor([12988, 175678],"int32"), Tensor([1, 175678],"int32"), )
paddle.Tensor.__gt__(Tensor([134218, 32000],"float16"), 0.7, )
paddle.Tensor.__gt__(Tensor([1431655766, 3],"float16"), 0.0001, )
paddle.Tensor.__gt__(Tensor([1431655766, 3],"float16"), 1.0, )
paddle.Tensor.__gt__(Tensor([1431655766, 3],"float16"), 2.0, )
paddle.Tensor.__gt__(Tensor([14350324, 159],"float32"), -0.9800665778412416, )
paddle.Tensor.__gt__(Tensor([14868, 38367, 4],"float32"), 0.01, )
paddle.Tensor.__gt__(Tensor([15474, 147456],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([15489, 36828, 4],"float32"), 0.01, )
paddle.Tensor.__gt__(Tensor([16, 142606337],"float32"), -0.9800665778412416, )
paddle.Tensor.__gt__(Tensor([16849, 135424],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([170628, 13373],"int32"), Tensor([1, 13373],"int32"), )
paddle.Tensor.__gt__(Tensor([18416, 123904],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([190142, 12000],"float32"), 0.95, )
paddle.Tensor.__gt__(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.__gt__(Tensor([2, 1, 1, 1140850690],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([2, 1, 10, 114085069],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([2, 1, 114085069, 10],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([2, 1, 162978670, 7],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([2, 1, 190141782, 6],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([2, 1, 2147483649],"float16"), 0.5, )
paddle.Tensor.__gt__(Tensor([2, 1, 228170138, 5],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([2, 1, 5, 228170138],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([2, 1073741825, 2],"float16"), 1e-05, )
paddle.Tensor.__gt__(Tensor([2, 1140850690],"float32"), 0.79999, )
paddle.Tensor.__gt__(Tensor([2, 1140850690],"float32"), 0.9, )
paddle.Tensor.__gt__(Tensor([2, 1140850690],"float32"), 1.0, )
paddle.Tensor.__gt__(Tensor([2, 1140850690],"float32"), 2.0, )
paddle.Tensor.__gt__(Tensor([2, 1140850690],"int64"), 1, )
paddle.Tensor.__gt__(Tensor([2, 11408507, 10, 10],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([2, 162978670, 1, 7],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([2, 178956971, 12],"float16"), 1e-05, )
paddle.Tensor.__gt__(Tensor([2, 190141782, 1, 6],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([2, 1],"float16"), Tensor([2, 2147483649],"float16"), )
paddle.Tensor.__gt__(Tensor([2, 2147483649],"float16"), 0.0001, )
paddle.Tensor.__gt__(Tensor([2, 2147483649],"float16"), 1.0, )
paddle.Tensor.__gt__(Tensor([2, 2147483649],"float16"), 2.0, )
paddle.Tensor.__gt__(Tensor([2, 2147483649],"float16"), Tensor([2, 1],"float16"), )
paddle.Tensor.__gt__(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), )
paddle.Tensor.__gt__(Tensor([2, 3, 715827883],"float16"), 1e-05, )
paddle.Tensor.__gt__(Tensor([2, 45634028, 5, 5],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([2, 536870913, 4],"float16"), 0.5, )
paddle.Tensor.__gt__(Tensor([2, 536870913, 4],"float16"), 1e-05, )
paddle.Tensor.__gt__(Tensor([207, 300, 192, 192],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2147483649, 2],"float16"), 1e-05, )
paddle.Tensor.__gt__(Tensor([21474837, 200],"float16"), Tensor([21474837, 1],"float16"), )
paddle.Tensor.__gt__(Tensor([2213096, 1031],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([221848, 1, 10285],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([221848, 1, 10285],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([221848, 1, 10285],"float32"), Tensor([221848, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([221848, 10285],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2228225, 1024],"float32"), Tensor([2228225, 1024],"float32"), )
paddle.Tensor.__gt__(Tensor([225, 300, 184, 184],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2270350, 1005],"float32"), -1, )
paddle.Tensor.__gt__(Tensor([2272611, 1004],"float32"), -1, )
paddle.Tensor.__gt__(Tensor([2272611, 1004],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2274877, 1003],"float32"), -1, )
paddle.Tensor.__gt__(Tensor([2277148, 1002],"float32"), -1, )
paddle.Tensor.__gt__(Tensor([2277148, 1002],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2279422, 1001],"float32"), -1, )
paddle.Tensor.__gt__(Tensor([2279422, 1001],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2281701379, 1, 1, 1],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([2281701379, 1],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2281701379, 1],"float32"), 1.0, )
paddle.Tensor.__gt__(Tensor([2281701379, 1],"float32"), 5.0, )
paddle.Tensor.__gt__(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2281701379],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([2281701379],"float32"), 0.6, )
paddle.Tensor.__gt__(Tensor([2281701379],"float32"), 0.7853981633974483, )
paddle.Tensor.__gt__(Tensor([2281701379],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([2281701379],"float32"), 14.999999999999998, )
paddle.Tensor.__gt__(Tensor([2281701379],"float32"), 2, )
paddle.Tensor.__gt__(Tensor([2281701379],"float32"), 6, )
paddle.Tensor.__gt__(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__gt__(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.__gt__(Tensor([2281701379],"int32"), -1, )
paddle.Tensor.__gt__(Tensor([2281701379],"int32"), 1, )
paddle.Tensor.__gt__(Tensor([2281701379],"int32"), 2, )
paddle.Tensor.__gt__(Tensor([2281701379],"int32"), 3, )
paddle.Tensor.__gt__(Tensor([2281701379],"int32"), 5, )
paddle.Tensor.__gt__(Tensor([2281701379],"int64"), -1, )
paddle.Tensor.__gt__(Tensor([2281701379],"int64"), 0, )
paddle.Tensor.__gt__(Tensor([2281701379],"int64"), 1, )
paddle.Tensor.__gt__(Tensor([2281701379],"int64"), 5, )
paddle.Tensor.__gt__(Tensor([228170138, 10],"float32"), 0.9, )
paddle.Tensor.__gt__(Tensor([228170138, 10],"int64"), 1, )
paddle.Tensor.__gt__(Tensor([22817014, 1, 10, 10],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([22817014, 100],"int64"), 1, )
paddle.Tensor.__gt__(Tensor([2281702, 1000],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([228171, 100, 100],"float32"), 0.3, )
paddle.Tensor.__gt__(Tensor([228171, 100, 100],"float32"), 0.7, )
paddle.Tensor.__gt__(Tensor([228171, 100, 100],"float32"), 0.9, )
paddle.Tensor.__gt__(Tensor([2293168, 995],"float32"), -0.8775825618903728, )
paddle.Tensor.__gt__(Tensor([23282668, 7, 14, 1],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([23282668, 7, 14, 1],"int32"), 0, )
paddle.Tensor.__gt__(Tensor([24422, 93431],"float32"), -0.8775825618903728, )
paddle.Tensor.__gt__(Tensor([246, 300, 176, 176],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([256, 8912897],"float32"), 0.01, )
paddle.Tensor.__gt__(Tensor([28521268, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3, 1, 1188387, 640],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3, 1, 429, 1772884],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3, 2771, 429, 640],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3, 760567127],"int64"), 1, )
paddle.Tensor.__gt__(Tensor([32, 71303169],"float32"), -0.9800665778412416, )
paddle.Tensor.__gt__(Tensor([325957340, 1, 1, 7],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([3565159, 2, 5, 64],"float32"), 0.67, )
paddle.Tensor.__gt__(Tensor([357913942, 12],"float16"), 1e-05, )
paddle.Tensor.__gt__(Tensor([357913942, 3, 4],"float16"), 1e-05, )
paddle.Tensor.__gt__(Tensor([380283564, 1, 1, 6],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([4, 1782580, 5, 64],"float32"), 0.67, )
paddle.Tensor.__gt__(Tensor([4, 1834166, 311],"float32"), 80, )
paddle.Tensor.__gt__(Tensor([4, 2, 4456449, 64],"float32"), 0.67, )
paddle.Tensor.__gt__(Tensor([4, 2, 5, 57042535],"float32"), 0.67, )
paddle.Tensor.__gt__(Tensor([4, 280, 376, 25, 217],"float32"), 1e-08, )
paddle.Tensor.__gt__(Tensor([4, 280, 376, 5419, 1],"float32"), 1e-08, )
paddle.Tensor.__gt__(Tensor([4, 280, 81490, 25, 1],"float32"), 1e-08, )
paddle.Tensor.__gt__(Tensor([4, 60684, 376, 25, 1],"float32"), 1e-08, )
paddle.Tensor.__gt__(Tensor([4, 94, 6068355],"float32"), 80, )
paddle.Tensor.__gt__(Tensor([40, 57042535],"float32"), -0.8775825618903728, )
paddle.Tensor.__gt__(Tensor([421120, 25, 217],"float32"), 1e-08, )
paddle.Tensor.__gt__(Tensor([421120, 5419, 1],"float32"), 1e-08, )
paddle.Tensor.__gt__(Tensor([4245, 25, 21504],"float32"), 1.000000001, )
paddle.Tensor.__gt__(Tensor([4294967297, 1],"float16"), Tensor([4294967297, 1],"float16"), )
paddle.Tensor.__gt__(Tensor([4294967297],"float16"), 1e-05, )
paddle.Tensor.__gt__(Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.Tensor.__gt__(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.Tensor.__gt__(Tensor([4294968, 1000],"float16"), 0.5, )
paddle.Tensor.__gt__(Tensor([45359, 50304],"float32"), 0.75, )
paddle.Tensor.__gt__(Tensor([47159, 12096, 4],"float32"), 0.01, )
paddle.Tensor.__gt__(Tensor([5, 456340276],"float32"), 0.95, )
paddle.Tensor.__gt__(Tensor([5, 456340276],"int64"), 1, )
paddle.Tensor.__gt__(Tensor([51349, 11109, 4],"float32"), 0.01, )
paddle.Tensor.__gt__(Tensor([547828, 1, 4165],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([547828, 1, 4165],"float32"), Tensor([547828, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([5571, 640, 640],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([56123, 10164, 4],"float32"), 0.01, )
paddle.Tensor.__gt__(Tensor([570425345, 4],"float32"), 0.79999, )
paddle.Tensor.__gt__(Tensor([570425345, 4],"int64"), 1, )
paddle.Tensor.__gt__(Tensor([59417, 1, 38402],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([59417, 1, 38402],"float32"), Tensor([59417, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([6, 380283564],"float32"), 1.0, )
paddle.Tensor.__gt__(Tensor([6, 380283564],"float32"), 5.0, )
paddle.Tensor.__gt__(Tensor([61595, 1, 37044],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([61906, 1, 36858],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([61906, 1, 36858],"float32"), Tensor([61906, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([634159, 1, 3598],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([634159, 1, 3598],"float32"), Tensor([634159, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([64, 35651585],"float32"), -0.8775825618903728, )
paddle.Tensor.__gt__(Tensor([67908, 1, 33600],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([67908, 1, 33600],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([67908, 1, 33600],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([715827883, 3, 2],"float16"), 1e-05, )
paddle.Tensor.__gt__(Tensor([75245, 1, 30324],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([75245, 1, 30324],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([75245, 1, 30324],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([760567127, 3],"float32"), 1.0, )
paddle.Tensor.__gt__(Tensor([760567127, 3],"float32"), 2.0, )
paddle.Tensor.__gt__(Tensor([76057, 30000],"float32"), 0.9, )
paddle.Tensor.__gt__(Tensor([78050, 94, 311],"float32"), 80, )
paddle.Tensor.__gt__(Tensor([8, 100, 2852127],"float32"), 0.3, )
paddle.Tensor.__gt__(Tensor([8, 100, 2852127],"float32"), 0.7, )
paddle.Tensor.__gt__(Tensor([8, 100, 2852127],"float32"), 0.9, )
paddle.Tensor.__gt__(Tensor([8, 2852127, 100],"float32"), 0.3, )
paddle.Tensor.__gt__(Tensor([8, 2852127, 100],"float32"), 0.7, )
paddle.Tensor.__gt__(Tensor([8, 2852127, 100],"float32"), 0.9, )
paddle.Tensor.__gt__(Tensor([8, 445645, 640],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([8, 5, 7, 8148934],"float32"), 0.25, )
paddle.Tensor.__gt__(Tensor([8, 5, 8148934, 7],"float32"), 0.25, )
paddle.Tensor.__gt__(Tensor([8, 5820667, 7, 7],"float32"), 0.25, )
paddle.Tensor.__gt__(Tensor([8, 640, 445645],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([8311, 1, 429, 640],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([83837, 1, 27216],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([83837, 1, 27216],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([83837, 1, 27216],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([867, 280, 376, 25, 1],"float32"), 1e-08, )
paddle.Tensor.__gt__(Tensor([8912897, 256],"float32"), 0.01, )
paddle.Tensor.__gt__(Tensor([91268056, 1, 5, 5],"float32"), 0.5, )
paddle.Tensor.__gt__(Tensor([91268056, 25, 1],"float32"), 1e-08, )
paddle.Tensor.__gt__(Tensor([9313067, 5, 7, 7],"float32"), 0.25, )
paddle.Tensor.__gt__(Tensor([93991, 1, 24276],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([93991, 1, 24276],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([93991, 1, 24276],"float32"), 1e-09, )
paddle.Tensor.__le__(Tensor([1, 1, 1],"int64"), Tensor([1, 1, 2281701379],"int64"), )
paddle.Tensor.__le__(Tensor([1, 1, 1],"int64"), Tensor([1, 2281701379, 1],"int64"), )
paddle.Tensor.__le__(Tensor([1, 1, 1],"int64"), Tensor([2281701379, 1, 1],"int64"), )
paddle.Tensor.__le__(Tensor([1, 1, 2281701379],"int64"), Tensor([1, 1, 1],"int64"), )
paddle.Tensor.__le__(Tensor([1, 1, 2281701379],"int64"), Tensor([1, 1, 2281701379],"int64"), )
paddle.Tensor.__le__(Tensor([1, 10, 10],"int64"), Tensor([228170138, 10, 1],"int64"), )
paddle.Tensor.__le__(Tensor([1, 10, 228170138],"int64"), Tensor([1, 10, 1],"int64"), )
paddle.Tensor.__le__(Tensor([1, 10, 228170138],"int64"), Tensor([1, 10, 228170138],"int64"), )
paddle.Tensor.__le__(Tensor([1, 106106, 21504],"float32"), Tensor([1, 106106, 1],"float32"), )
paddle.Tensor.__le__(Tensor([1, 114085069, 20],"int64"), Tensor([1, 114085069, 1],"int64"), )
paddle.Tensor.__le__(Tensor([1, 1],"int64"), Tensor([1, 2281701379],"int64"), )
paddle.Tensor.__le__(Tensor([1, 1],"int64"), Tensor([2281701379, 1],"int64"), )
paddle.Tensor.__le__(Tensor([1, 20, 114085069],"int64"), Tensor([1, 20, 114085069],"int64"), )
paddle.Tensor.__le__(Tensor([1, 20, 114085069],"int64"), Tensor([1, 20, 1],"int64"), )
paddle.Tensor.__le__(Tensor([1, 2281701379, 1],"int64"), Tensor([1, 1, 1],"int64"), )
paddle.Tensor.__le__(Tensor([1, 2281701379, 1],"int64"), Tensor([1, 2281701379, 1],"int64"), )
paddle.Tensor.__le__(Tensor([1, 2281701379],"int64"), Tensor([1, 1],"int64"), )
paddle.Tensor.__le__(Tensor([1, 2281701379],"int64"), Tensor([1, 2281701379],"int64"), )
paddle.Tensor.__le__(Tensor([1, 228170138, 10],"int64"), Tensor([1, 228170138, 1],"int64"), )
paddle.Tensor.__le__(Tensor([1, 25, 91268056],"float32"), Tensor([1, 25, 1],"float32"), )
paddle.Tensor.__le__(Tensor([1, 25, 91268056],"float32"), Tensor([1, 25, 91268056],"float32"), )
paddle.Tensor.__le__(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.Tensor.__le__(Tensor([100, 22817014],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([100, 22817014],"float32"), 1.0, )
paddle.Tensor.__le__(Tensor([100, 22817014],"float32"), 10.0, )
paddle.Tensor.__le__(Tensor([1000, 2281702],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1000, 2281702],"float32"), 12, )
paddle.Tensor.__le__(Tensor([1000, 2281702],"float32"), 2, )
paddle.Tensor.__le__(Tensor([1000, 2281702],"float32"), 7, )
paddle.Tensor.__le__(Tensor([10000, 228171],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), )
paddle.Tensor.__le__(Tensor([12, 190141782],"float32"), 0.7, )
paddle.Tensor.__le__(Tensor([12, 2, 95070891],"int64"), Tensor([1, 2, 1],"int64"), )
paddle.Tensor.__le__(Tensor([12, 2, 95070891],"int64"), Tensor([1, 2, 95070891],"int64"), )
paddle.Tensor.__le__(Tensor([12, 95070891, 2],"int64"), Tensor([1, 95070891, 1],"int64"), )
paddle.Tensor.__le__(Tensor([128, 33554433],"float16"), -127, )
paddle.Tensor.__le__(Tensor([131073, 8, 64, 64],"float16"), -127, )
paddle.Tensor.__le__(Tensor([1431655766, 3],"float16"), 2.0, )
paddle.Tensor.__le__(Tensor([164483, 13872],"float32"), 0.5, )
paddle.Tensor.__le__(Tensor([185686, 12288],"float32"), 0.5, )
paddle.Tensor.__le__(Tensor([1901418, 1200],"float32"), 0.5, )
paddle.Tensor.__le__(Tensor([1901418, 1200],"float32"), 0.7, )
paddle.Tensor.__le__(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.__le__(Tensor([2, 107136, 10649],"float32"), 0.1111111111111111, )
paddle.Tensor.__le__(Tensor([2, 1140850690],"float32"), 0.5, )
paddle.Tensor.__le__(Tensor([2, 1140850690],"float32"), 2.0, )
paddle.Tensor.__le__(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), )
paddle.Tensor.__le__(Tensor([2, 162978670, 7],"float32"), 0.1111111111111111, )
paddle.Tensor.__le__(Tensor([2, 2147483649],"float16"), -127, )
paddle.Tensor.__le__(Tensor([2, 2147483649],"float16"), 2.0, )
paddle.Tensor.__le__(Tensor([2, 524289, 64, 64],"float16"), -127, )
paddle.Tensor.__le__(Tensor([2, 8, 4194305, 64],"float16"), -127, )
paddle.Tensor.__le__(Tensor([2, 8, 64, 4194305],"float16"), -127, )
paddle.Tensor.__le__(Tensor([2106835, 1083],"float32"), 0.5, )
paddle.Tensor.__le__(Tensor([2106835, 1083],"float32"), 0.7, )
paddle.Tensor.__le__(Tensor([211269, 10800],"float32"), 0.5, )
paddle.Tensor.__le__(Tensor([211269, 10800],"float32"), 0.7, )
paddle.Tensor.__le__(Tensor([2228225, 1024],"float32"), Tensor([2228225, 1024],"float32"), )
paddle.Tensor.__le__(Tensor([2281701379, 1, 1],"int64"), Tensor([1, 1, 1],"int64"), )
paddle.Tensor.__le__(Tensor([2281701379, 1, 1],"int64"), Tensor([2281701379, 1, 1],"int64"), )
paddle.Tensor.__le__(Tensor([2281701379, 1],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2281701379, 1],"int64"), Tensor([1, 1],"int64"), )
paddle.Tensor.__le__(Tensor([2281701379, 1],"int64"), Tensor([2281701379, 1],"int64"), )
paddle.Tensor.__le__(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.__le__(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__le__(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.__le__(Tensor([2281701379],"int32"), -1, )
paddle.Tensor.__le__(Tensor([2281701379],"int64"), 4, )
paddle.Tensor.__le__(Tensor([22817014, 10, 10],"int64"), Tensor([1, 10, 1],"int64"), )
paddle.Tensor.__le__(Tensor([22817014, 10, 10],"int64"), Tensor([22817014, 10, 1],"int64"), )
paddle.Tensor.__le__(Tensor([228171, 100, 100],"float32"), 0.3, )
paddle.Tensor.__le__(Tensor([228171, 100, 100],"float32"), 0.7, )
paddle.Tensor.__le__(Tensor([228171, 100, 100],"float32"), 0.9, )
paddle.Tensor.__le__(Tensor([256, 8912897],"float32"), 0.01, )
paddle.Tensor.__le__(Tensor([28521268, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2910334, 784],"float32"), 12, )
paddle.Tensor.__le__(Tensor([2910334, 784],"float32"), 2, )
paddle.Tensor.__le__(Tensor([2910334, 784],"float32"), 7, )
paddle.Tensor.__le__(Tensor([3043, 107136, 7],"float32"), 0.1111111111111111, )
paddle.Tensor.__le__(Tensor([4245, 25, 21504],"float32"), Tensor([1, 25, 1],"float32"), )
paddle.Tensor.__le__(Tensor([4245, 25, 21504],"float32"), Tensor([4245, 25, 1],"float32"), )
paddle.Tensor.__le__(Tensor([4563403, 500],"float32"), 1.0, )
paddle.Tensor.__le__(Tensor([4563403, 500],"float32"), 10.0, )
paddle.Tensor.__le__(Tensor([475355, 4800],"float32"), 0.7, )
paddle.Tensor.__le__(Tensor([570425345, 2, 2],"int64"), Tensor([1, 2, 1],"int64"), )
paddle.Tensor.__le__(Tensor([570425345, 2, 2],"int64"), Tensor([570425345, 2, 1],"int64"), )
paddle.Tensor.__le__(Tensor([5704254, 20, 20],"int64"), Tensor([1, 20, 1],"int64"), )
paddle.Tensor.__le__(Tensor([5704254, 20, 20],"int64"), Tensor([5704254, 20, 1],"int64"), )
paddle.Tensor.__le__(Tensor([760567127, 3],"float32"), 2.0, )
paddle.Tensor.__le__(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), )
paddle.Tensor.__le__(Tensor([7605672, 300],"float32"), 0.7, )
paddle.Tensor.__le__(Tensor([8, 100, 2852127],"float32"), 0.3, )
paddle.Tensor.__le__(Tensor([8, 100, 2852127],"float32"), 0.7, )
paddle.Tensor.__le__(Tensor([8, 100, 2852127],"float32"), 0.9, )
paddle.Tensor.__le__(Tensor([8, 285212673],"float32"), 0.7, )
paddle.Tensor.__le__(Tensor([8, 2852127, 100],"float32"), 0.3, )
paddle.Tensor.__le__(Tensor([8, 2852127, 100],"float32"), 0.7, )
paddle.Tensor.__le__(Tensor([8, 2852127, 100],"float32"), 0.9, )
paddle.Tensor.__le__(Tensor([8388609, 512],"float16"), -127, )
paddle.Tensor.__le__(Tensor([8912897, 256],"float32"), 0.01, )
paddle.Tensor.__len__(Tensor([1, 1, 10186167, 224],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 1024, 2228225],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 128, 17825793],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 160, 14260634],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 1898255, 1202],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 1901418, 1200],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 1904593, 1198],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 1906184, 1197],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 192, 11883862],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 1920625, 1188],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 1956863, 1166],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 1958542, 1165],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 1970382, 1158],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 1984089, 1150],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 2013859, 1133],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 2029984, 1124],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 2039054, 1119],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 2093305, 1090],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 2110733, 1081],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 2124490, 1074],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 2126470, 1073],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 2138427, 1067],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 2200291, 1037],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 2228225, 1024],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 32, 71303169],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 3395389, 672],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 3961288, 576],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 4194305, 544],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 4456449, 512],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 4456449, 512],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 496, 4600205],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 512, 4456449],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 5484860, 416],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 2852127],"int64"), )
paddle.Tensor.__len__(Tensor([1, 106106, 32, 672],"float32"), )
paddle.Tensor.__len__(Tensor([1, 123791, 32, 576],"float32"), )
paddle.Tensor.__len__(Tensor([1, 131073, 32, 544],"float32"), )
paddle.Tensor.__len__(Tensor([1, 139265, 32, 512],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1500, 1521135],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1782580, 1280],"float32"), )
paddle.Tensor.__len__(Tensor([1, 2177, 1024, 1024],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2228225, 1024],"float32"), )
paddle.Tensor.__len__(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.__len__(Tensor([1, 2281701379],"int32"), )
paddle.Tensor.__len__(Tensor([1, 2281701379],"int64"), )
paddle.Tensor.__len__(Tensor([1, 23211, 192, 512],"float32"), )
paddle.Tensor.__len__(Tensor([1, 2373, 800, 1202],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2377, 800, 1200],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2381, 800, 1198],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2383, 800, 1197],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2401, 800, 1188],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2447, 800, 1166],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2449, 800, 1165],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2463, 800, 1158],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2481, 800, 1150],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2518, 800, 1133],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2538, 800, 1124],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2549, 800, 1119],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2617, 800, 1090],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2639, 800, 1081],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2656, 800, 1074],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2659, 800, 1073],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2674, 800, 1067],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2751, 800, 1037],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2970966, 768],"float32"), )
paddle.Tensor.__len__(Tensor([1, 3100138, 736],"float32"), )
paddle.Tensor.__len__(Tensor([1, 3241054, 704],"float32"), )
paddle.Tensor.__len__(Tensor([1, 34281, 160, 416],"float32"), )
paddle.Tensor.__len__(Tensor([1, 4194305, 544],"float32"), )
paddle.Tensor.__len__(Tensor([1, 4456449, 512],"float32"), )
paddle.Tensor.__len__(Tensor([1, 512, 4456449],"float32"), )
paddle.Tensor.__len__(Tensor([1, 544, 4194305],"float32"), )
paddle.Tensor.__len__(Tensor([1, 570425345, 4],"float32"), )
paddle.Tensor.__len__(Tensor([1, 5941931, 384],"float32"), )
paddle.Tensor.__len__(Tensor([1, 704, 3241054],"float32"), )
paddle.Tensor.__len__(Tensor([1, 736, 3100138],"float32"), )
paddle.Tensor.__len__(Tensor([1, 768, 2970966],"float32"), )
paddle.Tensor.__len__(Tensor([1, 79580, 128, 224],"float32"), )
paddle.Tensor.__len__(Tensor([1, 8705, 512, 512],"int64"), )
paddle.Tensor.__len__(Tensor([1, 8985, 496, 512],"int64"), )
paddle.Tensor.__len__(Tensor([10, 228170138],"float32"), )
paddle.Tensor.__len__(Tensor([10, 429496730],"float16"), )
paddle.Tensor.__len__(Tensor([100, 11408507, 2],"float32"), )
paddle.Tensor.__len__(Tensor([100, 2001, 11403],"float32"), )
paddle.Tensor.__len__(Tensor([100, 22817014, 1],"float32"), )
paddle.Tensor.__len__(Tensor([100, 22817014],"float32"), )
paddle.Tensor.__len__(Tensor([100, 376, 60684],"float32"), )
paddle.Tensor.__len__(Tensor([100, 60684, 376],"float32"), )
paddle.Tensor.__len__(Tensor([1000, 1140851, 2],"float32"), )
paddle.Tensor.__len__(Tensor([1000, 2001, 1141],"float32"), )
paddle.Tensor.__len__(Tensor([1000, 2281702],"float32"), )
paddle.Tensor.__len__(Tensor([10000, 228171],"float32"), )
paddle.Tensor.__len__(Tensor([100000, 22818],"float32"), )
paddle.Tensor.__len__(Tensor([1002, 2277148],"float32"), )
paddle.Tensor.__len__(Tensor([101, 22591103],"float32"), )
paddle.Tensor.__len__(Tensor([1013, 1501, 1501],"float32"), )
paddle.Tensor.__len__(Tensor([10186167, 7, 32],"float32"), )
paddle.Tensor.__len__(Tensor([106106, 1, 32, 672],"float32"), )
paddle.Tensor.__len__(Tensor([1073741825, 4],"float16"), )
paddle.Tensor.__len__(Tensor([1114113, 512, 4],"float32"), )
paddle.Tensor.__len__(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.__len__(Tensor([1189, 1500, 1280],"float32"), )
paddle.Tensor.__len__(Tensor([123791, 1, 32, 576],"float32"), )
paddle.Tensor.__len__(Tensor([13, 175515491, 1],"int32"), )
paddle.Tensor.__len__(Tensor([13, 7, 25073642],"int32"), )
paddle.Tensor.__len__(Tensor([131073, 1, 32, 544],"float32"), )
paddle.Tensor.__len__(Tensor([139265, 1, 32, 512],"float32"), )
paddle.Tensor.__len__(Tensor([14, 5093084, 32],"float32"), )
paddle.Tensor.__len__(Tensor([14, 7, 23282668],"float32"), )
paddle.Tensor.__len__(Tensor([142606337, 16],"float32"), )
paddle.Tensor.__len__(Tensor([1486, 1500, 1024],"float32"), )
paddle.Tensor.__len__(Tensor([1520121, 1501, 1],"float32"), )
paddle.Tensor.__len__(Tensor([16140, 376, 376],"float32"), )
paddle.Tensor.__len__(Tensor([17, 134217729, 1],"float32"), )
paddle.Tensor.__len__(Tensor([17, 376, 356963],"float32"), )
paddle.Tensor.__len__(Tensor([171798692, 5, 5],"float16"), )
paddle.Tensor.__len__(Tensor([17825793, 128],"int64"), )
paddle.Tensor.__len__(Tensor([1981, 1500, 768],"float32"), )
paddle.Tensor.__len__(Tensor([2, 1140850690, 1],"float32"), )
paddle.Tensor.__len__(Tensor([2, 1501, 760061],"float32"), )
paddle.Tensor.__len__(Tensor([200, 39, 14, 14, 1493],"float32"), )
paddle.Tensor.__len__(Tensor([200, 39, 14, 20895, 1],"float32"), )
paddle.Tensor.__len__(Tensor([200, 39, 20895, 14, 1],"float32"), )
paddle.Tensor.__len__(Tensor([200, 58207, 14, 14, 1],"float32"), )
paddle.Tensor.__len__(Tensor([2177, 1, 1024, 1024],"int64"), )
paddle.Tensor.__len__(Tensor([2228225, 1024],"float32"), )
paddle.Tensor.__len__(Tensor([2281701379, 1],"float32"), )
paddle.Tensor.__len__(Tensor([2281701379, 1],"int32"), )
paddle.Tensor.__len__(Tensor([2281701379, 1],"int64"), )
paddle.Tensor.__len__(Tensor([2281701379],"float32"), )
paddle.Tensor.__len__(Tensor([2281701379],"int64"), )
paddle.Tensor.__len__(Tensor([228170138, 10],"float32"), )
paddle.Tensor.__len__(Tensor([22817014, 100],"float32"), )
paddle.Tensor.__len__(Tensor([23211, 1, 192, 512],"float32"), )
paddle.Tensor.__len__(Tensor([2373, 1, 800, 1202],"int64"), )
paddle.Tensor.__len__(Tensor([2377, 1, 800, 1200],"int64"), )
paddle.Tensor.__len__(Tensor([2381, 1, 800, 1198],"int64"), )
paddle.Tensor.__len__(Tensor([2383, 1, 800, 1197],"int64"), )
paddle.Tensor.__len__(Tensor([2401, 1, 800, 1188],"int64"), )
paddle.Tensor.__len__(Tensor([2447, 1, 800, 1166],"int64"), )
paddle.Tensor.__len__(Tensor([2449, 1, 800, 1165],"int64"), )
paddle.Tensor.__len__(Tensor([2463, 1, 800, 1158],"int64"), )
paddle.Tensor.__len__(Tensor([2481, 1, 800, 1150],"int64"), )
paddle.Tensor.__len__(Tensor([2518, 1, 800, 1133],"int64"), )
paddle.Tensor.__len__(Tensor([2538, 1, 800, 1124],"int64"), )
paddle.Tensor.__len__(Tensor([2549, 1, 800, 1119],"int64"), )
paddle.Tensor.__len__(Tensor([2617, 1, 800, 1090],"int64"), )
paddle.Tensor.__len__(Tensor([2639, 1, 800, 1081],"int64"), )
paddle.Tensor.__len__(Tensor([2656, 1, 800, 1074],"int64"), )
paddle.Tensor.__len__(Tensor([2659, 1, 800, 1073],"int64"), )
paddle.Tensor.__len__(Tensor([2674, 1, 800, 1067],"int64"), )
paddle.Tensor.__len__(Tensor([2751, 1, 800, 1037],"int64"), )
paddle.Tensor.__len__(Tensor([2971, 1500, 512],"float32"), )
paddle.Tensor.__len__(Tensor([298496, 39, 14, 14, 1],"float32"), )
paddle.Tensor.__len__(Tensor([3, 152113426, 5],"float32"), )
paddle.Tensor.__len__(Tensor([3, 286331154, 5],"float16"), )
paddle.Tensor.__len__(Tensor([3, 3, 253522376],"float32"), )
paddle.Tensor.__len__(Tensor([3, 3, 253522376],"int32"), )
paddle.Tensor.__len__(Tensor([3, 3, 477218589],"float16"), )
paddle.Tensor.__len__(Tensor([3, 380283564, 2],"float32"), )
paddle.Tensor.__len__(Tensor([3, 380283564, 2],"int32"), )
paddle.Tensor.__len__(Tensor([3, 5, 152113426],"float32"), )
paddle.Tensor.__len__(Tensor([3, 5, 286331154],"float16"), )
paddle.Tensor.__len__(Tensor([3, 715827883, 2],"float16"), )
paddle.Tensor.__len__(Tensor([325957340, 7, 1],"int32"), )
paddle.Tensor.__len__(Tensor([325957340, 7],"float32"), )
paddle.Tensor.__len__(Tensor([34281, 1, 160, 416],"float32"), )
paddle.Tensor.__len__(Tensor([380283564, 3, 2],"float32"), )
paddle.Tensor.__len__(Tensor([380283564, 3, 2],"int32"), )
paddle.Tensor.__len__(Tensor([3802836, 30, 20],"float32"), )
paddle.Tensor.__len__(Tensor([3869, 768, 768],"float32"), )
paddle.Tensor.__len__(Tensor([3962, 1500, 384],"float32"), )
paddle.Tensor.__len__(Tensor([4148, 27504, 20],"float32"), )
paddle.Tensor.__len__(Tensor([4148, 30, 18336],"float32"), )
paddle.Tensor.__len__(Tensor([4213, 736, 736],"float32"), )
paddle.Tensor.__len__(Tensor([4604, 704, 704],"float32"), )
paddle.Tensor.__len__(Tensor([50, 1501, 30403],"float32"), )
paddle.Tensor.__len__(Tensor([50, 30403, 1501],"float32"), )
paddle.Tensor.__len__(Tensor([50, 45634028, 1],"float32"), )
paddle.Tensor.__len__(Tensor([570141, 2001, 2],"float32"), )
paddle.Tensor.__len__(Tensor([570425345, 4],"float32"), )
paddle.Tensor.__len__(Tensor([6068355, 376, 1],"float32"), )
paddle.Tensor.__len__(Tensor([713032, 3200],"float32"), )
paddle.Tensor.__len__(Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__len__(Tensor([7711, 544, 544],"float32"), )
paddle.Tensor.__len__(Tensor([79580, 1, 128, 224],"float32"), )
paddle.Tensor.__len__(Tensor([8705, 1, 512, 512],"int64"), )
paddle.Tensor.__len__(Tensor([8985, 1, 496, 512],"int64"), )
paddle.Tensor.__len__(Tensor([91268056, 5, 5],"float32"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([1],"int16"), Tensor([4294967297],"int16"), )
paddle.Tensor.__lshift__(Tensor([1],"int16"), Tensor([4294967297],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), )
paddle.Tensor.__lshift__(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), )
paddle.Tensor.__lshift__(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([200, 11408507],"int64"), Tensor([200, 11408507],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 11408507],"int64"), Tensor([200, 11408507],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.Tensor.__lshift__(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.Tensor.__lshift__(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.Tensor.__lshift__(Tensor([300],"int64"), Tensor([7605672, 300],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.Tensor.__lshift__(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.Tensor.__lshift__(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([4294967297],"int16"), Tensor([1],"int16"), )
paddle.Tensor.__lshift__(Tensor([4294967297],"int16"), Tensor([1],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([4294967297],"int16"), Tensor([4294967297],"int16"), )
paddle.Tensor.__lshift__(Tensor([4294967297],"int16"), Tensor([4294967297],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), )
paddle.Tensor.__lshift__(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), )
paddle.Tensor.__lshift__(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int64"), Tensor([300],"int64"), )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int64"), Tensor([300],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int64"), Tensor([7605672, 300],"int64"), False, )
paddle.Tensor.__lt__(Tensor([1, 1, 1, 1],"int64"), Tensor([1, 1, 1, 2281701379],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 1, 1],"int64"), Tensor([1, 1, 2281701379, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 1, 1],"int64"), Tensor([1, 2281701379, 1, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 1, 1],"int64"), Tensor([2281701379, 1, 1, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 1, 2281701379],"int64"), Tensor([1, 1, 1, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 1, 2281701379],"int64"), Tensor([1, 1, 1, 2281701379],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 10, 1],"int64"), Tensor([1, 228170138, 1, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 10, 228170138],"int64"), Tensor([1, 1, 1, 228170138],"int64"), )
paddle.Tensor.__lt__(Tensor([11, 17, 22967740],"int16"), 0, )
paddle.Tensor.__lt__(Tensor([11, 39045158, 10],"int16"), 0, )
paddle.Tensor.__lt__(Tensor([11],"int64"), Tensor([2281701379, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([12, 118839, 40, 40],"float32"), 0.012311480455524772, )
paddle.Tensor.__lt__(Tensor([12, 128, 37138, 40],"float32"), 0.012311480455524772, )
paddle.Tensor.__lt__(Tensor([12, 128, 40, 37138],"float32"), 0.012311480455524772, )
paddle.Tensor.__lt__(Tensor([12, 178956971, 2],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([12, 190141782],"float32"), 0.7853981633974483, )
paddle.Tensor.__lt__(Tensor([12, 1901418, 10, 10],"float32"), 0.017361111111111105, )
paddle.Tensor.__lt__(Tensor([12, 20, 17895698],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([12, 20, 9507090],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([12, 256, 20, 37138],"float32"), 0.01371742112482853, )
paddle.Tensor.__lt__(Tensor([12, 256, 37138, 20],"float32"), 0.01371742112482853, )
paddle.Tensor.__lt__(Tensor([12, 475355, 20, 20],"float32"), 0.01371742112482853, )
paddle.Tensor.__lt__(Tensor([12, 512, 10, 37138],"float32"), 0.017361111111111105, )
paddle.Tensor.__lt__(Tensor([12, 512, 37138, 10],"float32"), 0.017361111111111105, )
paddle.Tensor.__lt__(Tensor([12, 95070891, 2],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([1203073, 17, 5, 6, 7],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([13, 175515491],"float32"), 0.7853981633974483, )
paddle.Tensor.__lt__(Tensor([13, 175515491],"int64"), Tensor([13, 175515491],"int64"), )
paddle.Tensor.__lt__(Tensor([13, 175515491],"int64"), Tensor([13, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([13, 3134206, 56],"int64"), 16, )
paddle.Tensor.__lt__(Tensor([13, 3134206, 56],"int64"), 8, )
paddle.Tensor.__lt__(Tensor([13, 56, 3134206],"int64"), 16, )
paddle.Tensor.__lt__(Tensor([13, 56, 3134206],"int64"), 8, )
paddle.Tensor.__lt__(Tensor([134217729, 17],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([134217729, 17],"int64"), 2, )
paddle.Tensor.__lt__(Tensor([13421773, 17, 10],"int32"), 0, )
paddle.Tensor.__lt__(Tensor([14, 162978670],"int64"), -160, )
paddle.Tensor.__lt__(Tensor([142606337, 2, 2, 4],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([14260634, 1, 160],"float32"), Tensor([14260634, 1, 1],"float32"), )
paddle.Tensor.__lt__(Tensor([14260634, 160, 1],"float32"), Tensor([14260634, 1, 1],"float32"), )
paddle.Tensor.__lt__(Tensor([14868, 38367, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([14870, 153450],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([15171, 150402],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([15489, 36828, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([16, 142606337],"float32"), 1e-08, )
paddle.Tensor.__lt__(Tensor([162978670, 14],"int64"), -160, )
paddle.Tensor.__lt__(Tensor([16520, 138120],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([17, 134217729],"int64"), 2, )
paddle.Tensor.__lt__(Tensor([174763, 3, 64, 128],"float16"), 1, )
paddle.Tensor.__lt__(Tensor([190141782, 12],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.__lt__(Tensor([1],"int32"), Tensor([2281701379],"int32"), )
paddle.Tensor.__lt__(Tensor([1],"int64"), Tensor([2281701379],"int64"), )
paddle.Tensor.__lt__(Tensor([2, 1, 1140850690],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([2, 107374183, 4, 5],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([2, 107374183, 4, 5],"int8"), 0, )
paddle.Tensor.__lt__(Tensor([2, 1140850690, 1],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([2, 1140850690],"int32"), 2, )
paddle.Tensor.__lt__(Tensor([2, 1140850690],"int64"), 4, )
paddle.Tensor.__lt__(Tensor([2, 1140850690],"int64"), 5, )
paddle.Tensor.__lt__(Tensor([2, 2, 570425345],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([2, 228170138, 5],"int32"), Tensor([2, 228170138, 5],"int32"), )
paddle.Tensor.__lt__(Tensor([2, 285212673, 4],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([2, 3, 143165577, 5],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([2, 3, 143165577, 5],"int8"), 0, )
paddle.Tensor.__lt__(Tensor([2, 3, 4, 178956971],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([2, 3, 4, 178956971],"int8"), 0, )
paddle.Tensor.__lt__(Tensor([2, 4, 285212673],"int32"), Tensor([2, 4, 285212673],"int32"), )
paddle.Tensor.__lt__(Tensor([20, 1, 152, 750560],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([20, 1, 419431, 272],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([20, 114085069],"int32"), 20, )
paddle.Tensor.__lt__(Tensor([20, 114085069],"int64"), 2, )
paddle.Tensor.__lt__(Tensor([20, 114085069],"int64"), 4, )
paddle.Tensor.__lt__(Tensor([20, 2760, 152, 272],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([200, 11408507],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([2065, 157920, 7],"float32"), 0.1111111111111111, )
paddle.Tensor.__lt__(Tensor([2147483649, 2],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([21559, 105840],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([22084, 103320],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([2228225, 1024],"float32"), Tensor([2228225, 1024],"float32"), )
paddle.Tensor.__lt__(Tensor([22283, 256, 20, 20],"float32"), 0.01371742112482853, )
paddle.Tensor.__lt__(Tensor([2270350, 1005],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([2272611, 1004],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([2274877, 1003],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([2277148, 1002],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([2279422, 1001],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([2281701379, 1, 1, 1],"int64"), Tensor([1, 1, 1, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([2281701379, 1, 1, 1],"int64"), Tensor([2281701379, 1, 1, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([2281701379, 1],"float32"), 0.7853981633974483, )
paddle.Tensor.__lt__(Tensor([2281701379, 1],"int64"), 2, )
paddle.Tensor.__lt__(Tensor([2281701379, 1],"int64"), 4, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), 0.1, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), 0.25, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), 0.35, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), 0.45, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), 0.7, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), 1e-08, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), 1e-09, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), 2.0, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), 4.0, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.__lt__(Tensor([2281701379],"int32"), -3, )
paddle.Tensor.__lt__(Tensor([2281701379],"int32"), -5, )
paddle.Tensor.__lt__(Tensor([2281701379],"int32"), -7, )
paddle.Tensor.__lt__(Tensor([2281701379],"int32"), 0, )
paddle.Tensor.__lt__(Tensor([2281701379],"int32"), 10, )
paddle.Tensor.__lt__(Tensor([2281701379],"int32"), 11, )
paddle.Tensor.__lt__(Tensor([2281701379],"int32"), 4, )
paddle.Tensor.__lt__(Tensor([2281701379],"int32"), Tensor([1],"int32"), )
paddle.Tensor.__lt__(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), -1, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 0, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 1, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 10, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 11, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 15, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 2, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 20, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 4, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 5, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 50, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), Tensor([10, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), Tensor([1],"int64"), )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.Tensor.__lt__(Tensor([228170138, 1, 10, 1],"int64"), Tensor([1, 1, 1, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([228170138, 1, 10, 1],"int64"), Tensor([228170138, 1, 1, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([228170138, 10],"int64"), 2, )
paddle.Tensor.__lt__(Tensor([228170138, 10],"int64"), 4, )
paddle.Tensor.__lt__(Tensor([22817014, 100],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([228171, 10, 10, 10, 10],"int64"), Tensor([228171, 10, 10, 10, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([25264514, 17, 10],"int16"), 0, )
paddle.Tensor.__lt__(Tensor([256, 2049, 64, 128],"float16"), 1, )
paddle.Tensor.__lt__(Tensor([256, 3, 43691, 128],"float16"), 1, )
paddle.Tensor.__lt__(Tensor([256, 3, 64, 87382],"float16"), 1, )
paddle.Tensor.__lt__(Tensor([285212673, 2, 4],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([3, 2, 2, 190141782],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([3, 2, 95070891, 4],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([3, 760567127],"int64"), 4, )
paddle.Tensor.__lt__(Tensor([3, 95070891, 2, 4],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([30, 76056713],"int32"), 30, )
paddle.Tensor.__lt__(Tensor([32, 71303169],"float32"), 1e-08, )
paddle.Tensor.__lt__(Tensor([325957340, 7],"int64"), -160, )
paddle.Tensor.__lt__(Tensor([325957340, 7],"int64"), 8, )
paddle.Tensor.__lt__(Tensor([325957340, 7],"int64"), Tensor([325957340, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([34817, 4, 128, 128],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([3565159, 2, 5, 64],"float32"), 0.55, )
paddle.Tensor.__lt__(Tensor([357913942, 12],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([37, 61667605],"float32"), 1e-08, )
paddle.Tensor.__lt__(Tensor([38028357, 60],"int32"), 10, )
paddle.Tensor.__lt__(Tensor([38028357, 60],"int32"), 2, )
paddle.Tensor.__lt__(Tensor([38028357, 60],"int32"), 20, )
paddle.Tensor.__lt__(Tensor([38028357, 60],"int32"), 30, )
paddle.Tensor.__lt__(Tensor([38028357, 60],"int32"), 6, )
paddle.Tensor.__lt__(Tensor([4, 157920, 3613],"float32"), 0.1111111111111111, )
paddle.Tensor.__lt__(Tensor([4, 1782580, 5, 64],"float32"), 0.55, )
paddle.Tensor.__lt__(Tensor([4, 2, 4456449, 64],"float32"), 0.55, )
paddle.Tensor.__lt__(Tensor([4, 2, 5, 57042535],"float32"), 0.55, )
paddle.Tensor.__lt__(Tensor([4, 22400, 25466],"float32"), 0.35, )
paddle.Tensor.__lt__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__lt__(Tensor([4, 34817, 128, 128],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([4, 4, 1114113, 128],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([4, 4, 128, 1114113],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.__lt__(Tensor([4, 570425345, 1],"float32"), 0.35, )
paddle.Tensor.__lt__(Tensor([4, 570425345],"float32"), Tensor([4, 570425345],"float32"), )
paddle.Tensor.__lt__(Tensor([4, 570425345],"int32"), Tensor([4, 570425345],"int32"), )
paddle.Tensor.__lt__(Tensor([4, 81489335, 7],"float32"), 0.1111111111111111, )
paddle.Tensor.__lt__(Tensor([4294967297, 1],"float16"), 1e-07, )
paddle.Tensor.__lt__(Tensor([4294967297],"uint8"), 0, )
paddle.Tensor.__lt__(Tensor([42949673, 100],"float16"), 1e-07, )
paddle.Tensor.__lt__(Tensor([4456449, 512],"float32"), 0.6, )
paddle.Tensor.__lt__(Tensor([4456449, 512],"float32"), 0.7, )
paddle.Tensor.__lt__(Tensor([44565, 512, 10, 10],"float32"), 0.017361111111111105, )
paddle.Tensor.__lt__(Tensor([456340276, 5],"int32"), Tensor([456340276, 5],"int32"), )
paddle.Tensor.__lt__(Tensor([47159, 12096, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([5, 5, 91268056],"int32"), 10, )
paddle.Tensor.__lt__(Tensor([5, 5, 91268056],"int64"), 10, )
paddle.Tensor.__lt__(Tensor([5, 91268056, 5],"int32"), 10, )
paddle.Tensor.__lt__(Tensor([5, 91268056, 5],"int64"), 10, )
paddle.Tensor.__lt__(Tensor([51349, 11109, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([5309, 3, 352, 407],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([55189, 1, 152, 272],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([56123, 10164, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([570425345, 1, 4],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([570425345, 4],"int64"), 3, )
paddle.Tensor.__lt__(Tensor([57042535, 20, 2],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([6, 380283564],"int32"), 6, )
paddle.Tensor.__lt__(Tensor([61667605, 37],"float32"), 1e-08, )
paddle.Tensor.__lt__(Tensor([657931, 3, 34, 34],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([7, 325957340],"int64"), -160, )
paddle.Tensor.__lt__(Tensor([7, 325957340],"int64"), 8, )
paddle.Tensor.__lt__(Tensor([7012, 3, 298, 364],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([71303169, 32],"float32"), 1e-08, )
paddle.Tensor.__lt__(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__lt__(Tensor([71582789, 3, 4, 5],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([71582789, 3, 4, 5],"int8"), 0, )
paddle.Tensor.__lt__(Tensor([727584, 56, 56],"int64"), 16, )
paddle.Tensor.__lt__(Tensor([727584, 56, 56],"int64"), 8, )
paddle.Tensor.__lt__(Tensor([760567127, 3],"int64"), 4, )
paddle.Tensor.__lt__(Tensor([760567127, 3],"int64"), 5, )
paddle.Tensor.__lt__(Tensor([7761, 3, 280, 350],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([8, 17, 5, 6, 1052689],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([8, 17, 5, 902305, 7],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([8, 17, 751921, 6, 7],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([8, 2556529, 5, 6, 7],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([91268056, 5, 5],"int32"), 10, )
paddle.Tensor.__lt__(Tensor([91268056, 5, 5],"int64"), 10, )
paddle.Tensor.__lt__(Tensor([914144, 3, 32, 26],"float32"), 0.5, )
paddle.Tensor.__matmul__(Tensor([1, 1, 1024],"float32"), Tensor([1024, 2228225],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 1280],"float32"), Tensor([1280, 1782580],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 35651585, 64],"float32"), Tensor([1, 1, 64, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 384],"float32"), Tensor([384, 5941931],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 512],"float32"), Tensor([512, 4456449],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 768],"float32"), Tensor([768, 2970966],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 8912897, 256],"float32"), Tensor([1, 1, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 8912897, 256],"float32"), Tensor([1, 1, 256, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 9507090, 240],"float32"), Tensor([1, 1, 240, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 9507090, 240],"float32"), Tensor([1, 1, 240, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 20, 2, 16],"float32"), Tensor([16, 142606337],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 20, 32],"float32"), Tensor([32, 71303169],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 20, 7130317, 16],"float32"), Tensor([16, 16],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 2247, 15872, 64],"float32"), Tensor([1, 1, 64, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 2247, 15872, 64],"float32"), Tensor([1, 2247, 64, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 545, 16384, 256],"float32"), Tensor([1, 1, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 545, 16384, 256],"float32"), Tensor([1, 1, 256, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 545, 16384, 256],"float32"), Tensor([1, 545, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 545, 16384, 256],"float32"), Tensor([1, 545, 256, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 599, 15872, 240],"float32"), Tensor([1, 1, 240, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 599, 15872, 240],"float32"), Tensor([1, 1, 240, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 599, 15872, 240],"float32"), Tensor([1, 599, 240, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 599, 15872, 240],"float32"), Tensor([1, 599, 240, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 71303169, 2, 16],"float32"), Tensor([16, 16],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 71303169, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 715827883, 6],"float16"), Tensor([1, 6, 6],"float16"), )
paddle.Tensor.__matmul__(Tensor([1, 768],"float32"), Tensor([768, 2970966],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 4],"float32"), Tensor([4, 570425345],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 768],"float32"), Tensor([768, 2970966],"float32"), )
paddle.Tensor.__matmul__(Tensor([126322568, 17, 2],"float16"), Tensor([126322568, 2, 2],"float16"), )
paddle.Tensor.__matmul__(Tensor([2, 4, 2, 10],"float32"), Tensor([10, 228170138],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 4, 2, 14],"float32"), Tensor([14, 162978670],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 4, 20372334, 14],"float32"), Tensor([14, 14],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 4, 28521268, 10],"float32"), Tensor([10, 10],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 40744668, 2, 14],"float32"), Tensor([14, 14],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 57042535, 2, 10],"float32"), Tensor([10, 10],"float32"), )
paddle.Tensor.__matmul__(Tensor([20372334, 4, 2, 14],"float32"), Tensor([14, 14],"float32"), )
paddle.Tensor.__matmul__(Tensor([21474837, 100, 2],"float16"), Tensor([21474837, 2, 2],"float16"), )
paddle.Tensor.__matmul__(Tensor([2247, 1, 15872, 64],"float32"), Tensor([1, 1, 64, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([2247, 1, 15872, 64],"float32"), Tensor([2247, 1, 64, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([28521268, 4, 2, 10],"float32"), Tensor([10, 10],"float32"), )
paddle.Tensor.__matmul__(Tensor([2970966, 768],"float32"), Tensor([768, 1000],"float32"), )
paddle.Tensor.__matmul__(Tensor([2970966, 768],"float32"), Tensor([768, 4],"float32"), )
paddle.Tensor.__matmul__(Tensor([2970966, 768],"float32"), Tensor([768, 768],"float32"), )
paddle.Tensor.__matmul__(Tensor([3565159, 20, 2, 16],"float32"), Tensor([16, 16],"float32"), )
paddle.Tensor.__matmul__(Tensor([3565159, 20, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([545, 1, 16384, 256],"float32"), Tensor([1, 1, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([545, 1, 16384, 256],"float32"), Tensor([1, 1, 256, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([545, 1, 16384, 256],"float32"), Tensor([545, 1, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([545, 1, 16384, 256],"float32"), Tensor([545, 1, 256, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([570425345, 4],"float32"), Tensor([4, 4],"float32"), )
paddle.Tensor.__matmul__(Tensor([599, 1, 15872, 240],"float32"), Tensor([1, 1, 240, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([599, 1, 15872, 240],"float32"), Tensor([1, 1, 240, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([599, 1, 15872, 240],"float32"), Tensor([599, 1, 240, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([599, 1, 15872, 240],"float32"), Tensor([599, 1, 240, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([7158279, 100, 6],"float16"), Tensor([1, 6, 6],"float16"), )
paddle.Tensor.__matmul__(Tensor([7158279, 100, 6],"float16"), Tensor([7158279, 6, 6],"float16"), )
paddle.Tensor.__mod__(Tensor([190141782, 3, 4],"float32"), 1, )
paddle.Tensor.__mod__(Tensor([190141782, 3, 4],"float32"), 1.0, )
paddle.Tensor.__mod__(Tensor([190141782, 3, 4],"int32"), 1, )
paddle.Tensor.__mod__(Tensor([190141782, 3, 4],"int32"), 1.0, )
paddle.Tensor.__mod__(Tensor([190141782, 3, 4],"int64"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 142606337, 8],"int32"), 6, )
paddle.Tensor.__mod__(Tensor([2, 2, 570425345],"float32"), 2, )
paddle.Tensor.__mod__(Tensor([2, 2, 570425345],"float32"), 2.0, )
paddle.Tensor.__mod__(Tensor([2, 2, 570425345],"int64"), 2.0, )
paddle.Tensor.__mod__(Tensor([2, 285212673, 4],"float32"), 1, )
paddle.Tensor.__mod__(Tensor([2, 285212673, 4],"float32"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 285212673, 4],"int32"), 1, )
paddle.Tensor.__mod__(Tensor([2, 285212673, 4],"int32"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 285212673, 4],"int64"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 3, 380283564],"float32"), 1, )
paddle.Tensor.__mod__(Tensor([2, 3, 380283564],"float32"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 3, 380283564],"int32"), 1, )
paddle.Tensor.__mod__(Tensor([2, 3, 380283564],"int32"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 3, 380283564],"int64"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 3, 715827883],"float16"), 1, )
paddle.Tensor.__mod__(Tensor([2, 3, 715827883],"float16"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 536870913, 4],"float16"), 1, )
paddle.Tensor.__mod__(Tensor([2, 536870913, 4],"float16"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 570425345, 2],"float32"), 2, )
paddle.Tensor.__mod__(Tensor([2, 570425345, 2],"float32"), 2.0, )
paddle.Tensor.__mod__(Tensor([2, 570425345, 2],"int64"), 2.0, )
paddle.Tensor.__mod__(Tensor([2, 8, 142606337],"int32"), 6, )
paddle.Tensor.__mod__(Tensor([28, 81489335],"int32"), 6, )
paddle.Tensor.__mod__(Tensor([285212673, 8],"int32"), 6, )
paddle.Tensor.__mod__(Tensor([35651585, 8, 8],"int32"), 6, )
paddle.Tensor.__mod__(Tensor([357913942, 3, 4],"float16"), 1, )
paddle.Tensor.__mod__(Tensor([357913942, 3, 4],"float16"), 1.0, )
paddle.Tensor.__mod__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__mod__(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.__mod__(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.Tensor.__mod__(Tensor([570425345, 2, 2],"float32"), 2, )
paddle.Tensor.__mod__(Tensor([570425345, 2, 2],"float32"), 2.0, )
paddle.Tensor.__mod__(Tensor([570425345, 2, 2],"int64"), 2.0, )
paddle.Tensor.__mod__(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__mod__(Tensor([8, 285212673],"int32"), 6, )
paddle.Tensor.__mod__(Tensor([81489335, 28],"int32"), 6, )
paddle.Tensor.__mul__(Tensor([1, 1, 9507090, 240],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 126761188, 9, 2],"float32"), 16.0, )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 46422, 3],"float32"), 0.0022156128761111615, )
paddle.Tensor.__mul__(Tensor([1, 142606337, 8, 2],"float32"), 8.0, )
paddle.Tensor.__mul__(Tensor([1, 1980644, 128, 3, 3],"float32"), 0.0022156128761111615, )
paddle.Tensor.__mul__(Tensor([1, 2281701379],"int32"), 113, )
paddle.Tensor.__mul__(Tensor([1, 2281701379],"int32"), 156, )
paddle.Tensor.__mul__(Tensor([1, 2281701379],"int32"), 169, )
paddle.Tensor.__mul__(Tensor([1, 2281701379],"int32"), 210, )
paddle.Tensor.__mul__(Tensor([1, 2281701379],"int32"), 5, )
paddle.Tensor.__mul__(Tensor([1, 2281701379],"int32"), 52, )
paddle.Tensor.__mul__(Tensor([1, 22817014, 100],"float32"), Tensor([1, 22817014, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 3, 1, 16, 1, 32, 1485483],"float32"), 2, )
paddle.Tensor.__mul__(Tensor([1, 30, 38028357, 2],"float32"), 2.0, )
paddle.Tensor.__mul__(Tensor([1, 8154, 529, 529],"float32"), 0.14433756729740643, )
paddle.Tensor.__mul__(Tensor([10, 499, 457255],"float32"), 22.627416997969522, )
paddle.Tensor.__mul__(Tensor([100, 22817014],"float32"), 100000000, )
paddle.Tensor.__mul__(Tensor([10000, 228171],"float32"), 0.05, )
paddle.Tensor.__mul__(Tensor([10000, 228171],"float32"), 0.14, )
paddle.Tensor.__mul__(Tensor([10000, 228171],"float32"), 0.36, )
paddle.Tensor.__mul__(Tensor([10000, 228171],"float32"), 0.44, )
paddle.Tensor.__mul__(Tensor([10000, 228171],"float32"), 0.48000000000000004, )
paddle.Tensor.__mul__(Tensor([10563433, 12, 9, 2],"float32"), 16.0, )
paddle.Tensor.__mul__(Tensor([11, 207427399, 1],"float32"), 0.1, )
paddle.Tensor.__mul__(Tensor([12, 3, 10, 6338060, 1],"float32"), 2.5, )
paddle.Tensor.__mul__(Tensor([128, 1, 1],"float32"), Tensor([124, 128, 2568, 56],"float32"), )
paddle.Tensor.__mul__(Tensor([13, 5484860, 32],"float32"), 5.656854249492381, )
paddle.Tensor.__mul__(Tensor([13, 7, 25073642],"float32"), 5.656854249492381, )
paddle.Tensor.__mul__(Tensor([14260634, 10, 8, 2],"float32"), 8.0, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.002325832173190063, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.007709243368968499, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.009731091072816223, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.012335036441019742, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.014092724727145955, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.0215787514939082, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.025731158119220998, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.044564730203318734, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.045976795105284025, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.04617086659219749, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.04764520604483702, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.0532482086978564, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.05692599464399273, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.05713925470484982, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.06637123436741443, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.08217325662873019, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.09431008860077154, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.09713243015668926, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.1059265363636519, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.11526976912772989, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.11588485406798033, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.11710190636165418, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.12969626267383305, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.14168883750490124, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.14821082089683207, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.15255091444873892, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.18687400797729914, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.18814374829949232, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.19187121764702725, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.1948624491860973, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.19693492281796232, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.2086944829936236, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.20918026073134843, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.2409134028066735, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.2631000602799475, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.2822129641309017, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.29029164361817783, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.2959613818962353, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.3016374866896355, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.32155546440168004, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.3242017504596959, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.34114204984594193, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.3506112655218556, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.35301332973995536, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.35705186830232777, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.3579486398408334, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.3602730418243424, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.3611535902421271, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.36847020145686293, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.3854278674885529, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.39448488367491286, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.39941597220125724, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.40064067809481607, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.4367184464780648, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.44334249525333097, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.44915969263236133, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.4872765043788862, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.5019707317107389, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.5135746489369558, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.5288825772398112, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.5372350359750172, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.5993593219051839, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.6331819000122685, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.6366507382610754, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.63863597946705, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.6425517527580034, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.6588579501540581, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.6652829921829052, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.66554426363085, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.6678023690482074, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.6680480917243117, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.6757982495403041, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.6850703156557525, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.7086767403424442, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.7102833934909863, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.7136716456113331, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.7187334981809743, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.7328355194902716, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.7377280644093209, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.7775559631981245, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.7813329825627084, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.7959179642711228, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.802458518814135, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.8035056583068699, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.8163484909562471, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.8270848408576377, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.8299381446884048, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.8318279481796327, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.8340918828440527, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.846997701013966, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.8539981623275619, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.8677305312210116, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.873346456664502, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.8776460133630423, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.8840848925116616, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.8896472853156022, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.8899168816999532, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.8994966635526058, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.9026642129145563, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.9096900099855171, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.9153562786642175, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.9297548581951037, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.9319185249855897, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.9363491158706063, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.9387959801345105, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.9444602779406064, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.9708856886352245, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.9835458872913626, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.9876833717401798, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.9893438965231872, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.9951621848335566, )
paddle.Tensor.__mul__(Tensor([15158, 3, 224, 224],"float32"), 0.9954324059632872, )
paddle.Tensor.__mul__(Tensor([15474, 128, 128, 3, 3],"float32"), 1, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.007441336192891002, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.009908092358717036, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.010432947975308627, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.012331408701879765, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.013603365004392335, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.016380515807252756, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.020642700251925418, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.03459016549280669, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.0372075715653335, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.04617086659219749, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.0532482086978564, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.06829416550140821, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.0719866071428571, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.07496329578704082, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.07682371052763237, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.09166590520758255, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.09431008860077154, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.09438775510204078, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.09879055029744688, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.10570572459410629, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.10605530795225285, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.10996421049948486, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.12007093748745418, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.1215122767857143, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.12747130102040816, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.14493052655450067, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.1704031134422046, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.17063555476568149, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.17219387755102045, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.1724330357142857, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.17291515914236233, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.17569309983000037, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.1868039802510172, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.1875, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.19116709183673475, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.1919642857142857, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.19450371889325901, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.19718590561224492, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.1977721497896091, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.19858099489795922, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.19985650510204078, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.20394775894839912, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.2053571428571428, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.20605644889543795, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.2099011479591837, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.212531887755102, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.21554926776796404, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.21568495873849391, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.22345344387755106, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.2265019272243778, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.234375, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.245446062398323, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.2506377551020408, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.25246477118488475, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.2529944143647357, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.2544642857142857, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.25765306122448983, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.25805165816326525, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.25868941326530615, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.26016422193877553, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.2613600127551021, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.2620721174612918, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.2622767857142857, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.26407047193877553, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.2686921949768365, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.2806568916478084, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.28408713435832356, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.2863283543886669, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.29097576530612246, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.2955994897959183, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.3002431441326531, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.3086009208907985, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.3133370535714286, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.31492968434424756, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.31640625, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.31685808226365586, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.32393994071404153, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.32509566326530615, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.33059630102040816, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.3379703443877551, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.34618067253139767, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.3480947066326531, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.3496691645408163, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.34975199323056216, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.35913584183673475, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.3603093076275259, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.36183334621479535, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.36856265943877553, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.380991372197854, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.38337881727178, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.3854278674885529, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.3962969603865135, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.4029255220550677, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.41597576530612246, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.4199662753754447, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.4204799107142857, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.4208397122973211, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.43654336734693877, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.4438376913265306, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.4450334821428572, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.4452175860562114, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.4454520089285714, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.45132670242144646, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.4534323215175019, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.4536830357142857, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.4555564413265306, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.4595528683862431, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.4672995451279609, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.47265625, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.48077837390552014, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.48628826530612246, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.48788265306122447, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.4933035714285714, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5006377551020408, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5014349489795918, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5039461096938775, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5100048384556479, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5137117346938775, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5222217793367347, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5290178571428571, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5365911989795918, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5415707031505685, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5465676784824981, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5544483418367347, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5582390378967679, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5587531887755102, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5648118622448979, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5650111607142857, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5665634928086469, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5864955357142857, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5865150100304503, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5867346938775511, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5889149068661877, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5945524139826749, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.5988121811224489, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.61328125, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6157924107142857, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6213329081632653, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6246412627551021, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6313775510204082, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6437141262755102, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6468160917382817, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6609787702831212, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6617506595269044, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6668925382653061, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6691056493672818, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6691783476798205, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6735491071428572, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6736640244340846, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6789700255102041, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6805444834183674, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6863440688775511, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6874780652603456, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6891758702123829, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6919642857142857, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6920240752551021, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6922034438775511, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6950733418367347, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.6995608170521844, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7041298297797105, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7046396683673469, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7088453869320932, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7110770089285714, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7215403602688273, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7257859566882471, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7273564724422692, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7279959890326684, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7296316964285714, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7371452487244898, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7415639180142382, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7446522338456192, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7684157543106291, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.770766900510204, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7725406568877551, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7746941712111738, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7775273664101381, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.78515625, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7854751275510204, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7880462545446791, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.7977453580519468, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8007015306122449, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8039102359693877, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.80859375, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.812257330839957, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8131259920227009, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8148506275074421, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.821705586077477, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8272082270408163, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8299381446884048, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8303571428571428, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.851789179103168, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8523198341836735, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8592101577025764, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.864338702378193, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8660365952390443, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8674864477040816, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8747290391410693, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.875, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8759197628469284, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8900357895005151, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8936543367346939, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8941468565077776, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8946059642126788, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8989556760204082, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.8995592827115572, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9050470203232402, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9109457156098948, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9119605559339731, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9137063164527778, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9166932397959183, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9197915178320074, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9291294642857143, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9306460392677659, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9345362792062566, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9351084183673469, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9413264124735127, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9418845663265306, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9461096938775511, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9494421880352015, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9514553164013633, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9526466836734694, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9538291334078025, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9540232048947159, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9604974656826961, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9801629376981507, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9815044606761152, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9899553571428571, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.992558663807109, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9946167571076953, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.9951621848335566, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.0010063680062565152, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.012686081743921935, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.030078068207191853, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.03129050258863201, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.03172981315354806, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.03546707449178832, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.04564425066860745, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.0491181631967489, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.0496260260756952, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.07751319936396052, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.08708106150697836, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.09043649124074482, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.09144544531317034, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.09228667483950082, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.09476522780309718, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.09495297967675978, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.1007068181457968, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.1100831183000468, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.12756738599545578, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.1391217240044747, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.16005375920103274, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.1730570186520864, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.18514937249255797, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.1868039802510172, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.2275546027979103, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.23256727654386322, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.23278548155548612, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.23869465108628773, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.24195597187765158, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.2471133343610021, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.25209886026743533, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.28408713435832356, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.30312214583833236, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.31209789601777116, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.3249303320370802, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.34249321193408777, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.3431657205234662, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.3490790178986538, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.35705186830232777, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.37991283630492056, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.3942357235646182, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.39811011789018025, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.39949112884601456, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.4024024496357209, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.41108509313381225, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.41119482099056515, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.4209493039332014, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.4338489559797366, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.4355162310406294, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.4432513940126632, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.45482713175691625, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.4556199144817997, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.45802359569924556, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.47702238806045466, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.48886955553749273, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.4936327620096779, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.5332092277929341, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.5522292083496225, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.5547958753559049, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.5832780797178886, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.6036654964865894, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.6244340805919161, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.6396906923724741, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.6641834041061576, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.6742542246619924, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.6750696679629198, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.6905433568047497, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.6933579685102447, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.6975668984407352, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.6977181715587952, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.6984006092179721, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.7257859566882471, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.7273564724422692, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.7361176359408513, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.7636988933896616, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.76706359907336, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.7726298389005498, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.8026023675594701, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.8061797306148507, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.8109237114606035, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.8255791029083978, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.8455307744177557, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.848313301068971, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.8776460133630423, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.8982368361286425, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9012094497025531, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9077133251604992, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9095635087592552, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9123533849782088, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9387959801345105, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9430740053560073, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9494421880352015, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9503739739243048, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9558379977982903, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9608002410714231, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9702992325747785, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9863966349956077, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9902592160842962, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9902689089271838, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9984833725248067, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.998553629459922, )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.9999429100059736, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.0022688252262053066, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.0061508832510750455, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.007099251342877033, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.008522265488057124, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.012316628259820162, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.018495539323884813, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.0215787514939082, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.03172981315354806, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.037504848167477525, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.039199758928576856, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.04301633155999096, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.06322458427799363, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.07019313860988925, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.10996421049948486, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.11921755300354851, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.1350929808076194, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.14078984229742364, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.15455215721958304, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.1704031134422046, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.18514937249255797, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.18687400797729914, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.18814374829949232, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.23120770317754255, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.2347652932965372, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.24018957713335753, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.24095334665306573, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.24138284129304155, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.24921334693699415, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.25986821173227914, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.28099733564439355, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.33890385500118275, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.34114204984594193, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.34119218323117717, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.3431657205234662, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.3506112655218556, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.3572644468318697, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.36136402053295, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.3620420451542119, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.36653255096395176, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.3805595180437753, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.38747215896894793, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.4068604056827112, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.4145033538848753, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.4233194698900917, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.4373339245400843, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.4392370169905321, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.447582371779077, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.45482713175691625, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.4872765043788862, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.4936327620096779, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.5111304444625073, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.5127234956211137, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.5290757565676506, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.5445078720545593, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.5672511687840316, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.5698392799529319, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.5779209647336421, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.5825577478240547, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.5830822377132234, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.5865150100304503, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.6117144614424377, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.6236478520444233, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.6251692651589169, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.625572205555578, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.63863597946705, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.6477626013498861, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.6538193274686024, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.6691783476798205, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.6742542246619924, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.6977181715587952, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.7086767403424442, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.7102833934909863, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.7190026643556064, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.7227505561741524, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.7313078050231635, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.7490459155163981, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.76706359907336, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.7775273664101381, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.7870990958910256, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8071145480655475, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8087629594670245, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8148506275074421, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8161605510270528, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.821705586077477, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8230637335923796, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8284232581829274, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8313464891077619, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8375028886806101, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8522608486306545, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8567877028460039, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8583111624950988, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8592101577025764, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8917511227938176, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8959819079854414, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.8991462185082532, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9056899113992285, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9096950047099696, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9152181776807458, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9171497235723636, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9190896655385267, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9279777268121174, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9526006695764512, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9558379977982903, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9563539954753154, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9567055705470361, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9570280318386816, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9589498428520292, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9646088079889922, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9743747664842826, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9807758673282951, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9868657865859045, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9876649635589803, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9924872995439417, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9935628710688508, )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.9961537222235423, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.0038501170306646237, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.006490596502076618, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.009748529777526938, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.012992568921782398, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.013603365004392335, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.014889713043442665, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.03459016549280669, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.041140921121165075, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.0485738143136647, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.0496260260756952, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.057375471580164414, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.059671667438008204, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.06077030572377817, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.07644074441136195, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.08434757422490821, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.08478182231925419, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.08540105148277616, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.0862936835472222, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.10453438152996875, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.1100831183000468, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.11035271468439778, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.11397612788982536, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.12007093748745418, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.12741303378875302, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.13496423461650653, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.15225861777618108, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.17291515914236233, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.18208105763988214, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.1868039802510172, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.1890762885393965, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.18920120648610939, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.19158913517959741, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.2086944829936236, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.21233343260259052, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.2274055741780056, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.2275546027979103, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.23181549950049363, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.23869465108628773, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.25209886026743533, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.2738217952799524, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.277337516991127, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.2784977239070521, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.2806568916478084, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.28408713435832356, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.29357949936178085, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.3094566431952504, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.3125219347396544, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.32155546440168004, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.3332789176781577, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.33943754288954997, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.3419179864120675, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.3461140886387384, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.3519714281298345, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.3531839082617183, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.3611535902421271, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.3711284122987677, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.374427794444422, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.3779916234231982, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.38896261659505693, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.3962969603865135, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.4005446089125867, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.4193905226785973, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.44683603602857663, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.45479485307545825, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.45756684451820495, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.4709998259444337, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.47111742276018875, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.4812830207842031, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.48407290223350075, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.48886955553749273, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.49755542541131115, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.5045659449084303, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.5068213032895024, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.5236419658966811, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.5266166581385756, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.5358019428839816, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.5404653929578799, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.5452051469245418, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.5635224022354304, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.577567854413882, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.5862517551143263, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.5889149068661877, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.5975975503642791, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.5981228346955039, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6052814289773266, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6064644663701253, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6383674819442512, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6388464097578729, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6420513601591666, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6448387072511168, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6469866702600446, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6502480067694378, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6573097943130382, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6578804853730928, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6651684686925391, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6652829921829052, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6690334489780956, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6736640244340846, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.686653436698776, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.6957737877611103, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.7011921951936925, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.7041298297797105, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.7193431083521916, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.7362991974079803, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.7414340551596242, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.7598104228666425, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.7748564643441459, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.7856453319184507, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.7872028996117626, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.7997006610081713, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8022278502103909, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8026023675594701, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8148506275074421, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.825908113959323, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8270848408576377, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8340918828440527, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8372054881691843, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8504245353659081, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8539981623275619, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8555756183029495, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8602112766981614, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8658512550579807, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8660166070649253, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8681520151194978, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.873346456664502, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8841151459320197, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8879390161192464, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8909639670628471, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8942942754058937, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.8987635584249606, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.9012094497025531, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.9392296942762218, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.9426245284198356, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.9454071170240773, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.9503739739243048, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.9561313919095076, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.9682701868464519, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.9807758673282951, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.9808367901866949, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.9841485810732972, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.9876649635589803, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.9924872995439417, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.9964789531765224, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 212212],"float32"), 0.9995023080236882, )
paddle.Tensor.__mul__(Tensor([17825793, 128],"float32"), 0.044194173824159216, )
paddle.Tensor.__mul__(Tensor([2, 1140850690],"int32"), 157, )
paddle.Tensor.__mul__(Tensor([2, 1140850690],"int32"), 89, )
paddle.Tensor.__mul__(Tensor([2, 2, 81489335, 7],"float32"), 0.37796447300922725, )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"float32"), Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"float32"), 0.020000000000000004, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"float32"), 0.06999999999999999, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"float32"), 0.07759724931694308, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"float32"), 0.21000000000000002, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"float32"), 0.36, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"float32"), 0.47000000000000003, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"float32"), 0.72, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"float32"), 0.95, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"float32"), 5.6, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"int32"), 160, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"int32"), 166, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"int32"), 209, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"int32"), 23, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"int32"), 234, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"int32"), 30, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"int32"), 303, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"int32"), 39, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"int32"), 68, )
paddle.Tensor.__mul__(Tensor([2281701379, 1],"int32"), 85, )
paddle.Tensor.__mul__(Tensor([2281701379],"float32"), 0.002, )
paddle.Tensor.__mul__(Tensor([2281701379],"float32"), 50, )
paddle.Tensor.__mul__(Tensor([2281701379],"float32"), 64, )
paddle.Tensor.__mul__(Tensor([228170138, 1, 1, 10],"float32"), -10000.0, )
paddle.Tensor.__mul__(Tensor([228170138, 5, 2],"float32"), -1, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.0016034985756608888, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.002449715554771546, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.0031887755102041337, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.016725640130203712, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.017138227282341306, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.0443359177932334, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.04982461734693877, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.05055781196479848, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.0558035714285714, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.056329975567623536, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.059671667438008204, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.06671078438405034, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.06790857200961986, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.07174744897959184, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.07531865823414596, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.08764661502179119, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.09713243015668926, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.09775457706723492, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.10539403578732118, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.11391595772189235, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.11526976912772989, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.11710190636165418, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.11736457418752001, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.11798182152809167, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.1215122767857143, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.1240802371530716, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.12756738599545578, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.12777813916704236, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.13400829081632648, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.14957546463409194, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.15126753826530615, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.15159239386412746, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.16143176020408156, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.16279451183081572, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.16699085168222538, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.1692161624656816, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.17091836734693877, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.17409188604067705, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.17422672193877553, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.17889030612244894, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.19450371889325901, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.1956957761726692, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.20467952806122447, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.20735012755102045, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.2099011479591837, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.21153539540816324, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.21182955836642647, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.21866701743729156, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.224609375, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.22912105374318503, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.234375, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.24681122448979598, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.24744897959183676, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.2622719355906791, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.2642543507707196, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.268295599489796, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.2720590925562856, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.2784977239070521, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.2806122448979592, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.2829241071428572, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.2841198979591837, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.29337940689882014, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.2940848214285714, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.2984693877551021, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3034917091836735, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.30513770971408516, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3184789540816326, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3185586734693877, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3249303320370802, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.33984375, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3408869670548697, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.34119218323117717, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3490712691326531, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3506112655218556, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3522373986501139, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3565051020408163, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3577512949484046, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3578404017857143, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3603093076275259, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3605958934156489, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3755659194080839, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.37921847883872417, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.39290194921986366, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.39413265306122447, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3986367984693877, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.3989765256876181, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.400342270639235, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.40259205039858126, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.40625, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.40746572066326525, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.4215162627551021, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.4256417410714286, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.4290497448979591, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.4301607200470681, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.44140625, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.44360628520429246, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.4457329808173625, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.4475446428571429, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.447582371779077, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.44854113520408156, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.45101590181765916, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.45224808673469385, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.45506833650328804, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.45703125, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.4627649640249828, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.4645647321428572, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.4658203125, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.472925785741207, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.4743303571428571, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.47562579719387754, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.4798339323280819, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.4872765043788862, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.49298469387755106, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5019707317107389, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5057397959183674, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5114995216836735, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5192216260944799, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5235172193877551, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5276626275510203, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5377855348433114, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5391820790816326, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5408163265306123, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5448997881876425, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5519172512755102, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5526546556122449, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5542670191826375, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5547982748466631, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5592315051020409, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5779209647336421, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5798389668367347, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5825577478240547, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5835060586734694, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.583984375, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.5978555484693877, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6010054633896647, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6040736607142857, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.614328744785545, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6168686224489797, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.619008627802146, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6232461734693877, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6241278136908713, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6319754464285714, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.63863597946705, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6448501275510203, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6556919642857143, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6568342794765338, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6591996173469388, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6595583545918368, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6680480917243117, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6699617346938775, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6701328871797542, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6720344387755102, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6741470025510203, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6787308673469388, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6811224489795918, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6836939675906453, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6869259700310096, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6884547889558285, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6904695471938775, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.6919443558673469, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7028459821428572, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7090242346938775, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7137276785714286, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7175940688775511, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7257859566882471, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7266820790816326, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7350659405286446, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7357456492292804, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7410116390306123, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7598104228666425, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7605229591836735, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7632856918148232, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7636988933896616, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7648278061224489, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7684157543106291, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7748564643441459, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7862510065422007, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7870990958910256, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7876665673974095, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7901985012755102, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.7991071428571428, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.8026023675594701, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.8079161352040816, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.8107432643116838, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.8131259920227009, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.822265625, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.8238998724489796, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.8256536989795918, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.8303571428571428, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.845447842780417, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.8610889668367347, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.8611686862244898, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.8659917091836735, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.8725286989795918, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.893813775510204, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.8966836734693877, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9083340947924174, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9145989485172239, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9197621079714869, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.921157525510204, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.921875, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9291294642857143, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9393734056122449, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9403283325619918, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9428607452951502, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9436700244323765, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9464285714285714, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9536504953285324, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9595694945692153, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9624951518325224, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9683634226496824, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9727110446386837, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9808743080193497, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9896341846766074, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9902592160842962, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9911830355865742, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9937282159783695, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9968112244897959, )
paddle.Tensor.__mul__(Tensor([2281702, 1000],"float32"), 0.9975502844452284, )
paddle.Tensor.__mul__(Tensor([35651585, 64],"float32"), 0.10995320762927997, )
paddle.Tensor.__mul__(Tensor([4, 25, 22817014],"float32"), 1000000000.0, )
paddle.Tensor.__mul__(Tensor([4294967297, 1, 1, 1],"float16"), 123, )
paddle.Tensor.__mul__(Tensor([5, 3, 30422686, 5],"float32"), 0.4472135954999579, )
paddle.Tensor.__mul__(Tensor([512, 4, 256, 8193],"float16"), 0.16666666666666666, )
paddle.Tensor.__mul__(Tensor([512, 4456449],"float32"), 0.0022156128761111615, )
paddle.Tensor.__mul__(Tensor([512, 495161, 3, 3],"float32"), 0.014731391274719742, )
paddle.Tensor.__mul__(Tensor([557057, 32, 128],"float32"), 3, )
paddle.Tensor.__mul__(Tensor([570425345, 2, 2],"float32"), 1.5, )
paddle.Tensor.__mul__(Tensor([71303169, 1, 32],"float32"), Tensor([32],"float32"), )
paddle.Tensor.__mul__(Tensor([7605672, 3, 10, 10, 1],"float32"), 2.5, )
paddle.Tensor.__mul__(Tensor([8, 32, 131073, 128],"float16"), 0.002762135864009951, )
paddle.Tensor.__mul__(Tensor([8388609, 512],"float16"), 127.0, )
paddle.Tensor.__ne__(Tensor([1, 1024, 2228225],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([1, 1024, 2228225],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([1, 1024, 2228225],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 144, 15845149],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([1, 15845149, 144],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([1, 2048, 1114113],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([1, 2138427, 1067],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 2200291, 1037],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 2228225, 1024],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 2281701379, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([1, 2281701379, 1],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int32"), 10, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int32"), 15, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int32"), 2, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), 1, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), 2, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), 3, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), 7, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), 98, )
paddle.Tensor.__ne__(Tensor([1, 4, 570425345],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([1, 4096, 557057],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([1, 4456449, 512],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 46565335, 49],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([1, 49, 46565335],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([1, 49, 87652394],"float16"), 0, )
paddle.Tensor.__ne__(Tensor([1, 496, 4600205],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 512, 4456449],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 58, 39339679],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([1, 800, 2852127],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 87652394, 49],"float16"), 0, )
paddle.Tensor.__ne__(Tensor([10, 1, 10],"float32"), Tensor([1, 228170138, 10],"float32"), )
paddle.Tensor.__ne__(Tensor([10, 1, 228170138],"float32"), Tensor([1, 1, 228170138],"float32"), )
paddle.Tensor.__ne__(Tensor([10, 228170138],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([10, 228170138],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([10, 228170138],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([10, 228170138],"int64"), 42, )
paddle.Tensor.__ne__(Tensor([10, 22817014, 10],"float32"), Tensor([1, 1, 10],"float32"), )
paddle.Tensor.__ne__(Tensor([10, 22817014, 10],"float32"), Tensor([1, 22817014, 10],"float32"), )
paddle.Tensor.__ne__(Tensor([10, 25, 9126806],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([10, 9126806, 25],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([100, 22817014],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([100, 22817014],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([100, 22817014],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([100, 22817014],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1000, 2281702],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([1006, 2268093],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([101, 22591103],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([101862, 22400, 1],"int64"), 1, )
paddle.Tensor.__ne__(Tensor([104, 21939437],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([106106, 21504],"int32"), 10, )
paddle.Tensor.__ne__(Tensor([106106, 21504],"int32"), 15, )
paddle.Tensor.__ne__(Tensor([1086525, 2100],"int32"), 4, )
paddle.Tensor.__ne__(Tensor([1086525, 2100],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([110036, 144, 144],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([1114113, 2048, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([1114113, 2048],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([114085069, 20],"float32"), Tensor([114085069, 20],"float32"), )
paddle.Tensor.__ne__(Tensor([114085069, 20],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([114085069, 20],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([114085069, 20],"int64"), 1, )
paddle.Tensor.__ne__(Tensor([114085069, 20],"int64"), 3, )
paddle.Tensor.__ne__(Tensor([1178565, 1, 44, 44],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([13, 175515491],"int32"), 1, )
paddle.Tensor.__ne__(Tensor([13, 175515491],"int32"), 2, )
paddle.Tensor.__ne__(Tensor([13, 175515491],"int32"), 7, )
paddle.Tensor.__ne__(Tensor([13, 175515491],"int32"), 8, )
paddle.Tensor.__ne__(Tensor([13, 175515491],"int64"), 2, )
paddle.Tensor.__ne__(Tensor([13, 2, 87757746],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([13, 25073642, 7],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([14, 162978670],"int32"), 7, )
paddle.Tensor.__ne__(Tensor([14, 162978670],"int64"), 98, )
paddle.Tensor.__ne__(Tensor([1536, 1485483],"int64"), 6626, )
paddle.Tensor.__ne__(Tensor([16, 142606337],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([162978670, 2, 7],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([175515491, 13],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([1788825, 49, 49],"float16"), 0, )
paddle.Tensor.__ne__(Tensor([188633, 12096],"int32"), 4, )
paddle.Tensor.__ne__(Tensor([188633, 12096],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([192, 11883862],"int64"), 6626, )
paddle.Tensor.__ne__(Tensor([2, 1, 2, 570425345],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([2, 1, 570425345, 2],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([2, 1024, 1024, 1089],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2, 1024, 1114113, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2, 1114113, 1024, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2, 1140850690, 1],"int64"), 4, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int32"), 1, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int32"), 4, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int32"), 7, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 1, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 11, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 12, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 151643, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 2, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 3, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 6, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 7, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 98, )
paddle.Tensor.__ne__(Tensor([2, 142606337, 8],"float32"), Tensor([2, 142606337, 8],"float32"), )
paddle.Tensor.__ne__(Tensor([2, 2, 2, 285212673],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([2, 2, 570425345, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([2, 2228225, 512, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2, 285212673, 2, 2],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([2, 30, 38028357],"int64"), 4, )
paddle.Tensor.__ne__(Tensor([2, 32, 32, 1114113],"int32"), 255, )
paddle.Tensor.__ne__(Tensor([2, 32, 32, 1114113],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2, 32, 35651585, 1],"int32"), 255, )
paddle.Tensor.__ne__(Tensor([2, 32, 35651585, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2, 35651585, 32, 1],"int32"), 255, )
paddle.Tensor.__ne__(Tensor([2, 35651585, 32, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2, 512, 1024, 2177],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2, 512, 2228225, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2, 512, 512, 4353],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2, 570425345, 2, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([2, 8, 142606337],"float32"), Tensor([2, 8, 142606337],"float32"), )
paddle.Tensor.__ne__(Tensor([20, 214748365],"float16"), Tensor([20, 214748365],"float16"), )
paddle.Tensor.__ne__(Tensor([205393, 11109],"int32"), 4, )
paddle.Tensor.__ne__(Tensor([205393, 11109],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([214748365, 20],"float16"), Tensor([214748365, 20],"float16"), )
paddle.Tensor.__ne__(Tensor([2177, 1024, 1024, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2177, 1024, 1024],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2228225, 1024, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([2228225, 1024, 1],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([2228225, 32, 32, 1],"int32"), 255, )
paddle.Tensor.__ne__(Tensor([2228225, 32, 32, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([224489, 10164],"int32"), 1, )
paddle.Tensor.__ne__(Tensor([224489, 10164],"int32"), 4, )
paddle.Tensor.__ne__(Tensor([224489, 10164],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int32"), 7, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int32"), 8, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), -25, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 1, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 102, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 11, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 12, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 151643, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 2, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 3, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 42, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 512, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 6, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 6626, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 7, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 98, )
paddle.Tensor.__ne__(Tensor([2281701379],"float32"), -100, )
paddle.Tensor.__ne__(Tensor([2281701379],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([2281701379],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([2281701379],"int32"), 10, )
paddle.Tensor.__ne__(Tensor([2281701379],"int32"), 2, )
paddle.Tensor.__ne__(Tensor([2281701379],"int32"), 4, )
paddle.Tensor.__ne__(Tensor([2281701379],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([2281701379],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.Tensor.__ne__(Tensor([228170138, 1, 10],"float32"), Tensor([1, 1, 10],"float32"), )
paddle.Tensor.__ne__(Tensor([228170138, 1, 10],"float32"), Tensor([228170138, 1, 10],"float32"), )
paddle.Tensor.__ne__(Tensor([228170138, 10],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([228170138, 10],"int64"), 1, )
paddle.Tensor.__ne__(Tensor([25, 1, 2074274, 44],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([25, 1, 44, 2074274],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([25, 47143, 44, 44],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([2674, 800, 1067],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([271632, 8400],"int32"), 2, )
paddle.Tensor.__ne__(Tensor([2751, 800, 1037],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([28, 81489335],"float32"), Tensor([28, 81489335],"float32"), )
paddle.Tensor.__ne__(Tensor([285212673, 8],"float32"), Tensor([285212673, 8],"float32"), )
paddle.Tensor.__ne__(Tensor([32, 71303169],"int64"), 512, )
paddle.Tensor.__ne__(Tensor([3200, 713032],"float32"), Tensor([3200, 713032],"float32"), )
paddle.Tensor.__ne__(Tensor([325957340, 7],"int32"), 1, )
paddle.Tensor.__ne__(Tensor([325957340, 7],"int32"), 2, )
paddle.Tensor.__ne__(Tensor([325957340, 7],"int64"), 98, )
paddle.Tensor.__ne__(Tensor([35651585, 8, 8],"float32"), Tensor([35651585, 8, 8],"float32"), )
paddle.Tensor.__ne__(Tensor([3650723, 25, 25],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([39339679, 58, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([39339679, 58],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([4, 22400, 25466],"int64"), 1, )
paddle.Tensor.__ne__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__ne__(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.__ne__(Tensor([4, 570425345, 1],"int64"), 1, )
paddle.Tensor.__ne__(Tensor([4353, 512, 1024, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([4572548, 499],"int64"), 42, )
paddle.Tensor.__ne__(Tensor([4990, 457255],"int64"), 42, )
paddle.Tensor.__ne__(Tensor([5, 456340276],"int64"), -25, )
paddle.Tensor.__ne__(Tensor([5, 456340276],"int64"), 102, )
paddle.Tensor.__ne__(Tensor([557057, 4096, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([570425345, 1, 2, 2],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([570425345, 2, 2, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([570425345, 4, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), )
paddle.Tensor.__ne__(Tensor([57042535, 2, 4, 5],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([6, 19014179, 4, 5],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([6, 2, 38028357, 5],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([6, 2, 4, 47535446],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([6, 380283564],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([6, 380283564],"int64"), 98, )
paddle.Tensor.__ne__(Tensor([67908, 33600],"int32"), 10, )
paddle.Tensor.__ne__(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__ne__(Tensor([75245, 30324],"int32"), 10, )
paddle.Tensor.__ne__(Tensor([76056713, 30, 1],"int64"), 4, )
paddle.Tensor.__ne__(Tensor([8, 285212673],"float32"), Tensor([8, 285212673],"float32"), )
paddle.Tensor.__ne__(Tensor([81489335, 28],"float32"), Tensor([81489335, 28],"float32"), )
paddle.Tensor.__ne__(Tensor([83837, 27216],"int32"), 10, )
paddle.Tensor.__ne__(Tensor([8705, 512, 512, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([8705, 512, 512],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([897955, 2541],"int32"), 4, )
paddle.Tensor.__ne__(Tensor([897955, 2541],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([8985, 496, 512],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([93991, 24276],"int32"), 10, )
paddle.Tensor.__ne__(Tensor([950313, 49, 49],"float32"), 0, )
paddle.Tensor.__neg__(Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 1073741825, 4],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 1, 1140850690, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 142606337, 16],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 15, 152113426],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 19, 120089547],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 2, 1140850690],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 27163112, 84],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 272, 8388609],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 276, 8267034],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 28521268, 80],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 4, 570425345],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 46565335, 49],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 47535446, 48],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 50704476, 45],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 570425345, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 8, 285212673],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 8, 536870913],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 1, 89478486, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 100, 22817014],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 2, 2097153],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 2, 2097153],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 2228225],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 32, 131073],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 524289, 8],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 524289, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 65537, 64],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 8, 524289],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 8, 524289],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 87382, 48],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 11, 12964213, 16],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 11, 16, 12964213],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 11184811, 8, 48],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 11184811, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 1140850690, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1156, 1973791],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 121, 18857037],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1296, 1760573],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 134217729, 8, 4],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 142606337, 1, 16],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 142606337, 4, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1431655766, 3],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 1444, 1, 1580126],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1444, 1580126, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1444, 1580126],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1501120, 19, 80],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 16, 256, 557057],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 16, 4456449, 32],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1600, 1426064],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 169, 13501192],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 17, 33554433, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 17, 8, 16777217],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 171197, 272, 49],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1764, 1293482],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1810875, 15, 84],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 183712, 276, 45],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 190141782, 3, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1936, 1178565],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 196, 11641334],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2, 1140850690],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2, 2147483649],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 2, 285212673, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2, 3, 380283564],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2, 3, 715827883],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 2, 536870913, 4],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 2, 8, 142606337],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2097153, 32, 64],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 21504, 106106],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 225, 10140896],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2281701379, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 24276, 93991],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 25, 91268056],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 256, 8912897],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 268435457, 2, 8],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 268435457, 2, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 2704, 843825],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 27216, 83837],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 278529, 256, 32],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 285212673, 2, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 285212673, 4, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 289, 7895161],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 30324, 75245],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 3136, 727584],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 324, 7042289],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 357913942, 3, 4],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 5941931, 8, 48],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 67108865, 8, 8],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 67108865, 8, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 71303169, 8, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 760567127, 3],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 8912897, 16, 16],"float32"), )
paddle.Tensor.__neg__(Tensor([10, 228170138],"float32"), )
paddle.Tensor.__neg__(Tensor([10, 429496730],"float16"), )
paddle.Tensor.__neg__(Tensor([100, 22817014],"float32"), )
paddle.Tensor.__neg__(Tensor([1003, 2274877],"float32"), )
paddle.Tensor.__neg__(Tensor([1021, 2234772],"float32"), )
paddle.Tensor.__neg__(Tensor([1024, 2228225],"float32"), )
paddle.Tensor.__neg__(Tensor([1024, 4194305],"float16"), )
paddle.Tensor.__neg__(Tensor([1038, 2198171],"float32"), )
paddle.Tensor.__neg__(Tensor([1041, 2191837],"float32"), )
paddle.Tensor.__neg__(Tensor([1043, 2187634],"float32"), )
paddle.Tensor.__neg__(Tensor([105, 21730490],"float32"), )
paddle.Tensor.__neg__(Tensor([106, 21525485],"float32"), )
paddle.Tensor.__neg__(Tensor([107, 21324312],"float32"), )
paddle.Tensor.__neg__(Tensor([1078, 2116607],"float32"), )
paddle.Tensor.__neg__(Tensor([1082, 2108782],"float32"), )
paddle.Tensor.__neg__(Tensor([109, 20933041],"float32"), )
paddle.Tensor.__neg__(Tensor([10923, 1024, 8, 48],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1114113, 1024, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1114113, 2048],"float32"), )
paddle.Tensor.__neg__(Tensor([11184811, 1, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([11408507, 100, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([13, 2, 4, 16, 1371215],"float32"), )
paddle.Tensor.__neg__(Tensor([13, 2, 4, 21939437, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([13, 2, 5484860, 16, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([13, 2742430, 4, 16, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([134217729, 1, 8, 4],"float16"), )
paddle.Tensor.__neg__(Tensor([142606337, 1, 1, 16],"float32"), )
paddle.Tensor.__neg__(Tensor([142606337, 1, 4, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([1501120, 1, 19, 80],"float32"), )
paddle.Tensor.__neg__(Tensor([1580126, 1444, 1, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([171197, 1, 272, 49],"float32"), )
paddle.Tensor.__neg__(Tensor([17409, 16, 256, 32],"float32"), )
paddle.Tensor.__neg__(Tensor([17825793, 2, 4, 16, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([178956971, 2, 3, 4],"float16"), )
paddle.Tensor.__neg__(Tensor([1810875, 1, 15, 84],"float32"), )
paddle.Tensor.__neg__(Tensor([183712, 1, 276, 45],"float32"), )
paddle.Tensor.__neg__(Tensor([190141782, 12],"float32"), )
paddle.Tensor.__neg__(Tensor([2049, 1024, 32, 64],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([214748365, 20],"float16"), )
paddle.Tensor.__neg__(Tensor([2228225, 1024],"float32"), )
paddle.Tensor.__neg__(Tensor([2281701379, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([2281701379],"float32"), )
paddle.Tensor.__neg__(Tensor([2281702, 1000],"float32"), )
paddle.Tensor.__neg__(Tensor([262145, 1024, 2, 8],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([262145, 1024, 2, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([285212673, 1, 2, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([285212673, 1, 4, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([325957340, 7],"float32"), )
paddle.Tensor.__neg__(Tensor([3521145, 324, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([35651585, 2, 8, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([357913942, 12],"float16"), )
paddle.Tensor.__neg__(Tensor([363792, 3136, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([37623, 30324, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([380283564, 2, 3],"float32"), )
paddle.Tensor.__neg__(Tensor([380283564, 6],"float32"), )
paddle.Tensor.__neg__(Tensor([3947581, 289, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([41919, 27216, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4194305, 17, 8, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([421913, 2704, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4294967297],"float16"), )
paddle.Tensor.__neg__(Tensor([4294968, 1000],"float16"), )
paddle.Tensor.__neg__(Tensor([4456449, 256, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([46996, 24276, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([5070448, 225, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([53053, 21504, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([570425345, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([5820667, 196, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([589283, 1936, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([5941931, 1, 8, 48],"float32"), )
paddle.Tensor.__neg__(Tensor([60632, 37632],"float32"), )
paddle.Tensor.__neg__(Tensor([646741, 1764, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([65537, 1024, 8, 8],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([65537, 1024, 8, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([6750596, 169, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([71303169, 1, 8, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([713032, 1600, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([715827883, 2, 3],"float16"), )
paddle.Tensor.__neg__(Tensor([760567127, 3],"float32"), )
paddle.Tensor.__neg__(Tensor([790063, 1444, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([810264, 11, 16, 16],"float32"), )
paddle.Tensor.__neg__(Tensor([880287, 1296, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([91268056, 25, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([9428519, 121, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([95070891, 2, 3, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([986896, 1156, 2],"float32"), )
paddle.Tensor.__or__(Tensor([1, 1, 2281701379],"bool"), Tensor([1, 1, 2281701379],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 24276],"bool"), Tensor([1, 93991, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 24276],"bool"), Tensor([93991, 1, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 27216],"bool"), Tensor([1, 83837, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 27216],"bool"), Tensor([83837, 1, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 30324],"bool"), Tensor([1, 75245, 30324],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 30324],"bool"), Tensor([75245, 1, 30324],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 33600],"bool"), Tensor([1, 67908, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 33600],"bool"), Tensor([67908, 1, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 37044],"bool"), Tensor([1, 61595, 37044],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 37044],"bool"), Tensor([61595, 1, 37044],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 40656],"bool"), Tensor([1, 56123, 40656],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 40656],"bool"), Tensor([56123, 1, 40656],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 44436],"bool"), Tensor([1, 51349, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 44436],"bool"), Tensor([51349, 1, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([1, 51349, 44436],"bool"), Tensor([1, 1, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([1, 51349, 44436],"bool"), Tensor([1, 51349, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([1, 56123, 40656],"bool"), Tensor([1, 1, 40656],"bool"), )
paddle.Tensor.__or__(Tensor([1, 56123, 40656],"bool"), Tensor([1, 56123, 40656],"bool"), )
paddle.Tensor.__or__(Tensor([1, 61595, 37044],"bool"), Tensor([1, 1, 37044],"bool"), )
paddle.Tensor.__or__(Tensor([1, 61595, 37044],"bool"), Tensor([1, 61595, 37044],"bool"), )
paddle.Tensor.__or__(Tensor([1, 67908, 33600],"bool"), Tensor([1, 1, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([1, 67908, 33600],"bool"), Tensor([1, 67908, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([1, 75245, 30324],"bool"), Tensor([1, 1, 30324],"bool"), )
paddle.Tensor.__or__(Tensor([1, 75245, 30324],"bool"), Tensor([1, 75245, 30324],"bool"), )
paddle.Tensor.__or__(Tensor([1, 83837, 27216],"bool"), Tensor([1, 1, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([1, 83837, 27216],"bool"), Tensor([1, 83837, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([1, 93991, 24276],"bool"), Tensor([1, 1, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([1, 93991, 24276],"bool"), Tensor([1, 93991, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([13, 1, 25073642, 7],"bool"), Tensor([13, 1, 25073642, 7],"bool"), )
paddle.Tensor.__or__(Tensor([13, 1, 7, 25073642],"bool"), Tensor([13, 1, 7, 25073642],"bool"), )
paddle.Tensor.__or__(Tensor([13, 1, 7, 7],"bool"), Tensor([13, 3581949, 7, 7],"bool"), )
paddle.Tensor.__or__(Tensor([13, 3581949, 7, 7],"bool"), Tensor([13, 1, 7, 7],"bool"), )
paddle.Tensor.__or__(Tensor([13, 3581949, 7, 7],"bool"), Tensor([13, 3581949, 7, 7],"bool"), )
paddle.Tensor.__or__(Tensor([1],"bool"), Tensor([2281701379],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__or__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__or__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2281701379],"bool"), Tensor([1],"bool"), )
paddle.Tensor.__or__(Tensor([2281701379],"bool"), Tensor([2281701379],"bool"), )
paddle.Tensor.__or__(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.Tensor.__or__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__or__(Tensor([46565335, 1, 7, 7],"bool"), Tensor([46565335, 1, 7, 7],"bool"), )
paddle.Tensor.__or__(Tensor([51349, 1, 44436],"bool"), Tensor([1, 1, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([51349, 1, 44436],"bool"), Tensor([51349, 1, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([56123, 1, 40656],"bool"), Tensor([1, 1, 40656],"bool"), )
paddle.Tensor.__or__(Tensor([56123, 1, 40656],"bool"), Tensor([56123, 1, 40656],"bool"), )
paddle.Tensor.__or__(Tensor([61595, 1, 37044],"bool"), Tensor([1, 1, 37044],"bool"), )
paddle.Tensor.__or__(Tensor([61595, 1, 37044],"bool"), Tensor([61595, 1, 37044],"bool"), )
paddle.Tensor.__or__(Tensor([67908, 1, 33600],"bool"), Tensor([1, 1, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([67908, 1, 33600],"bool"), Tensor([67908, 1, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([75245, 1, 30324],"bool"), Tensor([1, 1, 30324],"bool"), )
paddle.Tensor.__or__(Tensor([75245, 1, 30324],"bool"), Tensor([75245, 1, 30324],"bool"), )
paddle.Tensor.__or__(Tensor([83837, 1, 27216],"bool"), Tensor([1, 1, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([83837, 1, 27216],"bool"), Tensor([83837, 1, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([93991, 1, 24276],"bool"), Tensor([1, 1, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([93991, 1, 24276],"bool"), Tensor([93991, 1, 24276],"bool"), )
paddle.Tensor.__pow__(Tensor([1, 1, 19, 120089547],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 1, 27163112, 84],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 1, 276, 8267034],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 1, 46565335, 49],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 1140850690, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 128, 32, 557057],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 128, 557057, 32],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 1429638, 19, 84],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 168715, 276, 49],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 2, 1140850690],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 2228225, 32, 32],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 2281701379],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 256, 16, 557057],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 256, 557057, 16],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 3, 24, 31690297],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 3, 31690297, 24],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 3961288, 24, 24],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 557057, 64, 64],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 64, 557057, 64],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 64, 64, 557057],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 8912897, 16, 16],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([10, 20, 11408507],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([10, 20, 21474837],"float16"), 2, )
paddle.Tensor.__pow__(Tensor([10, 228170138, 1],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([10, 228170138],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([10, 429496730, 1],"float16"), 2, )
paddle.Tensor.__pow__(Tensor([100, 22817014],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1073741825, 4],"float16"), 2.0, )
paddle.Tensor.__pow__(Tensor([1114113, 2, 16, 4, 16],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([114085069, 20, 1],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([114085069, 20],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1140850690, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1200, 1901418],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([13, 171402, 16, 4, 16],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([13, 2, 1371215, 4, 16],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([13, 2, 16, 342804, 16],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([13, 2, 16, 4, 1371215],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1320430, 3, 24, 24],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([142607, 200, 80],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([1429638, 1, 19, 84],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1431655766, 3],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([16, 10, 111412, 64, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 10, 64, 111412, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 10, 64, 64, 3482],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 1025, 139129],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 1332770, 107],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 142606337],"float32"), 0.5, )
paddle.Tensor.__pow__(Tensor([16, 17409, 64, 64, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 257, 554889],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 279074, 511],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 513, 277986],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 669514, 213],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([168715, 1, 276, 49],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([17375, 257, 511],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([17409, 128, 32, 32],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1800, 1267612],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([190141782, 3, 4],"float32"), 1, )
paddle.Tensor.__pow__(Tensor([190141782, 3, 4],"float32"), 1.0, )
paddle.Tensor.__pow__(Tensor([190141782, 3, 4],"int32"), 1, )
paddle.Tensor.__pow__(Tensor([190141782, 3, 4],"int32"), 1.0, )
paddle.Tensor.__pow__(Tensor([190141782, 3, 4],"int64"), 1.0, )
paddle.Tensor.__pow__(Tensor([2, 14260634, 80],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([2, 2, 570425345],"float32"), 3, )
paddle.Tensor.__pow__(Tensor([2, 2, 570425345],"float32"), 3.0, )
paddle.Tensor.__pow__(Tensor([2, 2, 570425345],"int64"), 3.0, )
paddle.Tensor.__pow__(Tensor([2, 200, 5704254],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([2, 2147483649],"float16"), 2.0, )
paddle.Tensor.__pow__(Tensor([2, 285212673, 4],"float32"), 1, )
paddle.Tensor.__pow__(Tensor([2, 285212673, 4],"float32"), 1.0, )
paddle.Tensor.__pow__(Tensor([2, 285212673, 4],"int32"), 1, )
paddle.Tensor.__pow__(Tensor([2, 285212673, 4],"int32"), 1.0, )
paddle.Tensor.__pow__(Tensor([2, 285212673, 4],"int64"), 1.0, )
paddle.Tensor.__pow__(Tensor([2, 3, 380283564],"float32"), 1, )
paddle.Tensor.__pow__(Tensor([2, 3, 380283564],"float32"), 1.0, )
paddle.Tensor.__pow__(Tensor([2, 3, 380283564],"int32"), 1, )
paddle.Tensor.__pow__(Tensor([2, 3, 380283564],"int32"), 1.0, )
paddle.Tensor.__pow__(Tensor([2, 3, 380283564],"int64"), 1.0, )
paddle.Tensor.__pow__(Tensor([2, 3, 715827883],"float16"), 1, )
paddle.Tensor.__pow__(Tensor([2, 3, 715827883],"float16"), 1.0, )
paddle.Tensor.__pow__(Tensor([2, 300, 3802836],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([2, 536870913, 4],"float16"), 1, )
paddle.Tensor.__pow__(Tensor([2, 536870913, 4],"float16"), 1.0, )
paddle.Tensor.__pow__(Tensor([2, 570425345, 2],"float32"), 3, )
paddle.Tensor.__pow__(Tensor([2, 570425345, 2],"float32"), 3.0, )
paddle.Tensor.__pow__(Tensor([2, 570425345, 2],"int64"), 3.0, )
paddle.Tensor.__pow__(Tensor([2, 900, 1267612],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([20805, 1025, 107],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([20882, 513, 213],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([214748365, 20, 1],"float16"), 2, )
paddle.Tensor.__pow__(Tensor([2281701379, 1],"float32"), 0.5, )
paddle.Tensor.__pow__(Tensor([2281701379, 1],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([2281701379, 1],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([2281701379, 1],"float32"), 3, )
paddle.Tensor.__pow__(Tensor([2281701379, 1],"float32"), 4, )
paddle.Tensor.__pow__(Tensor([2281701379],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([2281701379],"float32"), 3, )
paddle.Tensor.__pow__(Tensor([228170138, 10],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([2400, 950709],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([27853, 10, 64, 64, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([285212673, 8],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([3, 1431655766],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([3, 3, 119304648, 4],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([3, 3, 4, 119304648],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([3, 3, 477218589],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([3, 357913942, 4],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([3, 89478486, 4, 4],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([300, 7605672],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([31691, 900, 80],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([34817, 256, 16, 16],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([357913942, 3, 4],"float16"), 1, )
paddle.Tensor.__pow__(Tensor([357913942, 3, 4],"float16"), 1.0, )
paddle.Tensor.__pow__(Tensor([357913942, 3, 4],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([36, 63380594],"float32"), 3, )
paddle.Tensor.__pow__(Tensor([36, 63380594],"float32"), 4, )
paddle.Tensor.__pow__(Tensor([4, 15, 3, 256, 49517],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([4, 15, 3, 49517, 256],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([4, 15, 581, 256, 256],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([4, 2902, 3, 256, 256],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([4294967297],"float16"), 2, )
paddle.Tensor.__pow__(Tensor([4294967297],"float16"), 2.0, )
paddle.Tensor.__pow__(Tensor([4294967297],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([456340276, 5],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([570425345, 2, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([570425345, 2, 2],"float32"), 3, )
paddle.Tensor.__pow__(Tensor([570425345, 2, 2],"float32"), 3.0, )
paddle.Tensor.__pow__(Tensor([570425345, 2, 2],"int64"), 3.0, )
paddle.Tensor.__pow__(Tensor([570425345, 4],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([64, 35651585],"float32"), 3, )
paddle.Tensor.__pow__(Tensor([64, 35651585],"float32"), 4, )
paddle.Tensor.__pow__(Tensor([774, 15, 3, 256, 256],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([8705, 64, 64, 64],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([89478486, 3, 4, 4],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([95071, 300, 80],"float32"), 2.0, )
paddle.Tensor.__radd__(Tensor([1, 1, 2281701379],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([1, 1, 2281701379],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([1, 128, 17825793],"float32"), 4, )
paddle.Tensor.__radd__(Tensor([1, 128, 17825793],"int32"), 0, )
paddle.Tensor.__radd__(Tensor([1, 17825793, 128],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([1, 17825793, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([1, 17825793, 128],"float32"), 4, )
paddle.Tensor.__radd__(Tensor([1, 17825793, 128],"int32"), 0, )
paddle.Tensor.__radd__(Tensor([1, 20, 114085069],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([1, 20, 114085069],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([1, 35651585, 64],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([1, 35651585, 64],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([1, 58, 39339679],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([1, 58, 39339679],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([1, 61667605, 37],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([1, 7, 325957340],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([1, 8912897, 256],"float32"), 4, )
paddle.Tensor.__radd__(Tensor([1, 8912897, 256],"int32"), 0, )
paddle.Tensor.__radd__(Tensor([10, 228170138],"float32"), 0.1, )
paddle.Tensor.__radd__(Tensor([100, 200, 214749],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([100, 433836, 99],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([1024, 1, 445645, 5],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([1024, 1, 5, 445645],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([1024, 89129, 5, 5],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([10486, 1, 640, 640],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([114085069, 20],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([11641334, 4, 7, 7],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([128, 1, 1, 17825793],"float32"), 0.825, )
paddle.Tensor.__radd__(Tensor([128, 1, 1, 17825793],"float32"), 0.8375, )
paddle.Tensor.__radd__(Tensor([128, 1, 1, 17825793],"float32"), 0.85, )
paddle.Tensor.__radd__(Tensor([128, 1, 1, 17825793],"float32"), 0.875, )
paddle.Tensor.__radd__(Tensor([128, 1, 1, 17825793],"float32"), 0.8875, )
paddle.Tensor.__radd__(Tensor([128, 1, 1, 17825793],"float32"), 0.9125, )
paddle.Tensor.__radd__(Tensor([128, 1, 1, 17825793],"float32"), 0.925, )
paddle.Tensor.__radd__(Tensor([128, 1, 1, 17825793],"float32"), 0.95, )
paddle.Tensor.__radd__(Tensor([128, 1, 1, 17825793],"float32"), 0.975, )
paddle.Tensor.__radd__(Tensor([128, 1, 17825793, 1],"float32"), 0.825, )
paddle.Tensor.__radd__(Tensor([128, 1, 17825793, 1],"float32"), 0.8375, )
paddle.Tensor.__radd__(Tensor([128, 1, 17825793, 1],"float32"), 0.85, )
paddle.Tensor.__radd__(Tensor([128, 1, 17825793, 1],"float32"), 0.875, )
paddle.Tensor.__radd__(Tensor([128, 1, 17825793, 1],"float32"), 0.8875, )
paddle.Tensor.__radd__(Tensor([128, 1, 17825793, 1],"float32"), 0.9125, )
paddle.Tensor.__radd__(Tensor([128, 1, 17825793, 1],"float32"), 0.925, )
paddle.Tensor.__radd__(Tensor([128, 1, 17825793, 1],"float32"), 0.95, )
paddle.Tensor.__radd__(Tensor([128, 1, 17825793, 1],"float32"), 0.975, )
paddle.Tensor.__radd__(Tensor([128, 17825793, 1, 1],"float32"), 0.825, )
paddle.Tensor.__radd__(Tensor([128, 17825793, 1, 1],"float32"), 0.8375, )
paddle.Tensor.__radd__(Tensor([128, 17825793, 1, 1],"float32"), 0.85, )
paddle.Tensor.__radd__(Tensor([128, 17825793, 1, 1],"float32"), 0.875, )
paddle.Tensor.__radd__(Tensor([128, 17825793, 1, 1],"float32"), 0.8875, )
paddle.Tensor.__radd__(Tensor([128, 17825793, 1, 1],"float32"), 0.9125, )
paddle.Tensor.__radd__(Tensor([128, 17825793, 1, 1],"float32"), 0.925, )
paddle.Tensor.__radd__(Tensor([128, 17825793, 1, 1],"float32"), 0.95, )
paddle.Tensor.__radd__(Tensor([128, 17825793, 1, 1],"float32"), 0.975, )
paddle.Tensor.__radd__(Tensor([13, 175515491],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([13, 3581949, 7, 7],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([13, 4, 6268411, 7],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([13, 4, 7, 6268411],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([13108, 128, 16, 160],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([139265, 128, 128],"float32"), 4, )
paddle.Tensor.__radd__(Tensor([139265, 128, 128],"int32"), 0, )
paddle.Tensor.__radd__(Tensor([1399, 64, 25500],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([1431655766, 3],"float16"), 0.5, )
paddle.Tensor.__radd__(Tensor([1431655766, 3],"float16"), 0.9189385332046727, )
paddle.Tensor.__radd__(Tensor([1431655766, 3],"float16"), 1.0, )
paddle.Tensor.__radd__(Tensor([1431655766, 3],"float16"), 1.1447298858494002, )
paddle.Tensor.__radd__(Tensor([16, 1, 142606337],"float32"), 0.8999999985098839, )
paddle.Tensor.__radd__(Tensor([16, 1, 142606337],"float32"), 0.9090909063816071, )
paddle.Tensor.__radd__(Tensor([16, 1, 142606337],"float32"), 0.9181818142533302, )
paddle.Tensor.__radd__(Tensor([16, 1, 142606337],"float32"), 0.927272729575634, )
paddle.Tensor.__radd__(Tensor([16, 1, 142606337],"float32"), 0.9363636374473572, )
paddle.Tensor.__radd__(Tensor([16, 1, 142606337],"float32"), 0.9454545453190804, )
paddle.Tensor.__radd__(Tensor([16, 1, 142606337],"float32"), 0.9545454531908035, )
paddle.Tensor.__radd__(Tensor([16, 1, 142606337],"float32"), 0.963636364787817, )
paddle.Tensor.__radd__(Tensor([16, 1, 142606337],"float32"), 0.9727272726595402, )
paddle.Tensor.__radd__(Tensor([16, 1, 142606337],"float32"), 0.9818181823939085, )
paddle.Tensor.__radd__(Tensor([16, 1, 142606337],"float32"), 0.9909090911969543, )
paddle.Tensor.__radd__(Tensor([16, 1, 222823, 640],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.8999999985098839, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.9090909063816071, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.9181818142533302, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.927272729575634, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.9363636374473572, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.9454545453190804, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.9545454531908035, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.963636364787817, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.9727272726595402, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.9818181823939085, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.9909090911969543, )
paddle.Tensor.__radd__(Tensor([16, 1, 419431, 640],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([16, 1, 640, 222823],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([16, 1, 640, 419431],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([16, 142606337, 1],"float32"), 0.8999999985098839, )
paddle.Tensor.__radd__(Tensor([16, 142606337, 1],"float32"), 0.9090909063816071, )
paddle.Tensor.__radd__(Tensor([16, 142606337, 1],"float32"), 0.9181818142533302, )
paddle.Tensor.__radd__(Tensor([16, 142606337, 1],"float32"), 0.927272729575634, )
paddle.Tensor.__radd__(Tensor([16, 142606337, 1],"float32"), 0.9363636374473572, )
paddle.Tensor.__radd__(Tensor([16, 142606337, 1],"float32"), 0.9454545453190804, )
paddle.Tensor.__radd__(Tensor([16, 142606337, 1],"float32"), 0.9545454531908035, )
paddle.Tensor.__radd__(Tensor([16, 142606337, 1],"float32"), 0.963636364787817, )
paddle.Tensor.__radd__(Tensor([16, 142606337, 1],"float32"), 0.9727272726595402, )
paddle.Tensor.__radd__(Tensor([16, 142606337, 1],"float32"), 0.9818181823939085, )
paddle.Tensor.__radd__(Tensor([16, 142606337, 1],"float32"), 0.9909090911969543, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.8999999985098839, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.9090909063816071, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.9181818142533302, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.927272729575634, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.9363636374473572, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.9454545453190804, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.9545454531908035, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.963636364787817, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.9727272726595402, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.9818181823939085, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.9909090911969543, )
paddle.Tensor.__radd__(Tensor([16, 349, 640, 640],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([16, 5593, 25500],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([16, 64, 2228225],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([16, 656, 640, 640],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([1609, 1418087],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([16777217, 1, 256],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([17825793, 1, 128],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([17825793, 1, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([192, 128, 1093, 160],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([192, 128, 16, 10923],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([192, 128, 2185, 80],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([192, 16, 32, 43691],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([192, 16, 8739, 160],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([192, 17477, 16, 80],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([192, 4370, 32, 160],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([192, 8739, 16, 160],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([2, 1, 1140850690],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([2, 1, 2147483649],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([2, 1140850690],"float32"), 0.5, )
paddle.Tensor.__radd__(Tensor([2, 1140850690],"float32"), 0.9189385332046727, )
paddle.Tensor.__radd__(Tensor([2, 1140850690],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([2, 1140850690],"float32"), 1.1447298858494002, )
paddle.Tensor.__radd__(Tensor([2, 2147483649],"float16"), 0.5, )
paddle.Tensor.__radd__(Tensor([2, 2147483649],"float16"), 0.9189385332046727, )
paddle.Tensor.__radd__(Tensor([2, 2147483649],"float16"), 1.0, )
paddle.Tensor.__radd__(Tensor([2, 2147483649],"float16"), 1.1447298858494002, )
paddle.Tensor.__radd__(Tensor([2, 8388609, 256],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([2, 8912897, 128],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([216918, 200, 99],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([2228225, 1024],"float32"), 0.1, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1, 1],"float32"), 0.825, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1, 1],"float32"), 0.8375, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1, 1],"float32"), 0.85, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1, 1],"float32"), 0.875, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1, 1],"float32"), 0.8875, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9125, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1, 1],"float32"), 0.925, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1, 1],"float32"), 0.95, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1, 1],"float32"), 0.975, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.8999999985098839, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.9, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.9090909063816071, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.9181818142533302, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.927272729575634, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.9363636374473572, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.9454545453190804, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.9545454531908035, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.963636364787817, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.9727272726595402, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.9818181823939085, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.9909090911969543, )
paddle.Tensor.__radd__(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([2281701379],"float32"), 0.0, )
paddle.Tensor.__radd__(Tensor([2281701379],"float32"), 0.5723649429247001, )
paddle.Tensor.__radd__(Tensor([2281701379],"float32"), 192.0, )
paddle.Tensor.__radd__(Tensor([2281701379],"float32"), 2, )
paddle.Tensor.__radd__(Tensor([2476, 1, 960, 960],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([25, 91268056],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([26215, 128, 16, 80],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([3, 1431655766],"float16"), 0.5, )
paddle.Tensor.__radd__(Tensor([3, 1431655766],"float16"), 0.9189385332046727, )
paddle.Tensor.__radd__(Tensor([39285, 1, 241, 241],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([4, 1, 1677722, 640],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([4, 1, 594194, 960],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([4, 1, 640, 1677722],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([4, 1, 640, 891290],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([4, 1, 891290, 640],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([4, 1, 960, 594194],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([4, 1393, 640, 640],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([4, 1834166, 311],"float32"), -0.5, )
paddle.Tensor.__radd__(Tensor([4, 2622, 640, 640],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([4, 280, 376, 5419],"float32"), -0.5, )
paddle.Tensor.__radd__(Tensor([4, 280, 81490, 25],"float32"), -0.5, )
paddle.Tensor.__radd__(Tensor([4, 60684, 376, 25],"float32"), -0.5, )
paddle.Tensor.__radd__(Tensor([4, 619, 960, 960],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([4, 94, 6068355],"float32"), -0.5, )
paddle.Tensor.__radd__(Tensor([400, 5704254],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.8999999985098839, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.9090909063816071, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.9181818142533302, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.927272729575634, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.9363636374473572, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.9454545453190804, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.9545454531908035, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.963636364787817, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.9727272726595402, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.9818181823939085, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.9909090911969543, )
paddle.Tensor.__radd__(Tensor([4294967297],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([4294967297],"float16"), 0.5, )
paddle.Tensor.__radd__(Tensor([4294967297],"float16"), 0.9189385332046727, )
paddle.Tensor.__radd__(Tensor([4294967297],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([4294967297],"float16"), 192.0, )
paddle.Tensor.__radd__(Tensor([5, 858993460],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([512, 4456449],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([52429, 16, 32, 160],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([5571, 1, 640, 640],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([614683, 58, 64],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([614683, 58, 64],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([61667605, 1, 37],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([64, 35651585],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([69633, 128, 256],"float32"), 4, )
paddle.Tensor.__radd__(Tensor([69633, 128, 256],"int32"), 0, )
paddle.Tensor.__radd__(Tensor([7, 1, 325957340],"float32"), 0.9, )
paddle.Tensor.__radd__(Tensor([7, 325957340, 1],"float32"), 0.9, )
paddle.Tensor.__radd__(Tensor([71303169, 32],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([760567127, 3],"float32"), 0.5, )
paddle.Tensor.__radd__(Tensor([760567127, 3],"float32"), 0.9189385332046727, )
paddle.Tensor.__radd__(Tensor([760567127, 3],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([760567127, 3],"float32"), 1.1447298858494002, )
paddle.Tensor.__radd__(Tensor([78050, 94, 311],"float32"), -0.5, )
paddle.Tensor.__radd__(Tensor([8, 1, 1183456, 241],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([8, 1, 241, 1183456],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([8, 4911, 241, 241],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([858993460, 5],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([867, 280, 376, 25],"float32"), -0.5, )
paddle.Tensor.__radd__(Tensor([8809658, 7, 37],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([8912897, 256],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([891290, 20, 128],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([891290, 20, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([91268056, 1, 5, 5],"float32"), 0, )
paddle.Tensor.__rlshift__(Tensor([14316558, 300],"int16"), -212, )
paddle.Tensor.__rlshift__(Tensor([14316558, 300],"int16"), 63, )
paddle.Tensor.__rlshift__(Tensor([14316558, 300],"int8"), -24, )
paddle.Tensor.__rlshift__(Tensor([14316558, 300],"int8"), 61, )
paddle.Tensor.__rlshift__(Tensor([14316558, 300],"uint8"), 22, )
paddle.Tensor.__rlshift__(Tensor([14316558, 300],"uint8"), 24, )
paddle.Tensor.__rlshift__(Tensor([200, 11408507],"int32"), -223, )
paddle.Tensor.__rlshift__(Tensor([200, 11408507],"int32"), 93, )
paddle.Tensor.__rlshift__(Tensor([200, 11408507],"int64"), -125, )
paddle.Tensor.__rlshift__(Tensor([200, 11408507],"int64"), -79, )
paddle.Tensor.__rlshift__(Tensor([200, 21474837],"int16"), -212, )
paddle.Tensor.__rlshift__(Tensor([200, 21474837],"int16"), 63, )
paddle.Tensor.__rlshift__(Tensor([200, 21474837],"int8"), -24, )
paddle.Tensor.__rlshift__(Tensor([200, 21474837],"int8"), 61, )
paddle.Tensor.__rlshift__(Tensor([200, 21474837],"uint8"), 22, )
paddle.Tensor.__rlshift__(Tensor([200, 21474837],"uint8"), 24, )
paddle.Tensor.__rlshift__(Tensor([7605672, 300],"int32"), -223, )
paddle.Tensor.__rlshift__(Tensor([7605672, 300],"int32"), 93, )
paddle.Tensor.__rlshift__(Tensor([7605672, 300],"int64"), -125, )
paddle.Tensor.__rlshift__(Tensor([7605672, 300],"int64"), -79, )
paddle.Tensor.__rmatmul__(Tensor([3, 5],"float32"), Tensor([760567127, 3],"float32"), )
paddle.Tensor.__rmatmul__(Tensor([3, 760567127],"float32"), Tensor([2, 3],"float32"), )
paddle.Tensor.__rmod__(Tensor([190141782, 3, 4],"float32"), Tensor([190141782, 3, 4],"float32"), )
paddle.Tensor.__rmod__(Tensor([2, 285212673, 4],"float32"), Tensor([2, 285212673, 4],"float32"), )
paddle.Tensor.__rmod__(Tensor([2, 3, 380283564],"float32"), Tensor([2, 3, 380283564],"float32"), )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.025352112676056304, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.0286624203821656, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.0298013245033113, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.030000000000000027, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.03103448275862064, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.035573122529644285, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.044554455445544594, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.045226130653266305, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.045454545454545414, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.07086614173228345, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.08181818181818179, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.1097560975609756, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.14516129032258063, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.15517241379310343, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.1578947368421053, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.20454545454545459, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.5294117647058824, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.7352941176470589, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.7954545454545454, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.8269230769230769, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.8888888888888888, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.9021739130434783, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.91, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.926829268292683, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.9291338582677166, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.9391891891891891, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.955, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.9709677419354839, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.9719626168224299, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.9744318181818182, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.976, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.9771573604060914, )
paddle.Tensor.__rmul__(Tensor([1, 1, 1, 2281701379],"float32"), 0.9774436090225563, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.023136246786632397, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.023255813953488413, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.023498694516971286, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.03409090909090906, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.03614457831325302, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.03734439834024894, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.050000000000000044, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.053254437869822535, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.06000000000000005, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.07499999999999996, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.07563025210084029, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.07692307692307687, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.2571428571428571, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.33333333333333337, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.375, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.7631578947368421, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.7954545454545454, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.8, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9142857142857143, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9328358208955224, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.94, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9488636363636364, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9577464788732394, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9629629629629629, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9635627530364372, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9645669291338582, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9656488549618321, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9698996655518395, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9710610932475884, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9712460063897763, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9732142857142857, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9742857142857143, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379],"float32"), 0.044715, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.022556390977443663, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.02425876010781669, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.025423728813559365, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.02639296187683282, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.02752293577981646, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.02848101265822789, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.030000000000000027, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.03214285714285714, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.03237410071942448, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.032727272727272716, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.03284671532846717, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.03829787234042559, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.040000000000000036, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.0401785714285714, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.040723981900452455, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.04225352112676062, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.04761904761904767, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.053892215568862256, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.06338028169014087, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.07758620689655171, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.07826086956521738, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.07894736842105265, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.09278350515463918, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.0957446808510638, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.12857142857142856, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.18367346938775508, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.2142857142857143, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.25, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.2647058823529411, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.2727272727272727, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.35714285714285715, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.5, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.625, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.775, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.8181818181818181, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.8235294117647058, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.8301886792452831, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.8714285714285714, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9052631578947369, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9181818181818182, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9296875, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9361702127659575, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9513513513513514, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9620253164556962, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9661654135338346, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.966542750929368, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9671532846715328, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9692832764505119, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9700996677740864, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9720496894409938, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9738372093023255, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9745042492917847, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9748603351955307, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9768041237113402, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9770408163265306, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9772151898734177, )
paddle.Tensor.__rmul__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9772727272727273, )
paddle.Tensor.__rmul__(Tensor([1, 3, 128, 1, 5941931],"float32"), 0.08838834764831843, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.00905432595573441, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.009316770186335366, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.009554140127388533, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.009687836383207804, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.009814612868047967, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.009825327510917026, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.009857612267250793, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.009879253567508184, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.010022271714922093, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.010112359550561778, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.01038062283737029, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.010588235294117676, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.010830324909747335, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.010909090909090868, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.011070110701106972, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.011138613861386149, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.011984021304926817, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.012228260869565188, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.012379642365887178, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.012552301255230103, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.012622720897615736, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.012640449438202195, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.012912482065997155, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.013024602026049159, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.013235294117647012, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.014084507042253502, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.015228426395939132, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.015410958904109595, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.015929203539822967, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.016333938294010864, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.018181818181818188, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.018867924528301883, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.019148936170212738, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.019230769230769273, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.01943844492440605, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9775561097256857, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9779951100244498, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9790209790209791, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9793103448275862, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9814432989690721, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9831460674157303, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9834862385321101, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9838129496402878, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9851973684210527, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9856687898089171, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9860031104199067, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9862595419847329, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.986322188449848, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9872340425531915, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9874651810584958, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9875173370319001, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9876543209876543, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9884615384615385, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9885786802030457, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9887640449438202, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9890377588306942, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9892601431980907, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.989749430523918, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9904255319148936, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9904458598726115, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9907216494845361, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9907881269191402, )
paddle.Tensor.__rmul__(Tensor([10, 192, 3, 396129],"float32"), 0.9909365558912386, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.009164969450101812, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.0092118730808598, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.009433962264150941, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.009483667017913588, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.009782608695652173, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.009857612267250793, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.009944751381215422, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.010055865921787754, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.010273972602739767, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.010477299185098987, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.011124845488257096, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.011734028683181186, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.01182654402102501, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.012162162162162149, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.012195121951219523, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.012379642365887178, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.012893982808022897, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.013005780346820761, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.013024602026049159, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.013119533527696792, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.01341281669150518, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.013615733736762503, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.013846153846153841, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.01449275362318836, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.014802631578947345, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.01490066225165565, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.015025041736227096, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.015126050420168013, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.01621621621621616, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.017013232514177745, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.017681728880157177, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.01807228915662651, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.01848049281314168, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.01882845188284521, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.019027484143763207, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.019955654101995512, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.020044543429844075, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.02050113895216399, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.022499999999999964, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9784688995215312, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9794520547945206, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9800443458980045, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9817444219066938, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9835766423357665, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9836363636363636, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9848993288590604, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.985691573926868, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.985981308411215, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9862174578866769, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9864253393665159, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9870503597122302, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9871060171919771, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9873772791023843, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9875346260387812, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9879194630872483, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9881422924901185, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9883570504527813, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9884020618556701, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9889025893958077, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9891566265060241, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9893111638954869, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9895348837209302, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9895470383275261, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9896193771626297, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9896432681242808, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9899328859060402, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9904458598726115, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9905857740585774, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9908536585365854, )
paddle.Tensor.__rmul__(Tensor([10, 192, 396129, 3],"float32"), 0.9909182643794148, )
paddle.Tensor.__rmul__(Tensor([10, 228170138],"float32"), 6.283185307179586, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.009100101112234582, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.009137055837563413, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.009336099585062207, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.009355509355509328, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.009533898305084776, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.009782608695652173, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.010550996483001174, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.010830324909747335, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.011194029850746245, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.011278195488721776, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.011936339522546469, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.01195219123505975, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.012658227848101222, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.012747875354107596, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.013081395348837233, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.013493253373313308, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.013698630136986356, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.014084507042253502, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.014106583072100332, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.014399999999999968, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.014423076923076872, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.014754098360655776, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.015025041736227096, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.01551724137931032, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.01565217391304352, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.01590106007067138, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.01621621621621616, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.016245487364620947, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.016853932584269704, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.01836734693877551, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.020408163265306145, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.02050113895216399, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.02083333333333337, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.02168674698795181, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.022222222222222254, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9775, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9791666666666666, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9799107142857143, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9799554565701559, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9808102345415778, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.98125, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9836065573770492, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9836660617059891, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9837251356238698, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9862804878048781, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9866666666666667, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9867452135493373, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9869186046511628, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9869565217391304, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9878706199460916, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9882044560943644, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9883419689119171, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9883720930232558, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9884169884169884, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9886792452830189, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9887218045112782, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9892984542211652, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9893992932862191, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9895348837209302, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9897025171624714, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9899103139013453, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9899216125419933, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9900990099009901, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.990228013029316, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9905362776025236, )
paddle.Tensor.__rmul__(Tensor([10, 25352238, 3, 3],"float32"), 0.9909365558912386, )
paddle.Tensor.__rmul__(Tensor([100, 22817014],"float32"), 3.141592653589793, )
paddle.Tensor.__rmul__(Tensor([1024, 1024, 1, 2177],"float32"), 0.001498725674732886, )
paddle.Tensor.__rmul__(Tensor([1024, 1024, 1, 2177],"float32"), 0.0069748595110582165, )
paddle.Tensor.__rmul__(Tensor([1024, 1024, 1, 2177],"float32"), 0.9920327116455769, )
paddle.Tensor.__rmul__(Tensor([1024, 1024, 1, 2177],"float32"), 0.9975033720852203, )
paddle.Tensor.__rmul__(Tensor([1024, 1024, 2177, 1],"float32"), 0.9940185622575299, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225, 1, 1],"float32"), 0.9995001749666714, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.009316770186335366, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.009544008483563071, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.009761388286334105, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.010033444816053505, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.010112359550561778, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.010297482837528626, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.010962241169305775, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.011235955056179803, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.011780104712041939, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.011811023622047223, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.01224489795918371, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.012465373961218829, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.012517385257301838, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.012729844413012725, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.013081395348837233, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.013100436681222738, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.013333333333333308, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.014062499999999978, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.014218009478673022, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.014634146341463428, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.014975041597337757, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.01538461538461533, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.015410958904109595, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.015845070422535246, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.015929203539822967, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.016917293233082664, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.017274472168905985, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.017341040462427793, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.01906779661016944, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.01969365426695846, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.02168674698795181, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.0234375, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.02608695652173909, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.026162790697674465, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.027027027027026973, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.02777777777777779, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.028301886792452824, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.029032258064516148, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.03515625, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.03749999999999998, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.03829787234042559, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.04205607476635509, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.04390243902439028, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.04663212435233166, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.0573248407643312, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.061224489795918324, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.10227272727272729, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.55, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.5909090909090909, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.7, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.8181818181818181, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.8656716417910447, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9134615384615384, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.925, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9307692307692308, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9419354838709677, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.94375, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9516129032258065, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.953125, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9577464788732394, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9615384615384616, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.963855421686747, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9666666666666667, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9704918032786886, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9716981132075472, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9746478873239437, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9765013054830287, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9775561097256857, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9797297297297297, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9806034482758621, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9817444219066938, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9836363636363636, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9837837837837838, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.984070796460177, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9841269841269841, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9842381786339754, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9847972972972973, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9853420195439739, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9861751152073732, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9863013698630136, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9868995633187773, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9869942196531792, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9870875179340028, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9872701555869873, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9877216916780355, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9880159786950732, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9884020618556701, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9889025893958077, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9894366197183099, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9898648648648649, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9900552486187846, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9900990099009901, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9903948772678762, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9904255319148936, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.9906444906444907, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.990909090909091, )
paddle.Tensor.__rmul__(Tensor([10486, 1, 640, 640],"float16"), -50, )
paddle.Tensor.__rmul__(Tensor([1140850690, 2],"float32"), 2.5066282746310002, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.006139154160982319, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.006271777003484358, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.006671608598962209, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.006711409395973145, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.006736526946107824, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.006777108433734913, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.0069071373752878085, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.0070367474589523304, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.007042253521126751, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.0071428571428571175, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.007299270072992692, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.007305194805194759, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.0073710073710073765, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.007450331125827825, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.0075125208681134925, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.007575757575757569, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.007679180887371961, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.007718696397941649, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.00775862068965516, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.007839721254355392, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.007929515418502175, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.00802854594112401, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.008279668813247487, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.008287292817679592, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.008302583025830312, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.008411214953271018, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.008884501480750262, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.008946322067594381, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9910714285714286, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9911154985192497, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9911330049261083, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9913544668587896, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9915254237288136, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9917279411764706, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9917808219178083, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9921259842519685, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.992430613961312, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9924874791318865, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9926047658175843, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9927302100161551, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9928514694201748, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.992879746835443, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9929133858267717, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.993050193050193, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9930555555555556, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9933872152828802, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9934162399414777, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9937018894331701, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9937062937062937, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9937673130193906, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9938186813186813, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9938941655359566, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9939024390243902, )
paddle.Tensor.__rmul__(Tensor([128, 17825793, 1, 1],"float32"), 0.9939148073022313, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.00611828687967364, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.006642066420664228, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.0067822155237377, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.006787330316742057, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.006875477463712754, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.006901840490797562, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.006923076923076921, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.0070367474589523304, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.0070699135899450205, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.007092198581560294, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.007199999999999984, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.007275666936135794, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.0073649754500818565, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.007544006705783701, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.007575757575757569, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.0078125, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.007846556233653046, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.007950530035335635, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.008115419296663706, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.008341056533827662, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.008498583569405138, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9910179640718563, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9911591355599214, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9912451361867705, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.99146110056926, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9915254237288136, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9915333960489181, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9915809167446211, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9917050691244239, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9917733089579525, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.991869918699187, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9922077922077922, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9924433249370277, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9925864909390445, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.992616899097621, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9926410466067048, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9928343949044586, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9928514694201748, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9931192660550459, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9931245225362872, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9931818181818182, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9931921331316188, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9932685115931189, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9933579335793358, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9934114202049781, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9934162399414777, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9935018050541516, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.993566833452466, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9935851746258019, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9936530324400564, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9936664320900774, )
paddle.Tensor.__rmul__(Tensor([128, 96, 1, 185686],"float32"), 0.9938524590163934, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.006177076183939589, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.006215469613259694, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.0062893081761006275, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.00636042402826853, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.006378454996456395, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.006392045454545414, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.006460875807609456, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.006526468455402501, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.006545454545454521, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.006578947368421018, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.006696428571428603, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.006844106463878341, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.006854531607006886, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.006891271056661541, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.00696055684454755, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.00696594427244579, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.006998444790046632, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.007240547063555924, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.007358953393295176, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.007419620774938185, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.007679180887371961, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.0077989601386482255, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.0078125, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.008434864104967188, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.008695652173912993, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.008763388510223957, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.991, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.991044776119403, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9911504424778761, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9915572232645403, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9915651358950328, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9919282511210762, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9921465968586387, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9925496688741722, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9925681255161024, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9927594529364441, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.992930086410055, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9929577464788732, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9931297709923664, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9931350114416476, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9932985852568875, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9934782608695653, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9935437589670014, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9937716262975779, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9938144329896907, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9938524590163934, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.9938941655359566, )
paddle.Tensor.__rmul__(Tensor([1280, 1280, 1, 1393],"float32"), 0.012914573393214451, )
paddle.Tensor.__rmul__(Tensor([1280, 1280, 1, 1393],"float32"), 0.013407942753899121, )
paddle.Tensor.__rmul__(Tensor([1280, 1280, 1393, 1],"float32"), 0.008958725264993642, )
paddle.Tensor.__rmul__(Tensor([1280, 1280, 1393, 1],"float32"), 0.9870854266067856, )
paddle.Tensor.__rmul__(Tensor([1280, 1782580, 1, 1],"float32"), 0.008958725264993642, )
paddle.Tensor.__rmul__(Tensor([1280, 1782580, 1, 1],"float32"), 0.9836370158527333, )
paddle.Tensor.__rmul__(Tensor([1280, 1782580, 1, 1],"float32"), 0.9870854266067856, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.009230769230769265, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.009249743062692661, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.00969827586206895, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.010180995475113086, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.010321100917431214, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.01038062283737029, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.011688311688311637, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.013254786450662692, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.013372956909361022, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.013636363636363669, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.01391035548686248, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.014150943396226467, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.015126050420168013, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.015177065767284947, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.015254237288135575, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.016483516483516536, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.016853932584269704, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.017241379310344862, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.017716535433070835, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.018711018711018657, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.01882845188284521, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.020408163265306145, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9782608695652174, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9794050343249427, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9794520547945206, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9795454545454545, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9804772234273319, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9815573770491803, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9818181818181818, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9838129496402878, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9849498327759197, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.985, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9873417721518988, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9874125874125874, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.987603305785124, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9878378378378379, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.98828125, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9884318766066839, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9885786802030457, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9887780548628429, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9890643985419199, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9891041162227603, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9893491124260355, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9896313364055299, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9900662251655629, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.990343347639485, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9904862579281184, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.990546218487395, )
paddle.Tensor.__rmul__(Tensor([1320430, 192, 3, 3],"float32"), 0.9906639004149378, )
paddle.Tensor.__rmul__(Tensor([1485483, 3, 512, 1, 1],"float32"), 0.044194173824159216, )
paddle.Tensor.__rmul__(Tensor([16, 34817, 64, 64],"float32"), -0.5, )
paddle.Tensor.__rmul__(Tensor([1782580, 1280, 1, 1],"float32"), 0.011927094309355676, )
paddle.Tensor.__rmul__(Tensor([1782580, 1280, 1, 1],"float32"), 0.012420957286167947, )
paddle.Tensor.__rmul__(Tensor([1782580, 1280, 1, 1],"float32"), 0.9851134284091023, )
paddle.Tensor.__rmul__(Tensor([1782580, 1280, 1, 1],"float32"), 0.9865920572461009, )
paddle.Tensor.__rmul__(Tensor([2, 19669840, 58],"float32"), 0.35355339059327373, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.009443861490031513, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.009463722397476393, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.009594882729211052, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.010135135135135087, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.010550996483001174, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.01097560975609757, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.011194029850746245, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.011568123393316143, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.011642949547218673, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.012016021361815787, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.012295081967213073, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.012345679012345734, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.012396694214875992, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.012413793103448256, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.013024602026049159, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.013119533527696792, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.014331210191082855, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.014681892332789603, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.015358361774744034, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.01581722319859402, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.016042780748663055, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.016759776536312887, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.016917293233082664, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.017578125, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.018292682926829285, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.0189473684210526, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.01931330472102999, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.019867549668874163, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.021844660194174748, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.02425876010781669, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.025787965616045794, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.02777777777777779, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.028213166144200663, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.02893890675241162, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.029126213592232997, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.02970297029702973, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.03125, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.0337078651685393, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.03474903474903479, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.040000000000000036, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.04109589041095896, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.043269230769230727, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.043689320388349495, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.04390243902439028, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.0478723404255319, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.053254437869822535, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.06818181818181823, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.08737864077669899, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.08823529411764708, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.09278350515463918, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.10344827586206895, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.34615384615384615, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.5294117647058824, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.891566265060241, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.8953488372093024, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.912621359223301, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.926829268292683, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9415584415584416, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9426751592356688, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9575471698113207, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.961038961038961, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9645669291338582, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9652509652509652, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.968421052631579, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9689655172413794, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9701986754966887, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.972809667673716, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9771573604060914, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9778869778869779, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9791666666666666, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9801762114537445, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9806034482758621, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9807692307692307, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9814432989690721, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9819639278557114, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9832089552238806, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9835466179159049, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9837251356238698, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9838129496402878, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9840142095914742, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9844020797227037, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9845626072041166, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9847972972972973, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9851239669421488, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9855305466237942, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9858934169278997, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9859154929577465, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9866468842729971, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9869565217391304, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9870317002881844, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9873060648801129, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9874125874125874, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9879032258064516, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9879356568364611, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9882352941176471, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.98828125, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9885350318471338, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9890377588306942, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9891826923076923, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9898648648648649, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9899328859060402, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.99, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9902597402597403, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9903329752953813, )
paddle.Tensor.__rmul__(Tensor([2228225, 1024],"float32"), 0.9907216494845361, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.023376623376623384, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.0234375, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.0237467018469657, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.027272727272727226, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.028391167192429068, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.04347826086956519, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.06428571428571428, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.07692307692307687, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.09375, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.09782608695652173, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.16981132075471694, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.22499999999999998, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.25, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.4736842105263158, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.6, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.82, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.90625, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9328358208955224, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9387755102040817, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9433962264150944, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9533678756476683, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9606986899563319, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9645669291338582, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9707792207792207, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9711538461538461, )
paddle.Tensor.__rmul__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9744318181818182, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.006048387096774244, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.0060524546065904294, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.006109979633401208, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.0061898211829436445, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.006232686980609414, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.0063157894736841635, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.006401137980085347, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.006437768240343367, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.006617647058823506, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.006751687921980443, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.0067924528301887, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.007025761124121788, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.007097791798107211, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.007194244604316502, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.007281553398058249, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.007317073170731714, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.007518796992481258, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.0077054794520547976, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.00775862068965516, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.0079155672823219, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.00801424755120217, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.008364312267657992, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.008482563619227168, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.008612440191387516, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.008637236084452993, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.008645533141210415, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.009202453987730008, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.00932642487046631, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.009544008483563071, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.01014656144306647, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.010588235294117676, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.010752688172043001, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.010804321728691502, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.010856453558504175, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.011207970112079746, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.011494252873563204, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.012261580381471404, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.012640449438202195, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.012765957446808529, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.013081395348837233, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.013100436681222738, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.013313609467455634, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.013533834586466176, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.014308426073131986, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.014331210191082855, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.014634146341463428, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.014827018121911006, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.014876033057851235, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.01559792027729634, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.016544117647058876, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.016728624535315983, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.016981132075471694, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.017045454545454586, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.017578125, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.017786561264822143, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.018867924528301883, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.01935483870967747, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.020000000000000018, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.020594965675057253, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.021126760563380254, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.02163461538461542, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.022556390977443663, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.02452316076294281, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.024657534246575352, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.025352112676056304, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.0268656716417911, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.0357142857142857, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.03879310344827591, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.046391752577319534, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.048648648648648596, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.048913043478260865, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.061224489795918324, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.06976744186046513, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.07258064516129037, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.07692307692307687, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.10344827586206895, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.125, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.15517241379310343, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.8676470588235294, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.8695652173913043, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9302325581395349, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9467455621301775, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9473684210526315, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9554455445544554, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9571428571428572, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9621848739495799, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9713375796178344, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9747899159663865, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9764397905759162, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9790209790209791, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.98, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9800443458980045, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9801324503311258, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9803921568627451, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9806451612903225, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9808102345415778, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9816700610997964, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9822134387351779, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.982725527831094, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9828571428571429, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.983754512635379, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9846678023850085, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9852941176470589, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9855769230769231, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.985691573926868, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9862385321100917, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9863429438543247, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9871428571428571, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9872159090909091, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.987688098495212, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9878048780487805, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9878542510121457, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9879194630872483, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.988110964332893, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9883419689119171, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9884910485933504, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9888751545117429, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9893742621015348, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9894490035169988, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9894982497082847, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9897260273972602, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9897727272727272, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9901098901098901, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9901207464324918, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9902491874322861, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9904862579281184, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9909182643794148, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.991, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9910358565737052, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9910714285714286, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9912109375, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9912875121006777, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9915014164305949, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9916201117318436, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9916743755781684, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9918181818181818, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9921190893169878, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9922547332185886, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9924114671163575, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9924242424242424, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9924496644295302, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9925925925925926, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9925986842105263, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9926470588235294, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.992671009771987, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9926769731489016, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9928909952606635, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.992930086410055, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9929632525410477, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9930178432893716, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9931140015302219, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9934162399414777, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9934545454545455, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9934971098265896, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9935158501440923, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9935851746258019, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9935897435897436, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9936350777934936, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9937586685159501, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9937888198757764, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9938144329896907, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9938271604938271, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9939230249831195, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 0.9939393939393939, )
paddle.Tensor.__rmul__(Tensor([2281701379],"float32"), 3.141592653589793, )
paddle.Tensor.__rmul__(Tensor([2281701379],"int64"), 2.0, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.006155950752393946, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.006583760058522348, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.006651884700665134, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.00667655786350152, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.006731488406881092, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.006864988558352381, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.00688599846977811, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.006987577639751552, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.006998444790046632, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.007075471698113178, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.007114624505928813, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.007217321571772239, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.007305194805194759, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.0073710073710073765, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.0075125208681134925, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.007518796992481258, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.007563025210084007, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.0077452667814114085, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.007853403141361293, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.007894736842105288, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.00802854594112401, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.008057296329453845, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.008204193254329972, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.008379888268156388, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.008419083255378879, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.008579599618684486, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.008797653958944274, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.008902077151335286, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.008910891089108919, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.009000000000000008, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.990990990990991, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9911678115799804, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9915014164305949, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9916123019571296, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9918552036199095, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9919499105545617, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9921190893169878, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9921875, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.992320819112628, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9923599320882852, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9925434962717481, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9925681255161024, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.992741935483871, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9928684627575277, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9929356357927787, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9930232558139535, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9930555555555556, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9931921331316188, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9932432432432432, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9933481152993349, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9933969185619956, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9935805991440799, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9936440677966102, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9938313913639479, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9938482570061518, )
paddle.Tensor.__rmul__(Tensor([23767723, 96, 1, 1],"float32"), 0.9938524590163934, )
paddle.Tensor.__rmul__(Tensor([8, 1, 241, 1183456],"float32"), 0.004149377593360996, )
paddle.Tensor.__rmul__(Tensor([8388609, 512],"float16"), 7.568670356258612, )
paddle.Tensor.__ror__(Tensor([152113426, 3, 5],"int32"), 5, )
paddle.Tensor.__ror__(Tensor([152113426, 3, 5],"int32"), True, )
paddle.Tensor.__ror__(Tensor([2, 228170138, 5],"int32"), 5, )
paddle.Tensor.__ror__(Tensor([2, 228170138, 5],"int32"), True, )
paddle.Tensor.__ror__(Tensor([2, 3, 380283564],"int32"), 5, )
paddle.Tensor.__ror__(Tensor([2, 3, 380283564],"int32"), True, )
paddle.Tensor.__rpow__(Tensor([1, 2281701379],"float32"), 10000.0, )
paddle.Tensor.__rpow__(Tensor([10, 228170138],"float32"), 2, )
paddle.Tensor.__rpow__(Tensor([10, 429496730],"float16"), 2, )
paddle.Tensor.__rpow__(Tensor([142606337, 16],"float32"), 10000.0, )
paddle.Tensor.__rpow__(Tensor([190141782, 12],"float32"), 2, )
paddle.Tensor.__rpow__(Tensor([2, 2, 570425345],"float32"), 3, )
paddle.Tensor.__rpow__(Tensor([2, 2, 570425345],"float32"), 3.0, )
paddle.Tensor.__rpow__(Tensor([2, 2, 570425345],"int64"), 3.0, )
paddle.Tensor.__rpow__(Tensor([2, 570425345, 2],"float32"), 3, )
paddle.Tensor.__rpow__(Tensor([2, 570425345, 2],"float32"), 3.0, )
paddle.Tensor.__rpow__(Tensor([2, 570425345, 2],"int64"), 3.0, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 10000, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 10000.0, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 1000000.0, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 107177664400.00002, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 20, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 500000.0, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 550134.0076769129, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 63496.04207872797, )
paddle.Tensor.__rpow__(Tensor([228170138, 5, 2],"float32"), 2, )
paddle.Tensor.__rpow__(Tensor([357913942, 12],"float16"), 2, )
paddle.Tensor.__rpow__(Tensor([4, 285212673, 2],"float32"), 2, )
paddle.Tensor.__rpow__(Tensor([4, 5, 114085069],"float32"), 2, )
paddle.Tensor.__rpow__(Tensor([4, 5, 214748365],"float16"), 2, )
paddle.Tensor.__rpow__(Tensor([4, 536870913, 2],"float16"), 2, )
paddle.Tensor.__rpow__(Tensor([4294967297],"float16"), 2, )
paddle.Tensor.__rpow__(Tensor([429496730, 5, 2],"float16"), 2, )
paddle.Tensor.__rpow__(Tensor([570425345, 2, 2],"float32"), 3, )
paddle.Tensor.__rpow__(Tensor([570425345, 2, 2],"float32"), 3.0, )
paddle.Tensor.__rpow__(Tensor([570425345, 2, 2],"int64"), 3.0, )
paddle.Tensor.__rrshift__(Tensor([14316558, 300],"int16"), -255, )
paddle.Tensor.__rrshift__(Tensor([14316558, 300],"int16"), 11, )
paddle.Tensor.__rrshift__(Tensor([14316558, 300],"int8"), -24, )
paddle.Tensor.__rrshift__(Tensor([14316558, 300],"int8"), 3, )
paddle.Tensor.__rrshift__(Tensor([14316558, 300],"uint8"), 45, )
paddle.Tensor.__rrshift__(Tensor([14316558, 300],"uint8"), 57, )
paddle.Tensor.__rrshift__(Tensor([200, 11408507],"int32"), 232, )
paddle.Tensor.__rrshift__(Tensor([200, 11408507],"int32"), 72, )
paddle.Tensor.__rrshift__(Tensor([200, 11408507],"int64"), -43, )
paddle.Tensor.__rrshift__(Tensor([200, 11408507],"int64"), 155, )
paddle.Tensor.__rrshift__(Tensor([200, 21474837],"int16"), -255, )
paddle.Tensor.__rrshift__(Tensor([200, 21474837],"int16"), 11, )
paddle.Tensor.__rrshift__(Tensor([200, 21474837],"int8"), -24, )
paddle.Tensor.__rrshift__(Tensor([200, 21474837],"int8"), 3, )
paddle.Tensor.__rrshift__(Tensor([200, 21474837],"uint8"), 45, )
paddle.Tensor.__rrshift__(Tensor([200, 21474837],"uint8"), 57, )
paddle.Tensor.__rrshift__(Tensor([7605672, 300],"int32"), 232, )
paddle.Tensor.__rrshift__(Tensor([7605672, 300],"int32"), 72, )
paddle.Tensor.__rrshift__(Tensor([7605672, 300],"int64"), -43, )
paddle.Tensor.__rrshift__(Tensor([7605672, 300],"int64"), 155, )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), False, )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([1],"int8"), Tensor([4294967297],"int8"), )
paddle.Tensor.__rshift__(Tensor([1],"int8"), Tensor([4294967297],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), )
paddle.Tensor.__rshift__(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), )
paddle.Tensor.__rshift__(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), False, )
paddle.Tensor.__rshift__(Tensor([200, 11408507],"int64"), Tensor([200, 11408507],"int64"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.Tensor.__rshift__(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.Tensor.__rshift__(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.Tensor.__rshift__(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), False, )
paddle.Tensor.__rshift__(Tensor([300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.Tensor.__rshift__(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.Tensor.__rshift__(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.Tensor.__rshift__(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([4294967297],"int8"), Tensor([1],"int8"), )
paddle.Tensor.__rshift__(Tensor([4294967297],"int8"), Tensor([1],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([4294967297],"int8"), Tensor([4294967297],"int8"), )
paddle.Tensor.__rshift__(Tensor([4294967297],"int8"), Tensor([4294967297],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), )
paddle.Tensor.__rshift__(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), )
paddle.Tensor.__rshift__(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), )
paddle.Tensor.__rshift__(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), False, )
paddle.Tensor.__rshift__(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.Tensor.__rshift__(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), False, )
paddle.Tensor.__rshift__(Tensor([7605672, 300],"int64"), Tensor([300],"int64"), )
paddle.Tensor.__rshift__(Tensor([7605672, 300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.Tensor.__rsub__(Tensor([1, 1, 1, 2281701379],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 1, 1, 2281701379],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 1, 175515491, 13],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 1, 190141782, 12],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 1, 207427399, 11],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 1, 207427399, 11],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 1, 2281701379],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 1, 228170138, 10],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 1, 228170138, 10],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 1, 256, 8912897],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 1, 8912897, 256],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 100, 22817014],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 10164, 224489],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 11, 207427399],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 1100, 2074274],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 1140850690, 2],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 1431655766, 3],"float16"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([1, 175515491, 1, 13],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 190141782, 1, 12],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 2, 1073741825, 2],"float16"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 2, 1140850690],"float32"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([1, 2, 2147483649],"float16"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([1, 2, 300, 3802836],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 2, 300, 7158279],"float16"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 2, 570425345, 2],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 207427399, 1, 11],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 207427399, 1, 11],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 2281701379],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 2281701379],"float32"), 2, )
paddle.Tensor.__rsub__(Tensor([1, 228170138, 1, 10],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 228170138, 1, 10],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 34817, 256, 256],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 3802836, 300, 2],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 570425345, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 7158279, 300, 2],"float16"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 760567127, 3],"float32"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([10, 10, 42949673],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([10, 10, 42949673],"float16"), 2, )
paddle.Tensor.__rsub__(Tensor([10, 228170138],"float32"), 0.1, )
paddle.Tensor.__rsub__(Tensor([10, 228170138],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([10, 228170138],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([10, 42949673, 10],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([10, 42949673, 10],"float16"), 2, )
paddle.Tensor.__rsub__(Tensor([10, 429496730],"float16"), 1, )
paddle.Tensor.__rsub__(Tensor([10, 429496730],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([10, 85899346, 5],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([100, 200, 214749],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([100, 433836, 99],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([104, 21939437],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1140850690, 1, 1, 2],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1140850690, 1, 2],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1140850690, 2],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1140850690, 2],"float32"), 2, )
paddle.Tensor.__rsub__(Tensor([11408507, 100, 2],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([119304648, 3, 3, 4],"float16"), -4.0, )
paddle.Tensor.__rsub__(Tensor([12, 118839, 40, 40, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 1901418, 10, 10, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 3, 10, 10, 633806],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 3, 10, 6338060, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 3, 1584515, 40, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 3, 20, 20, 158452],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 3, 20, 3169030, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 3, 3169030, 20, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 3, 40, 1584515, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 3, 40, 40, 39613],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 3, 6338060, 10, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 475355, 20, 20, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([128, 17825793],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([13, 1, 1, 175515491],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([13, 1, 175515491],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([13, 1, 43878873, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([13, 1, 87757746, 2],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([13, 25073642, 7],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([13, 4, 5, 1, 8775775],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([13, 4, 5, 1253683, 7],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([13, 4, 6268411, 1, 7],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([13, 43878873, 1, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([13, 5014729, 5, 1, 7],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([13, 87757746, 1, 2],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1431655766, 3],"float16"), -4.0, )
paddle.Tensor.__rsub__(Tensor([1431655766, 3],"float16"), 0.0, )
paddle.Tensor.__rsub__(Tensor([1431655766, 3],"float16"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([1431655766, 3],"float16"), 4.0, )
paddle.Tensor.__rsub__(Tensor([14350324, 159],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([16, 142606337],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([16297867, 4, 5, 1, 7],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([175515491, 1, 1, 13],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([181896, 12544],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([190141782, 1, 1, 12],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([190141782, 12],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1901418, 2, 300, 2],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1901418, 3, 20, 20, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2, 107136, 10649],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2, 1140850690, 1],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2, 1140850690],"float32"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([2, 1140850690],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2, 1140850690],"float32"), 2, )
paddle.Tensor.__rsub__(Tensor([2, 1140850690],"int32"), 4096, )
paddle.Tensor.__rsub__(Tensor([2, 162978670, 7],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2, 2, 570425345],"float32"), 1.5, )
paddle.Tensor.__rsub__(Tensor([2, 2, 570425345],"int64"), 1.5, )
paddle.Tensor.__rsub__(Tensor([2, 2147483649],"float16"), 0.5, )
paddle.Tensor.__rsub__(Tensor([2, 2147483649],"float16"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([2, 2147483649],"float16"), 2, )
paddle.Tensor.__rsub__(Tensor([2, 570425345, 2],"float32"), 1.5, )
paddle.Tensor.__rsub__(Tensor([2, 570425345, 2],"int64"), 1.5, )
paddle.Tensor.__rsub__(Tensor([20, 1, 152, 750560],"float32"), 0, )
paddle.Tensor.__rsub__(Tensor([20, 1, 419431, 272],"float32"), 0, )
paddle.Tensor.__rsub__(Tensor([20, 2760, 152, 272],"float32"), 0, )
paddle.Tensor.__rsub__(Tensor([207427399, 1, 1, 11],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([207427399, 1, 1, 11],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([21298, 107136, 1],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2147483649, 2],"float16"), 0.5, )
paddle.Tensor.__rsub__(Tensor([214748365, 20],"float16"), 1, )
paddle.Tensor.__rsub__(Tensor([216918, 200, 99],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2228225, 1024],"float32"), 0.1, )
paddle.Tensor.__rsub__(Tensor([2281701379, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2281701379, 1],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2281701379, 1],"int32"), 4096, )
paddle.Tensor.__rsub__(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.__rsub__(Tensor([2281701379],"float32"), 0.0, )
paddle.Tensor.__rsub__(Tensor([2281701379],"float32"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([2281701379],"float32"), 0.8, )
paddle.Tensor.__rsub__(Tensor([2281701379],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2281701379],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2281701379],"float32"), 11, )
paddle.Tensor.__rsub__(Tensor([2281701379],"float32"), 2, )
paddle.Tensor.__rsub__(Tensor([2281701379],"float32"), 3, )
paddle.Tensor.__rsub__(Tensor([2281701379],"float32"), 4, )
paddle.Tensor.__rsub__(Tensor([2281701379],"int32"), 64, )
paddle.Tensor.__rsub__(Tensor([228170138, 1, 1, 10],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([228170138, 1, 1, 10],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([24422, 93431],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([3, 1431655766],"float16"), -4.0, )
paddle.Tensor.__rsub__(Tensor([3, 1431655766],"float16"), 0.0, )
paddle.Tensor.__rsub__(Tensor([3, 1431655766],"float16"), 4.0, )
paddle.Tensor.__rsub__(Tensor([3043, 107136, 7],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([325957340, 1, 7],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([34817, 1, 256, 256],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([34817, 4, 128, 128],"float32"), 0, )
paddle.Tensor.__rsub__(Tensor([357913942, 12],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([3579140, 2, 300, 2],"float16"), 1, )
paddle.Tensor.__rsub__(Tensor([380283564, 2, 3],"float32"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([4, 3, 3, 119304648],"float16"), -4.0, )
paddle.Tensor.__rsub__(Tensor([4, 3, 357913942],"float16"), -4.0, )
paddle.Tensor.__rsub__(Tensor([4, 3, 89478486, 4],"float16"), -4.0, )
paddle.Tensor.__rsub__(Tensor([4, 34817, 128, 128],"float32"), 0, )
paddle.Tensor.__rsub__(Tensor([4, 357913942, 3],"float16"), -4.0, )
paddle.Tensor.__rsub__(Tensor([4, 4, 1114113, 128],"float32"), 0, )
paddle.Tensor.__rsub__(Tensor([4, 4, 128, 1114113],"float32"), 0, )
paddle.Tensor.__rsub__(Tensor([4, 89478486, 3, 4],"float16"), -4.0, )
paddle.Tensor.__rsub__(Tensor([4294967297],"float16"), 0.0, )
paddle.Tensor.__rsub__(Tensor([4294967297],"float16"), 0.5, )
paddle.Tensor.__rsub__(Tensor([4294967297],"float16"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([4294967297],"float16"), 0.8, )
paddle.Tensor.__rsub__(Tensor([4294967297],"float16"), 2.0, )
paddle.Tensor.__rsub__(Tensor([42949673, 10, 10],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([42949673, 10, 10],"float16"), 2, )
paddle.Tensor.__rsub__(Tensor([475355, 3, 40, 40, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([477218589, 3, 3],"float16"), -4.0, )
paddle.Tensor.__rsub__(Tensor([51856850, 11, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([518569, 1100, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([52, 1253683, 5, 1, 7],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([52, 4, 1567103, 1, 7],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([52, 4, 5, 1, 2193944],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([52, 4, 5, 313421, 7],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([55189, 1, 152, 272],"float32"), 0, )
paddle.Tensor.__rsub__(Tensor([56123, 10164, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([570425345, 1, 1, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([570425345, 2, 2],"float32"), 1.5, )
paddle.Tensor.__rsub__(Tensor([570425345, 2, 2],"int64"), 1.5, )
paddle.Tensor.__rsub__(Tensor([570425345, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([5704254, 100, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([715827883, 2, 3],"float16"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([760567127, 3],"float32"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([7605672, 3, 10, 10, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([85899346, 10, 5],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([858993460, 5],"float16"), 2, )
paddle.Tensor.__rtruediv__(Tensor([1, 1444, 1, 1580126],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([1, 1444, 1580126, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([1, 2281701379, 1, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([1, 2281701379, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([1, 36, 1, 63380594],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([1, 36, 63380594, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([1, 38, 60044774],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([1, 9, 253522376],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([10, 228170138],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([1073741825, 4],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([11661, 195670],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([1228, 32, 241, 241],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([15548, 146753],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([1580126, 1444, 1, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([1680193, 1358],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([178956971, 6, 4],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([190141782, 12],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2, 1140850690],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2, 1140850690],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2, 2, 570425345],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2, 2, 570425345],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2, 2, 570425345],"int64"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2, 2, 570425345],"int64"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2, 2147483649],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2, 570425345, 2],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2, 570425345, 2],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2, 570425345, 2],"int64"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2, 570425345, 2],"int64"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2147483649, 2],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([21474837, 200],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2281701379, 1],"float32"), 0.5, )
paddle.Tensor.__rtruediv__(Tensor([2281701379, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2281701379, 1],"float32"), 5.0, )
paddle.Tensor.__rtruediv__(Tensor([2281701379],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2281701379],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2281701379],"float32"), 10.0, )
paddle.Tensor.__rtruediv__(Tensor([2281701379],"float32"), 2, )
paddle.Tensor.__rtruediv__(Tensor([2281701379],"float32"), 2.0, )
paddle.Tensor.__rtruediv__(Tensor([2281701379],"float32"), 6.283185307179586, )
paddle.Tensor.__rtruediv__(Tensor([253522376, 9, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([26736, 85342],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([3, 1431655766],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([3, 357913942, 4],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([3, 6, 238609295],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([3, 760567127],"float32"), 0.5, )
paddle.Tensor.__rtruediv__(Tensor([3, 760567127],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([3, 760567127],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([3029, 753286],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([380283564, 6],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([3887, 587009],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([4, 1073741825],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([4, 280, 376, 25, 217],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([4, 280, 376, 5419, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([4, 280, 81490, 25, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([4, 570425345],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([4, 570425345],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([4, 60684, 376, 25, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([421120, 25, 217],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([421120, 5419, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([4294967297],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([456340276, 5],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([4981881, 458],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([512, 4456449],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([570425345, 2, 2],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([570425345, 2, 2],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([570425345, 2, 2],"int64"), 1, )
paddle.Tensor.__rtruediv__(Tensor([570425345, 2, 2],"int64"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([6, 380283564],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([6, 380283564],"float32"), 5.0, )
paddle.Tensor.__rtruediv__(Tensor([60044774, 38, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([63380594, 36, 1, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([6684, 341368],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([753286, 3029],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([760567127, 3],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([760567127, 3],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([8, 32, 241, 36983],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([8, 32, 36983, 241],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([8, 4911, 241, 241],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([858993460, 5],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([867, 280, 376, 25, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([8912897, 256],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([91268056, 25, 1],"float32"), 1.0, )
paddle.Tensor.__rxor__(Tensor([152113426, 3, 5],"int32"), 5, )
paddle.Tensor.__rxor__(Tensor([152113426, 3, 5],"int32"), True, )
paddle.Tensor.__rxor__(Tensor([2, 228170138, 5],"int32"), 5, )
paddle.Tensor.__rxor__(Tensor([2, 228170138, 5],"int32"), True, )
paddle.Tensor.__rxor__(Tensor([2, 3, 380283564],"int32"), 5, )
paddle.Tensor.__rxor__(Tensor([2, 3, 380283564],"int32"), True, )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 10285, 221848],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 24276, 93991],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 27216, 83837],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 30324, 75245],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 33600, 67908],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 221848, 10285, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 67908, 33600, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 75245, 30324, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 83837, 27216, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 93991, 24276, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([221848, 1, 10285, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([67908, 1, 33600, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([75245, 1, 30324, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([83837, 1, 27216, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([93991, 1, 24276, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 4294967297],"float16"), 1, )
paddle.Tensor.__sub__(Tensor([1, 1, 10285],"float32"), Tensor([1, 221848, 10285],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 10285],"float32"), Tensor([221848, 1, 10285],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1140850690, 2],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1, 1, 12544, 181896],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1, 1, 1],"float32"), Tensor([1, 1, 2281701379],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1],"float32"), Tensor([1, 2281701379, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1],"float32"), Tensor([2281701379, 1, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 2281701379, 1],"float32"), Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 2281701379],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 2281701379],"float32"), Tensor([1, 1, 2281701379],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 24276],"float32"), Tensor([1, 93991, 24276],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 24276],"float32"), Tensor([93991, 1, 24276],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 27216],"float32"), Tensor([1, 83837, 27216],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 27216],"float32"), Tensor([83837, 1, 27216],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 37632, 60632],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1, 1, 85899346, 50],"float16"), 1, )
paddle.Tensor.__sub__(Tensor([1, 100, 22817014],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1, 1001],"float32"), Tensor([2279422, 1001],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1002],"float32"), Tensor([2277148, 1002],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1004],"float32"), Tensor([2272611, 1004],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 100],"float16"), Tensor([42949673, 100],"float16"), )
paddle.Tensor.__sub__(Tensor([1, 10285],"float32"), Tensor([221848, 10285],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 11, 6482107, 4, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 11, 8, 3241054, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 11, 8, 4, 3241054, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 11, 8, 4, 4, 1620527],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 1100, 51857, 5, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 1100, 8, 32411, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 1100, 8, 5, 25929, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 1100, 8, 5, 4, 12965],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 1140850690, 2],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1, 15845149, 144],"float32"), Tensor([1, 15845149, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 16, 142606337],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1, 18, 3169030, 5, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 18, 8, 1980644, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 18, 8, 5, 1584515, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 18, 8, 5, 4, 792258],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 192, 11883862],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1, 196, 11641334],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1, 1],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 2, 1140850690],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1, 21, 2716312, 5, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 21, 8, 1697695, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 21, 8, 5, 1358156, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 21, 8, 5, 4, 679078],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 22, 2592843, 5, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 22, 8, 1620527, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 22, 8, 5, 1296422, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 22, 8, 5, 4, 648211],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 221848, 10285],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 221848, 10285],"float32"), Tensor([1, 221848, 10285],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 2281701379, 1],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 2281701379, 1],"float32"), Tensor([1, 2281701379, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 2281701379],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([1, 2281701379],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 2281701379],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 3, 224, 3395389],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 3, 3395389, 224],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 3, 686, 1108699],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 3, 742742, 1024],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 30316, 37632, 2],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1, 4294967297],"float16"), 1, )
paddle.Tensor.__sub__(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.Tensor.__sub__(Tensor([1, 570425345, 4],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1, 7130317, 8, 5, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 83837, 27216],"float32"), Tensor([1, 1, 27216],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 83837, 27216],"float32"), Tensor([1, 83837, 27216],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 85899346, 1, 50],"float16"), 1, )
paddle.Tensor.__sub__(Tensor([1, 8912897, 8, 4, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([1, 90948, 12544, 2],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1, 93991, 24276],"float32"), Tensor([1, 1, 24276],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 93991, 24276],"float32"), Tensor([1, 93991, 24276],"float32"), )
paddle.Tensor.__sub__(Tensor([10, 10, 10, 4294968],"float16"), 1.0, )
paddle.Tensor.__sub__(Tensor([10, 10, 21474837, 2],"float16"), 1.0, )
paddle.Tensor.__sub__(Tensor([10, 2, 114085069],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([10, 2, 57042535, 2],"float32"), Tensor([2, 1, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([10, 21474837, 10, 2],"float16"), 1.0, )
paddle.Tensor.__sub__(Tensor([10, 228170138],"float32"), 0.1, )
paddle.Tensor.__sub__(Tensor([10, 228170138],"float32"), 160.0, )
paddle.Tensor.__sub__(Tensor([10, 228170138],"float32"), 80.0, )
paddle.Tensor.__sub__(Tensor([10, 45634028, 5],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([100, 1, 11408507, 2],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([100, 1, 11408507, 2],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([100, 1, 12544, 1819],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([100, 1, 2, 11408507],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([100, 1, 22817014],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([100, 1, 37632, 607],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([100, 11408507, 2],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([100, 2, 11408507, 1],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([100, 2, 11408507],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([100, 2, 3, 3802836],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([100, 200, 214749],"float16"), 1, )
paddle.Tensor.__sub__(Tensor([100, 22817014, 1],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([100, 22817014],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([100, 22817014],"float32"), 40.0, )
paddle.Tensor.__sub__(Tensor([100, 304, 37632, 2],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([100, 42949673],"float16"), 0.5, )
paddle.Tensor.__sub__(Tensor([100, 429497, 100],"float16"), 1, )
paddle.Tensor.__sub__(Tensor([100, 5704254, 2, 2],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([100, 7605672, 3, 1],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([100, 7605672, 3],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([100, 910, 12544, 2],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1000, 2281702],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1000, 2281702],"float32"), 10.0, )
paddle.Tensor.__sub__(Tensor([1000, 2281702],"float32"), 5.5, )
paddle.Tensor.__sub__(Tensor([10000, 228171],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([1002, 2277148],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([10164, 2],"float32"), Tensor([112245, 10164, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([104, 21939437],"float32"), 0.2397127693021015, )
paddle.Tensor.__sub__(Tensor([104, 21939437],"float32"), 40.0, )
paddle.Tensor.__sub__(Tensor([1073741825, 4],"float16"), 0.2, )
paddle.Tensor.__sub__(Tensor([108, 21126865],"float32"), 40.0, )
paddle.Tensor.__sub__(Tensor([1083, 3, 686, 1024],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([10],"float32"), Tensor([228170138, 10],"float32"), )
paddle.Tensor.__sub__(Tensor([11, 207427399],"float32"), 160.0, )
paddle.Tensor.__sub__(Tensor([11, 207427399],"float32"), 80.0, )
paddle.Tensor.__sub__(Tensor([11109, 2],"float32"), Tensor([102697, 11109, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([112, 20372334],"float32"), 40.0, )
paddle.Tensor.__sub__(Tensor([1140850690, 1, 2, 1],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1140850690, 1, 2],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([1140850690, 2, 1],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([1140850690, 2],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([116, 19669840],"float32"), 40.0, )
paddle.Tensor.__sub__(Tensor([11930465, 6, 3, 4, 1, 5],"float16"), Tensor([11930465, 6, 3, 4, 1, 5],"float16"), )
paddle.Tensor.__sub__(Tensor([12, 118839, 40, 40, 1],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([12, 118839, 40, 40, 1],"float32"), Tensor([12, 118839, 40, 40, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 190141782],"float32"), 80.0, )
paddle.Tensor.__sub__(Tensor([12, 1901418, 10, 10, 1],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([12, 1901418, 10, 10, 1],"float32"), Tensor([12, 1901418, 10, 10, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 10, 10, 633806],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([12, 3, 10, 10, 633806],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 10, 10, 633806],"float32"), Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 10, 6338060, 1],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([12, 3, 10, 6338060, 1],"float32"), Tensor([12, 3, 10, 6338060, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 1584515, 40, 1],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([12, 3, 1584515, 40, 1],"float32"), Tensor([12, 3, 1584515, 40, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 20, 20, 158452],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([12, 3, 20, 20, 158452],"float32"), Tensor([12, 3, 20, 20, 158452],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 20, 20, 158452],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 158452],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 20, 3169030, 1],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([12, 3, 20, 3169030, 1],"float32"), Tensor([12, 3, 20, 3169030, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 3169030, 20, 1],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([12, 3, 3169030, 20, 1],"float32"), Tensor([12, 3, 3169030, 20, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 40, 1584515, 1],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([12, 3, 40, 1584515, 1],"float32"), Tensor([12, 3, 40, 1584515, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 40, 40, 39613],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([12, 3, 40, 40, 39613],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 40, 40, 39613],"float32"), Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 3, 6338060, 10, 1],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([12, 3, 6338060, 10, 1],"float32"), Tensor([12, 3, 6338060, 10, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 475355, 20, 20, 1],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([12, 475355, 20, 20, 1],"float32"), Tensor([12, 475355, 20, 20, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([128, 17825793],"float32"), 0.2397127693021015, )
paddle.Tensor.__sub__(Tensor([128, 17825793],"float32"), 20.0, )
paddle.Tensor.__sub__(Tensor([128512, 17755],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([13, 1, 1, 175515491],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([13, 1, 175515491],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([13, 1, 25073642, 7],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([13, 175515491, 1],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__sub__(Tensor([13, 175515491],"float32"), 6.0, )
paddle.Tensor.__sub__(Tensor([13, 175515491],"float32"), 80.0, )
paddle.Tensor.__sub__(Tensor([13, 2, 16, 4, 1371215],"float32"), Tensor([13, 2, 16, 4, 1371215],"float32"), )
paddle.Tensor.__sub__(Tensor([13, 2, 16, 4, 1371215],"float32"), Tensor([13, 2, 16, 4, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([13, 2, 16, 685608, 8],"float32"), Tensor([13, 2, 16, 685608, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([13, 2, 2742430, 4, 8],"float32"), Tensor([13, 2, 2742430, 4, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([13, 25073642, 1, 7],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([13, 25073642, 7],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([13, 3, 224, 261184],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([13, 3, 261184, 224],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([13, 342804, 16, 4, 8],"float32"), Tensor([13, 342804, 16, 4, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([13, 96, 1828287],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__sub__(Tensor([131073, 1, 1, 32768],"float16"), 1, )
paddle.Tensor.__sub__(Tensor([136, 16777217],"float32"), 20.0, )
paddle.Tensor.__sub__(Tensor([139265, 1, 128, 128],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([139265, 2, 1, 512, 4, 4],"float32"), Tensor([1, 2, 1, 512, 4, 4],"float32"), )
paddle.Tensor.__sub__(Tensor([139265, 2, 1, 512, 4, 4],"float32"), Tensor([139265, 2, 1, 512, 4, 4],"float32"), )
paddle.Tensor.__sub__(Tensor([14, 162978670],"float32"), 80.0, )
paddle.Tensor.__sub__(Tensor([14260634, 160],"float32"), 20.0, )
paddle.Tensor.__sub__(Tensor([1431655766, 3],"float16"), 2, )
paddle.Tensor.__sub__(Tensor([14350324, 159],"float32"), 0.03973386615901225, )
paddle.Tensor.__sub__(Tensor([144, 15845149],"float32"), 20.0, )
paddle.Tensor.__sub__(Tensor([14449, 157920],"float32"), 0.78539, )
paddle.Tensor.__sub__(Tensor([15011194, 152],"float32"), 20.0, )
paddle.Tensor.__sub__(Tensor([15158, 3, 224, 224],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([152, 15011194],"float32"), 20.0, )
paddle.Tensor.__sub__(Tensor([15845149, 144],"float32"), 20.0, )
paddle.Tensor.__sub__(Tensor([16, 142606337, 1],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__sub__(Tensor([16, 142606337],"float32"), 0.03973386615901225, )
paddle.Tensor.__sub__(Tensor([16, 96, 1485483],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__sub__(Tensor([160, 14260634],"float32"), 20.0, )
paddle.Tensor.__sub__(Tensor([16297867, 7, 20],"float32"), Tensor([20],"float32"), )
paddle.Tensor.__sub__(Tensor([162978670, 14],"float32"), 80.0, )
paddle.Tensor.__sub__(Tensor([16777217, 136],"float32"), 20.0, )
paddle.Tensor.__sub__(Tensor([16800, 135816],"float32"), 4, )
paddle.Tensor.__sub__(Tensor([17409, 8, 128, 128],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([175515491, 13],"float32"), 6.0, )
paddle.Tensor.__sub__(Tensor([175515491, 13],"float32"), 80.0, )
paddle.Tensor.__sub__(Tensor([17825793, 128],"float32"), 20.0, )
paddle.Tensor.__sub__(Tensor([17825793, 128],"float32"), 4, )
paddle.Tensor.__sub__(Tensor([18, 126761188],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([18550418, 123],"float32"), Tensor([123],"float32"), )
paddle.Tensor.__sub__(Tensor([190141782, 12],"float32"), 80.0, )
paddle.Tensor.__sub__(Tensor([190141782, 3, 4],"float32"), complex(0.0,2.0), )
paddle.Tensor.__sub__(Tensor([1901418, 3, 20, 20, 1],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([1901418, 3, 20, 20, 1],"float32"), Tensor([1901418, 3, 20, 20, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([19669840, 116],"float32"), 40.0, )
paddle.Tensor.__sub__(Tensor([1],"float32"), Tensor([2, 17825793, 8, 8],"float32"), )
paddle.Tensor.__sub__(Tensor([1],"float32"), Tensor([2, 4, 35651585, 8],"float32"), )
paddle.Tensor.__sub__(Tensor([1],"float32"), Tensor([2, 4, 8, 35651585],"float32"), )
paddle.Tensor.__sub__(Tensor([1],"float32"), Tensor([8912897, 4, 8, 8],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 1, 1, 2147483649],"float16"), 1, )
paddle.Tensor.__sub__(Tensor([2, 1, 2, 1],"float32"), Tensor([2, 1140850690],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 1, 2, 570425345],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 1, 65537, 32768],"float16"), 1, )
paddle.Tensor.__sub__(Tensor([2, 107136, 10649],"float32"), 0.05555555555555555, )
paddle.Tensor.__sub__(Tensor([2, 1140850690],"float32"), 2, )
paddle.Tensor.__sub__(Tensor([2, 11408507, 10, 10, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 162978670, 7],"float32"), 0.05555555555555555, )
paddle.Tensor.__sub__(Tensor([2, 17825793, 8, 8],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 2, 570425345],"float32"), 1.5, )
paddle.Tensor.__sub__(Tensor([2, 2, 570425345],"int64"), 1.5, )
paddle.Tensor.__sub__(Tensor([2, 2, 64, 8912897],"float32"), 128.0, )
paddle.Tensor.__sub__(Tensor([2, 2, 8912897, 64],"float32"), 128.0, )
paddle.Tensor.__sub__(Tensor([2, 2147483649],"float16"), 0.2, )
paddle.Tensor.__sub__(Tensor([2, 2147483649],"float16"), 2, )
paddle.Tensor.__sub__(Tensor([2, 278529, 64, 64],"float32"), 128.0, )
paddle.Tensor.__sub__(Tensor([2, 285212673, 4],"float32"), complex(0.0,2.0), )
paddle.Tensor.__sub__(Tensor([2, 2],"float32"), Tensor([13, 43878873, 2, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 2],"float32"), Tensor([142606337, 4, 2, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 3, 10, 10, 3802836],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 3, 10, 38028357, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 3, 11, 11, 3142840],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 3, 11, 34571234, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 3, 12, 12, 2640859],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 3, 12, 31690297, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 3, 13, 13, 2250199],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 3, 13, 29252582, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 3, 14, 14, 1940223],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 3, 14, 27163112, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 3, 27163112, 14, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 3, 29252582, 13, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 3, 31690297, 12, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 3, 34571234, 11, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 3, 380283564],"float32"), complex(0.0,2.0), )
paddle.Tensor.__sub__(Tensor([2, 3, 38028357, 10, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 4, 35651585, 8],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 4, 8, 35651585],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 570425345, 2, 1],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 570425345, 2],"float32"), 1.5, )
paddle.Tensor.__sub__(Tensor([2, 570425345, 2],"int64"), 1.5, )
paddle.Tensor.__sub__(Tensor([2, 57042535, 20],"float32"), Tensor([20],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 5820667, 14, 14, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 65537, 1, 32768],"float16"), 1, )
paddle.Tensor.__sub__(Tensor([2, 6750596, 13, 13, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 7922575, 12, 12, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2, 8, 2228225, 64],"float32"), 128.0, )
paddle.Tensor.__sub__(Tensor([2, 8, 64, 2228225],"float32"), 128.0, )
paddle.Tensor.__sub__(Tensor([2, 9428519, 11, 11, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([20, 114085069],"float32"), 10.0, )
paddle.Tensor.__sub__(Tensor([20372334, 112],"float32"), 40.0, )
paddle.Tensor.__sub__(Tensor([2065, 157920, 7],"float32"), 0.05555555555555555, )
paddle.Tensor.__sub__(Tensor([207427399, 11],"float32"), 160.0, )
paddle.Tensor.__sub__(Tensor([207427399, 11],"float32"), 80.0, )
paddle.Tensor.__sub__(Tensor([21126865, 108],"float32"), 40.0, )
paddle.Tensor.__sub__(Tensor([2147483649, 2],"float16"), 0.5, )
paddle.Tensor.__sub__(Tensor([21474837, 10, 10, 2],"float16"), 1.0, )
paddle.Tensor.__sub__(Tensor([214749, 200, 100],"float16"), 1, )
paddle.Tensor.__sub__(Tensor([21939437, 104],"float32"), 40.0, )
paddle.Tensor.__sub__(Tensor([22120, 103152],"float32"), 4, )
paddle.Tensor.__sub__(Tensor([221848, 1, 10285],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.Tensor.__sub__(Tensor([221848, 1, 10285],"float32"), Tensor([221848, 1, 10285],"float32"), )
paddle.Tensor.__sub__(Tensor([221848, 10285],"float32"), Tensor([1, 10285],"float32"), )
paddle.Tensor.__sub__(Tensor([221848, 10285],"float32"), Tensor([221848, 10285],"float32"), )
paddle.Tensor.__sub__(Tensor([2228225, 1024],"float32"), 0.1, )
paddle.Tensor.__sub__(Tensor([2228225, 2, 16, 4, 8],"float32"), Tensor([2228225, 2, 16, 4, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2272611, 1004],"float32"), Tensor([1, 1004],"float32"), )
paddle.Tensor.__sub__(Tensor([2272611, 1004],"float32"), Tensor([2272611, 1004],"float32"), )
paddle.Tensor.__sub__(Tensor([2277148, 1002],"float32"), Tensor([1, 1002],"float32"), )
paddle.Tensor.__sub__(Tensor([2277148, 1002],"float32"), Tensor([2277148, 1002],"float32"), )
paddle.Tensor.__sub__(Tensor([2279422, 1001],"float32"), Tensor([1, 1001],"float32"), )
paddle.Tensor.__sub__(Tensor([2279422, 1001],"float32"), Tensor([2279422, 1001],"float32"), )
paddle.Tensor.__sub__(Tensor([2281701379, 1, 1],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2281701379, 1, 1],"float32"), Tensor([2281701379, 1, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2281701379, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([2281701379, 1],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([2281701379, 1],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([2281701379, 1],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([2281701379, 1],"float32"), 10.0, )
paddle.Tensor.__sub__(Tensor([2281701379, 1],"float32"), 4, )
paddle.Tensor.__sub__(Tensor([2281701379, 1],"float32"), 5.5, )
paddle.Tensor.__sub__(Tensor([2281701379, 1],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__sub__(Tensor([2281701379, 1],"float32"), Tensor([2],"float32"), )
paddle.Tensor.__sub__(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.__sub__(Tensor([2281701379],"float32"), 0.4, )
paddle.Tensor.__sub__(Tensor([2281701379],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([2281701379],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([2281701379],"float32"), 12, )
paddle.Tensor.__sub__(Tensor([2281701379],"float32"), 14.999999999999998, )
paddle.Tensor.__sub__(Tensor([2281701379],"float32"), 2, )
paddle.Tensor.__sub__(Tensor([2281701379],"float32"), 224.57968650142226, )
paddle.Tensor.__sub__(Tensor([2281701379],"float32"), 263.3959286127792, )
paddle.Tensor.__sub__(Tensor([2281701379],"float32"), 31.191623125197538, )
paddle.Tensor.__sub__(Tensor([2281701379],"float32"), 4003.618114914244, )
paddle.Tensor.__sub__(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__sub__(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.__sub__(Tensor([2281701379],"int32"), 2, )
paddle.Tensor.__sub__(Tensor([228170138, 10],"float32"), 160.0, )
paddle.Tensor.__sub__(Tensor([228170138, 10],"float32"), 80.0, )
paddle.Tensor.__sub__(Tensor([228170138, 2, 5],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([22817014, 100],"float32"), 40.0, )
paddle.Tensor.__sub__(Tensor([22817014, 100],"float32"), Tensor([100],"float32"), )
paddle.Tensor.__sub__(Tensor([2293168, 995],"float32"), 0.2397127693021015, )
paddle.Tensor.__sub__(Tensor([23767723, 96, 1],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__sub__(Tensor([23860930, 6, 3, 1, 2, 5],"float16"), Tensor([23860930, 6, 3, 1, 2, 5],"float16"), )
paddle.Tensor.__sub__(Tensor([24422, 93431],"float32"), 0.2397127693021015, )
paddle.Tensor.__sub__(Tensor([278529, 2, 64, 64],"float32"), 128.0, )
paddle.Tensor.__sub__(Tensor([28, 27163112, 3],"float32"), Tensor([3],"float32"), )
paddle.Tensor.__sub__(Tensor([29, 78679358],"float32"), 14.0, )
paddle.Tensor.__sub__(Tensor([2910334, 196, 4],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([2970966, 192, 4],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([29826162, 6, 3, 4, 2, 1],"float16"), Tensor([29826162, 6, 3, 4, 2, 1],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 1, 2, 1],"float32"), Tensor([2, 1140850690],"float32"), )
paddle.Tensor.__sub__(Tensor([3, 1, 2, 380283564],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([3, 23860930, 3, 4, 1, 5],"float16"), Tensor([3, 23860930, 3, 4, 1, 5],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 380283564, 2, 1],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([3, 47721859, 3, 1, 2, 5],"float16"), Tensor([3, 47721859, 3, 1, 2, 5],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 59652324, 3, 4, 2, 1],"float16"), Tensor([3, 59652324, 3, 4, 2, 1],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 11930465, 4, 1, 5],"float16"), Tensor([3, 6, 11930465, 4, 1, 5],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 23860930, 1, 2, 5],"float16"), Tensor([3, 6, 23860930, 1, 2, 5],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 29826162, 4, 2, 1],"float16"), Tensor([3, 6, 29826162, 4, 2, 1],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 1, 15907287, 5],"float16"), Tensor([3, 6, 3, 1, 15907287, 5],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 1, 2, 39768216],"float16"), Tensor([3, 6, 3, 1, 2, 39768216],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 1, 2, 5],"float16"), Tensor([3, 6, 3, 7953644, 2, 5],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 15907287, 1, 5],"float16"), Tensor([3, 6, 3, 15907287, 1, 5],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 39768216, 2, 1],"float16"), Tensor([3, 6, 3, 39768216, 2, 1],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 1, 19884108],"float16"), Tensor([3, 6, 3, 4, 1, 19884108],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 1, 5],"float16"), Tensor([3, 6, 3, 4, 3976822, 5],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 19884108, 1],"float16"), Tensor([3, 6, 3, 4, 19884108, 1],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 2, 1],"float16"), Tensor([3, 6, 3, 4, 2, 9942054],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), Tensor([3, 6, 3, 4, 2, 1],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), Tensor([3, 6, 3, 4, 2, 9942054],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), Tensor([3, 6, 3, 4, 1, 5],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), Tensor([3, 6, 3, 4, 3976822, 5],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), Tensor([3, 6, 3, 1, 2, 5],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), Tensor([3, 6, 3, 7953644, 2, 5],"float16"), )
paddle.Tensor.__sub__(Tensor([3, 760567127, 1],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__sub__(Tensor([3, 96, 7922575],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__sub__(Tensor([30316, 1, 37632, 2],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([3043, 107136, 7],"float32"), 0.05555555555555555, )
paddle.Tensor.__sub__(Tensor([31690297, 24, 3],"float32"), Tensor([3],"float32"), )
paddle.Tensor.__sub__(Tensor([32, 1, 240, 297097],"float32"), 7.4836, )
paddle.Tensor.__sub__(Tensor([32, 1, 241, 295864],"float32"), 7.4836, )
paddle.Tensor.__sub__(Tensor([32, 1, 295864, 241],"float32"), 7.4836, )
paddle.Tensor.__sub__(Tensor([32, 1, 297097, 240],"float32"), 7.4836, )
paddle.Tensor.__sub__(Tensor([32, 1228, 241, 241],"float32"), 7.4836, )
paddle.Tensor.__sub__(Tensor([32, 1238, 240, 240],"float32"), 7.4836, )
paddle.Tensor.__sub__(Tensor([32, 32, 2228225],"float32"), 2, )
paddle.Tensor.__sub__(Tensor([32, 557057, 128],"float32"), 2, )
paddle.Tensor.__sub__(Tensor([32, 71303169],"float32"), 0.03973386615901225, )
paddle.Tensor.__sub__(Tensor([324106, 22, 8, 5, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([325957340, 1, 1, 7],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([325957340, 1, 7],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([32769, 8, 128, 128],"float16"), 0.5, )
paddle.Tensor.__sub__(Tensor([339539, 21, 8, 5, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([33954, 33600, 2],"float32"), Tensor([33600, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([37623, 30324, 2],"float32"), Tensor([30324, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([380283564, 2, 3, 1],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([380283564, 2, 3],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([380283564, 6],"float32"), 160.0, )
paddle.Tensor.__sub__(Tensor([3880445, 3, 14, 14, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([39285, 1, 241, 241],"float32"), 7.4836, )
paddle.Tensor.__sub__(Tensor([396129, 18, 8, 5, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([39613, 1, 240, 240],"float32"), 7.4836, )
paddle.Tensor.__sub__(Tensor([4, 157920, 3613],"float32"), 0.05555555555555555, )
paddle.Tensor.__sub__(Tensor([4, 1834166, 311],"float32"), 2.0, )
paddle.Tensor.__sub__(Tensor([4, 2, 1, 17825793, 4, 4],"float32"), Tensor([1, 2, 1, 17825793, 4, 4],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 2, 1, 512, 139265, 4],"float32"), Tensor([1, 2, 1, 512, 139265, 4],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 2, 1, 512, 4, 139265],"float32"), Tensor([1, 2, 1, 512, 4, 139265],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 2, 1, 512, 4, 4],"float32"), Tensor([1, 2, 139265, 512, 4, 4],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 2, 34817, 512, 4, 4],"float32"), Tensor([1, 2, 1, 512, 4, 4],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 2, 34817, 512, 4, 4],"float32"), Tensor([1, 2, 34817, 512, 4, 4],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 280, 376, 5419],"float32"), 2.0, )
paddle.Tensor.__sub__(Tensor([4, 280, 81490, 25],"float32"), 2.0, )
paddle.Tensor.__sub__(Tensor([4, 570425345],"float32"), 0.78539, )
paddle.Tensor.__sub__(Tensor([4, 570425345],"float32"), 160.0, )
paddle.Tensor.__sub__(Tensor([4, 60684, 376, 25],"float32"), 2.0, )
paddle.Tensor.__sub__(Tensor([4, 69633, 1, 512, 4, 4],"float32"), Tensor([1, 69633, 1, 512, 4, 4],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 81489335, 7],"float32"), 0.05555555555555555, )
paddle.Tensor.__sub__(Tensor([4, 94, 6068355],"float32"), 2.0, )
paddle.Tensor.__sub__(Tensor([40, 57042535],"float32"), 0.2397127693021015, )
paddle.Tensor.__sub__(Tensor([4096, 557057],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([41919, 27216, 2],"float32"), Tensor([27216, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([4294967297, 1],"float16"), 0.5, )
paddle.Tensor.__sub__(Tensor([4294967297, 1],"float16"), 1, )
paddle.Tensor.__sub__(Tensor([4294967297],"float16"), 0.4, )
paddle.Tensor.__sub__(Tensor([4294967297],"float16"), 0.5, )
paddle.Tensor.__sub__(Tensor([4294967297],"float16"), 1.0, )
paddle.Tensor.__sub__(Tensor([4294967297],"float16"), 255.5, )
paddle.Tensor.__sub__(Tensor([42949673, 100],"float16"), Tensor([1, 100],"float16"), )
paddle.Tensor.__sub__(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), )
paddle.Tensor.__sub__(Tensor([4500398, 3, 13, 13, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([456340276, 5],"float32"), 160.0, )
paddle.Tensor.__sub__(Tensor([456340276, 5],"float32"), 2.0, )
paddle.Tensor.__sub__(Tensor([46996, 24276, 2],"float32"), Tensor([24276, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([475355, 3, 40, 40, 1],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([475355, 3, 40, 40, 1],"float32"), Tensor([475355, 3, 40, 40, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([4800, 475355],"float32"), 4, )
paddle.Tensor.__sub__(Tensor([5, 456340276],"float32"), 160.0, )
paddle.Tensor.__sub__(Tensor([5, 456340276],"float32"), 2.0, )
paddle.Tensor.__sub__(Tensor([5281717, 3, 12, 12, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([53053, 21504, 2],"float32"), Tensor([21504, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([557057, 32, 128],"float32"), 2, )
paddle.Tensor.__sub__(Tensor([570425345, 1, 2, 2],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([570425345, 2, 1, 2],"float32"), Tensor([2, 1, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([570425345, 2, 2],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([570425345, 2, 2],"float32"), 1.5, )
paddle.Tensor.__sub__(Tensor([570425345, 2, 2],"int64"), 1.5, )
paddle.Tensor.__sub__(Tensor([570425345, 4],"float32"), 160.0, )
paddle.Tensor.__sub__(Tensor([5704254, 100, 4],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([6, 380283564],"float32"), 160.0, )
paddle.Tensor.__sub__(Tensor([6285679, 3, 11, 11, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([64, 35651585],"float32"), 0.2397127693021015, )
paddle.Tensor.__sub__(Tensor([64, 35651585],"float32"), 4, )
paddle.Tensor.__sub__(Tensor([6483, 1100, 8, 5, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([69633, 8, 64, 64],"float32"), 128.0, )
paddle.Tensor.__sub__(Tensor([71303169, 16, 2],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([760567127, 3],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([760567127, 3],"float32"), 2, )
paddle.Tensor.__sub__(Tensor([7605672, 3, 10, 10, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([7605672, 3, 10, 10, 1],"float32"), 0.025000000000000022, )
paddle.Tensor.__sub__(Tensor([7605672, 3, 10, 10, 1],"float32"), Tensor([7605672, 3, 10, 10, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([78050, 94, 311],"float32"), 2.0, )
paddle.Tensor.__sub__(Tensor([78679358, 29],"float32"), 14.0, )
paddle.Tensor.__sub__(Tensor([8, 1, 1183456, 241],"float32"), 7.4836, )
paddle.Tensor.__sub__(Tensor([8, 1, 128, 2228225],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([8, 1, 2228225, 128],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([8, 1, 241, 1183456],"float32"), 7.4836, )
paddle.Tensor.__sub__(Tensor([8, 17409, 128, 128],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([8, 32769, 128, 128],"float16"), 0.5, )
paddle.Tensor.__sub__(Tensor([8, 4911, 241, 241],"float32"), 7.4836, )
paddle.Tensor.__sub__(Tensor([8, 8, 128, 278529],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([8, 8, 128, 524289],"float16"), 0.5, )
paddle.Tensor.__sub__(Tensor([8, 8, 278529, 128],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([8, 8, 524289, 128],"float16"), 0.5, )
paddle.Tensor.__sub__(Tensor([810264, 11, 8, 4, 4, 2],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([83837, 1, 27216],"float32"), Tensor([1, 1, 27216],"float32"), )
paddle.Tensor.__sub__(Tensor([83837, 1, 27216],"float32"), Tensor([83837, 1, 27216],"float32"), )
paddle.Tensor.__sub__(Tensor([85899346, 1, 1, 50],"float16"), 1, )
paddle.Tensor.__sub__(Tensor([867, 280, 376, 25],"float32"), 2.0, )
paddle.Tensor.__sub__(Tensor([8912897, 4, 8, 8],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__sub__(Tensor([8913, 256000],"float32"), Tensor([256000],"float32"), )
paddle.Tensor.__sub__(Tensor([90948, 1, 12544, 2],"float32"), 1.0, )
paddle.Tensor.__sub__(Tensor([93991, 1, 24276],"float32"), Tensor([1, 1, 24276],"float32"), )
paddle.Tensor.__sub__(Tensor([93991, 1, 24276],"float32"), Tensor([93991, 1, 24276],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 1, 1, 2281701379],"float32"), 0.9910367284058681, )
paddle.Tensor.__truediv__(Tensor([1, 1, 1, 2281701379],"float32"), 0.9975949255486735, )
paddle.Tensor.__truediv__(Tensor([1, 1, 1, 2281701379],"float32"), 0.9992704001300187, )
paddle.Tensor.__truediv__(Tensor([1, 1, 1, 2281701379],"float32"), 0.9997265714068944, )
paddle.Tensor.__truediv__(Tensor([1, 1, 1, 2281701379],"float32"), 0.9998633003437416, )
paddle.Tensor.__truediv__(Tensor([1, 1, 10285],"float32"), Tensor([1, 221848, 10285],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 1, 10285],"float32"), Tensor([221848, 1, 10285],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 1, 15, 152113426],"float32"), 0.01, )
paddle.Tensor.__truediv__(Tensor([1, 1, 15, 152113426],"float32"), 12, )
paddle.Tensor.__truediv__(Tensor([1, 1, 16, 142606337],"float32"), 6, )
paddle.Tensor.__truediv__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9910367284058681, )
paddle.Tensor.__truediv__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9975949255486735, )
paddle.Tensor.__truediv__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9992704001300187, )
paddle.Tensor.__truediv__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9997265714068944, )
paddle.Tensor.__truediv__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9998633003437416, )
paddle.Tensor.__truediv__(Tensor([1, 1, 2281701379],"float32"), Tensor([1, 1, 2281701379],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 1, 27163112, 84],"float32"), 0.01, )
paddle.Tensor.__truediv__(Tensor([1, 1, 27163112, 84],"float32"), 12, )
paddle.Tensor.__truediv__(Tensor([1, 1, 27163112, 84],"float32"), 6, )
paddle.Tensor.__truediv__(Tensor([1, 1, 32, 71303169],"float32"), 57344, )
paddle.Tensor.__truediv__(Tensor([1, 1, 71303169, 32],"float32"), 57344, )
paddle.Tensor.__truediv__(Tensor([1, 10, 114085069, 2],"float32"), Tensor([2, 1, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 10, 114085069, 2],"float32"), Tensor([2, 1, 114085069, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 10, 15, 15211343],"float32"), Tensor([2, 1, 1, 15211343],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 100, 22817014],"float32"), 64, )
paddle.Tensor.__truediv__(Tensor([1, 1001],"float32"), Tensor([2279422, 1001],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 1024, 2228225],"float32"), 16, )
paddle.Tensor.__truediv__(Tensor([1, 10285, 221848],"float32"), Tensor([10285, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 11, 6482107, 4, 4, 2],"float32"), 4, )
paddle.Tensor.__truediv__(Tensor([1, 11, 8, 3241054, 4, 2],"float32"), 4, )
paddle.Tensor.__truediv__(Tensor([1, 11, 8, 4, 3241054, 2],"float32"), 4, )
paddle.Tensor.__truediv__(Tensor([1, 11, 8, 4, 4, 1620527],"float32"), 4, )
paddle.Tensor.__truediv__(Tensor([1, 1140850690, 2],"float32"), Tensor([2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 128, 17825793],"float32"), 2.0794415416798357, )
paddle.Tensor.__truediv__(Tensor([1, 128, 17825793],"float32"), 3, )
paddle.Tensor.__truediv__(Tensor([1, 128, 17825793],"float32"), 4, )
paddle.Tensor.__truediv__(Tensor([1, 169, 13501192],"float32"), 32, )
paddle.Tensor.__truediv__(Tensor([1, 1697695, 16, 84],"float32"), 6, )
paddle.Tensor.__truediv__(Tensor([1, 17825793, 128],"float32"), 2.0794415416798357, )
paddle.Tensor.__truediv__(Tensor([1, 17825793, 128],"float32"), 4, )
paddle.Tensor.__truediv__(Tensor([1, 17825793, 8, 16],"float32"), 4.0, )
paddle.Tensor.__truediv__(Tensor([1, 1810875, 15, 84],"float32"), 0.01, )
paddle.Tensor.__truediv__(Tensor([1, 1810875, 15, 84],"float32"), 12, )
paddle.Tensor.__truediv__(Tensor([1, 188, 140, 1, 86691],"float32"), 2, )
paddle.Tensor.__truediv__(Tensor([1, 188, 140, 43346, 2],"float32"), 2, )
paddle.Tensor.__truediv__(Tensor([1, 188, 6068355, 1, 2],"float32"), 2, )
paddle.Tensor.__truediv__(Tensor([1, 192, 11883862],"float32"), 2, )
paddle.Tensor.__truediv__(Tensor([1, 192, 3, 3961288],"float32"), 0.9998318674381506, )
paddle.Tensor.__truediv__(Tensor([1, 192, 3, 3961288],"float32"), 0.9998554356700223, )
paddle.Tensor.__truediv__(Tensor([1, 192, 3961288, 3],"float32"), 0.9998318674381506, )
paddle.Tensor.__truediv__(Tensor([1, 192, 3961288, 3],"float32"), 0.9998554356700223, )
paddle.Tensor.__truediv__(Tensor([1, 20372334, 112],"float32"), 3, )
paddle.Tensor.__truediv__(Tensor([1, 221848, 10285],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 221848, 10285],"float32"), Tensor([1, 221848, 10285],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 2228225, 32, 32],"float32"), 57344, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9910367284058681, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9975949255486735, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9992704001300187, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9997265714068944, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379, 1, 1],"float32"), 0.9998633003437416, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379, 1],"float32"), 2, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379],"float32"), 0.333, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379],"float32"), 16, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379],"float32"), 1e-09, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379],"float32"), 3.4657359027997265, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379],"float32"), 32, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379],"float32"), 4.1588830833596715, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379],"float32"), 57344, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379],"float32"), 64, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 253522376, 3, 3],"float32"), 0.9998318674381506, )
paddle.Tensor.__truediv__(Tensor([1, 253522376, 3, 3],"float32"), 0.9998554356700223, )
paddle.Tensor.__truediv__(Tensor([1, 262145, 1024, 16],"float16"), 128.0, )
paddle.Tensor.__truediv__(Tensor([1, 2704, 843825],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([1, 28, 81489335],"float32"), 255.0, )
paddle.Tensor.__truediv__(Tensor([1, 285212673, 1, 8],"float32"), 2.8284271247461903, )
paddle.Tensor.__truediv__(Tensor([1, 3, 224, 3395389],"float32"), 255.0, )
paddle.Tensor.__truediv__(Tensor([1, 3, 224, 3395389],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 3, 3395389, 224],"float32"), 255.0, )
paddle.Tensor.__truediv__(Tensor([1, 3, 3395389, 224],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 36828, 1549, 5, 4, 2],"float32"), Tensor([1, 1, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 36828, 1549, 5, 4, 2],"float32"), Tensor([1, 1, 1549, 5, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 36828, 8, 5, 4, 388],"float32"), Tensor([1, 1, 1, 5, 1, 388],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 36828, 8, 5, 775, 2],"float32"), Tensor([1, 1, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 36828, 8, 5, 775, 2],"float32"), Tensor([1, 1, 1, 5, 775, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 36828, 8, 969, 4, 2],"float32"), Tensor([1, 1, 1, 969, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 39339679, 1, 58],"float32"), 1, )
paddle.Tensor.__truediv__(Tensor([1, 4, 1, 570425345],"float32"), 2.8284271247461903, )
paddle.Tensor.__truediv__(Tensor([1, 4, 20, 28521268],"float32"), 1.0, )
paddle.Tensor.__truediv__(Tensor([1, 4, 28521268, 20],"float32"), 1.0, )
paddle.Tensor.__truediv__(Tensor([1, 4, 71303169, 8],"float32"), 2.8284271247461903, )
paddle.Tensor.__truediv__(Tensor([1, 4294967297],"float16"), 100, )
paddle.Tensor.__truediv__(Tensor([1, 4294967297],"float16"), 17, )
paddle.Tensor.__truediv__(Tensor([1, 4294967297],"float16"), 4, )
paddle.Tensor.__truediv__(Tensor([1, 4294967297],"float16"), 40, )
paddle.Tensor.__truediv__(Tensor([1, 45474, 224, 224],"float32"), 255.0, )
paddle.Tensor.__truediv__(Tensor([1, 570425345, 4],"float32"), 16, )
paddle.Tensor.__truediv__(Tensor([1, 570425345, 4],"float32"), 32, )
paddle.Tensor.__truediv__(Tensor([1, 570425345, 4],"float32"), 64, )
paddle.Tensor.__truediv__(Tensor([1, 570425345, 4],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([1, 5704254, 20, 20],"float32"), 1.0, )
paddle.Tensor.__truediv__(Tensor([1, 5704254, 20, 20],"float32"), 2.449489742783178, )
paddle.Tensor.__truediv__(Tensor([1, 6, 19014179, 20],"float32"), 2.449489742783178, )
paddle.Tensor.__truediv__(Tensor([1, 6, 20, 19014179],"float32"), 2.449489742783178, )
paddle.Tensor.__truediv__(Tensor([1, 7130317, 8, 5, 4, 2],"float32"), Tensor([1, 1, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 7130317, 8, 5, 4, 2],"float32"), Tensor([1, 7130317, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 76056713, 15, 2],"float32"), Tensor([2, 1, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 76056713, 15, 2],"float32"), Tensor([2, 76056713, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 8, 1, 285212673],"float32"), 1, )
paddle.Tensor.__truediv__(Tensor([1, 8, 1024, 524289],"float16"), 128.0, )
paddle.Tensor.__truediv__(Tensor([1, 8, 17825793, 16],"float32"), 4.0, )
paddle.Tensor.__truediv__(Tensor([1, 8, 33554433, 16],"float16"), 128.0, )
paddle.Tensor.__truediv__(Tensor([1, 8, 4917460, 58],"float32"), 1, )
paddle.Tensor.__truediv__(Tensor([1, 8, 8, 35651585],"float32"), 4.0, )
paddle.Tensor.__truediv__(Tensor([1, 81489335, 28],"float32"), 255.0, )
paddle.Tensor.__truediv__(Tensor([1, 8148934, 140, 1, 2],"float32"), 2, )
paddle.Tensor.__truediv__(Tensor([1, 8912897, 8, 4, 4, 2],"float32"), 4, )
paddle.Tensor.__truediv__(Tensor([10, 1865, 64, 3600],"float16"), 8.0, )
paddle.Tensor.__truediv__(Tensor([10, 192, 3, 396129],"float32"), 0.9998702707939089, )
paddle.Tensor.__truediv__(Tensor([10, 192, 396129, 3],"float32"), 0.9998702707939089, )
paddle.Tensor.__truediv__(Tensor([10, 2, 14260634, 8],"float32"), 5.656854249492381, )
paddle.Tensor.__truediv__(Tensor([10, 2, 8, 14260634],"float32"), 5.656854249492381, )
paddle.Tensor.__truediv__(Tensor([10, 228170138],"float32"), 0.1, )
paddle.Tensor.__truediv__(Tensor([10, 228170138],"float32"), 128, )
paddle.Tensor.__truediv__(Tensor([10, 25352238, 3, 3],"float32"), 0.9998702707939089, )
paddle.Tensor.__truediv__(Tensor([10, 3565159, 8, 8],"float32"), 5.656854249492381, )
paddle.Tensor.__truediv__(Tensor([10, 8, 14914, 3600],"float16"), 8.0, )
paddle.Tensor.__truediv__(Tensor([10, 8, 64, 838861],"float16"), 8.0, )
paddle.Tensor.__truediv__(Tensor([100, 15802, 38, 38],"float32"), 2, )
paddle.Tensor.__truediv__(Tensor([100, 4, 150112, 38],"float32"), 2, )
paddle.Tensor.__truediv__(Tensor([100, 4, 38, 150112],"float32"), 2, )
paddle.Tensor.__truediv__(Tensor([1000, 2281702],"float32"), 50000, )
paddle.Tensor.__truediv__(Tensor([1000, 380284, 2, 3],"float32"), Tensor([2, 3],"float32"), )
paddle.Tensor.__truediv__(Tensor([1008, 17685, 128],"float32"), 11.313708498984761, )
paddle.Tensor.__truediv__(Tensor([1008, 7, 323371],"float32"), 11.313708498984761, )
paddle.Tensor.__truediv__(Tensor([1024, 1024, 1, 2177],"float32"), 0.9996676942353445, )
paddle.Tensor.__truediv__(Tensor([1024, 1024, 2177, 1],"float32"), 0.9996676942353445, )
paddle.Tensor.__truediv__(Tensor([1024, 2228225, 1, 1],"float32"), 0.9996676942353445, )
paddle.Tensor.__truediv__(Tensor([1024, 2228225],"float32"), 0.9992704001300187, )
paddle.Tensor.__truediv__(Tensor([1024, 2228225],"float32"), 0.9996676942353445, )
paddle.Tensor.__truediv__(Tensor([1024, 2228225],"float32"), 0.9998702707939089, )
paddle.Tensor.__truediv__(Tensor([10649, 107136, 2],"float32"), 1.0, )
paddle.Tensor.__truediv__(Tensor([1073741825, 4],"float16"), 17, )
paddle.Tensor.__truediv__(Tensor([107374183, 40],"float16"), 100, )
paddle.Tensor.__truediv__(Tensor([1125100, 3, 26, 26, 1],"float32"), 26, )
paddle.Tensor.__truediv__(Tensor([114085069, 20],"float32"), 0.5, )
paddle.Tensor.__truediv__(Tensor([114085069, 20],"float32"), 1.3, )
paddle.Tensor.__truediv__(Tensor([114085069, 20],"float32"), 20, )
paddle.Tensor.__truediv__(Tensor([1140850690, 2],"float32"), 12.0, )
paddle.Tensor.__truediv__(Tensor([1140850690, 2],"float32"), 128, )
paddle.Tensor.__truediv__(Tensor([1140850690, 2],"float32"), 16, )
paddle.Tensor.__truediv__(Tensor([1140850690, 2],"float32"), 64, )
paddle.Tensor.__truediv__(Tensor([1140850690, 2],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([11883862, 192, 1],"float32"), 2, )
paddle.Tensor.__truediv__(Tensor([12, 118839, 40, 40, 1],"float32"), 40, )
paddle.Tensor.__truediv__(Tensor([12, 1901418, 10, 10, 1],"float32"), 10, )
paddle.Tensor.__truediv__(Tensor([12, 1901418, 10, 10, 1],"float32"), 320, )
paddle.Tensor.__truediv__(Tensor([12, 1901418, 10, 10, 1],"float32"), Tensor([12, 1901418, 10, 10, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([12, 2, 16, 5941931],"float32"), 11.313708498984761, )
paddle.Tensor.__truediv__(Tensor([12, 2, 5941931, 16],"float32"), 11.313708498984761, )
paddle.Tensor.__truediv__(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.Tensor.__truediv__(Tensor([12, 3, 10, 10, 633806],"float32"), 10, )
paddle.Tensor.__truediv__(Tensor([12, 3, 10, 10, 633806],"float32"), 320, )
paddle.Tensor.__truediv__(Tensor([12, 3, 10, 10, 633806],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([12, 3, 10, 10, 633806],"float32"), Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.Tensor.__truediv__(Tensor([12, 3, 10, 6338060, 1],"float32"), 10, )
paddle.Tensor.__truediv__(Tensor([12, 3, 10, 6338060, 1],"float32"), 320, )
paddle.Tensor.__truediv__(Tensor([12, 3, 10, 6338060, 1],"float32"), Tensor([12, 3, 10, 6338060, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([12, 3, 1584515, 40, 1],"float32"), 40, )
paddle.Tensor.__truediv__(Tensor([12, 3, 20, 20, 158452],"float32"), 20, )
paddle.Tensor.__truediv__(Tensor([12, 3, 20, 3169030, 1],"float32"), 20, )
paddle.Tensor.__truediv__(Tensor([12, 3, 3169030, 20, 1],"float32"), 20, )
paddle.Tensor.__truediv__(Tensor([12, 3, 40, 1584515, 1],"float32"), 40, )
paddle.Tensor.__truediv__(Tensor([12, 3, 40, 40, 39613],"float32"), 40, )
paddle.Tensor.__truediv__(Tensor([12, 3, 6338060, 10, 1],"float32"), 10, )
paddle.Tensor.__truediv__(Tensor([12, 3, 6338060, 10, 1],"float32"), 320, )
paddle.Tensor.__truediv__(Tensor([12, 3, 6338060, 10, 1],"float32"), Tensor([12, 3, 6338060, 10, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([12, 475355, 20, 20, 1],"float32"), 20, )
paddle.Tensor.__truediv__(Tensor([12, 742742, 16, 16],"float32"), 11.313708498984761, )
paddle.Tensor.__truediv__(Tensor([120, 19014179],"float32"), 448, )
paddle.Tensor.__truediv__(Tensor([128, 1, 3, 5941931],"float32"), 0.984375, )
paddle.Tensor.__truediv__(Tensor([128, 1, 5941931, 3],"float32"), 0.984375, )
paddle.Tensor.__truediv__(Tensor([128, 10700, 56, 56],"float16"), 0.975, )
paddle.Tensor.__truediv__(Tensor([128, 112, 14, 21400],"float16"), 0.875, )
paddle.Tensor.__truediv__(Tensor([128, 112, 14, 21400],"float16"), 0.8875, )
paddle.Tensor.__truediv__(Tensor([128, 112, 21400, 14],"float16"), 0.875, )
paddle.Tensor.__truediv__(Tensor([128, 112, 21400, 14],"float16"), 0.8875, )
paddle.Tensor.__truediv__(Tensor([128, 128, 2, 69633],"float32"), 0.9991326382620116, )
paddle.Tensor.__truediv__(Tensor([128, 128, 69633, 2],"float32"), 0.9991326382620116, )
paddle.Tensor.__truediv__(Tensor([128, 171197, 14, 14],"float16"), 0.875, )
paddle.Tensor.__truediv__(Tensor([128, 171197, 14, 14],"float16"), 0.8875, )
paddle.Tensor.__truediv__(Tensor([128, 171197, 14, 14],"float16"), 0.9125, )
paddle.Tensor.__truediv__(Tensor([128, 171197, 14, 14],"float16"), 0.925, )
paddle.Tensor.__truediv__(Tensor([128, 17825793],"float32"), 1.0, )
paddle.Tensor.__truediv__(Tensor([128, 17825793],"float32"), 7, )
paddle.Tensor.__truediv__(Tensor([128, 192, 24967, 7],"float16"), 0.825, )
paddle.Tensor.__truediv__(Tensor([128, 192, 24967, 7],"float16"), 0.8375, )
paddle.Tensor.__truediv__(Tensor([128, 192, 24967, 7],"float16"), 0.85, )
paddle.Tensor.__truediv__(Tensor([128, 192, 7, 24967],"float16"), 0.825, )
paddle.Tensor.__truediv__(Tensor([128, 192, 7, 24967],"float16"), 0.8375, )
paddle.Tensor.__truediv__(Tensor([128, 192, 7, 24967],"float16"), 0.85, )
paddle.Tensor.__truediv__(Tensor([128, 1980644, 3, 3],"float32"), 0.984375, )
paddle.Tensor.__truediv__(Tensor([128, 24, 24967, 56],"float16"), 0.975, )
paddle.Tensor.__truediv__(Tensor([128, 24, 56, 24967],"float16"), 0.975, )
paddle.Tensor.__truediv__(Tensor([128, 40, 28, 29960],"float16"), 0.95, )
paddle.Tensor.__truediv__(Tensor([128, 40, 29960, 28],"float16"), 0.95, )
paddle.Tensor.__truediv__(Tensor([128, 42800, 28, 28],"float16"), 0.95, )
paddle.Tensor.__truediv__(Tensor([128, 4456449, 2, 2],"float32"), 0.9991326382620116, )
paddle.Tensor.__truediv__(Tensor([128, 684785, 7, 7],"float16"), 0.825, )
paddle.Tensor.__truediv__(Tensor([128, 684785, 7, 7],"float16"), 0.8375, )
paddle.Tensor.__truediv__(Tensor([128, 684785, 7, 7],"float16"), 0.85, )
paddle.Tensor.__truediv__(Tensor([128, 80, 14, 29960],"float16"), 0.9125, )
paddle.Tensor.__truediv__(Tensor([128, 80, 14, 29960],"float16"), 0.925, )
paddle.Tensor.__truediv__(Tensor([128, 80, 29960, 14],"float16"), 0.9125, )
paddle.Tensor.__truediv__(Tensor([128, 80, 29960, 14],"float16"), 0.925, )
paddle.Tensor.__truediv__(Tensor([13, 1, 175515491],"float32"), 6.238324625039508, )
paddle.Tensor.__truediv__(Tensor([13, 16, 10324441, 2],"float16"), 1.4142135623730951, )
paddle.Tensor.__truediv__(Tensor([13, 16, 7, 2949841],"float16"), 1.4142135623730951, )
paddle.Tensor.__truediv__(Tensor([13, 175515491, 1],"float32"), 6.238324625039508, )
paddle.Tensor.__truediv__(Tensor([13, 175515491],"float32"), 4.500000001, )
paddle.Tensor.__truediv__(Tensor([13, 21, 8357881],"float32"), 2.8284271247461903, )
paddle.Tensor.__truediv__(Tensor([13, 23598722, 7, 2],"float16"), 1.4142135623730951, )
paddle.Tensor.__truediv__(Tensor([13, 2742430, 8, 8],"float32"), 1.6817928305074292, )
paddle.Tensor.__truediv__(Tensor([13, 3134206, 56],"float32"), 2.772588722239781, )
paddle.Tensor.__truediv__(Tensor([13, 4, 5484860, 8],"float32"), 1.6817928305074292, )
paddle.Tensor.__truediv__(Tensor([13, 4, 8, 5484860],"float32"), 1.6817928305074292, )
paddle.Tensor.__truediv__(Tensor([13, 5484860, 32],"float32"), 2.8284271247461903, )
paddle.Tensor.__truediv__(Tensor([13, 56, 3134206],"float32"), 2.772588722239781, )
paddle.Tensor.__truediv__(Tensor([131678, 3, 76, 76, 1],"float32"), 76, )
paddle.Tensor.__truediv__(Tensor([1320430, 192, 3, 3],"float32"), 0.9998318674381506, )
paddle.Tensor.__truediv__(Tensor([1320430, 192, 3, 3],"float32"), 0.9998554356700223, )
paddle.Tensor.__truediv__(Tensor([1320430, 192, 3, 3],"float32"), 0.9998702707939089, )
paddle.Tensor.__truediv__(Tensor([1320430, 3, 24, 24, 1],"float32"), 24, )
paddle.Tensor.__truediv__(Tensor([136957, 40, 28, 28],"float16"), 0.95, )
paddle.Tensor.__truediv__(Tensor([139265, 1, 128, 128],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([139265, 128, 128],"float32"), 2.0794415416798357, )
paddle.Tensor.__truediv__(Tensor([139265, 128, 128],"float32"), 4, )
paddle.Tensor.__truediv__(Tensor([142606337, 16],"float32"), 32, )
paddle.Tensor.__truediv__(Tensor([1426064, 4, 20, 20],"float32"), 1.0, )
paddle.Tensor.__truediv__(Tensor([14316558, 3, 100],"float16"), 40, )
paddle.Tensor.__truediv__(Tensor([14449, 157920],"float32"), 3.141592653589793, )
paddle.Tensor.__truediv__(Tensor([146715, 3, 72, 72, 1],"float32"), 72, )
paddle.Tensor.__truediv__(Tensor([15158, 3, 224, 224],"float32"), 255.0, )
paddle.Tensor.__truediv__(Tensor([15158, 3, 224, 224],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([152113426, 15],"float32"), 15, )
paddle.Tensor.__truediv__(Tensor([15211343, 6, 5, 5],"float32"), 448, )
paddle.Tensor.__truediv__(Tensor([1571420, 3, 22, 22, 1],"float32"), 22, )
paddle.Tensor.__truediv__(Tensor([159159, 128, 112],"float32"), 3, )
paddle.Tensor.__truediv__(Tensor([16, 1, 16, 8912897],"float32"), 0.7853981633974483, )
paddle.Tensor.__truediv__(Tensor([16, 1, 8912897, 16],"float32"), 0.7853981633974483, )
paddle.Tensor.__truediv__(Tensor([16, 10, 14260634],"float32"), 0.1, )
paddle.Tensor.__truediv__(Tensor([16, 197, 1362617],"float16"), 0.8999999985098839, )
paddle.Tensor.__truediv__(Tensor([16, 197, 1362617],"float16"), 0.9090909063816071, )
paddle.Tensor.__truediv__(Tensor([16, 197, 1362617],"float16"), 0.9181818142533302, )
paddle.Tensor.__truediv__(Tensor([16, 197, 1362617],"float16"), 0.927272729575634, )
paddle.Tensor.__truediv__(Tensor([16, 197, 1362617],"float16"), 0.9363636374473572, )
paddle.Tensor.__truediv__(Tensor([16, 197, 1362617],"float16"), 0.9454545453190804, )
paddle.Tensor.__truediv__(Tensor([16, 197, 1362617],"float16"), 0.9545454531908035, )
paddle.Tensor.__truediv__(Tensor([16, 197, 1362617],"float16"), 0.963636364787817, )
paddle.Tensor.__truediv__(Tensor([16, 197, 1362617],"float16"), 0.9727272726595402, )
paddle.Tensor.__truediv__(Tensor([16, 197, 1362617],"float16"), 0.9818181823939085, )
paddle.Tensor.__truediv__(Tensor([16, 197, 1362617],"float16"), 0.9909090911969543, )
paddle.Tensor.__truediv__(Tensor([16, 349526, 768],"float16"), 0.8999999985098839, )
paddle.Tensor.__truediv__(Tensor([16, 349526, 768],"float16"), 0.9090909063816071, )
paddle.Tensor.__truediv__(Tensor([16, 349526, 768],"float16"), 0.9181818142533302, )
paddle.Tensor.__truediv__(Tensor([16, 349526, 768],"float16"), 0.927272729575634, )
paddle.Tensor.__truediv__(Tensor([16, 349526, 768],"float16"), 0.9363636374473572, )
paddle.Tensor.__truediv__(Tensor([16, 349526, 768],"float16"), 0.9454545453190804, )
paddle.Tensor.__truediv__(Tensor([16, 349526, 768],"float16"), 0.9545454531908035, )
paddle.Tensor.__truediv__(Tensor([16, 349526, 768],"float16"), 0.963636364787817, )
paddle.Tensor.__truediv__(Tensor([16, 349526, 768],"float16"), 0.9727272726595402, )
paddle.Tensor.__truediv__(Tensor([16, 349526, 768],"float16"), 0.9818181823939085, )
paddle.Tensor.__truediv__(Tensor([16, 349526, 768],"float16"), 0.9909090911969543, )
paddle.Tensor.__truediv__(Tensor([16, 42392, 3364],"float32"), 0.1, )
paddle.Tensor.__truediv__(Tensor([16, 557057, 16, 16],"float32"), 0.7853981633974483, )
paddle.Tensor.__truediv__(Tensor([16, 5704254, 5, 5],"float32"), 448, )
paddle.Tensor.__truediv__(Tensor([16, 6, 4753545, 5],"float32"), 448, )
paddle.Tensor.__truediv__(Tensor([16, 6, 5, 4753545],"float32"), 448, )
paddle.Tensor.__truediv__(Tensor([164483, 3, 68, 68, 1],"float32"), 68, )
paddle.Tensor.__truediv__(Tensor([16800, 135816],"float32"), 6.283185307179586, )
paddle.Tensor.__truediv__(Tensor([1697695, 1, 16, 84],"float32"), 6, )
paddle.Tensor.__truediv__(Tensor([175515491, 13],"float32"), 4.500000001, )
paddle.Tensor.__truediv__(Tensor([17685, 126, 1024],"float32"), 0.9, )
paddle.Tensor.__truediv__(Tensor([17825793, 128],"float32"), 7, )
paddle.Tensor.__truediv__(Tensor([17825793, 2, 8, 8],"float32"), 5.656854249492381, )
paddle.Tensor.__truediv__(Tensor([1810875, 1, 15, 84],"float32"), 0.01, )
paddle.Tensor.__truediv__(Tensor([1810875, 1, 15, 84],"float32"), 12, )
paddle.Tensor.__truediv__(Tensor([185686, 3, 16, 16, 16],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([185686, 3, 64, 64, 1],"float32"), 64, )
paddle.Tensor.__truediv__(Tensor([187679, 12158],"float32"), 2.0, )
paddle.Tensor.__truediv__(Tensor([190141782, 2, 2, 3],"float32"), Tensor([2, 3],"float32"), )
paddle.Tensor.__truediv__(Tensor([19014179, 120],"float32"), 57344, )
paddle.Tensor.__truediv__(Tensor([1901418, 3, 20, 20, 1],"float32"), 20, )
paddle.Tensor.__truediv__(Tensor([19173962, 16, 7, 2],"float16"), 1.4142135623730951, )
paddle.Tensor.__truediv__(Tensor([194, 36828, 8, 5, 4, 2],"float32"), Tensor([1, 1, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([194, 36828, 8, 5, 4, 2],"float32"), Tensor([194, 1, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([195653, 112, 14, 14],"float16"), 0.875, )
paddle.Tensor.__truediv__(Tensor([195653, 112, 14, 14],"float16"), 0.8875, )
paddle.Tensor.__truediv__(Tensor([2, 1, 1, 2147483649],"float16"), 256.0, )
paddle.Tensor.__truediv__(Tensor([2, 1, 33554433, 64],"float16"), 256.0, )
paddle.Tensor.__truediv__(Tensor([2, 107136, 10649],"float32"), 1.0, )
paddle.Tensor.__truediv__(Tensor([2, 1114113, 32, 32, 1],"float32"), 32, )
paddle.Tensor.__truediv__(Tensor([2, 1140850690],"float32"), 0.5, )
paddle.Tensor.__truediv__(Tensor([2, 1140850690],"float32"), 1, )
paddle.Tensor.__truediv__(Tensor([2, 1140850690],"float32"), 1.2, )
paddle.Tensor.__truediv__(Tensor([2, 1140850690],"float32"), 1.3, )
paddle.Tensor.__truediv__(Tensor([2, 1140850690],"float32"), 10, )
paddle.Tensor.__truediv__(Tensor([2, 1140850690],"float32"), 20, )
paddle.Tensor.__truediv__(Tensor([2, 1140850690],"float32"), 3, )
paddle.Tensor.__truediv__(Tensor([2, 1140850690],"float32"), 5, )
paddle.Tensor.__truediv__(Tensor([2, 1267612, 30, 30, 1],"float32"), 30, )
paddle.Tensor.__truediv__(Tensor([2, 142606337, 8],"float32"), 6.0, )
paddle.Tensor.__truediv__(Tensor([2, 1455167, 28, 28, 1],"float32"), 28, )
paddle.Tensor.__truediv__(Tensor([2, 16, 1, 71303169],"float32"), 16.0, )
paddle.Tensor.__truediv__(Tensor([2, 16, 278529, 256],"float32"), 16.0, )
paddle.Tensor.__truediv__(Tensor([2, 1687649, 26, 26, 1],"float32"), 26, )
paddle.Tensor.__truediv__(Tensor([2, 197516, 76, 76, 1],"float32"), 76, )
paddle.Tensor.__truediv__(Tensor([2, 1980644, 24, 24, 1],"float32"), 24, )
paddle.Tensor.__truediv__(Tensor([2, 2, 570425345],"float32"), 0.5, )
paddle.Tensor.__truediv__(Tensor([2, 2, 570425345],"int64"), 2.0, )
paddle.Tensor.__truediv__(Tensor([2, 21474837, 100],"float16"), 40, )
paddle.Tensor.__truediv__(Tensor([2, 220072, 72, 72, 1],"float32"), 72, )
paddle.Tensor.__truediv__(Tensor([2, 2357130, 22, 22, 1],"float32"), 22, )
paddle.Tensor.__truediv__(Tensor([2, 246724, 68, 68, 1],"float32"), 68, )
paddle.Tensor.__truediv__(Tensor([2, 278529, 16, 16, 16],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([2, 278529, 64, 64, 1],"float32"), 64, )
paddle.Tensor.__truediv__(Tensor([2, 3, 10007463, 38, 1],"float32"), 38, )
paddle.Tensor.__truediv__(Tensor([2, 3, 10563433, 36, 1],"float32"), 36, )
paddle.Tensor.__truediv__(Tensor([2, 3, 11, 11, 3142840],"float32"), 11, )
paddle.Tensor.__truediv__(Tensor([2, 3, 11, 11, 3142840],"float32"), 352, )
paddle.Tensor.__truediv__(Tensor([2, 3, 11, 34571234, 1],"float32"), 11, )
paddle.Tensor.__truediv__(Tensor([2, 3, 11, 34571234, 1],"float32"), 352, )
paddle.Tensor.__truediv__(Tensor([2, 3, 11184811, 34, 1],"float32"), 34, )
paddle.Tensor.__truediv__(Tensor([2, 3, 11883862, 32, 1],"float32"), 32, )
paddle.Tensor.__truediv__(Tensor([2, 3, 12, 12, 2640859],"float32"), 12, )
paddle.Tensor.__truediv__(Tensor([2, 3, 12, 12, 2640859],"float32"), 384, )
paddle.Tensor.__truediv__(Tensor([2, 3, 12, 31690297, 1],"float32"), 12, )
paddle.Tensor.__truediv__(Tensor([2, 3, 12, 31690297, 1],"float32"), 384, )
paddle.Tensor.__truediv__(Tensor([2, 3, 12676119, 30, 1],"float32"), 30, )
paddle.Tensor.__truediv__(Tensor([2, 3, 13, 13, 2250199],"float32"), 13, )
paddle.Tensor.__truediv__(Tensor([2, 3, 13, 13, 2250199],"float32"), 416, )
paddle.Tensor.__truediv__(Tensor([2, 3, 13, 29252582, 1],"float32"), 13, )
paddle.Tensor.__truediv__(Tensor([2, 3, 13, 29252582, 1],"float32"), 416, )
paddle.Tensor.__truediv__(Tensor([2, 3, 13581556, 28, 1],"float32"), 28, )
paddle.Tensor.__truediv__(Tensor([2, 3, 14, 14, 1940223],"float32"), 14, )
paddle.Tensor.__truediv__(Tensor([2, 3, 14, 14, 1940223],"float32"), 448, )
paddle.Tensor.__truediv__(Tensor([2, 3, 14, 27163112, 1],"float32"), 14, )
paddle.Tensor.__truediv__(Tensor([2, 3, 14, 27163112, 1],"float32"), 448, )
paddle.Tensor.__truediv__(Tensor([2, 3, 14626291, 26, 1],"float32"), 26, )
paddle.Tensor.__truediv__(Tensor([2, 3, 1485483, 16, 16],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([2, 3, 15, 15, 1690150],"float32"), 15, )
paddle.Tensor.__truediv__(Tensor([2, 3, 15, 15, 1690150],"float32"), 480, )
paddle.Tensor.__truediv__(Tensor([2, 3, 15, 25352238, 1],"float32"), 15, )
paddle.Tensor.__truediv__(Tensor([2, 3, 15, 25352238, 1],"float32"), 480, )
paddle.Tensor.__truediv__(Tensor([2, 3, 15845149, 24, 1],"float32"), 24, )
paddle.Tensor.__truediv__(Tensor([2, 3, 16, 1485483, 16],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([2, 3, 16, 16, 1485483],"float32"), 16, )
paddle.Tensor.__truediv__(Tensor([2, 3, 16, 16, 1485483],"float32"), 512, )
paddle.Tensor.__truediv__(Tensor([2, 3, 16, 16, 1485483],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([2, 3, 16, 23767723, 1],"float32"), 16, )
paddle.Tensor.__truediv__(Tensor([2, 3, 16, 23767723, 1],"float32"), 512, )
paddle.Tensor.__truediv__(Tensor([2, 3, 16, 23767723],"float32"), 4, )
paddle.Tensor.__truediv__(Tensor([2, 3, 17, 17, 1315861],"float32"), 17, )
paddle.Tensor.__truediv__(Tensor([2, 3, 17, 17, 1315861],"float32"), 544, )
paddle.Tensor.__truediv__(Tensor([2, 3, 17, 22369622, 1],"float32"), 17, )
paddle.Tensor.__truediv__(Tensor([2, 3, 17, 22369622, 1],"float32"), 544, )
paddle.Tensor.__truediv__(Tensor([2, 3, 17285617, 22, 1],"float32"), 22, )
paddle.Tensor.__truediv__(Tensor([2, 3, 18, 18, 1173715],"float32"), 18, )
paddle.Tensor.__truediv__(Tensor([2, 3, 18, 18, 1173715],"float32"), 576, )
paddle.Tensor.__truediv__(Tensor([2, 3, 18, 21126865, 1],"float32"), 18, )
paddle.Tensor.__truediv__(Tensor([2, 3, 18, 21126865, 1],"float32"), 576, )
paddle.Tensor.__truediv__(Tensor([2, 3, 19, 19, 1053418],"float32"), 19, )
paddle.Tensor.__truediv__(Tensor([2, 3, 19, 19, 1053418],"float32"), 608, )
paddle.Tensor.__truediv__(Tensor([2, 3, 19, 20014925, 1],"float32"), 19, )
paddle.Tensor.__truediv__(Tensor([2, 3, 19, 20014925, 1],"float32"), 608, )
paddle.Tensor.__truediv__(Tensor([2, 3, 20014925, 19, 1],"float32"), 19, )
paddle.Tensor.__truediv__(Tensor([2, 3, 20014925, 19, 1],"float32"), 608, )
paddle.Tensor.__truediv__(Tensor([2, 3, 21126865, 18, 1],"float32"), 18, )
paddle.Tensor.__truediv__(Tensor([2, 3, 21126865, 18, 1],"float32"), 576, )
paddle.Tensor.__truediv__(Tensor([2, 3, 22, 17285617, 1],"float32"), 22, )
paddle.Tensor.__truediv__(Tensor([2, 3, 22, 22, 785710],"float32"), 22, )
paddle.Tensor.__truediv__(Tensor([2, 3, 22369622, 17, 1],"float32"), 17, )
paddle.Tensor.__truediv__(Tensor([2, 3, 22369622, 17, 1],"float32"), 544, )
paddle.Tensor.__truediv__(Tensor([2, 3, 23767723, 16, 1],"float32"), 16, )
paddle.Tensor.__truediv__(Tensor([2, 3, 23767723, 16, 1],"float32"), 512, )
paddle.Tensor.__truediv__(Tensor([2, 3, 23767723, 16],"float32"), 4, )
paddle.Tensor.__truediv__(Tensor([2, 3, 24, 15845149, 1],"float32"), 24, )
paddle.Tensor.__truediv__(Tensor([2, 3, 24, 24, 660215],"float32"), 24, )
paddle.Tensor.__truediv__(Tensor([2, 3, 25352238, 15, 1],"float32"), 15, )
paddle.Tensor.__truediv__(Tensor([2, 3, 25352238, 15, 1],"float32"), 480, )
paddle.Tensor.__truediv__(Tensor([2, 3, 26, 14626291, 1],"float32"), 26, )
paddle.Tensor.__truediv__(Tensor([2, 3, 26, 26, 562550],"float32"), 26, )
paddle.Tensor.__truediv__(Tensor([2, 3, 27163112, 14, 1],"float32"), 14, )
paddle.Tensor.__truediv__(Tensor([2, 3, 27163112, 14, 1],"float32"), 448, )
paddle.Tensor.__truediv__(Tensor([2, 3, 28, 13581556, 1],"float32"), 28, )
paddle.Tensor.__truediv__(Tensor([2, 3, 28, 28, 485056],"float32"), 28, )
paddle.Tensor.__truediv__(Tensor([2, 3, 29252582, 13, 1],"float32"), 13, )
paddle.Tensor.__truediv__(Tensor([2, 3, 29252582, 13, 1],"float32"), 416, )
paddle.Tensor.__truediv__(Tensor([2, 3, 30, 12676119, 1],"float32"), 30, )
paddle.Tensor.__truediv__(Tensor([2, 3, 30, 30, 422538],"float32"), 30, )
paddle.Tensor.__truediv__(Tensor([2, 3, 31690297, 12, 1],"float32"), 12, )
paddle.Tensor.__truediv__(Tensor([2, 3, 31690297, 12, 1],"float32"), 384, )
paddle.Tensor.__truediv__(Tensor([2, 3, 32, 11883862, 1],"float32"), 32, )
paddle.Tensor.__truediv__(Tensor([2, 3, 32, 32, 371371],"float32"), 32, )
paddle.Tensor.__truediv__(Tensor([2, 3, 34, 11184811, 1],"float32"), 34, )
paddle.Tensor.__truediv__(Tensor([2, 3, 34, 34, 328966],"float32"), 34, )
paddle.Tensor.__truediv__(Tensor([2, 3, 34571234, 11, 1],"float32"), 11, )
paddle.Tensor.__truediv__(Tensor([2, 3, 34571234, 11, 1],"float32"), 352, )
paddle.Tensor.__truediv__(Tensor([2, 3, 36, 10563433, 1],"float32"), 36, )
paddle.Tensor.__truediv__(Tensor([2, 3, 36, 36, 293429],"float32"), 36, )
paddle.Tensor.__truediv__(Tensor([2, 3, 38, 10007463, 1],"float32"), 38, )
paddle.Tensor.__truediv__(Tensor([2, 3, 38, 38, 263355],"float32"), 38, )
paddle.Tensor.__truediv__(Tensor([2, 3, 44, 44, 196428],"float32"), 44, )
paddle.Tensor.__truediv__(Tensor([2, 3, 44, 8642809, 1],"float32"), 44, )
paddle.Tensor.__truediv__(Tensor([2, 3, 48, 48, 165054],"float32"), 48, )
paddle.Tensor.__truediv__(Tensor([2, 3, 48, 7922575, 1],"float32"), 48, )
paddle.Tensor.__truediv__(Tensor([2, 3, 5003732, 76, 1],"float32"), 76, )
paddle.Tensor.__truediv__(Tensor([2, 3, 52, 52, 140638],"float32"), 52, )
paddle.Tensor.__truediv__(Tensor([2, 3, 52, 7313146, 1],"float32"), 52, )
paddle.Tensor.__truediv__(Tensor([2, 3, 5281717, 72, 1],"float32"), 72, )
paddle.Tensor.__truediv__(Tensor([2, 3, 5592406, 68, 1],"float32"), 68, )
paddle.Tensor.__truediv__(Tensor([2, 3, 56, 56, 121264],"float32"), 56, )
paddle.Tensor.__truediv__(Tensor([2, 3, 56, 6790778, 1],"float32"), 56, )
paddle.Tensor.__truediv__(Tensor([2, 3, 5941931, 64, 1],"float32"), 64, )
paddle.Tensor.__truediv__(Tensor([2, 3, 60, 60, 105635],"float32"), 60, )
paddle.Tensor.__truediv__(Tensor([2, 3, 60, 6338060, 1],"float32"), 60, )
paddle.Tensor.__truediv__(Tensor([2, 3, 6338060, 60, 1],"float32"), 60, )
paddle.Tensor.__truediv__(Tensor([2, 3, 64, 5941931, 1],"float32"), 64, )
paddle.Tensor.__truediv__(Tensor([2, 3, 64, 64, 92843],"float32"), 64, )
paddle.Tensor.__truediv__(Tensor([2, 3, 6790778, 56, 1],"float32"), 56, )
paddle.Tensor.__truediv__(Tensor([2, 3, 68, 5592406, 1],"float32"), 68, )
paddle.Tensor.__truediv__(Tensor([2, 3, 68, 68, 82242],"float32"), 68, )
paddle.Tensor.__truediv__(Tensor([2, 3, 715827883],"bfloat16"), 1, )
paddle.Tensor.__truediv__(Tensor([2, 3, 715827883],"float16"), 100, )
paddle.Tensor.__truediv__(Tensor([2, 3, 715827883],"float16"), 17, )
paddle.Tensor.__truediv__(Tensor([2, 3, 715827883],"float16"), 40, )
paddle.Tensor.__truediv__(Tensor([2, 3, 72, 5281717, 1],"float32"), 72, )
paddle.Tensor.__truediv__(Tensor([2, 3, 72, 72, 73358],"float32"), 72, )
paddle.Tensor.__truediv__(Tensor([2, 3, 7313146, 52, 1],"float32"), 52, )
paddle.Tensor.__truediv__(Tensor([2, 3, 76, 5003732, 1],"float32"), 76, )
paddle.Tensor.__truediv__(Tensor([2, 3, 76, 76, 65839],"float32"), 76, )
paddle.Tensor.__truediv__(Tensor([2, 3, 7922575, 48, 1],"float32"), 48, )
paddle.Tensor.__truediv__(Tensor([2, 3, 8642809, 44, 1],"float32"), 44, )
paddle.Tensor.__truediv__(Tensor([2, 3160252, 19, 19, 1],"float32"), 19, )
paddle.Tensor.__truediv__(Tensor([2, 3160252, 19, 19, 1],"float32"), 608, )
paddle.Tensor.__truediv__(Tensor([2, 316903, 60, 60, 1],"float32"), 60, )
paddle.Tensor.__truediv__(Tensor([2, 33554433, 1, 64],"float16"), 256.0, )
paddle.Tensor.__truediv__(Tensor([2, 3521145, 18, 18, 1],"float32"), 18, )
paddle.Tensor.__truediv__(Tensor([2, 3521145, 18, 18, 1],"float32"), 576, )
paddle.Tensor.__truediv__(Tensor([2, 363792, 56, 56, 1],"float32"), 56, )
paddle.Tensor.__truediv__(Tensor([2, 3947581, 17, 17, 1],"float32"), 17, )
paddle.Tensor.__truediv__(Tensor([2, 3947581, 17, 17, 1],"float32"), 544, )
paddle.Tensor.__truediv__(Tensor([2, 421913, 52, 52, 1],"float32"), 52, )
paddle.Tensor.__truediv__(Tensor([2, 4456449, 1, 256],"float32"), 16.0, )
paddle.Tensor.__truediv__(Tensor([2, 4456449, 16, 16, 1],"float32"), 16, )
paddle.Tensor.__truediv__(Tensor([2, 4456449, 16, 16, 1],"float32"), 512, )
paddle.Tensor.__truediv__(Tensor([2, 4456449, 16, 16],"float32"), 4, )
paddle.Tensor.__truediv__(Tensor([2, 495161, 48, 48, 1],"float32"), 48, )
paddle.Tensor.__truediv__(Tensor([2, 5070448, 15, 15, 1],"float32"), 15, )
paddle.Tensor.__truediv__(Tensor([2, 5070448, 15, 15, 1],"float32"), 480, )
paddle.Tensor.__truediv__(Tensor([2, 536870913, 4],"bfloat16"), 1, )
paddle.Tensor.__truediv__(Tensor([2, 536870913, 4],"float16"), 17, )
paddle.Tensor.__truediv__(Tensor([2, 53687092, 40],"float16"), 100, )
paddle.Tensor.__truediv__(Tensor([2, 570425345, 2],"float32"), 0.5, )
paddle.Tensor.__truediv__(Tensor([2, 570425345, 2],"float32"), 1.0, )
paddle.Tensor.__truediv__(Tensor([2, 570425345, 2],"int64"), 2.0, )
paddle.Tensor.__truediv__(Tensor([2, 5820667, 14, 14, 1],"float32"), 14, )
paddle.Tensor.__truediv__(Tensor([2, 5820667, 14, 14, 1],"float32"), 448, )
paddle.Tensor.__truediv__(Tensor([2, 589283, 44, 44, 1],"float32"), 44, )
paddle.Tensor.__truediv__(Tensor([2, 6750596, 13, 13, 1],"float32"), 13, )
paddle.Tensor.__truediv__(Tensor([2, 6750596, 13, 13, 1],"float32"), 416, )
paddle.Tensor.__truediv__(Tensor([2, 790063, 38, 38, 1],"float32"), 38, )
paddle.Tensor.__truediv__(Tensor([2, 7922575, 12, 12, 1],"float32"), 12, )
paddle.Tensor.__truediv__(Tensor([2, 7922575, 12, 12, 1],"float32"), 384, )
paddle.Tensor.__truediv__(Tensor([2, 8, 142606337],"float32"), 6.0, )
paddle.Tensor.__truediv__(Tensor([2, 880287, 36, 36, 1],"float32"), 36, )
paddle.Tensor.__truediv__(Tensor([2, 9428519, 11, 11, 1],"float32"), 11, )
paddle.Tensor.__truediv__(Tensor([2, 9428519, 11, 11, 1],"float32"), 352, )
paddle.Tensor.__truediv__(Tensor([2, 986896, 34, 34, 1],"float32"), 34, )
paddle.Tensor.__truediv__(Tensor([20, 114085069],"float32"), 6628, )
paddle.Tensor.__truediv__(Tensor([2048, 1114113],"float32"), 10.0, )
paddle.Tensor.__truediv__(Tensor([2048, 1114113],"float32"), 15.0, )
paddle.Tensor.__truediv__(Tensor([2048, 1114113],"float32"), 20.0, )
paddle.Tensor.__truediv__(Tensor([2048, 1114113],"float32"), 30.0, )
paddle.Tensor.__truediv__(Tensor([2048, 1114113],"float32"), 5.0, )
paddle.Tensor.__truediv__(Tensor([2065, 157920, 7],"float32"), 0.1111111111111111, )
paddle.Tensor.__truediv__(Tensor([2106835, 3, 19, 19, 1],"float32"), 19, )
paddle.Tensor.__truediv__(Tensor([2106835, 3, 19, 19, 1],"float32"), 608, )
paddle.Tensor.__truediv__(Tensor([210957, 2704, 4],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([211269, 3, 60, 60, 1],"float32"), 60, )
paddle.Tensor.__truediv__(Tensor([221848, 1, 10285],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.Tensor.__truediv__(Tensor([221848, 1, 10285],"float32"), Tensor([221848, 1, 10285],"float32"), )
paddle.Tensor.__truediv__(Tensor([2228225, 1, 32, 32],"float32"), 57344, )
paddle.Tensor.__truediv__(Tensor([2228225, 1024, 1, 1],"float32"), 0.9996676942353445, )
paddle.Tensor.__truediv__(Tensor([2228225, 1024],"float32"), 0.1, )
paddle.Tensor.__truediv__(Tensor([2228225, 1024],"float32"), 0.9992704001300187, )
paddle.Tensor.__truediv__(Tensor([2228225, 1024],"float32"), 0.9996676942353445, )
paddle.Tensor.__truediv__(Tensor([2228225, 1024],"float32"), 0.9998702707939089, )
paddle.Tensor.__truediv__(Tensor([2228225, 32, 32],"float32"), 31, )
paddle.Tensor.__truediv__(Tensor([2228225, 8, 8, 16],"float32"), 4.0, )
paddle.Tensor.__truediv__(Tensor([2274877, 1888],"float16"), Tensor([1888],"float16"), )
paddle.Tensor.__truediv__(Tensor([2279422, 1001],"float32"), Tensor([1, 1001],"float32"), )
paddle.Tensor.__truediv__(Tensor([2279422, 1001],"float32"), Tensor([2279422, 1001],"float32"), )
paddle.Tensor.__truediv__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9910367284058681, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9975949255486735, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9992704001300187, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9997265714068944, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1, 1, 1],"float32"), 0.9998633003437416, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1, 1],"float32"), 6.238324625039508, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 0.020000000000000004, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 0.25066282746310004, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 0.4, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 1.0, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 10.0, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 12544, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 15.0, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 1e-09, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 20.0, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 24, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 3.4657359027997265, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 30.0, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 4.1588830833596715, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 5.0, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 50000, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 6, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"float32"), 6.283185307179586, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"int64"), 31, )
paddle.Tensor.__truediv__(Tensor([2281701379, 1],"int64"), 99, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 0.001, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 0.984375, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 0.9910367284058681, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 0.9975949255486735, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 0.9991326382620116, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 0.9992704001300187, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 0.9996676942353445, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 0.9997265714068944, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 0.9998318674381506, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 0.9998554356700223, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 0.9998633003437416, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 0.9998702707939089, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 1, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 10, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 100, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 100352, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 101, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 102, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 103, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 104, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 105, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 106, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 107, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 108, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 109, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 11, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 110, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 111, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 112, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 113, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 114, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 115, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 116, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 117, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 118, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 119, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 12, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 120, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 121, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 122, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 123, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 124, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 125, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 126, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 127, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 128, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 128.0, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 129, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 13, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 130, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 131, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 132, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 133, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 134, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 135, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 136, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 137, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 138, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 139, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 14, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 140, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 141, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 142, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 143, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 144, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 145, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 146, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 147, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 148, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 149, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 15, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 150, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 151, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 152, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 153, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 154, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 155, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 156, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 157, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 158, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 159, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 16, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 160, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 161, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 162, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 163, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 164, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 165, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 166, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 167, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 168, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 169, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 17, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 170, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 171, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 172, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 173, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 174, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 175, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 176, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 177, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 178, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 179, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 18, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 180, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 181, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 182, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 183, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 184, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 185, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 186, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 187, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 188, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 189, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 19, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 190, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 191, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 192, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 193, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 194, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 195, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 196, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 197, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 198, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 199, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 2, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 2.0, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 20, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 200, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 21, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 22, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 23, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 24, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 25, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 255, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 256, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 26, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 27, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 28, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 29, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 3, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 3.141592653589793, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 30, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 300, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 306, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 31, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 32, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 33, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 34, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 35, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 36, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 37, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 38, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 39, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 4.0, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 41, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 42, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 43, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 44, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 45, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 46, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 47, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 48, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 49, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 5, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 50, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 51, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 512, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 52, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 53, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 54, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 55, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 56, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 57, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 58, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 59, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 6, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 60, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 61, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 62, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 63, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 64, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 65, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 66, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 67, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 68, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 69, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 7, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 70, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 71, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 72, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 73, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 74, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 75, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 76, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 77, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 78, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 79, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 80, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 81, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 82, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 83, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 84, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 85, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 86, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 87, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 88, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 89, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 9, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 90, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 900, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 91, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 92, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 93, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 94, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 95, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 96, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 97, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 98, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 99, )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.__truediv__(Tensor([228170138, 10],"float32"), 1.2, )
paddle.Tensor.__truediv__(Tensor([228170138, 10],"float32"), 10, )
paddle.Tensor.__truediv__(Tensor([2331, 8, 64, 3600],"float16"), 8.0, )
paddle.Tensor.__truediv__(Tensor([2347430, 3, 18, 18, 1],"float32"), 18, )
paddle.Tensor.__truediv__(Tensor([2347430, 3, 18, 18, 1],"float32"), 576, )
paddle.Tensor.__truediv__(Tensor([242528, 3, 56, 56, 1],"float32"), 56, )
paddle.Tensor.__truediv__(Tensor([253522376, 1, 3, 3],"float32"), 0.984375, )
paddle.Tensor.__truediv__(Tensor([253522376, 9],"float32"), 9, )
paddle.Tensor.__truediv__(Tensor([2546542, 7, 128],"float32"), 11.313708498984761, )
paddle.Tensor.__truediv__(Tensor([2631721, 3, 17, 17, 1],"float32"), 17, )
paddle.Tensor.__truediv__(Tensor([2631721, 3, 17, 17, 1],"float32"), 544, )
paddle.Tensor.__truediv__(Tensor([27163112, 84],"float32"), 448, )
paddle.Tensor.__truediv__(Tensor([273914, 80, 14, 14],"float16"), 0.9125, )
paddle.Tensor.__truediv__(Tensor([273914, 80, 14, 14],"float16"), 0.925, )
paddle.Tensor.__truediv__(Tensor([28, 81489335],"float32"), 255.0, )
paddle.Tensor.__truediv__(Tensor([28, 81489335],"float32"), 6.0, )
paddle.Tensor.__truediv__(Tensor([281275, 3, 52, 52, 1],"float32"), 52, )
paddle.Tensor.__truediv__(Tensor([28388, 197, 768],"float16"), 0.8999999985098839, )
paddle.Tensor.__truediv__(Tensor([28388, 197, 768],"float16"), 0.9090909063816071, )
paddle.Tensor.__truediv__(Tensor([28388, 197, 768],"float16"), 0.9181818142533302, )
paddle.Tensor.__truediv__(Tensor([28388, 197, 768],"float16"), 0.927272729575634, )
paddle.Tensor.__truediv__(Tensor([28388, 197, 768],"float16"), 0.9363636374473572, )
paddle.Tensor.__truediv__(Tensor([28388, 197, 768],"float16"), 0.9454545453190804, )
paddle.Tensor.__truediv__(Tensor([28388, 197, 768],"float16"), 0.9545454531908035, )
paddle.Tensor.__truediv__(Tensor([28388, 197, 768],"float16"), 0.963636364787817, )
paddle.Tensor.__truediv__(Tensor([28388, 197, 768],"float16"), 0.9727272726595402, )
paddle.Tensor.__truediv__(Tensor([28388, 197, 768],"float16"), 0.9818181823939085, )
paddle.Tensor.__truediv__(Tensor([28388, 197, 768],"float16"), 0.9909090911969543, )
paddle.Tensor.__truediv__(Tensor([285213, 8000],"float32"), 0.333, )
paddle.Tensor.__truediv__(Tensor([289, 280, 376, 25, 3],"float32"), Tensor([3],"float32"), )
paddle.Tensor.__truediv__(Tensor([29, 78679358],"float32"), 24.500000001, )
paddle.Tensor.__truediv__(Tensor([2910334, 28, 28],"float32"), 255.0, )
paddle.Tensor.__truediv__(Tensor([29128, 36, 64, 64],"float16"), 2.0, )
paddle.Tensor.__truediv__(Tensor([2970966, 3, 16, 16, 1],"float32"), 16, )
paddle.Tensor.__truediv__(Tensor([2970966, 3, 16, 16, 1],"float32"), 512, )
paddle.Tensor.__truediv__(Tensor([2970966, 3, 16, 16],"float32"), 4, )
paddle.Tensor.__truediv__(Tensor([2970966, 768],"float32"), 1.4142135623730951, )
paddle.Tensor.__truediv__(Tensor([2970966, 768],"float32"), 2.449489742783178, )
paddle.Tensor.__truediv__(Tensor([2970966, 768],"float32"), 2.8284271247461903, )
paddle.Tensor.__truediv__(Tensor([2970966, 768],"float32"), 3.1622776601683795, )
paddle.Tensor.__truediv__(Tensor([2970966, 768],"float32"), 3.4641016151377544, )
paddle.Tensor.__truediv__(Tensor([2970966, 768],"float32"), 3.7416573867739413, )
paddle.Tensor.__truediv__(Tensor([2970966, 768],"float32"), 4.0, )
paddle.Tensor.__truediv__(Tensor([2970966, 768],"float32"), 4.242640687119285, )
paddle.Tensor.__truediv__(Tensor([2970966, 768],"float32"), 4.47213595499958, )
paddle.Tensor.__truediv__(Tensor([2970966, 768],"float32"), 4.69041575982343, )
paddle.Tensor.__truediv__(Tensor([2970966, 768],"float32"), 4.898979485566356, )
paddle.Tensor.__truediv__(Tensor([3, 760567127],"float32"), 9, )
paddle.Tensor.__truediv__(Tensor([300, 7605672],"float32"), 12544, )
paddle.Tensor.__truediv__(Tensor([304, 7505597],"float32"), 12.0, )
paddle.Tensor.__truediv__(Tensor([3072, 742742],"float32"), 1.4142135623730951, )
paddle.Tensor.__truediv__(Tensor([3072, 742742],"float32"), 2.449489742783178, )
paddle.Tensor.__truediv__(Tensor([3072, 742742],"float32"), 2.8284271247461903, )
paddle.Tensor.__truediv__(Tensor([3072, 742742],"float32"), 3.1622776601683795, )
paddle.Tensor.__truediv__(Tensor([3072, 742742],"float32"), 3.4641016151377544, )
paddle.Tensor.__truediv__(Tensor([3072, 742742],"float32"), 3.7416573867739413, )
paddle.Tensor.__truediv__(Tensor([3072, 742742],"float32"), 4.0, )
paddle.Tensor.__truediv__(Tensor([3072, 742742],"float32"), 4.242640687119285, )
paddle.Tensor.__truediv__(Tensor([3072, 742742],"float32"), 4.47213595499958, )
paddle.Tensor.__truediv__(Tensor([3072, 742742],"float32"), 4.69041575982343, )
paddle.Tensor.__truediv__(Tensor([3072, 742742],"float32"), 4.898979485566356, )
paddle.Tensor.__truediv__(Tensor([32, 1, 240, 297097],"float32"), 4.49996, )
paddle.Tensor.__truediv__(Tensor([32, 1, 297097, 240],"float32"), 4.49996, )
paddle.Tensor.__truediv__(Tensor([32, 1238, 240, 240],"float32"), 4.49996, )
paddle.Tensor.__truediv__(Tensor([32, 71303169],"float32"), 3.0, )
paddle.Tensor.__truediv__(Tensor([3200, 713032],"int64"), 31, )
paddle.Tensor.__truediv__(Tensor([3200, 713032],"int64"), 99, )
paddle.Tensor.__truediv__(Tensor([325957340, 7],"float32"), 2.772588722239781, )
paddle.Tensor.__truediv__(Tensor([32769, 8, 1024, 16],"float16"), 128.0, )
paddle.Tensor.__truediv__(Tensor([330108, 3, 48, 48, 1],"float32"), 48, )
paddle.Tensor.__truediv__(Tensor([3375298, 169, 4],"float32"), 32, )
paddle.Tensor.__truediv__(Tensor([3380299, 3, 15, 15, 1],"float32"), 15, )
paddle.Tensor.__truediv__(Tensor([3380299, 3, 15, 15, 1],"float32"), 480, )
paddle.Tensor.__truediv__(Tensor([3395389, 21, 32],"float32"), 2.8284271247461903, )
paddle.Tensor.__truediv__(Tensor([344200, 6629],"float32"), 6628, )
paddle.Tensor.__truediv__(Tensor([34817, 16, 32, 128],"float32"), 3, )
paddle.Tensor.__truediv__(Tensor([35651585, 8, 8],"float32"), 6.0, )
paddle.Tensor.__truediv__(Tensor([35651585, 8, 8],"float32"), 7, )
paddle.Tensor.__truediv__(Tensor([357913942, 3, 4],"bfloat16"), 1, )
paddle.Tensor.__truediv__(Tensor([357913942, 3, 4],"float16"), 17, )
paddle.Tensor.__truediv__(Tensor([35791395, 3, 40],"float16"), 100, )
paddle.Tensor.__truediv__(Tensor([36, 63380594],"float32"), 24, )
paddle.Tensor.__truediv__(Tensor([36, 63380594],"float32"), 6, )
paddle.Tensor.__truediv__(Tensor([37312, 8, 39, 14, 14],"float32"), 7644, )
paddle.Tensor.__truediv__(Tensor([37347542, 1, 1, 115],"float16"), 32, )
paddle.Tensor.__truediv__(Tensor([380283564, 3, 2],"float32"), Tensor([2],"float32"), )
paddle.Tensor.__truediv__(Tensor([3880445, 3, 14, 14, 1],"float32"), 14, )
paddle.Tensor.__truediv__(Tensor([3880445, 3, 14, 14, 1],"float32"), 448, )
paddle.Tensor.__truediv__(Tensor([392855, 3, 44, 44, 1],"float32"), 44, )
paddle.Tensor.__truediv__(Tensor([395032, 4, 38, 38],"float32"), 2, )
paddle.Tensor.__truediv__(Tensor([39613, 1, 240, 240],"float32"), 4.49996, )
paddle.Tensor.__truediv__(Tensor([4, 1, 1, 1073741825],"float16"), 32, )
paddle.Tensor.__truediv__(Tensor([4, 1, 9336886, 115],"float16"), 32, )
paddle.Tensor.__truediv__(Tensor([4, 157920, 3613],"float32"), 0.1111111111111111, )
paddle.Tensor.__truediv__(Tensor([4, 1834166, 311],"float32"), 0.01382716049382716, )
paddle.Tensor.__truediv__(Tensor([4, 20228, 376, 25, 3],"float32"), Tensor([3],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 24, 40, 594194],"float32"), 6.0, )
paddle.Tensor.__truediv__(Tensor([4, 24, 594194, 40],"float32"), 6.0, )
paddle.Tensor.__truediv__(Tensor([4, 262145, 64, 64],"float16"), 2.0, )
paddle.Tensor.__truediv__(Tensor([4, 280, 27164, 25, 3],"float32"), Tensor([3],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 280, 376, 1807, 3],"float32"), Tensor([3],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 280, 376, 5419],"float32"), 0.01382716049382716, )
paddle.Tensor.__truediv__(Tensor([4, 280, 81490, 25],"float32"), 0.01382716049382716, )
paddle.Tensor.__truediv__(Tensor([4, 356516, 40, 40],"float32"), 6.0, )
paddle.Tensor.__truediv__(Tensor([4, 36, 466034, 64],"float16"), 2.0, )
paddle.Tensor.__truediv__(Tensor([4, 36, 64, 466034],"float16"), 2.0, )
paddle.Tensor.__truediv__(Tensor([4, 570425345],"float32"), 15, )
paddle.Tensor.__truediv__(Tensor([4, 570425345],"float32"), 3.141592653589793, )
paddle.Tensor.__truediv__(Tensor([4, 60684, 376, 25],"float32"), 0.01382716049382716, )
paddle.Tensor.__truediv__(Tensor([4, 64, 8912897],"float32"), 63, )
paddle.Tensor.__truediv__(Tensor([4, 81489335, 7],"float32"), 0.1111111111111111, )
paddle.Tensor.__truediv__(Tensor([4, 8912897, 64],"float32"), 63, )
paddle.Tensor.__truediv__(Tensor([4, 9336886, 1, 115],"float16"), 32, )
paddle.Tensor.__truediv__(Tensor([4, 94, 6068355],"float32"), 0.01382716049382716, )
paddle.Tensor.__truediv__(Tensor([4294967297],"float16"), 4, )
paddle.Tensor.__truediv__(Tensor([4294967297],"float16"), 40, )
paddle.Tensor.__truediv__(Tensor([4294967297],"float16"), 514.0, )
paddle.Tensor.__truediv__(Tensor([42949673, 100],"float16"), 4, )
paddle.Tensor.__truediv__(Tensor([42949673, 100],"float16"), 40, )
paddle.Tensor.__truediv__(Tensor([43346, 188, 140, 1, 2],"float32"), 2, )
paddle.Tensor.__truediv__(Tensor([4456449, 128, 2, 2],"float32"), 0.9991326382620116, )
paddle.Tensor.__truediv__(Tensor([4456449, 2, 16, 16],"float32"), 11.313708498984761, )
paddle.Tensor.__truediv__(Tensor([4456449, 512],"float32"), 0.01, )
paddle.Tensor.__truediv__(Tensor([4500398, 3, 13, 13, 1],"float32"), 13, )
paddle.Tensor.__truediv__(Tensor([4500398, 3, 13, 13, 1],"float32"), 416, )
paddle.Tensor.__truediv__(Tensor([456340276, 5],"float32"), 0.500000001, )
paddle.Tensor.__truediv__(Tensor([456523, 192, 7, 7],"float16"), 0.825, )
paddle.Tensor.__truediv__(Tensor([456523, 192, 7, 7],"float16"), 0.8375, )
paddle.Tensor.__truediv__(Tensor([456523, 192, 7, 7],"float16"), 0.85, )
paddle.Tensor.__truediv__(Tensor([475355, 3, 40, 40, 1],"float32"), 40, )
paddle.Tensor.__truediv__(Tensor([4917460, 8, 1, 58],"float32"), 1, )
paddle.Tensor.__truediv__(Tensor([5, 456340276],"float32"), 0.500000001, )
paddle.Tensor.__truediv__(Tensor([50, 45634028],"float32"), 0.020000000000000004, )
paddle.Tensor.__truediv__(Tensor([50, 45634028],"float32"), 0.25066282746310004, )
paddle.Tensor.__truediv__(Tensor([50, 5970, 39, 14, 14],"float32"), 7644, )
paddle.Tensor.__truediv__(Tensor([50, 8, 29104, 14, 14],"float32"), 7644, )
paddle.Tensor.__truediv__(Tensor([50, 8, 39, 10448, 14],"float32"), 7644, )
paddle.Tensor.__truediv__(Tensor([50, 8, 39, 14, 10448],"float32"), 7644, )
paddle.Tensor.__truediv__(Tensor([512, 4456449],"float32"), 0.01, )
paddle.Tensor.__truediv__(Tensor([526709, 3, 38, 38, 1],"float32"), 38, )
paddle.Tensor.__truediv__(Tensor([5281717, 3, 12, 12, 1],"float32"), 12, )
paddle.Tensor.__truediv__(Tensor([5281717, 3, 12, 12, 1],"float32"), 384, )
paddle.Tensor.__truediv__(Tensor([55462, 10285, 4],"float32"), Tensor([10285, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([557057, 1024, 4],"float32"), 16, )
paddle.Tensor.__truediv__(Tensor([557057, 16, 1, 256],"float32"), 16.0, )
paddle.Tensor.__truediv__(Tensor([557057, 64, 64],"float32"), 63, )
paddle.Tensor.__truediv__(Tensor([56, 1273271, 32],"float32"), 31, )
paddle.Tensor.__truediv__(Tensor([56, 16, 2546542],"float32"), 15, )
paddle.Tensor.__truediv__(Tensor([56, 2546542, 16],"float32"), 15, )
paddle.Tensor.__truediv__(Tensor([56, 32, 1273271],"float32"), 31, )
paddle.Tensor.__truediv__(Tensor([56, 5093084, 8],"float32"), 7, )
paddle.Tensor.__truediv__(Tensor([56, 8, 5093084],"float32"), 7, )
paddle.Tensor.__truediv__(Tensor([570425345, 2, 2],"float32"), 0.5, )
paddle.Tensor.__truediv__(Tensor([570425345, 2, 2],"int64"), 2.0, )
paddle.Tensor.__truediv__(Tensor([5704254, 100, 4],"float32"), 64, )
paddle.Tensor.__truediv__(Tensor([57066, 24, 56, 56],"float16"), 0.975, )
paddle.Tensor.__truediv__(Tensor([586858, 3, 36, 36, 1],"float32"), 36, )
paddle.Tensor.__truediv__(Tensor([59420, 24, 40, 40],"float32"), 6.0, )
paddle.Tensor.__truediv__(Tensor([6285679, 3, 11, 11, 1],"float32"), 11, )
paddle.Tensor.__truediv__(Tensor([6285679, 3, 11, 11, 1],"float32"), 352, )
paddle.Tensor.__truediv__(Tensor([64, 16, 17409, 128],"float32"), 3, )
paddle.Tensor.__truediv__(Tensor([64, 16, 32, 69633],"float32"), 3, )
paddle.Tensor.__truediv__(Tensor([64, 8705, 32, 128],"float32"), 3, )
paddle.Tensor.__truediv__(Tensor([657931, 3, 34, 34, 1],"float32"), 34, )
paddle.Tensor.__truediv__(Tensor([67108865, 1, 1, 64],"float16"), 256.0, )
paddle.Tensor.__truediv__(Tensor([67828, 10, 3364],"float32"), 0.1, )
paddle.Tensor.__truediv__(Tensor([7, 126, 2586964],"float32"), 0.9, )
paddle.Tensor.__truediv__(Tensor([7, 318318, 1024],"float32"), 0.9, )
paddle.Tensor.__truediv__(Tensor([7, 325957340],"float32"), 2.772588722239781, )
paddle.Tensor.__truediv__(Tensor([71303169, 32],"float32"), 3.0, )
paddle.Tensor.__truediv__(Tensor([71303169, 4, 1, 8],"float32"), 2.8284271247461903, )
paddle.Tensor.__truediv__(Tensor([727584, 56, 56],"float32"), 2.772588722239781, )
paddle.Tensor.__truediv__(Tensor([742742, 3, 32, 32, 1],"float32"), 32, )
paddle.Tensor.__truediv__(Tensor([760567127, 3],"float32"), 1, )
paddle.Tensor.__truediv__(Tensor([760567127, 3],"float32"), 2.0, )
paddle.Tensor.__truediv__(Tensor([760567127, 3],"float32"), 3, )
paddle.Tensor.__truediv__(Tensor([760567127, 3],"float32"), 5, )
paddle.Tensor.__truediv__(Tensor([7605672, 10, 15, 2],"float32"), Tensor([7605672, 1, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([7605672, 3, 10, 10, 1],"float32"), 10, )
paddle.Tensor.__truediv__(Tensor([7605672, 3, 10, 10, 1],"float32"), 320, )
paddle.Tensor.__truediv__(Tensor([7605672, 3, 10, 10, 1],"float32"), Tensor([7605672, 3, 10, 10, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([78050, 94, 311],"float32"), 0.01382716049382716, )
paddle.Tensor.__truediv__(Tensor([78679358, 29],"float32"), 24.500000001, )
paddle.Tensor.__truediv__(Tensor([8, 1, 128, 2228225],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([8, 1, 2228225, 128],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([8, 17409, 128, 128],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([810264, 11, 8, 4, 4, 2],"float32"), 4, )
paddle.Tensor.__truediv__(Tensor([81489335, 28],"float32"), 255.0, )
paddle.Tensor.__truediv__(Tensor([81489335, 28],"float32"), 6.0, )
paddle.Tensor.__truediv__(Tensor([845075, 3, 30, 30, 1],"float32"), 30, )
paddle.Tensor.__truediv__(Tensor([867, 280, 376, 25],"float32"), 0.01382716049382716, )
paddle.Tensor.__truediv__(Tensor([8912897, 1, 16, 16],"float32"), 0.7853981633974483, )
paddle.Tensor.__truediv__(Tensor([8912897, 16, 16],"float32"), 15, )
paddle.Tensor.__truediv__(Tensor([8912897, 4, 8, 8],"float32"), 1.6817928305074292, )
paddle.Tensor.__truediv__(Tensor([93401, 24430],"float32"), 0.4, )
paddle.Tensor.__truediv__(Tensor([950709, 6, 20, 20],"float32"), 2.449489742783178, )
paddle.Tensor.__truediv__(Tensor([970112, 3, 28, 28, 1],"float32"), 28, )
paddle.Tensor.__xor__(Tensor([152113426, 3, 5],"int64"), Tensor([152113426, 3, 5],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 228170138, 5],"int64"), Tensor([2, 228170138, 5],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 380283564],"int64"), Tensor([2, 3, 380283564],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.Tensor.__xor__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.abs(Tensor([1, 1, 2281701379],"float32"), )
paddle.Tensor.abs(Tensor([1, 11883862, 192],"float32"), )
paddle.Tensor.abs(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.abs(Tensor([1, 257, 8878216],"float32"), )
paddle.Tensor.abs(Tensor([1, 4294967297],"float16"), )
paddle.Tensor.abs(Tensor([1, 45634028, 25, 2],"float32"), )
paddle.Tensor.abs(Tensor([1, 65536, 17409, 2],"float32"), )
paddle.Tensor.abs(Tensor([1, 65536, 25, 1393],"float32"), )
paddle.Tensor.abs(Tensor([10, 228170138],"float32"), )
paddle.Tensor.abs(Tensor([100, 22817014],"float32"), )
paddle.Tensor.abs(Tensor([1000, 2281702],"float32"), )
paddle.Tensor.abs(Tensor([10000, 228171],"float32"), )
paddle.Tensor.abs(Tensor([10002, 228125],"float32"), )
paddle.Tensor.abs(Tensor([10003, 228102],"float32"), )
paddle.Tensor.abs(Tensor([10004, 228079],"float32"), )
paddle.Tensor.abs(Tensor([10008, 227988],"float32"), )
paddle.Tensor.abs(Tensor([1001, 2279422],"float32"), )
paddle.Tensor.abs(Tensor([10010, 227943],"float32"), )
paddle.Tensor.abs(Tensor([10011, 227920],"float32"), )
paddle.Tensor.abs(Tensor([10016, 227806],"float32"), )
paddle.Tensor.abs(Tensor([1002, 2277148],"float32"), )
paddle.Tensor.abs(Tensor([10020, 227715],"float32"), )
paddle.Tensor.abs(Tensor([10023, 227647],"float32"), )
paddle.Tensor.abs(Tensor([10024, 227624],"float32"), )
paddle.Tensor.abs(Tensor([10029, 227511],"float32"), )
paddle.Tensor.abs(Tensor([1003, 2274877],"float32"), )
paddle.Tensor.abs(Tensor([10032, 227443],"float32"), )
paddle.Tensor.abs(Tensor([10035, 227375],"float32"), )
paddle.Tensor.abs(Tensor([100352, 22737],"float32"), )
paddle.Tensor.abs(Tensor([10036, 227352],"float32"), )
paddle.Tensor.abs(Tensor([1004, 2272611],"float32"), )
paddle.Tensor.abs(Tensor([10040, 227262],"float32"), )
paddle.Tensor.abs(Tensor([10044, 227171],"float32"), )
paddle.Tensor.abs(Tensor([10047, 227103],"float32"), )
paddle.Tensor.abs(Tensor([1005, 2270350],"float32"), )
paddle.Tensor.abs(Tensor([10050, 227035],"float32"), )
paddle.Tensor.abs(Tensor([10051, 227013],"float32"), )
paddle.Tensor.abs(Tensor([10053, 226968],"float32"), )
paddle.Tensor.abs(Tensor([10054, 226945],"float32"), )
paddle.Tensor.abs(Tensor([100548, 22693],"float32"), )
paddle.Tensor.abs(Tensor([10056, 226900],"float32"), )
paddle.Tensor.abs(Tensor([1006, 2268093],"float32"), )
paddle.Tensor.abs(Tensor([10060, 226810],"float32"), )
paddle.Tensor.abs(Tensor([10062, 226765],"float32"), )
paddle.Tensor.abs(Tensor([10064, 226720],"float32"), )
paddle.Tensor.abs(Tensor([10066, 226675],"float32"), )
paddle.Tensor.abs(Tensor([1007, 2265841],"float32"), )
paddle.Tensor.abs(Tensor([10070, 226585],"float32"), )
paddle.Tensor.abs(Tensor([10071, 226562],"float32"), )
paddle.Tensor.abs(Tensor([10072, 226540],"float32"), )
paddle.Tensor.abs(Tensor([10074, 226495],"float32"), )
paddle.Tensor.abs(Tensor([1073741825, 4],"float16"), )
paddle.Tensor.abs(Tensor([114085069, 5, 4],"float32"), )
paddle.Tensor.abs(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.abs(Tensor([11883862, 1, 192],"float32"), )
paddle.Tensor.abs(Tensor([119304648, 3, 12],"float16"), )
paddle.Tensor.abs(Tensor([1200, 4, 475355],"float32"), )
paddle.Tensor.abs(Tensor([1200, 475355, 4],"float32"), )
paddle.Tensor.abs(Tensor([13, 10969719, 16],"float32"), )
paddle.Tensor.abs(Tensor([13, 7, 25073642],"float32"), )
paddle.Tensor.abs(Tensor([142606337, 4, 4],"float32"), )
paddle.Tensor.abs(Tensor([16, 10, 25, 570426],"float32"), )
paddle.Tensor.abs(Tensor([16, 10, 7130317, 2],"float32"), )
paddle.Tensor.abs(Tensor([16, 2852127, 25, 2],"float32"), )
paddle.Tensor.abs(Tensor([167921, 1, 172, 79],"float32"), )
paddle.Tensor.abs(Tensor([171798692, 5, 5],"float16"), )
paddle.Tensor.abs(Tensor([17825793, 8, 16],"float32"), )
paddle.Tensor.abs(Tensor([178956971, 3, 8],"float16"), )
paddle.Tensor.abs(Tensor([1800, 316903, 4],"float32"), )
paddle.Tensor.abs(Tensor([1800, 4, 316903],"float32"), )
paddle.Tensor.abs(Tensor([192, 3, 14, 282950],"float32"), )
paddle.Tensor.abs(Tensor([192, 3, 282950, 14],"float32"), )
paddle.Tensor.abs(Tensor([192, 60632, 14, 14],"float32"), )
paddle.Tensor.abs(Tensor([2, 1073741825, 2],"float16"), )
paddle.Tensor.abs(Tensor([2, 178956971, 12],"float16"), )
paddle.Tensor.abs(Tensor([2, 268435457, 8],"float16"), )
paddle.Tensor.abs(Tensor([2, 3, 715827883],"float16"), )
paddle.Tensor.abs(Tensor([2, 357913942, 6],"float16"), )
paddle.Tensor.abs(Tensor([2, 536870913, 4],"float16"), )
paddle.Tensor.abs(Tensor([20372334, 7, 16],"float32"), )
paddle.Tensor.abs(Tensor([2147483649, 2],"float16"), )
paddle.Tensor.abs(Tensor([2228225, 1024],"float32"), )
paddle.Tensor.abs(Tensor([2281701379, 1],"float32"), )
paddle.Tensor.abs(Tensor([2281701379],"float32"), )
paddle.Tensor.abs(Tensor([238609295, 3, 6],"float16"), )
paddle.Tensor.abs(Tensor([2400, 237678, 4],"float32"), )
paddle.Tensor.abs(Tensor([2400, 8, 118839],"float32"), )
paddle.Tensor.abs(Tensor([285212673, 2, 4],"float32"), )
paddle.Tensor.abs(Tensor([28521268, 80],"float32"), )
paddle.Tensor.abs(Tensor([300, 1, 7605672],"float32"), )
paddle.Tensor.abs(Tensor([300, 1901418, 4],"float32"), )
paddle.Tensor.abs(Tensor([300, 5, 1521135],"float32"), )
paddle.Tensor.abs(Tensor([300, 7, 1086525],"float32"), )
paddle.Tensor.abs(Tensor([300, 8, 950709],"float32"), )
paddle.Tensor.abs(Tensor([35651585, 16, 4],"float32"), )
paddle.Tensor.abs(Tensor([357913942, 12],"float16"), )
paddle.Tensor.abs(Tensor([357913942, 3, 4],"float16"), )
paddle.Tensor.abs(Tensor([3880445, 3, 14, 14],"float32"), )
paddle.Tensor.abs(Tensor([4, 35651585, 16],"float32"), )
paddle.Tensor.abs(Tensor([4, 8, 71303169],"float32"), )
paddle.Tensor.abs(Tensor([400, 1426064, 4],"float32"), )
paddle.Tensor.abs(Tensor([400, 4, 1426064],"float32"), )
paddle.Tensor.abs(Tensor([4294967297],"float16"), )
paddle.Tensor.abs(Tensor([4563403, 10, 25, 2],"float32"), )
paddle.Tensor.abs(Tensor([46241, 257, 192],"float32"), )
paddle.Tensor.abs(Tensor([4800, 101, 4707],"float32"), )
paddle.Tensor.abs(Tensor([4800, 118839, 4],"float32"), )
paddle.Tensor.abs(Tensor([50000, 17180, 5],"float16"), )
paddle.Tensor.abs(Tensor([50000, 5, 17180],"float16"), )
paddle.Tensor.abs(Tensor([536870913, 8],"float16"), )
paddle.Tensor.abs(Tensor([5647776, 101, 4],"float32"), )
paddle.Tensor.abs(Tensor([570425345, 1, 4],"float32"), )
paddle.Tensor.abs(Tensor([600, 16, 237678],"float32"), )
paddle.Tensor.abs(Tensor([600, 2, 1901418],"float32"), )
paddle.Tensor.abs(Tensor([600, 4, 950709],"float32"), )
paddle.Tensor.abs(Tensor([600, 950709, 4],"float32"), )
paddle.Tensor.abs(Tensor([64, 1, 172, 207277],"float32"), )
paddle.Tensor.abs(Tensor([64, 1, 451286, 79],"float32"), )
paddle.Tensor.abs(Tensor([64, 2624, 172, 79],"float32"), )
paddle.Tensor.abs(Tensor([697, 65536, 25, 2],"float32"), )
paddle.Tensor.abs(Tensor([71303169, 8, 4],"float32"), )
paddle.Tensor.abs(Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.abs(Tensor([715827883, 6],"float16"), )
paddle.Tensor.abs(Tensor([81489335, 7, 4],"float32"), )
paddle.Tensor.add(Tensor([114085069, 20],"float32"), Tensor([114085069, 20],"float32"), )
paddle.Tensor.add(Tensor([15, 152113426],"float32"), Tensor([15, 152113426],"float32"), )
paddle.Tensor.add(Tensor([190141782, 3, 4],"float32"), Tensor([190141782, 3, 4],"float32"), )
paddle.Tensor.add(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.add(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), )
paddle.Tensor.add(Tensor([2, 285212673, 4],"float32"), Tensor([2, 285212673, 4],"float32"), )
paddle.Tensor.add(Tensor([2, 3, 380283564],"float32"), Tensor([2, 3, 380283564],"float32"), )
paddle.Tensor.add(Tensor([20, 114085069],"float32"), Tensor([20, 114085069],"float32"), )
paddle.Tensor.add(Tensor([20, 114085069],"float32"), Tensor([20, 1],"float32"), )
paddle.Tensor.add(Tensor([20, 1],"float32"), Tensor([20, 114085069],"float32"), )
paddle.Tensor.add(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.Tensor.add(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.Tensor.add(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.add(Tensor([25352238, 90],"float32"), Tensor([25352238, 90],"float32"), )
paddle.Tensor.add(Tensor([3, 760567127],"float32"), Tensor([3, 760567127],"float32"), )
paddle.Tensor.add(Tensor([35651585, 64],"float32"), Tensor([35651585, 64],"float32"), )
paddle.Tensor.add(Tensor([456340276, 5],"float32"), Tensor([456340276, 5],"float32"), )
paddle.Tensor.add(Tensor([45634028, 50],"float32"), Tensor([45634028, 50],"float32"), )
paddle.Tensor.add(Tensor([47535446, 48],"float32"), Tensor([47535446, 48],"float32"), )
paddle.Tensor.add(Tensor([48, 1],"float32"), Tensor([48, 47535446],"float32"), )
paddle.Tensor.add(Tensor([48, 47535446],"float32"), Tensor([48, 1],"float32"), )
paddle.Tensor.add(Tensor([48, 47535446],"float32"), Tensor([48, 47535446],"float32"), )
paddle.Tensor.add(Tensor([50, 45634028],"float32"), Tensor([50, 45634028],"float32"), )
paddle.Tensor.add(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), )
paddle.Tensor.add(Tensor([64, 35651585],"float32"), Tensor([64, 35651585],"float32"), )
paddle.Tensor.add(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), )
paddle.Tensor.add(Tensor([90, 25352238],"float32"), Tensor([90, 25352238],"float32"), )
paddle.Tensor.all(Tensor([1, 1, 10, 228170138],"bool"), )
paddle.Tensor.all(Tensor([1, 1, 1114113, 2048],"bool"), )
paddle.Tensor.all(Tensor([1, 1, 142606337, 16],"bool"), )
paddle.Tensor.all(Tensor([1, 1, 2048, 1114113],"bool"), )
paddle.Tensor.all(Tensor([1, 10164, 224489],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 1024, 1, 2228225],"bool"), )
paddle.Tensor.all(Tensor([1, 1024, 1114113, 2],"bool"), )
paddle.Tensor.all(Tensor([1, 1024, 2, 1114113],"bool"), )
paddle.Tensor.all(Tensor([1, 1024, 2228225, 1],"bool"), )
paddle.Tensor.all(Tensor([1, 11109, 205393],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 12096, 188633],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 128, 10, 1782580],"bool"), )
paddle.Tensor.all(Tensor([1, 128, 1782580, 10],"bool"), )
paddle.Tensor.all(Tensor([1, 14260634, 10, 16],"bool"), )
paddle.Tensor.all(Tensor([1, 1426064, 40, 40],"bool"), )
paddle.Tensor.all(Tensor([1, 16, 3565159, 40],"bool"), )
paddle.Tensor.all(Tensor([1, 16, 40, 3565159],"bool"), )
paddle.Tensor.all(Tensor([1, 2, 10, 114085069],"bool"), )
paddle.Tensor.all(Tensor([1, 2, 71303169, 16],"bool"), )
paddle.Tensor.all(Tensor([1, 2281701379, 1, 1],"bool"), )
paddle.Tensor.all(Tensor([1, 2281701379],"bool"), )
paddle.Tensor.all(Tensor([1, 22817014, 10, 10],"bool"), )
paddle.Tensor.all(Tensor([1, 24, 2376773, 40],"bool"), )
paddle.Tensor.all(Tensor([1, 24, 40, 2376773],"bool"), )
paddle.Tensor.all(Tensor([1, 253522376, 3, 3],"bool"), )
paddle.Tensor.all(Tensor([1, 36828, 61956],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 38367, 59471],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 4725, 482900],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 48, 5, 9507090],"bool"), )
paddle.Tensor.all(Tensor([1, 48, 9507090, 5],"bool"), )
paddle.Tensor.all(Tensor([1, 512, 2, 2228225],"bool"), )
paddle.Tensor.all(Tensor([1, 512, 2228225, 2],"bool"), )
paddle.Tensor.all(Tensor([1, 5376, 424424],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 545, 2048, 2048],"bool"), )
paddle.Tensor.all(Tensor([1, 570425345, 2, 2],"bool"), )
paddle.Tensor.all(Tensor([1, 570425345, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 576, 1, 3961288],"bool"), )
paddle.Tensor.all(Tensor([1, 576, 3961288, 1],"bool"), )
paddle.Tensor.all(Tensor([1, 6069, 375961],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 6380, 357634],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 64, 40, 891290],"bool"), )
paddle.Tensor.all(Tensor([1, 64, 891290, 40],"bool"), )
paddle.Tensor.all(Tensor([1, 6804, 335348],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 8400, 271632],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 8550, 266866],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 91268056, 5, 5],"bool"), )
paddle.Tensor.all(Tensor([1, 96, 3, 7922575],"bool"), )
paddle.Tensor.all(Tensor([1, 96, 7922575, 3],"bool"), )
paddle.Tensor.all(Tensor([100, 22817014],"bool"), )
paddle.Tensor.all(Tensor([106106, 5376, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1114113, 512, 2, 2],"bool"), )
paddle.Tensor.all(Tensor([120089547, 19],"bool"), )
paddle.Tensor.all(Tensor([120725, 4725, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([14260634, 1, 10, 16],"bool"), )
paddle.Tensor.all(Tensor([14868, 38367, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([15489, 36828, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([178258, 128, 10, 10],"bool"), )
paddle.Tensor.all(Tensor([19014179, 1, 1, 120],"bool"), )
paddle.Tensor.all(Tensor([1901418, 48, 5, 5],"bool"), )
paddle.Tensor.all(Tensor([19173962, 1, 1, 119],"bool"), )
paddle.Tensor.all(Tensor([19336453, 1, 1, 118],"bool"), )
paddle.Tensor.all(Tensor([19501722, 1, 1, 117],"bool"), )
paddle.Tensor.all(Tensor([19669840, 1, 1, 116],"bool"), )
paddle.Tensor.all(Tensor([19840882, 1, 1, 115],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 1, 1140850690],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10007463, 114],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10096024, 113],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10186167, 112],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10277935, 111],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10371370, 110],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10466521, 109],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10563433, 108],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10662156, 107],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10762743, 106],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10865245, 105],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10969719, 104],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 11076221, 103],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 11184811, 102],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 11295552, 101],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 11408507, 100],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 9507090, 120],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 9586981, 119],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 9668227, 118],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 9750861, 117],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 9834920, 116],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 9920441, 115],"bool"), )
paddle.Tensor.all(Tensor([2, 10, 114085069],"bool"), )
paddle.Tensor.all(Tensor([2, 10007463, 1, 114],"bool"), )
paddle.Tensor.all(Tensor([2, 10096024, 1, 113],"bool"), )
paddle.Tensor.all(Tensor([2, 10186167, 1, 112],"bool"), )
paddle.Tensor.all(Tensor([2, 10277935, 1, 111],"bool"), )
paddle.Tensor.all(Tensor([2, 10371370, 1, 110],"bool"), )
paddle.Tensor.all(Tensor([2, 10466521, 1, 109],"bool"), )
paddle.Tensor.all(Tensor([2, 10563433, 1, 108],"bool"), )
paddle.Tensor.all(Tensor([2, 10662156, 1, 107],"bool"), )
paddle.Tensor.all(Tensor([2, 10762743, 1, 106],"bool"), )
paddle.Tensor.all(Tensor([2, 10865245, 1, 105],"bool"), )
paddle.Tensor.all(Tensor([2, 10969719, 1, 104],"bool"), )
paddle.Tensor.all(Tensor([2, 11076221, 1, 103],"bool"), )
paddle.Tensor.all(Tensor([2, 11184811, 1, 102],"bool"), )
paddle.Tensor.all(Tensor([2, 11295552, 1, 101],"bool"), )
paddle.Tensor.all(Tensor([2, 1140850690],"bool"), )
paddle.Tensor.all(Tensor([2, 11408507, 1, 100],"bool"), )
paddle.Tensor.all(Tensor([2, 11645, 97970],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([2, 285212673, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([2, 35652, 32000],"bool"), )
paddle.Tensor.all(Tensor([2, 4457, 256000],"bool"), )
paddle.Tensor.all(Tensor([2, 9507090, 1, 120],"bool"), )
paddle.Tensor.all(Tensor([2, 9586981, 1, 119],"bool"), )
paddle.Tensor.all(Tensor([2, 9668227, 1, 118],"bool"), )
paddle.Tensor.all(Tensor([2, 9750861, 1, 117],"bool"), )
paddle.Tensor.all(Tensor([2, 9834920, 1, 116],"bool"), )
paddle.Tensor.all(Tensor([2, 9920441, 1, 115],"bool"), )
paddle.Tensor.all(Tensor([20014925, 1, 1, 114],"bool"), )
paddle.Tensor.all(Tensor([20192048, 1, 1, 113],"bool"), )
paddle.Tensor.all(Tensor([20372334, 1, 1, 112],"bool"), )
paddle.Tensor.all(Tensor([20555869, 1, 1, 111],"bool"), )
paddle.Tensor.all(Tensor([20742740, 1, 1, 110],"bool"), )
paddle.Tensor.all(Tensor([20933041, 1, 1, 109],"bool"), )
paddle.Tensor.all(Tensor([21126865, 1, 1, 108],"bool"), )
paddle.Tensor.all(Tensor([21324312, 1, 1, 107],"bool"), )
paddle.Tensor.all(Tensor([21525485, 1, 1, 106],"bool"), )
paddle.Tensor.all(Tensor([21730490, 1, 1, 105],"bool"), )
paddle.Tensor.all(Tensor([21939437, 1, 1, 104],"bool"), )
paddle.Tensor.all(Tensor([22152441, 1, 1, 103],"bool"), )
paddle.Tensor.all(Tensor([2228225, 1024, 1, 1],"bool"), )
paddle.Tensor.all(Tensor([22283, 64, 40, 40],"bool"), )
paddle.Tensor.all(Tensor([22369622, 1, 1, 102],"bool"), )
paddle.Tensor.all(Tensor([22591103, 1, 1, 101],"bool"), )
paddle.Tensor.all(Tensor([2281701379, 1],"bool"), )
paddle.Tensor.all(Tensor([2281701379],"bool"), )
paddle.Tensor.all(Tensor([22817014, 1, 1, 100],"bool"), )
paddle.Tensor.all(Tensor([22817014, 100],"bool"), )
paddle.Tensor.all(Tensor([2281702, 1000],"bool"), )
paddle.Tensor.all(Tensor([2640859, 96, 3, 3],"bool"), )
paddle.Tensor.all(Tensor([3, 760567127],"bool"), )
paddle.Tensor.all(Tensor([380283564, 6],"bool"), )
paddle.Tensor.all(Tensor([3961288, 576, 1, 1],"bool"), )
paddle.Tensor.all(Tensor([4, 570425345],"bool"), )
paddle.Tensor.all(Tensor([40, 57042535],"bool"), )
paddle.Tensor.all(Tensor([456340276, 5],"bool"), )
paddle.Tensor.all(Tensor([4563403, 500],"bool"), )
paddle.Tensor.all(Tensor([47159, 12096, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([48985, 11645, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([5, 456340276],"bool"), )
paddle.Tensor.all(Tensor([5, 5, 91268056],"bool"), )
paddle.Tensor.all(Tensor([5, 91268056, 5],"bool"), )
paddle.Tensor.all(Tensor([51349, 11109, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([545, 1, 2048, 2048],"bool"), )
paddle.Tensor.all(Tensor([557057, 1024, 2, 2],"bool"), )
paddle.Tensor.all(Tensor([56123, 10164, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([570425345, 4],"bool"), )
paddle.Tensor.all(Tensor([57042535, 40],"bool"), )
paddle.Tensor.all(Tensor([59420, 24, 40, 40],"bool"), )
paddle.Tensor.all(Tensor([6, 380283564],"bool"), )
paddle.Tensor.all(Tensor([66717, 8550, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([67908, 8400, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([7130317, 2, 10, 16],"bool"), )
paddle.Tensor.all(Tensor([7131, 10, 32000],"bool"), )
paddle.Tensor.all(Tensor([760567127, 3],"bool"), )
paddle.Tensor.all(Tensor([7605672, 300],"bool"), )
paddle.Tensor.all(Tensor([83837, 6804, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([89129, 16, 40, 40],"bool"), )
paddle.Tensor.all(Tensor([892, 10, 256000],"bool"), )
paddle.Tensor.all(Tensor([89409, 6380, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([91268056, 5, 5],"bool"), )
paddle.Tensor.all(Tensor([93991, 6069, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.amax(Tensor([114085069, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([2, 1140850690],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([2, 285212673, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([2, 5, 228170138],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([2281701379],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([2281701379],"int32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([2281701379],"int64"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([3, 2, 4, 95070891],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 5, 76056713],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 5, 76056713],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([3, 2, 5, 76056713],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 76056713, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 95070891, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 95070891, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([3, 2, 95070891, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amax(Tensor([3, 38028357, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 38028357, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 38028357, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([3, 38028357, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amax(Tensor([570425345, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([57042535, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amax(Tensor([57042535, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amax(Tensor([57042535, 2, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([57042535, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amin(Tensor([114085069, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([2, 1140850690],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([2, 285212673, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([2, 5, 228170138],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([2281701379],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([2281701379],"int32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([2281701379],"int64"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([3, 2, 4, 95070891],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 5, 76056713],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 5, 76056713],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([3, 2, 5, 76056713],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 76056713, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 95070891, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 95070891, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([3, 2, 95070891, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amin(Tensor([3, 38028357, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 38028357, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 38028357, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([3, 38028357, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amin(Tensor([570425345, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([57042535, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amin(Tensor([57042535, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amin(Tensor([57042535, 2, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([57042535, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.any(Tensor([1, 2281701379],"bool"), )
paddle.Tensor.any(Tensor([1, 300, 176, 43215],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([1, 300, 184, 41336],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([1, 300, 192, 39613],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([1, 300, 39613, 192],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([1, 300, 41336, 184],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([1, 300, 43215, 176],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([1, 61896, 192, 192],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([1, 67395, 184, 184],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([1, 73661, 176, 176],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([10186167, 7, 32],"bool"), )
paddle.Tensor.any(Tensor([11, 207427399],"bool"), )
paddle.Tensor.any(Tensor([114085069, 20],"bool"), )
paddle.Tensor.any(Tensor([14, 10186167, 16],"bool"), )
paddle.Tensor.any(Tensor([14, 1646250, 99],"bool"), )
paddle.Tensor.any(Tensor([14, 40744668, 4],"bool"), )
paddle.Tensor.any(Tensor([14, 5093084, 32],"bool"), )
paddle.Tensor.any(Tensor([14, 64, 2546542],"bool"), )
paddle.Tensor.any(Tensor([14, 7, 23282668],"bool"), )
paddle.Tensor.any(Tensor([18, 126761188],"bool"), )
paddle.Tensor.any(Tensor([190141782, 12],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([190141782, 3, 4],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([190141782, 3, 4],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([2, 1140850690],"bool"), )
paddle.Tensor.any(Tensor([2, 1140850690],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([2, 285212673, 4],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([2, 3, 380283564],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([2, 300, 136, 27963],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([2, 300, 27963, 136],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([2, 61681, 136, 136],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([200, 11408507],"bool"), )
paddle.Tensor.any(Tensor([207, 300, 192, 192],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([21, 108652447],"bool"), )
paddle.Tensor.any(Tensor([22, 103713700],"bool"), )
paddle.Tensor.any(Tensor([2228225, 64, 16],"bool"), )
paddle.Tensor.any(Tensor([225, 300, 184, 184],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([2281701379],"bool"), )
paddle.Tensor.any(Tensor([2281701379],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([246, 300, 176, 176],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([253522376, 3, 3],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([3, 253522376, 3],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([3, 3, 253522376],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2, 5281717],"bool"), axis=3, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2, 5281717],"bool"), axis=4, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2, 5281717],"bool"), axis=5, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2112687, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2112687, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2112687, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4225373, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4225373, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4225373, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3169030, 4, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3169030, 4, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3169030, 4, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6338060, 3, 4, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6338060, 3, 4, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6338060, 3, 4, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.any(Tensor([3, 760567127],"bool"), )
paddle.Tensor.any(Tensor([300, 7605672],"bool"), )
paddle.Tensor.any(Tensor([3169030, 6, 3, 4, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.any(Tensor([3169030, 6, 3, 4, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.any(Tensor([3169030, 6, 3, 4, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.any(Tensor([325957340, 7],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([3292499, 7, 99],"bool"), )
paddle.Tensor.any(Tensor([4, 570425345],"bool"), )
paddle.Tensor.any(Tensor([4, 570425345],"bool"), -1, )
paddle.Tensor.any(Tensor([4, 570425345],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([4, 7, 81489335],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([4, 7, 81489335],"bool"), axis=2, keepdim=True, )
paddle.Tensor.any(Tensor([4, 8, 2, 35651585],"bool"), axis=tuple(-1,-2,), )
paddle.Tensor.any(Tensor([4, 8, 23767723, 3],"bool"), axis=tuple(-1,-2,), )
paddle.Tensor.any(Tensor([4, 95070891, 2, 3],"bool"), axis=tuple(-1,-2,), )
paddle.Tensor.any(Tensor([4, 95070891, 6],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([4, 95070891, 6],"bool"), axis=2, keepdim=True, )
paddle.Tensor.any(Tensor([412, 300, 136, 136],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([4554295, 501],"bool"), -1, )
paddle.Tensor.any(Tensor([47535446, 8, 2, 3],"bool"), axis=tuple(-1,-2,), )
paddle.Tensor.any(Tensor([5, 114085069, 4],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([5, 3, 152113426],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([5, 456340276],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([54326224, 42],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([54326224, 7, 6],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([54326224, 7, 6],"bool"), axis=2, keepdim=True, )
paddle.Tensor.any(Tensor([570425345, 4],"bool"), )
paddle.Tensor.any(Tensor([6380, 357634],"bool"), )
paddle.Tensor.any(Tensor([7, 325957340],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([760567127, 3],"bool"), )
paddle.Tensor.any(Tensor([760567127, 3],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([8, 285212673],"bool"), -1, )
paddle.Tensor.any(Tensor([8550, 266866],"bool"), )
paddle.Tensor.any(Tensor([8912897, 64, 4],"bool"), )
paddle.Tensor.any(Tensor([9, 253522376],"bool"), )
paddle.Tensor.any(Tensor([900, 2535224],"bool"), )
paddle.Tensor.any(Tensor([95070891, 24],"bool"), axis=1, keepdim=True, )
paddle.Tensor.argmax(Tensor([1, 1, 2281701379],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 221848, 10285],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 2281701379],"int64"), axis=-1, )
paddle.Tensor.argmax(Tensor([1, 268436, 8500],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 271632, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 30182, 75600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 32299, 70644],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 331402, 6885],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 34647, 65856],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 356516, 6400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 371009, 6150],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 40183, 56784],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 419431, 5440],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 43461, 52500],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 47159, 48384],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 51349, 44436],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 547828, 4165],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 56123, 40656],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 59417, 38402],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 61595, 37044],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 61906, 36858],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 634159, 3598],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 67908, 33600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 75245, 30324],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 83837, 27216],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 93991, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1132, 90, 22400],"float32"), axis=1, )
paddle.Tensor.argmax(Tensor([13, 175515491],"float32"), 1, )
paddle.Tensor.argmax(Tensor([13, 175515491],"int32"), -1, )
paddle.Tensor.argmax(Tensor([13, 3, 58505164],"float32"), 1, )
paddle.Tensor.argmax(Tensor([13, 58505164, 3],"float32"), 1, )
paddle.Tensor.argmax(Tensor([2, 1140850690],"float32"), axis=-1, )
paddle.Tensor.argmax(Tensor([221848, 1, 10285],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2264, 126, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([228170138, 10],"float32"), axis=1, )
paddle.Tensor.argmax(Tensor([2282, 125, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2301, 124, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2319, 123, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2358, 121, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2377, 120, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2397, 119, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2418, 118, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2438, 117, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2459, 116, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2481, 115, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2502, 114, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2525, 113, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([253522376, 3, 3],"float32"), 1, )
paddle.Tensor.argmax(Tensor([2547, 112, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2570, 111, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2593, 110, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2617, 109, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2641, 108, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([268436, 1, 8500],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2691, 106, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([271632, 1, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2743, 104, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2770, 103, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2797, 102, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2824, 101, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2853, 100, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([29632486, 77],"int64"), axis=-1, )
paddle.Tensor.argmax(Tensor([30, 100, 760568],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 101, 753037],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 102, 745655],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 103, 738415],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 104, 731315],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 106, 717517],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 108, 704229],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 109, 697769],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 110, 691425],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 111, 685196],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 112, 679078],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 113, 673069],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 114, 667165],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 115, 661363],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 116, 655662],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 117, 650058],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 118, 644549],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 119, 639133],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 120, 633806],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 121, 628568],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 123, 618348],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 124, 613361],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 125, 608454],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 126, 603625],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 9508, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30182, 1, 75600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([32299, 1, 70644],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([325957340, 7],"int32"), -1, )
paddle.Tensor.argmax(Tensor([331402, 1, 6885],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([34647, 1, 65856],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([356516, 1, 6400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([371009, 1, 6150],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 157920, 3613],"float32"), axis=-1, )
paddle.Tensor.argmax(Tensor([4, 25466, 22400],"float32"), axis=1, )
paddle.Tensor.argmax(Tensor([4, 285212673, 2],"float32"), axis=-1, )
paddle.Tensor.argmax(Tensor([4, 570425345],"float32"), axis=1, )
paddle.Tensor.argmax(Tensor([4, 90, 6338060],"float32"), axis=1, )
paddle.Tensor.argmax(Tensor([40183, 1, 56784],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([419431, 1, 5440],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([43461, 1, 52500],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([47159, 1, 48384],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([51349, 1, 44436],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([547828, 1, 4165],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([56123, 1, 40656],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([570425345, 4],"float32"), axis=-1, )
paddle.Tensor.argmax(Tensor([59417, 1, 38402],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([61595, 1, 37044],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([61906, 1, 36858],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([634159, 1, 3598],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([67908, 1, 33600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([7225, 157920, 2],"float32"), axis=-1, )
paddle.Tensor.argmax(Tensor([75245, 1, 30324],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([760567127, 3],"float32"), 1, )
paddle.Tensor.argmax(Tensor([80, 28521268],"int64"), axis=-1, )
paddle.Tensor.argmax(Tensor([83837, 1, 27216],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([93991, 1, 24276],"float32"), axis=-2, )
paddle.Tensor.astype(Tensor([1, 1, 1, 1140850690, 1, 2],"int64"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 1, 1, 1140850690, 1, 2],"int64"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 1, 1140850690, 1, 2],"int64"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 1, 2281701379],"float32"), "float16", )
paddle.Tensor.astype(Tensor([1, 1, 1, 2281701379],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 1, 1, 2281701379],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 1, 2281701379],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 1, 2281701379],"int64"), "bool", )
paddle.Tensor.astype(Tensor([1, 1, 1, 2281701379],"int64"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 1, 4, 1, 570425345],"int64"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 1, 1, 4, 1, 570425345],"int64"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 1, 4, 1, 570425345],"int64"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 1, 4, 285212673, 2],"int64"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 1, 1, 4, 285212673, 2],"int64"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 1, 4, 285212673, 2],"int64"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 1, 4294967297],"float16"), "float32", )
paddle.Tensor.astype(Tensor([1, 1, 1, 4294967297],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 1, 1, 5, 1, 456340276],"int64"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 1, 5, 228170138, 2],"int64"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 114085069, 20],"int64"), Dtype(int8), )
paddle.Tensor.astype(Tensor([1, 1, 1140850690, 2],"float32"), "int64", )
paddle.Tensor.astype(Tensor([1, 1, 1140850690, 2],"int32"), "int64", )
paddle.Tensor.astype(Tensor([1, 1, 175515491, 13],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 190141782, 12],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 190141782, 3, 4],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 1, 2, 1140850690],"float32"), "int64", )
paddle.Tensor.astype(Tensor([1, 1, 2, 1140850690],"int32"), "int64", )
paddle.Tensor.astype(Tensor([1, 1, 20, 114085069],"int64"), Dtype(int8), )
paddle.Tensor.astype(Tensor([1, 1, 207427399, 11],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 1, 207427399, 11],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 22152441, 103],"int64"), "bool", )
paddle.Tensor.astype(Tensor([1, 1, 22369622, 102],"int64"), "bool", )
paddle.Tensor.astype(Tensor([1, 1, 22591103, 101],"int64"), "bool", )
paddle.Tensor.astype(Tensor([1, 1, 2281701379, 1],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 1, 2281701379, 1],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 2281701379],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 2281701379],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 2281701379],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 1, 2281701379],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 2281701379],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 228170138, 10],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 228170138, 10],"int64"), "bool", )
paddle.Tensor.astype(Tensor([1, 1, 228170138, 10],"int64"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 228170138, 5, 1, 2],"int64"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 22817014, 100],"int64"), "bool", )
paddle.Tensor.astype(Tensor([1, 1, 253522376, 3, 3],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 1, 285212673, 4, 1, 2],"int64"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 1, 285212673, 4, 1, 2],"int64"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 285212673, 4, 1, 2],"int64"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 3, 190141782, 4],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 1, 3, 253522376, 3],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 1, 3, 3, 253522376],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 1, 3, 760567127],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 1, 41698712, 103],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 1, 42107523, 102],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 1, 42524429, 101],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 1, 4294967297, 1],"float16"), "float32", )
paddle.Tensor.astype(Tensor([1, 1, 4294967297],"float16"), "float32", )
paddle.Tensor.astype(Tensor([1, 1, 42949673, 100],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 1, 429496730, 10],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 1, 557057, 4096],"float32"), "float16", )
paddle.Tensor.astype(Tensor([1, 1, 570425345, 4],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 1, 760567127, 3],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 1, 95070891, 24],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 1, 99204408, 23],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 10, 228170138],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 10, 228170138],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1015, 1500, 1500],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1024, 2228225],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([1, 1073741825, 4],"float16"), "float32", )
paddle.Tensor.astype(Tensor([1, 1140850690, 2],"bool"), "int64", )
paddle.Tensor.astype(Tensor([1, 1140850690, 2],"int64"), Dtype(int64), )
paddle.Tensor.astype(Tensor([1, 12, 1, 190141782],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 12, 1, 392, 485056],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 12, 1, 392, 485056],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 12, 1, 485056, 392],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 12, 1, 485056, 392],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 12, 1238, 392, 392],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 12, 1238, 392, 392],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 12, 126762, 1500],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 12, 1500, 126762],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 12, 190141782, 1],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 128, 1, 392, 45474],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 128, 1, 392, 45474],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 128, 1, 45474, 392],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 128, 1, 45474, 392],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 128, 117, 392, 392],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 128, 117, 392, 392],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 128, 17825793],"float32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([1, 128, 17825793],"int64"), Dtype(int32), )
paddle.Tensor.astype(Tensor([1, 128, 3565159, 5],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 128, 5, 3565159],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 138723, 257, 64],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([1, 142606337, 16],"float32"), "float16", )
paddle.Tensor.astype(Tensor([1, 142606337, 2, 8],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([1, 144, 1, 392, 40422],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 144, 1, 392, 40422],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 144, 1, 40422, 392],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 144, 1, 40422, 392],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 144, 104, 392, 392],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 144, 104, 392, 392],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 14849, 1, 392, 392],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 14849, 1, 392, 392],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1521135, 1, 1500],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 16, 14, 14, 727584],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 16, 14, 14, 727584],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 16, 14, 15, 679078],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 16, 14, 15, 679078],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 16, 14, 26527, 384],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 16, 14, 26527, 384],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 16, 2228225, 64],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([1, 16, 24759, 15, 384],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 16, 24759, 15, 384],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 16, 257, 554889],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([1, 16, 26527, 14, 384],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 16, 26527, 14, 384],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 175515491, 1, 13],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 17825793, 128],"float32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([1, 17825793, 128],"int64"), Dtype(int32), )
paddle.Tensor.astype(Tensor([1, 190141782, 1, 12],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 190141782, 2, 2, 3],"float32"), "int64", )
paddle.Tensor.astype(Tensor([1, 190141782, 2, 2, 3],"int32"), "int64", )
paddle.Tensor.astype(Tensor([1, 190141782, 3, 4],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 192, 16, 742742],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([1, 192, 742742, 16],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([1, 1973791, 1156],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 2, 1140850690],"float32"), "float16", )
paddle.Tensor.astype(Tensor([1, 2, 1140850690],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 2048, 1114113],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 207427399, 1, 11],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 207427399, 1, 11],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 21126865, 108],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 21126865, 6, 6, 3],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 2147483649, 2],"float16"), "float32", )
paddle.Tensor.astype(Tensor([1, 21504, 106106],"bool"), "int32", )
paddle.Tensor.astype(Tensor([1, 21504, 106106],"int32"), "bool", )
paddle.Tensor.astype(Tensor([1, 22, 103713700],"int64"), "bool", )
paddle.Tensor.astype(Tensor([1, 22152441, 1, 103],"int64"), "bool", )
paddle.Tensor.astype(Tensor([1, 221848, 10285],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 2228225, 1024],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 22369622, 1, 102],"int64"), "bool", )
paddle.Tensor.astype(Tensor([1, 22591103, 1, 101],"int64"), "bool", )
paddle.Tensor.astype(Tensor([1, 2281701379, 1, 1],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 2281701379, 1, 1],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 2281701379, 1],"bool"), "int32", )
paddle.Tensor.astype(Tensor([1, 2281701379, 1],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 2281701379, 1],"int64"), "bool", )
paddle.Tensor.astype(Tensor([1, 2281701379],"bool"), "bool", )
paddle.Tensor.astype(Tensor([1, 2281701379],"bool"), "int32", )
paddle.Tensor.astype(Tensor([1, 2281701379],"bool"), "int64", )
paddle.Tensor.astype(Tensor([1, 2281701379],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 2281701379],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([1, 2281701379],"float32"), "bool", )
paddle.Tensor.astype(Tensor([1, 2281701379],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 2281701379],"float32"), "float64", )
paddle.Tensor.astype(Tensor([1, 2281701379],"float32"), "int64", )
paddle.Tensor.astype(Tensor([1, 2281701379],"float32"), Dtype(complex64), )
paddle.Tensor.astype(Tensor([1, 2281701379],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 2281701379],"float32"), Dtype(int64), )
paddle.Tensor.astype(Tensor([1, 2281701379],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 2281701379],"float32"), dtype=Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 2281701379],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([1, 2281701379],"int32"), "int64", )
paddle.Tensor.astype(Tensor([1, 2281701379],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([1, 2281701379],"int32"), VarType(int64), )
paddle.Tensor.astype(Tensor([1, 2281701379],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 2281701379],"int64"), "int64", )
paddle.Tensor.astype(Tensor([1, 2281701379],"int64"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 2281701379],"int64"), Dtype(int64), )
paddle.Tensor.astype(Tensor([1, 228170138, 1, 10],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 228170138, 1, 10],"int64"), "bool", )
paddle.Tensor.astype(Tensor([1, 228170138, 1, 10],"int64"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 228170138, 1, 5, 1, 2],"int64"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 228170138, 10],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 22817014, 1, 100],"int64"), "bool", )
paddle.Tensor.astype(Tensor([1, 22817014, 100],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 24276, 93991],"bool"), "int32", )
paddle.Tensor.astype(Tensor([1, 24276, 93991],"int32"), "bool", )
paddle.Tensor.astype(Tensor([1, 253522376, 3, 3],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 25928425, 88],"int32"), "bool", )
paddle.Tensor.astype(Tensor([1, 27216, 83837],"bool"), "int32", )
paddle.Tensor.astype(Tensor([1, 28295, 14, 15, 384],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 28295, 14, 15, 384],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 285212673, 1, 4, 1, 2],"int64"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 285212673, 1, 4, 1, 2],"int64"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 285212673, 1, 4, 1, 2],"int64"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 285212673, 8],"float32"), "int64", )
paddle.Tensor.astype(Tensor([1, 285212673, 8],"int32"), "int64", )
paddle.Tensor.astype(Tensor([1, 3, 126761188, 2, 3],"float32"), "int64", )
paddle.Tensor.astype(Tensor([1, 3, 126761188, 2, 3],"int32"), "int64", )
paddle.Tensor.astype(Tensor([1, 3, 2, 126761188, 3],"float32"), "int64", )
paddle.Tensor.astype(Tensor([1, 3, 2, 126761188, 3],"int32"), "int64", )
paddle.Tensor.astype(Tensor([1, 3, 2, 2, 190141782],"float32"), "int64", )
paddle.Tensor.astype(Tensor([1, 3, 2, 2, 190141782],"int32"), "int64", )
paddle.Tensor.astype(Tensor([1, 3, 253522376, 3],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 3, 3, 253522376],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 3, 760567127],"float32"), "float16", )
paddle.Tensor.astype(Tensor([1, 3, 760567127],"float32"), "int64", )
paddle.Tensor.astype(Tensor([1, 3, 760567127],"float32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([1, 3, 760567127],"int32"), "int64", )
paddle.Tensor.astype(Tensor([1, 3, 760567127],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([1, 3, 760567127],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 300, 176, 43215],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([1, 300, 184, 41336],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([1, 300, 192, 39613],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([1, 300, 39613, 192],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([1, 300, 41336, 184],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([1, 300, 43215, 176],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([1, 30316, 14, 14, 384],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 30316, 14, 14, 384],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 30324, 75245],"bool"), "int32", )
paddle.Tensor.astype(Tensor([1, 35651585, 64],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 35651585, 64],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 4, 2, 285212673],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([1, 4, 570425345],"bool"), "int64", )
paddle.Tensor.astype(Tensor([1, 4, 570425345],"int64"), Dtype(int64), )
paddle.Tensor.astype(Tensor([1, 4, 71303169, 8],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([1, 41698712, 1, 103],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 42107523, 1, 102],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 42524429, 1, 101],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 4294967297, 1, 1],"float16"), "float32", )
paddle.Tensor.astype(Tensor([1, 4294967297],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 4294967297],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([1, 4294967297],"float16"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 42949673, 1, 100],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 429496730, 1, 10],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 4456449, 512],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 5000, 456341],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 51856850, 44],"float32"), "float16", )
paddle.Tensor.astype(Tensor([1, 557057, 1, 4096],"float32"), "float16", )
paddle.Tensor.astype(Tensor([1, 557057, 4096],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([1, 570425345, 2, 2],"float32"), "int64", )
paddle.Tensor.astype(Tensor([1, 570425345, 2, 2],"int32"), "int64", )
paddle.Tensor.astype(Tensor([1, 570425345, 4],"int32"), "bool", )
paddle.Tensor.astype(Tensor([1, 5704254, 20, 20],"int64"), Dtype(int8), )
paddle.Tensor.astype(Tensor([1, 6, 21126865, 6, 3],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 6, 6, 21126865, 3],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 6, 6, 6, 10563433],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 61896, 192, 192],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([1, 63380594, 3, 3, 4],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 67395, 184, 184],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([1, 71303169, 32],"float32"), "float16", )
paddle.Tensor.astype(Tensor([1, 71303169, 32],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 71303169, 32],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 71304, 32000],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 73661, 176, 176],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([1, 760567127, 3],"float32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([1, 760567127, 3],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([1, 760567127, 3],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 81489335, 28],"float32"), "float16", )
paddle.Tensor.astype(Tensor([1, 84507459, 3, 3, 3],"int64"), "int32", )
paddle.Tensor.astype(Tensor([1, 858993460, 5],"float16"), "float32", )
paddle.Tensor.astype(Tensor([1, 8912897, 16, 16],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([1, 8912897, 256],"float32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([1, 8912897, 256],"int64"), Dtype(int32), )
paddle.Tensor.astype(Tensor([1, 91268056, 5, 5],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 95070891, 1, 24],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 99204408, 1, 23],"float32"), "float32", )
paddle.Tensor.astype(Tensor([10, 228170138],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([10, 228170138],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([10, 228170138],"float32"), "float16", )
paddle.Tensor.astype(Tensor([10, 228170138],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([10, 228170138],"float32"), Dtype(int64), )
paddle.Tensor.astype(Tensor([10, 228170138],"float32"), dtype=Dtype(float32), )
paddle.Tensor.astype(Tensor([10, 228170138],"float32"), type(numpy.float16), )
paddle.Tensor.astype(Tensor([10, 228170138],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([10, 3, 2, 3, 12676119],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([10, 3, 2, 38028357],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([10, 3, 2, 9507090, 4],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([10, 3, 38028357, 2],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([10, 3, 6338060, 3, 4],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([10, 57042535, 2, 2],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([10, 9507090, 2, 3, 4],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([100, 22817014],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([100, 22817014],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([1000, 2281702],"float32"), Dtype(complex64), )
paddle.Tensor.astype(Tensor([1024, 2228225],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([1024, 2228225],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([103713700, 22, 1],"int64"), "bool", )
paddle.Tensor.astype(Tensor([104, 144, 1, 392, 392],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([104, 144, 1, 392, 392],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([106106, 21504, 1],"bool"), "int32", )
paddle.Tensor.astype(Tensor([106106, 21504],"bool"), "int32", )
paddle.Tensor.astype(Tensor([1069, 24276, 88],"int32"), "bool", )
paddle.Tensor.astype(Tensor([1073741825, 1, 4],"float16"), "float32", )
paddle.Tensor.astype(Tensor([1073741825, 4],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1073741825, 4],"float16"), type(numpy.int32), )
paddle.Tensor.astype(Tensor([1073741825, 4],"uint8"), "uint8", )
paddle.Tensor.astype(Tensor([107374183, 20, 2],"float16"), "int16", )
paddle.Tensor.astype(Tensor([107374183, 20, 2],"float16"), "int8", )
paddle.Tensor.astype(Tensor([107374183, 20, 2],"float16"), "uint8", )
paddle.Tensor.astype(Tensor([112, 1, 20372334],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([112, 20372334, 1],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1124, 2029984],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([1124, 2029984],"float32"), dtype=Dtype(float32), )
paddle.Tensor.astype(Tensor([114085069, 2, 2, 5],"float32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([114085069, 20],"bool"), "int64", )
paddle.Tensor.astype(Tensor([114085069, 20],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([114085069, 20],"int64"), "int64", )
paddle.Tensor.astype(Tensor([1140850690, 2],"bool"), Dtype(bool), )
paddle.Tensor.astype(Tensor([1140850690, 2],"int32"), type(numpy.int64), )
paddle.Tensor.astype(Tensor([1140850690, 2],"int64"), VarType(int64), )
paddle.Tensor.astype(Tensor([1140850690, 2],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([11408507, 4, 5, 10],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([117, 128, 1, 392, 392],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([117, 128, 1, 392, 392],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([11930465, 6, 3, 4, 1, 5],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([12, 190141782],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([12, 21126865, 9],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([12, 9, 21126865],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([1206, 21504, 88],"int32"), "bool", )
paddle.Tensor.astype(Tensor([1238, 12, 1, 392, 392],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1238, 12, 1, 392, 392],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([126761188, 18],"float32"), "float64", )
paddle.Tensor.astype(Tensor([12676119, 6, 3, 1, 2, 5],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([126762, 12, 1, 1500],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([128, 1, 33554433],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([128, 17825793],"float32"), "float16", )
paddle.Tensor.astype(Tensor([128, 17825793],"float32"), Dtype(complex64), )
paddle.Tensor.astype(Tensor([128, 3, 577, 10298],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([128, 3, 92843, 64],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([128, 33554433],"float16"), "int8", )
paddle.Tensor.astype(Tensor([128, 483, 577, 64],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([13, 1, 1, 175515491],"float32"), Dtype(bool), )
paddle.Tensor.astype(Tensor([13, 1, 1, 175515491],"int32"), "float16", )
paddle.Tensor.astype(Tensor([13, 1, 175515491],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([13, 1, 25073642, 7],"int32"), "float16", )
paddle.Tensor.astype(Tensor([13, 1, 25073642, 7],"int32"), Dtype(int8), )
paddle.Tensor.astype(Tensor([13, 1, 25073642, 7],"int64"), Dtype(int8), )
paddle.Tensor.astype(Tensor([13, 1, 3134206, 56],"float32"), Dtype(bool), )
paddle.Tensor.astype(Tensor([13, 1, 7, 25073642],"int32"), Dtype(int8), )
paddle.Tensor.astype(Tensor([13, 1, 7, 25073642],"int64"), Dtype(int8), )
paddle.Tensor.astype(Tensor([13, 1371215, 16, 1, 8],"int64"), "int64", )
paddle.Tensor.astype(Tensor([13, 175515491, 1],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([13, 175515491],"bool"), Dtype(int32), )
paddle.Tensor.astype(Tensor([13, 175515491],"int64"), Dtype(int32), )
paddle.Tensor.astype(Tensor([13, 2, 10969719, 1, 8],"int64"), "int64", )
paddle.Tensor.astype(Tensor([13, 2, 16, 1, 5484860],"int64"), "int64", )
paddle.Tensor.astype(Tensor([13, 2, 16, 4, 1371215],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([13, 2, 16, 4, 1371215],"int64"), "int64", )
paddle.Tensor.astype(Tensor([13, 2, 16, 4, 1371215],"int64"), Dtype(bool), )
paddle.Tensor.astype(Tensor([13, 2, 16, 5484860, 1],"int64"), "int64", )
paddle.Tensor.astype(Tensor([13, 2, 16, 685608, 8],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([13, 2, 16, 685608, 8],"int64"), "int64", )
paddle.Tensor.astype(Tensor([13, 2, 16, 685608, 8],"int64"), Dtype(bool), )
paddle.Tensor.astype(Tensor([13, 2, 21939437, 4, 1],"int64"), "int64", )
paddle.Tensor.astype(Tensor([13, 2, 2742430, 4, 8],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([13, 2, 2742430, 4, 8],"int64"), Dtype(bool), )
paddle.Tensor.astype(Tensor([13, 2, 4, 21939437],"int32"), Dtype(bool), )
paddle.Tensor.astype(Tensor([13, 2, 5484860, 16],"int32"), Dtype(bool), )
paddle.Tensor.astype(Tensor([13, 2, 8, 1371215, 8],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([13, 2, 8, 1371215, 8],"int64"), Dtype(bool), )
paddle.Tensor.astype(Tensor([13, 2, 8, 4, 2742430],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([13, 2, 8, 4, 2742430],"int64"), Dtype(bool), )
paddle.Tensor.astype(Tensor([13, 25073642, 1, 7],"int32"), "float16", )
paddle.Tensor.astype(Tensor([13, 2742430, 16, 4, 1],"int64"), "int64", )
paddle.Tensor.astype(Tensor([13, 2742430, 4, 16],"int32"), Dtype(bool), )
paddle.Tensor.astype(Tensor([13, 3134206, 1, 56],"float32"), Dtype(bool), )
paddle.Tensor.astype(Tensor([13, 3134206, 56],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([13, 3134206, 56],"float32"), Dtype(int64), )
paddle.Tensor.astype(Tensor([13, 342804, 16, 4, 8],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([13, 342804, 16, 4, 8],"int64"), Dtype(bool), )
paddle.Tensor.astype(Tensor([13, 3581949, 7, 7],"int32"), Dtype(int8), )
paddle.Tensor.astype(Tensor([13, 3581949, 7, 7],"int64"), Dtype(int8), )
paddle.Tensor.astype(Tensor([13, 56, 3134206],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([13, 56, 3134206],"float32"), Dtype(int64), )
paddle.Tensor.astype(Tensor([13, 685608, 8, 4, 8],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([13, 685608, 8, 4, 8],"int64"), Dtype(bool), )
paddle.Tensor.astype(Tensor([131073, 8, 64, 64],"float16"), "int8", )
paddle.Tensor.astype(Tensor([139265, 128, 128],"float32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([139265, 128, 128],"int64"), Dtype(int32), )
paddle.Tensor.astype(Tensor([139265, 16, 1024],"float32"), Dtype(complex64), )
paddle.Tensor.astype(Tensor([14, 1, 1, 162978670],"int32"), dtype="float32", )
paddle.Tensor.astype(Tensor([14, 1, 23282668, 7],"int32"), dtype="float32", )
paddle.Tensor.astype(Tensor([14, 23282668, 1, 7],"int32"), dtype="float32", )
paddle.Tensor.astype(Tensor([142606337, 4, 4],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([142606337, 4, 4],"int32"), type(numpy.int64), )
paddle.Tensor.astype(Tensor([142606337, 4, 4],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([1431655766, 3],"float16"), "int16", )
paddle.Tensor.astype(Tensor([1431655766, 3],"float16"), "int8", )
paddle.Tensor.astype(Tensor([1431655766, 3],"float16"), "uint8", )
paddle.Tensor.astype(Tensor([1431655766, 3],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([1431655766, 3],"float16"), type(numpy.int32), )
paddle.Tensor.astype(Tensor([15, 286331154],"float16"), "int16", )
paddle.Tensor.astype(Tensor([15, 286331154],"float16"), "int8", )
paddle.Tensor.astype(Tensor([15, 286331154],"float16"), "uint8", )
paddle.Tensor.astype(Tensor([15158, 3, 224, 224],"int32"), "int32", )
paddle.Tensor.astype(Tensor([15158, 3, 224, 224],"int64"), "int8", )
paddle.Tensor.astype(Tensor([153391690, 4, 7],"float16"), type(numpy.int32), )
paddle.Tensor.astype(Tensor([16, 142606337],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([16, 142606337],"float32"), dtype=Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 142606337],"int32"), VarType(int64), )
paddle.Tensor.astype(Tensor([162978670, 14],"float32"), Dtype(complex64), )
paddle.Tensor.astype(Tensor([16777217, 4, 1, 64],"float16"), "float16", )
paddle.Tensor.astype(Tensor([17409, 2048, 64],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([175515491, 1, 1, 13],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([175570, 1, 114, 114],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([1760573, 8, 9, 18],"int64"), type(bool), )
paddle.Tensor.astype(Tensor([1769, 16, 14, 15, 384],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1769, 16, 14, 15, 384],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([17825793, 128],"float32"), "float16", )
paddle.Tensor.astype(Tensor([17825793, 2, 16, 4, 1],"int64"), "int64", )
paddle.Tensor.astype(Tensor([17825793, 2, 4, 16],"int32"), Dtype(bool), )
paddle.Tensor.astype(Tensor([1862614, 1, 35, 35],"float32"), "float16", )
paddle.Tensor.astype(Tensor([1895, 16, 14, 14, 384],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1895, 16, 14, 14, 384],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([190141782, 1, 1, 12],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([190141782, 1, 3, 4],"int64"), "int32", )
paddle.Tensor.astype(Tensor([190141782, 12, 1, 1],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([190141782, 12],"float32"), "float32", )
paddle.Tensor.astype(Tensor([190141782, 12],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([190141782, 3, 2, 2],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([190141782, 3, 4],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([190141782, 3, 4],"float32"), "complex64", )
paddle.Tensor.astype(Tensor([190141782, 3, 4],"float32"), "int8", )
paddle.Tensor.astype(Tensor([190141782, 3, 4],"float32"), "uint8", )
paddle.Tensor.astype(Tensor([19014179, 120],"float32"), "float32", )
paddle.Tensor.astype(Tensor([19014179, 120],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([19014179, 120],"int64"), type(bool), )
paddle.Tensor.astype(Tensor([19014179, 3, 2, 1, 4, 5],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([19014179, 4, 5, 6],"bool"), "int", )
paddle.Tensor.astype(Tensor([1973791, 1, 1156],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 1, 10007463, 114],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([2, 1, 114, 10007463],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([2, 1, 114, 18837576],"float16"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([2, 1, 18837576, 114],"float16"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([2, 1, 302, 7110874],"float16"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([2, 1, 32595734, 35],"float32"), "float16", )
paddle.Tensor.astype(Tensor([2, 1, 35, 32595734],"float32"), "float16", )
paddle.Tensor.astype(Tensor([2, 1, 7110874, 302],"float16"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([2, 1024, 1114113],"int64"), "int64", )
paddle.Tensor.astype(Tensor([2, 1114113, 1024],"int64"), "int64", )
paddle.Tensor.astype(Tensor([2, 1140850690, 1],"bool"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([2, 1140850690],"bool"), Dtype(int32), )
paddle.Tensor.astype(Tensor([2, 1140850690],"float32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([2, 1140850690],"float32"), dtype=Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 1140850690],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([2, 1140850690],"int32"), VarType(int64), )
paddle.Tensor.astype(Tensor([2, 1140850690],"int32"), type(numpy.int64), )
paddle.Tensor.astype(Tensor([2, 1140850690],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([2, 11408507, 1, 100],"float32"), "float16", )
paddle.Tensor.astype(Tensor([2, 12509, 302, 302],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([2, 162978670, 7],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([2, 162978670, 7],"int32"), type(numpy.int64), )
paddle.Tensor.astype(Tensor([2, 162978670, 7],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([2, 165242, 114, 114],"float16"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([2, 2, 8, 128, 1048577],"float16"), "float16", )
paddle.Tensor.astype(Tensor([2, 2, 8, 1398102, 96],"float16"), "float16", )
paddle.Tensor.astype(Tensor([2, 2, 87382, 128, 96],"float16"), "float16", )
paddle.Tensor.astype(Tensor([2, 2147483649],"float16"), "int8", )
paddle.Tensor.astype(Tensor([2, 2147483649],"float16"), type(numpy.int32), )
paddle.Tensor.astype(Tensor([2, 21846, 8, 128, 96],"float16"), "float16", )
paddle.Tensor.astype(Tensor([2, 23546, 302, 302],"float16"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([2, 256, 4456449],"bool"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([2, 285212673, 4],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([2, 285212673, 4],"float32"), "complex64", )
paddle.Tensor.astype(Tensor([2, 285212673, 4],"float32"), "int8", )
paddle.Tensor.astype(Tensor([2, 285212673, 4],"float32"), "uint8", )
paddle.Tensor.astype(Tensor([2, 285212673, 4],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([2, 285212673, 4],"int32"), type(numpy.int64), )
paddle.Tensor.astype(Tensor([2, 285212673, 4],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([2, 3, 257, 1479703],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([2, 3, 380283564],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([2, 3, 380283564],"float32"), "complex64", )
paddle.Tensor.astype(Tensor([2, 3, 380283564],"float32"), "int8", )
paddle.Tensor.astype(Tensor([2, 3, 380283564],"float32"), "uint8", )
paddle.Tensor.astype(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 660215],"int64"), "float32", )
paddle.Tensor.astype(Tensor([2, 3, 4, 2, 3, 4, 2, 495161, 4],"int64"), "float32", )
paddle.Tensor.astype(Tensor([2, 3, 4, 2, 3, 4, 330108, 3, 4],"int64"), "float32", )
paddle.Tensor.astype(Tensor([2, 3, 4, 2, 3, 660215, 2, 3, 4],"int64"), "float32", )
paddle.Tensor.astype(Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"int64"), "float32", )
paddle.Tensor.astype(Tensor([2, 3, 4, 330108, 3, 4, 2, 3, 4],"int64"), "float32", )
paddle.Tensor.astype(Tensor([2, 3, 5, 76056713],"int32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([2, 3, 5941931, 64],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([2, 3, 63380594, 6],"int32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([2, 3, 660215, 2, 3, 4, 2, 3, 4],"int64"), "float32", )
paddle.Tensor.astype(Tensor([2, 300, 136, 27963],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([2, 300, 27963, 136],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([2, 306783379, 7],"float16"), type(numpy.int32), )
paddle.Tensor.astype(Tensor([2, 38028357, 5, 6],"int32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([2, 4, 1, 285212673],"float32"), "float16", )
paddle.Tensor.astype(Tensor([2, 4, 285212673],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([2, 4, 285212673],"int32"), type(numpy.int64), )
paddle.Tensor.astype(Tensor([2, 4, 285212673],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([2, 4, 2852127, 100],"float32"), "float16", )
paddle.Tensor.astype(Tensor([2, 4, 536870913],"float16"), type(numpy.int32), )
paddle.Tensor.astype(Tensor([2, 495161, 4, 2, 3, 4, 2, 3, 4],"int64"), "float32", )
paddle.Tensor.astype(Tensor([2, 524289, 64, 64],"float16"), "int8", )
paddle.Tensor.astype(Tensor([2, 536870913, 4],"float16"), type(numpy.int32), )
paddle.Tensor.astype(Tensor([2, 61681, 136, 136],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([2, 69362, 257, 64],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([2, 8, 302, 472207],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([2, 8, 4194305, 64],"float16"), "int8", )
paddle.Tensor.astype(Tensor([2, 8, 472207, 302],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([2, 8, 64, 4194305],"float16"), "int8", )
paddle.Tensor.astype(Tensor([2, 87785, 114, 114],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([2, 931307, 35, 35],"float32"), "float16", )
paddle.Tensor.astype(Tensor([20596, 3, 577, 64],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([207, 300, 192, 192],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([207427399, 1, 1, 11],"float32"), "float32", )
paddle.Tensor.astype(Tensor([207427399, 1, 1, 11],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([207427399, 11],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([210, 10865245],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([21126865, 1, 108],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([21298, 107136],"bool"), Dtype(int32), )
paddle.Tensor.astype(Tensor([2147483649, 1, 2],"float16"), "float32", )
paddle.Tensor.astype(Tensor([2147483649, 2],"bfloat16"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([2147483649, 2],"float16"), type(numpy.int32), )
paddle.Tensor.astype(Tensor([2147483649, 2],"int16"), Dtype(int16), )
paddle.Tensor.astype(Tensor([2147483649, 2],"int8"), Dtype(int8), )
paddle.Tensor.astype(Tensor([2147483649, 2],"uint8"), Dtype(uint8), )
paddle.Tensor.astype(Tensor([2177, 1024, 1024],"int64"), "int64", )
paddle.Tensor.astype(Tensor([21846, 2, 8, 128, 96],"float16"), "float16", )
paddle.Tensor.astype(Tensor([22152441, 1, 1, 103],"int64"), "bool", )
paddle.Tensor.astype(Tensor([221848, 1, 10285],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2228225, 1, 1024],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2228225, 1024],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([2228225, 1024],"float32"), "float16", )
paddle.Tensor.astype(Tensor([2228225, 1024],"float32"), Dtype(complex64), )
paddle.Tensor.astype(Tensor([2228225, 1024],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([2228225, 1024],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([2228225, 1024],"float32"), type(numpy.float16), )
paddle.Tensor.astype(Tensor([2228225, 2, 16, 4, 8],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([2228225, 2, 16, 4, 8],"int64"), Dtype(bool), )
paddle.Tensor.astype(Tensor([2228225, 2, 512],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([22369622, 1, 1, 102],"int64"), "bool", )
paddle.Tensor.astype(Tensor([225, 300, 184, 184],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([22591103, 1, 1, 101],"int64"), "bool", )
paddle.Tensor.astype(Tensor([227, 10051548],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([2281701379, 1, 1, 1],"float32"), "float32", )
paddle.Tensor.astype(Tensor([2281701379, 1, 1, 1],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2281701379, 1, 1],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2281701379, 1, 1],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([2281701379, 1, 1],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([2281701379, 1],"bool"), "bool", )
paddle.Tensor.astype(Tensor([2281701379, 1],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2281701379, 1],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([2281701379, 1],"float32"), "bool", )
paddle.Tensor.astype(Tensor([2281701379, 1],"float32"), "int64", )
paddle.Tensor.astype(Tensor([2281701379, 1],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2281701379, 1],"float32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([2281701379, 1],"float32"), Dtype(int64), )
paddle.Tensor.astype(Tensor([2281701379, 1],"int32"), "int64", )
paddle.Tensor.astype(Tensor([2281701379, 1],"int32"), VarType(int64), )
paddle.Tensor.astype(Tensor([2281701379, 1],"int64"), "int32", )
paddle.Tensor.astype(Tensor([2281701379, 1],"int64"), "int64", )
paddle.Tensor.astype(Tensor([2281701379, 1],"int64"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2281701379],"bool"), "bool", )
paddle.Tensor.astype(Tensor([2281701379],"bool"), "float32", )
paddle.Tensor.astype(Tensor([2281701379],"bool"), VarType(bool), )
paddle.Tensor.astype(Tensor([2281701379],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([2281701379],"float32"), "bool", )
paddle.Tensor.astype(Tensor([2281701379],"float32"), "complex64", )
paddle.Tensor.astype(Tensor([2281701379],"float32"), "float16", )
paddle.Tensor.astype(Tensor([2281701379],"float32"), "float32", )
paddle.Tensor.astype(Tensor([2281701379],"float32"), "int16", )
paddle.Tensor.astype(Tensor([2281701379],"float32"), "int64", )
paddle.Tensor.astype(Tensor([2281701379],"float32"), "uint8", )
paddle.Tensor.astype(Tensor([2281701379],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([2281701379],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2281701379],"float32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([2281701379],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2281701379],"float32"), dtype=Dtype(float32), )
paddle.Tensor.astype(Tensor([2281701379],"float32"), type(int), )
paddle.Tensor.astype(Tensor([2281701379],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([2281701379],"int32"), "float64", )
paddle.Tensor.astype(Tensor([2281701379],"int32"), "int32", )
paddle.Tensor.astype(Tensor([2281701379],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([2281701379],"int32"), VarType(bool), )
paddle.Tensor.astype(Tensor([2281701379],"int32"), VarType(int32), )
paddle.Tensor.astype(Tensor([2281701379],"int32"), VarType(int64), )
paddle.Tensor.astype(Tensor([2281701379],"int32"), type(int), )
paddle.Tensor.astype(Tensor([2281701379],"int32"), type(numpy.int64), )
paddle.Tensor.astype(Tensor([2281701379],"int64"), "bool", )
paddle.Tensor.astype(Tensor([2281701379],"int64"), "float16", )
paddle.Tensor.astype(Tensor([2281701379],"int64"), "int16", )
paddle.Tensor.astype(Tensor([2281701379],"int64"), "int32", )
paddle.Tensor.astype(Tensor([2281701379],"int64"), "int64", )
paddle.Tensor.astype(Tensor([2281701379],"int64"), "int8", )
paddle.Tensor.astype(Tensor([2281701379],"int64"), "uint8", )
paddle.Tensor.astype(Tensor([2281701379],"int64"), Dtype(float16), )
paddle.Tensor.astype(Tensor([2281701379],"int64"), Dtype(int32), )
paddle.Tensor.astype(Tensor([2281701379],"int64"), Dtype(int64), )
paddle.Tensor.astype(Tensor([2281701379],"int64"), VarType(int64), )
paddle.Tensor.astype(Tensor([2281701379],"int64"), dtype="float32", )
paddle.Tensor.astype(Tensor([2281701379],"int64"), type(bool), )
paddle.Tensor.astype(Tensor([2281701379],"int64"), type(int), )
paddle.Tensor.astype(Tensor([2281701379],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([228170138, 1, 1, 10],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([228170138, 1, 1, 10],"int64"), "bool", )
paddle.Tensor.astype(Tensor([228170138, 1, 1, 10],"int64"), Dtype(float32), )
paddle.Tensor.astype(Tensor([228170138, 1, 1, 5, 1, 2],"int64"), VarType(float32), )
paddle.Tensor.astype(Tensor([228170138, 10],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([228170138, 10],"float32"), "float32", )
paddle.Tensor.astype(Tensor([228170138, 10],"float32"), Dtype(int64), )
paddle.Tensor.astype(Tensor([228170138, 10],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([22817014, 1, 1, 100],"int64"), "bool", )
paddle.Tensor.astype(Tensor([22817014, 1, 100],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([22817014, 10, 10],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([22817014, 100],"float32"), "float32", )
paddle.Tensor.astype(Tensor([22817014, 100],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([23498, 24276, 4],"int32"), "bool", )
paddle.Tensor.astype(Tensor([23860930, 6, 3, 1, 2, 5],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([246, 300, 176, 176],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([253522376, 1, 3, 3],"int64"), "int32", )
paddle.Tensor.astype(Tensor([253522376, 3, 3],"float32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([253522376, 3, 3],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([253522376, 3, 3],"int64"), "int32", )
paddle.Tensor.astype(Tensor([253522376, 9],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([25352238, 10, 3, 3],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([25352238, 3, 5, 6],"int32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([256, 8912897],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([25928425, 2, 44],"float32"), "float16", )
paddle.Tensor.astype(Tensor([26527, 21504, 4],"int32"), "bool", )
paddle.Tensor.astype(Tensor([268435457, 4, 4],"float16"), type(numpy.int32), )
paddle.Tensor.astype(Tensor([27163112, 3, 28],"float32"), "float16", )
paddle.Tensor.astype(Tensor([2716312, 4, 5, 6, 7],"bool"), "int", )
paddle.Tensor.astype(Tensor([28169153, 9, 9],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([285212673, 1, 1, 4, 1, 2],"int64"), Dtype(float16), )
paddle.Tensor.astype(Tensor([285212673, 1, 1, 4, 1, 2],"int64"), Dtype(float32), )
paddle.Tensor.astype(Tensor([285212673, 1, 1, 4, 1, 2],"int64"), VarType(float32), )
paddle.Tensor.astype(Tensor([285212673, 4, 2],"bool"), "int64", )
paddle.Tensor.astype(Tensor([285212673, 4, 2],"int64"), Dtype(int64), )
paddle.Tensor.astype(Tensor([285212673, 8],"float32"), dtype=Dtype(float32), )
paddle.Tensor.astype(Tensor([2910334, 784],"float32"), Dtype(complex64), )
paddle.Tensor.astype(Tensor([29128, 147456],"float16"), VarType(float32), )
paddle.Tensor.astype(Tensor([29826162, 6, 3, 4, 2, 1],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 12676119, 3, 4, 1, 5],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([3, 1431655766],"float16"), type(numpy.int32), )
paddle.Tensor.astype(Tensor([3, 15211343, 5, 10],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([3, 2, 2, 190141782],"float32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([3, 2, 2, 190141782],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([3, 2, 38028357, 10],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([3, 2, 76056713, 5],"float32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([3, 23860930, 3, 4, 1, 5],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 25352238, 3, 1, 2, 5],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([3, 25352238, 5, 6],"bool"), "int", )
paddle.Tensor.astype(Tensor([3, 3621749, 5, 6, 7],"bool"), "int", )
paddle.Tensor.astype(Tensor([3, 38028357, 2, 10],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([3, 4, 19014179, 10],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([3, 4, 31690297, 6],"bool"), "int", )
paddle.Tensor.astype(Tensor([3, 4, 4, 5, 9507090],"int64"), "float32", )
paddle.Tensor.astype(Tensor([3, 4, 4, 6790778, 7],"int64"), "float32", )
paddle.Tensor.astype(Tensor([3, 4, 4527186, 6, 7],"bool"), "int", )
paddle.Tensor.astype(Tensor([3, 4, 5, 38028357],"bool"), "int", )
paddle.Tensor.astype(Tensor([3, 4, 5, 38028357],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([3, 4, 5, 5432623, 7],"bool"), "int", )
paddle.Tensor.astype(Tensor([3, 4, 5, 6, 6338060],"bool"), "int", )
paddle.Tensor.astype(Tensor([3, 4, 5432623, 5, 7],"int64"), "float32", )
paddle.Tensor.astype(Tensor([3, 47721859, 3, 1, 2, 5],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 5432623, 4, 5, 7],"int64"), "float32", )
paddle.Tensor.astype(Tensor([3, 59652324, 3, 4, 2, 1],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 6, 11930465, 4, 1, 5],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 6, 12676119, 1, 2, 5],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([3, 6, 23860930, 1, 2, 5],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 6, 29826162, 4, 2, 1],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 6, 3, 1, 15907287, 5],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 6, 3, 1, 2, 21126865],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([3, 6, 3, 1, 2, 39768216],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 6, 3, 1, 8450746, 5],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([3, 6, 3, 15907287, 1, 5],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 6, 3, 39768216, 2, 1],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 6, 3, 4, 1, 10563433],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([3, 6, 3, 4, 1, 19884108],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 6, 3, 4, 19884108, 1],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 6, 3, 4, 2112687, 5],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 6, 3, 4225373, 2, 5],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([3, 6, 3, 8450746, 1, 5],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([3, 6, 6338060, 4, 1, 5],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([3, 760567127],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([3, 760567127],"int32"), type(numpy.int64), )
paddle.Tensor.astype(Tensor([3, 760567127],"int64"), type(bool), )
paddle.Tensor.astype(Tensor([3, 760567127],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([3, 76056713, 2, 5],"float32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([30, 76056713],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([30, 76056713],"float32"), dtype="bool", )
paddle.Tensor.astype(Tensor([30, 76056713],"int64"), type(bool), )
paddle.Tensor.astype(Tensor([300, 7605672],"int64"), type(bool), )
paddle.Tensor.astype(Tensor([3128, 8, 302, 302],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([31690297, 3, 2, 3, 4],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([3169030, 3, 4, 4, 5, 3],"int64"), "float32", )
paddle.Tensor.astype(Tensor([31715, 135424],"float16"), VarType(float32), )
paddle.Tensor.astype(Tensor([32, 13, 13, 12, 35160],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([32, 13, 13, 35160, 12],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([32, 13, 38090, 12, 12],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([32, 15, 15, 316903],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([32, 15, 18569, 256],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([32, 16, 4456449],"float32"), Dtype(complex64), )
paddle.Tensor.astype(Tensor([32, 18569, 15, 256],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([32, 3, 23767723],"float32"), Dtype(complex64), )
paddle.Tensor.astype(Tensor([32, 38090, 13, 12, 12],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([32, 69633, 1024],"float32"), Dtype(complex64), )
paddle.Tensor.astype(Tensor([32, 71303169],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([325957340, 1, 1, 7],"int32"), "float16", )
paddle.Tensor.astype(Tensor([325957340, 1, 1, 7],"int32"), dtype="float32", )
paddle.Tensor.astype(Tensor([325957340, 7],"bool"), Dtype(int32), )
paddle.Tensor.astype(Tensor([325957340, 7],"int64"), Dtype(int32), )
paddle.Tensor.astype(Tensor([330108, 3, 4, 2, 3, 4, 2, 3, 4],"int64"), "float32", )
paddle.Tensor.astype(Tensor([330484, 1, 114, 114],"float16"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([34664, 123904],"float16"), VarType(float32), )
paddle.Tensor.astype(Tensor([3521145, 3, 6, 6, 6],"float32"), "float32", )
paddle.Tensor.astype(Tensor([3521145, 3, 6, 6, 6],"int32"), "int32", )
paddle.Tensor.astype(Tensor([3521145, 3, 6, 6, 6],"int64"), "int64", )
paddle.Tensor.astype(Tensor([3521145, 6, 6, 6, 3],"float32"), "float32", )
paddle.Tensor.astype(Tensor([35651585, 1, 64],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([35651585, 2, 32],"float32"), "float16", )
paddle.Tensor.astype(Tensor([35651585, 4, 2, 8],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([35651585, 64],"int64"), Dtype(int64), )
paddle.Tensor.astype(Tensor([360, 6338060],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([380283564, 3, 2],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([380283564, 3, 2],"float32"), "complex64", )
paddle.Tensor.astype(Tensor([380283564, 3, 2],"float32"), "int16", )
paddle.Tensor.astype(Tensor([380283564, 3, 2],"float32"), "int8", )
paddle.Tensor.astype(Tensor([380283564, 3, 2],"float32"), "uint8", )
paddle.Tensor.astype(Tensor([3854226, 592],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([39613, 15, 15, 256],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([4, 1073741825],"float16"), type(numpy.int32), )
paddle.Tensor.astype(Tensor([4, 1073741825],"uint8"), "uint8", )
paddle.Tensor.astype(Tensor([4, 11369, 224, 224],"int32"), "int32", )
paddle.Tensor.astype(Tensor([4, 11369, 224, 224],"int64"), "int8", )
paddle.Tensor.astype(Tensor([4, 2, 536870913],"uint8"), "uint8", )
paddle.Tensor.astype(Tensor([4, 2640859, 6, 6, 6],"float32"), "float32", )
paddle.Tensor.astype(Tensor([4, 2640859, 6, 6, 6],"int32"), "int32", )
paddle.Tensor.astype(Tensor([4, 2640859, 6, 6, 6],"int64"), "int64", )
paddle.Tensor.astype(Tensor([4, 285212673, 2],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([4, 285212673, 2],"float32"), "complex64", )
paddle.Tensor.astype(Tensor([4, 285212673, 2],"float32"), "int16", )
paddle.Tensor.astype(Tensor([4, 285212673, 2],"float32"), "int8", )
paddle.Tensor.astype(Tensor([4, 285212673, 2],"float32"), "uint8", )
paddle.Tensor.astype(Tensor([4, 3, 190141782],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([4, 3, 190141782],"float32"), "complex64", )
paddle.Tensor.astype(Tensor([4, 3, 190141782],"float32"), "int16", )
paddle.Tensor.astype(Tensor([4, 3, 190141782],"float32"), "int8", )
paddle.Tensor.astype(Tensor([4, 3, 190141782],"float32"), "uint8", )
paddle.Tensor.astype(Tensor([4, 3, 224, 848848],"int32"), "int32", )
paddle.Tensor.astype(Tensor([4, 3, 224, 848848],"int64"), "int8", )
paddle.Tensor.astype(Tensor([4, 3, 5281717, 6, 6],"float32"), "float32", )
paddle.Tensor.astype(Tensor([4, 3, 5281717, 6, 6],"int32"), "int32", )
paddle.Tensor.astype(Tensor([4, 3, 5281717, 6, 6],"int64"), "int64", )
paddle.Tensor.astype(Tensor([4, 3, 6, 5281717, 6],"float32"), "float32", )
paddle.Tensor.astype(Tensor([4, 3, 6, 5281717, 6],"int32"), "int32", )
paddle.Tensor.astype(Tensor([4, 3, 6, 5281717, 6],"int64"), "int64", )
paddle.Tensor.astype(Tensor([4, 3, 6, 6, 5281717],"float32"), "float32", )
paddle.Tensor.astype(Tensor([4, 3, 6, 6, 5281717],"int32"), "int32", )
paddle.Tensor.astype(Tensor([4, 3, 6, 6, 5281717],"int64"), "int64", )
paddle.Tensor.astype(Tensor([4, 3, 848848, 224],"int32"), "int32", )
paddle.Tensor.astype(Tensor([4, 3, 848848, 224],"int64"), "int8", )
paddle.Tensor.astype(Tensor([4, 4, 268435457],"uint8"), "uint8", )
paddle.Tensor.astype(Tensor([4, 570425345],"int32"), VarType(int64), )
paddle.Tensor.astype(Tensor([4, 570425345],"int32"), type(numpy.int64), )
paddle.Tensor.astype(Tensor([4, 570425345],"int64"), VarType(int64), )
paddle.Tensor.astype(Tensor([4, 570425345],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([40744668, 1, 1, 56],"float32"), Dtype(bool), )
paddle.Tensor.astype(Tensor([40744668, 2, 28],"float32"), "float16", )
paddle.Tensor.astype(Tensor([4074467, 4, 4, 5, 7],"int64"), "float32", )
paddle.Tensor.astype(Tensor([412, 300, 136, 136],"bool"), type(bool), )
paddle.Tensor.astype(Tensor([41698712, 1, 1, 103],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([42107523, 1, 1, 102],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([42524429, 1, 1, 101],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([4294967297, 1, 1, 1],"float16"), "float32", )
paddle.Tensor.astype(Tensor([4294967297],"float16"), "float16", )
paddle.Tensor.astype(Tensor([4294967297],"float16"), "float32", )
paddle.Tensor.astype(Tensor([4294967297],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([4294967297],"float16"), Dtype(int32), )
paddle.Tensor.astype(Tensor([4294967297],"float16"), type(numpy.int32), )
paddle.Tensor.astype(Tensor([4294967297],"uint8"), "uint8", )
paddle.Tensor.astype(Tensor([42949673, 1, 1, 100],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([429496730, 1, 1, 10],"float16"), Dtype(float16), )
paddle.Tensor.astype(Tensor([4456449, 2, 8, 4, 8],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([4456449, 2, 8, 4, 8],"int64"), Dtype(bool), )
paddle.Tensor.astype(Tensor([4456449, 512],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([4456449, 512],"float32"), "float16", )
paddle.Tensor.astype(Tensor([4456449, 512],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([46241, 3, 257, 64],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([46422, 192, 16, 16],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([46565335, 1, 7, 7],"int32"), Dtype(int8), )
paddle.Tensor.astype(Tensor([46565335, 1, 7, 7],"int64"), Dtype(int8), )
paddle.Tensor.astype(Tensor([47092, 1, 302, 302],"float16"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([5, 10, 15211343, 3],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([5, 10, 3, 15211343],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([5, 11408507, 2, 1, 4, 5],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([5, 3, 2, 1, 15211343, 5],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([5, 3, 2, 1, 4, 19014179],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([5, 3, 2, 3802836, 4, 5],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([5, 3, 7605672, 1, 4, 5],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([5, 456340276],"int32"), type(numpy.int64), )
paddle.Tensor.astype(Tensor([5, 456340276],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([5, 50704476, 3, 3],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([5, 858993460],"float16"), type(numpy.int32), )
paddle.Tensor.astype(Tensor([52, 1, 6268411, 7],"int32"), Dtype(int8), )
paddle.Tensor.astype(Tensor([52, 1, 6268411, 7],"int64"), Dtype(int8), )
paddle.Tensor.astype(Tensor([52, 1, 7, 6268411],"int32"), Dtype(int8), )
paddle.Tensor.astype(Tensor([52, 1, 7, 6268411],"int64"), Dtype(int8), )
paddle.Tensor.astype(Tensor([52, 895488, 7, 7],"int32"), Dtype(int8), )
paddle.Tensor.astype(Tensor([52, 895488, 7, 7],"int64"), Dtype(int8), )
paddle.Tensor.astype(Tensor([545, 1024, 4096],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([557057, 1, 1, 4096],"float32"), "float16", )
paddle.Tensor.astype(Tensor([569, 4010020],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([570425345, 1, 2, 2],"float32"), "int64", )
paddle.Tensor.astype(Tensor([570425345, 1, 2, 2],"int32"), "int64", )
paddle.Tensor.astype(Tensor([570425345, 4],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([570425345, 4],"int32"), type(numpy.int64), )
paddle.Tensor.astype(Tensor([570425345, 4],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([57042535, 2, 2, 10],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([57042535, 40],"int64"), type(bool), )
paddle.Tensor.astype(Tensor([5704254, 1, 20, 20],"int64"), Dtype(int8), )
paddle.Tensor.astype(Tensor([5704254, 4, 1, 100],"float32"), "float16", )
paddle.Tensor.astype(Tensor([58505164, 39],"float32"), Dtype(complex64), )
paddle.Tensor.astype(Tensor([59471, 38367],"float32"), "bool", )
paddle.Tensor.astype(Tensor([59471, 38367],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([6, 2347430, 9, 18],"int64"), type(bool), )
paddle.Tensor.astype(Tensor([6, 8, 2640859, 18],"int64"), type(bool), )
paddle.Tensor.astype(Tensor([6, 8, 9, 5281717],"int64"), type(bool), )
paddle.Tensor.astype(Tensor([60044774, 38],"float32"), dtype="float32", )
paddle.Tensor.astype(Tensor([61956, 36828],"float32"), "bool", )
paddle.Tensor.astype(Tensor([61956, 36828],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([63380594, 1, 3, 3, 4],"int64"), "int32", )
paddle.Tensor.astype(Tensor([63380594, 3, 2, 2, 3],"float32"), "int64", )
paddle.Tensor.astype(Tensor([63380594, 3, 2, 2, 3],"int32"), "int64", )
paddle.Tensor.astype(Tensor([6338060, 6, 3, 4, 1, 5],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([67108865, 64],"float16"), "float16", )
paddle.Tensor.astype(Tensor([69633, 128, 256],"float32"), Dtype(int32), )
paddle.Tensor.astype(Tensor([69633, 128, 256],"int64"), Dtype(int32), )
paddle.Tensor.astype(Tensor([7, 20, 30678338],"float16"), "int16", )
paddle.Tensor.astype(Tensor([7, 20, 30678338],"float16"), "int8", )
paddle.Tensor.astype(Tensor([7, 20, 30678338],"float16"), "uint8", )
paddle.Tensor.astype(Tensor([7, 306783379, 2],"float16"), "int16", )
paddle.Tensor.astype(Tensor([7, 306783379, 2],"float16"), "int8", )
paddle.Tensor.astype(Tensor([7, 306783379, 2],"float16"), "uint8", )
paddle.Tensor.astype(Tensor([71303169, 1, 32],"float32"), "float32", )
paddle.Tensor.astype(Tensor([71303169, 1, 32],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([71303169, 2, 16],"float32"), "float16", )
paddle.Tensor.astype(Tensor([71303169, 32],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([71303169, 32],"float32"), dtype=Dtype(float32), )
paddle.Tensor.astype(Tensor([7130317, 10, 32],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([713032, 128, 5, 5],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([71304, 1, 32000],"float32"), "float32", )
paddle.Tensor.astype(Tensor([727584, 56, 56],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([727584, 56, 56],"float32"), Dtype(int64), )
paddle.Tensor.astype(Tensor([742742, 3, 1024],"float32"), Dtype(complex64), )
paddle.Tensor.astype(Tensor([7480989, 305],"float32"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([75245, 30324, 1],"bool"), "int32", )
paddle.Tensor.astype(Tensor([75245, 30324],"bool"), "int32", )
paddle.Tensor.astype(Tensor([760567127, 3],"bool"), "bool", )
paddle.Tensor.astype(Tensor([760567127, 3],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([760567127, 3],"int32"), Dtype(float64), )
paddle.Tensor.astype(Tensor([760567127, 3],"int32"), type(numpy.int64), )
paddle.Tensor.astype(Tensor([760567127, 3],"int64"), type(bool), )
paddle.Tensor.astype(Tensor([760567127, 3],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([76056713, 30],"float32"), dtype="bool", )
paddle.Tensor.astype(Tensor([8, 1188387, 4, 4, 5, 3],"int64"), "float32", )
paddle.Tensor.astype(Tensor([8, 285212673],"bool"), Dtype(bool), )
paddle.Tensor.astype(Tensor([8, 3, 1584515, 4, 5, 3],"int64"), "float32", )
paddle.Tensor.astype(Tensor([8, 3, 4, 1584515, 5, 3],"int64"), "float32", )
paddle.Tensor.astype(Tensor([8, 3, 4, 4, 1980644, 3],"int64"), "float32", )
paddle.Tensor.astype(Tensor([8, 3, 4, 4, 5, 1188387],"int64"), "float32", )
paddle.Tensor.astype(Tensor([8, 536870913],"bfloat16"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([8, 536870913],"int16"), Dtype(int16), )
paddle.Tensor.astype(Tensor([8, 536870913],"int8"), Dtype(int8), )
paddle.Tensor.astype(Tensor([8, 536870913],"uint8"), Dtype(uint8), )
paddle.Tensor.astype(Tensor([80, 3, 148549, 64],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([80, 3, 577, 16477],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([80, 773, 577, 64],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([81489335, 4, 7],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([81489335, 4, 7],"int32"), type(numpy.int64), )
paddle.Tensor.astype(Tensor([81489335, 4, 7],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([83837, 27216, 1],"bool"), "int32", )
paddle.Tensor.astype(Tensor([83837, 27216],"bool"), "int32", )
paddle.Tensor.astype(Tensor([8388609, 512],"float16"), "int8", )
paddle.Tensor.astype(Tensor([84507459, 1, 3, 3, 3],"int64"), "int32", )
paddle.Tensor.astype(Tensor([84507459, 3, 3, 3],"int64"), "int32", )
paddle.Tensor.astype(Tensor([85, 12, 1500, 1500],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([858993460, 1, 5],"float16"), "float32", )
paddle.Tensor.astype(Tensor([8671, 16, 257, 64],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([8912897, 2, 16, 1, 8],"int64"), "int64", )
paddle.Tensor.astype(Tensor([8912897, 256, 1],"bool"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([8912897, 256],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([892, 5000, 512],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([93759, 13, 13, 12, 12],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([93991, 24276, 1],"bool"), "int32", )
paddle.Tensor.astype(Tensor([93991, 24276],"bool"), "int32", )
paddle.Tensor.astype(Tensor([95070891, 1, 1, 24],"float32"), "float32", )
paddle.Tensor.astype(Tensor([95070891, 3, 8],"float32"), "int64", )
paddle.Tensor.astype(Tensor([95070891, 3, 8],"int32"), "int64", )
paddle.Tensor.astype(Tensor([99204408, 1, 1, 23],"float32"), "float32", )
paddle.Tensor.atanh(Tensor([1, 1431655766, 3],"float16"), )
paddle.Tensor.atanh(Tensor([1, 2, 1140850690],"float32"), )
paddle.Tensor.atanh(Tensor([1, 2, 2147483649],"float16"), )
paddle.Tensor.atanh(Tensor([1, 760567127, 3],"float32"), )
paddle.Tensor.atanh(Tensor([1073741825, 4],"float16"), )
paddle.Tensor.atanh(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.atanh(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.atanh(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.atanh(Tensor([2281701379],"float32"), )
paddle.Tensor.atanh(Tensor([380283564, 2, 3],"float32"), )
paddle.Tensor.atanh(Tensor([4294967297],"float16"), )
paddle.Tensor.atanh(Tensor([715827883, 2, 3],"float16"), )
paddle.Tensor.atanh(Tensor([760567127, 3],"float32"), )
paddle.Tensor.bmm(Tensor([1, 16, 3],"float32"), Tensor([1, 3, 760567127],"float32"), )
paddle.Tensor.bmm(Tensor([1, 4, 3],"float32"), Tensor([1, 3, 760567127],"float32"), )
paddle.Tensor.bmm(Tensor([1, 760567127, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([11883862, 64, 3],"float32"), Tensor([11883862, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([131678, 5776, 3],"float32"), Tensor([131678, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([185686, 4096, 3],"float32"), Tensor([185686, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([190141782, 4, 3],"float32"), Tensor([190141782, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([3977, 191277, 3],"float32"), Tensor([3977, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([4229, 179876, 3],"float32"), Tensor([4229, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([4462, 170476, 3],"float32"), Tensor([4462, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([47535446, 16, 3],"float32"), Tensor([47535446, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([4969, 153088, 3],"float32"), Tensor([4969, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([5065, 150164, 3],"float32"), Tensor([5065, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([5203, 146200, 3],"float32"), Tensor([5203, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([5309, 143264, 3],"float32"), Tensor([5309, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([6339, 120000, 3],"float32"), Tensor([6339, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([657931, 1156, 3],"float32"), Tensor([657931, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([7012, 108472, 3],"float32"), Tensor([7012, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([7761, 98000, 3],"float32"), Tensor([7761, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([914144, 832, 3],"float32"), Tensor([914144, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([93898, 8100, 3],"float32"), Tensor([93898, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([970112, 784, 3],"float32"), Tensor([970112, 3, 2],"float32"), )
paddle.Tensor.cast(Tensor([1, 1, 1, 2281701379],"bool"), "bool", )
paddle.Tensor.cast(Tensor([1, 1, 1, 2281701379],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([1, 1, 1, 2281701379],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 1, 1, 2281701379],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([1, 1, 1, 2281701379],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 1, 1, 2281701379],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 1, 10, 228170138],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 1, 100, 22817014],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 1, 100, 22817014],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 1, 101, 22591103],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 1, 102, 22369622],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 1, 114085069, 20],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 1, 1140850690, 2],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([1, 1, 11408507, 200],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 1, 13501192, 169],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([1, 1, 14533130, 157],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([1, 1, 15735872, 145],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([1, 1, 2, 1140850690],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 1, 200, 11408507],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 1, 20192048, 113],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([1, 1, 2048, 2097153],"float16"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 1, 20933041, 109],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([1, 1, 2097153, 2048],"float16"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 1, 22152441, 103],"bool"), "bool", )
paddle.Tensor.cast(Tensor([1, 1, 22369622, 102],"bool"), "bool", )
paddle.Tensor.cast(Tensor([1, 1, 22369622, 102],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 1, 22591103, 101],"bool"), "bool", )
paddle.Tensor.cast(Tensor([1, 1, 22591103, 101],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 1, 2281701379, 1],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 1, 2281701379, 1],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([1, 1, 2281701379, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 1, 2281701379],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 1, 228170138, 10],"bool"), "bool", )
paddle.Tensor.cast(Tensor([1, 1, 228170138, 10],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 1, 22817014, 100],"bool"), "bool", )
paddle.Tensor.cast(Tensor([1, 1, 22817014, 100],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 1, 22817014, 100],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 1, 32, 71303169],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 1, 32, 71303169],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 1, 3565159, 640],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 1, 4, 570425345],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 1, 456340276, 5],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([1, 1, 570425345, 4],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 1, 570425345, 4],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([1, 1, 640, 3565159],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 1, 71303169, 32],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 1, 71303169, 32],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 1, 760567127, 3],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([1, 10, 1, 228170138],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 10, 1, 228170138],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 10, 28521268, 8],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 10, 891290, 256],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 100, 1, 22817014],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 100, 237678, 96],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 100, 2852127, 8],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 100, 356516, 64],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 1024, 1, 2228225],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([1, 1024, 139265, 16],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([1, 1024, 17409, 128],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([1, 1024, 2228225],"float32"), VarType(float32), )
paddle.Tensor.cast(Tensor([1, 1024, 23211, 96],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([1, 1025, 2048, 2048],"float16"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 114085069, 1, 20],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 1140850690, 1, 2],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 1140850690, 1, 2],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([1, 11883862, 192],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 128, 17825793],"float32"), VarType(float32), )
paddle.Tensor.cast(Tensor([1, 131072, 1, 17409],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 131072, 1089, 16],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 13501192, 1, 169],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([1, 1398102, 1024, 3],"uint8"), "int32", )
paddle.Tensor.cast(Tensor([1, 142606337, 1, 16],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([1, 142606337, 1, 16],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 142606337, 4, 4],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 14533130, 1, 157],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([1, 14701, 155208],"int32"), "float32", )
paddle.Tensor.cast(Tensor([1, 15735872, 1, 145],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([1, 15845149, 12, 12],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 15845149, 12, 12],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 16, 11883862, 12],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 16, 11883862, 12],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 16, 12, 11883862],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 16, 12, 11883862],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 17, 1, 134217729],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 17, 134217729, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 17825793, 1, 128],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([1, 17980, 126903],"int32"), "float32", )
paddle.Tensor.cast(Tensor([1, 19780, 115354],"int32"), "float32", )
paddle.Tensor.cast(Tensor([1, 1980644, 1152],"float32"), VarType(float32), )
paddle.Tensor.cast(Tensor([1, 2, 1, 1140850690],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 2, 570425345, 2],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 20192048, 1, 113],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([1, 2048, 1, 1114113],"float32"), dtype=Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([1, 2048, 11606, 96],"float32"), dtype=Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([1, 20524, 111173],"int32"), "float32", )
paddle.Tensor.cast(Tensor([1, 20933041, 1, 109],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([1, 219311, 102, 102],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 21955, 103927],"int32"), "float32", )
paddle.Tensor.cast(Tensor([1, 22152441, 1, 103],"bool"), "bool", )
paddle.Tensor.cast(Tensor([1, 2228225, 32, 32],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 2228225, 32, 32],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 223675, 101, 101],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 22369622, 1, 102],"bool"), "bool", )
paddle.Tensor.cast(Tensor([1, 22591103, 1, 101],"bool"), "bool", )
paddle.Tensor.cast(Tensor([1, 226, 10096024],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 2281701379, 1, 1],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 2281701379, 1, 1],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([1, 2281701379, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 2281701379, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 2281701379],"bool"), "int32", )
paddle.Tensor.cast(Tensor([1, 2281701379],"bool"), "int64", )
paddle.Tensor.cast(Tensor([1, 2281701379],"bool"), VarType(int64), )
paddle.Tensor.cast(Tensor([1, 2281701379],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 2281701379],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 2281701379],"float32"), VarType(bool), )
paddle.Tensor.cast(Tensor([1, 2281701379],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 2281701379],"int32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([1, 2281701379],"int64"), "float32", )
paddle.Tensor.cast(Tensor([1, 2281701379],"int64"), "int64", )
paddle.Tensor.cast(Tensor([1, 228170138, 1, 10],"bool"), "bool", )
paddle.Tensor.cast(Tensor([1, 22817014, 1, 100],"bool"), "bool", )
paddle.Tensor.cast(Tensor([1, 22817014, 10, 10],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 228171, 100, 100],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([1, 228171, 100, 100],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 23767723, 1, 96],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([1, 23767723, 1, 96],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 23767723, 1, 96],"float32"), dtype=Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([1, 285212673, 1, 8],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 285212673, 2, 4],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 2970966, 768],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 35651585, 1, 64],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 4456449, 512],"float32"), VarType(float32), )
paddle.Tensor.cast(Tensor([1, 456340276, 1, 5],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([1, 5, 1, 456340276],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 5, 1782580, 256],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 5571, 640, 640],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 570425345, 1, 4],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([1, 570425345, 4],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 57043, 200, 200],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 5941931, 384],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1, 6, 1, 380283564],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 6, 11883862, 32],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 6, 1485483, 256],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 6, 16, 23767723],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 6, 23767723, 16],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 6, 32, 11883862],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 686, 1024, 6115],"uint8"), "int32", )
paddle.Tensor.cast(Tensor([1, 686, 2086962, 3],"uint8"), "int32", )
paddle.Tensor.cast(Tensor([1, 7, 1, 325957340],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 7, 1273271, 256],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 71303169, 32],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 760567127, 1, 3],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([1, 760567127, 3],"int32"), "float32", )
paddle.Tensor.cast(Tensor([1, 8912897, 1, 256],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([1, 8912897, 16, 16],"float32"), "float32", )
paddle.Tensor.cast(Tensor([1, 8912897, 256],"float32"), VarType(float32), )
paddle.Tensor.cast(Tensor([10, 10, 22817014],"int64"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([10, 10, 22817014],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([10, 114085069, 2],"int64"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([10, 114085069, 2],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([10, 2, 114085069],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([10, 228170138],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([10, 228170138],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([10, 228170138],"float32"), Dtype(int64), )
paddle.Tensor.cast(Tensor([10, 228170138],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([10, 22817014, 10],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([10, 22817014, 10],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([10, 22817014, 10],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([10, 5000, 45635],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([10, 6, 38028357],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([10, 60, 3802836],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([10, 60, 3802836],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([10, 60, 3802836],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([10, 76056713, 3],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([100, 22817014],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([100, 22817014],"int64"), "bool", )
paddle.Tensor.cast(Tensor([100, 42949673],"float16"), VarType(float32), )
paddle.Tensor.cast(Tensor([1000, 2281702],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1000, 2281702],"int64"), "bool", )
paddle.Tensor.cast(Tensor([1000, 4294968],"float16"), VarType(float32), )
paddle.Tensor.cast(Tensor([1000, 4294968],"float16"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([1003, 4282121],"float16"), VarType(float32), )
paddle.Tensor.cast(Tensor([1008, 4260881],"float16"), VarType(float32), )
paddle.Tensor.cast(Tensor([10080, 426089],"float16"), VarType(float32), )
paddle.Tensor.cast(Tensor([10096024, 1, 1, 226],"int64"), dtype="float32", )
paddle.Tensor.cast(Tensor([10105, 225800],"bool"), "int", )
paddle.Tensor.cast(Tensor([10186167, 7, 32],"float32"), "bool", )
paddle.Tensor.cast(Tensor([10186167, 7, 32],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([1024, 2228225, 1, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 2228225, 1, 1],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([1024, 2228225],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 256, 1, 1, 8705],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 256, 1, 8705, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 256, 1, 8705],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([1024, 256, 8705, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 256, 8705, 1],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([1024, 512, 1, 4353],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([1024, 512, 4353, 1],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([1024, 640, 1, 1, 3482],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 640, 1, 3482, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 640, 3482, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1025, 1, 2048, 2048],"float16"), Dtype(float16), )
paddle.Tensor.cast(Tensor([103639, 22016],"float32"), "bfloat16", )
paddle.Tensor.cast(Tensor([103713700, 11, 2],"int64"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([103713700, 11, 2],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([1048577, 32, 128],"float16"), "float16", )
paddle.Tensor.cast(Tensor([1048577, 4096],"float16"), "float16", )
paddle.Tensor.cast(Tensor([1089, 131072, 1, 16],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([11, 103713700, 2],"int64"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([11, 103713700, 2],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([11, 11, 18857037],"int64"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([11, 11, 18857037],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([11008, 207277],"float32"), "bfloat16", )
paddle.Tensor.cast(Tensor([11008, 207277],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([11008, 390168],"float16"), "float16", )
paddle.Tensor.cast(Tensor([110464, 20656],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([114085069, 1, 1, 20],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([114085069, 10, 2],"int64"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([114085069, 10, 2],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([114085069, 2, 10],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([114085069, 20],"bool"), "int64", )
paddle.Tensor.cast(Tensor([114085069, 20],"int64"), "int64", )
paddle.Tensor.cast(Tensor([1140850690, 1, 1, 2],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([1140850690, 2],"float32"), "uint8", )
paddle.Tensor.cast(Tensor([1140850690, 2],"float32"), Dtype(int64), )
paddle.Tensor.cast(Tensor([1140850690, 2],"float32"), dtype=Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([1140850690, 2],"float32"), dtype=Dtype(bool), )
paddle.Tensor.cast(Tensor([1140850690, 2],"float32"), dtype=Dtype(complex64), )
paddle.Tensor.cast(Tensor([1140850690, 2],"float32"), dtype=Dtype(float64), )
paddle.Tensor.cast(Tensor([1140850690, 2],"float32"), dtype=Dtype(int16), )
paddle.Tensor.cast(Tensor([1140850690, 2],"float32"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([1140850690, 2],"float32"), dtype=Dtype(int64), )
paddle.Tensor.cast(Tensor([1140850690, 2],"float32"), dtype=Dtype(int8), )
paddle.Tensor.cast(Tensor([1140850690, 2],"float32"), dtype=Dtype(uint8), )
paddle.Tensor.cast(Tensor([1140850690, 2],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([1140850690, 2],"int64"), "bool", )
paddle.Tensor.cast(Tensor([11408507, 10, 20],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([11606, 2048, 1, 96],"float32"), dtype=Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([11883862, 1, 192],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([12, 1, 1, 190141782],"float32"), dtype="float32", )
paddle.Tensor.cast(Tensor([12, 1, 1, 190141782],"int32"), dtype="float32", )
paddle.Tensor.cast(Tensor([12, 1, 1, 190141782],"int64"), dtype="float32", )
paddle.Tensor.cast(Tensor([12, 1, 190141782],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([12, 1, 19014179, 10],"float32"), dtype="float32", )
paddle.Tensor.cast(Tensor([12, 1, 27163112, 7],"float32"), dtype="float32", )
paddle.Tensor.cast(Tensor([12, 1, 27163112, 7],"int32"), dtype="float32", )
paddle.Tensor.cast(Tensor([12, 1, 841336, 226],"int64"), dtype="float32", )
paddle.Tensor.cast(Tensor([12, 10, 19014179],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([12, 11883862, 16],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([12, 12, 15845149],"int64"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([12, 12, 15845149],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([12, 190141782],"int32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([12, 19014179, 1, 10],"float32"), dtype="float32", )
paddle.Tensor.cast(Tensor([12, 2, 95070891],"bool"), Dtype(float32), )
paddle.Tensor.cast(Tensor([12, 27163112, 1, 7],"float32"), dtype="float32", )
paddle.Tensor.cast(Tensor([12, 27163112, 1, 7],"int32"), dtype="float32", )
paddle.Tensor.cast(Tensor([12, 27163112, 7],"bool"), Dtype(int64), )
paddle.Tensor.cast(Tensor([12, 5941931, 32],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([12, 5941931, 32],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([12, 7, 27163112],"bool"), Dtype(int64), )
paddle.Tensor.cast(Tensor([12, 7, 27163112],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([12, 841336, 1, 226],"int64"), dtype="float32", )
paddle.Tensor.cast(Tensor([12, 95070891, 2],"bool"), Dtype(float32), )
paddle.Tensor.cast(Tensor([12, 95070891, 2],"int64"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([12, 95070891, 2],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([120, 19014179],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([126761188, 6, 3],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([1267612, 60, 30],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([1267612, 60, 30],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([1273271, 7, 1, 256],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([128, 128, 1, 3, 46422],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([128, 128, 1, 46422, 3],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([128, 128, 15474, 3, 3],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([128, 128, 3, 46422],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([128, 128, 46422, 3],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([128, 17825793, 1, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([128, 17825793, 1, 1],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([128, 1980644, 1, 3, 3],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([128, 1980644, 3, 3],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([128, 256, 1, 69633],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([128, 256, 69633, 1],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([128, 32, 1, 1, 557057],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([128, 32, 1, 557057, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([128, 32, 557057, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([128, 320, 1, 1, 55706],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([128, 320, 1, 55706, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([128, 320, 55706, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([128, 33554433],"float16"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([128, 512, 1, 34817],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([128, 512, 34817, 1],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([13, 13, 13501192],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([13, 175515491],"int32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([13, 175515491],"int32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([13, 5484860, 32],"float32"), "bool", )
paddle.Tensor.cast(Tensor([13, 7, 25073642],"float32"), "bool", )
paddle.Tensor.cast(Tensor([13, 87757746, 2],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([130150525, 1, 1, 33],"float16"), "float16", )
paddle.Tensor.cast(Tensor([134217729, 1, 32],"float16"), "float16", )
paddle.Tensor.cast(Tensor([134217729, 17, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([13501192, 1, 1, 169],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([13501192, 169],"float32"), VarType(bool), )
paddle.Tensor.cast(Tensor([139265, 1024, 1, 16],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([14, 1, 209, 779803],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([14, 1, 779803, 209],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([14, 13581556, 4, 3],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([14, 14, 11641334],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([14, 162978670],"float32"), Dtype(int64), )
paddle.Tensor.cast(Tensor([14, 2, 13581556, 2, 3],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([14, 2, 27163112, 3],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([14, 2, 4, 2, 10186167],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([14, 2, 4, 20372334],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([14, 2, 4, 6790778, 3],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([14, 3732, 209, 209],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([14, 6790778, 4, 2, 3],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([14, 81489335, 2],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([142606337, 16],"bool"), dtype="bool", )
paddle.Tensor.cast(Tensor([14389, 158580],"bool"), "int32", )
paddle.Tensor.cast(Tensor([14533130, 157],"float32"), VarType(bool), )
paddle.Tensor.cast(Tensor([1485483, 6, 16, 16],"float32"), "float32", )
paddle.Tensor.cast(Tensor([14870, 153450],"bool"), "int32", )
paddle.Tensor.cast(Tensor([15171, 150402],"bool"), "int32", )
paddle.Tensor.cast(Tensor([1536, 1485483],"float32"), "bfloat16", )
paddle.Tensor.cast(Tensor([15735872, 1, 1, 145],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([15735872, 145],"float32"), VarType(bool), )
paddle.Tensor.cast(Tensor([16385, 2, 32, 32, 128],"float16"), "float16", )
paddle.Tensor.cast(Tensor([17409, 1024, 1, 128],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([17825793, 128],"int64"), "float32", )
paddle.Tensor.cast(Tensor([1782580, 5, 1, 256],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([19014179, 120],"float32"), "float32", )
paddle.Tensor.cast(Tensor([19014179, 120],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([19014179, 60, 2],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([19014179, 60, 2],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([1901418, 6, 10, 20],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([1901418, 60, 20],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([1901418, 60, 20],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([1980644, 128, 1, 3, 3],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1980644, 128, 3, 3],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([2, 1, 1, 2147483649],"float16"), "float16", )
paddle.Tensor.cast(Tensor([2, 1, 1140850690],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([2, 1, 65075263, 33],"float16"), "float16", )
paddle.Tensor.cast(Tensor([2, 10969719, 104],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([2, 11076221, 103],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([2, 11184811, 102],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([2, 11295552, 101],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([2, 1140850690],"bool"), dtype="bool", )
paddle.Tensor.cast(Tensor([2, 1140850690],"float32"), "uint8", )
paddle.Tensor.cast(Tensor([2, 1140850690],"float32"), Dtype(int64), )
paddle.Tensor.cast(Tensor([2, 1140850690],"float32"), dtype=Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([2, 1140850690],"float32"), dtype=Dtype(bool), )
paddle.Tensor.cast(Tensor([2, 1140850690],"float32"), dtype=Dtype(complex64), )
paddle.Tensor.cast(Tensor([2, 1140850690],"float32"), dtype=Dtype(float64), )
paddle.Tensor.cast(Tensor([2, 1140850690],"float32"), dtype=Dtype(int16), )
paddle.Tensor.cast(Tensor([2, 1140850690],"float32"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([2, 1140850690],"float32"), dtype=Dtype(int64), )
paddle.Tensor.cast(Tensor([2, 1140850690],"float32"), dtype=Dtype(int8), )
paddle.Tensor.cast(Tensor([2, 1140850690],"float32"), dtype=Dtype(uint8), )
paddle.Tensor.cast(Tensor([2, 1140850690],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([2, 11408507, 100],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([2, 15888, 32, 33, 128],"float16"), "float16", )
paddle.Tensor.cast(Tensor([2, 16385, 32, 32, 128],"float16"), "float16", )
paddle.Tensor.cast(Tensor([2, 2, 254201, 33, 128],"float16"), "float16", )
paddle.Tensor.cast(Tensor([2, 2, 262145, 32, 128],"float16"), "float16", )
paddle.Tensor.cast(Tensor([2, 2, 32, 262145, 128],"float16"), "float16", )
paddle.Tensor.cast(Tensor([2, 2, 32, 32, 1048577],"float16"), "float16", )
paddle.Tensor.cast(Tensor([2, 2, 32, 33, 1016801],"float16"), "float16", )
paddle.Tensor.cast(Tensor([2, 278529, 32, 128],"int64"), "int32", )
paddle.Tensor.cast(Tensor([2, 3, 2970966, 128],"int64"), "int32", )
paddle.Tensor.cast(Tensor([2, 3, 32, 11883862],"int64"), "int32", )
paddle.Tensor.cast(Tensor([2, 3, 32, 22369622],"float16"), "float16", )
paddle.Tensor.cast(Tensor([2, 3, 380283564],"float32"), dtype=Dtype(float64), )
paddle.Tensor.cast(Tensor([2, 3, 5592406, 128],"float16"), "float16", )
paddle.Tensor.cast(Tensor([2, 380283564, 3],"float32"), dtype=Dtype(float64), )
paddle.Tensor.cast(Tensor([2, 524289, 32, 128],"float16"), "float16", )
paddle.Tensor.cast(Tensor([2, 570425345, 2],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([2, 570425345, 2],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([2, 60, 19014179],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([2, 60, 19014179],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([2, 65075263, 1, 33],"float16"), "float16", )
paddle.Tensor.cast(Tensor([20, 114085069],"float32"), Dtype(int64), )
paddle.Tensor.cast(Tensor([20, 5704254, 20],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([20, 5704254, 20],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([20, 60, 1901418],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([20, 60, 1901418],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([20192048, 1, 1, 113],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([20192048, 113],"float32"), VarType(bool), )
paddle.Tensor.cast(Tensor([20372334, 7, 16],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([2039, 686, 1024, 3],"uint8"), "int32", )
paddle.Tensor.cast(Tensor([2048, 1114113],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([207427399, 11],"bool"), "int", )
paddle.Tensor.cast(Tensor([20933041, 1, 1, 109],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([20933041, 109],"float32"), VarType(bool), )
paddle.Tensor.cast(Tensor([2097153, 2048],"float16"), "float16", )
paddle.Tensor.cast(Tensor([21559, 105840],"bool"), "int32", )
paddle.Tensor.cast(Tensor([219311, 1, 102, 102],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([21939437, 1, 104],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([21939437, 104],"bool"), VarType(int64), )
paddle.Tensor.cast(Tensor([22152441, 1, 1, 103],"bool"), "bool", )
paddle.Tensor.cast(Tensor([22152441, 1, 103],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([22152441, 103],"bool"), VarType(int64), )
paddle.Tensor.cast(Tensor([2228225, 1, 32, 32],"float32"), "float32", )
paddle.Tensor.cast(Tensor([2228225, 1, 32, 32],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([2228225, 1024],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([223675, 1, 101, 101],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([22369622, 1, 1, 102],"bool"), "bool", )
paddle.Tensor.cast(Tensor([22369622, 1, 102],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([22369622, 102],"bool"), VarType(int64), )
paddle.Tensor.cast(Tensor([22369622, 102],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([22591103, 1, 1, 101],"bool"), "bool", )
paddle.Tensor.cast(Tensor([22591103, 1, 101],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([22591103, 101],"bool"), VarType(int64), )
paddle.Tensor.cast(Tensor([2281701379, 1, 1, 1],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([2281701379, 1, 1, 1],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([2281701379, 1, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([2281701379, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([2281701379, 1],"int64"), "bool", )
paddle.Tensor.cast(Tensor([2281701379],"bool"), Dtype(float32), )
paddle.Tensor.cast(Tensor([2281701379],"bool"), VarType(float32), )
paddle.Tensor.cast(Tensor([2281701379],"bool"), dtype="bool", )
paddle.Tensor.cast(Tensor([2281701379],"bool"), dtype="complex64", )
paddle.Tensor.cast(Tensor([2281701379],"bool"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([2281701379],"bool"), dtype=Dtype(float64), )
paddle.Tensor.cast(Tensor([2281701379],"bool"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([2281701379],"bool"), dtype=Dtype(int64), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), "float16", )
paddle.Tensor.cast(Tensor([2281701379],"float32"), "float32", )
paddle.Tensor.cast(Tensor([2281701379],"float32"), "int", )
paddle.Tensor.cast(Tensor([2281701379],"float32"), "int32", )
paddle.Tensor.cast(Tensor([2281701379],"float32"), "int64", )
paddle.Tensor.cast(Tensor([2281701379],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), VarType(int64), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype="float32", )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype="float64", )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype=Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype=Dtype(bool), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype=Dtype(complex64), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype=Dtype(float64), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype=Dtype(int16), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype=Dtype(int64), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype=Dtype(int8), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype=Dtype(uint8), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([2281701379],"int32"), "bool", )
paddle.Tensor.cast(Tensor([2281701379],"int32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([2281701379],"int32"), VarType(int32), )
paddle.Tensor.cast(Tensor([2281701379],"int32"), dtype="float16", )
paddle.Tensor.cast(Tensor([2281701379],"int32"), dtype="int32", )
paddle.Tensor.cast(Tensor([2281701379],"int32"), dtype="int64", )
paddle.Tensor.cast(Tensor([2281701379],"int32"), dtype=Dtype(complex64), )
paddle.Tensor.cast(Tensor([2281701379],"int64"), "float32", )
paddle.Tensor.cast(Tensor([2281701379],"int64"), "int32", )
paddle.Tensor.cast(Tensor([2281701379],"int64"), Dtype(int32), )
paddle.Tensor.cast(Tensor([2281701379],"int64"), VarType(int32), )
paddle.Tensor.cast(Tensor([2281701379],"int64"), VarType(int64), )
paddle.Tensor.cast(Tensor([2281701379],"int64"), dtype="bfloat16", )
paddle.Tensor.cast(Tensor([2281701379],"int64"), dtype="bool", )
paddle.Tensor.cast(Tensor([2281701379],"int64"), dtype="float16", )
paddle.Tensor.cast(Tensor([2281701379],"int64"), dtype="float32", )
paddle.Tensor.cast(Tensor([2281701379],"int64"), dtype="int16", )
paddle.Tensor.cast(Tensor([2281701379],"int64"), dtype="int32", )
paddle.Tensor.cast(Tensor([2281701379],"int64"), dtype="int64", )
paddle.Tensor.cast(Tensor([2281701379],"int64"), dtype="int8", )
paddle.Tensor.cast(Tensor([2281701379],"int64"), dtype="uint8", )
paddle.Tensor.cast(Tensor([2281701379],"int64"), dtype=Dtype(int8), )
paddle.Tensor.cast(Tensor([228170138, 1, 1, 10],"bool"), "bool", )
paddle.Tensor.cast(Tensor([228170138, 1, 1, 10],"float32"), dtype="float32", )
paddle.Tensor.cast(Tensor([228170138, 10],"bool"), "int", )
paddle.Tensor.cast(Tensor([228170138, 10],"bool"), dtype="bool", )
paddle.Tensor.cast(Tensor([228170138, 10],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([228170138, 10],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([228170138, 10],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([228170138, 10],"int32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([228170138, 10],"int64"), "bool", )
paddle.Tensor.cast(Tensor([228170138, 10],"int64"), "int64", )
paddle.Tensor.cast(Tensor([22817014, 1, 1, 100],"bool"), "bool", )
paddle.Tensor.cast(Tensor([22817014, 1, 10, 10],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([22817014, 1, 100],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([22817014, 100],"bool"), VarType(int64), )
paddle.Tensor.cast(Tensor([22817014, 100],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([2281702, 1000],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([228171, 1, 100, 100],"bool"), VarType(int32), )
paddle.Tensor.cast(Tensor([228171, 1, 100, 100],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([2282, 5000, 10, 20],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([23211, 1024, 1, 96],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([237678, 100, 1, 96],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([253522376, 3, 3],"float32"), dtype=Dtype(float64), )
paddle.Tensor.cast(Tensor([256, 16777217],"float16"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([27163112, 84],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([285212673, 1, 2, 4],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([285212673, 2, 4],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([285212673, 8],"bool"), dtype="bool", )
paddle.Tensor.cast(Tensor([285212673, 8],"float32"), dtype=Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([28521268, 10, 1, 8],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([28521268, 80],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([2852127, 100, 1, 8],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([2970966, 1, 768],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([3, 11184811, 128],"float16"), "float16", )
paddle.Tensor.cast(Tensor([3, 32, 44739243],"float16"), "float16", )
paddle.Tensor.cast(Tensor([3, 8, 95070891],"float32"), dtype="double", )
paddle.Tensor.cast(Tensor([3, 8, 95070891],"float32"), dtype="float16", )
paddle.Tensor.cast(Tensor([3, 8, 95070891],"float32"), dtype="float64", )
paddle.Tensor.cast(Tensor([3, 95070891, 8],"float32"), dtype="double", )
paddle.Tensor.cast(Tensor([3, 95070891, 8],"float32"), dtype="float16", )
paddle.Tensor.cast(Tensor([3, 95070891, 8],"float32"), dtype="float64", )
paddle.Tensor.cast(Tensor([30, 2535224, 30],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([30, 60, 1267612],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([30, 60, 1267612],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([30, 76056713],"float32"), Dtype(int64), )
paddle.Tensor.cast(Tensor([315501, 226, 32],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([32000, 71304],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([325957340, 1, 1, 7],"float32"), dtype="float32", )
paddle.Tensor.cast(Tensor([325957340, 1, 1, 7],"int32"), dtype="float32", )
paddle.Tensor.cast(Tensor([325957340, 7],"int32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([325957340, 7],"int64"), "int64", )
paddle.Tensor.cast(Tensor([34, 1, 67108865],"float32"), "float16", )
paddle.Tensor.cast(Tensor([34, 2097153, 32],"float32"), "float16", )
paddle.Tensor.cast(Tensor([34643, 21955, 3],"int32"), "float32", )
paddle.Tensor.cast(Tensor([34817, 128, 512],"float32"), VarType(float32), )
paddle.Tensor.cast(Tensor([349526, 3, 32, 128],"float16"), "float16", )
paddle.Tensor.cast(Tensor([35651585, 64],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([35651585, 8, 8],"float32"), dtype="double", )
paddle.Tensor.cast(Tensor([35651585, 8, 8],"float32"), dtype="float16", )
paddle.Tensor.cast(Tensor([35651585, 8, 8],"float32"), dtype="float64", )
paddle.Tensor.cast(Tensor([3565159, 640, 1, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([356516, 100, 1, 64],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([37058, 20524, 3],"int32"), "float32", )
paddle.Tensor.cast(Tensor([371371, 6, 32, 32],"float32"), "float32", )
paddle.Tensor.cast(Tensor([380283564, 2, 3],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([380283564, 6],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([38028357, 2, 30],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([38028357, 60],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([38028357, 60],"float32"), Dtype(int64), )
paddle.Tensor.cast(Tensor([3802836, 60, 10],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([3802836, 60, 10],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([3802836, 60, 10],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([3840, 10240, 59],"float32"), "uint8", )
paddle.Tensor.cast(Tensor([3840, 198065, 3],"float32"), "uint8", )
paddle.Tensor.cast(Tensor([38452, 19780, 3],"int32"), "float32", )
paddle.Tensor.cast(Tensor([3961288, 576],"float32"), "float32", )
paddle.Tensor.cast(Tensor([3961288, 576],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([4, 10, 57042535],"float32"), "int64", )
paddle.Tensor.cast(Tensor([4, 11, 51856850],"float32"), "int64", )
paddle.Tensor.cast(Tensor([4, 12, 47535446],"float32"), "int64", )
paddle.Tensor.cast(Tensor([4, 13, 43878873],"float32"), "int64", )
paddle.Tensor.cast(Tensor([4, 14, 40744668],"float32"), "int64", )
paddle.Tensor.cast(Tensor([4, 142606337, 4],"float32"), "int64", )
paddle.Tensor.cast(Tensor([4, 142606337, 4],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([4, 142606337, 4],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([4, 1834166, 311],"int64"), "bool", )
paddle.Tensor.cast(Tensor([4, 60, 9507090],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([4, 60, 9507090],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([4, 94, 6068355],"int64"), "bool", )
paddle.Tensor.cast(Tensor([40744668, 14, 4],"float32"), "int64", )
paddle.Tensor.cast(Tensor([42301, 17980, 3],"int32"), "float32", )
paddle.Tensor.cast(Tensor([4294967297, 1],"float16"), VarType(float32), )
paddle.Tensor.cast(Tensor([4294967297],"bfloat16"), dtype="bfloat16", )
paddle.Tensor.cast(Tensor([4294967297],"bfloat16"), dtype="float16", )
paddle.Tensor.cast(Tensor([4294967297],"float16"), "float32", )
paddle.Tensor.cast(Tensor([4294967297],"float16"), Dtype(float16), )
paddle.Tensor.cast(Tensor([4294967297],"float16"), dtype="float16", )
paddle.Tensor.cast(Tensor([4294967297],"float16"), dtype="float32", )
paddle.Tensor.cast(Tensor([4294967297],"float16"), dtype="int8", )
paddle.Tensor.cast(Tensor([4294967297],"float16"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([4294967297],"float16"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([4294967297],"int16"), dtype="int16", )
paddle.Tensor.cast(Tensor([4294967297],"int16"), dtype="int32", )
paddle.Tensor.cast(Tensor([4294967297],"int8"), dtype="int16", )
paddle.Tensor.cast(Tensor([4294967297],"int8"), dtype="int8", )
paddle.Tensor.cast(Tensor([4294967297],"uint8"), dtype="bool", )
paddle.Tensor.cast(Tensor([4294967297],"uint8"), dtype="uint8", )
paddle.Tensor.cast(Tensor([4294968, 1000],"float16"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([4353, 1024, 512],"float32"), VarType(float32), )
paddle.Tensor.cast(Tensor([43878873, 13, 4],"float32"), "int64", )
paddle.Tensor.cast(Tensor([4456449, 512, 1, 1],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([4456449, 512],"float32"), "bfloat16", )
paddle.Tensor.cast(Tensor([4456449, 512],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([456340276, 1, 1, 5],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([456340276, 5],"bool"), dtype="bool", )
paddle.Tensor.cast(Tensor([456340276, 5],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([46565335, 7, 7],"bool"), Dtype(int64), )
paddle.Tensor.cast(Tensor([47143, 1, 220, 220],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([47535446, 12, 4],"float32"), "int64", )
paddle.Tensor.cast(Tensor([47535446, 2, 4, 2, 3],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([5, 456340276],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([512, 4456449],"float32"), "bfloat16", )
paddle.Tensor.cast(Tensor([512, 4456449],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([51736, 14701, 3],"int32"), "float32", )
paddle.Tensor.cast(Tensor([51856850, 11, 4],"float32"), "int64", )
paddle.Tensor.cast(Tensor([52, 1371215, 32],"float32"), "bool", )
paddle.Tensor.cast(Tensor([52, 7, 6268411],"float32"), "bool", )
paddle.Tensor.cast(Tensor([52236, 1, 209, 209],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([52236, 1, 209, 209],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([53769, 1, 206, 206],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([557057, 4096],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([557057, 4096],"int64"), "float32", )
paddle.Tensor.cast(Tensor([5571, 1, 640, 640],"float32"), "float32", )
paddle.Tensor.cast(Tensor([570425345, 1, 1, 4],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([570425345, 1, 4],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([570425345, 2, 1, 2],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([570425345, 2, 2],"bool"), Dtype(float32), )
paddle.Tensor.cast(Tensor([570425345, 2, 2],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([570425345, 4],"float32"), "float32", )
paddle.Tensor.cast(Tensor([570425345, 4],"float32"), dtype=Dtype(float64), )
paddle.Tensor.cast(Tensor([57042535, 10, 4],"float32"), "int64", )
paddle.Tensor.cast(Tensor([57042535, 2, 20],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([57043, 1, 200, 200],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([5941931, 1, 384],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([64, 35651585],"float32"), dtype=Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([65953, 1, 186, 186],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([67108865, 64],"float16"), "float16", )
paddle.Tensor.cast(Tensor([69633, 128, 256],"float32"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 1, 1481625, 220],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 1, 1559605, 209],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 1, 1582318, 206],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 1, 165, 1975500],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 1, 1752459, 186],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 1, 186, 1752459],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 1, 1975500, 165],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 1, 206, 1582318],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 1, 209, 1559605],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 1, 220, 1481625],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 11973, 165, 165],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 6735, 220, 220],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 7463, 209, 209],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 7682, 206, 206],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([7, 9422, 186, 186],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([71303169, 1, 32],"float32"), "float16", )
paddle.Tensor.cast(Tensor([71303169, 1, 32],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([71303169, 2, 4, 4],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([71303169, 32, 1, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([71303169, 32],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([7130317, 10, 32],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([7130317, 320, 1, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([71304, 32000],"float32"), Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([7131, 320000],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([742742, 3072],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([74275, 10240, 3],"float32"), "uint8", )
paddle.Tensor.cast(Tensor([760567127, 1, 1, 3],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([760567127, 3],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([760567127, 3],"int32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([760567127, 3],"int32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([768, 2970966],"float32"), dtype=Dtype(bfloat16), )
paddle.Tensor.cast(Tensor([78050, 94, 311],"int64"), "bool", )
paddle.Tensor.cast(Tensor([8, 142606337, 2],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([8, 14260634, 20],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([8, 2, 142606337],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([8, 28521268, 10],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([8, 71303169, 4],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([8, 9507090, 30],"float32"), dtype="bool", )
paddle.Tensor.cast(Tensor([800, 2852127],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([81489335, 14, 2],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([83810, 1, 165, 165],"int64"), VarType(float32), )
paddle.Tensor.cast(Tensor([8705, 1024, 256],"float32"), VarType(float32), )
paddle.Tensor.cast(Tensor([87757746, 13, 2],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([8912897, 256, 1, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([8912897, 256, 1, 1],"float32"), dtype=VarType(float16), )
paddle.Tensor.cast(Tensor([891290, 10, 1, 256],"float32"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([897955, 2541],"int32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([9, 10, 25352238],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([9, 12676119, 20],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([9, 1267612, 10, 20],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([9, 5000, 10, 5071],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([9, 6, 10, 4225373],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([9, 6, 2112687, 20],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([95070891, 12, 2],"int64"), dtype=Dtype(float32), )
paddle.Tensor.cast(Tensor([95070891, 12, 2],"int64"), dtype=VarType(float32), )
paddle.Tensor.cast(Tensor([95070891, 2, 4, 3],"float32"), Dtype(float64), )
paddle.Tensor.cast(Tensor([9507090, 60, 4],"float32"), Dtype(bool), )
paddle.Tensor.cast(Tensor([9507090, 60, 4],"float32"), Dtype(int32), )
paddle.Tensor.cast(Tensor([990322, 16, 12, 12],"float32"), "float32", )
paddle.Tensor.cast(Tensor([990322, 16, 12, 12],"float32"), Dtype(float32), )
paddle.Tensor.ceil(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.ceil(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.ceil(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.ceil(Tensor([10, 228170138],"float32"), )
paddle.Tensor.ceil(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.ceil(Tensor([114085069, 20],"float32"), )
paddle.Tensor.ceil(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.chunk(Tensor([1, 1, 1, 2281701379],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 10164, 224489],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 10285, 221848],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 11109, 205393],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 1140850690, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 12096, 188633],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 1360, 1677722],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 1726, 1321960],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 2100, 1086525],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 2125, 1073742],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 21504, 106106],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 2281701379],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 24276, 93991],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 2541, 897955],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 2577, 885410],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 27216, 83837],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 3024, 754531],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 30324, 75245],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 570425345, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 10, 1, 228170138],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 10, 228170138],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 10, 57042535, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 100, 22817014],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 101, 1, 22591103],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 101, 22591103],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 101, 5647776, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 102, 1, 22369622],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 102, 22369622],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 102, 5592406, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 102697, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 103, 1, 22152441],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 103, 22152441],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 103, 5538111, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 104, 21939437],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 105, 1, 21730490],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 105, 21730490],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 105, 5432623, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 106, 1, 21525485],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 106, 21525485],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 106, 5381372, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 107, 1, 21324312],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 107, 21324312],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 107, 5331078, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 108, 1, 21126865],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 108, 21126865],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 108, 5281717, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 109, 1, 20933041],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 109, 20933041],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 109, 5233261, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 11, 1, 207427399],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 11, 207427399],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 11, 51856850, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 110, 20742740],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 110924, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 111, 20555869],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1114113, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 112, 1, 20372334],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 112, 5093084, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 112245, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 113, 1, 20192048],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 113, 5048012, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 116, 1, 19669840],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 116, 4917460, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 117, 1, 19501722],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 117, 4875431, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 2281701379, 1],"float32"), 1, )
paddle.Tensor.chunk(Tensor([1, 2281701379],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([1, 285212673, 8],"float32"), 1, )
paddle.Tensor.chunk(Tensor([1, 300, 7605672],"float32"), 1, )
paddle.Tensor.chunk(Tensor([1, 325957340, 7],"float32"), 1, )
paddle.Tensor.chunk(Tensor([1, 37623, 30324, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 377266, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 41919, 27216, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 442705, 2577, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 448978, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 456340276, 5],"float32"), 1, )
paddle.Tensor.chunk(Tensor([1, 46996, 24276, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 53053, 21504, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 536871, 2125, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 543263, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 570425345, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 660980, 1726, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 838861, 1360, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 94317, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([100, 1140851, 20],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([100, 1444, 2, 7901],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([100, 1444, 7901, 2],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([100, 2281702, 10],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([100, 2535224, 3, 3],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([100, 36, 211269, 3],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([100, 36, 3, 211269],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([100, 38, 600448],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([100, 5704254, 2, 2],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([100, 9, 2535224],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([10038, 111, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([101283, 11, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10129, 110, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10222, 109, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([102697, 1, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10316, 108, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10413, 107, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10511, 106, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10611, 105, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10713, 104, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10817, 103, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1086525, 300, 7],"float32"), 1, )
paddle.Tensor.chunk(Tensor([10923, 102, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([11031, 101, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([110924, 1, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1114113, 1, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([111412, 10, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([11142, 100, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1118482, 320, 4, 3],"float16"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([112245, 1, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 11606, 1536],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 196, 90948],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 23211, 768],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 3136, 5685],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 46422, 384],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 49, 363792],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 784, 22737],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 92843, 192],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([13, 128, 1371215],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([13, 174296, 1007],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([13, 17551550, 10],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([13, 25073642, 7],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([13, 5484860, 32],"float32"), 8, axis=1, )
paddle.Tensor.chunk(Tensor([13, 58505164, 3],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([13, 8, 21939437],"float32"), 8, axis=1, )
paddle.Tensor.chunk(Tensor([14, 128, 1273271],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([14, 23282668, 7],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([148549, 320, 8, 6],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([148549, 80, 16, 12],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([15158, 196, 768],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([1521135, 300, 5],"float32"), 1, )
paddle.Tensor.chunk(Tensor([16, 11606, 128, 96],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 11883862, 4, 3],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 1411944, 101],"float32"), 16, )
paddle.Tensor.chunk(Tensor([16, 160, 148549, 6],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 160, 16, 55706],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 160, 74275, 12],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 160, 8, 111412],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 185686, 32, 24],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 2970966, 8, 6],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 300, 475355],"float32"), 16, )
paddle.Tensor.chunk(Tensor([16, 32, 128, 34817],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 32, 46422, 96],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 32, 64, 69633],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 32, 92843, 48],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 320, 148549, 3],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 320, 4, 111412],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 320, 74275, 6],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 320, 8, 55706],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 40, 148549, 24],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 40, 32, 111412],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 40, 64, 55706],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 40, 74275, 48],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 46422, 64, 48],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 742742, 16, 12],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 80, 148549, 12],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 80, 16, 111412],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 80, 32, 55706],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 80, 74275, 24],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([17702, 128, 1007],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([1782580, 128, 10],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([18569, 40, 64, 48],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([1901418, 300, 4],"float32"), 2, )
paddle.Tensor.chunk(Tensor([1901418, 300, 4],"float32"), 4, )
paddle.Tensor.chunk(Tensor([2, 285212673, 4],"float32"), 2, )
paddle.Tensor.chunk(Tensor([2, 300, 3802836],"float32"), 2, )
paddle.Tensor.chunk(Tensor([2, 570425345, 2],"float32"), 2, )
paddle.Tensor.chunk(Tensor([2, 71303169, 16],"float32"), 2, )
paddle.Tensor.chunk(Tensor([2, 900, 1267612],"float32"), 2, )
paddle.Tensor.chunk(Tensor([227, 1005155, 10],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([227, 1116839, 3, 3],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([227, 36, 3, 93070],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([227, 36, 93070, 3],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([227, 9, 1116839],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([23211, 32, 64, 48],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([25352238, 9, 10],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([2546542, 128, 7],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([256, 1444, 2, 3087],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([256, 1444, 3087, 2],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([256, 2228225, 2, 2],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([256, 36, 3, 82527],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([256, 36, 82527, 3],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([256, 38, 234550],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([256, 445645, 20],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([256, 891290, 10],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([256, 9, 990322],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([256, 990322, 3, 3],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([297097, 160, 8, 6],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([3002239, 38, 20],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([30316, 49, 1536],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([37138, 80, 32, 24],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([37623, 1, 30324, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([377266, 1, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3790, 3136, 192],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([3802836, 300, 2],"float32"), 2, )
paddle.Tensor.chunk(Tensor([395032, 1444, 2, 2],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([4, 100, 5704254],"float32"), 4, )
paddle.Tensor.chunk(Tensor([4, 142606337, 4],"float32"), 4, )
paddle.Tensor.chunk(Tensor([4, 300, 1901418],"float32"), 4, )
paddle.Tensor.chunk(Tensor([41919, 1, 27216, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([43691, 32, 64, 48],"float16"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([442705, 1, 2577, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([448978, 1, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([46996, 1, 24276, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([475355, 300, 16],"float32"), 2, )
paddle.Tensor.chunk(Tensor([4875431, 117, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([4917460, 116, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([5048012, 113, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([5093084, 112, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([512, 1451, 64, 48],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([512, 160, 4643, 6],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([512, 160, 8, 3482],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([512, 160, 8, 6554],"float16"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([512, 160, 8739, 6],"float16"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([512, 174763, 8, 6],"float16"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([512, 2731, 64, 48],"float16"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([512, 32, 2902, 48],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([512, 32, 5462, 48],"float16"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([512, 32, 64, 2177],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([512, 32, 64, 4097],"float16"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([512, 320, 4, 6554],"float16"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([512, 320, 8739, 3],"float16"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([512, 699051, 4, 3],"float16"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([512, 92843, 8, 6],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([51856850, 11, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([5233261, 109, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([5281717, 108, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([53053, 1, 21504, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5331078, 107, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([536871, 1, 2125, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5381372, 106, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([5432623, 105, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([543263, 1, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5538111, 103, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([5592406, 102, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([559241, 160, 8, 6],"float16"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([56, 10186167, 2, 2],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([56, 1444, 14109, 2],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([56, 1444, 2, 14109],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([56, 2037234, 20],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([56, 38, 1072229],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([5647776, 101, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([570425345, 1, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([570425345, 4],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([57042535, 10, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([5704254, 100, 4],"float32"), 4, )
paddle.Tensor.chunk(Tensor([5803, 32, 128, 96],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([5941931, 128, 3],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([594194, 320, 4, 3],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([633806, 900, 4],"float32"), 2, )
paddle.Tensor.chunk(Tensor([660980, 1, 1726, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7042289, 36, 3, 3],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([74275, 160, 16, 12],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([74275, 40, 32, 24],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([75304, 300, 101],"float32"), 16, )
paddle.Tensor.chunk(Tensor([7579, 784, 384],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([7605672, 300, 1],"float32"), 1, )
paddle.Tensor.chunk(Tensor([8, 300, 950709],"float32"), 8, )
paddle.Tensor.chunk(Tensor([8, 35651585, 8],"float32"), 8, )
paddle.Tensor.chunk(Tensor([82, 2782563, 10],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([82, 3091737, 3, 3],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([82, 36, 257645, 3],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([82, 36, 3, 257645],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([82, 9, 3091737],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([838861, 1, 1360, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([87, 1311323, 20],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([87, 1444, 2, 9082],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([87, 1444, 9082, 2],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([87, 38, 690170],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([87, 6556614, 2, 2],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([8912897, 8, 32],"float32"), 8, axis=1, )
paddle.Tensor.chunk(Tensor([94317, 1, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([950709, 300, 8],"float32"), 1, )
paddle.Tensor.chunk(Tensor([950709, 300, 8],"float32"), 8, )
paddle.Tensor.clip(Tensor([1, 1, 1, 2281701379],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 10285, 221848],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 1140850690, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 21504, 106106],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 2281701379],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 24276, 93991],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 27216, 83837],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 30324, 75245],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 32, 71303169],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 1, 33600, 67908],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 3598, 634159],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 37044, 61595],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 40656, 56123],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 4165, 547828],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 44436, 51349],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 4789, 476447],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 48384, 47159],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 52500, 43461],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 5440, 419431],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 56784, 40183],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 61236, 37261],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 6150, 371009],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 65856, 34647],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 6885, 331402],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 70644, 32299],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 71303169, 32],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 1, 75600, 30182],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 7681, 297058],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 100, 22817014],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 100, 22817014],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 1001, 2279422],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1002, 2277148],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1004, 2272611],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 10164, 224489],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 10285, 221848],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1031, 2213096],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1034, 2206675],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1040, 2193944],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1043, 2187634],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1045, 2183447],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1055, 2162751],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 105840, 21559],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1060, 2152549],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1063, 2146474],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1064, 2144457],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1071, 2130441],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1077, 2118572],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1079, 2114645],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1082, 2108782],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1098, 2078053],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 11, 207427399],"float32"), min=0, max=1, )
paddle.Tensor.clip(Tensor([1, 11, 207427399],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 11, 207427399],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 1100, 2074274],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 1100, 2074274],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([1, 1100, 2074274],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 1102, 2070510],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 110924, 10285, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 11109, 205393],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1118, 2040878],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1120, 2037234],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1122, 2033602],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1123, 2031792],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1125, 2028180],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1140850690, 1, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1140850690, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1140850690, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 12096, 188633],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1360, 1677722],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 148529, 7681, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 15091, 75600, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 15845149, 12, 12],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 16, 11883862, 12],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 16, 12, 11883862],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 16150, 70644, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 165701, 6885, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1726, 1321960],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 17324, 65856, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 18, 126761188],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 18, 126761188],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([1, 18, 126761188],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 185505, 6150, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 18631, 61236, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 192, 11883862],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 192, 11883862],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 196, 11641334],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 196, 11641334],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 2, 300, 3802836],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 2, 300, 3802836],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 2, 570425345, 2],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 2, 570425345, 2],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 200, 11408507],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 200, 11408507],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 20092, 56784, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 209716, 5440, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 21, 108652447],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 21, 108652447],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([1, 21, 108652447],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 2100, 1086525],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 2125, 1073742],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 21504, 106106],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 21731, 52500, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 22, 103713700],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 22, 103713700],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([1, 22, 103713700],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 2228225, 32, 32],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 22400, 101862],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 2281701379],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 2281701379],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 23580, 48384, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 238224, 4789, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 24276, 93991],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 2541, 897955],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 25675, 44436, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 2577, 885410],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 27216, 83837],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 273914, 4165, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 28062, 40656, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 300, 7605672],"float32"), min=0, max=1, )
paddle.Tensor.clip(Tensor([1, 300, 7605672],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 300, 7605672],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 3024, 754531],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 30324, 75245],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 3060, 745655],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 30798, 37044, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 317080, 3598, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 33600, 67908],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 33954, 33600, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 3549, 642914],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 3598, 634159],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 36858, 61906],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 37044, 61595],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 37623, 30324, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 3802836, 300, 2],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 3802836, 300, 2],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 38402, 59417],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 400, 5704254],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 400, 5704254],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 40656, 56123],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 4116, 554350],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 4165, 547828],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 41919, 27216, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 44436, 51349],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 46996, 24276, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 4725, 482900],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 4789, 476447],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 48384, 47159],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 492, 4637605],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 492, 4637605],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 496, 4600205],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 496, 4600205],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 500, 4563403],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 500, 4563403],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 52500, 43461],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 53053, 21504, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 5376, 424424],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 5440, 419431],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 56784, 40183],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 570425345, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 570425345, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([1, 570425345, 4],"float32"), min=0, max=1, )
paddle.Tensor.clip(Tensor([1, 570425345, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 570425345, 4],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([1, 570425345, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 6, 11883862, 32],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 6, 16, 23767723],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 6, 23767723, 16],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 6, 32, 11883862],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 61236, 37261],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 65856, 34647],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 70644, 32299],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 75600, 30182],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 8400, 271632],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([1, 8912897, 16, 16],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 9, 253522376],"float32"), min=0, max=1, )
paddle.Tensor.clip(Tensor([1, 9, 253522376],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 9, 253522376],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([1, 9, 253522376],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([10, 20, 11408507],"float32"), 0.6, 1.5, )
paddle.Tensor.clip(Tensor([10, 228170138, 1],"float32"), 0.6, 1.5, )
paddle.Tensor.clip(Tensor([10, 228170138],"float32"), 0, )
paddle.Tensor.clip(Tensor([10, 429496730],"float16"), max=0, )
paddle.Tensor.clip(Tensor([10, 429496730],"float16"), min=0, )
paddle.Tensor.clip(Tensor([100, 22817014],"float32"), 0, )
paddle.Tensor.clip(Tensor([1001, 2279422],"float32"), 0, )
paddle.Tensor.clip(Tensor([1002, 2277148],"float32"), 0, )
paddle.Tensor.clip(Tensor([10046, 56784, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([101, 22591103],"float32"), 0, )
paddle.Tensor.clip(Tensor([1010, 2259111],"float32"), 0, )
paddle.Tensor.clip(Tensor([1011, 2256876],"float32"), 0, )
paddle.Tensor.clip(Tensor([1014090, 1125, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1015896, 1123, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1016, 2245770],"float32"), 0, )
paddle.Tensor.clip(Tensor([1016801, 1122, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1017, 2243561],"float32"), 0, )
paddle.Tensor.clip(Tensor([1018617, 1120, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([102, 22369622],"float32"), 0, )
paddle.Tensor.clip(Tensor([1020439, 1118, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1025, 2226051],"float32"), 0, )
paddle.Tensor.clip(Tensor([1026, 2223881],"float32"), 0, )
paddle.Tensor.clip(Tensor([102697, 11109, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([103, 22152441],"float32"), 0, )
paddle.Tensor.clip(Tensor([1030, 2215245],"float32"), 0, )
paddle.Tensor.clip(Tensor([1031, 2213096],"float32"), 0, )
paddle.Tensor.clip(Tensor([1035255, 1102, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1039027, 1098, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([104, 21939437],"float32"), 0, )
paddle.Tensor.clip(Tensor([1042, 2189733],"float32"), 0, )
paddle.Tensor.clip(Tensor([1044, 2185538],"float32"), 0, )
paddle.Tensor.clip(Tensor([105, 21730490],"float32"), 0, )
paddle.Tensor.clip(Tensor([1054391, 1082, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1057323, 1079, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1059286, 1077, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([106, 21525485],"float32"), 0, )
paddle.Tensor.clip(Tensor([1060, 2152549],"float32"), 0, )
paddle.Tensor.clip(Tensor([106106, 5376, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([106106, 5376, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([1065, 2142443],"float32"), 0, )
paddle.Tensor.clip(Tensor([1065221, 1071, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1069, 2134426],"float32"), 0, )
paddle.Tensor.clip(Tensor([1072229, 1064, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1073237, 1063, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1076275, 1060, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([10780, 105840, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1081376, 1055, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([10866, 52500, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1091724, 1045, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1093817, 1043, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1096972, 1040, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1103338, 1034, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1106548, 1031, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([110924, 1, 10285, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([110924, 10285, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([112245, 10164, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1136306, 1004, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1138574, 1002, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1139711, 1001, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([114085069, 20, 1],"float32"), 0.6, 1.5, )
paddle.Tensor.clip(Tensor([1140850690, 1, 1, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1140850690, 1, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1140850690, 1, 2],"float32"), max=0, )
paddle.Tensor.clip(Tensor([1140850690, 2, 1],"float32"), min=1e-07, )
paddle.Tensor.clip(Tensor([1140850690, 2],"float32"), max=0, )
paddle.Tensor.clip(Tensor([1140850690, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1140850690, 2],"int32"), Tensor([1],"int32"), Tensor([1],"int32"), )
paddle.Tensor.clip(Tensor([1140851, 500, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1140851, 500, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1150052, 496, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1150052, 496, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1159402, 492, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1159402, 492, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([11790, 48384, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([11883862, 3, 8, 8],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([1198373, 476, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1198373, 476, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([12, 118839, 40, 40, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 1901418, 10, 10, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 3, 10, 10, 633806],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 3, 10, 6338060, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 3, 1584515, 40, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 3, 20, 20, 158452],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 3, 20, 3169030, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 3, 3169030, 20, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 3, 40, 1584515, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 3, 40, 40, 39613],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 3, 6338060, 10, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 475355, 20, 20, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([120, 19014179],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([120725, 4725, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([120725, 4725, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([12838, 44436, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([13, 175515491, 1],"float32"), min=1e-07, )
paddle.Tensor.clip(Tensor([13, 175515491],"int32"), 2, )
paddle.Tensor.clip(Tensor([13, 2, 87757746],"float32"), min=1e-07, )
paddle.Tensor.clip(Tensor([138588, 4116, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([138588, 4116, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([14031, 40656, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1426064, 400, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1426064, 400, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([148529, 1, 7681, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1485483, 6, 16, 16],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([15091, 1, 75600, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([15211343, 6, 5, 5],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([15399, 37044, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([16, 10164, 14031],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 11109, 12838],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 12096, 11790],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 142606337],"float32"), max=1, )
paddle.Tensor.clip(Tensor([16, 142606337],"float32"), min=1e-08, )
paddle.Tensor.clip(Tensor([16, 176, 810264],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([16, 176, 810264],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([16, 2100, 67908],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 2541, 56123],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 3024, 47159],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 3549, 40183],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 35651585, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 35651585, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([16, 35651585, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([16, 4116, 34647],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 4725, 30182],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 476, 299594],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([16, 476, 299594],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([16, 5376, 26527],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 5704254, 5, 5],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([16, 6, 4753545, 5],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([16, 6, 5, 4753545],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([16, 6069, 23498],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 6804, 20960],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 7581, 18812],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 8400, 16977],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 9261, 15399],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([160729, 3549, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([160729, 3549, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16150, 1, 70644, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([165701, 1, 6885, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([16977, 33600, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([17324, 1, 65856, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([185505, 1, 6150, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([18631, 1, 61236, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([18812, 30324, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([188633, 3024, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([188633, 3024, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([19014179, 120],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([19014179, 120],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1901418, 2, 300, 2],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1901418, 2, 300, 2],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1901418, 3, 20, 20, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([1901418, 300, 4],"float32"), min=0, max=1, )
paddle.Tensor.clip(Tensor([1901418, 300, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1901418, 300, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([2, 1, 1140850690],"float32"), max=0, )
paddle.Tensor.clip(Tensor([2, 100, 11408507],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([2, 100, 11408507],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([2, 10164, 112245],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 10164, 112245],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([2, 1100, 1037137],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([2, 1100, 1037137],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([2, 11109, 102697],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 11109, 102697],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([2, 1140850690],"float32"), max=0, )
paddle.Tensor.clip(Tensor([2, 1140850690],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 1140850690],"int32"), Tensor([1],"int32"), Tensor([1],"int32"), )
paddle.Tensor.clip(Tensor([2, 12096, 94317],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 12096, 94317],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([2, 17825793, 8, 8],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([2, 192, 5941931],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([2, 192, 5941931],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([2, 198, 5761873],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([2, 198, 5761873],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([2, 200, 5704254],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([2, 200, 5704254],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([2, 2100, 543263],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 2100, 543263],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([2, 2541, 448978],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 2541, 448978],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([2, 285212673, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 285212673, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([2, 285212673, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([2, 285212673, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([2, 3, 47535446, 8],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([2, 3, 8, 47535446],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([2, 300, 3802836],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([2, 300, 3802836],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([2, 3024, 377266],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 3024, 377266],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([2, 3549, 321457],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 3549, 321457],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([2, 400, 2852127],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([2, 400, 2852127],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([2, 4116, 277175],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 4116, 277175],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([2, 4725, 241450],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 5376, 212212],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 570425345, 2],"float32"), max=0, )
paddle.Tensor.clip(Tensor([2, 6069, 187981],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 6804, 167674],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 7581, 150489],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 8400, 135816],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 9261, 123189],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([20092, 1, 56784, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([20960, 27216, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([209716, 1, 5440, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([209716, 5440, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([212212, 5376, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([214748365, 20],"float16"), max=0, )
paddle.Tensor.clip(Tensor([214748365, 20],"float16"), min=0, )
paddle.Tensor.clip(Tensor([21731, 1, 52500, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2228225, 1, 32, 32],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([224489, 2541, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([224489, 2541, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([2281701379, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([2281701379],"float32"), -100.0, 100.0, )
paddle.Tensor.clip(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.clip(Tensor([2281701379],"float32"), 0, 4.605170185988092, )
paddle.Tensor.clip(Tensor([2281701379],"float32"), 0, 89.99, )
paddle.Tensor.clip(Tensor([2281701379],"float32"), max=0, )
paddle.Tensor.clip(Tensor([2281701379],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2281701379],"float32"), min=0, max=15.9, )
paddle.Tensor.clip(Tensor([2281701379],"float32"), min=0, max=6.9, )
paddle.Tensor.clip(Tensor([2281701379],"float32"), min=0.0001, )
paddle.Tensor.clip(Tensor([2281701379],"int32"), 0, 7, )
paddle.Tensor.clip(Tensor([2281701379],"int32"), 0, 8, )
paddle.Tensor.clip(Tensor([228170138, 10],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([23, 99204408],"float32"), max=1, )
paddle.Tensor.clip(Tensor([23, 99204408],"float32"), min=1e-08, )
paddle.Tensor.clip(Tensor([23498, 24276, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([23580, 1, 48384, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([238224, 1, 4789, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([238224, 4789, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([241450, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([253522376, 1, 3, 3],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([25675, 1, 44436, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([25928425, 22, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([25928425, 22, 4],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([25928425, 22, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([26527, 21504, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([27163112, 21, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([27163112, 21, 4],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([27163112, 21, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([27163112, 84],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([27163112, 84],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([271632, 2100, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([271632, 2100, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([273914, 1, 4165, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([273914, 4165, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([277175, 4116, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([28062, 1, 40656, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2852127, 200, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([2852127, 200, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([2880937, 198, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([2880937, 198, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([2910334, 1, 28, 28],"float32"), -128, 127, )
paddle.Tensor.clip(Tensor([2910334, 196, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([2910334, 196, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([2910334, 28, 28],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([29709, 38402, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2970966, 192, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([2970966, 192, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([3, 27163112, 28],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([3, 28, 27163112],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([3, 8, 95070891],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([3, 95070891, 8],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([30798, 1, 37044, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([30953, 36858, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([31690297, 18, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([31690297, 18, 4],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([31690297, 18, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([317080, 1, 3598, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([317080, 3598, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([32, 71303169],"float32"), max=1, )
paddle.Tensor.clip(Tensor([32, 71303169],"float32"), min=1e-08, )
paddle.Tensor.clip(Tensor([321457, 3549, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3241054, 176, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([3241054, 176, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([325957340, 7],"int32"), 2, )
paddle.Tensor.clip(Tensor([33954, 1, 33600, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([35651585, 8, 8],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([371371, 6, 32, 32],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([372828, 3060, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([37623, 1, 30324, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([377266, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([380283564, 6],"float32"), -128, 127, )
paddle.Tensor.clip(Tensor([3961288, 576],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([4, 570425345],"float32"), max=1, )
paddle.Tensor.clip(Tensor([4, 570425345],"float32"), min=1e-08, )
paddle.Tensor.clip(Tensor([41919, 1, 27216, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4294967297],"float16"), max=0, )
paddle.Tensor.clip(Tensor([4294967297],"float16"), min=0, )
paddle.Tensor.clip(Tensor([442705, 2577, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([448978, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([46996, 1, 24276, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([47159, 12096, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([47159, 12096, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([475355, 3, 40, 40, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([50931, 22400, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([51349, 11109, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([51349, 11109, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([51856850, 11, 4],"float32"), min=0, max=1, )
paddle.Tensor.clip(Tensor([51856850, 11, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([51856850, 11, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([518569, 1100, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([518569, 1100, 4],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([518569, 1100, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([53053, 1, 21504, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([536871, 2125, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([543263, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([56123, 10164, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([56123, 10164, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([5704254, 100, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([5704254, 100, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([576, 3961288],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([6, 1, 126761188, 3],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([6, 1, 3, 126761188],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([6, 42253730, 3, 3],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([61595, 9261, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([61595, 9261, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([63380594, 9, 4],"float32"), min=0, max=1, )
paddle.Tensor.clip(Tensor([63380594, 9, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([63380594, 9, 4],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([63380594, 9, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([64, 1, 1273271, 28],"float32"), -128, 127, )
paddle.Tensor.clip(Tensor([64, 1, 28, 1273271],"float32"), -128, 127, )
paddle.Tensor.clip(Tensor([64, 35651585],"float32"), max=1, )
paddle.Tensor.clip(Tensor([64, 35651585],"float32"), min=1e-08, )
paddle.Tensor.clip(Tensor([64, 45474, 28, 28],"float32"), -128, 127, )
paddle.Tensor.clip(Tensor([660980, 1726, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([67908, 8400, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([67908, 8400, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([69142467, 33],"float32"), max=1, )
paddle.Tensor.clip(Tensor([69142467, 33],"float32"), min=1e-08, )
paddle.Tensor.clip(Tensor([7, 325957340],"float32"), max=1, )
paddle.Tensor.clip(Tensor([7, 325957340],"float32"), min=1e-08, )
paddle.Tensor.clip(Tensor([75245, 7581, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([75245, 7581, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([7546, 75600, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([760567127, 3],"int32"), 2, )
paddle.Tensor.clip(Tensor([7605672, 3, 10, 10, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 285212673],"float32"), max=1, )
paddle.Tensor.clip(Tensor([8, 285212673],"float32"), min=1e-08, )
paddle.Tensor.clip(Tensor([8075, 70644, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([83837, 6804, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([83837, 6804, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([838861, 1360, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([84, 27163112],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([8662, 65856, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([9, 253522376],"float32"), -128, 127, )
paddle.Tensor.clip(Tensor([9316, 61236, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([93991, 6069, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([93991, 6069, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([94317, 12096, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([990322, 16, 12, 12],"float32"), -57344, 57344, )
paddle.Tensor.clone(Tensor([1, 100, 22817014],"float32"), )
paddle.Tensor.clone(Tensor([1, 10000, 228171],"float32"), )
paddle.Tensor.clone(Tensor([1, 1024, 30948, 72],"float32"), )
paddle.Tensor.clone(Tensor([1, 1024, 48, 46422],"float32"), )
paddle.Tensor.clone(Tensor([1, 1140850690, 2],"float32"), )
paddle.Tensor.clone(Tensor([1, 1178565, 44, 44],"float32"), )
paddle.Tensor.clone(Tensor([1, 12, 1, 190141782],"float32"), )
paddle.Tensor.clone(Tensor([1, 12, 11, 17285617],"float32"), )
paddle.Tensor.clone(Tensor([1, 12, 11883862, 16],"float32"), )
paddle.Tensor.clone(Tensor([1, 12, 1485483, 128],"float32"), )
paddle.Tensor.clone(Tensor([1, 12, 168, 1131797],"float32"), )
paddle.Tensor.clone(Tensor([1, 12, 21, 9054371],"float32"), )
paddle.Tensor.clone(Tensor([1, 12, 2970966, 64],"float32"), )
paddle.Tensor.clone(Tensor([1, 12, 42, 4527186],"float32"), )
paddle.Tensor.clone(Tensor([1, 12, 5941931, 32],"float32"), )
paddle.Tensor.clone(Tensor([1, 12, 742742, 256],"float32"), )
paddle.Tensor.clone(Tensor([1, 12, 84, 2263593],"float32"), )
paddle.Tensor.clone(Tensor([1, 128, 152, 117275],"float32"), )
paddle.Tensor.clone(Tensor([1, 128, 65537, 272],"float32"), )
paddle.Tensor.clone(Tensor([1, 12964213, 11, 16],"float32"), )
paddle.Tensor.clone(Tensor([1, 144, 21, 754531],"float32"), )
paddle.Tensor.clone(Tensor([1, 144, 495161, 32],"float32"), )
paddle.Tensor.clone(Tensor([1, 15, 2376773, 64],"float32"), )
paddle.Tensor.clone(Tensor([1, 15, 64, 2376773],"float32"), )
paddle.Tensor.clone(Tensor([1, 152113426, 15],"float32"), )
paddle.Tensor.clone(Tensor([1, 171888, 13275],"float32"), )
paddle.Tensor.clone(Tensor([1, 18, 168, 754531],"float32"), )
paddle.Tensor.clone(Tensor([1, 18, 495161, 256],"float32"), )
paddle.Tensor.clone(Tensor([1, 192, 185686, 64],"float32"), )
paddle.Tensor.clone(Tensor([1, 192, 270088, 44],"float32"), )
paddle.Tensor.clone(Tensor([1, 192, 32, 371371],"float32"), )
paddle.Tensor.clone(Tensor([1, 192, 371371, 32],"float32"), )
paddle.Tensor.clone(Tensor([1, 192, 44, 270088],"float32"), )
paddle.Tensor.clone(Tensor([1, 192, 64, 185686],"float32"), )
paddle.Tensor.clone(Tensor([1, 2, 1140850690],"float32"), )
paddle.Tensor.clone(Tensor([1, 2048, 24, 46422],"float32"), )
paddle.Tensor.clone(Tensor([1, 2048, 30948, 36],"float32"), )
paddle.Tensor.clone(Tensor([1, 212212, 84, 128],"float32"), )
paddle.Tensor.clone(Tensor([1, 21504, 106106],"float32"), )
paddle.Tensor.clone(Tensor([1, 2228225, 32, 32],"float32"), )
paddle.Tensor.clone(Tensor([1, 2281701379, 1],"float32"), )
paddle.Tensor.clone(Tensor([1, 2281701379],"bool"), )
paddle.Tensor.clone(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.clone(Tensor([1, 2281701379],"int32"), )
paddle.Tensor.clone(Tensor([1, 247581, 96, 96, 1],"float32"), )
paddle.Tensor.clone(Tensor([1, 2500, 912681],"float32"), )
paddle.Tensor.clone(Tensor([1, 25073642, 91],"float32"), )
paddle.Tensor.clone(Tensor([1, 2541, 897955],"float32"), )
paddle.Tensor.clone(Tensor([1, 256, 123791, 72],"float32"), )
paddle.Tensor.clone(Tensor([1, 256, 139265, 64],"float32"), )
paddle.Tensor.clone(Tensor([1, 256, 168, 53053],"float32"), )
paddle.Tensor.clone(Tensor([1, 256, 192, 46422],"float32"), )
paddle.Tensor.clone(Tensor([1, 256, 21, 424424],"float32"), )
paddle.Tensor.clone(Tensor([1, 256, 24, 371371],"float32"), )
paddle.Tensor.clone(Tensor([1, 256, 247581, 36],"float32"), )
paddle.Tensor.clone(Tensor([1, 256, 278529, 32],"float32"), )
paddle.Tensor.clone(Tensor([1, 256, 30948, 288],"float32"), )
paddle.Tensor.clone(Tensor([1, 256, 34817, 256],"float32"), )
paddle.Tensor.clone(Tensor([1, 256, 42, 212212],"float32"), )
paddle.Tensor.clone(Tensor([1, 256, 48, 185686],"float32"), )
paddle.Tensor.clone(Tensor([1, 256, 69633, 128],"float32"), )
paddle.Tensor.clone(Tensor([1, 256, 84, 106106],"float32"), )
paddle.Tensor.clone(Tensor([1, 2640859, 24, 36],"float32"), )
paddle.Tensor.clone(Tensor([1, 28521268, 80],"float32"), )
paddle.Tensor.clone(Tensor([1, 3, 7922575, 96, 1],"float32"), )
paddle.Tensor.clone(Tensor([1, 3, 96, 7922575, 1],"float32"), )
paddle.Tensor.clone(Tensor([1, 3, 96, 96, 82527],"float32"), )
paddle.Tensor.clone(Tensor([1, 33554433, 68],"float32"), )
paddle.Tensor.clone(Tensor([1, 3395389, 21, 32],"float32"), )
paddle.Tensor.clone(Tensor([1, 35651585, 1, 64],"float32"), )
paddle.Tensor.clone(Tensor([1, 41264, 192, 288],"float32"), )
paddle.Tensor.clone(Tensor([1, 50, 45634028],"float32"), )
paddle.Tensor.clone(Tensor([1, 53053, 168, 256],"float32"), )
paddle.Tensor.clone(Tensor([1, 55189, 152, 272],"float32"), )
paddle.Tensor.clone(Tensor([1, 557057, 64, 64],"float32"), )
paddle.Tensor.clone(Tensor([1, 570425345, 4],"float32"), )
paddle.Tensor.clone(Tensor([1, 625, 3650723],"float32"), )
paddle.Tensor.clone(Tensor([1, 660215, 48, 72],"float32"), )
paddle.Tensor.clone(Tensor([1, 760567127, 3],"float32"), )
paddle.Tensor.clone(Tensor([1, 848848, 42, 64],"float32"), )
paddle.Tensor.clone(Tensor([1, 8912897, 256],"float32"), )
paddle.Tensor.clone(Tensor([10, 228170138],"float32"), )
paddle.Tensor.clone(Tensor([10, 429496730],"float16"), )
paddle.Tensor.clone(Tensor([100, 22817014],"float32"), )
paddle.Tensor.clone(Tensor([100, 42949673],"float16"), )
paddle.Tensor.clone(Tensor([10316, 256, 24, 36],"float32"), )
paddle.Tensor.clone(Tensor([105344, 21660],"float32"), )
paddle.Tensor.clone(Tensor([106106, 21504, 1],"float32"), )
paddle.Tensor.clone(Tensor([1080352, 12, 11, 16],"float32"), )
paddle.Tensor.clone(Tensor([11, 207427399],"float32"), )
paddle.Tensor.clone(Tensor([11225, 2541, 80],"float32"), )
paddle.Tensor.clone(Tensor([1124, 2029984],"float32"), )
paddle.Tensor.clone(Tensor([114085069, 20],"float32"), )
paddle.Tensor.clone(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.clone(Tensor([11409, 2500, 80],"float32"), )
paddle.Tensor.clone(Tensor([11606, 192, 32, 32],"float32"), )
paddle.Tensor.clone(Tensor([1166, 21504, 91],"float32"), )
paddle.Tensor.clone(Tensor([123, 18550418],"float32"), )
paddle.Tensor.clone(Tensor([1290, 2048, 24, 36],"float32"), )
paddle.Tensor.clone(Tensor([13206, 2541, 68],"float32"), )
paddle.Tensor.clone(Tensor([13264, 256, 21, 32],"float32"), )
paddle.Tensor.clone(Tensor([13275, 171888, 1],"float32"), )
paddle.Tensor.clone(Tensor([142606337, 16],"float32"), )
paddle.Tensor.clone(Tensor([162, 256, 192, 288],"float32"), )
paddle.Tensor.clone(Tensor([17685, 12, 84, 128],"float32"), )
paddle.Tensor.clone(Tensor([17825793, 128],"float32"), )
paddle.Tensor.clone(Tensor([178258, 50, 256],"float32"), )
paddle.Tensor.clone(Tensor([208, 256, 168, 256],"float32"), )
paddle.Tensor.clone(Tensor([2147483649, 2],"float16"), )
paddle.Tensor.clone(Tensor([224489, 2541, 4],"float32"), )
paddle.Tensor.clone(Tensor([2281701379],"float32"), )
paddle.Tensor.clone(Tensor([2281701379],"int32"), )
paddle.Tensor.clone(Tensor([2281702, 1000],"float32"), )
paddle.Tensor.clone(Tensor([228171, 10000, 1],"float32"), )
paddle.Tensor.clone(Tensor([228171, 2500, 4],"float32"), )
paddle.Tensor.clone(Tensor([23580, 144, 21, 32],"float32"), )
paddle.Tensor.clone(Tensor([2579, 256, 48, 72],"float32"), )
paddle.Tensor.clone(Tensor([26527, 21504, 4],"float32"), )
paddle.Tensor.clone(Tensor([282950, 12, 21, 32],"float32"), )
paddle.Tensor.clone(Tensor([285212673, 8],"float32"), )
paddle.Tensor.clone(Tensor([285213, 100, 80],"float32"), )
paddle.Tensor.clone(Tensor([2853, 10000, 80],"float32"), )
paddle.Tensor.clone(Tensor([2902, 192, 64, 64],"float32"), )
paddle.Tensor.clone(Tensor([2948, 18, 168, 256],"float32"), )
paddle.Tensor.clone(Tensor([2970966, 12, 1, 64],"float32"), )
paddle.Tensor.clone(Tensor([3316, 256, 42, 64],"float32"), )
paddle.Tensor.clone(Tensor([3319, 171888, 4],"float32"), )
paddle.Tensor.clone(Tensor([35651585, 64],"float32"), )
paddle.Tensor.clone(Tensor([3650723, 625, 1],"float32"), )
paddle.Tensor.clone(Tensor([37138, 15, 64, 64],"float32"), )
paddle.Tensor.clone(Tensor([380283564, 2, 3],"float32"), )
paddle.Tensor.clone(Tensor([39045158, 110],"float16"), )
paddle.Tensor.clone(Tensor([4294967297],"float16"), )
paddle.Tensor.clone(Tensor([4294968, 1000],"float16"), )
paddle.Tensor.clone(Tensor([432, 128, 152, 272],"float32"), )
paddle.Tensor.clone(Tensor([4422, 12, 168, 256],"float32"), )
paddle.Tensor.clone(Tensor([4563403, 500],"int32"), )
paddle.Tensor.clone(Tensor([53053, 21504, 2],"float32"), )
paddle.Tensor.clone(Tensor([570425345, 4],"float32"), )
paddle.Tensor.clone(Tensor([5704254, 100, 4],"float32"), )
paddle.Tensor.clone(Tensor([57043, 10000, 4],"float32"), )
paddle.Tensor.clone(Tensor([6139, 192, 44, 44],"float32"), )
paddle.Tensor.clone(Tensor([645, 1024, 48, 72],"float32"), )
paddle.Tensor.clone(Tensor([70738, 12, 42, 64],"float32"), )
paddle.Tensor.clone(Tensor([7074, 21504, 15],"float32"), )
paddle.Tensor.clone(Tensor([71303169, 32],"float32"), )
paddle.Tensor.clone(Tensor([82527, 3, 96, 96, 1],"float32"), )
paddle.Tensor.clone(Tensor([829, 256, 84, 128],"float32"), )
paddle.Tensor.clone(Tensor([89129, 100, 256],"float32"), )
paddle.Tensor.clone(Tensor([897955, 2541],"bool"), )
paddle.Tensor.clone(Tensor([912681, 2500, 1],"float32"), )
paddle.Tensor.conj(Tensor([10, 228170138],"float32"), )
paddle.Tensor.conj(Tensor([10, 429496730],"float16"), )
paddle.Tensor.conj(Tensor([1073741825, 4],"float16"), )
paddle.Tensor.conj(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.conj(Tensor([12, 190141782],"float32"), )
paddle.Tensor.conj(Tensor([12, 357913942],"float16"), )
paddle.Tensor.conj(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.conj(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.conj(Tensor([2, 3, 715827883],"float16"), )
paddle.Tensor.conj(Tensor([2, 536870913, 4],"float16"), )
paddle.Tensor.conj(Tensor([20, 214748365],"float16"), )
paddle.Tensor.conj(Tensor([2147483649, 2],"float16"), )
paddle.Tensor.conj(Tensor([214748365, 20],"float16"), )
paddle.Tensor.conj(Tensor([214748365, 4, 5],"float16"), )
paddle.Tensor.conj(Tensor([2281701379, 1],"float32"), )
paddle.Tensor.conj(Tensor([2281701379],"float32"), )
paddle.Tensor.conj(Tensor([3, 1431655766],"float16"), )
paddle.Tensor.conj(Tensor([3, 286331154, 5],"float16"), )
paddle.Tensor.conj(Tensor([3, 4, 357913942],"float16"), )
paddle.Tensor.conj(Tensor([3, 760567127],"float32"), )
paddle.Tensor.conj(Tensor([357913942, 3, 4],"float16"), )
paddle.Tensor.conj(Tensor([4, 1073741825],"float16"), )
paddle.Tensor.conj(Tensor([4, 570425345],"float32"), )
paddle.Tensor.conj(Tensor([4294967297, 1],"float16"), )
paddle.Tensor.conj(Tensor([429496730, 10],"float16"), )
paddle.Tensor.conj(Tensor([456340276, 5],"float32"), )
paddle.Tensor.conj(Tensor([5, 456340276],"float32"), )
paddle.Tensor.conj(Tensor([5, 858993460],"float16"), )
paddle.Tensor.conj(Tensor([570425345, 4],"float32"), )
paddle.Tensor.conj(Tensor([760567127, 3],"float32"), )
paddle.Tensor.conj(Tensor([858993460, 5],"float16"), )
paddle.Tensor.cos(Tensor([1, 10, 3565159, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 10, 8, 28521268],"float32"), )
paddle.Tensor.cos(Tensor([1, 11, 3241054, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 11, 4, 51856850],"float32"), )
paddle.Tensor.cos(Tensor([1, 1100, 2074274],"float32"), )
paddle.Tensor.cos(Tensor([1, 1188387, 30, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 12, 2970966, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 12, 9, 21126865],"float32"), )
paddle.Tensor.cos(Tensor([1, 1426064, 25, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 144, 200, 79226],"float32"), )
paddle.Tensor.cos(Tensor([1, 144, 247581, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 178258, 200, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 18, 126761188],"float32"), )
paddle.Tensor.cos(Tensor([1, 18, 1980644, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 18, 25, 5070448],"float32"), )
paddle.Tensor.cos(Tensor([1, 18, 4, 31690297],"float32"), )
paddle.Tensor.cos(Tensor([1, 192, 144, 82527],"float32"), )
paddle.Tensor.cos(Tensor([1, 192, 185686, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 1980644, 18, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 20, 15, 7605672],"float32"), )
paddle.Tensor.cos(Tensor([1, 20, 1782580, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 21, 108652447],"float32"), )
paddle.Tensor.cos(Tensor([1, 21, 1697695, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 21, 4, 27163112],"float32"), )
paddle.Tensor.cos(Tensor([1, 22, 103713700],"float32"), )
paddle.Tensor.cos(Tensor([1, 22, 1620527, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 22, 4, 25928425],"float32"), )
paddle.Tensor.cos(Tensor([1, 23, 1550069, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 23, 18, 5511356],"float32"), )
paddle.Tensor.cos(Tensor([1, 2376773, 15, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 24, 1485483, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 24, 18, 5281717],"float32"), )
paddle.Tensor.cos(Tensor([1, 247581, 144, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 2742430, 13, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 300, 118839, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 300, 4, 1901418],"float32"), )
paddle.Tensor.cos(Tensor([1, 35651585, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 356516, 100, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 36, 50, 1267612],"float32"), )
paddle.Tensor.cos(Tensor([1, 36, 990322, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 3961288, 9, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 40, 30, 1901418],"float32"), )
paddle.Tensor.cos(Tensor([1, 40, 891290, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 4456449, 8, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 45, 36, 1408458],"float32"), )
paddle.Tensor.cos(Tensor([1, 45, 792258, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 48, 36, 1320430],"float32"), )
paddle.Tensor.cos(Tensor([1, 48, 742742, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 495161, 72, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 594194, 60, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 713032, 50, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 72, 100, 316903],"float32"), )
paddle.Tensor.cos(Tensor([1, 72, 495161, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 80, 445645, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 80, 60, 475355],"float32"), )
paddle.Tensor.cos(Tensor([1, 89, 400580, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 89, 72, 356071],"float32"), )
paddle.Tensor.cos(Tensor([1, 8912897, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 9, 13, 19501722],"float32"), )
paddle.Tensor.cos(Tensor([1, 9, 253522376],"float32"), )
paddle.Tensor.cos(Tensor([1, 9, 3961288, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 9, 4, 63380594],"float32"), )
paddle.Tensor.cos(Tensor([1, 96, 371371, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 96, 72, 330108],"float32"), )
paddle.Tensor.cos(Tensor([1, 990322, 36, 64],"float32"), )
paddle.Tensor.cos(Tensor([10, 228170138],"float32"), )
paddle.Tensor.cos(Tensor([11, 207427399],"float32"), )
paddle.Tensor.cos(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.cos(Tensor([118839, 20, 15, 64],"float32"), )
paddle.Tensor.cos(Tensor([1238, 144, 200, 64],"float32"), )
paddle.Tensor.cos(Tensor([1290, 192, 144, 64],"float32"), )
paddle.Tensor.cos(Tensor([131072, 17409],"float32"), )
paddle.Tensor.cos(Tensor([142, 16068320],"float32"), )
paddle.Tensor.cos(Tensor([142606337, 16],"float32"), )
paddle.Tensor.cos(Tensor([1485483, 24, 64],"float32"), )
paddle.Tensor.cos(Tensor([16, 142606337],"float32"), )
paddle.Tensor.cos(Tensor([16, 16, 8912897],"float32"), )
paddle.Tensor.cos(Tensor([16, 2228225, 64],"float32"), )
paddle.Tensor.cos(Tensor([16176, 38, 58, 64],"float32"), )
paddle.Tensor.cos(Tensor([1620527, 22, 64],"float32"), )
paddle.Tensor.cos(Tensor([1697695, 21, 64],"float32"), )
paddle.Tensor.cos(Tensor([17825793, 128],"float32"), )
paddle.Tensor.cos(Tensor([1980644, 18, 64],"float32"), )
paddle.Tensor.cos(Tensor([19807, 36, 50, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 10, 15, 7605672],"float32"), )
paddle.Tensor.cos(Tensor([2, 10, 1782580, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 1100, 1037137],"float32"), )
paddle.Tensor.cos(Tensor([2, 1188387, 15, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 155007, 115, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 17825793, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 19, 29, 2070510],"float32"), )
paddle.Tensor.cos(Tensor([2, 19, 938200, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 307342, 58, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 38, 469100, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 38, 58, 517628],"float32"), )
paddle.Tensor.cos(Tensor([2, 614683, 29, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 76, 115, 130533],"float32"), )
paddle.Tensor.cos(Tensor([2, 76, 234550, 64],"float32"), )
paddle.Tensor.cos(Tensor([20, 114085069],"float32"), )
paddle.Tensor.cos(Tensor([200, 11408507],"float32"), )
paddle.Tensor.cos(Tensor([2048, 1114113],"float32"), )
paddle.Tensor.cos(Tensor([20632, 48, 36, 64],"float32"), )
paddle.Tensor.cos(Tensor([22008, 45, 36, 64],"float32"), )
paddle.Tensor.cos(Tensor([2228225, 16, 64],"float32"), )
paddle.Tensor.cos(Tensor([2281701379],"float32"), )
paddle.Tensor.cos(Tensor([23767723, 96],"float32"), )
paddle.Tensor.cos(Tensor([237678, 10, 15, 64],"float32"), )
paddle.Tensor.cos(Tensor([24, 1485483, 64],"float32"), )
paddle.Tensor.cos(Tensor([24, 24, 3961288],"float32"), )
paddle.Tensor.cos(Tensor([264, 8642809],"float32"), )
paddle.Tensor.cos(Tensor([285212673, 8],"float32"), )
paddle.Tensor.cos(Tensor([29710, 300, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([29710, 40, 30, 64],"float32"), )
paddle.Tensor.cos(Tensor([304715, 9, 13, 64],"float32"), )
paddle.Tensor.cos(Tensor([32411, 1100, 64],"float32"), )
paddle.Tensor.cos(Tensor([32768, 69633],"float32"), )
paddle.Tensor.cos(Tensor([330108, 12, 9, 64],"float32"), )
paddle.Tensor.cos(Tensor([34, 67108865],"float32"), )
paddle.Tensor.cos(Tensor([35651585, 64],"float32"), )
paddle.Tensor.cos(Tensor([3961288, 9, 64],"float32"), )
paddle.Tensor.cos(Tensor([4, 25, 29, 786794],"float32"), )
paddle.Tensor.cos(Tensor([4, 25, 356516, 64],"float32"), )
paddle.Tensor.cos(Tensor([4, 307342, 29, 64],"float32"), )
paddle.Tensor.cos(Tensor([405132, 22, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([4080, 76, 115, 64],"float32"), )
paddle.Tensor.cos(Tensor([4096, 557057],"float32"), )
paddle.Tensor.cos(Tensor([424424, 21, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([445645, 10, 8, 64],"float32"), )
paddle.Tensor.cos(Tensor([49175, 25, 29, 64],"float32"), )
paddle.Tensor.cos(Tensor([495161, 18, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([4952, 72, 100, 64],"float32"), )
paddle.Tensor.cos(Tensor([5, 456340276],"float32"), )
paddle.Tensor.cos(Tensor([512, 4456449],"float32"), )
paddle.Tensor.cos(Tensor([5158, 96, 72, 64],"float32"), )
paddle.Tensor.cos(Tensor([5564, 89, 72, 64],"float32"), )
paddle.Tensor.cos(Tensor([570425345, 4],"float32"), )
paddle.Tensor.cos(Tensor([58, 39339679],"float32"), )
paddle.Tensor.cos(Tensor([6, 380283564],"float32"), )
paddle.Tensor.cos(Tensor([64704, 19, 29, 64],"float32"), )
paddle.Tensor.cos(Tensor([7, 325957340],"float32"), )
paddle.Tensor.cos(Tensor([70, 32595734],"float32"), )
paddle.Tensor.cos(Tensor([71303169, 32],"float32"), )
paddle.Tensor.cos(Tensor([7428, 80, 60, 64],"float32"), )
paddle.Tensor.cos(Tensor([760567127, 3],"float32"), )
paddle.Tensor.cos(Tensor([79226, 18, 25, 64],"float32"), )
paddle.Tensor.cos(Tensor([8, 285212673],"float32"), )
paddle.Tensor.cos(Tensor([810264, 11, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([8192, 278529],"float32"), )
paddle.Tensor.cos(Tensor([82527, 24, 18, 64],"float32"), )
paddle.Tensor.cos(Tensor([86115, 23, 18, 64],"float32"), )
paddle.Tensor.cos(Tensor([8912897, 256],"float32"), )
paddle.Tensor.cos(Tensor([990322, 9, 4, 64],"float32"), )
paddle.Tensor.cumsum(Tensor([1, 10, 228170138],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 10, 228170138],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 11408507, 200],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 11408507, 200],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 12, 190141782],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 12, 190141782],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 126761188, 18],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 126761188, 18],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 144, 15845149],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 144, 15845149],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 152113426, 15],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 152113426, 15],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 15845149, 144],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 15845149, 144],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 175515491, 13],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 175515491, 13],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 18, 126761188],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 18, 126761188],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 192, 11883862],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 192, 11883862],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 20, 114085069],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 20, 114085069],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 2281701379],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1, 22817014, 100],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 22817014, 100],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 23, 99204408],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 23, 99204408],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 24, 95070891],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 24, 95070891],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 253522376, 9],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 253522376, 9],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 285212673, 8],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 285212673, 8],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 31690297, 72],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 31690297, 72],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 36, 63380594],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 36, 63380594],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 38028357, 60],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 38028357, 60],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 40, 57042535],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 40, 57042535],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 45, 50704476],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 45, 50704476],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 45634028, 50],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 45634028, 50],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 48, 47535446],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 48, 47535446],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 63380594, 36],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 63380594, 36],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 72, 31690297],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 72, 31690297],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 76056713, 30],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 76056713, 30],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 80, 28521268],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 80, 28521268],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 89, 25637095],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 89, 25637095],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 9, 253522376],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 9, 253522376],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 91268056, 25],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 91268056, 25],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 96, 23767723],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 96, 23767723],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1035255, 38, 58],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1035255, 38, 58],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([108652447, 21],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([114085069, 20],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1140850690, 2],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1267612, 36, 50],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1267612, 36, 50],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1320430, 48, 36],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1320430, 48, 36],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1408458, 45, 36],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1408458, 45, 36],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([15211343, 10, 15],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([15211343, 10, 15],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([16182280, 141],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([190141782, 12],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1901418, 40, 30],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1901418, 40, 30],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([19501722, 9, 13],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([19501722, 9, 13],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([2, 10, 114085069],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([2, 10, 114085069],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([2, 1140850690],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([2, 19, 60044774],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([2, 19, 60044774],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([2, 19669840, 58],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([2, 19669840, 58],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([2, 38, 30022387],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([2, 38, 30022387],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([2, 39339679, 29],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([2, 39339679, 29],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([2, 76, 15011194],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([2, 76, 15011194],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([2, 76056713, 15],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([2, 76056713, 15],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([2, 9920441, 115],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([2, 9920441, 115],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([207427399, 11],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([21126865, 12, 9],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([21126865, 12, 9],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([21525485, 106],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([21730490, 105],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([21939437, 104],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([22152441, 103],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([22369622, 102],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([22591103, 101],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([2281701379],"float32"), -1, )
paddle.Tensor.cumsum(Tensor([228170138, 10],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([22817014, 100],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([23047489, 99],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([23282668, 98],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([23522695, 97],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([23767723, 96],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([24017910, 95],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([24273419, 94],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([24534424, 93],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([24801102, 92],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([25073642, 91],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([25352238, 90],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([25637095, 89],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([25928425, 88],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([261065, 76, 115],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([261065, 76, 115],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([26226453, 87],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([26531412, 86],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([26843546, 85],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([27163112, 84],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([27490379, 83],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([27825627, 82],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([28169153, 81],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([28521268, 10, 8],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([28521268, 10, 8],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([28521268, 80],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([28882296, 79],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([29252582, 78],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([29632486, 77],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([30022387, 76],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([30422686, 75],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([30833803, 74],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([31256184, 73],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([3147175, 25, 29],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([3147175, 25, 29],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([31690297, 72],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([316903, 72, 100],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([316903, 72, 100],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([32136640, 71],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([32595734, 70],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([330108, 96, 72],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([330108, 96, 72],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([33068136, 69],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([33554433, 68],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([34055245, 67],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([34571234, 66],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([35103099, 65],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([356071, 89, 72],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([356071, 89, 72],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([35651585, 64],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([36217483, 63],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([36801636, 62],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([37404941, 61],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([38028357, 60],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([38672905, 59],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([39339679, 58],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([4, 19669840, 29],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([4, 19669840, 29],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([4, 25, 22817014],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([4, 25, 22817014],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([4, 570425345],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([40029849, 57],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([40744668, 56],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([4141019, 19, 29],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([4141019, 19, 29],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([41485480, 55],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([42253730, 54],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([4294967297],"float16"), -1, )
paddle.Tensor.cumsum(Tensor([43050970, 53],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([43878873, 52],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([44739243, 51],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([45634028, 50],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([46565335, 49],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([47535446, 48],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([475355, 80, 60],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([475355, 80, 60],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([48546838, 47],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([49602204, 46],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([50704476, 45],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([5070448, 18, 25],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([5070448, 18, 25],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([51856850, 44],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([5281717, 24, 18],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([5281717, 24, 18],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([53062823, 43],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([54326224, 42],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([5511356, 23, 18],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([5511356, 23, 18],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([55651254, 41],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([57042535, 40],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([58505164, 39],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([6, 380283564],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([60044774, 38],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([61667605, 37],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([63380594, 36],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([760567127, 3],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([7605672, 20, 15],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([7605672, 20, 15],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([79226, 144, 200],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([79226, 144, 200],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([82527, 192, 144],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([82527, 192, 144],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([99204408, 23],"float32"), axis=-1, )
paddle.Tensor.detach(Tensor([1, 100, 118839, 192],"float32"), )
paddle.Tensor.detach(Tensor([1, 100, 124006, 184],"float32"), )
paddle.Tensor.detach(Tensor([1, 100, 129643, 176],"float32"), )
paddle.Tensor.detach(Tensor([1, 100, 176, 129643],"float32"), )
paddle.Tensor.detach(Tensor([1, 100, 184, 124006],"float32"), )
paddle.Tensor.detach(Tensor([1, 100, 192, 118839],"float32"), )
paddle.Tensor.detach(Tensor([1, 100, 22817014],"float32"), )
paddle.Tensor.detach(Tensor([1, 1024, 16, 262145],"float16"), )
paddle.Tensor.detach(Tensor([1, 1024, 65537, 64],"float16"), )
paddle.Tensor.detach(Tensor([1, 10285, 221848],"float32"), )
paddle.Tensor.detach(Tensor([1, 11, 207427399],"float32"), )
paddle.Tensor.detach(Tensor([1, 1100, 2074274],"float32"), )
paddle.Tensor.detach(Tensor([1, 1140850690, 2],"float32"), )
paddle.Tensor.detach(Tensor([1, 11883862, 192],"float32"), )
paddle.Tensor.detach(Tensor([1, 12400551, 184],"float32"), )
paddle.Tensor.detach(Tensor([1, 12964213, 176],"float32"), )
paddle.Tensor.detach(Tensor([1, 142606337, 16],"float32"), )
paddle.Tensor.detach(Tensor([1, 142606337, 2, 8],"float32"), )
paddle.Tensor.detach(Tensor([1, 176, 12964213],"float32"), )
paddle.Tensor.detach(Tensor([1, 18, 126761188],"float32"), )
paddle.Tensor.detach(Tensor([1, 184, 12400551],"float32"), )
paddle.Tensor.detach(Tensor([1, 192, 11883862],"float32"), )
paddle.Tensor.detach(Tensor([1, 196, 11641334],"float32"), )
paddle.Tensor.detach(Tensor([1, 20, 114085069],"float32"), )
paddle.Tensor.detach(Tensor([1, 200, 11408507],"float32"), )
paddle.Tensor.detach(Tensor([1, 21, 108652447],"float32"), )
paddle.Tensor.detach(Tensor([1, 2228225, 1024],"float32"), )
paddle.Tensor.detach(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.detach(Tensor([1, 2281701379],"int64"), )
paddle.Tensor.detach(Tensor([1, 3, 256, 2970966],"float32"), )
paddle.Tensor.detach(Tensor([1, 3, 2970966, 256],"float32"), )
paddle.Tensor.detach(Tensor([1, 300, 176, 43215],"float32"), )
paddle.Tensor.detach(Tensor([1, 300, 184, 41336],"float32"), )
paddle.Tensor.detach(Tensor([1, 300, 192, 39613],"float32"), )
paddle.Tensor.detach(Tensor([1, 300, 39613, 192],"float32"), )
paddle.Tensor.detach(Tensor([1, 300, 41336, 184],"float32"), )
paddle.Tensor.detach(Tensor([1, 300, 43215, 176],"float32"), )
paddle.Tensor.detach(Tensor([1, 34817, 256, 256],"float32"), )
paddle.Tensor.detach(Tensor([1, 4194305, 16, 64],"float16"), )
paddle.Tensor.detach(Tensor([1, 4294967297],"float16"), )
paddle.Tensor.detach(Tensor([1, 570425345, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 6, 1485483, 256],"float32"), )
paddle.Tensor.detach(Tensor([1, 6, 256, 1485483],"float32"), )
paddle.Tensor.detach(Tensor([1, 61896, 192, 192],"float32"), )
paddle.Tensor.detach(Tensor([1, 63380594, 36],"float32"), )
paddle.Tensor.detach(Tensor([1, 67395, 184, 184],"float32"), )
paddle.Tensor.detach(Tensor([1, 71303169, 32],"float32"), )
paddle.Tensor.detach(Tensor([1, 71303169, 4, 8],"float32"), )
paddle.Tensor.detach(Tensor([1, 71304, 32000],"float32"), )
paddle.Tensor.detach(Tensor([1, 73661, 176, 176],"float32"), )
paddle.Tensor.detach(Tensor([1, 760567127, 3],"float32"), )
paddle.Tensor.detach(Tensor([1, 8, 2, 142606337],"float32"), )
paddle.Tensor.detach(Tensor([1, 8, 35651585, 8],"float32"), )
paddle.Tensor.detach(Tensor([1, 8, 4, 71303169],"float32"), )
paddle.Tensor.detach(Tensor([10, 228170138],"float32"), )
paddle.Tensor.detach(Tensor([10, 228170138],"int64"), )
paddle.Tensor.detach(Tensor([100, 100, 100, 2282],"float32"), )
paddle.Tensor.detach(Tensor([100, 100, 228171, 1],"float32"), )
paddle.Tensor.detach(Tensor([100, 15802, 38, 38],"float32"), )
paddle.Tensor.detach(Tensor([100, 228171, 100, 1],"float32"), )
paddle.Tensor.detach(Tensor([100, 281692, 9, 9],"float32"), )
paddle.Tensor.detach(Tensor([100, 4, 150112, 38],"float32"), )
paddle.Tensor.detach(Tensor([100, 4, 38, 150112],"float32"), )
paddle.Tensor.detach(Tensor([100, 4, 633806, 9],"float32"), )
paddle.Tensor.detach(Tensor([100, 4, 9, 633806],"float32"), )
paddle.Tensor.detach(Tensor([1024, 16385, 1, 256],"float16"), )
paddle.Tensor.detach(Tensor([1024, 2, 1, 2097153],"float16"), )
paddle.Tensor.detach(Tensor([1024, 2, 2, 1048577],"float16"), )
paddle.Tensor.detach(Tensor([1024, 2, 32769, 64],"float16"), )
paddle.Tensor.detach(Tensor([1024, 2, 8193, 256],"float16"), )
paddle.Tensor.detach(Tensor([1024, 32769, 2, 64],"float16"), )
paddle.Tensor.detach(Tensor([103713700, 22],"float32"), )
paddle.Tensor.detach(Tensor([1089, 128, 128, 128],"float32"), )
paddle.Tensor.detach(Tensor([111412, 20, 1024],"float32"), )
paddle.Tensor.detach(Tensor([114085069, 20],"float32"), )
paddle.Tensor.detach(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.detach(Tensor([11606, 3, 256, 256],"float32"), )
paddle.Tensor.detach(Tensor([13, 2, 16, 5484860],"float32"), )
paddle.Tensor.detach(Tensor([13, 2, 5484860, 16],"float32"), )
paddle.Tensor.detach(Tensor([13, 685608, 16, 16],"float32"), )
paddle.Tensor.detach(Tensor([16, 128, 128, 8705],"float32"), )
paddle.Tensor.detach(Tensor([16, 128, 16, 69633],"float32"), )
paddle.Tensor.detach(Tensor([16, 128, 32, 34817],"float32"), )
paddle.Tensor.detach(Tensor([16, 128, 34817, 32],"float32"), )
paddle.Tensor.detach(Tensor([16, 128, 69633, 16],"float32"), )
paddle.Tensor.detach(Tensor([16, 128, 8705, 128],"float32"), )
paddle.Tensor.detach(Tensor([16, 139265, 32, 32],"float32"), )
paddle.Tensor.detach(Tensor([16, 557057, 16, 16],"float32"), )
paddle.Tensor.detach(Tensor([16, 8705, 128, 128],"float32"), )
paddle.Tensor.detach(Tensor([16777217, 2, 2, 64],"float16"), )
paddle.Tensor.detach(Tensor([17409, 128, 32, 32],"float32"), )
paddle.Tensor.detach(Tensor([17825793, 8, 2, 8],"float32"), )
paddle.Tensor.detach(Tensor([181896, 12544],"float32"), )
paddle.Tensor.detach(Tensor([2, 3, 1242757, 2, 3, 4, 2, 3, 4],"float16"), )
paddle.Tensor.detach(Tensor([2, 3, 12676119, 5, 6],"int64"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 15845149, 6],"int64"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 2, 3, 1242757, 2, 3, 4],"float16"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 1242757],"float16"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 660215],"float32"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 2, 3, 4, 2, 495161, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 2, 3, 4, 2, 932068, 4],"float16"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 2, 3, 4, 330108, 3, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 2, 3, 4, 621379, 3, 4],"float16"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 2, 3, 660215, 2, 3, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 2, 932068, 4, 2, 3, 4],"float16"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 330108, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 5, 19014179],"int64"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 621379, 3, 4, 2, 3, 4],"float16"), )
paddle.Tensor.detach(Tensor([2, 3, 660215, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 495161, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 932068, 4, 2, 3, 4, 2, 3, 4],"float16"), )
paddle.Tensor.detach(Tensor([2, 9507090, 4, 5, 6],"int64"), )
paddle.Tensor.detach(Tensor([207, 300, 192, 192],"float32"), )
paddle.Tensor.detach(Tensor([2228225, 1024],"float32"), )
paddle.Tensor.detach(Tensor([2228225, 1024],"int64"), )
paddle.Tensor.detach(Tensor([225, 300, 184, 184],"float32"), )
paddle.Tensor.detach(Tensor([2281701379, 1],"float32"), )
paddle.Tensor.detach(Tensor([2281701379, 1],"int64"), )
paddle.Tensor.detach(Tensor([2281701379],"float32"), )
paddle.Tensor.detach(Tensor([2281701379],"int32"), )
paddle.Tensor.detach(Tensor([2281701379],"int64"), )
paddle.Tensor.detach(Tensor([228170138, 10],"float32"), )
paddle.Tensor.detach(Tensor([2281702, 1000],"float32"), )
paddle.Tensor.detach(Tensor([228171, 100, 100, 1],"float32"), )
paddle.Tensor.detach(Tensor([246, 300, 176, 176],"float32"), )
paddle.Tensor.detach(Tensor([27163112, 21, 4],"float32"), )
paddle.Tensor.detach(Tensor([28521268, 20, 4],"float32"), )
paddle.Tensor.detach(Tensor([2852127, 200, 4],"float32"), )
paddle.Tensor.detach(Tensor([2910334, 196, 4],"float32"), )
paddle.Tensor.detach(Tensor([2970966, 192, 4],"float32"), )
paddle.Tensor.detach(Tensor([2970966, 768],"float32"), )
paddle.Tensor.detach(Tensor([298496, 39, 14, 14, 1],"float32"), )
paddle.Tensor.detach(Tensor([3, 4, 4, 5, 9507090],"float32"), )
paddle.Tensor.detach(Tensor([3, 4, 4, 6790778, 7],"float32"), )
paddle.Tensor.detach(Tensor([3, 4, 5432623, 5, 7],"float32"), )
paddle.Tensor.detach(Tensor([3, 5432623, 4, 5, 7],"float32"), )
paddle.Tensor.detach(Tensor([31690297, 18, 4],"float32"), )
paddle.Tensor.detach(Tensor([3169030, 20, 36],"float32"), )
paddle.Tensor.detach(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), )
paddle.Tensor.detach(Tensor([330108, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.detach(Tensor([3565159, 20, 32],"float32"), )
paddle.Tensor.detach(Tensor([3566, 20, 32000],"float32"), )
paddle.Tensor.detach(Tensor([38028357, 20, 3],"float32"), )
paddle.Tensor.detach(Tensor([395032, 4, 38, 38],"float32"), )
paddle.Tensor.detach(Tensor([4074467, 4, 4, 5, 7],"float32"), )
paddle.Tensor.detach(Tensor([4097, 1024, 16, 64],"float16"), )
paddle.Tensor.detach(Tensor([4294967297],"float16"), )
paddle.Tensor.detach(Tensor([429496730, 10],"float16"), )
paddle.Tensor.detach(Tensor([4456449, 2, 16, 16],"float32"), )
paddle.Tensor.detach(Tensor([456340276, 5],"float32"), )
paddle.Tensor.detach(Tensor([50, 232827, 14, 14, 1],"float32"), )
paddle.Tensor.detach(Tensor([50, 39, 14, 14, 5970],"float32"), )
paddle.Tensor.detach(Tensor([50, 39, 14, 83579, 1],"float32"), )
paddle.Tensor.detach(Tensor([50, 39, 83579, 14, 1],"float32"), )
paddle.Tensor.detach(Tensor([51856850, 11, 4],"float32"), )
paddle.Tensor.detach(Tensor([518569, 1100, 4],"float32"), )
paddle.Tensor.detach(Tensor([55462, 10285, 4],"float32"), )
paddle.Tensor.detach(Tensor([570425345, 4],"float32"), )
paddle.Tensor.detach(Tensor([57042535, 20, 2],"float32"), )
paddle.Tensor.detach(Tensor([5704254, 100, 4],"float32"), )
paddle.Tensor.detach(Tensor([5803, 6, 256, 256],"float32"), )
paddle.Tensor.detach(Tensor([5965233, 3, 4, 4, 5, 3],"float16"), )
paddle.Tensor.detach(Tensor([61896, 192, 192],"float32"), )
paddle.Tensor.detach(Tensor([619, 100, 192, 192],"float32"), )
paddle.Tensor.detach(Tensor([621379, 3, 4, 2, 3, 4, 2, 3, 4],"float16"), )
paddle.Tensor.detach(Tensor([6338060, 3, 4, 5, 6],"int64"), )
paddle.Tensor.detach(Tensor([67395, 184, 184],"float32"), )
paddle.Tensor.detach(Tensor([674, 100, 184, 184],"float32"), )
paddle.Tensor.detach(Tensor([69633, 128, 16, 16],"float32"), )
paddle.Tensor.detach(Tensor([7042289, 4, 9, 9],"float32"), )
paddle.Tensor.detach(Tensor([7130317, 20, 16],"float32"), )
paddle.Tensor.detach(Tensor([73661, 176, 176],"float32"), )
paddle.Tensor.detach(Tensor([737, 100, 176, 176],"float32"), )
paddle.Tensor.detach(Tensor([760567127, 3],"float32"), )
paddle.Tensor.detach(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), )
paddle.Tensor.detach(Tensor([8, 2236963, 4, 4, 5, 3],"float16"), )
paddle.Tensor.detach(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), )
paddle.Tensor.detach(Tensor([8, 3, 2982617, 4, 5, 3],"float16"), )
paddle.Tensor.detach(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), )
paddle.Tensor.detach(Tensor([8, 3, 4, 2982617, 5, 3],"float16"), )
paddle.Tensor.detach(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), )
paddle.Tensor.detach(Tensor([8, 3, 4, 4, 3728271, 3],"float16"), )
paddle.Tensor.detach(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), )
paddle.Tensor.detach(Tensor([8, 3, 4, 4, 5, 2236963],"float16"), )
paddle.Tensor.detach(Tensor([8388609, 2, 1, 256],"float16"), )
paddle.Tensor.detach(Tensor([8912897, 8, 4, 8],"float32"), )
paddle.Tensor.diag_embed(Tensor([1, 1140850690, 2],"float32"), )
paddle.Tensor.diag_embed(Tensor([1140850690, 1, 2],"float32"), )
paddle.Tensor.diagonal(Tensor([1140850690, 2],"float32"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([1431655766, 3],"float16"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([2, 1140850690],"float32"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([3, 1431655766],"float16"), axis1=-2, axis2=-1, )
paddle.Tensor.diff(Tensor([2281701379],"float32"), )
paddle.Tensor.diff(Tensor([4294967297],"float16"), )
paddle.Tensor.diff(x=Tensor([10, 429496730],"float16"), axis=0, prepend=Tensor([4, 429496730],"float16"), append=Tensor([4, 429496730],"float16"), )
paddle.Tensor.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([1073741825, 4],"float16"), append=Tensor([4, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([1073741825, 4],"float16"), axis=0, prepend=Tensor([1073741825, 4],"float16"), append=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([1073741825, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([4, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), )
paddle.Tensor.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), append=Tensor([4],"float16"), )
paddle.Tensor.diff(x=Tensor([10],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4294967297],"float16"), )
paddle.Tensor.diff(x=Tensor([2281701379],"float32"), )
paddle.Tensor.diff(x=Tensor([2281701379],"int32"), )
paddle.Tensor.diff(x=Tensor([2281701379],"int64"), )
paddle.Tensor.diff(x=Tensor([268435457, 4, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 1073741825],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 268435457, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 4, 268435457],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 4, 4, 67108865],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 4, 4, 67108865],"float16"), axis=-2, )
paddle.Tensor.diff(x=Tensor([4, 4, 4, 67108865],"float16"), axis=2, )
paddle.Tensor.diff(x=Tensor([4, 4, 67108865, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 4, 67108865, 4],"float16"), axis=-2, )
paddle.Tensor.diff(x=Tensor([4, 4, 67108865, 4],"float16"), axis=2, )
paddle.Tensor.diff(x=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 67108865, 4, 4],"float16"), axis=-2, )
paddle.Tensor.diff(x=Tensor([4, 67108865, 4, 4],"float16"), axis=2, )
paddle.Tensor.diff(x=Tensor([4294967297],"float16"), )
paddle.Tensor.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4294967297],"float16"), )
paddle.Tensor.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4294967297],"float16"), append=Tensor([4294967297],"float16"), )
paddle.Tensor.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), )
paddle.Tensor.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4],"float16"), )
paddle.Tensor.diff(x=Tensor([67108865, 4, 4, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([67108865, 4, 4, 4],"float16"), axis=-2, )
paddle.Tensor.diff(x=Tensor([67108865, 4, 4, 4],"float16"), axis=2, )
paddle.Tensor.digamma(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.digamma(Tensor([2281701379],"float32"), )
paddle.Tensor.digamma(Tensor([4, 1073741825],"float16"), )
paddle.Tensor.digamma(Tensor([5, 107374183, 8],"float16"), )
paddle.Tensor.digamma(Tensor([5, 10737419, 8, 10],"float16"), )
paddle.Tensor.digamma(Tensor([5, 7, 122713352],"float16"), )
paddle.Tensor.digamma(Tensor([5, 7, 12271336, 10],"float16"), )
paddle.Tensor.digamma(Tensor([5, 7, 8, 15339169],"float16"), )
paddle.Tensor.digamma(Tensor([760567127, 3],"float32"), )
paddle.Tensor.digamma(Tensor([76695845, 7, 8],"float16"), )
paddle.Tensor.digamma(Tensor([7669585, 7, 8, 10],"float16"), )
paddle.Tensor.digamma(Tensor([858993460, 5],"float16"), )
paddle.Tensor.dim(Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.Tensor.dim(Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.Tensor.dim(Tensor([1, 1, 13, 175515491],"float32"), )
paddle.Tensor.dim(Tensor([1, 1, 175515491, 13],"float32"), )
paddle.Tensor.dim(Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.Tensor.dim(Tensor([1, 1, 2281701379],"float32"), )
paddle.Tensor.dim(Tensor([1, 1, 29, 78679358],"float32"), )
paddle.Tensor.dim(Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.Tensor.dim(Tensor([1, 1, 4294967297],"float16"), )
paddle.Tensor.dim(Tensor([1, 1, 456340276, 5],"float32"), )
paddle.Tensor.dim(Tensor([1, 1, 5, 456340276],"float32"), )
paddle.Tensor.dim(Tensor([1, 1, 78679358, 29],"float32"), )
paddle.Tensor.dim(Tensor([1, 1140850690, 2],"float32"), )
paddle.Tensor.dim(Tensor([1, 13501192, 13, 13],"float32"), )
paddle.Tensor.dim(Tensor([1, 1431655766, 3],"float16"), )
paddle.Tensor.dim(Tensor([1, 2, 1140850690],"float32"), )
paddle.Tensor.dim(Tensor([1, 2, 2147483649],"float16"), )
paddle.Tensor.dim(Tensor([1, 20, 114085069],"float32"), )
paddle.Tensor.dim(Tensor([1, 2147483649, 2],"float16"), )
paddle.Tensor.dim(Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.Tensor.dim(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.dim(Tensor([1, 2281701379],"int64"), )
paddle.Tensor.dim(Tensor([1, 2713082, 29, 29],"float32"), )
paddle.Tensor.dim(Tensor([1, 3, 1431655766],"float16"), )
paddle.Tensor.dim(Tensor([1, 3, 760567127],"float32"), )
paddle.Tensor.dim(Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.Tensor.dim(Tensor([1, 4294967297, 1],"float16"), )
paddle.Tensor.dim(Tensor([1, 4294967297],"float16"), )
paddle.Tensor.dim(Tensor([1, 71303169, 32],"float32"), )
paddle.Tensor.dim(Tensor([1, 760567127, 3],"float32"), )
paddle.Tensor.dim(Tensor([1, 91268056, 5, 5],"float32"), )
paddle.Tensor.dim(Tensor([10, 10, 10, 4294968],"float16"), )
paddle.Tensor.dim(Tensor([10, 10, 21474837, 2],"float16"), )
paddle.Tensor.dim(Tensor([10, 10, 42949673],"float16"), )
paddle.Tensor.dim(Tensor([10, 21474837, 10, 2],"float16"), )
paddle.Tensor.dim(Tensor([10, 228170138],"int64"), )
paddle.Tensor.dim(Tensor([10, 42949673, 10],"float16"), )
paddle.Tensor.dim(Tensor([10, 429496730],"float16"), )
paddle.Tensor.dim(Tensor([100, 22817014],"float32"), )
paddle.Tensor.dim(Tensor([10000, 143166, 3],"float16"), )
paddle.Tensor.dim(Tensor([10000, 429497],"float16"), )
paddle.Tensor.dim(Tensor([10000, 5, 85900],"float16"), )
paddle.Tensor.dim(Tensor([1000000, 4295],"float16"), )
paddle.Tensor.dim(Tensor([10186167, 7, 32],"float32"), )
paddle.Tensor.dim(Tensor([1024, 2228225],"float32"), )
paddle.Tensor.dim(Tensor([1073741825, 4],"float16"), )
paddle.Tensor.dim(Tensor([107374183, 4, 2, 5],"float16"), )
paddle.Tensor.dim(Tensor([1114113, 2048, 1, 1],"float32"), )
paddle.Tensor.dim(Tensor([114085069, 20],"int64"), )
paddle.Tensor.dim(Tensor([114085069, 4, 5],"float32"), )
paddle.Tensor.dim(Tensor([1140850690, 1, 2],"float32"), )
paddle.Tensor.dim(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.dim(Tensor([12, 190141782],"float32"), )
paddle.Tensor.dim(Tensor([12, 190141782],"int32"), )
paddle.Tensor.dim(Tensor([128, 17825793],"float32"), )
paddle.Tensor.dim(Tensor([128, 17825793],"int64"), )
paddle.Tensor.dim(Tensor([13, 175515491],"float32"), )
paddle.Tensor.dim(Tensor([13, 175515491],"int32"), )
paddle.Tensor.dim(Tensor([13, 175515491],"int64"), )
paddle.Tensor.dim(Tensor([13, 3, 224, 261184],"float32"), )
paddle.Tensor.dim(Tensor([13, 3, 261184, 224],"float32"), )
paddle.Tensor.dim(Tensor([13, 3498, 224, 224],"float32"), )
paddle.Tensor.dim(Tensor([13, 5484860, 32],"float32"), )
paddle.Tensor.dim(Tensor([13, 7, 25073642],"float32"), )
paddle.Tensor.dim(Tensor([13501192, 1, 13, 13],"float32"), )
paddle.Tensor.dim(Tensor([142606337, 16],"float32"), )
paddle.Tensor.dim(Tensor([1431655766, 3, 1],"float16"), )
paddle.Tensor.dim(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.dim(Tensor([15158, 3, 224, 224],"float32"), )
paddle.Tensor.dim(Tensor([16297867, 7, 20],"float32"), )
paddle.Tensor.dim(Tensor([181896, 64, 14, 14],"float32"), )
paddle.Tensor.dim(Tensor([190141782, 3, 4],"bool"), )
paddle.Tensor.dim(Tensor([190141782, 3, 4],"float32"), )
paddle.Tensor.dim(Tensor([2, 1, 1140850690],"float32"), )
paddle.Tensor.dim(Tensor([2, 1073741825, 2],"float16"), )
paddle.Tensor.dim(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.dim(Tensor([2, 1140850690],"int64"), )
paddle.Tensor.dim(Tensor([2, 2, 570425345],"float32"), )
paddle.Tensor.dim(Tensor([2, 2147483649, 1],"float16"), )
paddle.Tensor.dim(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.dim(Tensor([2, 285212673, 4],"bool"), )
paddle.Tensor.dim(Tensor([2, 285212673, 4],"float32"), )
paddle.Tensor.dim(Tensor([2, 3, 380283564],"bool"), )
paddle.Tensor.dim(Tensor([2, 3, 380283564],"float32"), )
paddle.Tensor.dim(Tensor([2, 3, 715827883],"float16"), )
paddle.Tensor.dim(Tensor([2, 5, 429496730],"float16"), )
paddle.Tensor.dim(Tensor([2, 570425345, 2],"float32"), )
paddle.Tensor.dim(Tensor([2, 57042535, 20],"float32"), )
paddle.Tensor.dim(Tensor([2, 7, 162978670],"float32"), )
paddle.Tensor.dim(Tensor([2, 715827883, 3],"float16"), )
paddle.Tensor.dim(Tensor([20372334, 112],"int64"), )
paddle.Tensor.dim(Tensor([2147483649, 1, 2],"float16"), )
paddle.Tensor.dim(Tensor([2147483649, 2, 1],"float16"), )
paddle.Tensor.dim(Tensor([2147483649, 2],"float16"), )
paddle.Tensor.dim(Tensor([214748365, 20],"float16"), )
paddle.Tensor.dim(Tensor([21474837, 10, 10, 2],"float16"), )
paddle.Tensor.dim(Tensor([2228225, 1024],"float32"), )
paddle.Tensor.dim(Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.Tensor.dim(Tensor([2281701379, 1],"float32"), )
paddle.Tensor.dim(Tensor([2281701379, 1],"int64"), )
paddle.Tensor.dim(Tensor([2281701379],"float32"), )
paddle.Tensor.dim(Tensor([2281701379],"int64"), )
paddle.Tensor.dim(Tensor([228170138, 10],"float32"), )
paddle.Tensor.dim(Tensor([253522376, 3, 3],"float32"), )
paddle.Tensor.dim(Tensor([253522376, 9],"int64"), )
paddle.Tensor.dim(Tensor([256, 2048, 1, 4353],"float32"), )
paddle.Tensor.dim(Tensor([256, 2048, 4353, 1],"float32"), )
paddle.Tensor.dim(Tensor([256, 8912897, 1, 1],"float32"), )
paddle.Tensor.dim(Tensor([2713082, 1, 29, 29],"float32"), )
paddle.Tensor.dim(Tensor([285212673, 8],"float32"), )
paddle.Tensor.dim(Tensor([285212673, 8],"int32"), )
paddle.Tensor.dim(Tensor([28521268, 10, 8],"float32"), )
paddle.Tensor.dim(Tensor([286331154, 5, 3],"float16"), )
paddle.Tensor.dim(Tensor([3, 1, 1431655766],"float16"), )
paddle.Tensor.dim(Tensor([3, 143165577, 2, 5],"float16"), )
paddle.Tensor.dim(Tensor([3, 152113426, 5],"float32"), )
paddle.Tensor.dim(Tensor([3, 190141782, 4],"float32"), )
paddle.Tensor.dim(Tensor([3, 3, 253522376],"float32"), )
paddle.Tensor.dim(Tensor([3, 4, 190141782],"float32"), )
paddle.Tensor.dim(Tensor([3, 4, 2, 178956971],"float16"), )
paddle.Tensor.dim(Tensor([3, 4, 357913942],"float16"), )
paddle.Tensor.dim(Tensor([3, 4, 71582789, 5],"float16"), )
paddle.Tensor.dim(Tensor([3, 715827883, 2],"float16"), )
paddle.Tensor.dim(Tensor([32, 1, 241, 295864],"float32"), )
paddle.Tensor.dim(Tensor([32, 1, 295864, 241],"float32"), )
paddle.Tensor.dim(Tensor([32, 1228, 241, 241],"float32"), )
paddle.Tensor.dim(Tensor([325957340, 7],"float32"), )
paddle.Tensor.dim(Tensor([325957340, 7],"int32"), )
paddle.Tensor.dim(Tensor([325957340, 7],"int64"), )
paddle.Tensor.dim(Tensor([3565159, 20, 32],"float32"), )
paddle.Tensor.dim(Tensor([380283564, 2, 3],"float32"), )
paddle.Tensor.dim(Tensor([380283564, 3, 2],"float32"), )
paddle.Tensor.dim(Tensor([39285, 1, 241, 241],"float32"), )
paddle.Tensor.dim(Tensor([4, 190141782, 3],"float32"), )
paddle.Tensor.dim(Tensor([4, 3, 190141782],"float32"), )
paddle.Tensor.dim(Tensor([4, 3, 3, 63380594],"float32"), )
paddle.Tensor.dim(Tensor([4, 3, 63380594, 3],"float32"), )
paddle.Tensor.dim(Tensor([4, 5, 214748365],"float16"), )
paddle.Tensor.dim(Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.dim(Tensor([4, 63380594, 3, 3],"float32"), )
paddle.Tensor.dim(Tensor([42253730, 54],"int64"), )
paddle.Tensor.dim(Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.Tensor.dim(Tensor([4294967297, 1, 1],"float16"), )
paddle.Tensor.dim(Tensor([4294967297, 1],"float16"), )
paddle.Tensor.dim(Tensor([4294967297],"float16"), )
paddle.Tensor.dim(Tensor([42949673, 10, 10],"float16"), )
paddle.Tensor.dim(Tensor([429496730, 10],"float16"), )
paddle.Tensor.dim(Tensor([429496730, 5, 2],"float16"), )
paddle.Tensor.dim(Tensor([477218589, 3, 3],"float16"), )
paddle.Tensor.dim(Tensor([5, 10, 45634028],"float32"), )
paddle.Tensor.dim(Tensor([5, 10737419, 8, 10],"float16"), )
paddle.Tensor.dim(Tensor([5, 57042535, 8],"float32"), )
paddle.Tensor.dim(Tensor([5, 7, 12271336, 10],"float16"), )
paddle.Tensor.dim(Tensor([5, 7, 8, 15339169],"float16"), )
paddle.Tensor.dim(Tensor([50705, 45000],"int64"), )
paddle.Tensor.dim(Tensor([52, 1371215, 32],"float32"), )
paddle.Tensor.dim(Tensor([52, 7, 6268411],"float32"), )
paddle.Tensor.dim(Tensor([536870913, 4, 2],"float16"), )
paddle.Tensor.dim(Tensor([570425345, 2, 2],"float32"), )
paddle.Tensor.dim(Tensor([715827883, 2, 3],"float16"), )
paddle.Tensor.dim(Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.dim(Tensor([742742, 3072],"float32"), )
paddle.Tensor.dim(Tensor([7669585, 7, 8, 10],"float16"), )
paddle.Tensor.dim(Tensor([8, 1, 1183456, 241],"float32"), )
paddle.Tensor.dim(Tensor([8, 1, 241, 1183456],"float32"), )
paddle.Tensor.dim(Tensor([8, 1455167, 14, 14],"float32"), )
paddle.Tensor.dim(Tensor([8, 4911, 241, 241],"float32"), )
paddle.Tensor.dim(Tensor([8, 64, 14, 318318],"float32"), )
paddle.Tensor.dim(Tensor([8, 64, 318318, 14],"float32"), )
paddle.Tensor.dim(Tensor([84507459, 3, 3, 3],"float32"), )
paddle.Tensor.dim(Tensor([8912897, 256],"float32"), )
paddle.Tensor.dim(Tensor([91268056, 1, 5, 5],"float32"), )
paddle.Tensor.divide(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.equal(Tensor([128, 17825793],"int64"), Tensor([128, 17825793],"int64"), )
paddle.Tensor.equal(Tensor([17825793, 128],"int64"), Tensor([17825793, 128],"int64"), )
paddle.Tensor.equal(Tensor([2, 1140850690],"int64"), 3, )
paddle.Tensor.equal(Tensor([228170138, 10],"int64"), 3, )
paddle.Tensor.equal_all(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.Tensor.equal_all(Tensor([2281701379],"int64"), Tensor([8],"int64"), )
paddle.Tensor.equal_all(Tensor([760567127, 3],"int64"), Tensor([760567127, 3],"int64"), )
paddle.Tensor.equal_all(Tensor([760567127, 3],"int64"), Tensor([8, 3],"int64"), )
paddle.Tensor.equal_all(Tensor([8, 285212673],"int64"), Tensor([8, 285212673],"int64"), )
paddle.Tensor.equal_all(Tensor([8, 285212673],"int64"), Tensor([8, 3],"int64"), )
paddle.Tensor.equal_all(Tensor([8, 3],"int64"), Tensor([760567127, 3],"int64"), )
paddle.Tensor.equal_all(Tensor([8, 3],"int64"), Tensor([8, 285212673],"int64"), )
paddle.Tensor.equal_all(Tensor([8],"int64"), Tensor([2281701379],"int64"), )
paddle.Tensor.erfinv(x=Tensor([143165577, 2, 3, 5],"float16"), )
paddle.Tensor.erfinv(x=Tensor([2147483649, 2],"float16"), )
paddle.Tensor.erfinv(x=Tensor([2281701379],"float32"), )
paddle.Tensor.erfinv(x=Tensor([35791395, 2, 3, 5, 4],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 1073741825],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 17895698, 3, 5, 4],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 107374183, 5],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 26843546, 5, 4],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 3, 178956971],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 3, 44739243, 4],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 3, 5, 35791395],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 536870913],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 357913942, 3],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 71582789, 3, 5],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4294967297],"float16"), )
paddle.Tensor.erfinv(x=Tensor([715827883, 2, 3],"float16"), )
paddle.Tensor.exp(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.exp(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.exp(Tensor([10, 228170138],"float32"), )
paddle.Tensor.exp(Tensor([1000000, 4295],"float16"), )
paddle.Tensor.exp(Tensor([1073741825, 4],"float16"), )
paddle.Tensor.exp(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.exp(Tensor([114085069, 20],"float32"), )
paddle.Tensor.exp(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.exp(Tensor([2, 1073741825, 2],"float16"), )
paddle.Tensor.exp(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.exp(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.exp(Tensor([2, 3, 715827883],"float16"), )
paddle.Tensor.exp(Tensor([2, 715827883, 3],"float16"), )
paddle.Tensor.exp(Tensor([2147483649, 2],"float16"), )
paddle.Tensor.exp(Tensor([2281701379],"float32"), )
paddle.Tensor.exp(Tensor([2281701379],"float32"), name="Cauchy_prob", )
paddle.Tensor.exp(Tensor([28521268, 10, 8],"float32"), )
paddle.Tensor.exp(Tensor([4294967297],"float16"), )
paddle.Tensor.exp(Tensor([4294967297],"float16"), name="Cauchy_prob", )
paddle.Tensor.exp(Tensor([429496730, 10],"float16"), )
paddle.Tensor.exp(Tensor([477218589, 3, 3],"float16"), )
paddle.Tensor.exp(Tensor([5, 10, 45634028],"float32"), )
paddle.Tensor.exp(Tensor([5, 57042535, 8],"float32"), )
paddle.Tensor.exp(Tensor([5, 858993460],"float16"), )
paddle.Tensor.exp(Tensor([64, 35651585],"float32"), )
paddle.Tensor.exp(Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.exp(Tensor([760567127, 3],"float32"), )
paddle.Tensor.expand(Tensor([1, 1, 1, 2281701379],"float32"), list[1,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 2281701379],"float32"), list[2,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 2281701379],"float32"), list[4,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 1114113, 2048],"float32"), list[1,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 19840882, 115],"float32"), list[4,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 20014925, 114],"float32"), list[2,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), list[3,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), list[4,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), list[5,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), list[6,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), list[7,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), shape=list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), shape=list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), tuple(4,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), tuple(7,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 10, 114085069, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 10, 8, 28521268],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 1114113, 1, 2048],"float32"), list[1,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 142606337, 8, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 1620527, 1408],"float32"), shape=list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 19840882, 1, 115],"float32"), list[4,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 20014925, 1, 114],"float32"), list[2,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 20014925, 114],"float32"), list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 2228225, 1024],"float32"), shape=list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 2281701379],"int64"), list[1,-1,], )
paddle.Tensor.expand(Tensor([1, 2281701379],"int64"), list[2,-1,], )
paddle.Tensor.expand(Tensor([1, 2970966, 768],"float32"), tuple(4,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 2970966, 768],"float32"), tuple(7,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 8912897, 256],"float32"), list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 8912897, 256],"float32"), list[3,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 8912897, 256],"float32"), list[4,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 8912897, 256],"float32"), list[5,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 8912897, 256],"float32"), list[6,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 8912897, 256],"float32"), list[7,-1,-1,], )
paddle.Tensor.expand(Tensor([13, 1, 175515491],"int32"), list[-1,2,-1,], )
paddle.Tensor.expand(Tensor([13, 1, 175515491],"int32"), shape=list[-1,1,-1,], )
paddle.Tensor.expand(Tensor([13, 1, 175515491],"int32"), shape=list[-1,2,-1,], )
paddle.Tensor.expand(Tensor([2, 1, 1140850690],"int32"), list[-1,3,-1,], )
paddle.Tensor.expand(Tensor([2, 1, 1140850690],"int32"), shape=list[-1,3,-1,], )
paddle.Tensor.expand(Tensor([2281701379, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2281701379],"float32"), list[-1,], )
paddle.Tensor.expand(Tensor([2281701379],"int64"), tuple(1,-1,), )
paddle.Tensor.expand(Tensor([325957340, 1, 7],"int32"), list[-1,2,-1,], )
paddle.Tensor.expand(Tensor([325957340, 1, 7],"int32"), shape=list[-1,1,-1,], )
paddle.Tensor.expand(Tensor([325957340, 1, 7],"int32"), shape=list[-1,2,-1,], )
paddle.Tensor.expand(Tensor([325957340, 1, 7],"int32"), shape=list[-1,3,-1,], )
paddle.Tensor.expand(Tensor([325957340, 1, 7],"int32"), shape=list[-1,4,-1,], )
paddle.Tensor.expand(Tensor([325957340, 1, 7],"int32"), tuple(-1,4,-1,), )
paddle.Tensor.expand(Tensor([5, 1, 16, 28521268],"float32"), tuple(-1,-1,16,-1,), )
paddle.Tensor.expand(Tensor([5, 1, 18, 25352238],"float32"), tuple(-1,-1,18,-1,), )
paddle.Tensor.expand(Tensor([5, 1408458, 18, 18],"float32"), tuple(-1,-1,18,-1,), )
paddle.Tensor.expand(Tensor([5, 1782580, 16, 16],"float32"), tuple(-1,-1,16,-1,), )
paddle.Tensor.expand(Tensor([7042289, 1, 18, 18],"float32"), tuple(-1,-1,18,-1,), )
paddle.Tensor.expand(Tensor([71303169, 1, 32],"float32"), list[-1,7,-1,], )
paddle.Tensor.expand(Tensor([8912897, 1, 16, 16],"float32"), tuple(-1,-1,16,-1,), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 13385, 391, 436],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 14905, 368, 416],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 15607, 430, 340],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 15927, 352, 407],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 19015, 400, 300],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1973791, 34, 34],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 21035, 298, 364],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 23283, 280, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 2742430, 32, 26],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 2910334, 28, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 1744421, 436],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 1828287, 416],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 1868716, 407],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 2089471, 364],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 2173049, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 22369622, 34],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 2236963, 340],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 2535224, 300],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 27163112, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 28, 27163112],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 280, 2716312],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 29252582, 26],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 298, 2552239],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 32, 23767723],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 34, 22369622],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 352, 2160703],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 368, 2066759],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 391, 1945185],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 400, 1901418],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 430, 1768761],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([4462, 3, 391, 436],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([4969, 3, 368, 416],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([5203, 3, 430, 340],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([5309, 3, 352, 407],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([6339, 3, 400, 300],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([657931, 3, 34, 34],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([7012, 3, 298, 364],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([7761, 3, 280, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([914144, 3, 32, 26],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([970112, 3, 28, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 128],"int32"), Tensor([17825793, 128],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 16],"float32"), Tensor([142606337, 16],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1],"int32"), Tensor([2281701379, 1],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1],"int32"), Tensor([5, 456340276],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 64],"int64"), Tensor([35651585, 64],"int64"), )
paddle.Tensor.expand_as(Tensor([142606337, 16],"float32"), Tensor([142606337, 16],"float32"), )
paddle.Tensor.expand_as(Tensor([17825793, 128],"int32"), Tensor([17825793, 128],"int64"), )
paddle.Tensor.expand_as(Tensor([2, 1, 32],"float32"), Tensor([2, 35651585, 32],"float32"), )
paddle.Tensor.expand_as(Tensor([2, 35651585, 32],"float32"), Tensor([2, 35651585, 32],"float32"), )
paddle.Tensor.expand_as(Tensor([2281701379, 1],"int32"), Tensor([2281701379, 1],"int64"), )
paddle.Tensor.expand_as(Tensor([4, 1],"float32"), Tensor([4, 570425345],"int64"), )
paddle.Tensor.expand_as(Tensor([4, 570425345],"float32"), Tensor([4, 570425345],"int64"), )
paddle.Tensor.fill_(Tensor([10, 228170138],"float32"), 1, )
paddle.Tensor.fill_(Tensor([134217729, 32],"float16"), 1.0, )
paddle.Tensor.fill_(Tensor([20, 114085069],"float32"), 1, )
paddle.Tensor.fill_(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.fill_(Tensor([2281701379],"float32"), 1, )
paddle.Tensor.fill_(Tensor([2281701379],"float32"), 1.0, )
paddle.Tensor.fill_(Tensor([228170138, 10],"float32"), 1, )
paddle.Tensor.fill_(Tensor([29632486, 77],"float32"), value=-math.inf, )
paddle.Tensor.fill_(Tensor([32, 134217729],"float16"), 1.0, )
paddle.Tensor.fill_(Tensor([32, 71303169],"float32"), 1, )
paddle.Tensor.fill_(Tensor([32, 71303169],"float32"), 1.0, )
paddle.Tensor.fill_(Tensor([32, 71303169],"int32"), 1.0, )
paddle.Tensor.fill_(Tensor([32, 71303169],"int64"), 1.0, )
paddle.Tensor.fill_(Tensor([380283564, 2, 3],"float32"), 0, )
paddle.Tensor.fill_(Tensor([4, 190141782, 3],"float32"), 0, )
paddle.Tensor.fill_(Tensor([4, 2, 285212673],"float32"), 0, )
paddle.Tensor.fill_(Tensor([4294967297],"bfloat16"), 0, )
paddle.Tensor.fill_(Tensor([4294967297],"float16"), 1.0, )
paddle.Tensor.fill_(Tensor([71303169, 32],"float32"), 1, )
paddle.Tensor.fill_(Tensor([71303169, 32],"float32"), 1.0, )
paddle.Tensor.fill_(Tensor([71303169, 32],"int32"), 1.0, )
paddle.Tensor.fill_(Tensor([71303169, 32],"int64"), 1.0, )
paddle.Tensor.fill_(Tensor([76056713, 30],"float32"), 1, )
paddle.Tensor.fill_(Tensor([77, 29632486],"float32"), value=-math.inf, )
paddle.Tensor.fill_(x=Tensor([10, 16, 26843546],"float16"), value=41.2, )
paddle.Tensor.fill_(x=Tensor([10, 26843546, 16],"float16"), value=41.2, )
paddle.Tensor.fill_(x=Tensor([1073741825, 4],"float16"), value=4, )
paddle.Tensor.fill_(x=Tensor([16, 268435457],"float16"), value=41.2, )
paddle.Tensor.fill_(x=Tensor([16777217, 16, 16],"float16"), value=41.2, )
paddle.Tensor.fill_(x=Tensor([268435457, 16],"float16"), value=41.2, )
paddle.Tensor.fill_(x=Tensor([4, 1073741825],"float16"), value=4, )
paddle.Tensor.fill_(x=Tensor([4, 570425345],"float32"), value=4, )
paddle.Tensor.fill_(x=Tensor([4, 570425345],"int32"), value=4, )
paddle.Tensor.fill_(x=Tensor([4, 570425345],"int64"), value=4, )
paddle.Tensor.fill_(x=Tensor([4294967297],"float16"), value=4.2, )
paddle.Tensor.fill_(x=Tensor([570425345, 4],"float32"), value=4, )
paddle.Tensor.fill_(x=Tensor([570425345, 4],"int32"), value=4, )
paddle.Tensor.fill_(x=Tensor([570425345, 4],"int64"), value=4, )
paddle.Tensor.fill_diagonal_(Tensor([128, 17825793],"float32"), 0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([1431655766, 3],"float16"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([1431655766, 3],"float16"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([1431655766, 3],"float16"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([1431655766, 3],"float16"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([17825793, 128],"float32"), 0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 1431655766],"float16"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 1431655766],"float16"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"bool"), 0, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"float32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"float32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"int32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"int32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"int64"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"int64"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([5, 456340276],"float32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([5, 456340276],"int32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([5, 456340276],"int64"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([5, 858993460],"float16"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"float32"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"float32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"float32"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"int32"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"int32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"int32"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"int64"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"int64"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"int64"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 613566757],"float16"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([7, 613566757],"float16"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 613566757],"float16"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"bool"), 0, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"float32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"float32"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"float32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"float32"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int32"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int32"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int64"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int64"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int64"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int64"), 4, 0, True, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 190141782, 3, 2],"int32"), Tensor([2, 2, 3],"int32"), offset=0, dim1=1, dim2=2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 285212673, 4],"int32"), Tensor([4, 2],"int32"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 285212673],"int32"), Tensor([2, 4],"int32"), 0, 1, 2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 760567127],"int32"), Tensor([1],"int32"), -2, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 760567127],"int32"), Tensor([2],"int32"), -1, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 760567127],"int32"), Tensor([3],"int32"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 570425345],"int32"), Tensor([3],"int32"), offset=-1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"int32"), Tensor([2],"int32"), 1, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"int32"), Tensor([2],"int32"), offset=1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"int32"), Tensor([3],"int32"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"int32"), Tensor([3],"int32"), offset=-1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"int32"), Tensor([3],"int32"), offset=0, dim1=0, dim2=1, )
paddle.Tensor.flatten(Tensor([1, 1, 12, 190141782],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([1, 1, 16, 142606337],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([1, 1, 2, 2, 570425345],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 1, 2, 570425345, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 1, 20, 114085069],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([1, 1, 2281701379],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 1, 2281701379],"int32"), )
paddle.Tensor.flatten(Tensor([1, 1, 35651585, 64],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([1, 1, 4, 2, 285212673],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 1, 4, 2, 285212673],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 1, 4, 285212673, 2],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 1, 4, 285212673, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 1, 570425345, 2, 2],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 1, 570425345, 2, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 10, 100, 2281702],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 10, 104, 2193944],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 10, 108, 2112687],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 10, 1782580, 64, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 10, 2112687, 108],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 10, 2193944, 104],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 10, 228170138],"float32"), 1, )
paddle.Tensor.flatten(Tensor([1, 10, 228170138],"int32"), )
paddle.Tensor.flatten(Tensor([1, 10, 2281702, 100],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 10, 8, 14260634, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 10, 8, 64, 445645],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 101, 22591103],"int32"), )
paddle.Tensor.flatten(Tensor([1, 11, 1620527, 64, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 11, 4, 25928425, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 11, 4, 64, 810264],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 1140850690, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 11408507, 200],"float32"), 1, )
paddle.Tensor.flatten(Tensor([1, 12, 190141782],"float32"), 1, )
paddle.Tensor.flatten(Tensor([1, 142606337, 4, 2, 2],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 142606337, 4, 2, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 142606337, 4, 4],"float32"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([1, 144, 15845149],"float32"), 1, )
paddle.Tensor.flatten(Tensor([1, 15845149, 18, 4, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 1782580, 20, 64],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([1, 18, 4, 15845149, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 18, 4, 64, 495161],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 18, 990322, 64, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 181896, 12544],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 195620, 108, 108],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 207427399, 11],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 21, 4, 13581556, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 21, 4, 64, 424424],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 21, 848848, 64, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 210957, 104, 104],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 221848, 10285],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 2228225, 16, 64],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([1, 2228225, 8, 64, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 2281701379, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 2281701379],"float32"), 1, )
paddle.Tensor.flatten(Tensor([1, 2281701379],"int32"), )
paddle.Tensor.flatten(Tensor([1, 2281701379],"int64"), )
paddle.Tensor.flatten(Tensor([1, 228171, 100, 100],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 24, 24, 3961288],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([1, 24, 495161, 192],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([1, 253522376, 9],"float32"), 1, )
paddle.Tensor.flatten(Tensor([1, 25928425, 11, 4, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 259285, 1100, 4, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 268435457, 4, 4],"float16"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([1, 285212673, 2, 2, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 285212673, 8],"float32"), 1, )
paddle.Tensor.flatten(Tensor([1, 2970966, 12, 64],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([1, 300, 176, 43215],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 300, 184, 41336],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 300, 192, 39613],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 300, 39613, 192],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 300, 41336, 184],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 300, 43215, 176],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 300, 7605672],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 4456449, 4, 64, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 495161, 24, 192],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([1, 6, 178956971, 4],"float16"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([1, 6, 4, 178956971],"float16"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([1, 6, 4, 95070891],"float32"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([1, 6, 95070891, 4],"float32"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([1, 61896, 192, 192],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 61906, 36858],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 634159, 3598],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 67395, 184, 184],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 73661, 176, 176],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 8, 11, 12964213, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 8, 11, 4, 6482107],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 8, 1100, 129643, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 8, 1100, 4, 64822],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 8, 18, 4, 3961288],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 8, 18, 7922575, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 8, 35651585, 4, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([10, 228170138],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([100, 22817014],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([100, 22817014],"float32"), 1, )
paddle.Tensor.flatten(Tensor([10186167, 4, 7, 4, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([1114113, 2, 16, 4, 16],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([11369, 64, 56, 56],"float32"), start_axis=2, stop_axis=-1, )
paddle.Tensor.flatten(Tensor([12, 19, 10007463, 1],"float32"), )
paddle.Tensor.flatten(Tensor([12, 19, 34, 294338],"float32"), )
paddle.Tensor.flatten(Tensor([12, 2796203, 68, 1],"float32"), )
paddle.Tensor.flatten(Tensor([12, 294338, 19, 34],"float32"), )
paddle.Tensor.flatten(Tensor([12, 38, 5003732, 1],"float32"), )
paddle.Tensor.flatten(Tensor([12, 38, 68, 73585],"float32"), )
paddle.Tensor.flatten(Tensor([12, 4, 1398102, 34],"float32"), )
paddle.Tensor.flatten(Tensor([12, 4, 19, 2501866],"float32"), )
paddle.Tensor.flatten(Tensor([12, 5592406, 34, 1],"float32"), )
paddle.Tensor.flatten(Tensor([12484, 32, 476, 3, 4],"float32"), -2, )
paddle.Tensor.flatten(Tensor([128, 3121, 476, 3, 4],"float32"), -2, )
paddle.Tensor.flatten(Tensor([128, 32, 46422, 3, 4],"float32"), -2, )
paddle.Tensor.flatten(Tensor([128, 32, 476, 293, 4],"float32"), -2, )
paddle.Tensor.flatten(Tensor([128, 32, 476, 3, 391],"float32"), -2, )
paddle.Tensor.flatten(Tensor([128, 5685, 56, 56],"float32"), start_axis=2, stop_axis=-1, )
paddle.Tensor.flatten(Tensor([128, 64, 4974, 56],"float32"), start_axis=2, stop_axis=-1, )
paddle.Tensor.flatten(Tensor([128, 64, 56, 4974],"float32"), start_axis=2, stop_axis=-1, )
paddle.Tensor.flatten(Tensor([13, 1371215, 64, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([13, 171402, 16, 4, 16],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 1371215, 4, 16],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 16, 342804, 16],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 16, 4, 1371215],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 16, 5484860, 1],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 21939437, 4, 1],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 4, 21939437],"int64"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 5484860, 16],"int64"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 8, 4, 2742430],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 8, 685608, 16],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2742430, 16, 4, 1],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2742430, 4, 16],"int64"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 3134206, 7, 4, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([13, 342804, 8, 4, 16],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 4, 5484860, 4, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([13, 4, 7, 3134206, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([13, 4, 7, 4, 1567103],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([13, 7, 12536821, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([13, 7, 64, 391776],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([14, 1, 4, 2, 20372334],"float32"), -2, )
paddle.Tensor.flatten(Tensor([14, 1, 4, 20372334, 2],"float32"), -2, )
paddle.Tensor.flatten(Tensor([14, 1, 40744668, 2, 2],"float32"), -2, )
paddle.Tensor.flatten(Tensor([14, 10186167, 4, 2, 2],"float32"), -2, )
paddle.Tensor.flatten(Tensor([14, 64, 25, 376, 280],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([142606337, 1, 4, 2, 2],"float32"), -2, )
paddle.Tensor.flatten(Tensor([142606337, 1, 4, 2, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([16, 142606337, 1, 1],"float32"), 1, )
paddle.Tensor.flatten(Tensor([16, 33, 1, 4321405],"float32"), 1, )
paddle.Tensor.flatten(Tensor([16, 33, 4321405, 1],"float32"), 1, )
paddle.Tensor.flatten(Tensor([16176, 19, 29, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([17825793, 2, 16, 4, 1],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([17825793, 2, 4, 16],"int64"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([1782580, 1, 20, 64],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([181896, 12544],"float32"), 1, )
paddle.Tensor.flatten(Tensor([19562, 10, 108, 108],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1980644, 8, 18, 4, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([2, 10, 15, 7605672],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 10, 445645, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 1140850690],"float32"), 1, )
paddle.Tensor.flatten(Tensor([2, 153671, 29, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 16, 71303169],"int64"), start_axis=1, )
paddle.Tensor.flatten(Tensor([2, 19, 234550, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 19, 29, 2070510],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 19014179, 10, 3, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([2, 297097, 15, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 3, 15845149, 6, 4],"float32"), )
paddle.Tensor.flatten(Tensor([2, 3, 6, 15845149, 4],"float32"), )
paddle.Tensor.flatten(Tensor([2, 3, 6, 6, 10563433],"float32"), )
paddle.Tensor.flatten(Tensor([2, 38, 117275, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 38, 58, 517628],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 6, 10, 3, 6338060],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([2, 6, 10, 9507090, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([2, 6, 3, 3, 21126865],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([2, 6, 3, 31690297, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([2, 6, 31690297, 3, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([2, 63380594, 3, 3, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([2, 71303169, 16],"int64"), start_axis=1, )
paddle.Tensor.flatten(Tensor([2, 76836, 58, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 7922575, 6, 6, 4],"float32"), )
paddle.Tensor.flatten(Tensor([20632, 24, 24, 192],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([207, 300, 192, 192],"float32"), -2, )
paddle.Tensor.flatten(Tensor([21096, 10, 104, 104],"float32"), 2, )
paddle.Tensor.flatten(Tensor([21126865, 12, 9],"float32"), 1, )
paddle.Tensor.flatten(Tensor([21126865, 6, 3, 3, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([212212, 21, 4, 64, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([221848, 1, 10285],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([2228225, 1, 16, 64],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([2228225, 2, 8, 4, 16],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([222823, 10, 8, 64, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([225, 300, 184, 184],"float32"), -2, )
paddle.Tensor.flatten(Tensor([22591103, 101, 1],"int32"), )
paddle.Tensor.flatten(Tensor([2279422, 1001],"int32"), )
paddle.Tensor.flatten(Tensor([2279422, 1001],"int64"), )
paddle.Tensor.flatten(Tensor([2281701379, 1, 1],"int32"), )
paddle.Tensor.flatten(Tensor([2281701379],"int32"), )
paddle.Tensor.flatten(Tensor([228170138, 10, 1],"int32"), )
paddle.Tensor.flatten(Tensor([228170138, 10],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([22817014, 100],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([22818, 10, 100, 100],"float32"), 2, )
paddle.Tensor.flatten(Tensor([23, 33, 1, 3006195],"float32"), 1, )
paddle.Tensor.flatten(Tensor([23, 33, 3006195, 1],"float32"), 1, )
paddle.Tensor.flatten(Tensor([23, 99204408, 1, 1],"float32"), 1, )
paddle.Tensor.flatten(Tensor([23767723, 6, 4, 4],"float32"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([246, 300, 176, 176],"float32"), -2, )
paddle.Tensor.flatten(Tensor([247581, 18, 4, 64, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([2546542, 7, 64, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([285212673, 1, 2, 2, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([28521268, 10, 8],"float32"), 1, )
paddle.Tensor.flatten(Tensor([2970966, 1, 12, 64],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([32, 33, 1, 2160703],"float32"), 1, )
paddle.Tensor.flatten(Tensor([32, 33, 2160703, 1],"float32"), 1, )
paddle.Tensor.flatten(Tensor([32, 71303169, 1, 1],"float32"), 1, )
paddle.Tensor.flatten(Tensor([3241054, 8, 11, 4, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([32411, 8, 1100, 4, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([3532046, 19, 34, 1],"float32"), )
paddle.Tensor.flatten(Tensor([3802836, 300, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([4, 217, 25, 376, 280],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([4, 64, 25, 1274, 280],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([4, 64, 25, 376, 949],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([4, 64, 85, 376, 280],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([4044, 38, 58, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([405132, 11, 4, 64, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([4294967297],"bfloat16"), )
paddle.Tensor.flatten(Tensor([44739243, 6, 4, 4],"float16"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([52, 342804, 64, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([52, 7, 3134206, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([52, 7, 64, 97944],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([5281717, 3, 6, 6, 4],"float32"), )
paddle.Tensor.flatten(Tensor([59420, 10, 15, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([607, 300, 12544],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([61906, 1, 36858],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([6338060, 6, 10, 3, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([634159, 1, 3598],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([69142467, 33, 1, 1],"float32"), 1, )
paddle.Tensor.flatten(Tensor([691425, 300, 11],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([79226, 144, 200],"float32"), 1, )
paddle.Tensor.flatten(Tensor([883012, 38, 68, 1],"float32"), )
paddle.Tensor.flatten(Tensor([883012, 4, 19, 34],"float32"), )
paddle.Tensor.flatten(Tensor([8912897, 16, 16],"int64"), start_axis=1, )
paddle.Tensor.flip(Tensor([13, 175515491],"int32"), list[-1,], )
paddle.Tensor.flip(Tensor([162978670, 14],"int32"), list[-1,], )
paddle.Tensor.flip(Tensor([19015, 400, 300],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([19015, 400, 300],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([23283, 280, 350],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([23283, 280, 350],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([3, 11883862, 64],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 11883862, 64],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([3, 2173049, 350],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 2173049, 350],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([3, 224, 3395389],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 2535224, 300],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 2535224, 300],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([3, 280, 2716312],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 280, 2716312],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([3, 3395389, 224],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 400, 1901418],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 400, 1901418],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([3, 64, 11883862],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 64, 11883862],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([45474, 224, 224],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([557057, 64, 64],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([557057, 64, 64],"float32"), axis=list[-2,], )
paddle.Tensor.floor(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.floor(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.floor(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.floor(Tensor([10, 228170138],"float32"), )
paddle.Tensor.floor(Tensor([100, 22817014],"float32"), )
paddle.Tensor.floor(Tensor([101, 22591103],"float32"), )
paddle.Tensor.floor(Tensor([102, 22369622],"float32"), )
paddle.Tensor.floor(Tensor([103, 22152441],"float32"), )
paddle.Tensor.floor(Tensor([104, 21939437],"float32"), )
paddle.Tensor.floor(Tensor([1042, 2189733],"float32"), )
paddle.Tensor.floor(Tensor([105, 21730490],"float32"), )
paddle.Tensor.floor(Tensor([106, 21525485],"float32"), )
paddle.Tensor.floor(Tensor([1060, 2152549],"float32"), )
paddle.Tensor.floor(Tensor([1065, 2142443],"float32"), )
paddle.Tensor.floor(Tensor([1069, 2134426],"float32"), )
paddle.Tensor.floor(Tensor([107, 21324312],"float32"), )
paddle.Tensor.floor(Tensor([108, 21126865],"float32"), )
paddle.Tensor.floor(Tensor([1089, 2095227],"float32"), )
paddle.Tensor.floor(Tensor([109, 20933041],"float32"), )
paddle.Tensor.floor(Tensor([1090, 2093305],"float32"), )
paddle.Tensor.floor(Tensor([11, 207427399],"float32"), )
paddle.Tensor.floor(Tensor([110, 20742740],"float32"), )
paddle.Tensor.floor(Tensor([1105, 2064889],"float32"), )
paddle.Tensor.floor(Tensor([111, 20555869],"float32"), )
paddle.Tensor.floor(Tensor([1113, 2050047],"float32"), )
paddle.Tensor.floor(Tensor([112, 20372334],"float32"), )
paddle.Tensor.floor(Tensor([113, 20192048],"float32"), )
paddle.Tensor.floor(Tensor([1131, 2017420],"float32"), )
paddle.Tensor.floor(Tensor([114, 20014925],"float32"), )
paddle.Tensor.floor(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.floor(Tensor([114085069, 20],"float32"), )
paddle.Tensor.floor(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.floor(Tensor([115, 19840882],"float32"), )
paddle.Tensor.floor(Tensor([1159, 1968682],"float32"), )
paddle.Tensor.floor(Tensor([116, 19669840],"float32"), )
paddle.Tensor.floor(Tensor([1163, 1961911],"float32"), )
paddle.Tensor.floor(Tensor([117, 19501722],"float32"), )
paddle.Tensor.floor(Tensor([1171, 1948507],"float32"), )
paddle.Tensor.floor(Tensor([118, 19336453],"float32"), )
paddle.Tensor.floor(Tensor([119, 19173962],"float32"), )
paddle.Tensor.floor(Tensor([12, 190141782],"float32"), )
paddle.Tensor.floor(Tensor([120, 19014179],"float32"), )
paddle.Tensor.floor(Tensor([121, 18857037],"float32"), )
paddle.Tensor.floor(Tensor([1217, 1874858],"float32"), )
paddle.Tensor.floor(Tensor([122, 18702471],"float32"), )
paddle.Tensor.floor(Tensor([123, 18550418],"float32"), )
paddle.Tensor.floor(Tensor([1230, 1855042],"float32"), )
paddle.Tensor.floor(Tensor([124, 18400818],"float32"), )
paddle.Tensor.floor(Tensor([1248, 1828287],"float32"), )
paddle.Tensor.floor(Tensor([125, 18253612],"float32"), )
paddle.Tensor.floor(Tensor([126, 18108742],"float32"), )
paddle.Tensor.floor(Tensor([127, 17966153],"float32"), )
paddle.Tensor.floor(Tensor([1271, 1795202],"float32"), )
paddle.Tensor.floor(Tensor([128, 17825793],"float32"), )
paddle.Tensor.floor(Tensor([1282, 1779799],"float32"), )
paddle.Tensor.floor(Tensor([129, 17687608],"float32"), )
paddle.Tensor.floor(Tensor([1296, 1760573],"float32"), )
paddle.Tensor.floor(Tensor([13, 175515491],"float32"), )
paddle.Tensor.floor(Tensor([130, 17551550],"float32"), )
paddle.Tensor.floor(Tensor([131, 17417568],"float32"), )
paddle.Tensor.floor(Tensor([132, 17285617],"float32"), )
paddle.Tensor.floor(Tensor([133, 17155650],"float32"), )
paddle.Tensor.floor(Tensor([1336, 1707861],"float32"), )
paddle.Tensor.floor(Tensor([134, 17027623],"float32"), )
paddle.Tensor.floor(Tensor([135, 16901492],"float32"), )
paddle.Tensor.floor(Tensor([136, 16777217],"float32"), )
paddle.Tensor.floor(Tensor([137, 16654755],"float32"), )
paddle.Tensor.floor(Tensor([138, 16534068],"float32"), )
paddle.Tensor.floor(Tensor([139, 16415118],"float32"), )
paddle.Tensor.floor(Tensor([14, 162978670],"float32"), )
paddle.Tensor.floor(Tensor([140, 16297867],"float32"), )
paddle.Tensor.floor(Tensor([141, 16182280],"float32"), )
paddle.Tensor.floor(Tensor([142, 16068320],"float32"), )
paddle.Tensor.floor(Tensor([143, 15955954],"float32"), )
paddle.Tensor.floor(Tensor([1435, 1590036],"float32"), )
paddle.Tensor.floor(Tensor([144, 15845149],"float32"), )
paddle.Tensor.floor(Tensor([145, 15735872],"float32"), )
paddle.Tensor.floor(Tensor([1456, 1567103],"float32"), )
paddle.Tensor.floor(Tensor([146, 15628092],"float32"), )
paddle.Tensor.floor(Tensor([147, 15521779],"float32"), )
paddle.Tensor.floor(Tensor([148, 15416902],"float32"), )
paddle.Tensor.floor(Tensor([1481, 1540650],"float32"), )
paddle.Tensor.floor(Tensor([149, 15313433],"float32"), )
paddle.Tensor.floor(Tensor([15, 152113426],"float32"), )
paddle.Tensor.floor(Tensor([150, 15211343],"float32"), )
paddle.Tensor.floor(Tensor([151, 15110606],"float32"), )
paddle.Tensor.floor(Tensor([152, 15011194],"float32"), )
paddle.Tensor.floor(Tensor([153, 14913081],"float32"), )
paddle.Tensor.floor(Tensor([154, 14816243],"float32"), )
paddle.Tensor.floor(Tensor([155, 14720655],"float32"), )
paddle.Tensor.floor(Tensor([156, 14626291],"float32"), )
paddle.Tensor.floor(Tensor([157, 14533130],"float32"), )
paddle.Tensor.floor(Tensor([158, 14441148],"float32"), )
paddle.Tensor.floor(Tensor([159, 14350324],"float32"), )
paddle.Tensor.floor(Tensor([16, 142606337],"float32"), )
paddle.Tensor.floor(Tensor([160, 14260634],"float32"), )
paddle.Tensor.floor(Tensor([161, 14172059],"float32"), )
paddle.Tensor.floor(Tensor([1610, 1417206],"float32"), )
paddle.Tensor.floor(Tensor([162, 14084577],"float32"), )
paddle.Tensor.floor(Tensor([163, 13998168],"float32"), )
paddle.Tensor.floor(Tensor([164, 13912814],"float32"), )
paddle.Tensor.floor(Tensor([165, 13828494],"float32"), )
paddle.Tensor.floor(Tensor([166, 13745190],"float32"), )
paddle.Tensor.floor(Tensor([167, 13662883],"float32"), )
paddle.Tensor.floor(Tensor([168, 13581556],"float32"), )
paddle.Tensor.floor(Tensor([169, 13501192],"float32"), )
paddle.Tensor.floor(Tensor([17, 134217729],"float32"), )
paddle.Tensor.floor(Tensor([170, 13421773],"float32"), )
paddle.Tensor.floor(Tensor([171, 13343283],"float32"), )
paddle.Tensor.floor(Tensor([172, 13265706],"float32"), )
paddle.Tensor.floor(Tensor([1721, 1325800],"float32"), )
paddle.Tensor.floor(Tensor([173, 13189026],"float32"), )
paddle.Tensor.floor(Tensor([174, 13113227],"float32"), )
paddle.Tensor.floor(Tensor([175, 13038294],"float32"), )
paddle.Tensor.floor(Tensor([176, 12964213],"float32"), )
paddle.Tensor.floor(Tensor([177, 12890969],"float32"), )
paddle.Tensor.floor(Tensor([178, 12818548],"float32"), )
paddle.Tensor.floor(Tensor([179, 12746936],"float32"), )
paddle.Tensor.floor(Tensor([18, 126761188],"float32"), )
paddle.Tensor.floor(Tensor([180, 12676119],"float32"), )
paddle.Tensor.floor(Tensor([181, 12606085],"float32"), )
paddle.Tensor.floor(Tensor([182, 12536821],"float32"), )
paddle.Tensor.floor(Tensor([183, 12468314],"float32"), )
paddle.Tensor.floor(Tensor([184, 12400551],"float32"), )
paddle.Tensor.floor(Tensor([185, 12333521],"float32"), )
paddle.Tensor.floor(Tensor([1857, 1228703],"float32"), )
paddle.Tensor.floor(Tensor([186, 12267212],"float32"), )
paddle.Tensor.floor(Tensor([187, 12201612],"float32"), )
paddle.Tensor.floor(Tensor([1872, 1218858],"float32"), )
paddle.Tensor.floor(Tensor([188, 12136710],"float32"), )
paddle.Tensor.floor(Tensor([189, 12072495],"float32"), )
paddle.Tensor.floor(Tensor([19, 120089547],"float32"), )
paddle.Tensor.floor(Tensor([190, 12008955],"float32"), )
paddle.Tensor.floor(Tensor([191, 11946081],"float32"), )
paddle.Tensor.floor(Tensor([1915, 1191489],"float32"), )
paddle.Tensor.floor(Tensor([192, 11883862],"float32"), )
paddle.Tensor.floor(Tensor([193, 11822287],"float32"), )
paddle.Tensor.floor(Tensor([194, 11761348],"float32"), )
paddle.Tensor.floor(Tensor([195, 11701033],"float32"), )
paddle.Tensor.floor(Tensor([196, 11641334],"float32"), )
paddle.Tensor.floor(Tensor([197, 11582241],"float32"), )
paddle.Tensor.floor(Tensor([198, 11523745],"float32"), )
paddle.Tensor.floor(Tensor([199, 11465837],"float32"), )
paddle.Tensor.floor(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.floor(Tensor([2, 142606337, 8],"float32"), )
paddle.Tensor.floor(Tensor([2, 8, 142606337],"float32"), )
paddle.Tensor.floor(Tensor([20, 114085069],"float32"), )
paddle.Tensor.floor(Tensor([200, 11408507],"float32"), )
paddle.Tensor.floor(Tensor([201, 11351749],"float32"), )
paddle.Tensor.floor(Tensor([202, 11295552],"float32"), )
paddle.Tensor.floor(Tensor([203, 11239909],"float32"), )
paddle.Tensor.floor(Tensor([204, 11184811],"float32"), )
paddle.Tensor.floor(Tensor([205, 11130251],"float32"), )
paddle.Tensor.floor(Tensor([206, 11076221],"float32"), )
paddle.Tensor.floor(Tensor([207, 11022712],"float32"), )
paddle.Tensor.floor(Tensor([208, 10969719],"float32"), )
paddle.Tensor.floor(Tensor([209, 10917232],"float32"), )
paddle.Tensor.floor(Tensor([21, 108652447],"float32"), )
paddle.Tensor.floor(Tensor([210, 10865245],"float32"), )
paddle.Tensor.floor(Tensor([211, 10813751],"float32"), )
paddle.Tensor.floor(Tensor([212, 10762743],"float32"), )
paddle.Tensor.floor(Tensor([213, 10712214],"float32"), )
paddle.Tensor.floor(Tensor([214, 10662156],"float32"), )
paddle.Tensor.floor(Tensor([215, 10612565],"float32"), )
paddle.Tensor.floor(Tensor([216, 10563433],"float32"), )
paddle.Tensor.floor(Tensor([217, 10514753],"float32"), )
paddle.Tensor.floor(Tensor([218, 10466521],"float32"), )
paddle.Tensor.floor(Tensor([219, 10418728],"float32"), )
paddle.Tensor.floor(Tensor([22, 103713700],"float32"), )
paddle.Tensor.floor(Tensor([220, 10371370],"float32"), )
paddle.Tensor.floor(Tensor([221, 10324441],"float32"), )
paddle.Tensor.floor(Tensor([222, 10277935],"float32"), )
paddle.Tensor.floor(Tensor([223, 10231845],"float32"), )
paddle.Tensor.floor(Tensor([224, 10186167],"float32"), )
paddle.Tensor.floor(Tensor([225, 10140896],"float32"), )
paddle.Tensor.floor(Tensor([226, 10096024],"float32"), )
paddle.Tensor.floor(Tensor([227, 10051548],"float32"), )
paddle.Tensor.floor(Tensor([228, 10007463],"float32"), )
paddle.Tensor.floor(Tensor([229, 9963762],"float32"), )
paddle.Tensor.floor(Tensor([23, 99204408],"float32"), )
paddle.Tensor.floor(Tensor([230, 9920441],"float32"), )
paddle.Tensor.floor(Tensor([231, 9877496],"float32"), )
paddle.Tensor.floor(Tensor([232, 9834920],"float32"), )
paddle.Tensor.floor(Tensor([233, 9792710],"float32"), )
paddle.Tensor.floor(Tensor([234, 9750861],"float32"), )
paddle.Tensor.floor(Tensor([235, 9709368],"float32"), )
paddle.Tensor.floor(Tensor([236, 9668227],"float32"), )
paddle.Tensor.floor(Tensor([237, 9627432],"float32"), )
paddle.Tensor.floor(Tensor([238, 9586981],"float32"), )
paddle.Tensor.floor(Tensor([35651585, 8, 8],"float32"), )
paddle.Tensor.floor(Tensor([570425345, 4],"float32"), )
paddle.Tensor.gather(Tensor([4, 570425345],"float32"), Tensor([4, 1],"int64"), 1, )
paddle.Tensor.gather_nd(Tensor([1, 1140850690, 2],"float32"), Tensor([1, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([1, 20, 114085069],"float32"), Tensor([1, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([1, 20, 2],"float32"), Tensor([1, 2281701379],"int64"), )
paddle.Tensor.gather_nd(Tensor([10186167, 7, 32],"float32"), Tensor([12, 2],"int32"), )
paddle.Tensor.gather_nd(Tensor([108652447, 7, 3],"float32"), Tensor([13, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([108652447, 7, 3],"float32"), Tensor([14, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([12, 5941931, 32],"float32"), Tensor([12, 2],"int32"), )
paddle.Tensor.gather_nd(Tensor([12, 7, 27163112],"float32"), Tensor([12, 2],"int32"), )
paddle.Tensor.gather_nd(Tensor([12, 7, 32],"float32"), Tensor([12, 190141782],"int32"), )
paddle.Tensor.gather_nd(Tensor([13, 58505164, 3],"float32"), Tensor([13, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([13, 7, 25073642],"float32"), Tensor([13, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([13, 7, 3],"float32"), Tensor([13, 175515491],"int64"), )
paddle.Tensor.gather_nd(Tensor([139265, 16384, 1],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([139265, 16384, 1],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([13927, 16384, 10],"float32"), Tensor([13927, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([13927, 16384, 10],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([13927, 16384, 10],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([1399, 3, 80, 80, 85],"float32"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([1399, 3, 80, 80, 85],"float32"), Tensor([516, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([14, 54326224, 3],"float32"), Tensor([14, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([14, 7, 23282668],"float32"), Tensor([14, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([14, 7, 3],"float32"), Tensor([14, 162978670],"int64"), )
paddle.Tensor.gather_nd(Tensor([14, 81489335, 2],"float32"), Tensor([14, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 263, 80, 80, 85],"float32"), Tensor([516, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 3, 6991, 80, 85],"float32"), Tensor([516, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 3, 80, 6991, 85],"float32"), Tensor([516, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 3, 80, 80, 7428],"float32"), Tensor([516, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 3, 80, 80, 85],"float32"), Tensor([516, 4421902],"int64"), )
paddle.Tensor.gather_nd(Tensor([162978670, 7, 2],"float32"), Tensor([14, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([2, 10, 114085069],"float32"), Tensor([2, 2],"int32"), )
paddle.Tensor.gather_nd(Tensor([2, 10, 32],"float32"), Tensor([2, 1140850690],"int32"), )
paddle.Tensor.gather_nd(Tensor([2, 35651585, 32],"float32"), Tensor([2, 2],"int32"), )
paddle.Tensor.gather_nd(Tensor([21298, 53568, 2],"float32"), Tensor([21298, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([21298, 53568, 2],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([2281702, 500, 2],"float32"), Tensor([4, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([2281702, 500, 2],"float32"), Tensor([8, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 16384, 10],"float32"), Tensor([4, 500, 1140851],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 16384, 1],"float32"), Tensor([4, 500, 1140851],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 16384, 2],"float32"), Tensor([4, 500, 1140851],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 16384, 34817],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 16384, 34817],"float32"), Tensor([4, 500, 34817],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 285212673, 2],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 285212673, 2],"float32"), Tensor([4, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 500, 1140851],"float32"), Tensor([4, 500, 1140851],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 500, 1140851],"float32"), Tensor([4, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 53568, 10649],"float32"), Tensor([4, 500, 10649],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 53568, 10649],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 570425345, 1],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 570425345, 1],"float32"), Tensor([4, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 57042535, 10],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 71303169, 8],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([42595, 53568, 1],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([42595, 53568, 1],"float32"), Tensor([42595, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([4563403, 500, 1],"float32"), Tensor([4, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([4563403, 500, 1],"float32"), Tensor([8, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([5325, 53568, 8],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([5325, 53568, 8],"float32"), Tensor([5325, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([57042535, 20, 2],"float32"), Tensor([1, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([69633, 16384, 2],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([69633, 16384, 2],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([7130317, 10, 32],"float32"), Tensor([2, 2],"int32"), )
paddle.Tensor.gather_nd(Tensor([8, 142606337, 2],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 142606337, 2],"float32"), Tensor([8, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 16384, 10],"float32"), Tensor([8, 500, 570426],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 16384, 17409],"float32"), Tensor([8, 500, 17409],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 16384, 17409],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 16384, 1],"float32"), Tensor([8, 500, 570426],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 16384, 2],"float32"), Tensor([8, 500, 570426],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 285212673, 1],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 285212673, 1],"float32"), Tensor([8, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 28521268, 10],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 3, 13982, 80, 85],"float32"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 3, 80, 13982, 85],"float32"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 3, 80, 80, 14855],"float32"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 3, 80, 80, 85],"float32"), Tensor([385, 5926498],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 500, 1],"float32"), Tensor([8, 500, 570426],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 500, 2],"float32"), Tensor([8, 500, 570426],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 500, 570426],"float32"), Tensor([8, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 500, 570426],"float32"), Tensor([8, 500, 570426],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 525, 80, 80, 85],"float32"), Tensor([385, 4],"int64"), )
paddle.Tensor.index_select(Tensor([128, 17825793],"float32"), Tensor([28],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([128, 17825793],"float32"), Tensor([30],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([128, 17825793],"float32"), Tensor([38],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([12],"float32"), Tensor([2281701379],"int64"), )
paddle.Tensor.index_select(Tensor([12],"int32"), Tensor([2281701379],"int64"), )
paddle.Tensor.index_select(Tensor([142606337, 16],"float32"), Tensor([28],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([142606337, 16],"float32"), Tensor([30],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([142606337, 16],"float32"), Tensor([38],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([1],"float32"), Tensor([2281701379],"int64"), )
paddle.Tensor.index_select(Tensor([2, 1, 1140850690],"float32"), index=Tensor([2],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([2, 1, 400],"float32"), index=Tensor([2281701379],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([2, 2852127, 400],"float32"), index=Tensor([2],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([20],"float32"), Tensor([2281701379],"int64"), )
paddle.Tensor.index_select(Tensor([2281701379],"float32"), Tensor([1],"int64"), )
paddle.Tensor.index_select(Tensor([2281701379],"float32"), Tensor([2281701379],"int64"), )
paddle.Tensor.index_select(Tensor([2281701379],"float32"), Tensor([6],"int64"), )
paddle.Tensor.index_select(Tensor([2281701379],"int32"), Tensor([2281701379],"int64"), )
paddle.Tensor.index_select(Tensor([2281701379],"int32"), Tensor([6],"int64"), )
paddle.Tensor.index_select(Tensor([2281701379],"int64"), Tensor([6],"int64"), )
paddle.Tensor.index_select(Tensor([285212673, 8],"float32"), Tensor([4],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([285212673, 8],"float32"), Tensor([5],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([3, 1, 500],"float32"), index=Tensor([2281701379],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([3, 1, 760567127],"float32"), index=Tensor([2],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([3, 1521135, 500],"float32"), index=Tensor([2],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([4, 570425345],"float32"), Tensor([4],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([4004, 569856],"float32"), axis=0, index=Tensor([182],"int64"), )
paddle.Tensor.index_select(Tensor([4294967297],"float16"), Tensor([2281701379],"int64"), )
paddle.Tensor.index_select(Tensor([4294967297],"float16"), Tensor([40],"int64"), )
paddle.Tensor.index_select(Tensor([4294967297],"float16"), Tensor([6],"int64"), )
paddle.Tensor.index_select(Tensor([454, 5025774],"float32"), axis=0, index=Tensor([130],"int64"), )
paddle.Tensor.index_select(Tensor([454, 5025774],"float32"), axis=0, index=Tensor([39],"int64"), )
paddle.Tensor.index_select(Tensor([454, 5025774],"float32"), axis=0, index=Tensor([91],"int64"), )
paddle.Tensor.index_select(Tensor([4563403, 1, 500],"float32"), index=Tensor([2],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([5704254, 1, 400],"float32"), index=Tensor([2],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([8, 285212673],"float32"), Tensor([5],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([95070891, 24],"float32"), axis=0, index=Tensor([130],"int64"), )
paddle.Tensor.index_select(Tensor([95070891, 24],"float32"), axis=0, index=Tensor([182],"int64"), )
paddle.Tensor.index_select(Tensor([95070891, 24],"float32"), axis=0, index=Tensor([39],"int64"), )
paddle.Tensor.index_select(Tensor([95070891, 24],"float32"), axis=0, index=Tensor([91],"int64"), )
paddle.Tensor.inner(x=Tensor([1073741825, 4],"float16"), y=Tensor([3, 2, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([1073741825, 4],"float16"), y=Tensor([3, 2, 5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([1073741825, 4],"float16"), y=Tensor([4, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([1073741825, 4],"float16"), y=Tensor([5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([2, 178956971, 3, 4],"float16"), y=Tensor([3, 2, 5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 143165577],"float16"), y=Tensor([3, 2, 5, 143165577],"float16"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float16"), y=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float16"), y=Tensor([107374183, 2, 5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float16"), y=Tensor([3, 2, 178956971, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float16"), y=Tensor([3, 357913942, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float16"), y=Tensor([3, 71582789, 5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float16"), y=Tensor([536870913, 2, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([357913942, 3, 4],"float16"), y=Tensor([2, 5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), )
paddle.Tensor.inner(x=Tensor([4, 4],"float16"), y=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([4, 4],"float32"), y=Tensor([570425345, 4],"float32"), )
paddle.Tensor.inner(x=Tensor([4, 570425345],"float32"), y=Tensor([4, 570425345],"float32"), )
paddle.Tensor.inner(x=Tensor([5, 214748365, 4],"float16"), y=Tensor([2, 5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([5, 3, 286331154],"float16"), y=Tensor([2, 5, 286331154],"float16"), )
paddle.Tensor.inner(x=Tensor([5, 3, 4],"float16"), y=Tensor([2, 536870913, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([5, 3, 4],"float16"), y=Tensor([214748365, 5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([570425345, 4],"float32"), y=Tensor([4, 4],"float32"), )
paddle.Tensor.inverse(Tensor([142606337, 4, 4],"float32"), )
paddle.Tensor.inverse(Tensor([2, 126761188, 3, 3],"float32"), )
paddle.Tensor.inverse(Tensor([63380594, 4, 3, 3],"float32"), )
paddle.Tensor.is_complex(Tensor([1, 100, 42949673],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 1073741825, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 107374183, 40],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 12, 357913942],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 17, 252645136],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 2, 2147483649],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 2147483649, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 252645136, 17],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 357913942, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 4, 1073741825],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 40, 107374183],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 42949673, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 536870913, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 6, 715827883],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 715827883, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 8, 536870913],"float16"), )
paddle.Tensor.is_complex(Tensor([100, 42949673],"float16"), )
paddle.Tensor.is_complex(Tensor([1073741825, 2, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([1073741825, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([107374183, 40],"float16"), )
paddle.Tensor.is_complex(Tensor([10737419, 100, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([10737419, 4, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([1073742, 100, 40],"float16"), )
paddle.Tensor.is_complex(Tensor([1073742, 40, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([1140850690, 2],"int64"), )
paddle.Tensor.is_complex(Tensor([119304648, 6, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([1193047, 3, 100, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([12, 357913942],"float16"), )
paddle.Tensor.is_complex(Tensor([126322568, 17, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([13421773, 40, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.is_complex(Tensor([16, 268435457],"float16"), )
paddle.Tensor.is_complex(Tensor([17, 252645136],"float16"), )
paddle.Tensor.is_complex(Tensor([178956971, 3, 4, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([17895698, 40, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([1789570, 3, 100, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 10737419, 100, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.is_complex(Tensor([2, 134217729, 4, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 14913081, 12, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 1789570, 100, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 268435457, 4, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 2684355, 100, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 100, 7158279],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 119304648, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 12, 59652324],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 17, 42107523],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 178956971, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 17895698, 40],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 2, 357913942],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 357913942, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 40, 17895698],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 42107523, 17],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 59652324, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 6, 119304648],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 7158279, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 8, 89478486],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 89478486, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 31580642, 17, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 31580642, 4, 17],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 33554433, 8, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3579140, 100, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 4473925, 40, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 536870913, 2, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 536871, 100, 40],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 536871, 40, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 5368710, 100, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 5368710, 4, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 59652324, 6, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 63161284, 17, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 6710887, 40, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 8947849, 40, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([204522253, 21],"float16"), )
paddle.Tensor.is_complex(Tensor([21, 204522253],"float16"), )
paddle.Tensor.is_complex(Tensor([21053762, 3, 17, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([21053762, 3, 4, 17],"float16"), )
paddle.Tensor.is_complex(Tensor([2147483649, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([21474837, 100, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([22369622, 3, 8, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([2281701379],"float32"), )
paddle.Tensor.is_complex(Tensor([2386093, 3, 100, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([252645136, 17],"float16"), )
paddle.Tensor.is_complex(Tensor([268435457, 16],"float16"), )
paddle.Tensor.is_complex(Tensor([268435457, 4, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([29826162, 12, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([2982617, 3, 40, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 100, 14316558],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 119304648, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 12, 119304648],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 1431655766],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 14316558, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 17, 84215046],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 178956971, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 2, 715827883],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 238609295, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 357913942, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 35791395, 40],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 4, 357913942],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 40, 35791395],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 6, 238609295],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 715827883, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 760567127],"int64"), )
paddle.Tensor.is_complex(Tensor([3, 8, 178956971],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 84215046, 17],"float16"), )
paddle.Tensor.is_complex(Tensor([357913942, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([357913942, 3, 2, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([357914, 3, 100, 40],"float16"), )
paddle.Tensor.is_complex(Tensor([357914, 3, 40, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([3579140, 100, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([3579140, 3, 100, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([3579140, 3, 4, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([39768216, 3, 6, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([4, 1073741825],"float16"), )
paddle.Tensor.is_complex(Tensor([40, 107374183],"float16"), )
paddle.Tensor.is_complex(Tensor([42107523, 3, 17, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([4294967297],"float16"), )
paddle.Tensor.is_complex(Tensor([42949673, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([4473925, 3, 40, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([5, 858993460],"float16"), )
paddle.Tensor.is_complex(Tensor([536870913, 4, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([536870913, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([5368710, 100, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([5965233, 3, 40, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([6, 715827883],"float16"), )
paddle.Tensor.is_complex(Tensor([63161284, 17, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([63161284, 4, 17],"float16"), )
paddle.Tensor.is_complex(Tensor([67108865, 8, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([715827883, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([7158279, 100, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([7158279, 3, 100, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([760567127, 3],"float32"), )
paddle.Tensor.is_complex(Tensor([8, 536870913],"float16"), )
paddle.Tensor.is_complex(Tensor([858993460, 5],"float16"), )
paddle.Tensor.is_complex(Tensor([89478486, 3, 4, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([8947849, 40, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([9942054, 3, 12, 12],"float16"), )
paddle.Tensor.isclose(x=Tensor([2281701379],"float32"), y=Tensor([2281701379],"float32"), )
paddle.Tensor.isclose(x=Tensor([3, 4, 357913942],"float16"), y=Tensor([3, 4, 357913942],"float16"), )
paddle.Tensor.isclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.Tensor.isnan(Tensor([102261127, 42],"float16"), )
paddle.Tensor.isnan(Tensor([102261127, 7, 6],"float16"), )
paddle.Tensor.isnan(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.isnan(Tensor([178956971, 24],"float16"), )
paddle.Tensor.isnan(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.isnan(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.isnan(Tensor([2, 3, 715827883],"float16"), )
paddle.Tensor.isnan(Tensor([2, 536870913, 4],"float16"), )
paddle.Tensor.isnan(Tensor([2281701379],"float32"), )
paddle.Tensor.isnan(Tensor([253522376, 3, 3],"float32"), )
paddle.Tensor.isnan(Tensor([3, 11930465, 3, 4, 2, 5],"float16"), )
paddle.Tensor.isnan(Tensor([3, 253522376, 3],"float32"), )
paddle.Tensor.isnan(Tensor([3, 3, 253522376],"float32"), )
paddle.Tensor.isnan(Tensor([3, 3, 477218589],"float16"), )
paddle.Tensor.isnan(Tensor([3, 477218589, 3],"float16"), )
paddle.Tensor.isnan(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), )
paddle.Tensor.isnan(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), )
paddle.Tensor.isnan(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), )
paddle.Tensor.isnan(Tensor([3, 6, 5965233, 4, 2, 5],"float16"), )
paddle.Tensor.isnan(Tensor([325957340, 7],"float32"), )
paddle.Tensor.isnan(Tensor([357913942, 12],"float16"), )
paddle.Tensor.isnan(Tensor([357913942, 3, 4],"float16"), )
paddle.Tensor.isnan(Tensor([4, 1073741825],"float16"), )
paddle.Tensor.isnan(Tensor([4, 178956971, 6],"float16"), )
paddle.Tensor.isnan(Tensor([4, 570425345],"float32"), )
paddle.Tensor.isnan(Tensor([4, 7, 153391690],"float16"), )
paddle.Tensor.isnan(Tensor([4294967297],"float16"), )
paddle.Tensor.isnan(Tensor([477218589, 3, 3],"float16"), )
paddle.Tensor.isnan(Tensor([5, 214748365, 4],"float16"), )
paddle.Tensor.isnan(Tensor([5, 3, 286331154],"float16"), )
paddle.Tensor.isnan(Tensor([5, 858993460],"float16"), )
paddle.Tensor.isnan(Tensor([5965233, 6, 3, 4, 2, 5],"float16"), )
paddle.Tensor.isnan(Tensor([613566757, 7],"float16"), )
paddle.Tensor.isnan(Tensor([7, 613566757],"float16"), )
paddle.Tensor.isnan(Tensor([760567127, 3],"float32"), )
paddle.Tensor.item(Tensor([2, 1, 1140850690],"int32"), 0, )
paddle.Tensor.item(Tensor([2, 1, 1140850690],"int64"), 0, )
paddle.Tensor.item(Tensor([2, 1140850690, 1],"int32"), 0, )
paddle.Tensor.item(Tensor([2, 1140850690, 1],"int64"), 0, )
paddle.Tensor.item(Tensor([2281701379, 1, 1],"int32"), 0, )
paddle.Tensor.item(Tensor([2281701379, 1, 1],"int64"), 0, )
paddle.Tensor.item(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.item(Tensor([2281701379],"int32"), 0, )
paddle.Tensor.item(Tensor([2281701379],"int64"), 0, )
paddle.Tensor.item(Tensor([3, 760567127],"float32"), 0, )
paddle.Tensor.item(Tensor([4294967297],"float16"), 0, )
paddle.Tensor.item(Tensor([760567127, 3],"float32"), 0, )
paddle.Tensor.kthvalue(Tensor([1140851, 200, 10],"float32"), k=200, axis=1, )
paddle.Tensor.kthvalue(Tensor([2, 114085069, 10],"float32"), k=200, axis=1, )
paddle.Tensor.kthvalue(Tensor([2, 200, 5704254],"float32"), k=200, axis=1, )
paddle.Tensor.lerp(x=Tensor([214748365, 5, 4],"float16"), y=Tensor([214748365, 5, 4],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([2281701379],"float32"), y=Tensor([2281701379],"float32"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 1073741825],"float16"), y=Tensor([1],"float16"), weight=0.2, )
paddle.Tensor.lerp(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 268435457, 4],"float16"), y=Tensor([4, 268435457, 4],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 214748365],"float16"), y=Tensor([4, 5, 214748365],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([858993460, 5],"float16"), y=Tensor([1],"float16"), weight=0.2, )
paddle.Tensor.lerp(x=Tensor([858993460, 5],"float16"), y=Tensor([858993460, 5],"float16"), weight=0.5, )
paddle.Tensor.less(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.Tensor.less(Tensor([2228225, 1024],"float32"), Tensor([2228225, 1024],"float32"), )
paddle.Tensor.lgamma(Tensor([100, 100, 429497],"float16"), )
paddle.Tensor.lgamma(Tensor([100, 429497, 100],"float16"), )
paddle.Tensor.lgamma(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.lgamma(Tensor([2281701379],"float32"), )
paddle.Tensor.lgamma(Tensor([4, 1073741825],"float16"), )
paddle.Tensor.lgamma(Tensor([429497, 100, 100],"float16"), )
paddle.Tensor.lgamma(Tensor([5, 107374183, 8],"float16"), )
paddle.Tensor.lgamma(Tensor([5, 10737419, 8, 10],"float16"), )
paddle.Tensor.lgamma(Tensor([5, 7, 122713352],"float16"), )
paddle.Tensor.lgamma(Tensor([5, 7, 12271336, 10],"float16"), )
paddle.Tensor.lgamma(Tensor([5, 7, 8, 15339169],"float16"), )
paddle.Tensor.lgamma(Tensor([760567127, 3],"float32"), )
paddle.Tensor.lgamma(Tensor([76695845, 7, 8],"float16"), )
paddle.Tensor.lgamma(Tensor([7669585, 7, 8, 10],"float16"), )
paddle.Tensor.lgamma(Tensor([858993460, 5],"float16"), )
paddle.Tensor.log(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.log(Tensor([10, 228170138],"float32"), )
paddle.Tensor.log(Tensor([100, 200, 214749],"float16"), )
paddle.Tensor.log(Tensor([100, 429497, 100],"float16"), )
paddle.Tensor.log(Tensor([10000, 143166, 3],"float16"), )
paddle.Tensor.log(Tensor([10000, 429497],"float16"), )
paddle.Tensor.log(Tensor([10000, 5, 85900],"float16"), )
paddle.Tensor.log(Tensor([1073741825, 4],"float16"), )
paddle.Tensor.log(Tensor([11, 207427399],"float32"), )
paddle.Tensor.log(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.log(Tensor([1200, 1901418],"float32"), )
paddle.Tensor.log(Tensor([142606337, 16],"float32"), )
paddle.Tensor.log(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.log(Tensor([1800, 1267612],"float32"), )
paddle.Tensor.log(Tensor([2, 1073741825, 2],"float16"), )
paddle.Tensor.log(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.log(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.log(Tensor([2, 3, 715827883],"float16"), )
paddle.Tensor.log(Tensor([2, 715827883, 3],"float16"), )
paddle.Tensor.log(Tensor([214749, 200, 100],"float16"), )
paddle.Tensor.log(Tensor([22591103, 101],"float32"), )
paddle.Tensor.log(Tensor([2281701379, 1],"float32"), )
paddle.Tensor.log(Tensor([2281701379],"float32"), )
paddle.Tensor.log(Tensor([2400, 950709],"float32"), )
paddle.Tensor.log(Tensor([285212673, 8],"float32"), )
paddle.Tensor.log(Tensor([286331154, 5, 3],"float16"), )
paddle.Tensor.log(Tensor([3, 1431655766],"float16"), )
paddle.Tensor.log(Tensor([300, 7605672],"float32"), )
paddle.Tensor.log(Tensor([325957340, 7],"float32"), )
paddle.Tensor.log(Tensor([4294967297, 1],"float16"), )
paddle.Tensor.log(Tensor([4294967297],"float16"), )
paddle.Tensor.log(Tensor([429496730, 10],"float16"), )
paddle.Tensor.log(Tensor([456340276, 5],"float32"), )
paddle.Tensor.log(Tensor([477218589, 3, 3],"float16"), )
paddle.Tensor.log(Tensor([4800, 475355],"float32"), )
paddle.Tensor.log(Tensor([570425345, 4],"float32"), )
paddle.Tensor.log(Tensor([600, 3802836],"float32"), )
paddle.Tensor.log(Tensor([6380, 357634],"float32"), )
paddle.Tensor.log(Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.log(Tensor([760567127, 3],"float32"), )
paddle.Tensor.log(Tensor([8, 285212673],"float32"), )
paddle.Tensor.log(Tensor([8, 536870913],"float16"), )
paddle.Tensor.log(Tensor([8550, 266866],"float32"), )
paddle.Tensor.log(Tensor([9, 253522376],"float32"), )
paddle.Tensor.log(Tensor([900, 2535224],"float32"), )
paddle.Tensor.log10(Tensor([4572548, 499],"float32"), )
paddle.Tensor.log10(Tensor([80, 28521268],"float32"), )
paddle.Tensor.log1p(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.log1p(Tensor([2, 1073741825, 2],"float16"), )
paddle.Tensor.log1p(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.log1p(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.log1p(Tensor([2, 3, 715827883],"float16"), )
paddle.Tensor.log1p(Tensor([2281701379],"float32"), )
paddle.Tensor.log1p(Tensor([4294967297],"float16"), )
paddle.Tensor.log1p(Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.log1p(Tensor([760567127, 3],"float32"), )
paddle.Tensor.logical_and(Tensor([2, 1140850690],"bool"), Tensor([2, 1140850690],"bool"), )
paddle.Tensor.logical_and(Tensor([2281701379],"bool"), Tensor([2281701379],"bool"), )
paddle.Tensor.logical_and(Tensor([760567127, 3],"bool"), Tensor([760567127, 3],"bool"), )
paddle.Tensor.logical_not(Tensor([13, 175515491],"float32"), )
paddle.Tensor.logical_not(Tensor([190141782, 12],"bool"), )
paddle.Tensor.logical_not(Tensor([190141782, 3, 4],"bool"), )
paddle.Tensor.logical_not(Tensor([2, 1140850690],"bool"), )
paddle.Tensor.logical_not(Tensor([2, 285212673, 4],"bool"), )
paddle.Tensor.logical_not(Tensor([2, 3, 380283564],"bool"), )
paddle.Tensor.logical_not(Tensor([2281701379],"bool"), )
paddle.Tensor.logical_not(Tensor([253522376, 3, 3],"bool"), )
paddle.Tensor.logical_not(Tensor([253522376, 9],"float32"), )
paddle.Tensor.logical_not(Tensor([3, 253522376, 3],"bool"), )
paddle.Tensor.logical_not(Tensor([3, 3, 253522376],"bool"), )
paddle.Tensor.logical_not(Tensor([3, 6, 3, 4, 2, 5281717],"bool"), )
paddle.Tensor.logical_not(Tensor([3, 6, 3, 4, 2112687, 5],"bool"), )
paddle.Tensor.logical_not(Tensor([3, 6, 3, 4225373, 2, 5],"bool"), )
paddle.Tensor.logical_not(Tensor([3, 6, 3169030, 4, 2, 5],"bool"), )
paddle.Tensor.logical_not(Tensor([3, 6338060, 3, 4, 2, 5],"bool"), )
paddle.Tensor.logical_not(Tensor([3169030, 6, 3, 4, 2, 5],"bool"), )
paddle.Tensor.logical_not(Tensor([325957340, 7],"bool"), )
paddle.Tensor.logical_not(Tensor([4, 570425345],"bool"), )
paddle.Tensor.logical_not(Tensor([4, 7, 81489335],"bool"), )
paddle.Tensor.logical_not(Tensor([4, 95070891, 6],"bool"), )
paddle.Tensor.logical_not(Tensor([5, 114085069, 4],"bool"), )
paddle.Tensor.logical_not(Tensor([5, 3, 152113426],"bool"), )
paddle.Tensor.logical_not(Tensor([5, 456340276],"bool"), )
paddle.Tensor.logical_not(Tensor([54326224, 42],"bool"), )
paddle.Tensor.logical_not(Tensor([54326224, 7, 6],"bool"), )
paddle.Tensor.logical_not(Tensor([7, 325957340],"bool"), )
paddle.Tensor.logical_not(Tensor([760567127, 3],"bool"), )
paddle.Tensor.logical_not(Tensor([95070891, 24],"bool"), )
paddle.Tensor.logical_or(Tensor([2281701379],"bool"), Tensor([2281701379],"bool"), )
paddle.Tensor.logit(x=Tensor([143165577, 3, 2, 5],"float16"), eps=0.2, )
paddle.Tensor.logit(x=Tensor([4, 107374183, 2, 5],"float16"), eps=0.2, )
paddle.Tensor.logit(x=Tensor([4, 3, 2, 178956971],"float16"), eps=0.2, )
paddle.Tensor.logit(x=Tensor([4, 3, 71582789, 5],"float16"), eps=0.2, )
paddle.Tensor.lu(Tensor([760567127, 3],"float32"), )
paddle.Tensor.masked_fill(Tensor([1, 36828, 61956],"float32"), Tensor([1, 36828, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 61956],"float32"), Tensor([1, 36828, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 61956],"float32"), Tensor([1, 36828, 61956],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 61956],"float32"), Tensor([1, 36828, 61956],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 59471],"float32"), Tensor([1, 38367, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 59471],"float32"), Tensor([1, 38367, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 59471],"float32"), Tensor([1, 38367, 59471],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 59471],"float32"), Tensor([1, 38367, 59471],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 570425345, 4],"float32"), Tensor([1, 570425345, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 6380, 357634],"float32"), Tensor([1, 6380, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 6380, 357634],"float32"), Tensor([1, 6380, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 6380, 357634],"float32"), Tensor([1, 6380, 357634],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 6380, 357634],"float32"), Tensor([1, 6380, 357634],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 8550, 266866],"float32"), Tensor([1, 8550, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 8550, 266866],"float32"), Tensor([1, 8550, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 8550, 266866],"float32"), Tensor([1, 8550, 266866],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 8550, 266866],"float32"), Tensor([1, 8550, 266866],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 8912897, 256],"float32"), Tensor([1, 8912897, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([10, 25, 9126806],"float32"), Tensor([10, 25, 9126806],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([10, 25, 9126806],"float32"), Tensor([10, 25, 9126806],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([10, 9126806, 25],"float32"), Tensor([10, 9126806, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([10, 9126806, 25],"float32"), Tensor([10, 9126806, 25],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([10186167, 7, 32],"float32"), Tensor([10186167, 7, 32],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([1043, 8550, 256],"float32"), Tensor([1, 8550, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1043, 8550, 256],"float32"), Tensor([1043, 8550, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([11641334, 4, 7, 7],"float32"), Tensor([11641334, 4, 7, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([13, 175515491],"float32"), Tensor([13, 175515491],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([13, 3581949, 7, 7],"float32"), Tensor([13, 3581949, 7, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([13, 4, 6268411, 7],"float32"), Tensor([13, 4, 6268411, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([13, 4, 7, 6268411],"float32"), Tensor([13, 4, 7, 6268411],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([13, 5484860, 32],"float32"), Tensor([13, 5484860, 32],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([13, 7, 25073642],"float32"), Tensor([13, 7, 25073642],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([1398, 6380, 256],"float32"), Tensor([1, 6380, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1398, 6380, 256],"float32"), Tensor([1398, 6380, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([14868, 38367, 4],"float32"), Tensor([1, 38367, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([14868, 38367, 4],"float32"), Tensor([14868, 38367, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([15489, 36828, 4],"float32"), Tensor([1, 36828, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([15489, 36828, 4],"float32"), Tensor([15489, 36828, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([233, 38367, 256],"float32"), Tensor([1, 38367, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([233, 38367, 256],"float32"), Tensor([233, 38367, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([243, 36828, 256],"float32"), Tensor([1, 36828, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([243, 36828, 256],"float32"), Tensor([243, 36828, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([27, 25, 3380299],"float32"), Tensor([27, 25, 3380299],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([27, 25, 3380299],"float32"), Tensor([27, 25, 3380299],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([27, 3380299, 25],"float32"), Tensor([27, 3380299, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([27, 3380299, 25],"float32"), Tensor([27, 3380299, 25],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([340, 25, 268436],"float32"), Tensor([340, 25, 268436],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([340, 268436, 25],"float32"), Tensor([340, 268436, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([3650723, 25, 25],"float32"), Tensor([3650723, 25, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([3650723, 25, 25],"float32"), Tensor([3650723, 25, 25],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([52, 1371215, 32],"float32"), Tensor([52, 1371215, 32],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([52, 4, 1567103, 7],"float32"), Tensor([52, 4, 1567103, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([52, 4, 7, 1567103],"float32"), Tensor([52, 4, 7, 1567103],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([52, 43878873],"float32"), Tensor([52, 43878873],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([52, 7, 6268411],"float32"), Tensor([52, 7, 6268411],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([52, 895488, 7, 7],"float32"), Tensor([52, 895488, 7, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([66717, 8550, 4],"float32"), Tensor([1, 8550, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([66717, 8550, 4],"float32"), Tensor([66717, 8550, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([71303169, 32],"float32"), Tensor([71303169, 32],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([85, 1073742, 25],"float32"), Tensor([85, 1073742, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([85, 25, 1073742],"float32"), Tensor([85, 25, 1073742],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([89409, 6380, 4],"float32"), Tensor([1, 6380, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([89409, 6380, 4],"float32"), Tensor([89409, 6380, 1],"bool"), math.inf, )
paddle.Tensor.masked_select(Tensor([1, 1],"float32"), Tensor([1, 2281701379],"bool"), )
paddle.Tensor.masked_select(Tensor([1, 1],"float32"), Tensor([2281701379, 1],"bool"), )
paddle.Tensor.masked_select(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"bool"), )
paddle.Tensor.masked_select(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"bool"), )
paddle.Tensor.masked_select(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"bool"), )
paddle.Tensor.masked_select(Tensor([15000, 152114],"float32"), Tensor([15000, 152114],"bool"), )
paddle.Tensor.masked_select(Tensor([2281701379, 1],"float32"), Tensor([1, 1],"bool"), )
paddle.Tensor.masked_select(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"bool"), )
paddle.Tensor.masked_select(Tensor([2281701379],"float32"), Tensor([2281701379],"bool"), )
paddle.Tensor.masked_select(Tensor([2281701379],"int32"), Tensor([2281701379],"bool"), )
paddle.Tensor.masked_select(Tensor([3750, 608454],"float32"), Tensor([3750, 608454],"bool"), )
paddle.Tensor.masked_select(Tensor([45634028, 50],"float32"), Tensor([45634028, 50],"bool"), )
paddle.Tensor.masked_select(Tensor([60000, 38029],"float32"), Tensor([60000, 38029],"bool"), )
paddle.Tensor.matmul(Tensor([1, 1073741825, 4],"float16"), Tensor([1, 4, 4],"float16"), )
paddle.Tensor.matmul(Tensor([1, 10],"float16"), Tensor([10, 429496730],"float16"), )
paddle.Tensor.matmul(Tensor([1, 125],"float16"), Tensor([125, 34359739],"float16"), )
paddle.Tensor.matmul(Tensor([1, 21504, 1166, 91],"float32"), Tensor([91],"float32"), )
paddle.Tensor.matmul(Tensor([1, 25073642, 1, 91],"float32"), Tensor([91],"float32"), )
paddle.Tensor.matmul(Tensor([1, 25],"float16"), Tensor([25, 171798692],"float16"), )
paddle.Tensor.matmul(Tensor([1, 357913942, 12],"float16"), Tensor([1, 12, 12],"float16"), )
paddle.Tensor.matmul(Tensor([1, 357913942, 12],"float16"), Tensor([1, 12, 40],"float16"), )
paddle.Tensor.matmul(Tensor([1, 715827883, 6],"float16"), Tensor([1, 6, 40],"float16"), )
paddle.Tensor.matmul(Tensor([1, 715827883, 6],"float16"), Tensor([1, 6, 6],"float16"), )
paddle.Tensor.matmul(Tensor([10737419, 100, 4],"float16"), Tensor([1, 4, 4],"float16"), )
paddle.Tensor.matmul(Tensor([10737419, 100, 4],"float16"), Tensor([10737419, 4, 4],"float16"), )
paddle.Tensor.matmul(Tensor([112, 12, 197, 197],"float32"), Tensor([112, 12, 197, 8618],"float32"), )
paddle.Tensor.matmul(Tensor([112, 12, 197, 64],"float32"), Tensor([112, 12, 64, 26527],"float32"), )
paddle.Tensor.matmul(Tensor([112, 12, 26527, 64],"float32"), Tensor([112, 12, 64, 197],"float32"), )
paddle.Tensor.matmul(Tensor([112, 12, 8618, 197],"float32"), Tensor([112, 12, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([112, 1616, 197, 64],"float32"), Tensor([112, 1616, 64, 197],"float32"), )
paddle.Tensor.matmul(Tensor([112, 525, 197, 197],"float32"), Tensor([112, 525, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([1166, 21504, 1, 91],"float32"), Tensor([91],"float32"), )
paddle.Tensor.matmul(Tensor([124, 1119, 257, 64],"float32"), Tensor([124, 1119, 64, 257],"float32"), )
paddle.Tensor.matmul(Tensor([124, 16, 17970, 64],"float32"), Tensor([124, 16, 64, 257],"float32"), )
paddle.Tensor.matmul(Tensor([124, 16, 257, 257],"float32"), Tensor([124, 16, 257, 4475],"float32"), )
paddle.Tensor.matmul(Tensor([124, 16, 257, 64],"float32"), Tensor([124, 16, 64, 17970],"float32"), )
paddle.Tensor.matmul(Tensor([124, 16, 4475, 257],"float32"), Tensor([124, 16, 257, 64],"float32"), )
paddle.Tensor.matmul(Tensor([124, 279, 257, 257],"float32"), Tensor([124, 279, 257, 64],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 197, 197],"float32"), Tensor([128, 12, 197, 7541],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 197, 64],"float32"), Tensor([128, 12, 64, 23211],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 23, 23],"float32"), Tensor([128, 12, 23, 64587],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 23, 32],"float32"), Tensor([128, 12, 32, 46422],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 23211, 64],"float32"), Tensor([128, 12, 64, 197],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 46422, 32],"float32"), Tensor([128, 12, 32, 23],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 46422, 32],"float32"), Tensor([128, 12, 32, 40],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 64587, 23],"float32"), Tensor([128, 12, 23, 32],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 7541, 197],"float32"), Tensor([128, 12, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([128, 1414, 197, 64],"float32"), Tensor([128, 1414, 64, 197],"float32"), )
paddle.Tensor.matmul(Tensor([128, 24220, 23, 32],"float32"), Tensor([128, 24220, 32, 23],"float32"), )
paddle.Tensor.matmul(Tensor([128, 33698, 23, 23],"float32"), Tensor([128, 33698, 23, 32],"float32"), )
paddle.Tensor.matmul(Tensor([128, 460, 197, 197],"float32"), Tensor([128, 460, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([15082, 12, 197, 64],"float32"), Tensor([15082, 12, 64, 197],"float32"), )
paddle.Tensor.matmul(Tensor([171798692, 25],"float16"), Tensor([25, 1],"float16"), )
paddle.Tensor.matmul(Tensor([171798692, 25],"float16"), Tensor([25, 5],"float16"), )
paddle.Tensor.matmul(Tensor([21474837, 100, 2],"float16"), Tensor([21474837, 2, 2],"float16"), )
paddle.Tensor.matmul(Tensor([21474837, 100, 2],"float16"), Tensor([21474837, 2, 4],"float16"), )
paddle.Tensor.matmul(Tensor([2160, 16, 257, 257],"float32"), Tensor([2160, 16, 257, 64],"float32"), )
paddle.Tensor.matmul(Tensor([258345, 12, 23, 32],"float32"), Tensor([258345, 12, 32, 23],"float32"), )
paddle.Tensor.matmul(Tensor([34359739, 125],"float16"), Tensor([125, 1],"float16"), )
paddle.Tensor.matmul(Tensor([3579140, 100, 12],"float16"), Tensor([1, 12, 12],"float16"), )
paddle.Tensor.matmul(Tensor([3579140, 100, 12],"float16"), Tensor([1, 12, 40],"float16"), )
paddle.Tensor.matmul(Tensor([3579140, 100, 12],"float16"), Tensor([3579140, 12, 12],"float16"), )
paddle.Tensor.matmul(Tensor([3579140, 100, 12],"float16"), Tensor([3579140, 12, 40],"float16"), )
paddle.Tensor.matmul(Tensor([359437, 12, 23, 23],"float32"), Tensor([359437, 12, 23, 32],"float32"), )
paddle.Tensor.matmul(Tensor([42949673, 100, 1],"float16"), Tensor([42949673, 1, 4],"float16"), )
paddle.Tensor.matmul(Tensor([429496730, 10],"float16"), Tensor([10, 1],"float16"), )
paddle.Tensor.matmul(Tensor([4900, 12, 197, 197],"float32"), Tensor([4900, 12, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([7158279, 100, 6],"float16"), Tensor([1, 6, 40],"float16"), )
paddle.Tensor.matmul(Tensor([7158279, 100, 6],"float16"), Tensor([1, 6, 6],"float16"), )
paddle.Tensor.matmul(Tensor([7158279, 100, 6],"float16"), Tensor([7158279, 6, 40],"float16"), )
paddle.Tensor.matmul(Tensor([7158279, 100, 6],"float16"), Tensor([7158279, 6, 6],"float16"), )
paddle.Tensor.max(Tensor([1, 1, 2281701379],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 10164, 224489],"float32"), -1, )
paddle.Tensor.max(Tensor([1, 11109, 205393],"float32"), -1, )
paddle.Tensor.max(Tensor([1, 1140850690, 2],"float32"), -1, )
paddle.Tensor.max(Tensor([1, 12096, 188633],"float32"), -1, )
paddle.Tensor.max(Tensor([1, 207427399, 11],"float32"), -1, )
paddle.Tensor.max(Tensor([1, 221848, 10285],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.max(Tensor([1, 2281701379],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 300, 7605672],"float32"), -1, )
paddle.Tensor.max(Tensor([1, 331402, 6885],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 371009, 6150],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 419431, 5440],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 547828, 4165],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 56123, 40656],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 56123, 40656],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 570425345, 4],"float32"), -1, )
paddle.Tensor.max(Tensor([1, 61595, 37044],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 61595, 37044],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 634159, 3598],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 67908, 33600],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 67908, 33600],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 73661, 30976],"float32"), -1, )
paddle.Tensor.max(Tensor([1, 75245, 30324],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 75245, 30324],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 83837, 27216],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 83837, 27216],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 93991, 24276],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 93991, 24276],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([100, 15802, 38, 38],"float32"), axis=1, )
paddle.Tensor.max(Tensor([100, 281692, 9, 9],"float32"), axis=1, )
paddle.Tensor.max(Tensor([100, 4, 150112, 38],"float32"), axis=1, )
paddle.Tensor.max(Tensor([100, 4, 38, 150112],"float32"), axis=1, )
paddle.Tensor.max(Tensor([100, 4, 633806, 9],"float32"), axis=1, )
paddle.Tensor.max(Tensor([100, 4, 9, 633806],"float32"), axis=1, )
paddle.Tensor.max(Tensor([10007463, 2, 114],"int64"), )
paddle.Tensor.max(Tensor([102697, 11109, 2],"float32"), -1, )
paddle.Tensor.max(Tensor([106106, 21504],"float32"), )
paddle.Tensor.max(Tensor([112245, 10164, 2],"float32"), -1, )
paddle.Tensor.max(Tensor([1132, 90, 22400],"float32"), axis=1, )
paddle.Tensor.max(Tensor([1132, 90, 22400],"float32"), axis=2, )
paddle.Tensor.max(Tensor([114085069, 2, 10],"int64"), )
paddle.Tensor.max(Tensor([1140850690, 2],"float32"), -1, keepdim=True, )
paddle.Tensor.max(Tensor([1140850690, 2],"float32"), axis=-1, )
paddle.Tensor.max(Tensor([11883862, 3, 8, 8],"float32"), axis=-3, )
paddle.Tensor.max(Tensor([12, 1200, 158452],"float32"), 2, )
paddle.Tensor.max(Tensor([12, 18397, 76, 136, 1],"float32"), 1, )
paddle.Tensor.max(Tensor([12, 18397, 76, 136],"int64"), 1, )
paddle.Tensor.max(Tensor([12, 1901418, 100],"float32"), 2, )
paddle.Tensor.max(Tensor([12, 294338, 19, 34, 1],"float32"), 1, )
paddle.Tensor.max(Tensor([12, 294338, 19, 34],"int64"), 1, )
paddle.Tensor.max(Tensor([12, 300, 633806],"float32"), 2, )
paddle.Tensor.max(Tensor([12, 4, 1398102, 34, 1],"float32"), 1, )
paddle.Tensor.max(Tensor([12, 4, 1398102, 34],"int64"), 1, )
paddle.Tensor.max(Tensor([12, 4, 19, 2501866, 1],"float32"), 1, )
paddle.Tensor.max(Tensor([12, 4, 19, 2501866],"int64"), 1, )
paddle.Tensor.max(Tensor([12, 4, 19, 34, 73585],"float32"), 1, )
paddle.Tensor.max(Tensor([12, 4, 349526, 136, 1],"float32"), 1, )
paddle.Tensor.max(Tensor([12, 4, 349526, 136],"int64"), 1, )
paddle.Tensor.max(Tensor([12, 4, 38, 1250933, 1],"float32"), 1, )
paddle.Tensor.max(Tensor([12, 4, 38, 1250933],"int64"), 1, )
paddle.Tensor.max(Tensor([12, 4, 38, 68, 18397],"float32"), 1, )
paddle.Tensor.max(Tensor([12, 4, 699051, 68, 1],"float32"), 1, )
paddle.Tensor.max(Tensor([12, 4, 699051, 68],"int64"), 1, )
paddle.Tensor.max(Tensor([12, 4, 76, 136, 4600],"float32"), 1, )
paddle.Tensor.max(Tensor([12, 4, 76, 625467, 1],"float32"), 1, )
paddle.Tensor.max(Tensor([12, 4, 76, 625467],"int64"), 1, )
paddle.Tensor.max(Tensor([12, 4800, 39613],"float32"), 2, )
paddle.Tensor.max(Tensor([12, 73585, 38, 68, 1],"float32"), 1, )
paddle.Tensor.max(Tensor([12, 73585, 38, 68],"int64"), 1, )
paddle.Tensor.max(Tensor([13, 10969719, 16],"float32"), )
paddle.Tensor.max(Tensor([13, 175515491],"float32"), 1, )
paddle.Tensor.max(Tensor([13, 3, 58505164],"float32"), 1, )
paddle.Tensor.max(Tensor([13, 58505164, 3],"float32"), 1, )
paddle.Tensor.max(Tensor([13, 7, 25073642],"float32"), )
paddle.Tensor.max(Tensor([13702, 166533],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1431655766, 3],"float16"), -1, keepdim=True, )
paddle.Tensor.max(Tensor([14389, 158580],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([14870, 153450],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([15171, 150402],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([16520, 138120],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([17825793, 8, 16],"float32"), )
paddle.Tensor.max(Tensor([18673, 11109, 11],"float32"), -1, )
paddle.Tensor.max(Tensor([19015, 1200, 100],"float32"), 2, )
paddle.Tensor.max(Tensor([2, 1073741825, 2],"float16"), -1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 10800, 105635],"float32"), 2, )
paddle.Tensor.max(Tensor([2, 1083, 1053418],"float32"), 2, )
paddle.Tensor.max(Tensor([2, 114085069, 10],"int64"), )
paddle.Tensor.max(Tensor([2, 1140850690],"float32"), -1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 1140850690],"float32"), axis=-1, )
paddle.Tensor.max(Tensor([2, 1200, 950709],"float32"), 2, )
paddle.Tensor.max(Tensor([2, 17825793, 8, 8],"float32"), axis=-3, )
paddle.Tensor.max(Tensor([2, 2, 570425345],"float32"), axis=-1, )
paddle.Tensor.max(Tensor([2, 2, 570425345],"float32"), axis=1, )
paddle.Tensor.max(Tensor([2, 2, 570425345],"int64"), )
paddle.Tensor.max(Tensor([2, 2147483649],"float16"), -1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 22817014, 50],"float32"), 2, )
paddle.Tensor.max(Tensor([2, 3, 47535446, 8],"float32"), axis=-3, )
paddle.Tensor.max(Tensor([2, 3, 715827883],"float16"), -1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 3, 8, 47535446],"float32"), axis=-3, )
paddle.Tensor.max(Tensor([2, 32595734, 35],"int64"), )
paddle.Tensor.max(Tensor([2, 570425345, 2],"float32"), axis=-1, )
paddle.Tensor.max(Tensor([2, 570425345, 2],"float32"), axis=1, )
paddle.Tensor.max(Tensor([20372334, 7, 16],"float32"), )
paddle.Tensor.max(Tensor([21559, 105840],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([220753, 4, 38, 68, 1],"float32"), 1, )
paddle.Tensor.max(Tensor([220753, 4, 38, 68],"int64"), 1, )
paddle.Tensor.max(Tensor([221848, 10285],"float32"), )
paddle.Tensor.max(Tensor([2281701379],"float32"), )
paddle.Tensor.max(Tensor([2281701379],"int64"), )
paddle.Tensor.max(Tensor([246, 300, 30976],"float32"), -1, )
paddle.Tensor.max(Tensor([253522376, 3, 3],"float32"), 1, )
paddle.Tensor.max(Tensor([2910334, 28, 28],"float32"), axis=-3, )
paddle.Tensor.max(Tensor([3, 27163112, 28],"float32"), axis=-3, )
paddle.Tensor.max(Tensor([3, 28, 27163112],"float32"), axis=-3, )
paddle.Tensor.max(Tensor([3, 8, 95070891],"float32"), axis=-3, )
paddle.Tensor.max(Tensor([3, 95070891, 8],"float32"), axis=-3, )
paddle.Tensor.max(Tensor([32595734, 2, 35],"int64"), )
paddle.Tensor.max(Tensor([35651585, 8, 8],"float32"), axis=-3, )
paddle.Tensor.max(Tensor([38029, 1200, 50],"float32"), 2, )
paddle.Tensor.max(Tensor([395032, 4, 38, 38],"float32"), axis=1, )
paddle.Tensor.max(Tensor([4, 2, 285212673],"int64"), )
paddle.Tensor.max(Tensor([4, 25466, 22400],"float32"), axis=1, )
paddle.Tensor.max(Tensor([4, 25466, 22400],"float32"), axis=2, )
paddle.Tensor.max(Tensor([4, 35651585, 16],"float32"), )
paddle.Tensor.max(Tensor([4, 5003732, 114],"int64"), )
paddle.Tensor.max(Tensor([4, 8, 71303169],"float32"), )
paddle.Tensor.max(Tensor([4, 90, 6338060],"float32"), axis=1, )
paddle.Tensor.max(Tensor([4, 90, 6338060],"float32"), axis=2, )
paddle.Tensor.max(Tensor([42137, 1083, 50],"float32"), 2, )
paddle.Tensor.max(Tensor([4226, 10800, 50],"float32"), 2, )
paddle.Tensor.max(Tensor([429496730, 10],"float16"), -1, keepdim=True, )
paddle.Tensor.max(Tensor([4754, 4800, 100],"float32"), 2, )
paddle.Tensor.max(Tensor([5, 858993460],"float16"), -1, keepdim=True, )
paddle.Tensor.max(Tensor([55189, 4, 76, 136, 1],"float32"), 1, )
paddle.Tensor.max(Tensor([55189, 4, 76, 136],"int64"), 1, )
paddle.Tensor.max(Tensor([56123, 1, 40656],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([56123, 10164, 4],"float32"), -1, )
paddle.Tensor.max(Tensor([570425345, 2, 2],"float32"), axis=-1, )
paddle.Tensor.max(Tensor([570425345, 2, 2],"float32"), axis=1, )
paddle.Tensor.max(Tensor([61595, 1, 37044],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([67908, 1, 33600],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([67908, 33600],"float32"), )
paddle.Tensor.max(Tensor([7042289, 4, 9, 9],"float32"), axis=1, )
paddle.Tensor.max(Tensor([715827883, 3, 2],"float16"), -1, keepdim=True, )
paddle.Tensor.max(Tensor([75245, 1, 30324],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([75245, 30324],"float32"), )
paddle.Tensor.max(Tensor([760567127, 3],"float32"), -1, keepdim=True, )
paddle.Tensor.max(Tensor([760567127, 3],"float32"), 1, )
paddle.Tensor.max(Tensor([76057, 300, 100],"float32"), 2, )
paddle.Tensor.max(Tensor([8, 285212673],"float32"), -1, keepdim=True, )
paddle.Tensor.max(Tensor([83837, 1, 27216],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([83837, 27216],"float32"), )
paddle.Tensor.max(Tensor([883012, 4, 19, 34, 1],"float32"), 1, )
paddle.Tensor.max(Tensor([883012, 4, 19, 34],"int64"), 1, )
paddle.Tensor.max(Tensor([9, 253522376],"float32"), axis=-1, )
paddle.Tensor.max(Tensor([93991, 1, 24276],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([93991, 24276],"float32"), )
paddle.Tensor.max(Tensor([94317, 12096, 2],"float32"), -1, )
paddle.Tensor.mean(Tensor([1, 1, 1, 12, 1, 190141782],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 1, 12, 2970966, 64],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 1, 35651585, 1, 64],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 2281701379],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 2281701379],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 1, 2281701379],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 1, 2970966, 12, 1, 64],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 45634028, 50],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 50, 45634028],"float32"), )
paddle.Tensor.mean(Tensor([1, 10, 228170138],"float32"), )
paddle.Tensor.mean(Tensor([1, 10, 228170138],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 100, 22817014],"float32"), )
paddle.Tensor.mean(Tensor([1, 100, 22817014],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 100, 42949673],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 1024, 2228225],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 10563433, 12, 18],"float32"), )
paddle.Tensor.mean(Tensor([1, 1073741825, 4],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 107374183, 40],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 11, 207427399],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 11, 207427399],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 110036, 144, 144],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 1140850690, 2],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 11883862, 192],"float32"), )
paddle.Tensor.mean(Tensor([1, 12, 13581556, 14],"float32"), )
paddle.Tensor.mean(Tensor([1, 12, 8, 23767723],"float32"), )
paddle.Tensor.mean(Tensor([1, 123362, 136, 136],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 13125, 173844],"float32"), )
paddle.Tensor.mean(Tensor([1, 139265, 128, 128],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 14260634, 10, 16],"float32"), )
paddle.Tensor.mean(Tensor([1, 15, 2376773, 64],"float32"), )
paddle.Tensor.mean(Tensor([1, 15, 64, 2376773],"float32"), )
paddle.Tensor.mean(Tensor([1, 15018, 151936],"float32"), -1, )
paddle.Tensor.mean(Tensor([1, 17, 252645136],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 17825793, 128],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 11883862],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 192, 128, 92843],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 136, 87382],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 144, 82527],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 152, 78184],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 160, 74275],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 168, 70738],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 176, 67522],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 67522, 176],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 70738, 168],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 74275, 160],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 78184, 152],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 82527, 144],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 87382, 136],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 92843, 128],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 196, 11641334],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 2, 190141782, 6],"float32"), )
paddle.Tensor.mean(Tensor([1, 2, 2, 2, 285212673],"float32"), )
paddle.Tensor.mean(Tensor([1, 2, 2, 285212673, 2],"float32"), )
paddle.Tensor.mean(Tensor([1, 2, 2, 570425345],"float32"), )
paddle.Tensor.mean(Tensor([1, 2, 285212673, 2, 2],"float32"), )
paddle.Tensor.mean(Tensor([1, 2, 570425345, 2],"float32"), )
paddle.Tensor.mean(Tensor([1, 2, 6, 190141782],"float32"), )
paddle.Tensor.mean(Tensor([1, 200, 11408507],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 20372334, 8, 14],"float32"), )
paddle.Tensor.mean(Tensor([1, 207427399, 11],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 2281701379, 1],"float32"), )
paddle.Tensor.mean(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.mean(Tensor([1, 2281701379],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 2281701379],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 252645136, 17],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 256, 10, 891290],"float32"), )
paddle.Tensor.mean(Tensor([1, 256, 12, 742742],"float32"), )
paddle.Tensor.mean(Tensor([1, 256, 495161, 18],"float32"), )
paddle.Tensor.mean(Tensor([1, 256, 557057, 16],"float32"), )
paddle.Tensor.mean(Tensor([1, 285212673, 2, 2, 2],"float32"), )
paddle.Tensor.mean(Tensor([1, 2970966, 1, 12, 1, 64],"float32"), )
paddle.Tensor.mean(Tensor([1, 2970966, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 300, 7605672],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 300, 7605672],"float32"), tuple(0,1,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 35651585, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 4, 1073741825],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 40, 107374183],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 42253730, 54],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 42949673, 100],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 4456449, 512],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 50704476, 45],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 557057, 4096],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 557057, 4096],"float32"), tuple(0,1,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 557057, 64, 64],"float32"), )
paddle.Tensor.mean(Tensor([1, 570425345, 2, 2],"float32"), )
paddle.Tensor.mean(Tensor([1, 570425345, 4],"float32"), )
paddle.Tensor.mean(Tensor([1, 570425345, 4],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 63380594, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 63380594, 6, 6],"float32"), )
paddle.Tensor.mean(Tensor([1, 71303169, 32],"float32"), )
paddle.Tensor.mean(Tensor([1, 71303169, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 71303169, 32],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 73661, 176, 176],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 8, 285212673],"float32"), -1, )
paddle.Tensor.mean(Tensor([1, 80843, 168, 168],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 8912897, 256],"float32"), )
paddle.Tensor.mean(Tensor([1, 89129, 160, 160],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 912681, 50, 50],"float32"), )
paddle.Tensor.mean(Tensor([1, 98758, 152, 152],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([10, 228170138],"float32"), )
paddle.Tensor.mean(Tensor([10, 228170138],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([100, 22817014],"float32"), )
paddle.Tensor.mean(Tensor([100, 22817014],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([100, 22817014],"float32"), 1, )
paddle.Tensor.mean(Tensor([100, 42949673],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1000, 2281702],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([10000, 143166, 3],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([10000, 2, 114086],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([10000, 2, 214749],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([10000, 76057, 3],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([100000, 42950],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([1000000, 4295],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([101, 22591103],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([102, 22369622],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([103, 22152441],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1037137, 200, 11],"float32"), 1, )
paddle.Tensor.mean(Tensor([104, 21939437],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1058304, 196, 11],"float32"), 1, )
paddle.Tensor.mean(Tensor([1073741825, 4],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1073741825, 4],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([107374183, 40],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([10737419, 100, 4],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([10737419, 4, 100],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1073742, 100, 40],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1073742, 40, 100],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1080352, 192, 11],"float32"), 1, )
paddle.Tensor.mean(Tensor([11, 207427399],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([11369, 256, 28, 28],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.mean(Tensor([1140850690, 2],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([11408507, 100, 2],"float32"), 1, )
paddle.Tensor.mean(Tensor([11883862, 1, 192],"float32"), )
paddle.Tensor.mean(Tensor([124, 1024, 12, 1498],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 1024, 1498, 12],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 1024, 2568, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 1024, 7, 2568],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 127784, 12, 12],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 128, 1498, 96],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 128, 2568, 56],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 128, 56, 2568],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 128, 96, 1498],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 1536, 1712, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 1536, 7, 1712],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 192, 1712, 56],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 192, 28, 3423],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 192, 3423, 28],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 192, 56, 1712],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 1997, 96, 96],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 23471, 28, 28],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 256, 1498, 48],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 256, 2568, 28],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 256, 28, 2568],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 256, 48, 1498],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 375527, 7, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 384, 14, 3423],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 384, 3423, 14],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 5868, 56, 56],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 768, 3423, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 768, 7, 3423],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 7987, 48, 48],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 93882, 14, 14],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([1273271, 256, 7],"float32"), -1, )
paddle.Tensor.mean(Tensor([128, 1024, 12, 1451],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([128, 1024, 1451, 12],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([128, 1024, 2487, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([128, 1024, 7, 2487],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([128, 123791, 12, 12],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([128, 1536, 1658, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([128, 1536, 7, 1658],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([128, 17825793],"float32"), axis=-1, )
paddle.Tensor.mean(Tensor([128, 34817, 512],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([128, 363792, 7, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([128, 49, 363792],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([13, 1096972, 160],"float32"), axis=tuple(1,2,), )
paddle.Tensor.mean(Tensor([13, 160, 1096972],"float32"), axis=tuple(1,2,), )
paddle.Tensor.mean(Tensor([13, 2742430, 2, 4, 8],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([13, 4, 1371215, 4, 8],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([13, 4, 2, 2742430, 8],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([13, 4, 2, 4, 5484860],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([13, 49, 3581949],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([13, 5484860, 32],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([13, 7313146, 24],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([142606337, 2, 2, 2, 2],"float32"), )
paddle.Tensor.mean(Tensor([1431655766, 3],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([144, 20632, 768],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([144, 49, 323371],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([1444, 1580126],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([1455167, 49, 32],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([149131, 2, 3, 10, 10, 12, 4],"float16"), )
paddle.Tensor.mean(Tensor([15158, 192, 28, 28],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([15474, 1024, 12, 12],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([162978670, 14],"float32"), 1, )
paddle.Tensor.mean(Tensor([1697695, 12, 8, 14],"float32"), )
paddle.Tensor.mean(Tensor([17, 252645136],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([173844, 13125, 1],"float32"), )
paddle.Tensor.mean(Tensor([17409, 1024, 128],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([17825793, 128],"float32"), )
paddle.Tensor.mean(Tensor([1782580, 1280],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([178956971, 3, 2, 1, 4],"float16"), )
paddle.Tensor.mean(Tensor([17895698, 2, 3, 4, 10],"float16"), )
paddle.Tensor.mean(Tensor([18, 126761188],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([181896, 12544],"float32"), 1, )
paddle.Tensor.mean(Tensor([181896, 256, 7, 7],"float32"), -1, )
paddle.Tensor.mean(Tensor([185686, 192, 8, 8],"float32"), -1, )
paddle.Tensor.mean(Tensor([185686, 192, 8, 8],"float32"), -2, )
paddle.Tensor.mean(Tensor([1857, 300, 4096],"float32"), tuple(0,1,), keepdim=True, )
paddle.Tensor.mean(Tensor([1878, 8, 151936],"float32"), -1, )
paddle.Tensor.mean(Tensor([1935, 128, 96, 96],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([1940223, 49, 24],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([2, 1, 512, 4, 557057],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([2, 1, 512, 557057, 4],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([2, 1, 71303169, 4, 4],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([2, 1140850690],"float32"), 1, )
paddle.Tensor.mean(Tensor([2, 139265, 512, 4, 4],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([2, 2, 570425345],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([2, 3, 100, 7158279],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 3, 17, 42107523],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 3, 178956971, 4],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 3, 17895698, 40],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 3, 4, 178956971],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 3, 40, 17895698],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 3, 42107523, 17],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 3, 7158279, 100],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 31580642, 17, 4],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 31580642, 4, 17],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 536871, 100, 40],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 536871, 40, 100],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 5368710, 100, 4],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 5368710, 4, 100],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 570425345, 2],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([200, 11408507],"float32"), 1, )
paddle.Tensor.mean(Tensor([200, 11408507],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([21, 108652447],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([21053762, 3, 17, 4],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([21053762, 3, 4, 17],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([21474837, 10, 20],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([22, 103713700],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([2228225, 1024],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([2281701379, 1],"float32"), )
paddle.Tensor.mean(Tensor([2281701379],"float32"), )
paddle.Tensor.mean(Tensor([2281701379],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2281701379],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([228170138, 10],"float32"), )
paddle.Tensor.mean(Tensor([22817014, 100],"float32"), )
paddle.Tensor.mean(Tensor([2281702, 1000],"float32"), )
paddle.Tensor.mean(Tensor([2281702, 1000],"float32"), axis=-1, )
paddle.Tensor.mean(Tensor([23211, 4, 3, 64, 128],"float32"), )
paddle.Tensor.mean(Tensor([252645136, 17],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([278529, 1, 512, 4, 4],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([285212673, 2, 2, 2],"float32"), )
paddle.Tensor.mean(Tensor([2852127, 200, 4],"float32"), 1, )
paddle.Tensor.mean(Tensor([2902, 1024, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2910334, 784],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([2970966, 1, 1, 12, 1, 64],"float32"), )
paddle.Tensor.mean(Tensor([2970966, 1, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2970966, 768],"float32"), 0, )
paddle.Tensor.mean(Tensor([3, 100, 14316558],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([3, 11930465, 3, 4, 10],"float16"), )
paddle.Tensor.mean(Tensor([3, 2, 149131, 10, 10, 12, 4],"float16"), )
paddle.Tensor.mean(Tensor([3, 2, 17895698, 4, 10],"float16"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 10, 10, 12, 198842],"float16"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 10, 10, 596524, 4],"float16"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 10, 497103, 12, 4],"float16"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 23860930, 10],"float16"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 4, 59652324],"float16"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 497103, 10, 12, 4],"float16"), )
paddle.Tensor.mean(Tensor([3, 35791395, 40],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([3, 99421, 3, 10, 10, 12, 4],"float16"), )
paddle.Tensor.mean(Tensor([300, 7605672],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([30316, 1536, 7, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([30316, 384, 14, 14],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([30948, 3, 3, 64, 128],"float32"), )
paddle.Tensor.mean(Tensor([31690297, 2, 6, 6],"float32"), )
paddle.Tensor.mean(Tensor([34817, 256, 16, 16],"float32"), -1, )
paddle.Tensor.mean(Tensor([35651585, 1, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([357914, 3, 100, 40],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([357914, 3, 40, 100],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([3579140, 3, 100, 4],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([3579140, 3, 4, 100],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([36, 63380594],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([37138, 15, 64, 64],"float32"), )
paddle.Tensor.mean(Tensor([3790, 192, 56, 56],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([38, 60044774],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([380283564, 2, 3],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([3802836, 300, 2],"float32"), 1, )
paddle.Tensor.mean(Tensor([384, 192, 176, 176],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([3869, 256, 48, 48],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 1073741825],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 128, 16, 278529],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 128, 16, 278529],"float32"), -2, )
paddle.Tensor.mean(Tensor([4, 128, 278529, 16],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 128, 278529, 16],"float32"), -2, )
paddle.Tensor.mean(Tensor([4, 192, 371371, 8],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 192, 371371, 8],"float32"), -2, )
paddle.Tensor.mean(Tensor([4, 192, 8, 371371],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 192, 8, 371371],"float32"), -2, )
paddle.Tensor.mean(Tensor([4, 2228225, 16, 16],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 2228225, 16, 16],"float32"), -2, )
paddle.Tensor.mean(Tensor([4, 256, 139265, 16],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 256, 16, 139265],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 384, 185686, 8],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 384, 8, 185686],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 570425345],"float32"), 1, )
paddle.Tensor.mean(Tensor([4, 8912897, 8, 8],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 8912897, 8, 8],"float32"), -2, )
paddle.Tensor.mean(Tensor([40, 107374183],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([405132, 11, 512],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([41264, 256, 12, 18],"float32"), )
paddle.Tensor.mean(Tensor([422, 192, 168, 168],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([42253730, 1, 54],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4294967297, 1],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([4294967297],"float16"), )
paddle.Tensor.mean(Tensor([4294967297],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([42949673, 100],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([43461, 13125, 4],"float32"), )
paddle.Tensor.mean(Tensor([45474, 1024, 7, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([465, 192, 160, 160],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([5, 107374183, 2, 1, 4],"float16"), )
paddle.Tensor.mean(Tensor([5, 3, 2, 1, 143165577],"float16"), )
paddle.Tensor.mean(Tensor([5, 3, 2, 35791395, 4],"float16"), )
paddle.Tensor.mean(Tensor([5, 3, 71582789, 1, 4],"float16"), )
paddle.Tensor.mean(Tensor([5, 858993460],"float16"), axis=-1, )
paddle.Tensor.mean(Tensor([5000, 10, 85900],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([5000, 42950, 20],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([5000, 456341],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([5000, 858994],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([50000, 2, 42950],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([50000, 28634, 3],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([50704476, 1, 45],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([512, 256, 17409],"float32"), -1, )
paddle.Tensor.mean(Tensor([512, 256, 2487, 7],"float32"), -1, )
paddle.Tensor.mean(Tensor([512, 256, 7, 2487],"float32"), -1, )
paddle.Tensor.mean(Tensor([512, 636636, 7],"float32"), -1, )
paddle.Tensor.mean(Tensor([512, 90948, 7, 7],"float32"), -1, )
paddle.Tensor.mean(Tensor([515, 192, 152, 152],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([545, 1024, 4096],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([55706, 256, 10, 16],"float32"), )
paddle.Tensor.mean(Tensor([5685, 128, 56, 56],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([570425345, 2, 2],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([570425345, 4],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([570425345, 4],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([5704254, 100, 4],"float32"), )
paddle.Tensor.mean(Tensor([574, 192, 144, 144],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([5761873, 11, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([60632, 49, 768],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([60632, 768, 7, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([63161284, 17, 4],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([63161284, 4, 17],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([63380594, 1, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([6338060, 10, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([6380, 357634],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 1451, 3, 64, 128],"float32"), )
paddle.Tensor.mean(Tensor([64, 3, 1451, 64, 128],"float32"), )
paddle.Tensor.mean(Tensor([64, 3, 3, 30948, 128],"float32"), )
paddle.Tensor.mean(Tensor([64, 3, 3, 64, 61896],"float32"), )
paddle.Tensor.mean(Tensor([64, 4, 1089, 64, 128],"float32"), )
paddle.Tensor.mean(Tensor([64, 4, 3, 23211, 128],"float32"), )
paddle.Tensor.mean(Tensor([64, 4, 3, 64, 46422],"float32"), )
paddle.Tensor.mean(Tensor([643, 192, 136, 136],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([691425, 300, 11],"float32"), 1, )
paddle.Tensor.mean(Tensor([69633, 128, 16, 16],"float32"), -1, )
paddle.Tensor.mean(Tensor([69633, 128, 16, 16],"float32"), -2, )
paddle.Tensor.mean(Tensor([71303169, 1, 32],"float32"), )
paddle.Tensor.mean(Tensor([71303169, 1, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([71303169, 1, 32],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([7130317, 10, 32],"float32"), )
paddle.Tensor.mean(Tensor([7130317, 10, 32],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([715827883, 2, 3],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([726, 192, 128, 128],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([760567127, 3],"float32"), )
paddle.Tensor.mean(Tensor([80, 28521268],"float32"), 0, )
paddle.Tensor.mean(Tensor([80, 28521268],"float32"), axis=-1, )
paddle.Tensor.mean(Tensor([858993460, 5],"float16"), axis=-1, )
paddle.Tensor.mean(Tensor([8912897, 4, 2, 4, 8],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([89129, 100, 256],"float32"), )
paddle.Tensor.mean(Tensor([89129, 160, 160],"float32"), axis=tuple(1,2,), )
paddle.Tensor.mean(Tensor([891290, 2560],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([9, 253522376],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([90948, 49, 512],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([912681, 1, 50, 50],"float32"), )
paddle.Tensor.mean(Tensor([92843, 384, 8, 8],"float32"), -1, )
paddle.Tensor.mean(Tensor([990322, 2304],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 1, 10285, 221848],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 2281701379],"float32"), )
paddle.Tensor.min(Tensor([1, 1, 24276, 93991],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 27216, 83837],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 30324, 75245],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 33600, 67908],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 3598, 634159],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 36858, 61906],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 37044, 61595],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 38402, 59417],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 40656, 56123],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 4165, 547828],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 44436, 51349],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 48384, 47159],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 52500, 43461],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 570425345, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 10866, 52500, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1140850690, 2],"float32"), axis=-2, )
paddle.Tensor.min(Tensor([1, 11790, 48384, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 11883862, 192],"float32"), )
paddle.Tensor.min(Tensor([1, 12838, 44436, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 136957, 4165, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 14031, 40656, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 14855, 38402, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 15399, 37044, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 15477, 36858, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 158540, 3598, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 16977, 33600, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 18812, 30324, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 20960, 27216, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 23498, 24276, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 257, 8878216],"float32"), )
paddle.Tensor.min(Tensor([1, 300, 7605672],"float32"), -1, )
paddle.Tensor.min(Tensor([1, 4, 570425345],"float32"), axis=-2, )
paddle.Tensor.min(Tensor([1, 55462, 10285, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 61896, 36864],"float32"), -1, )
paddle.Tensor.min(Tensor([1, 67395, 33856],"float32"), -1, )
paddle.Tensor.min(Tensor([1, 73661, 30976],"float32"), -1, )
paddle.Tensor.min(Tensor([10105, 112900, 2],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 12545, 18],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 15054, 15],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 16129, 14],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 17370, 13],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 18817, 12],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 20528, 11],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 22580, 10],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 225800, 1],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 32258, 7],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 37634, 6],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 4, 56450],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 45160, 5],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 56450, 4],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 75267, 3],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10866, 1, 52500, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([114085069, 4, 5],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1140850690, 2],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([11790, 1, 48384, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([11883862, 1, 192],"float32"), )
paddle.Tensor.min(Tensor([11883862, 192],"float32"), )
paddle.Tensor.min(Tensor([11883862, 3, 8, 8],"float32"), axis=-3, )
paddle.Tensor.min(Tensor([12838, 1, 44436, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([136957, 1, 4165, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([14031, 1, 40656, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([142606337, 4, 4],"float32"), axis=1, )
paddle.Tensor.min(Tensor([14855, 1, 38402, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([15399, 1, 37044, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([15477, 1, 36858, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([158540, 1, 3598, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([16977, 1, 33600, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([18812, 1, 30324, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([190141782, 4, 3],"float32"), axis=1, )
paddle.Tensor.min(Tensor([192, 11883862],"float32"), )
paddle.Tensor.min(Tensor([192, 3, 14, 282950],"float32"), )
paddle.Tensor.min(Tensor([192, 3, 282950, 14],"float32"), )
paddle.Tensor.min(Tensor([192, 60632, 14, 14],"float32"), )
paddle.Tensor.min(Tensor([2, 17825793, 8, 8],"float32"), axis=-3, )
paddle.Tensor.min(Tensor([2, 3, 47535446, 8],"float32"), axis=-3, )
paddle.Tensor.min(Tensor([2, 3, 8, 47535446],"float32"), axis=-3, )
paddle.Tensor.min(Tensor([2, 300, 3802836],"float32"), -1, )
paddle.Tensor.min(Tensor([2, 61681, 18496],"float32"), -1, )
paddle.Tensor.min(Tensor([207, 300, 36864],"float32"), -1, )
paddle.Tensor.min(Tensor([20960, 1, 27216, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2228225, 1024],"float32"), )
paddle.Tensor.min(Tensor([225, 300, 33856],"float32"), -1, )
paddle.Tensor.min(Tensor([2281701379],"float32"), )
paddle.Tensor.min(Tensor([2281701379],"int32"), )
paddle.Tensor.min(Tensor([2281701379],"int64"), )
paddle.Tensor.min(Tensor([23498, 1, 24276, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([246, 300, 30976],"float32"), -1, )
paddle.Tensor.min(Tensor([285212673, 4, 2],"float32"), axis=-2, )
paddle.Tensor.min(Tensor([285212673, 4, 2],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2910334, 28, 28],"float32"), axis=-3, )
paddle.Tensor.min(Tensor([3, 27163112, 28],"float32"), axis=-3, )
paddle.Tensor.min(Tensor([3, 28, 27163112],"float32"), axis=-3, )
paddle.Tensor.min(Tensor([3, 8, 95070891],"float32"), axis=-3, )
paddle.Tensor.min(Tensor([3, 95070891, 8],"float32"), axis=-3, )
paddle.Tensor.min(Tensor([31690297, 4, 18],"float32"), axis=1, )
paddle.Tensor.min(Tensor([35651585, 8, 8],"float32"), axis=-3, )
paddle.Tensor.min(Tensor([38028357, 4, 15],"float32"), axis=1, )
paddle.Tensor.min(Tensor([3880445, 3, 14, 14],"float32"), )
paddle.Tensor.min(Tensor([40744668, 4, 14],"float32"), axis=1, )
paddle.Tensor.min(Tensor([412, 300, 18496],"float32"), -1, )
paddle.Tensor.min(Tensor([4294967297],"float16"), )
paddle.Tensor.min(Tensor([43878873, 4, 13],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4456449, 512],"float32"), )
paddle.Tensor.min(Tensor([46241, 257, 192],"float32"), )
paddle.Tensor.min(Tensor([47535446, 4, 12],"float32"), axis=1, )
paddle.Tensor.min(Tensor([512, 4456449],"float32"), )
paddle.Tensor.min(Tensor([51856850, 4, 11],"float32"), axis=1, )
paddle.Tensor.min(Tensor([55462, 1, 10285, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([570425345, 4, 1],"float32"), axis=1, )
paddle.Tensor.min(Tensor([57042535, 4, 10],"float32"), axis=1, )
paddle.Tensor.min(Tensor([81489335, 4, 7],"float32"), axis=1, )
paddle.Tensor.min(Tensor([9, 253522376],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([95070891, 4, 6],"float32"), axis=1, )
paddle.Tensor.mm(Tensor([10, 10],"float32"), Tensor([10, 228170138],"float32"), )
paddle.Tensor.mm(Tensor([228170138, 10],"float32"), Tensor([10, 10],"float32"), )
paddle.Tensor.mode(Tensor([3, 2, 715827883],"float16"), )
paddle.Tensor.mode(Tensor([3, 2, 715827883],"float16"), axis=2, keepdim=True, )
paddle.Tensor.mode(Tensor([3, 477218589, 3],"float16"), axis=1, keepdim=False, )
paddle.Tensor.moveaxis(Tensor([2, 3, 715827883],"float16"), -2, -1, )
paddle.Tensor.moveaxis(Tensor([2, 429496730, 5],"float16"), -2, -1, )
paddle.Tensor.moveaxis(Tensor([286331154, 3, 5],"float16"), -2, -1, )
paddle.Tensor.moveaxis(x=Tensor([1140850690, 2],"float32"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([1140850690, 2],"int32"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([1140850690, 2],"int64"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([143165577, 2, 3, 5],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([20452226, 2, 3, 5, 7],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([20452226, 2, 3, 5, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.moveaxis(x=Tensor([2147483649, 2],"float16"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([4, 10226113, 3, 5, 7],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 10226113, 3, 5, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.moveaxis(x=Tensor([4, 1073741825],"float16"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 107374183, 5],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 15339169, 5, 7],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 15339169, 5, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 178956971],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 25565282, 7],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 25565282, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 5, 35791395],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 5, 35791395],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 536870913],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 357913942, 3],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 570425345],"float32"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([4, 570425345],"int32"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([4, 570425345],"int64"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([4, 71582789, 3, 5],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([715827883, 2, 3],"float16"), source=0, destination=2, )
paddle.Tensor.multiply(Tensor([16, 142606337],"float32"), Tensor([16, 142606337],"float32"), )
paddle.Tensor.multiply(Tensor([16, 142606337],"float32"), Tensor([16, 1],"float32"), )
paddle.Tensor.multiply(Tensor([160, 14260634],"float32"), Tensor([160, 14260634],"float32"), )
paddle.Tensor.multiply(Tensor([160, 14260634],"float32"), Tensor([160, 1],"float32"), )
paddle.Tensor.multiply(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.multiply(Tensor([2970966, 768],"float32"), Tensor([2970966, 1],"float32"), )
paddle.Tensor.multiply(Tensor([512, 4456449],"float32"), Tensor([512, 1],"float32"), )
paddle.Tensor.multiply(Tensor([512, 4456449],"float32"), Tensor([512, 4456449],"float32"), )
paddle.Tensor.multiply(Tensor([742742, 3072],"float32"), Tensor([742742, 1],"float32"), )
paddle.Tensor.nansum(Tensor([253522376, 3, 3],"float32"), )
paddle.Tensor.nansum(Tensor([3, 253522376, 3],"float32"), )
paddle.Tensor.nansum(Tensor([3, 3, 253522376],"float32"), )
paddle.Tensor.neg(Tensor([2281701379],"float32"), )
paddle.Tensor.nonzero(Tensor([1140850690, 2],"bool"), )
paddle.Tensor.nonzero(Tensor([162978670, 14],"bool"), )
paddle.Tensor.nonzero(Tensor([175515491, 13],"bool"), )
paddle.Tensor.nonzero(Tensor([190141782, 12],"bool"), )
paddle.Tensor.nonzero(Tensor([207427399, 11],"bool"), )
paddle.Tensor.nonzero(Tensor([2281701379, 1],"bool"), )
paddle.Tensor.nonzero(Tensor([2281701379],"bool"), )
paddle.Tensor.nonzero(Tensor([228170138, 10],"bool"), )
paddle.Tensor.nonzero(Tensor([253522376, 9],"bool"), )
paddle.Tensor.nonzero(Tensor([285212673, 8],"bool"), )
paddle.Tensor.nonzero(Tensor([325957340, 7],"bool"), )
paddle.Tensor.nonzero(Tensor([380283564, 6],"bool"), )
paddle.Tensor.nonzero(Tensor([456340276, 5],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 43346],"bool"), )
paddle.Tensor.nonzero(Tensor([570425345, 4],"bool"), )
paddle.Tensor.nonzero(Tensor([760567127, 3],"bool"), )
paddle.Tensor.norm(Tensor([1, 10285, 221848],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 1140850690, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 1140850690, 2],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([1, 2, 1140850690],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([1, 3598, 634159],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 36858, 61906],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 38402, 59417],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 4165, 547828],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 5440, 419431],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 6150, 371009],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 6400, 356516],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 6885, 331402],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 8500, 268436],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 8580, 265933],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 10285, 22185],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 114085069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 3598, 63416],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 4789, 47645],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 5440, 41944],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 6885, 33141],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 7681, 29706],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 8500, 26844],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 9382, 24320],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([100, 11408507, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([100, 6069, 3760],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([100, 9261, 2464],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1024, 1114113, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1024, 2125, 1049],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1024, 2577, 865],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([102697, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([103713700, 22],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([104, 10164, 2159],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 10969719, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 11109, 1975],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 12096, 1814],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 2100, 10448],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 2541, 8635],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 3024, 7256],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 3549, 6182],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 4116, 5331],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 4725, 4644],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 5376, 4081],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 6069, 3616],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 6804, 3225],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 7581, 2895],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 8400, 2612],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 9261, 2370],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([108, 10563433, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([108, 9261, 2282],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1088, 1048577, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1088, 1360, 1543],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1088, 1726, 1216],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1088, 2125, 987],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1088, 2577, 814],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1088, 3060, 686],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1088, 9261, 227],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([11, 103713700, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([11, 4789, 43314],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([11022712, 207],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([110924, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 10164, 2005],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 10186167, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 11109, 1834],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 12096, 1685],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 2100, 9702],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 2541, 8018],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 3024, 6737],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 3549, 5741],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 4116, 4950],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 4725, 4312],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 5376, 3790],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 6069, 3357],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 6804, 2995],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 7581, 2688],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 8400, 2426],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112245, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([114085069, 20],"float32"), p=2, axis=0, keepdim=True, )
paddle.Tensor.norm(Tensor([1140850690, 2],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([1140850690, 2],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([12, 190141782],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([12, 190141782],"float32"), p=2, axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([121600, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([123189, 9261, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([128, 17825793],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([132967, 8580, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([134218, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([135816, 8400, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([148529, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([150489, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([165701, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([167674, 6804, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([17551550, 130],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([178258, 6400, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([185505, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([187981, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([2, 1140850690],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([2, 1140850690],"float32"), p=2, axis=0, keepdim=True, )
paddle.Tensor.norm(Tensor([2, 2, 570425345],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([2, 570425345, 2],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([20, 114085069],"float32"), p=2, axis=0, keepdim=True, )
paddle.Tensor.norm(Tensor([209716, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([212212, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([22369622, 102],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([2281701379, 1],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([2281701379],"float32"), )
paddle.Tensor.norm(Tensor([22817014, 100],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([238224, 4789, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([241450, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([253522376, 9],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([256, 8912897],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([273914, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([277175, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([29709, 38402, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([3, 760567127],"float32"), p=2, axis=0, keepdim=True, )
paddle.Tensor.norm(Tensor([30953, 36858, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([317080, 3598, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([321457, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([325957340, 7],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([35651585, 64],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([35651585, 64],"float32"), p=2, axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([36217483, 63],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([372828, 3060, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([377266, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4371076, 522],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([442705, 2577, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4456449, 512],"float32"), p=2, axis=0, keepdim=True, )
paddle.Tensor.norm(Tensor([448978, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4844377, 471],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([512, 4456449],"float32"), p=2, axis=0, keepdim=True, )
paddle.Tensor.norm(Tensor([512, 4456449],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([536871, 2125, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([543263, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([570425345, 2, 2],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([6303043, 362],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([660980, 1726, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([67108865, 34],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([760567127, 3],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([838861, 1360, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8843804, 258],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([94317, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.not_equal(Tensor([12, 190141782],"int32"), Tensor([1],"int32"), )
paddle.Tensor.not_equal(Tensor([12, 190141782],"int64"), Tensor([1],"int64"), )
paddle.Tensor.not_equal(Tensor([128, 17825793],"int64"), Tensor([128, 17825793],"int64"), )
paddle.Tensor.not_equal(Tensor([13, 175515491],"bool"), Tensor([1],"bool"), )
paddle.Tensor.not_equal(Tensor([13, 175515491],"int64"), Tensor([1],"int64"), )
paddle.Tensor.not_equal(Tensor([162978670, 14],"bool"), Tensor([1],"bool"), )
paddle.Tensor.not_equal(Tensor([162978670, 14],"int64"), Tensor([1],"int64"), )
paddle.Tensor.not_equal(Tensor([17825793, 128],"int64"), Tensor([17825793, 128],"int64"), )
paddle.Tensor.not_equal(Tensor([228170138, 10],"int64"), Tensor([1],"int64"), )
paddle.Tensor.not_equal(Tensor([325957340, 7],"int32"), Tensor([1],"int32"), )
paddle.Tensor.not_equal(Tensor([325957340, 7],"int64"), Tensor([1],"int64"), )
paddle.Tensor.not_equal(Tensor([760567127, 3],"int64"), Tensor([1],"int64"), )
paddle.Tensor.pow(Tensor([1, 1, 2281701379],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([1, 1, 2281701379],"float32"), 2, )
paddle.Tensor.pow(Tensor([1, 1, 2281701379],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([1, 100, 22817014],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 1024, 2228225],"float32"), 2, )
paddle.Tensor.pow(Tensor([1, 1140850690, 2],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 17825793, 128],"float32"), 2, )
paddle.Tensor.pow(Tensor([1, 192, 11883862],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 196, 11641334],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 200, 11408507],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 207427399, 11],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 2281701379],"float32"), 2, )
paddle.Tensor.pow(Tensor([1, 2970966, 768],"float32"), 2, )
paddle.Tensor.pow(Tensor([1, 35651585, 64],"float32"), 2, )
paddle.Tensor.pow(Tensor([1, 67908, 33600],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([1, 67908, 33600],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([1, 71303169, 32],"float32"), 2, )
paddle.Tensor.pow(Tensor([1, 75245, 30324],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([1, 75245, 30324],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([1, 83837, 27216],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([1, 83837, 27216],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([1, 93991, 24276],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([1, 93991, 24276],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([10, 228170138],"float32"), -2, )
paddle.Tensor.pow(Tensor([10, 228170138],"float32"), 2, )
paddle.Tensor.pow(Tensor([100, 22817014],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([100, 22817014],"float32"), y=-1, )
paddle.Tensor.pow(Tensor([1000, 2281702],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1037137, 200, 11],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1058304, 196, 11],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1080352, 192, 11],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1140850690, 2],"float32"), 2, )
paddle.Tensor.pow(Tensor([11408507, 100, 2],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([124, 128, 1498, 96],"float32"), 2, )
paddle.Tensor.pow(Tensor([124, 128, 2568, 56],"float32"), 2, )
paddle.Tensor.pow(Tensor([124, 128, 56, 2568],"float32"), 2, )
paddle.Tensor.pow(Tensor([124, 128, 96, 1498],"float32"), 2, )
paddle.Tensor.pow(Tensor([124, 192, 1712, 56],"float32"), 2, )
paddle.Tensor.pow(Tensor([124, 192, 28, 3423],"float32"), 2, )
paddle.Tensor.pow(Tensor([124, 192, 3423, 28],"float32"), 2, )
paddle.Tensor.pow(Tensor([124, 192, 56, 1712],"float32"), 2, )
paddle.Tensor.pow(Tensor([124, 1997, 96, 96],"float32"), 2, )
paddle.Tensor.pow(Tensor([124, 23471, 28, 28],"float32"), 2, )
paddle.Tensor.pow(Tensor([124, 5868, 56, 56],"float32"), 2, )
paddle.Tensor.pow(Tensor([15158, 192, 28, 28],"float32"), 2, )
paddle.Tensor.pow(Tensor([17409, 1024, 128],"float32"), 2, )
paddle.Tensor.pow(Tensor([190141782, 12],"float32"), -2, )
paddle.Tensor.pow(Tensor([190141782, 12],"float32"), 2, )
paddle.Tensor.pow(Tensor([1935, 128, 96, 96],"float32"), 2, )
paddle.Tensor.pow(Tensor([1],"float16"), Tensor([4294967297],"float16"), )
paddle.Tensor.pow(Tensor([2, 1140850690],"float32"), Tensor([1],"float32"), )
paddle.Tensor.pow(Tensor([2, 2147483649],"float16"), Tensor([2, 1],"float16"), )
paddle.Tensor.pow(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 1],"float16"), )
paddle.Tensor.pow(Tensor([227, 10051548],"float32"), y=-1, )
paddle.Tensor.pow(Tensor([2281701379, 1],"float32"), 2, )
paddle.Tensor.pow(Tensor([2281701379, 1],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2281701379],"float32"), -2, )
paddle.Tensor.pow(Tensor([2281701379],"float32"), 2, )
paddle.Tensor.pow(Tensor([253522376, 9],"float32"), y=-1, )
paddle.Tensor.pow(Tensor([256, 8912897],"float32"), y=-1, )
paddle.Tensor.pow(Tensor([28521268, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2970966, 1, 768],"float32"), 2, )
paddle.Tensor.pow(Tensor([35651585, 1, 64],"float32"), 2, )
paddle.Tensor.pow(Tensor([3790, 192, 56, 56],"float32"), 2, )
paddle.Tensor.pow(Tensor([4294967297],"float16"), 2, )
paddle.Tensor.pow(Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.Tensor.pow(Tensor([5685, 128, 56, 56],"float32"), 2, )
paddle.Tensor.pow(Tensor([60044774, 38],"float32"), y=-1, )
paddle.Tensor.pow(Tensor([67908, 1, 33600],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([67908, 1, 33600],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([71303169, 1, 32],"float32"), 2, )
paddle.Tensor.pow(Tensor([75245, 1, 30324],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([75245, 1, 30324],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([760567127, 3],"float32"), Tensor([1],"float32"), )
paddle.Tensor.pow(Tensor([83837, 1, 27216],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([83837, 1, 27216],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([93991, 1, 24276],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([93991, 1, 24276],"float32"), 6.0, )
paddle.Tensor.prod(Tensor([1, 1, 1, 2281701379],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 10285, 221848],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 1140850690, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 21504, 106106],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 2281701379],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 24276, 93991],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 27216, 83837],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 30324, 75245],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 33600, 67908],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 3598, 634159],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 37044, 61595],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 40656, 56123],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 4165, 547828],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 44436, 51349],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 4789, 476447],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 48384, 47159],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 52500, 43461],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 5440, 419431],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 56784, 40183],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 61236, 37261],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 6150, 371009],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 65856, 34647],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 6885, 331402],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 70644, 32299],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 75600, 30182],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 7681, 297058],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 8400, 271632],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1, 8500, 268436],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1001, 2279422],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1002, 2277148],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1004, 2272611],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 10164, 224489],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 10285, 221848],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1031, 2213096],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1034, 2206675],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1040, 2193944],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1043, 2187634],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1045, 2183447],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1055, 2162751],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 105840, 21559],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1060, 2152549],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1063, 2146474],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1064, 2144457],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1071, 2130441],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1077, 2118572],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1079, 2114645],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1082, 2108782],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1098, 2078053],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1102, 2070510],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 110924, 10285, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 11109, 205393],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1118, 2040878],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1120, 2037234],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1122, 2033602],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1123, 2031792],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1125, 2028180],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1126, 2026378],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1128, 2022785],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 1140850690, 1, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1140850690, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1140850690, 2],"float32"), 2, )
paddle.Tensor.prod(Tensor([1, 1140850690, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 12096, 188633],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 134218, 8500, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 135816, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1360, 1677722],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 148529, 7681, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 15091, 75600, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 16150, 70644, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 165701, 6885, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 1726, 1321960],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 17324, 65856, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 185505, 6150, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 18631, 61236, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 20092, 56784, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 209716, 5440, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 2100, 1086525],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 2125, 1073742],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 21731, 52500, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 22400, 101862],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 23580, 48384, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 238224, 4789, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 2541, 897955],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 25675, 44436, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 2577, 885410],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 273914, 4165, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 28062, 40656, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 3024, 754531],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 3060, 745655],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 30798, 37044, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 317080, 3598, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 33954, 33600, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 3549, 642914],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 3598, 634159],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 36858, 61906],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 37623, 30324, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 38402, 59417],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 4116, 554350],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 4165, 547828],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 41919, 27216, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 46996, 24276, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 4725, 482900],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 4789, 476447],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 53053, 21504, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 5376, 424424],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 5440, 419431],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 6069, 375961],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 6150, 371009],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 8400, 271632],"float32"), 2, )
paddle.Tensor.prod(Tensor([1011393, 1128, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1013189, 1126, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1014090, 1125, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1015896, 1123, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1016801, 1122, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1018617, 1120, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1020439, 1118, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([102697, 11109, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1035255, 1102, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1039027, 1098, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1054391, 1082, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1057323, 1079, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1059286, 1077, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1065221, 1071, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1072229, 1064, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1073237, 1063, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1076275, 1060, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([10780, 105840, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1081376, 1055, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1091724, 1045, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1093817, 1043, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1096972, 1040, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1103338, 1034, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1106548, 1031, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([110924, 1, 10285, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([110924, 10285, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([112245, 10164, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1136306, 1004, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1138574, 1002, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1139711, 1001, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1140850690, 1, 1, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1140850690, 1, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1140850690, 2],"int64"), 1, )
paddle.Tensor.prod(Tensor([1140850690, 2],"int64"), axis=1, )
paddle.Tensor.prod(Tensor([134218, 1, 8500, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([135816, 1, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([135816, 8400, 2],"float32"), 2, )
paddle.Tensor.prod(Tensor([148529, 1, 7681, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([15091, 1, 75600, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([16150, 1, 70644, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([165701, 1, 6885, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([17324, 1, 65856, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([185505, 1, 6150, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([185505, 6150, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([18631, 1, 61236, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([187981, 6069, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 1140850690],"int64"), axis=1, )
paddle.Tensor.prod(Tensor([20092, 1, 56784, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([209716, 1, 5440, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([209716, 5440, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([212212, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([21731, 1, 52500, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2281701379],"int64"), )
paddle.Tensor.prod(Tensor([23580, 1, 48384, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([238224, 1, 4789, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([238224, 4789, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([241450, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([25675, 1, 44436, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([273914, 1, 4165, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([273914, 4165, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([277175, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([28062, 1, 40656, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([29709, 38402, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([30798, 1, 37044, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([30953, 36858, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([317080, 1, 3598, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([317080, 3598, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([321457, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([33954, 1, 33600, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([372828, 3060, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([37623, 1, 30324, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([377266, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 570425345],"int64"), 1, )
paddle.Tensor.prod(Tensor([41919, 1, 27216, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([442705, 2577, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([448978, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([46996, 1, 24276, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([5, 456340276],"int64"), 1, )
paddle.Tensor.prod(Tensor([50931, 22400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([53053, 1, 21504, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([536871, 2125, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([543263, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([660980, 1726, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([760567127, 3],"int64"), axis=1, )
paddle.Tensor.prod(Tensor([838861, 1360, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([94317, 12096, 2],"float32"), -1, )
paddle.Tensor.put_along_axis(Tensor([2, 1140850690],"float32"), Tensor([2, 4],"int64"), Tensor([2, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([2, 60],"float32"), Tensor([2, 1140850690],"int64"), Tensor([2, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([2, 60],"float32"), Tensor([2, 4],"int64"), Tensor([2, 1140850690],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([2, 60],"float32"), Tensor([2, 4],"int64"), Tensor([570425345, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([2, 60],"float32"), Tensor([570425345, 4],"int64"), Tensor([2, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([38028357, 60],"float32"), Tensor([38028357, 4],"int64"), Tensor([38028357, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([6, 380283564],"float32"), Tensor([6, 4],"int64"), Tensor([6, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([6, 60],"float32"), Tensor([570425345, 4],"int64"), Tensor([6, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([6, 60],"float32"), Tensor([6, 380283564],"int64"), Tensor([6, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([6, 60],"float32"), Tensor([6, 4],"int64"), Tensor([570425345, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([6, 60],"float32"), Tensor([6, 4],"int64"), Tensor([6, 380283564],"float32"), axis=1, )
paddle.Tensor.rad2deg(x=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([2281701379],"float32"), )
paddle.Tensor.rad2deg(x=Tensor([2281701379],"int32"), )
paddle.Tensor.rad2deg(x=Tensor([2281701379],"int64"), )
paddle.Tensor.rad2deg(x=Tensor([268435457, 4, 4],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([4, 1073741825],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([4, 268435457, 4],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([4, 4, 268435457],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([4, 4, 4, 67108865],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([4, 4, 67108865, 4],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([4294967297],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([67108865, 4, 4, 4],"float16"), )
paddle.Tensor.reciprocal(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.reciprocal(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.reciprocal(Tensor([10, 228170138],"float32"), )
paddle.Tensor.reciprocal(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.reciprocal(Tensor([114085069, 20],"float32"), )
paddle.Tensor.reciprocal(Tensor([190141782, 12],"float32"), )
paddle.Tensor.reciprocal(Tensor([2281701379],"float32"), )
paddle.Tensor.remainder(Tensor([190141782, 3, 4],"float32"), Tensor([190141782, 3, 4],"float32"), )
paddle.Tensor.remainder(Tensor([2, 285212673, 4],"float32"), Tensor([2, 285212673, 4],"float32"), )
paddle.Tensor.remainder(Tensor([2, 3, 380283564],"float32"), Tensor([2, 3, 380283564],"float32"), )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 1, 1140850690],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 380283564, 3],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 3, 380283564],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 35651585, 32],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 380283564, 1, 3],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 71303169, 16],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([23767723, 3, 32],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([47535446, 3, 16],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([760567127, 1, 1, 3],"float32"), 1, axis=0, )
paddle.Tensor.reshape(Tensor([1, 10, 20742740, 11],"float32"), list[1,-1,11,], )
paddle.Tensor.reshape(Tensor([1, 1024, 2228225],"float32"), list[1,-1,2,1,32,], )
paddle.Tensor.reshape(Tensor([1, 160, 891290, 16],"float32"), list[1,160,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 7134, 7, 2, 7, 384],"float16"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 3, 47159, 3, 7, 768],"float32"), list[-1,21,21,768,], )
paddle.Tensor.reshape(Tensor([1, 56, 42, 970112],"float32"), list[-1,8,7,6,7,1,], )
paddle.Tensor.reshape(Tensor([10, 429496730],"float16"), list[-1,4,], )
paddle.Tensor.reshape(Tensor([10, 5, 45634028, 1],"float32"), list[-1,25,], )
paddle.Tensor.reshape(Tensor([1024, 7, 7, 45474],"float32"), list[-1,49,192,], )
paddle.Tensor.reshape(Tensor([11184811, 24, 4, 4],"float16"), tuple(-1,24,16,), )
paddle.Tensor.reshape(Tensor([12, 190141782],"float32"), list[2,6,-1,], )
paddle.Tensor.reshape(Tensor([12, 5941931, 4, 8],"float32"), shape=list[12,-1,32,], )
paddle.Tensor.reshape(Tensor([1262, 785, 2304],"float32"), tuple(-1,785,3,12,64,), )
paddle.Tensor.reshape(Tensor([145, 4, 115705, 64],"float16"), list[145,-1,2,32,2,], )
paddle.Tensor.reshape(Tensor([160, 5707, 7, 7, 96],"float16"), list[1,2,8,10,8,7,7,-1,], )
paddle.Tensor.reshape(Tensor([160, 8, 7, 7, 68479],"float16"), list[1,2,8,10,8,7,7,-1,], )
paddle.Tensor.reshape(Tensor([19173962, 7, 16, 2],"float16"), list[0,0,32,], )
paddle.Tensor.reshape(Tensor([1935, 8, 12, 8, 12, 128],"float32"), list[-1,96,96,128,], )
paddle.Tensor.reshape(Tensor([2, 1024, 1114113],"float32"), list[2,-1,2,8,64,], )
paddle.Tensor.reshape(Tensor([2, 1277504, 41, 41],"float16"), list[8,41,-1,], )
paddle.Tensor.reshape(Tensor([2, 2, 4, 64, 4194305],"float16"), list[2,8,-1,64,], )
paddle.Tensor.reshape(Tensor([2, 38, 441506, 128],"float16"), list[38,2,-1,], )
paddle.Tensor.reshape(Tensor([2048, 1, 17, 3856, 17, 1],"float32"), tuple(-1,1,17,17,), )
paddle.Tensor.reshape(Tensor([221848, 10285],"float32"), list[1,-1,10285,], )
paddle.Tensor.reshape(Tensor([2228225, 1024],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([242528, 49, 192],"float32"), list[-1,7,7,192,], )
paddle.Tensor.reshape(Tensor([268436, 8500],"float32"), list[1,-1,8500,], )
paddle.Tensor.reshape(Tensor([28521268, 4, 20],"int64"), list[-1,20,], )
paddle.Tensor.reshape(Tensor([30316, 1, 1, 7, 7, 1536],"float32"), list[-1,7,7,1536,], )
paddle.Tensor.reshape(Tensor([33554432, 1, 1, 69],"float32"), tuple(-1,128,128,1,1,1,), )
paddle.Tensor.reshape(Tensor([400, 5704254],"float32"), list[2,200,-1,], )
paddle.Tensor.reshape(Tensor([4096, 7, 7, 11369],"float32"), tuple(-1,512,7,7,), )
paddle.Tensor.reshape(Tensor([416, 5484860],"float32"), shape=list[13,2,16,-1,], )
paddle.Tensor.reshape(Tensor([430, 192, 144, 192],"float32"), list[-1,27648,192,], )
paddle.Tensor.reshape(Tensor([5, 445645, 1024],"float32"), list[5,19,16,-1,], )
paddle.Tensor.reshape(Tensor([57853, 145, 4, 128],"float16"), list[145,4,-1,], )
paddle.Tensor.reshape(Tensor([60, 1548, 12, 2048],"float32"), list[60,-1,2048,], )
paddle.Tensor.reshape(Tensor([61896, 12, 12, 256],"float32"), list[-1,144,256,], )
paddle.Tensor.reshape(Tensor([63380594, 36],"float32"), list[2,9,-1,], )
paddle.Tensor.reshape(Tensor([64, 5, 64, 1741, 64],"float32"), list[64,-1,64,64,], )
paddle.Tensor.reshape(Tensor([7922575, 3, 96],"float32"), list[2,3,4,-1,], )
paddle.Tensor.reshape(Tensor([800, 2852127],"float32"), list[16,50,-1,], )
paddle.Tensor.reshape(Tensor([90, 11, 28810, 80],"float32"), list[90,-1,80,], )
paddle.Tensor.reshape(Tensor([91268056, 5, 5, 1],"float32"), list[-1,25,], )
paddle.Tensor.rot90(Tensor([1140850690, 2],"float32"), 1, axes=list[0,1,], )
paddle.Tensor.rot90(Tensor([3, 760567127],"float32"), 1, axes=list[0,1,], )
paddle.Tensor.rot90(x=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.rot90(x=Tensor([1073741825, 4],"float16"), k=-1, )
paddle.Tensor.rot90(x=Tensor([1073741825, 4],"float16"), k=4, )
paddle.Tensor.rot90(x=Tensor([2, 2147483649],"float16"), k=-4, )
paddle.Tensor.rot90(x=Tensor([2147483649, 2],"float16"), k=-4, )
paddle.Tensor.rot90(x=Tensor([268435457, 4, 4],"float16"), )
paddle.Tensor.rot90(x=Tensor([3, 1431655766],"float16"), )
paddle.Tensor.rot90(x=Tensor([4, 1073741825],"float16"), )
paddle.Tensor.rot90(x=Tensor([4, 1073741825],"float16"), k=-1, )
paddle.Tensor.rot90(x=Tensor([4, 1073741825],"float16"), k=4, )
paddle.Tensor.rot90(x=Tensor([4, 268435457, 4],"float16"), )
paddle.Tensor.rot90(x=Tensor([4, 4, 268435457],"float16"), )
paddle.Tensor.rot90(x=Tensor([4, 4, 4, 67108865],"float16"), )
paddle.Tensor.rot90(x=Tensor([4, 4, 4, 67108865],"float16"), k=-1, axes=list[1,2,], )
paddle.Tensor.rot90(x=Tensor([4, 4, 4, 67108865],"float16"), k=-1, axes=tuple(2,3,), )
paddle.Tensor.rot90(x=Tensor([4, 4, 67108865, 4],"float16"), )
paddle.Tensor.rot90(x=Tensor([4, 4, 67108865, 4],"float16"), k=-1, axes=list[1,2,], )
paddle.Tensor.rot90(x=Tensor([4, 4, 67108865, 4],"float16"), k=-1, axes=tuple(2,3,), )
paddle.Tensor.rot90(x=Tensor([4, 570425345],"float32"), )
paddle.Tensor.rot90(x=Tensor([4, 570425345],"int32"), )
paddle.Tensor.rot90(x=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.Tensor.rot90(x=Tensor([4, 67108865, 4, 4],"float16"), k=-1, axes=list[1,2,], )
paddle.Tensor.rot90(x=Tensor([4, 67108865, 4, 4],"float16"), k=-1, axes=tuple(2,3,), )
paddle.Tensor.rot90(x=Tensor([570425345, 4],"float32"), )
paddle.Tensor.rot90(x=Tensor([570425345, 4],"int32"), )
paddle.Tensor.rot90(x=Tensor([67108865, 4, 4, 4],"float16"), )
paddle.Tensor.rot90(x=Tensor([67108865, 4, 4, 4],"float16"), k=-1, axes=list[1,2,], )
paddle.Tensor.rot90(x=Tensor([67108865, 4, 4, 4],"float16"), k=-1, axes=tuple(2,3,), )
paddle.Tensor.round(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.round(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.round(Tensor([10, 228170138],"float32"), )
paddle.Tensor.round(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.round(Tensor([114085069, 20],"float32"), )
paddle.Tensor.rsqrt(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.rsqrt(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.rsqrt(Tensor([10, 228170138],"float32"), )
paddle.Tensor.rsqrt(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.rsqrt(Tensor([114085069, 20],"float32"), )
paddle.Tensor.scale(Tensor([1, 16, 1, 142606337],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([1, 16, 1, 142606337],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1024, 262145],"float16"), 0.00390625, )
paddle.Tensor.scale(Tensor([1, 16, 1024, 262145],"float16"), 32, )
paddle.Tensor.scale(Tensor([1, 16, 13, 10969719],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([1, 16, 1308316, 109],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1320430, 108],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1332770, 107],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1345343, 106],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1358156, 105],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1371215, 104],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1384528, 103],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1398102, 102],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1411944, 101],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1426064, 100],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 2228225, 64],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([1, 16, 262145, 1024],"float16"), 32, )
paddle.Tensor.scale(Tensor([1, 16, 4194305, 64],"float16"), 0.00390625, )
paddle.Tensor.scale(Tensor([1, 20933041, 1, 109],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 21126865, 1, 108],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 21324312, 1, 107],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 21525485, 1, 106],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 21730490, 1, 105],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 21939437, 1, 104],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 22152441, 1, 103],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 22369622, 1, 102],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 22591103, 1, 101],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 22817014, 1, 100],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 2742430, 13, 64],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([1, 35651585, 1, 64],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([1, 4097, 1024, 1024],"float16"), 32, )
paddle.Tensor.scale(Tensor([1, 65537, 1024, 64],"float16"), 0.00390625, )
paddle.Tensor.scale(Tensor([10, 20, 11408507],"float32"), scale=2.0, bias=3.0, )
paddle.Tensor.scale(Tensor([10, 228170138, 1],"float32"), scale=2.0, bias=3.0, )
paddle.Tensor.scale(Tensor([1025, 4, 1024, 1024],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([1025, 4, 1024, 1024],"float16"), 4, )
paddle.Tensor.scale(Tensor([114085069, 20, 1],"float32"), scale=2.0, bias=3.0, )
paddle.Tensor.scale(Tensor([1308316, 16, 1, 109],"float32"), 24, )
paddle.Tensor.scale(Tensor([1320430, 16, 1, 108],"float32"), 24, )
paddle.Tensor.scale(Tensor([1320430, 192, 3, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([1332770, 16, 1, 107],"float32"), 24, )
paddle.Tensor.scale(Tensor([1345343, 16, 1, 106],"float32"), 24, )
paddle.Tensor.scale(Tensor([1358156, 16, 1, 105],"float32"), 24, )
paddle.Tensor.scale(Tensor([1371215, 16, 1, 104],"float32"), 24, )
paddle.Tensor.scale(Tensor([1384528, 16, 1, 103],"float32"), 24, )
paddle.Tensor.scale(Tensor([1398102, 16, 1, 102],"float32"), 24, )
paddle.Tensor.scale(Tensor([1411944, 16, 1, 101],"float32"), 24, )
paddle.Tensor.scale(Tensor([1426064, 16, 1, 100],"float32"), 24, )
paddle.Tensor.scale(Tensor([1426064, 64, 5, 5],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([16, 16, 1024, 16385],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([16, 16, 262145, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([16, 2, 1024, 131073],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([16, 2, 1024, 131073],"float16"), 16, )
paddle.Tensor.scale(Tensor([16, 2, 131073, 1024],"float16"), 16, )
paddle.Tensor.scale(Tensor([16, 2, 2097153, 64],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([16, 4097, 1024, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([16, 4097, 1024, 64],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([16385, 1, 1024, 256],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([171402, 16, 13, 64],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([18857037, 1, 11, 11],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([192, 475355, 5, 5],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([192, 64, 37138, 5],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([192, 64, 5, 37138],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([2, 1, 1024, 2097153],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([2, 1, 1024, 2097153],"float16"), 4, )
paddle.Tensor.scale(Tensor([2, 1, 2097153, 1024],"float16"), 4, )
paddle.Tensor.scale(Tensor([2, 1, 8388609, 256],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([2, 2, 1024, 1048577],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([2, 2, 1024, 1048577],"float16"), 16, )
paddle.Tensor.scale(Tensor([2, 2, 1048577, 1024],"float16"), 16, )
paddle.Tensor.scale(Tensor([2, 2, 16777217, 64],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([2, 2049, 1024, 1024],"float16"), 16, )
paddle.Tensor.scale(Tensor([2, 2049, 1024, 1024],"float16"), 4, )
paddle.Tensor.scale(Tensor([2, 32769, 1024, 64],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([2, 8193, 1024, 256],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([2049, 2, 1024, 1024],"float16"), 16, )
paddle.Tensor.scale(Tensor([2049, 4, 1024, 512],"float16"), 0.011048543456039804, )
paddle.Tensor.scale(Tensor([2228225, 16, 1, 64],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([2281701379],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([228170138, 10],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([256, 256, 11606, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([256, 256, 3, 11606],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([256, 384, 3, 7737],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([256, 384, 7737, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([256, 8912897],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([256, 990322, 3, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([32, 16, 128, 65537],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([32, 16, 131073, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([32, 16385, 128, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([32769, 16, 128, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([32769, 2, 1024, 64],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([384, 192, 10316, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([384, 192, 3, 10316],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([384, 660215, 3, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([4097, 1, 1024, 1024],"float16"), 4, )
paddle.Tensor.scale(Tensor([4097, 16, 1024, 64],"float16"), 0.00390625, )
paddle.Tensor.scale(Tensor([4097, 16, 1024, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([4097, 4, 1024, 256],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([64, 1, 11, 3241054],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([64, 1, 3241054, 11],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([64, 294642, 11, 11],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([660215, 384, 3, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([7, 16, 128, 299594],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([7, 16, 599187, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([7, 74899, 128, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([8, 1025, 1024, 512],"float16"), 0.011048543456039804, )
paddle.Tensor.scale(Tensor([8, 2049, 1024, 256],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([8, 4, 1024, 131073],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([8, 4, 1024, 131073],"float16"), 0.011048543456039804, )
paddle.Tensor.scale(Tensor([8, 4, 1024, 131073],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([8, 4, 1024, 131073],"float16"), 4, )
paddle.Tensor.scale(Tensor([8, 4, 131073, 1024],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([8, 4, 131073, 1024],"float16"), 4, )
paddle.Tensor.scale(Tensor([8, 4, 262145, 512],"float16"), 0.011048543456039804, )
paddle.Tensor.scale(Tensor([8, 4, 524289, 256],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([990322, 256, 3, 3],"float32"), 0.5, )
paddle.Tensor.set_(Tensor([20],"bool"), Tensor([15, 152113426],"bool"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"bool"), Tensor([760567127, 3],"bool"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"float16"), Tensor([1431655766, 3],"float16"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"float16"), Tensor([15, 286331154],"float16"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"float32"), Tensor([15, 152113426],"float32"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"float32"), Tensor([760567127, 3],"float32"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int16"), Tensor([1431655766, 3],"int16"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int16"), Tensor([15, 286331154],"int16"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int32"), Tensor([15, 152113426],"int32"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int32"), Tensor([760567127, 3],"int32"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int64"), Tensor([15, 152113426],"int64"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int64"), Tensor([760567127, 3],"int64"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int8"), Tensor([1431655766, 3],"int8"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int8"), Tensor([15, 286331154],"int8"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"uint8"), Tensor([1431655766, 3],"uint8"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"uint8"), Tensor([15, 286331154],"uint8"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([2281701379],"bool"), Tensor([15, 3],"bool"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([2281701379],"float32"), Tensor([15, 3],"float32"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([2281701379],"int32"), Tensor([15, 3],"int32"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([2281701379],"int64"), Tensor([15, 3],"int64"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([4294967297],"float16"), Tensor([15, 3],"float16"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([4294967297],"int16"), Tensor([15, 3],"int16"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([4294967297],"int8"), Tensor([15, 3],"int8"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([4294967297],"uint8"), Tensor([15, 3],"uint8"), list[20,], list[2,], 0, )
paddle.Tensor.sigmoid(Tensor([1, 11, 207427399],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 1100, 2074274],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 18, 126761188],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 21, 108652447],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 22, 103713700],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 300, 7605672],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 570425345, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 6380, 357634],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 8550, 266866],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 9, 253522376],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 900, 2535224],"float32"), )
paddle.Tensor.sigmoid(Tensor([1901418, 300, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([25928425, 22, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([27163112, 21, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([31690297, 18, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([51856850, 11, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([518569, 1100, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([63380594, 9, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([633806, 900, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([66717, 8550, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([89409, 6380, 4],"float32"), )
paddle.Tensor.sign(Tensor([1124, 2029984],"float32"), )
paddle.Tensor.sign(Tensor([16, 142606337],"float32"), )
paddle.Tensor.sign(Tensor([171798692, 5, 5],"float16"), )
paddle.Tensor.sign(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.sign(Tensor([2147483649, 2],"float16"), )
paddle.Tensor.sign(Tensor([2281701379],"float32"), )
paddle.Tensor.sign(Tensor([32, 71303169],"float32"), )
paddle.Tensor.sign(Tensor([37, 61667605],"float32"), )
paddle.Tensor.sign(Tensor([4, 570425345],"float32"), )
paddle.Tensor.sign(Tensor([4294967297],"float16"), )
paddle.Tensor.sign(Tensor([456340276, 5],"float32"), )
paddle.Tensor.sign(Tensor([50000, 17180, 5],"float16"), )
paddle.Tensor.sign(Tensor([50000, 5, 17180],"float16"), )
paddle.Tensor.sign(Tensor([50000, 85900],"float16"), )
paddle.Tensor.sign(Tensor([512, 4456449],"float32"), )
paddle.Tensor.sign(Tensor([61667605, 37],"float32"), )
paddle.Tensor.sign(Tensor([71303169, 32],"float32"), )
paddle.Tensor.signbit(Tensor([107374183, 20, 2],"float16"), )
paddle.Tensor.signbit(Tensor([107374183, 20, 2],"int16"), )
paddle.Tensor.signbit(Tensor([107374183, 20, 2],"int8"), )
paddle.Tensor.signbit(Tensor([107374183, 20, 2],"uint8"), )
paddle.Tensor.signbit(Tensor([12, 178956971, 2],"float16"), )
paddle.Tensor.signbit(Tensor([12, 178956971, 2],"int16"), )
paddle.Tensor.signbit(Tensor([12, 178956971, 2],"int8"), )
paddle.Tensor.signbit(Tensor([12, 178956971, 2],"uint8"), )
paddle.Tensor.signbit(Tensor([12, 20, 17895698],"float16"), )
paddle.Tensor.signbit(Tensor([12, 20, 17895698],"int16"), )
paddle.Tensor.signbit(Tensor([12, 20, 17895698],"int8"), )
paddle.Tensor.signbit(Tensor([12, 20, 17895698],"uint8"), )
paddle.Tensor.signbit(Tensor([12, 20, 9507090],"float32"), )
paddle.Tensor.signbit(Tensor([12, 20, 9507090],"int32"), )
paddle.Tensor.signbit(Tensor([12, 95070891, 2],"float32"), )
paddle.Tensor.signbit(Tensor([12, 95070891, 2],"int32"), )
paddle.Tensor.signbit(Tensor([57042535, 20, 2],"float32"), )
paddle.Tensor.signbit(Tensor([57042535, 20, 2],"int32"), )
paddle.Tensor.sin(Tensor([1, 10, 3565159, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 10, 8, 28521268],"float32"), )
paddle.Tensor.sin(Tensor([1, 11, 3241054, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 11, 4, 51856850],"float32"), )
paddle.Tensor.sin(Tensor([1, 1100, 2074274],"float32"), )
paddle.Tensor.sin(Tensor([1, 1188387, 30, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 12, 2970966, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 12, 9, 21126865],"float32"), )
paddle.Tensor.sin(Tensor([1, 1426064, 25, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 144, 200, 79226],"float32"), )
paddle.Tensor.sin(Tensor([1, 144, 247581, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 178258, 200, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 18, 126761188],"float32"), )
paddle.Tensor.sin(Tensor([1, 18, 1980644, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 18, 25, 5070448],"float32"), )
paddle.Tensor.sin(Tensor([1, 18, 4, 31690297],"float32"), )
paddle.Tensor.sin(Tensor([1, 192, 144, 82527],"float32"), )
paddle.Tensor.sin(Tensor([1, 192, 185686, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 1980644, 18, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 20, 15, 7605672],"float32"), )
paddle.Tensor.sin(Tensor([1, 20, 1782580, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 21, 108652447],"float32"), )
paddle.Tensor.sin(Tensor([1, 21, 1697695, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 21, 4, 27163112],"float32"), )
paddle.Tensor.sin(Tensor([1, 22, 103713700],"float32"), )
paddle.Tensor.sin(Tensor([1, 22, 1620527, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 22, 4, 25928425],"float32"), )
paddle.Tensor.sin(Tensor([1, 23, 1550069, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 23, 18, 5511356],"float32"), )
paddle.Tensor.sin(Tensor([1, 2376773, 15, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 24, 1485483, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 24, 18, 5281717],"float32"), )
paddle.Tensor.sin(Tensor([1, 247581, 144, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 2742430, 13, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 300, 118839, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 300, 4, 1901418],"float32"), )
paddle.Tensor.sin(Tensor([1, 35651585, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 356516, 100, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 36, 50, 1267612],"float32"), )
paddle.Tensor.sin(Tensor([1, 36, 990322, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 3961288, 9, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 40, 30, 1901418],"float32"), )
paddle.Tensor.sin(Tensor([1, 40, 891290, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 4456449, 8, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 45, 36, 1408458],"float32"), )
paddle.Tensor.sin(Tensor([1, 45, 792258, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 48, 36, 1320430],"float32"), )
paddle.Tensor.sin(Tensor([1, 48, 742742, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 495161, 72, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 594194, 60, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 713032, 50, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 72, 100, 316903],"float32"), )
paddle.Tensor.sin(Tensor([1, 72, 495161, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 80, 445645, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 80, 60, 475355],"float32"), )
paddle.Tensor.sin(Tensor([1, 89, 400580, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 89, 72, 356071],"float32"), )
paddle.Tensor.sin(Tensor([1, 8912897, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 9, 13, 19501722],"float32"), )
paddle.Tensor.sin(Tensor([1, 9, 253522376],"float32"), )
paddle.Tensor.sin(Tensor([1, 9, 3961288, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 9, 4, 63380594],"float32"), )
paddle.Tensor.sin(Tensor([1, 96, 371371, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 96, 72, 330108],"float32"), )
paddle.Tensor.sin(Tensor([1, 990322, 36, 64],"float32"), )
paddle.Tensor.sin(Tensor([10, 228170138],"float32"), )
paddle.Tensor.sin(Tensor([11, 207427399],"float32"), )
paddle.Tensor.sin(Tensor([118839, 20, 15, 64],"float32"), )
paddle.Tensor.sin(Tensor([1238, 144, 200, 64],"float32"), )
paddle.Tensor.sin(Tensor([1290, 192, 144, 64],"float32"), )
paddle.Tensor.sin(Tensor([131072, 17409],"float32"), )
paddle.Tensor.sin(Tensor([142, 16068320],"float32"), )
paddle.Tensor.sin(Tensor([142606337, 16],"float32"), )
paddle.Tensor.sin(Tensor([1485483, 24, 64],"float32"), )
paddle.Tensor.sin(Tensor([16, 142606337],"float32"), )
paddle.Tensor.sin(Tensor([16, 16, 8912897],"float32"), )
paddle.Tensor.sin(Tensor([16, 2228225, 64],"float32"), )
paddle.Tensor.sin(Tensor([16, 268435457],"float16"), )
paddle.Tensor.sin(Tensor([1620527, 22, 64],"float32"), )
paddle.Tensor.sin(Tensor([1697695, 21, 64],"float32"), )
paddle.Tensor.sin(Tensor([17825793, 128],"float32"), )
paddle.Tensor.sin(Tensor([1980644, 18, 64],"float32"), )
paddle.Tensor.sin(Tensor([19807, 36, 50, 64],"float32"), )
paddle.Tensor.sin(Tensor([2, 10, 15, 7605672],"float32"), )
paddle.Tensor.sin(Tensor([2, 10, 1782580, 64],"float32"), )
paddle.Tensor.sin(Tensor([2, 1100, 1037137],"float32"), )
paddle.Tensor.sin(Tensor([2, 1188387, 15, 64],"float32"), )
paddle.Tensor.sin(Tensor([2, 17825793, 64],"float32"), )
paddle.Tensor.sin(Tensor([2, 19, 29, 2070510],"float32"), )
paddle.Tensor.sin(Tensor([2, 19, 938200, 64],"float32"), )
paddle.Tensor.sin(Tensor([2, 614683, 29, 64],"float32"), )
paddle.Tensor.sin(Tensor([20, 114085069],"float32"), )
paddle.Tensor.sin(Tensor([200, 11408507],"float32"), )
paddle.Tensor.sin(Tensor([2048, 1114113],"float32"), )
paddle.Tensor.sin(Tensor([20632, 48, 36, 64],"float32"), )
paddle.Tensor.sin(Tensor([22008, 45, 36, 64],"float32"), )
paddle.Tensor.sin(Tensor([2228225, 16, 64],"float32"), )
paddle.Tensor.sin(Tensor([2281701379],"float32"), )
paddle.Tensor.sin(Tensor([23767723, 96],"float32"), )
paddle.Tensor.sin(Tensor([237678, 10, 15, 64],"float32"), )
paddle.Tensor.sin(Tensor([24, 1485483, 64],"float32"), )
paddle.Tensor.sin(Tensor([24, 24, 3961288],"float32"), )
paddle.Tensor.sin(Tensor([264, 8642809],"float32"), )
paddle.Tensor.sin(Tensor([285212673, 8],"float32"), )
paddle.Tensor.sin(Tensor([29710, 300, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([29710, 40, 30, 64],"float32"), )
paddle.Tensor.sin(Tensor([304715, 9, 13, 64],"float32"), )
paddle.Tensor.sin(Tensor([32411, 1100, 64],"float32"), )
paddle.Tensor.sin(Tensor([32768, 69633],"float32"), )
paddle.Tensor.sin(Tensor([330108, 12, 9, 64],"float32"), )
paddle.Tensor.sin(Tensor([34, 67108865],"float32"), )
paddle.Tensor.sin(Tensor([35651585, 64],"float32"), )
paddle.Tensor.sin(Tensor([3961288, 9, 64],"float32"), )
paddle.Tensor.sin(Tensor([405132, 22, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([4096, 557057],"float32"), )
paddle.Tensor.sin(Tensor([424424, 21, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([4294967297],"float16"), )
paddle.Tensor.sin(Tensor([445645, 10, 8, 64],"float32"), )
paddle.Tensor.sin(Tensor([495161, 18, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([4952, 72, 100, 64],"float32"), )
paddle.Tensor.sin(Tensor([5158, 96, 72, 64],"float32"), )
paddle.Tensor.sin(Tensor([5564, 89, 72, 64],"float32"), )
paddle.Tensor.sin(Tensor([570425345, 4],"float32"), )
paddle.Tensor.sin(Tensor([64704, 19, 29, 64],"float32"), )
paddle.Tensor.sin(Tensor([67108865, 64],"float16"), )
paddle.Tensor.sin(Tensor([71303169, 32],"float32"), )
paddle.Tensor.sin(Tensor([7428, 80, 60, 64],"float32"), )
paddle.Tensor.sin(Tensor([760567127, 3],"float32"), )
paddle.Tensor.sin(Tensor([79226, 18, 25, 64],"float32"), )
paddle.Tensor.sin(Tensor([810264, 11, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([82527, 24, 18, 64],"float32"), )
paddle.Tensor.sin(Tensor([86115, 23, 18, 64],"float32"), )
paddle.Tensor.sin(Tensor([8912897, 256],"float32"), )
paddle.Tensor.sin(Tensor([990322, 9, 4, 64],"float32"), )
paddle.Tensor.slice_scatter(Tensor([715827883, 6],"float16"), Tensor([715827883, 3],"float16"), list[1,], list[0,], list[6,], list[2,], )
paddle.Tensor.slice_scatter(Tensor([8, 536870913],"float16"), Tensor([8, 3],"float16"), list[1,], list[0,], list[6,], list[2,], )
paddle.Tensor.split(Tensor([1, 10164, 7016, 32],"float32"), list[7744,1936,484,], axis=1, )
paddle.Tensor.split(Tensor([1, 10164, 8, 28062],"float32"), list[7744,1936,484,], axis=1, )
paddle.Tensor.split(Tensor([1, 1100, 2074274],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([1, 11109, 6419, 32],"float32"), list[8464,2116,529,], axis=1, )
paddle.Tensor.split(Tensor([1, 11109, 8, 25675],"float32"), list[8464,2116,529,], axis=1, )
paddle.Tensor.split(Tensor([1, 12096, 5895, 32],"float32"), list[9216,2304,576,], axis=1, )
paddle.Tensor.split(Tensor([1, 12096, 8, 23580],"float32"), list[9216,2304,576,], axis=1, )
paddle.Tensor.split(Tensor([1, 142606337, 16],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([1, 18, 126761188],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([1, 192, 11883862],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1, 196, 11641334],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1, 200, 11408507],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1, 21, 108652447],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([1, 22, 103713700],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([1, 2281701379],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([1, 2281701379],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1, 25, 4, 22817014],"float32"), 4, axis=2, )
paddle.Tensor.split(Tensor([1, 25, 45634028, 2],"float32"), 4, axis=2, )
paddle.Tensor.split(Tensor([1, 285212673, 4, 2],"float32"), 4, axis=2, )
paddle.Tensor.split(Tensor([1, 300, 7605672],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1, 35651585, 64],"float32"), list[32,16,16,], axis=-1, )
paddle.Tensor.split(Tensor([1, 36828, 1937, 32],"float32"), list[27648,6912,1728,432,108,], axis=1, )
paddle.Tensor.split(Tensor([1, 36828, 8, 7745],"float32"), list[27648,6912,1728,432,108,], axis=1, )
paddle.Tensor.split(Tensor([1, 38367, 1859, 32],"float32"), list[28800,7200,1800,450,117,], axis=1, )
paddle.Tensor.split(Tensor([1, 38367, 8, 7434],"float32"), list[28800,7200,1800,450,117,], axis=1, )
paddle.Tensor.split(Tensor([1, 4194305, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([1, 570425345, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([1, 570425345, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1, 6380, 11177, 32],"float32"), list[4800,1200,300,80,], axis=1, )
paddle.Tensor.split(Tensor([1, 6380, 8, 44705],"float32"), list[4800,1200,300,80,], axis=1, )
paddle.Tensor.split(Tensor([1, 6804, 10480, 32],"float32"), list[5184,1296,324,], axis=1, )
paddle.Tensor.split(Tensor([1, 6804, 8, 41919],"float32"), list[5184,1296,324,], axis=1, )
paddle.Tensor.split(Tensor([1, 8400, 8, 33954],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([1, 8400, 8489, 32],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([1, 8550, 8, 33359],"float32"), list[6408,1620,414,108,], axis=1, )
paddle.Tensor.split(Tensor([1, 8550, 8340, 32],"float32"), list[6408,1620,414,108,], axis=1, )
paddle.Tensor.split(Tensor([1, 9, 253522376],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([10, 14260634, 16],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([100, 22817014],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([101, 22591103],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([101, 22591103],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([102, 22369622],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1043, 8550, 8, 32],"float32"), list[6408,1620,414,108,], axis=1, )
paddle.Tensor.split(Tensor([1048577, 4, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([1062, 8400, 8, 32],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([107, 21324312],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([108, 21126865],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1140850690, 2],"float32"), list[1,1,], -1, )
paddle.Tensor.split(Tensor([11408507, 25, 4, 2],"float32"), 4, axis=2, )
paddle.Tensor.split(Tensor([128, 17825793],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([13, 13, 13501192],"float32"), 2, axis=-1, )
paddle.Tensor.split(Tensor([13, 32, 5484860],"float32"), 2, axis=-1, )
paddle.Tensor.split(Tensor([13, 7, 25073642],"float32"), 2, axis=-1, )
paddle.Tensor.split(Tensor([13, 87757746, 2],"float32"), 2, axis=-1, )
paddle.Tensor.split(Tensor([1310, 6804, 8, 32],"float32"), list[5184,1296,324,], axis=1, )
paddle.Tensor.split(Tensor([132, 17285617],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([134, 31301, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([1398, 6380, 8, 32],"float32"), list[4800,1200,300,80,], axis=1, )
paddle.Tensor.split(Tensor([142606337, 16],"float32"), list[12,4,], -1, )
paddle.Tensor.split(Tensor([1441, 11645, 8, 32],"float16"), list[8740,2204,551,150,], axis=1, )
paddle.Tensor.split(Tensor([145, 28927, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([1469, 6069, 8, 32],"float32"), list[4624,1156,289,], axis=1, )
paddle.Tensor.split(Tensor([158, 26547, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([16, 17, 8388609],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([16, 176, 810264],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([16, 185686, 768],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([16, 35651585, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([16, 46422, 3072],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([16, 8400, 531, 32],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([16, 8400, 8, 2123],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([160, 17, 1579033],"float16"), 17, 1, )
paddle.Tensor.split(Tensor([160, 17, 838861],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([160, 4643, 3072],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([160, 8739, 3072],"float16"), 17, 1, )
paddle.Tensor.split(Tensor([162978670, 7, 2],"float32"), 2, axis=-1, )
paddle.Tensor.split(Tensor([1658, 5376, 8, 32],"float32"), list[4096,1024,256,], axis=1, )
paddle.Tensor.split(Tensor([168, 24967, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([174763, 17, 768],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([1887, 4725, 8, 32],"float32"), list[3600,900,225,], axis=1, )
paddle.Tensor.split(Tensor([1901418, 300, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([2, 1, 2, 1, 570425345],"float32"), 2, )
paddle.Tensor.split(Tensor([2, 1, 2, 17825793, 32],"float32"), 2, )
paddle.Tensor.split(Tensor([2, 1, 35651585, 1, 32],"float32"), 2, )
paddle.Tensor.split(Tensor([2, 11645, 3062, 32],"float32"), list[8740,2204,551,150,], axis=1, )
paddle.Tensor.split(Tensor([2, 11645, 5763, 32],"float16"), list[8740,2204,551,150,], axis=1, )
paddle.Tensor.split(Tensor([2, 11645, 8, 12247],"float32"), list[8740,2204,551,150,], axis=1, )
paddle.Tensor.split(Tensor([2, 11645, 8, 23052],"float16"), list[8740,2204,551,150,], axis=1, )
paddle.Tensor.split(Tensor([2, 17825793, 2, 1, 32],"float32"), 2, )
paddle.Tensor.split(Tensor([2, 2, 1, 2, 285212673],"float32"), 2, )
paddle.Tensor.split(Tensor([2, 2, 1, 71303169, 8],"float32"), 2, )
paddle.Tensor.split(Tensor([2, 2, 35651585, 2, 8],"float32"), 2, )
paddle.Tensor.split(Tensor([2, 4725, 7546, 32],"float32"), list[3600,900,225,], axis=1, )
paddle.Tensor.split(Tensor([2, 4725, 8, 30182],"float32"), list[3600,900,225,], axis=1, )
paddle.Tensor.split(Tensor([2, 6069, 5875, 32],"float32"), list[4624,1156,289,], axis=1, )
paddle.Tensor.split(Tensor([2, 6069, 8, 23498],"float32"), list[4624,1156,289,], axis=1, )
paddle.Tensor.split(Tensor([2, 71303169, 1, 2, 8],"float32"), 2, )
paddle.Tensor.split(Tensor([2, 8400, 4245, 32],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([2, 8400, 8, 16977],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([20, 1782580, 64],"float32"), list[32,16,16,], axis=-1, )
paddle.Tensor.split(Tensor([2048, 1114113],"float32"), list[512,512,512,512,], )
paddle.Tensor.split(Tensor([2097153, 2, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([21846, 2, 128, 8, 96],"float16"), 2, )
paddle.Tensor.split(Tensor([22591103, 101],"float32"), list[1,2,2,5,8,22,5,5,18,3,9,4,1,2,11,3,], -1, )
paddle.Tensor.split(Tensor([2281701379, 1],"float32"), list[1,], -1, )
paddle.Tensor.split(Tensor([233, 38367, 8, 32],"float32"), list[28800,7200,1800,450,117,], axis=1, )
paddle.Tensor.split(Tensor([23767723, 1, 96],"float32"), list[64,16,16,], axis=-1, )
paddle.Tensor.split(Tensor([23767723, 6, 16],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([243, 36828, 8, 32],"float32"), list[27648,6912,1728,432,108,], axis=1, )
paddle.Tensor.split(Tensor([25928425, 22, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([27163112, 21, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([285212673, 8],"float32"), list[1,1,1,1,1,1,1,1,], -1, )
paddle.Tensor.split(Tensor([285212673, 8],"float32"), list[8,], -1, )
paddle.Tensor.split(Tensor([2852127, 200, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([2910334, 196, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([2970966, 192, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([31690297, 18, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([3241054, 176, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([325957340, 7],"float32"), list[7,], -1, )
paddle.Tensor.split(Tensor([328966, 17, 768],"float16"), 17, 1, )
paddle.Tensor.split(Tensor([35651585, 1, 2, 1, 32],"float32"), 2, )
paddle.Tensor.split(Tensor([35651585, 1, 64],"float32"), list[32,16,16,], axis=-1, )
paddle.Tensor.split(Tensor([35651585, 32, 2],"float32"), 2, axis=-1, )
paddle.Tensor.split(Tensor([35651585, 4, 16],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([4, 10923, 128, 8, 96],"float16"), 2, )
paddle.Tensor.split(Tensor([4, 2, 128, 43691, 96],"float16"), 2, )
paddle.Tensor.split(Tensor([4, 2, 128, 8, 524289],"float16"), 2, )
paddle.Tensor.split(Tensor([4, 2, 699051, 8, 96],"float16"), 2, )
paddle.Tensor.split(Tensor([4, 5376, 3316, 32],"float32"), list[4096,1024,256,], axis=1, )
paddle.Tensor.split(Tensor([4, 5376, 8, 13264],"float32"), list[4096,1024,256,], axis=1, )
paddle.Tensor.split(Tensor([4, 8400, 2123, 32],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([4, 8400, 8, 8489],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([43691, 17, 3072],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([456340276, 5],"float32"), list[5,], -1, )
paddle.Tensor.split(Tensor([5, 28521268, 16],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([512, 10923, 768],"float16"), 17, 1, )
paddle.Tensor.split(Tensor([512, 17, 493448],"float16"), 17, 1, )
paddle.Tensor.split(Tensor([512, 4456449],"float32"), list[512,], )
paddle.Tensor.split(Tensor([518569, 1100, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([570425345, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([570425345, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([570425345, 4],"float32"), list[1,1,1,1,], -1, )
paddle.Tensor.split(Tensor([570425345, 4],"float32"), list[1,3,], -1, )
paddle.Tensor.split(Tensor([570425345, 4],"float32"), list[2,2,], -1, )
paddle.Tensor.split(Tensor([58, 409789, 96],"float32"), list[64,16,16,], axis=-1, )
paddle.Tensor.split(Tensor([63380594, 9, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([71303169, 2, 1, 2, 8],"float32"), 2, )
paddle.Tensor.split(Tensor([71303169, 2, 16],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([737, 12096, 8, 32],"float32"), list[9216,2304,576,], axis=1, )
paddle.Tensor.split(Tensor([766, 11645, 8, 32],"float32"), list[8740,2204,551,150,], axis=1, )
paddle.Tensor.split(Tensor([8, 6069, 1469, 32],"float32"), list[4624,1156,289,], axis=1, )
paddle.Tensor.split(Tensor([8, 6069, 8, 5875],"float32"), list[4624,1156,289,], axis=1, )
paddle.Tensor.split(Tensor([803, 11109, 8, 32],"float32"), list[8464,2116,529,], axis=1, )
paddle.Tensor.split(Tensor([82242, 17, 3072],"float16"), 17, 1, )
paddle.Tensor.split(Tensor([877, 10164, 8, 32],"float32"), list[7744,1936,484,], axis=1, )
paddle.Tensor.split(Tensor([87757746, 13, 2],"float32"), 2, axis=-1, )
paddle.Tensor.sqrt(Tensor([1, 1, 2281701379],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 10140896, 15, 15],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 10, 20742740],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 10371370, 20],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 10917232, 19],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 11, 18857037],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 11523745, 18],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 12201612, 17],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 12964213, 16],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 13, 15955954],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 13828494, 15],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 14, 14816243],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 14816243, 14],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 15, 13828494],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 15955954, 13],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 16, 12964213],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 17, 12201612],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 18, 11523745],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 18857037, 11],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 19, 10917232],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 20, 10371370],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 20742740, 10],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 21, 9877496],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 22, 9428519],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 26, 7977977],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 28, 7408122],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 30, 6914247],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 32, 6482107],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 34, 6100806],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 36, 5761873],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 3704061, 56],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 38, 5458616],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 3988989, 52],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 40, 5185685],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 42, 4938748],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 44, 4714260],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 4714260, 44],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 4938748, 42],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 5185685, 40],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 52, 3988989],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 5458616, 38],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 56, 3704061],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 5761873, 36],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 6100806, 34],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 6482107, 32],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 6914247, 30],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 7408122, 28],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 7977977, 26],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 9428519, 22],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 9877496, 21],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 1140850690, 2],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11641334, 14, 14],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 1178565, 44, 44],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 1293482, 42, 42],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 13501192, 13, 13],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 1426064, 40, 40],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 1580126, 38, 38],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 1760573, 36, 36],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 18857037, 11, 11],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 1973791, 34, 34],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 2228225, 32, 32],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 22817014, 10, 10],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 2535224, 30, 30],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 2910334, 28, 28],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 3375298, 26, 26],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 4714260, 22, 22],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 5173927, 21, 21],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 5704254, 20, 20],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 6320503, 19, 19],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 7042289, 18, 18],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 727584, 56, 56],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 7895161, 17, 17],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 843825, 52, 52],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 8912897, 16, 16],"float32"), )
paddle.Tensor.sqrt(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.sqrt(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.sqrt(Tensor([10, 228170138],"float32"), )
paddle.Tensor.sqrt(Tensor([1058304, 11, 14, 14],"float32"), )
paddle.Tensor.sqrt(Tensor([106106, 5376, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([107143, 11, 44, 44],"float32"), )
paddle.Tensor.sqrt(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.sqrt(Tensor([114085069, 20],"float32"), )
paddle.Tensor.sqrt(Tensor([1140850690, 1, 2],"float32"), )
paddle.Tensor.sqrt(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.sqrt(Tensor([117590, 11, 42, 42],"float32"), )
paddle.Tensor.sqrt(Tensor([120725, 4725, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([1227382, 11, 13, 13],"float32"), )
paddle.Tensor.sqrt(Tensor([129643, 11, 40, 40],"float32"), )
paddle.Tensor.sqrt(Tensor([138588, 4116, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([143648, 11, 38, 38],"float32"), )
paddle.Tensor.sqrt(Tensor([160053, 11, 36, 36],"float32"), )
paddle.Tensor.sqrt(Tensor([1714277, 11, 11, 11],"float32"), )
paddle.Tensor.sqrt(Tensor([179436, 11, 34, 34],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 285212673, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 4725, 241450],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 9261, 123189],"float32"), )
paddle.Tensor.sqrt(Tensor([202566, 11, 32, 32],"float32"), )
paddle.Tensor.sqrt(Tensor([2074274, 11, 10, 10],"float32"), )
paddle.Tensor.sqrt(Tensor([2281701379],"float32"), )
paddle.Tensor.sqrt(Tensor([228170138, 10],"float32"), )
paddle.Tensor.sqrt(Tensor([230475, 11, 30, 30],"float32"), )
paddle.Tensor.sqrt(Tensor([264576, 11, 28, 28],"float32"), )
paddle.Tensor.sqrt(Tensor([271632, 2100, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([306846, 11, 26, 26],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 142606337, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 5376, 106106],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 6804, 83837],"float32"), )
paddle.Tensor.sqrt(Tensor([428570, 11, 22, 22],"float32"), )
paddle.Tensor.sqrt(Tensor([43461, 13125, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([470357, 11, 21, 21],"float32"), )
paddle.Tensor.sqrt(Tensor([518569, 11, 20, 20],"float32"), )
paddle.Tensor.sqrt(Tensor([574592, 11, 19, 19],"float32"), )
paddle.Tensor.sqrt(Tensor([61595, 9261, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([640209, 11, 18, 18],"float32"), )
paddle.Tensor.sqrt(Tensor([66144, 11, 56, 56],"float32"), )
paddle.Tensor.sqrt(Tensor([717742, 11, 17, 17],"float32"), )
paddle.Tensor.sqrt(Tensor([76712, 11, 52, 52],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 13125, 21731],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 2100, 135816],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4116, 69294],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4725, 60363],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 71303169, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([810264, 11, 16, 16],"float32"), )
paddle.Tensor.sqrt(Tensor([83837, 6804, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([921900, 11, 15, 15],"float32"), )
paddle.Tensor.square(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.square(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.square(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.square(Tensor([17825793, 128],"float32"), )
paddle.Tensor.square(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.square(Tensor([2281701379],"float32"), )
paddle.Tensor.square(Tensor([8, 285212673],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 1, 1, 2281701379],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 1, 1, 2281701379],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([1, 1, 1, 2281701379],"int64"), -2, )
paddle.Tensor.squeeze(Tensor([1, 1, 10, 228170138],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 114085069, 20],"int64"), -2, )
paddle.Tensor.squeeze(Tensor([1, 1, 11408507, 200],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 12, 190141782],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 144, 15845149],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 181896, 12544],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([1, 1, 21504, 106106],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 1, 2281701379],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 2281701379],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 1, 24276, 93991],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 1, 253522376, 9],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 27216, 83837],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 1, 285212673, 8],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 285212673, 8],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 1, 570425345, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 1, 60632, 37632],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([1, 10, 1, 228170138],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 10, 1, 429496730],"float16"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 10, 228170138],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 10, 53687092, 8],"float16"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 10, 891290, 256],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 100, 22817014],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 101, 22591103],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 108, 21126865],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 114085069, 1, 20],"int64"), -2, )
paddle.Tensor.squeeze(Tensor([1, 1273271, 1792],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 139265, 128, 128],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 17, 1048577, 128],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 17, 128, 1048577],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 17, 128, 1973791],"float16"), )
paddle.Tensor.squeeze(Tensor([1, 17, 1973791, 128],"float16"), )
paddle.Tensor.squeeze(Tensor([1, 181896, 1, 12544],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([1, 181896, 1, 12544],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([1, 2, 32, 32, 2097153],"float16"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2, 32, 524289, 128],"float16"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2, 524289, 32, 128],"float16"), 0, )
paddle.Tensor.squeeze(Tensor([1, 20, 114085069],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([1, 2048, 1114113],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([1, 20960, 27216, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 21126865, 12, 9],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2281701379, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([1, 2281701379, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([1, 2281701379, 1],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 2281701379],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 2281701379],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2281701379],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([1, 2281701379],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 2281701379],"int32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2281701379],"int64"), -1, )
paddle.Tensor.squeeze(Tensor([1, 2281701379],"int64"), 1, )
paddle.Tensor.squeeze(Tensor([1, 23498, 24276, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 262145, 128, 128],"float16"), )
paddle.Tensor.squeeze(Tensor([1, 26527, 21504, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 285212673, 1, 8],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 28521268, 10, 8],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 30, 17, 4473925],"int64"), )
paddle.Tensor.squeeze(Tensor([1, 30, 19014179, 4],"int64"), )
paddle.Tensor.squeeze(Tensor([1, 300, 1, 7605672],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([1, 300, 607, 12544],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([1, 32769, 32, 32, 128],"float16"), 0, )
paddle.Tensor.squeeze(Tensor([1, 33554433, 17, 4],"int64"), )
paddle.Tensor.squeeze(Tensor([1, 4294967297],"float16"), )
paddle.Tensor.squeeze(Tensor([1, 536870913, 1, 8],"float16"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 570425345, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 60632, 1, 37632],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([1, 79226, 144, 200],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 8912897, 1, 256],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([10, 228170138],"int64"), 1, )
paddle.Tensor.squeeze(Tensor([100, 1, 1, 22817014],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([100, 1, 1819, 12544],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([100, 1819, 1, 12544],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([1073741825, 4, 1],"float16"), 2, )
paddle.Tensor.squeeze(Tensor([11, 1, 207427399],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([11, 51856850, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1114113, 2048, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([111412, 512, 1, 40],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([1118482, 30, 17, 4],"int64"), )
paddle.Tensor.squeeze(Tensor([114085069, 1, 1, 20],"int64"), -2, )
paddle.Tensor.squeeze(Tensor([114085069, 20, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([114085069, 20],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([1140850690, 2, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([11661, 1, 195670],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([11661, 1529, 128],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([1273271, 1, 1792],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1273271, 1, 1792],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([128, 120, 1, 148549],"float32"), axis=2, )
paddle.Tensor.squeeze(Tensor([128, 120, 1, 279621],"float16"), axis=2, )
paddle.Tensor.squeeze(Tensor([128, 120, 3714, 40],"float32"), axis=2, )
paddle.Tensor.squeeze(Tensor([128, 120, 6991, 40],"float16"), axis=2, )
paddle.Tensor.squeeze(Tensor([128, 445645, 1, 40],"float32"), axis=2, )
paddle.Tensor.squeeze(Tensor([128, 838861, 1, 40],"float16"), axis=2, )
paddle.Tensor.squeeze(Tensor([12988, 1, 175678],"float32"), )
paddle.Tensor.squeeze(Tensor([12988, 1, 330688],"float16"), )
paddle.Tensor.squeeze(Tensor([12988, 2745, 64],"float32"), )
paddle.Tensor.squeeze(Tensor([12988, 5167, 64],"float16"), )
paddle.Tensor.squeeze(Tensor([13, 1, 1, 175515491],"int32"), -2, )
paddle.Tensor.squeeze(Tensor([13, 1, 175515491, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([13, 1, 25073642, 7],"int32"), -2, )
paddle.Tensor.squeeze(Tensor([13, 1, 96, 1828287],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([13, 175515491, 1],"float32"), )
paddle.Tensor.squeeze(Tensor([13, 175515491, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([13, 175515491],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([13, 1828287, 96, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([13, 2, 64, 1371215],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([13, 2, 87757746, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([13, 25073642, 1, 7],"int32"), -2, )
paddle.Tensor.squeeze(Tensor([13, 2742430, 64, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([13, 7, 25073642],"float32"), )
paddle.Tensor.squeeze(Tensor([13, 7, 25073642],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([15421, 17, 128, 128],"float16"), )
paddle.Tensor.squeeze(Tensor([15548, 1, 146753],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([15548, 1147, 128],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([16, 1, 142606337, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([16, 1, 96, 1485483],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([16, 10, 111412, 64, 2, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([16, 10, 64, 111412, 2, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([16, 10, 64, 64, 2, 1741],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([16, 10, 64, 64, 3482, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([16, 1485483, 96, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([16, 17409, 64, 64, 2, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([16385, 2, 32, 32, 128],"float16"), 0, )
paddle.Tensor.squeeze(Tensor([17825793, 1, 128],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([17825793, 2, 64, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([181896, 1, 1, 12544],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([192, 120, 1, 186414],"float16"), axis=2, )
paddle.Tensor.squeeze(Tensor([192, 120, 4661, 40],"float16"), axis=2, )
paddle.Tensor.squeeze(Tensor([192, 559241, 1, 40],"float16"), axis=2, )
paddle.Tensor.squeeze(Tensor([19501722, 117],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([2, 1, 1, 1, 1140850690],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([2, 1, 1, 1140850690, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([2, 1, 1140850690, 1, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([2, 1, 1140850690],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([2, 1, 1140850690],"int64"), 1, )
paddle.Tensor.squeeze(Tensor([2, 1, 32, 35651585],"float32"), axis=1, )
paddle.Tensor.squeeze(Tensor([2, 1, 35651585, 32],"float32"), axis=1, )
paddle.Tensor.squeeze(Tensor([2, 1114113, 32, 32],"float32"), axis=1, )
paddle.Tensor.squeeze(Tensor([2, 1140850690, 1, 1, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([2, 1140850690, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([2, 1140850690, 1],"int64"), 1, )
paddle.Tensor.squeeze(Tensor([2, 1140850690],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([2, 1140850690],"int64"), axis=1, )
paddle.Tensor.squeeze(Tensor([2, 2, 570425345],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([2, 636636, 1792],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([20960, 1, 27216, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([209716, 512, 1, 40],"float16"), 2, )
paddle.Tensor.squeeze(Tensor([21126865, 1, 12, 9],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([21126865, 108],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([21126865, 108],"int32"), 0, )
paddle.Tensor.squeeze(Tensor([2228225, 1, 32, 32],"float32"), axis=1, )
paddle.Tensor.squeeze(Tensor([22591103, 101, 1],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([2281701379, 1, 1, 1, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([2281701379, 1, 1],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([2281701379, 1, 1],"int64"), 1, )
paddle.Tensor.squeeze(Tensor([2281701379, 1],"float32"), )
paddle.Tensor.squeeze(Tensor([2281701379, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([2281701379, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([2281701379, 1],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([2281701379, 1],"int64"), -1, )
paddle.Tensor.squeeze(Tensor([2281701379, 1],"int64"), 1, )
paddle.Tensor.squeeze(Tensor([2281701379, 1],"int64"), axis=1, )
paddle.Tensor.squeeze(Tensor([2281701379],"float32"), )
paddle.Tensor.squeeze(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([228170138, 10, 1],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([2281702, 1000, 1, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([23498, 1, 24276, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([23767723, 1, 96, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([2527, 7, 126, 1, 1024],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([26527, 1, 21504, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([26736, 1, 85342],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([26736, 667, 128],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([27853, 10, 64, 64, 2, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([285212673, 1, 1, 8],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([28521268, 1, 10, 8],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([3, 1431655766, 1],"float16"), 2, )
paddle.Tensor.squeeze(Tensor([3, 4, 190141782],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([3, 4, 357913942],"float16"), 2, )
paddle.Tensor.squeeze(Tensor([3, 5895, 126, 1, 1024],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([3, 7, 106106, 1, 1024],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([3, 7, 126, 1, 862322],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([3, 7, 126, 843, 1024],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([3, 760567127, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([325957340, 1, 1, 7],"int32"), -2, )
paddle.Tensor.squeeze(Tensor([325957340, 7, 1],"float32"), )
paddle.Tensor.squeeze(Tensor([325957340, 7, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([325957340, 7],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([35651585, 1, 64],"float32"), )
paddle.Tensor.squeeze(Tensor([4294967297, 1],"float16"), )
paddle.Tensor.squeeze(Tensor([4294968, 1000, 1, 1],"float16"), axis=-1, )
paddle.Tensor.squeeze(Tensor([475355, 120, 1, 40],"float32"), axis=2, )
paddle.Tensor.squeeze(Tensor([5281717, 108, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([53687092, 10, 1, 8],"float16"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([570425345, 1, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([570425345, 4, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([5704254, 100, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([60632, 1, 1, 37632],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([607, 300, 1, 12544],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([64, 1000, 1, 35652],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([64, 1000, 1, 67109],"float16"), axis=-1, )
paddle.Tensor.squeeze(Tensor([64, 1000, 35652, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([64, 1000, 67109, 1],"float16"), axis=-1, )
paddle.Tensor.squeeze(Tensor([64, 1677722, 1, 40],"float16"), 2, )
paddle.Tensor.squeeze(Tensor([64, 35651585, 1, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([64, 512, 1, 131073],"float16"), 2, )
paddle.Tensor.squeeze(Tensor([64, 512, 1, 69633],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([64, 512, 1741, 40],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([64, 512, 3277, 40],"float16"), 2, )
paddle.Tensor.squeeze(Tensor([64, 67108865, 1, 1],"float16"), axis=-1, )
paddle.Tensor.squeeze(Tensor([64, 891290, 1, 40],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([67108865, 1, 64],"float16"), )
paddle.Tensor.squeeze(Tensor([79226, 1, 144, 200],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 512, 1, 557057],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([8, 512, 13927, 40],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([8, 7130317, 1, 40],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([8193, 17, 128, 128],"float32"), )
paddle.Tensor.squeeze(Tensor([891290, 10, 1, 256],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([894785, 120, 1, 40],"float16"), axis=2, )
paddle.Tensor.std(Tensor([1, 1, 2281701379],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 10, 228170138],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 11, 207427399],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 12, 190141782],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 13, 175515491],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 14, 162978670],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 16, 142606337],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 2, 1140850690],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 3, 760567127],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 4, 570425345],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 42253730, 54],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 5, 456340276],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 50704476, 45],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 6, 380283564],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 63380594, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 7, 325957340],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 8, 285212673],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 9, 253522376],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1024, 1024, 2177],"float32"), )
paddle.Tensor.std(Tensor([1024, 1024, 4097],"float16"), )
paddle.Tensor.std(Tensor([1024, 278529, 8],"float32"), )
paddle.Tensor.std(Tensor([1024, 524289, 8],"float16"), )
paddle.Tensor.std(Tensor([10563433, 6, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([12676119, 5, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1444, 1580126],"float32"), axis=1, )
paddle.Tensor.std(Tensor([15845149, 4, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 10, 14260634],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 11, 12964213],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 12, 11883862],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 13, 10969719],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 14, 10186167],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 15, 9507090],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 16, 8912897],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 17, 8388609],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 18, 7922575],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 19, 7505597],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 2, 71303169],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 20, 7130317],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 21, 6790778],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 22, 6482107],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 23, 6200276],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 24, 5941931],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 25, 5704254],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 26, 5484860],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 27, 5281717],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 28, 5093084],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 29, 4917460],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 3, 47535446],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 30, 4753545],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 3961288, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 5281717, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1782580, 1280],"float32"), axis=1, )
paddle.Tensor.std(Tensor([21126865, 3, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2228225, 1024],"float32"), axis=1, )
paddle.Tensor.std(Tensor([278529, 1024, 8],"float32"), )
paddle.Tensor.std(Tensor([2816916, 30, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2914051, 29, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([3018124, 28, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([3129906, 27, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([31690297, 2, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([3250287, 26, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([3380299, 25, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([3521145, 24, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([36, 63380594],"float32"), axis=1, )
paddle.Tensor.std(Tensor([3674238, 23, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([38, 60044774],"float32"), axis=1, )
paddle.Tensor.std(Tensor([3841249, 22, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([3961288, 16, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4024165, 21, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4225373, 20, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([42253730, 1, 54],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4447761, 19, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4527186, 14, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4694859, 18, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4875431, 13, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4971027, 17, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([50704476, 1, 45],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([524289, 1024, 8],"float16"), )
paddle.Tensor.std(Tensor([5281717, 12, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([5281717, 16, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([5633831, 15, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([5761873, 11, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([6036248, 14, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([63380594, 1, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([6338060, 10, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([6500574, 13, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([7042289, 12, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([7042289, 9, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([7682497, 11, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([7922575, 8, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8450746, 10, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([891290, 2560],"float32"), axis=1, )
paddle.Tensor.std(Tensor([9, 253522376],"float32"), axis=1, )
paddle.Tensor.std(Tensor([9054371, 7, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([990322, 2304],"float32"), axis=1, )
paddle.Tensor.subtract(Tensor([190141782, 3, 4],"float32"), Tensor([190141782, 3, 4],"float32"), )
paddle.Tensor.subtract(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.subtract(Tensor([2, 285212673, 4],"float32"), Tensor([2, 285212673, 4],"float32"), )
paddle.Tensor.subtract(Tensor([2, 3, 380283564],"float32"), Tensor([2, 3, 380283564],"float32"), )
paddle.Tensor.subtract(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.Tensor.subtract(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.sum(Tensor([1, 1, 1, 2281701379],"bool"), )
paddle.Tensor.sum(Tensor([1, 1, 1, 4294967297],"float16"), 0, )
paddle.Tensor.sum(Tensor([1, 1, 1, 4294967297],"float16"), 1, )
paddle.Tensor.sum(Tensor([1, 1, 1, 4294967297],"float16"), 2, )
paddle.Tensor.sum(Tensor([1, 1, 1, 4294967297],"float16"), 3, )
paddle.Tensor.sum(Tensor([1, 1, 1140850690, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 1, 13, 175515491],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 1, 17, 252645136],"float16"), )
paddle.Tensor.sum(Tensor([1, 1, 2, 1140850690],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 1, 2281701379, 1],"bool"), )
paddle.Tensor.sum(Tensor([1, 1, 2281701379],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 1, 2281701379],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 1, 252645136, 17],"float16"), )
paddle.Tensor.sum(Tensor([1, 1, 4294967297, 1],"float16"), 0, )
paddle.Tensor.sum(Tensor([1, 1, 4294967297, 1],"float16"), 1, )
paddle.Tensor.sum(Tensor([1, 1, 4294967297, 1],"float16"), 2, )
paddle.Tensor.sum(Tensor([1, 1, 4294967297, 1],"float16"), 3, )
paddle.Tensor.sum(Tensor([1, 1, 83837, 27216],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 1, 858993460, 5],"float16"), 0, )
paddle.Tensor.sum(Tensor([1, 1, 858993460, 5],"float16"), 1, )
paddle.Tensor.sum(Tensor([1, 1, 858993460, 5],"float16"), 2, )
paddle.Tensor.sum(Tensor([1, 1, 858993460, 5],"float16"), 3, )
paddle.Tensor.sum(Tensor([1, 1, 93991, 24276],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 1114113, 64, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 1140850690, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 128, 128, 3, 46422],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([1, 128, 128, 46422, 3],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([1, 128, 1980644, 3, 3],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([1, 128, 256, 23211, 3],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([1, 128, 256, 3, 23211],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([1, 142606337, 4, 4, 1, 1],"float32"), )
paddle.Tensor.sum(Tensor([1, 14861479, 17, 17],"float16"), )
paddle.Tensor.sum(Tensor([1, 190141782, 1, 3, 1, 4],"float32"), )
paddle.Tensor.sum(Tensor([1, 1980644, 128, 3, 3],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([1, 2, 1, 285212673, 1, 4],"float32"), )
paddle.Tensor.sum(Tensor([1, 2, 1, 3, 1, 380283564],"float32"), )
paddle.Tensor.sum(Tensor([1, 2, 1, 3, 95070891, 4],"float32"), )
paddle.Tensor.sum(Tensor([1, 2, 1140850690],"float32"), )
paddle.Tensor.sum(Tensor([1, 2, 1140850690],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 2, 1140850690],"float32"), -2, )
paddle.Tensor.sum(Tensor([1, 2, 2147483649],"float16"), -1, )
paddle.Tensor.sum(Tensor([1, 2, 95070891, 3, 1, 4],"float32"), )
paddle.Tensor.sum(Tensor([1, 2147483649, 2],"float16"), -1, )
paddle.Tensor.sum(Tensor([1, 21504, 106106],"float32"), )
paddle.Tensor.sum(Tensor([1, 221848, 10285],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 2281701379, 1, 1],"bool"), )
paddle.Tensor.sum(Tensor([1, 2281701379, 1],"float32"), -2, )
paddle.Tensor.sum(Tensor([1, 2281701379, 1],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 2281701379],"bool"), axis=-1, )
paddle.Tensor.sum(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.sum(Tensor([1, 2281701379],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 2281701379],"float32"), 1, )
paddle.Tensor.sum(Tensor([1, 2281701379],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 2281701379],"float32"), list[-1,], )
paddle.Tensor.sum(Tensor([1, 228170138, 10],"float32"), )
paddle.Tensor.sum(Tensor([1, 3, 190141782, 4, 1, 1],"float32"), )
paddle.Tensor.sum(Tensor([1, 3, 4, 190141782, 1, 1],"float32"), )
paddle.Tensor.sum(Tensor([1, 3, 4, 4, 1, 47535446],"float32"), )
paddle.Tensor.sum(Tensor([1, 3, 4, 4, 47535446, 1],"float32"), )
paddle.Tensor.sum(Tensor([1, 310, 7360328],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 4294967297, 1, 1],"float16"), 0, )
paddle.Tensor.sum(Tensor([1, 4294967297, 1, 1],"float16"), 1, )
paddle.Tensor.sum(Tensor([1, 4294967297, 1, 1],"float16"), 2, )
paddle.Tensor.sum(Tensor([1, 4294967297, 1, 1],"float16"), 3, )
paddle.Tensor.sum(Tensor([1, 4294967297],"float16"), axis=1, )
paddle.Tensor.sum(Tensor([1, 4294967297],"float16"), list[-1,], )
paddle.Tensor.sum(Tensor([1, 45634028, 25, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 570425345, 2, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 64, 1114113, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 64, 64, 557057],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 6449, 13, 27216],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 65536, 17409, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 65536, 25, 1393],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 7231, 13, 24276],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 760567127, 3],"float32"), )
paddle.Tensor.sum(Tensor([1, 83837, 27216],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 858993460, 1, 5],"float16"), 0, )
paddle.Tensor.sum(Tensor([1, 858993460, 1, 5],"float16"), 1, )
paddle.Tensor.sum(Tensor([1, 858993460, 1, 5],"float16"), 2, )
paddle.Tensor.sum(Tensor([1, 858993460, 1, 5],"float16"), 3, )
paddle.Tensor.sum(Tensor([1, 93991, 24276],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 93991, 24276],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 990322, 256, 3, 3],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([10, 114085069, 1, 2],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([10, 114085069, 2],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([10, 143165577, 3],"float16"), 0, )
paddle.Tensor.sum(Tensor([10, 2, 1, 114085069],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([10, 2, 114085069],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([10, 2, 214748365],"float16"), 0, )
paddle.Tensor.sum(Tensor([10, 2, 57042535, 2],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([10, 228170138],"float32"), 0, )
paddle.Tensor.sum(Tensor([10, 228170138],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.sum(Tensor([10, 228170138],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([10, 28521268, 8],"float32"), axis=2, )
paddle.Tensor.sum(Tensor([10, 429496730],"float16"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([10, 429496730],"float16"), list[0,-1,], )
paddle.Tensor.sum(Tensor([10, 500, 456341],"float32"), axis=2, )
paddle.Tensor.sum(Tensor([10, 5000, 85900],"float16"), 0, )
paddle.Tensor.sum(Tensor([10, 57042535, 4],"float32"), axis=2, )
paddle.Tensor.sum(Tensor([100, 100, 100, 2282],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([100, 100, 7131, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([100, 15802, 38, 38],"float32"), axis=tuple(1,2,), )
paddle.Tensor.sum(Tensor([100, 2346, 38, 256],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([100, 281692, 9, 9],"float32"), axis=tuple(1,2,), )
paddle.Tensor.sum(Tensor([100, 39613, 9, 64],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([100, 4, 150112, 38],"float32"), axis=tuple(1,2,), )
paddle.Tensor.sum(Tensor([100, 4, 22283, 256],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([100, 4, 38, 150112],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([100, 4, 38, 150112],"float32"), axis=tuple(1,2,), )
paddle.Tensor.sum(Tensor([100, 4, 633806, 9],"float32"), axis=tuple(1,2,), )
paddle.Tensor.sum(Tensor([100, 4, 89129, 64],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([100, 4, 9, 633806],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([100, 4, 9, 633806],"float32"), axis=tuple(1,2,), )
paddle.Tensor.sum(Tensor([100, 42949673],"float16"), axis=-2, )
paddle.Tensor.sum(Tensor([100, 7131, 100, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([1000, 1140851, 2],"float32"), list[0,1,], )
paddle.Tensor.sum(Tensor([1000, 2, 1140851],"float32"), list[0,1,], )
paddle.Tensor.sum(Tensor([1000, 2, 2, 570426],"float32"), list[0,1,], )
paddle.Tensor.sum(Tensor([1000, 2, 380284, 3],"float32"), list[0,1,], )
paddle.Tensor.sum(Tensor([1000, 380284, 2, 3],"float32"), list[0,1,], )
paddle.Tensor.sum(Tensor([10611, 21504, 10],"float32"), )
paddle.Tensor.sum(Tensor([1073741825, 2, 2],"float16"), -1, )
paddle.Tensor.sum(Tensor([1073741825, 4],"float16"), axis=-2, )
paddle.Tensor.sum(Tensor([107374183, 40],"float16"), axis=-2, )
paddle.Tensor.sum(Tensor([1140850690, 1, 2, 1, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([1140850690, 1, 2, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([1140850690, 2, 1],"float32"), -2, )
paddle.Tensor.sum(Tensor([1140850690, 2, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([1140850690, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([1140850690, 2],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.sum(Tensor([1140850690, 2],"float32"), list[-1,], )
paddle.Tensor.sum(Tensor([1140850690, 2],"float32"), list[-2,-1,], )
paddle.Tensor.sum(Tensor([11408507, 200],"float32"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([1140851, 500, 4],"float32"), axis=2, )
paddle.Tensor.sum(Tensor([11883862, 3, 8, 8],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([12, 190141782],"float32"), axis=0, )
paddle.Tensor.sum(Tensor([12, 1901418, 10, 10, 1],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([12, 23768, 10, 10, 80],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([12, 3, 10, 10, 633806],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([12, 3, 10, 6338060, 1],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([12, 3, 10, 79226, 80],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([12, 3, 6338060, 10, 1],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([12, 3, 79226, 10, 80],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([12, 357913942],"float16"), axis=0, )
paddle.Tensor.sum(Tensor([128, 17825793, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([128, 17825793],"float32"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([128, 2, 8912897],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([1393, 65536, 25],"float32"), 2, )
paddle.Tensor.sum(Tensor([14, 12782641, 4, 2, 3],"float16"), 0, )
paddle.Tensor.sum(Tensor([14, 2, 25565282, 2, 3],"float16"), 0, )
paddle.Tensor.sum(Tensor([14, 2, 4, 12782641, 3],"float16"), 0, )
paddle.Tensor.sum(Tensor([14, 2, 4, 2, 19173962],"float16"), 0, )
paddle.Tensor.sum(Tensor([1431655766, 3],"float16"), list[0,-1,], )
paddle.Tensor.sum(Tensor([14449, 157920],"bool"), 1, keepdim=True, )
paddle.Tensor.sum(Tensor([14861479, 1, 17, 17],"float16"), )
paddle.Tensor.sum(Tensor([15474, 128, 128, 3, 3],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([16, 10, 111412, 64, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([16, 10, 122937, 58, 2],"float32"), axis=tuple(2,3,), )
paddle.Tensor.sum(Tensor([16, 10, 14260634],"float32"), 2, )
paddle.Tensor.sum(Tensor([16, 10, 4, 3565159],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([16, 10, 4240, 3364],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([16, 10, 58, 122937, 2],"float32"), axis=tuple(2,3,), )
paddle.Tensor.sum(Tensor([16, 10, 58, 58, 4240],"float32"), axis=tuple(2,3,), )
paddle.Tensor.sum(Tensor([16, 10, 64, 111412, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([16, 10, 64, 64, 3482],"float32"), -1, )
paddle.Tensor.sum(Tensor([16, 10598, 4, 3364],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([16, 11, 2, 101283, 64],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 11, 2, 64, 101283],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 11, 3166, 64, 64],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 17409, 2, 64, 64],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 17409, 64, 64, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([16, 21196, 58, 58, 2],"float32"), axis=tuple(2,3,), )
paddle.Tensor.sum(Tensor([16, 5704254, 25],"float32"), 2, )
paddle.Tensor.sum(Tensor([16, 65536, 2177],"float32"), 2, )
paddle.Tensor.sum(Tensor([16520, 138120],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([16957, 10, 4, 3364],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([17409, 4, 4, 4, 4, 4, 128],"float32"), )
paddle.Tensor.sum(Tensor([17409, 64, 64, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([17825793, 128],"float32"), )
paddle.Tensor.sum(Tensor([17825793, 128],"float32"), axis=0, )
paddle.Tensor.sum(Tensor([181896, 12544],"float32"), -1, )
paddle.Tensor.sum(Tensor([181896, 12544],"float32"), 1, )
paddle.Tensor.sum(Tensor([18416, 123904],"float32"), 1, )
paddle.Tensor.sum(Tensor([190141782, 12],"bool"), axis=-1, )
paddle.Tensor.sum(Tensor([190141782, 2, 2, 3],"float32"), list[0,1,], )
paddle.Tensor.sum(Tensor([190141782, 3, 1, 4, 1],"float32"), )
paddle.Tensor.sum(Tensor([190141782, 3, 4],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([190141782, 3, 4],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([19014179, 2, 1, 2, 1, 1, 2, 3, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 1, 1140850690, 1, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([2, 1, 2, 1, 570425345],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([2, 1, 2, 570425345, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([2, 1140850690],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 1140850690],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 1140850690],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 1140850690],"float32"), 1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 1140850690],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 1140850690],"float32"), list[-2,-1,], )
paddle.Tensor.sum(Tensor([2, 17825793, 8, 8],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 19014179, 1, 2, 1, 1, 2, 3, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 2, 1, 19014179, 1, 1, 2, 3, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 2, 1, 2, 1, 1, 19014179, 3, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 2, 1, 2, 1, 1, 2, 28521268, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 2, 1, 2, 1, 1, 2, 3, 47535446],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 2, 1, 2, 1, 9507090, 2, 3, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 2, 1, 2, 9507090, 1, 2, 3, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 2, 9507090, 2, 1, 1, 2, 3, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 285212673, 1, 4, 1],"float32"), )
paddle.Tensor.sum(Tensor([2, 285212673, 4],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 3, 1, 380283564, 1],"float32"), )
paddle.Tensor.sum(Tensor([2, 3, 1, 4, 95070891],"float32"), )
paddle.Tensor.sum(Tensor([2, 3, 380283564],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 3, 47535446, 8],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 3, 715827883],"float16"), list[-2,-1,], )
paddle.Tensor.sum(Tensor([2, 3, 8, 47535446],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 3, 95070891, 4, 1],"float32"), )
paddle.Tensor.sum(Tensor([2, 570425345, 2, 1, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([2, 715827883, 3],"float16"), list[-2,-1,], )
paddle.Tensor.sum(Tensor([207427399, 11],"float32"), )
paddle.Tensor.sum(Tensor([207427399, 11],"float32"), 0, )
paddle.Tensor.sum(Tensor([21298, 107136],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([21298, 107136],"float32"), 1, keepdim=True, )
paddle.Tensor.sum(Tensor([2147483649, 2],"float16"), list[-1,], )
paddle.Tensor.sum(Tensor([214748365, 20],"float16"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([21474837, 10, 20],"float16"), list[0,-1,], )
paddle.Tensor.sum(Tensor([21559, 105840],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([221848, 1, 10285],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2281701379, 1, 1, 1],"bool"), )
paddle.Tensor.sum(Tensor([2281701379, 1],"float32"), list[-2,-1,], )
paddle.Tensor.sum(Tensor([2281701379],"bool"), axis=-1, )
paddle.Tensor.sum(Tensor([2281701379],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([2281701379],"float32"), )
paddle.Tensor.sum(Tensor([2281701379],"float32"), -1, )
paddle.Tensor.sum(Tensor([2281701379],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([2281701379],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([2281701379],"float32"), list[-1,], )
paddle.Tensor.sum(Tensor([228170138, 10],"float32"), 0, )
paddle.Tensor.sum(Tensor([228170138, 10],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([23283, 280, 350],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([25321, 11, 2, 64, 64],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([253522376, 3, 3],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([27853, 10, 64, 64, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([286331154, 3, 5],"float16"), 1, )
paddle.Tensor.sum(Tensor([286332, 5000, 3],"float16"), 0, )
paddle.Tensor.sum(Tensor([2910334, 28, 28],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 1, 2, 1, 380283564],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([3, 1, 2, 380283564, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([3, 1, 2, 380283564],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([3, 1, 760567127, 1, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([3, 1, 760567127, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([3, 2173049, 350],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 253522376, 3],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 27163112, 28],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 28, 27163112],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 280, 2716312],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 3, 253522376],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 3, 3, 84507459],"float32"), list[1,2,3,], )
paddle.Tensor.sum(Tensor([3, 3, 84507459, 3],"float32"), list[1,2,3,], )
paddle.Tensor.sum(Tensor([3, 380283564, 2, 1, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([3, 380283564, 2, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4, 2, 5281717],"bool"), axis=3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4, 2, 5281717],"bool"), axis=4, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4, 2, 5281717],"bool"), axis=5, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4, 2112687, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4, 2112687, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4, 2112687, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4225373, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4225373, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4225373, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3169030, 4, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3169030, 4, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3169030, 4, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6338060, 3, 4, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6338060, 3, 4, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6338060, 3, 4, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 84507459, 3, 3],"float32"), list[1,2,3,], )
paddle.Tensor.sum(Tensor([3169030, 6, 3, 4, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.sum(Tensor([3169030, 6, 3, 4, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.sum(Tensor([3169030, 6, 3, 4, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.sum(Tensor([33554433, 128],"float16"), axis=0, )
paddle.Tensor.sum(Tensor([33914, 10, 58, 58, 2],"float32"), axis=tuple(2,3,), )
paddle.Tensor.sum(Tensor([380283564, 2, 3],"float32"), )
paddle.Tensor.sum(Tensor([395032, 4, 38, 38],"float32"), axis=tuple(1,2,), )
paddle.Tensor.sum(Tensor([4, 214748365, 5],"float16"), 1, )
paddle.Tensor.sum(Tensor([4, 3, 357913942],"float16"), 1, )
paddle.Tensor.sum(Tensor([4, 570425345],"bool"), 1, keepdim=True, )
paddle.Tensor.sum(Tensor([4, 7, 81489335],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([4, 7, 81489335],"bool"), axis=2, keepdim=True, )
paddle.Tensor.sum(Tensor([4, 95070891, 6],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([4, 95070891, 6],"bool"), axis=2, keepdim=True, )
paddle.Tensor.sum(Tensor([4294967297, 1, 1, 1],"float16"), 0, )
paddle.Tensor.sum(Tensor([4294967297, 1, 1, 1],"float16"), 1, )
paddle.Tensor.sum(Tensor([4294967297, 1, 1, 1],"float16"), 2, )
paddle.Tensor.sum(Tensor([4294967297, 1, 1, 1],"float16"), 3, )
paddle.Tensor.sum(Tensor([4294967297],"float16"), -1, )
paddle.Tensor.sum(Tensor([4294967297],"float16"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([4294967297],"float16"), 0, )
paddle.Tensor.sum(Tensor([429496730, 10],"float16"), axis=1, )
paddle.Tensor.sum(Tensor([47535446, 3, 4, 4, 1, 1],"float32"), )
paddle.Tensor.sum(Tensor([477218589, 3, 3],"float16"), list[-2,-1,], )
paddle.Tensor.sum(Tensor([5, 114085069, 4],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([5, 3, 152113426],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([54326224, 7, 6],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([54326224, 7, 6],"bool"), axis=2, keepdim=True, )
paddle.Tensor.sum(Tensor([570425345, 1, 2, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([570425345, 2, 1, 2],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([570425345, 2, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([570425345, 2, 2],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([570425345, 2, 2],"float32"), list[0,1,], )
paddle.Tensor.sum(Tensor([570426, 500, 8],"float32"), axis=2, )
paddle.Tensor.sum(Tensor([58638, 4, 38, 256],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([6449, 1, 13, 27216],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([697, 65536, 25, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([7042289, 4, 9, 9],"float32"), axis=tuple(1,2,), )
paddle.Tensor.sum(Tensor([7131, 100, 100, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([715827883, 2, 3],"float16"), 0, )
paddle.Tensor.sum(Tensor([7231, 1, 13, 24276],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([7360328, 310, 1],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([760567127, 3],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([760567127, 3],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([760567127, 3],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([7605672, 3, 10, 10, 1],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([7737, 128, 256, 3, 3],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([80, 128, 8, 4, 4, 4, 436],"float32"), )
paddle.Tensor.sum(Tensor([80, 128, 8, 4, 4, 436, 4],"float32"), )
paddle.Tensor.sum(Tensor([80, 128, 8, 4, 436, 4, 4],"float32"), )
paddle.Tensor.sum(Tensor([80, 128, 8, 436, 4, 4, 4],"float32"), )
paddle.Tensor.sum(Tensor([80, 128, 871, 4, 4, 4, 4],"float32"), )
paddle.Tensor.sum(Tensor([80, 13927, 8, 4, 4, 4, 4],"float32"), )
paddle.Tensor.sum(Tensor([80, 4, 4, 4, 4, 4, 27853],"float32"), )
paddle.Tensor.sum(Tensor([80, 4, 4, 4, 4, 871, 128],"float32"), )
paddle.Tensor.sum(Tensor([80, 4, 4, 4, 871, 4, 128],"float32"), )
paddle.Tensor.sum(Tensor([80, 4, 4, 871, 4, 4, 128],"float32"), )
paddle.Tensor.sum(Tensor([80, 4, 871, 4, 4, 4, 128],"float32"), )
paddle.Tensor.sum(Tensor([80, 871, 4, 4, 4, 4, 128],"float32"), )
paddle.Tensor.sum(Tensor([83837, 1, 27216],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([84507459, 3, 3, 3],"float32"), list[1,2,3,], )
paddle.Tensor.sum(Tensor([858993460, 1, 1, 5],"float16"), 0, )
paddle.Tensor.sum(Tensor([858993460, 1, 1, 5],"float16"), 1, )
paddle.Tensor.sum(Tensor([858993460, 1, 1, 5],"float16"), 2, )
paddle.Tensor.sum(Tensor([858993460, 1, 1, 5],"float16"), 3, )
paddle.Tensor.sum(Tensor([8705, 128, 8, 4, 4, 4, 4],"float32"), )
paddle.Tensor.sum(Tensor([89478486, 2, 4, 2, 3],"float16"), 0, )
paddle.Tensor.sum(Tensor([9, 10, 47721859],"float16"), list[0,-1,], )
paddle.Tensor.sum(Tensor([9, 23860930, 20],"float16"), list[0,-1,], )
paddle.Tensor.sum(Tensor([9126806, 10, 25],"float32"), 2, )
paddle.Tensor.sum(Tensor([93991, 1, 24276],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([93991, 1, 24276],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([95070891, 2, 1, 3, 1, 4],"float32"), )
paddle.Tensor.sum(Tensor([95071, 3, 10, 10, 80],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([990322, 4, 9, 64],"float32"), axis=1, )
paddle.Tensor.tanh(Tensor([1, 1431655766, 3],"float16"), )
paddle.Tensor.tanh(Tensor([1, 2, 1140850690],"float32"), )
paddle.Tensor.tanh(Tensor([1, 2, 2147483649],"float16"), )
paddle.Tensor.tanh(Tensor([1, 760567127, 3],"float32"), )
paddle.Tensor.tanh(Tensor([1073741825, 4],"float16"), )
paddle.Tensor.tanh(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.tanh(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.tanh(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.tanh(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.tanh(Tensor([2281701379],"float32"), )
paddle.Tensor.tanh(Tensor([380283564, 2, 3],"float32"), )
paddle.Tensor.tanh(Tensor([4294967297],"float16"), )
paddle.Tensor.tanh(Tensor([715827883, 2, 3],"float16"), )
paddle.Tensor.tanh(Tensor([760567127, 3],"float32"), )
paddle.Tensor.tile(Tensor([1, 1, 81489335, 28],"float32"), list[1,3,1,1,], )
paddle.Tensor.tile(Tensor([1, 142606337, 2, 1, 8],"float32"), list[1,1,1,2,1,], )
paddle.Tensor.tile(Tensor([1, 2910334, 28, 28],"float32"), list[1,3,1,1,], )
paddle.Tensor.tile(Tensor([1, 47159, 48384],"bool"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([1, 512, 1114113, 4],"float32"), tuple(1,1,1,1,), )
paddle.Tensor.tile(Tensor([1, 61595, 37044],"bool"), list[1,14,1,], )
paddle.Tensor.tile(Tensor([100, 22817014],"float32"), list[2,1,1,], )
paddle.Tensor.tile(Tensor([142606337, 16],"float32"), tuple(1,1,), )
paddle.Tensor.tile(Tensor([2910334, 1, 28, 28],"float32"), list[1,3,1,1,], )
paddle.Tensor.tile(Tensor([4, 1114113, 512],"float32"), tuple(1,2,1,), )
paddle.Tensor.transpose(Tensor([1, 500, 4563403],"int64"), list[2,1,0,], )
paddle.Tensor.transpose(Tensor([1, 570425345, 2, 2],"float32"), list[1,0,2,3,], )
paddle.Tensor.transpose(Tensor([1, 570425345, 4],"float32"), perm=list[2,0,1,], )
paddle.Tensor.transpose(Tensor([1, 570425345, 4],"int64"), list[2,1,0,], )
paddle.Tensor.transpose(Tensor([1, 57066, 14, 14, 384],"float16"), list[0,4,1,2,3,], )
paddle.Tensor.transpose(Tensor([1, 5820667, 8, 1, 7, 1, 7, 1],"float32"), list[0,1,3,5,2,4,6,7,], )
paddle.Tensor.transpose(Tensor([1, 5895, 126, 3, 1024],"float32"), list[3,1,2,0,4,], )
paddle.Tensor.transpose(Tensor([1, 69633, 1024, 32],"float32"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([1, 7, 106106, 3, 1024],"float32"), list[3,1,2,0,4,], )
paddle.Tensor.transpose(Tensor([1, 7, 126, 2527, 1024],"float32"), list[3,1,2,0,4,], )
paddle.Tensor.transpose(Tensor([1, 7, 126, 3, 862322],"float32"), list[3,1,2,0,4,], )
paddle.Tensor.transpose(Tensor([1, 71303169, 1, 32],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([1, 71303169, 8, 4],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([1, 80912, 25, 376, 3],"float32"), list[0,1,3,2,4,], )
paddle.Tensor.transpose(Tensor([1, 8912897, 256],"float32"), perm=list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 8912897, 256],"float32"), tuple(0,2,1,), )
paddle.Tensor.transpose(Tensor([1, 990322, 256, 3, 3],"float32"), tuple(0,2,1,3,4,), )
paddle.Tensor.transpose(Tensor([10, 16, 14260634],"float32"), list[1,2,0,], )
paddle.Tensor.transpose(Tensor([10, 28521268, 8],"float32"), list[1,2,0,], )
paddle.Tensor.transpose(Tensor([100, 120, 357914],"float16"), tuple(2,0,1,), )
paddle.Tensor.transpose(Tensor([100, 14316558, 3],"float16"), tuple(2,0,1,), )
paddle.Tensor.transpose(Tensor([100, 15802, 19, 19, 2, 2],"float32"), perm=list[0,1,4,2,5,3,], )
paddle.Tensor.transpose(Tensor([100, 15802, 2, 19, 2, 19],"float32"), perm=list[0,1,3,5,2,4,], )
paddle.Tensor.transpose(Tensor([100, 4, 19, 19, 2, 7901],"float32"), perm=list[0,1,4,2,5,3,], )
paddle.Tensor.transpose(Tensor([100, 4, 19, 19, 7901, 2],"float32"), perm=list[0,1,4,2,5,3,], )
paddle.Tensor.transpose(Tensor([100, 4, 19, 75056, 2, 2],"float32"), perm=list[0,1,4,2,5,3,], )
paddle.Tensor.transpose(Tensor([100, 4, 2, 19, 2, 75056],"float32"), perm=list[0,1,3,5,2,4,], )
paddle.Tensor.transpose(Tensor([100, 4, 2, 19, 7901, 19],"float32"), perm=list[0,1,3,5,2,4,], )
paddle.Tensor.transpose(Tensor([100, 4, 2, 75056, 2, 19],"float32"), perm=list[0,1,3,5,2,4,], )
paddle.Tensor.transpose(Tensor([100, 4, 75056, 19, 2, 2],"float32"), perm=list[0,1,4,2,5,3,], )
paddle.Tensor.transpose(Tensor([100, 4, 7901, 19, 2, 19],"float32"), perm=list[0,1,3,5,2,4,], )
paddle.Tensor.transpose(Tensor([1024, 129, 1, 129, 1, 134],"float32"), tuple(0,1,3,5,2,4,), )
paddle.Tensor.transpose(Tensor([1024, 129, 1, 129, 134, 1],"float32"), tuple(0,1,3,5,2,4,), )
paddle.Tensor.transpose(Tensor([1024, 129, 1, 17274, 1, 1],"float32"), tuple(0,1,3,5,2,4,), )
paddle.Tensor.transpose(Tensor([1024, 129, 129, 1, 1, 134],"float32"), tuple(0,3,1,4,2,5,), )
paddle.Tensor.transpose(Tensor([1024, 129, 129, 1, 134, 1],"float32"), tuple(0,3,1,4,2,5,), )
paddle.Tensor.transpose(Tensor([1024, 129, 129, 134, 1, 1],"float32"), tuple(0,3,1,4,2,5,), )
paddle.Tensor.transpose(Tensor([1024, 129, 134, 129, 1, 1],"float32"), tuple(0,1,3,5,2,4,), )
paddle.Tensor.transpose(Tensor([1024, 129, 17274, 1, 1, 1],"float32"), tuple(0,3,1,4,2,5,), )
paddle.Tensor.transpose(Tensor([1024, 144, 3, 162, 32],"float32"), tuple(2,0,3,1,4,), )
paddle.Tensor.transpose(Tensor([1024, 144, 3, 8, 645],"float32"), tuple(2,0,3,1,4,), )
paddle.Tensor.transpose(Tensor([1024, 144, 61, 8, 32],"float32"), tuple(2,0,3,1,4,), )
paddle.Tensor.transpose(Tensor([1024, 17274, 1, 129, 1, 1],"float32"), tuple(0,1,3,5,2,4,), )
paddle.Tensor.transpose(Tensor([1024, 17274, 129, 1, 1, 1],"float32"), tuple(0,3,1,4,2,5,), )
paddle.Tensor.transpose(Tensor([1024, 2902, 3, 8, 32],"float32"), tuple(2,0,3,1,4,), )
paddle.Tensor.transpose(Tensor([111412, 10, 8, 256],"float32"), tuple(0,3,1,2,), )
paddle.Tensor.transpose(Tensor([112, 12, 197, 16222],"float16"), tuple(0,1,3,2,), )
paddle.Tensor.transpose(Tensor([112, 12, 197, 16222],"float16"), tuple(0,2,1,3,), )
paddle.Tensor.transpose(Tensor([112, 12, 49933, 64],"float16"), tuple(0,1,3,2,), )
paddle.Tensor.transpose(Tensor([112, 12, 49933, 64],"float16"), tuple(0,2,1,3,), )
paddle.Tensor.transpose(Tensor([112, 3042, 197, 64],"float16"), tuple(0,1,3,2,), )
paddle.Tensor.transpose(Tensor([112, 3042, 197, 64],"float16"), tuple(0,2,1,3,), )
paddle.Tensor.transpose(Tensor([1140850690, 1, 2],"float32"), tuple(1,2,0,), )
paddle.Tensor.transpose(Tensor([11408507, 1, 200],"float32"), list[1,0,2,], )
paddle.Tensor.transpose(Tensor([1140851, 500, 4],"int64"), list[2,1,0,], )
paddle.Tensor.transpose(Tensor([115, 19, 1024, 1024],"float32"), tuple(1,0,2,3,), )
paddle.Tensor.transpose(Tensor([11641334, 4, 7, 7],"float32"), list[2,3,0,1,], )
paddle.Tensor.transpose(Tensor([11641334, 4, 7, 7],"float32"), tuple(2,0,1,3,), )
paddle.Tensor.transpose(Tensor([11930465, 120, 3],"float16"), tuple(2,0,1,), )
paddle.Tensor.transpose(Tensor([12, 1, 11883862, 16],"float32"), list[0,3,2,1,], )
paddle.Tensor.transpose(Tensor([12, 1, 256, 742742],"float32"), list[0,3,2,1,], )
paddle.Tensor.transpose(Tensor([12, 22370, 85, 10, 10],"float32"), tuple(0,1,3,4,2,), )
paddle.Tensor.transpose(Tensor([12, 3, 633806, 10, 10],"float32"), tuple(0,1,3,4,2,), )
paddle.Tensor.transpose(Tensor([12, 3, 85, 10, 74566],"float32"), tuple(0,1,3,4,2,), )
paddle.Tensor.transpose(Tensor([12, 3, 85, 74566, 10],"float32"), tuple(0,1,3,4,2,), )
paddle.Tensor.transpose(Tensor([12, 46422, 256, 16],"float32"), list[0,3,2,1,], )
paddle.Tensor.transpose(Tensor([1273271, 1792],"float32"), list[1,0,], )
paddle.Tensor.transpose(Tensor([128, 1, 16, 49, 42800],"float16"), list[0,1,2,4,3,], )
paddle.Tensor.transpose(Tensor([128, 1, 16, 65537, 32],"float16"), list[0,1,2,4,3,], )
paddle.Tensor.transpose(Tensor([128, 1, 21400, 49, 32],"float16"), list[0,1,2,4,3,], )
paddle.Tensor.transpose(Tensor([128, 1, 21846, 3, 16, 32],"float16"), list[3,0,1,4,2,5,], )
paddle.Tensor.transpose(Tensor([128, 1, 49, 1338, 16, 32],"float16"), list[3,0,1,4,2,5,], )
paddle.Tensor.transpose(Tensor([128, 1, 49, 3, 16, 14267],"float16"), list[3,0,1,4,2,5,], )
paddle.Tensor.transpose(Tensor([128, 1, 49, 3, 7134, 32],"float16"), list[3,0,1,4,2,5,], )
paddle.Tensor.transpose(Tensor([128, 128, 1, 14, 1422, 7],"float32"), list[0,2,4,1,3,5,], )
paddle.Tensor.transpose(Tensor([128, 128, 1, 14, 1422, 7],"float32"), list[0,2,4,3,5,1,], )
paddle.Tensor.transpose(Tensor([128, 128, 1, 14, 2, 4974],"float32"), list[0,2,4,1,3,5,], )
paddle.Tensor.transpose(Tensor([128, 128, 1, 14, 2, 4974],"float32"), list[0,2,4,3,5,1,], )
paddle.Tensor.transpose(Tensor([128, 128, 1, 9948, 2, 7],"float32"), list[0,2,4,1,3,5,], )
paddle.Tensor.transpose(Tensor([128, 128, 1, 9948, 2, 7],"float32"), list[0,2,4,3,5,1,], )
paddle.Tensor.transpose(Tensor([128, 128, 139265],"float32"), list[2,0,1,], )
paddle.Tensor.transpose(Tensor([128, 128, 711, 14, 2, 7],"float32"), list[0,2,4,1,3,5,], )
paddle.Tensor.transpose(Tensor([128, 128, 711, 14, 2, 7],"float32"), list[0,2,4,3,5,1,], )
paddle.Tensor.transpose(Tensor([128, 1338, 16, 49, 32],"float16"), list[0,1,2,4,3,], )
paddle.Tensor.transpose(Tensor([128, 2691, 6625],"float32"), tuple(1,0,2,), )
paddle.Tensor.transpose(Tensor([128, 278529, 64],"float32"), list[2,0,1,], )
paddle.Tensor.transpose(Tensor([128, 40, 445645],"float32"), tuple(1,0,2,), )
paddle.Tensor.transpose(Tensor([128, 446, 49, 3, 16, 32],"float16"), list[3,0,1,4,2,5,], )
paddle.Tensor.transpose(Tensor([128, 90948, 1, 14, 2, 7],"float32"), list[0,2,4,1,3,5,], )
paddle.Tensor.transpose(Tensor([128, 90948, 1, 14, 2, 7],"float32"), list[0,2,4,3,5,1,], )
paddle.Tensor.transpose(Tensor([13, 1567103, 7, 16],"float32"), perm=tuple(0,2,1,3,), )
paddle.Tensor.transpose(Tensor([13, 3581949, 7, 7],"float32"), tuple(2,0,1,3,), )
paddle.Tensor.transpose(Tensor([13, 4, 2742430, 16],"float32"), perm=tuple(0,2,1,3,), )
paddle.Tensor.transpose(Tensor([13, 4, 6268411, 7],"float32"), tuple(2,0,1,3,), )
paddle.Tensor.transpose(Tensor([13, 4, 7, 6268411],"float32"), perm=tuple(0,2,1,3,), )
paddle.Tensor.transpose(Tensor([13, 4, 7, 6268411],"float32"), tuple(2,0,1,3,), )
paddle.Tensor.transpose(Tensor([137114, 129, 1, 129, 1, 1],"float32"), tuple(0,1,3,5,2,4,), )
paddle.Tensor.transpose(Tensor([137114, 129, 129, 1, 1, 1],"float32"), tuple(0,3,1,4,2,5,), )
paddle.Tensor.transpose(Tensor([14, 14, 14, 2039, 768],"float16"), tuple(0,3,1,2,4,), )
paddle.Tensor.transpose(Tensor([14, 14, 14, 8, 195653],"float16"), tuple(0,3,1,2,4,), )
paddle.Tensor.transpose(Tensor([14, 14, 3567, 8, 768],"float16"), tuple(0,3,1,2,4,), )
paddle.Tensor.transpose(Tensor([14, 2039, 14, 14, 768],"float16"), tuple(0,2,3,1,4,), )
paddle.Tensor.transpose(Tensor([14, 3326096, 7, 7],"float32"), list[2,3,0,1,], )
paddle.Tensor.transpose(Tensor([14, 3567, 14, 8, 768],"float16"), tuple(0,3,1,2,4,), )
paddle.Tensor.transpose(Tensor([14, 4, 5820667, 7],"float32"), list[2,3,0,1,], )
paddle.Tensor.transpose(Tensor([14, 4, 7, 5820667],"float32"), list[2,3,0,1,], )
paddle.Tensor.transpose(Tensor([14, 64, 280, 376, 25],"float32"), list[0,1,4,3,2,], )
paddle.Tensor.transpose(Tensor([14, 8, 14, 14, 195653],"float16"), tuple(0,2,3,1,4,), )
paddle.Tensor.transpose(Tensor([14, 8, 14, 3567, 768],"float16"), tuple(0,2,3,1,4,), )
paddle.Tensor.transpose(Tensor([14, 8, 3567, 14, 768],"float16"), tuple(0,2,3,1,4,), )
paddle.Tensor.transpose(Tensor([140, 1164134, 1, 1, 2, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.Tensor.transpose(Tensor([140, 188, 1, 1, 12385, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.Tensor.transpose(Tensor([140, 188, 1, 1, 2, 43346],"float32"), list[2,1,0,3,4,5,], )
paddle.Tensor.transpose(Tensor([140, 188, 1, 6193, 2, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.Tensor.transpose(Tensor([140, 188, 6193, 1, 2, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.Tensor.transpose(Tensor([142606337, 4, 4],"float32"), perm=list[0,1,2,], )
paddle.Tensor.transpose(Tensor([1431655766, 3],"float16"), perm=list[0,1,], )
paddle.Tensor.transpose(Tensor([15158, 12, 14, 14, 64],"float32"), list[0,2,3,1,4,], )
paddle.Tensor.transpose(Tensor([15474, 256, 192, 3],"float32"), tuple(3,0,1,2,), )
paddle.Tensor.transpose(Tensor([15845149, 1, 12, 1, 12, 1],"float32"), list[0,1,3,2,4,5,], )
paddle.Tensor.transpose(Tensor([16, 11, 101283, 64, 2],"float32"), list[0,1,4,2,3,], )
paddle.Tensor.transpose(Tensor([16, 11, 64, 101283, 2],"float32"), list[0,1,4,2,3,], )
paddle.Tensor.transpose(Tensor([16, 11, 64, 64, 3166],"float32"), list[0,1,4,2,3,], )
paddle.Tensor.transpose(Tensor([16, 17409, 64, 64, 2],"float32"), list[0,1,4,2,3,], )
paddle.Tensor.transpose(Tensor([17825793, 16, 8],"float32"), list[1,2,0,], )
paddle.Tensor.transpose(Tensor([1784, 192, 16, 28, 28],"float16"), list[0,2,3,4,1,], )
paddle.Tensor.transpose(Tensor([181896, 64, 7, 2, 7, 2],"float32"), list[0,1,2,4,3,5,], )
paddle.Tensor.transpose(Tensor([2, 1, 1073741825, 2],"float16"), list[3,0,1,2,], )
paddle.Tensor.transpose(Tensor([2, 178956971, 3, 2, 2],"float16"), tuple(0,2,3,4,1,), )
paddle.Tensor.transpose(Tensor([2, 17895698, 3, 5, 8],"float16"), perm=list[1,0,2,3,4,], )
paddle.Tensor.transpose(Tensor([2, 2147483649],"float16"), perm=list[0,1,], )
paddle.Tensor.transpose(Tensor([2, 33554433, 32, 2],"float16"), list[3,0,1,2,], )
paddle.Tensor.transpose(Tensor([2, 4, 134217729, 2, 2],"float16"), tuple(0,2,3,4,1,), )
paddle.Tensor.transpose(Tensor([2, 4, 13421773, 5, 8],"float16"), perm=list[1,0,2,3,4,], )
paddle.Tensor.transpose(Tensor([2, 4, 3, 2, 89478486],"float16"), tuple(0,2,3,4,1,), )
paddle.Tensor.transpose(Tensor([2, 4, 3, 22369622, 8],"float16"), perm=list[1,0,2,3,4,], )
paddle.Tensor.transpose(Tensor([2, 4, 3, 5, 35791395],"float16"), perm=list[1,0,2,3,4,], )
paddle.Tensor.transpose(Tensor([2, 4, 3, 89478486, 2],"float16"), tuple(0,2,3,4,1,), )
paddle.Tensor.transpose(Tensor([2001, 1140281],"float32"), perm=list[1,0,], )
paddle.Tensor.transpose(Tensor([20632, 144, 3, 8, 32],"float32"), tuple(2,0,3,1,4,), )
paddle.Tensor.transpose(Tensor([22369622, 1, 3, 64],"float16"), list[2,1,3,0,], )
paddle.Tensor.transpose(Tensor([2281701379],"int64"), list[0,], )
paddle.Tensor.transpose(Tensor([2281702, 1000],"float32"), perm=list[1,0,], )
paddle.Tensor.transpose(Tensor([22818, 10, 10000],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([25321, 11, 64, 64, 2],"float32"), list[0,1,4,2,3,], )
paddle.Tensor.transpose(Tensor([256, 38, 234550],"float32"), perm=list[1,0,2,], )
paddle.Tensor.transpose(Tensor([256, 891290, 10],"float32"), perm=list[1,0,2,], )
paddle.Tensor.transpose(Tensor([2640859, 4, 6, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.Tensor.transpose(Tensor([2640859, 4, 6, 6, 6],"float32"), list[2,0,1,3,4,], )
paddle.Tensor.transpose(Tensor([2640859, 4, 6, 6, 6],"float32"), list[3,0,1,2,4,], )
paddle.Tensor.transpose(Tensor([2640859, 4, 6, 6, 6],"float32"), list[4,0,1,2,3,], )
paddle.Tensor.transpose(Tensor([278529, 128, 64],"float32"), list[2,0,1,], )
paddle.Tensor.transpose(Tensor([28388, 12, 197, 64],"float16"), tuple(0,1,3,2,), )
paddle.Tensor.transpose(Tensor([28388, 12, 197, 64],"float16"), tuple(0,2,1,3,), )
paddle.Tensor.transpose(Tensor([285212673, 4, 2],"float32"), list[0,1,2,], )
paddle.Tensor.transpose(Tensor([28521268, 1, 10, 8],"float32"), tuple(0,2,3,1,), )
paddle.Tensor.transpose(Tensor([289, 280, 25, 376, 3],"float32"), list[0,1,3,2,4,], )
paddle.Tensor.transpose(Tensor([2910334, 2, 8, 1, 7, 1, 7, 1],"float32"), list[0,1,3,5,2,4,6,7,], )
paddle.Tensor.transpose(Tensor([3, 190141782, 4],"float32"), perm=list[0,1,2,], )
paddle.Tensor.transpose(Tensor([3, 4, 190141782],"float32"), perm=list[0,1,2,], )
paddle.Tensor.transpose(Tensor([3241054, 11, 8, 4, 2],"float32"), list[0,2,1,3,4,], )
paddle.Tensor.transpose(Tensor([325957340, 7],"float32"), list[0,1,], )
paddle.Tensor.transpose(Tensor([34817, 1024, 2, 1, 32],"float32"), list[2,0,3,1,4,], )
paddle.Tensor.transpose(Tensor([35, 2, 1, 61356676],"float16"), list[1,2,0,3,], )
paddle.Tensor.transpose(Tensor([35, 2, 1917397, 32],"float16"), list[1,2,0,3,], )
paddle.Tensor.transpose(Tensor([3567, 14, 14, 8, 768],"float16"), tuple(0,3,1,2,4,), )
paddle.Tensor.transpose(Tensor([3567, 16, 14, 14, 384],"float16"), list[0,4,1,2,3,], )
paddle.Tensor.transpose(Tensor([3567, 8, 14, 14, 768],"float16"), tuple(0,2,3,1,4,), )
paddle.Tensor.transpose(Tensor([35791395, 2, 3, 5, 4],"float16"), perm=list[4,0,1,2,3,], )
paddle.Tensor.transpose(Tensor([36, 12, 14, 14, 26948],"float32"), list[0,2,3,1,4,], )
paddle.Tensor.transpose(Tensor([36, 12, 14, 5895, 64],"float32"), list[0,2,3,1,4,], )
paddle.Tensor.transpose(Tensor([36, 12, 5895, 14, 64],"float32"), list[0,2,3,1,4,], )
paddle.Tensor.transpose(Tensor([36, 5053, 14, 14, 64],"float32"), list[0,2,3,1,4,], )
paddle.Tensor.transpose(Tensor([372828, 16, 3, 4, 60],"float16"), list[0,3,2,1,4,], )
paddle.Tensor.transpose(Tensor([395032, 4, 19, 19, 2, 2],"float32"), perm=list[0,1,4,2,5,3,], )
paddle.Tensor.transpose(Tensor([395032, 4, 2, 19, 2, 19],"float32"), perm=list[0,1,3,5,2,4,], )
paddle.Tensor.transpose(Tensor([4, 17895698, 3, 5, 4],"float16"), perm=list[4,0,1,2,3,], )
paddle.Tensor.transpose(Tensor([4, 19, 1024, 29319],"float32"), tuple(1,0,2,3,), )
paddle.Tensor.transpose(Tensor([4, 19, 29319, 1024],"float32"), tuple(1,0,2,3,), )
paddle.Tensor.transpose(Tensor([4, 2, 26843546, 5, 4],"float16"), perm=list[4,0,1,2,3,], )
paddle.Tensor.transpose(Tensor([4, 2, 3, 44739243, 4],"float16"), perm=list[4,0,1,2,3,], )
paddle.Tensor.transpose(Tensor([4, 2, 3, 5, 35791395],"float16"), perm=list[4,0,1,2,3,], )
paddle.Tensor.transpose(Tensor([4, 217, 280, 376, 25],"float32"), list[0,1,4,3,2,], )
paddle.Tensor.transpose(Tensor([4, 545, 1024, 1024],"float32"), tuple(1,0,2,3,), )
paddle.Tensor.transpose(Tensor([4, 570425345],"float32"), list[0,1,], )
paddle.Tensor.transpose(Tensor([4, 64, 280, 1274, 25],"float32"), list[0,1,4,3,2,], )
paddle.Tensor.transpose(Tensor([4, 64, 280, 376, 85],"float32"), list[0,1,4,3,2,], )
paddle.Tensor.transpose(Tensor([4, 64, 949, 376, 25],"float32"), list[0,1,4,3,2,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[0,3,1,2,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[0,3,2,1,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[1,0,2,3,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[1,0,3,2,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[1,2,0,3,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[1,2,3,0,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[1,3,0,2,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[1,3,2,0,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[2,0,1,3,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[2,0,3,1,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[2,1,0,3,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[2,1,3,0,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[2,3,0,1,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[2,3,1,0,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[3,0,1,2,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[3,0,2,1,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[3,1,0,2,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[3,1,2,0,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[3,2,0,1,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[3,2,1,0,], )
paddle.Tensor.transpose(Tensor([4294967297],"float16"), perm=list[0,], )
paddle.Tensor.transpose(Tensor([4493, 124, 128, 32],"float32"), list[0,3,1,2,], )
paddle.Tensor.transpose(Tensor([5, 2112687, 6, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.Tensor.transpose(Tensor([5, 2112687, 6, 6, 6],"float32"), list[2,0,1,3,4,], )
paddle.Tensor.transpose(Tensor([5, 2112687, 6, 6, 6],"float32"), list[3,0,1,2,4,], )
paddle.Tensor.transpose(Tensor([5, 2112687, 6, 6, 6],"float32"), list[4,0,1,2,3,], )
paddle.Tensor.transpose(Tensor([5, 228170138, 2],"float32"), list[0,1,2,], )
paddle.Tensor.transpose(Tensor([5, 3, 3, 50704476],"float32"), list[0,1,2,3,], )
paddle.Tensor.transpose(Tensor([5, 3, 50704476, 3],"float32"), list[0,1,2,3,], )
paddle.Tensor.transpose(Tensor([5, 4, 114085069],"float32"), list[0,1,2,], )
paddle.Tensor.transpose(Tensor([5, 4, 3169030, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.Tensor.transpose(Tensor([5, 4, 3169030, 6, 6],"float32"), list[2,0,1,3,4,], )
paddle.Tensor.transpose(Tensor([5, 4, 3169030, 6, 6],"float32"), list[3,0,1,2,4,], )
paddle.Tensor.transpose(Tensor([5, 4, 3169030, 6, 6],"float32"), list[4,0,1,2,3,], )
paddle.Tensor.transpose(Tensor([5, 4, 4, 4, 7130317],"float32"), list[0,1,2,3,4,], )
paddle.Tensor.transpose(Tensor([5, 4, 4, 7130317, 4],"float32"), list[0,1,2,3,4,], )
paddle.Tensor.transpose(Tensor([5, 4, 6, 3169030, 6],"float32"), list[1,0,2,3,4,], )
paddle.Tensor.transpose(Tensor([5, 4, 6, 3169030, 6],"float32"), list[2,0,1,3,4,], )
paddle.Tensor.transpose(Tensor([5, 4, 6, 3169030, 6],"float32"), list[3,0,1,2,4,], )
paddle.Tensor.transpose(Tensor([5, 4, 6, 3169030, 6],"float32"), list[4,0,1,2,3,], )
paddle.Tensor.transpose(Tensor([5, 4, 6, 6, 3169030],"float32"), list[1,0,2,3,4,], )
paddle.Tensor.transpose(Tensor([5, 4, 6, 6, 3169030],"float32"), list[2,0,1,3,4,], )
paddle.Tensor.transpose(Tensor([5, 4, 6, 6, 3169030],"float32"), list[3,0,1,2,4,], )
paddle.Tensor.transpose(Tensor([5, 4, 6, 6, 3169030],"float32"), list[4,0,1,2,3,], )
paddle.Tensor.transpose(Tensor([5, 4, 7130317, 4, 4],"float32"), list[0,1,2,3,4,], )
paddle.Tensor.transpose(Tensor([5, 50704476, 3, 3],"float32"), list[0,1,2,3,], )
paddle.Tensor.transpose(Tensor([5, 7130317, 4, 4, 4],"float32"), list[0,1,2,3,4,], )
paddle.Tensor.transpose(Tensor([5093084, 4, 7, 16],"float32"), perm=tuple(0,2,1,3,), )
paddle.Tensor.transpose(Tensor([512, 11651, 3, 4, 60],"float16"), list[0,3,2,1,4,], )
paddle.Tensor.transpose(Tensor([512, 16, 2185, 4, 60],"float16"), list[0,3,2,1,4,], )
paddle.Tensor.transpose(Tensor([512, 16, 3, 2913, 60],"float16"), list[0,3,2,1,4,], )
paddle.Tensor.transpose(Tensor([512, 16, 3, 4, 43691],"float16"), list[0,3,2,1,4,], )
paddle.Tensor.transpose(Tensor([557057, 1, 256, 16],"float32"), list[0,3,2,1,], )
paddle.Tensor.transpose(Tensor([570425345, 1, 2, 2],"float32"), list[1,0,2,3,], )
paddle.Tensor.transpose(Tensor([570425345, 1, 4],"float32"), perm=list[2,0,1,], )
paddle.Tensor.transpose(Tensor([6004478, 38, 10],"float32"), perm=list[1,0,2,], )
paddle.Tensor.transpose(Tensor([61906, 36858],"float32"), tuple(1,0,), )
paddle.Tensor.transpose(Tensor([6268411, 13, 4, 7],"float32"), tuple(1,2,0,3,), )
paddle.Tensor.transpose(Tensor([64, 1, 3, 22369622],"float16"), list[2,1,3,0,], )
paddle.Tensor.transpose(Tensor([64, 349526, 3, 64],"float16"), list[2,1,3,0,], )
paddle.Tensor.transpose(Tensor([69633, 1, 1024, 32],"float32"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([7, 11641334, 4, 7],"float32"), tuple(1,2,0,3,), )
paddle.Tensor.transpose(Tensor([7, 13, 3581949, 7],"float32"), tuple(1,2,0,3,), )
paddle.Tensor.transpose(Tensor([7, 13, 4, 6268411],"float32"), tuple(1,2,0,3,), )
paddle.Tensor.transpose(Tensor([71303169, 1, 1, 32],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([71303169, 1, 8, 4],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([71303169, 4, 1, 8],"float32"), list[2,0,1,3,], )
paddle.Tensor.transpose(Tensor([7134, 2, 1, 1, 8, 7, 7, 768],"float16"), list[0,1,4,2,5,3,6,7,], )
paddle.Tensor.transpose(Tensor([7737, 128, 256, 3, 3],"float32"), tuple(0,2,1,3,4,), )
paddle.Tensor.transpose(Tensor([8, 1455167, 7, 2, 7, 2],"float32"), list[0,1,2,4,3,5,], )
paddle.Tensor.transpose(Tensor([8, 256, 192, 5803],"float32"), tuple(3,0,1,2,), )
paddle.Tensor.transpose(Tensor([8, 256, 371371, 3],"float32"), tuple(3,0,1,2,), )
paddle.Tensor.transpose(Tensor([8, 495161, 192, 3],"float32"), tuple(3,0,1,2,), )
paddle.Tensor.transpose(Tensor([8, 64, 159159, 2, 7, 2],"float32"), list[0,1,2,4,3,5,], )
paddle.Tensor.transpose(Tensor([8, 64, 7, 2, 159159, 2],"float32"), list[0,1,2,4,3,5,], )
paddle.Tensor.transpose(Tensor([8, 64, 7, 2, 7, 45474],"float32"), list[0,1,2,4,3,5,], )
paddle.Tensor.transpose(Tensor([8, 64, 7, 45474, 7, 2],"float32"), list[0,1,2,4,3,5,], )
paddle.Tensor.transpose(Tensor([82527, 108, 256],"float32"), tuple(0,2,1,), )
paddle.Tensor.transpose(Tensor([843, 7, 126, 3, 1024],"float32"), list[3,1,2,0,4,], )
paddle.Tensor.transpose(Tensor([84507459, 3, 3, 3],"float32"), list[0,1,2,3,], )
paddle.Tensor.transpose(Tensor([8611, 40, 6625],"float32"), tuple(1,0,2,), )
paddle.Tensor.transpose(Tensor([866908, 188, 1, 1, 2, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.Tensor.transpose(Tensor([8705, 1024, 256],"float32"), perm=list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8912897, 4, 4, 4, 4],"float32"), list[0,1,2,3,4,], )
paddle.Tensor.transpose(Tensor([89478486, 4, 3, 2, 2],"float16"), tuple(0,2,3,4,1,), )
paddle.Tensor.transpose(Tensor([8947849, 4, 3, 5, 8],"float16"), perm=list[1,0,2,3,4,], )
paddle.Tensor.transpose(Tensor([89479, 3, 85, 10, 10],"float32"), tuple(0,1,3,4,2,), )
paddle.Tensor.transpose(Tensor([90948, 128, 1, 14, 2, 7],"float32"), list[0,2,4,1,3,5,], )
paddle.Tensor.transpose(Tensor([90948, 128, 1, 14, 2, 7],"float32"), list[0,2,4,3,5,1,], )
paddle.Tensor.tril(Tensor([1, 1140850690, 2],"float32"), -1, )
paddle.Tensor.tril(Tensor([1, 2, 1140850690],"float32"), -1, )
paddle.Tensor.tril(Tensor([1140850690, 2],"float32"), -1, )
paddle.Tensor.tril(Tensor([2, 1140850690],"float32"), -1, )
paddle.Tensor.tril(Tensor([2, 2, 570425345],"float32"), -1, )
paddle.Tensor.tril(Tensor([2, 570425345, 2],"float32"), -1, )
paddle.Tensor.tril(Tensor([570425345, 2, 2],"float32"), -1, )
paddle.Tensor.trunc(Tensor([2, 142606337, 8],"float32"), )
paddle.Tensor.trunc(Tensor([2, 8, 142606337],"float32"), )
paddle.Tensor.trunc(Tensor([28, 81489335],"float32"), )
paddle.Tensor.trunc(Tensor([285212673, 8],"float32"), )
paddle.Tensor.trunc(Tensor([35651585, 8, 8],"float32"), )
paddle.Tensor.trunc(Tensor([8, 285212673],"float32"), )
paddle.Tensor.trunc(Tensor([81489335, 28],"float32"), )
paddle.Tensor.unbind(Tensor([1, 1188387, 30, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 139265, 256, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([1, 16, 2228225, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([1, 16, 256, 278529, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([1, 16, 256, 32, 17409],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([1, 1782580, 20, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 60, 10, 3802836],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 60, 2, 19014179],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 60, 20, 1901418],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 60, 30, 1267612],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 60, 4, 9507090],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 60, 594194, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 60, 6, 6338060],"float32"), 1, )
paddle.Tensor.unbind(Tensor([11883862, 3, 8, 8],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([128, 3, 576, 32, 323],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([128, 3, 576, 5158, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([128, 3, 92843, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([128, 484, 576, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([146114, 1, 8, 61, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([148549, 60, 4, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([190, 960, 196, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([19807, 60, 30, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([2, 131073, 256, 32, 2],"float16"), axis=-1, )
paddle.Tensor.unbind(Tensor([2, 3, 11184811, 32, 2],"float16"), axis=-1, )
paddle.Tensor.unbind(Tensor([2, 3, 256, 1398102, 2],"float16"), axis=-1, )
paddle.Tensor.unbind(Tensor([2, 3, 256, 32, 46422],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([2, 3, 256, 32, 87382],"float16"), axis=-1, )
paddle.Tensor.unbind(Tensor([2, 3, 256, 742742, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([2, 3, 47535446, 8],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([2, 3, 5941931, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([2, 3, 8, 47535446],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([2, 69633, 256, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([20632, 3, 576, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([211, 864, 196, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([23151, 1, 8, 385, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([258, 60, 2304, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([2910334, 28, 28],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([297097, 60, 2, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([29710, 60, 20, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([3, 1, 103790, 229, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 109529, 217, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 140638, 169, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 151387, 157, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 163916, 145, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 210334, 113, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 218053, 109, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 389635, 61, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 61735, 385, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 109, 872211],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 113, 841336],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 145, 655662],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 157, 605548],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 169, 562550],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 217, 438115],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 229, 415157],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 241, 394486],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 261, 364257],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 2970966, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 385, 246938],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 61, 1558540],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 91065, 261, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 98622, 241, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 11384, 8, 261, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 11606, 1024, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 12328, 8, 241, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 12974, 8, 229, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 13692, 8, 217, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 17580, 8, 169, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 18924, 8, 157, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 2, 380283564],"float32"), -2, )
paddle.Tensor.unbind(Tensor([3, 20490, 8, 145, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 26292, 8, 113, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 27163112, 28],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([3, 27257, 8, 109, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 28, 27163112],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([3, 432, 196, 8983],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 432, 27509, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 48, 1024, 15474],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 48, 247581, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 48705, 8, 61, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 5158, 2304, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 60, 198065, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 60, 2304, 5502],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 60632, 196, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 7717, 8, 385, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 8, 95070891],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([3, 864, 13755, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 864, 196, 4492],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 95070891, 8],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([3, 96, 1024, 7737],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 96, 123791, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 960, 12380, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 960, 196, 4043],"float32"), 0, )
paddle.Tensor.unbind(Tensor([34150, 1, 8, 261, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([363, 96, 1024, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([36983, 1, 8, 241, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([380283564, 2, 3],"float32"), -2, )
paddle.Tensor.unbind(Tensor([38921, 1, 8, 229, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([41074, 1, 8, 217, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([422, 432, 196, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([46422, 3, 256, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([52740, 1, 8, 169, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([56771, 1, 8, 157, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([59420, 60, 10, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([61469, 1, 8, 145, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([726, 48, 1024, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([78876, 1, 8, 113, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([80, 3, 148549, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([80, 3, 576, 32, 516],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([80, 3, 576, 8253, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([80, 774, 576, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([81770, 1, 8, 109, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([8705, 16, 256, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([87382, 3, 256, 32, 2],"float16"), axis=-1, )
paddle.Tensor.unbind(Tensor([99033, 60, 6, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 144, 15845149],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 15845149, 144],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 2, 1140850690],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 2281701379],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 2281701379],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 2281701379],"int32"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 2281701379],"int64"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 2281701379],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 285212673, 8],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 46565335, 49],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 49, 46565335],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 49, 87652394],"float16"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 87652394, 49],"float16"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 10, 228170138],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 100, 22817014],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 1024, 2, 2097153],"float16"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 1024, 262145, 16],"float16"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 1100, 2074274],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 110036, 144, 144],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 1114113, 2048],"int32"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 114085069, 20],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 114085069, 20],"int64"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 114085069, 20],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 1140850690, 2],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 1140850690, 2],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1, 134217729, 2, 16],"float16"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 142606337, 2, 8],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 1788825, 49, 49],"float16"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 2, 142606337, 8],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 2, 2, 570425345],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 2281701379, 1],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1, 2281701379, 1],"float32"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([1, 2281701379],"bool"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 2281701379],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 2281701379],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 2281701379],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 2281701379],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1, 2281701379],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 2281701379],"int32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 2281701379],"int64"), 1, )
paddle.Tensor.unsqueeze(Tensor([1, 2281701379],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 285212673, 8],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 32, 71303169],"float32"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([1, 4294967297],"float16"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 570425345, 4],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 71303169, 32],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 760567127, 3],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1, 950313, 49, 49],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([10, 1, 228170138],"bool"), 3, )
paddle.Tensor.unsqueeze(Tensor([10, 457255, 499],"bool"), 3, )
paddle.Tensor.unsqueeze(Tensor([100, 22817014],"float32"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([1000, 2281702],"float32"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([106106, 21504],"bool"), -1, )
paddle.Tensor.unsqueeze(Tensor([110036, 1, 144, 144],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1114113, 1, 2048],"int32"), -1, )
paddle.Tensor.unsqueeze(Tensor([1114113, 2048],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([1140281, 2001],"float32"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([114085069, 1, 20],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([114085069, 1, 20],"int64"), -1, )
paddle.Tensor.unsqueeze(Tensor([114085069, 1, 20],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([114085069, 10, 2],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([114085069, 20],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([114085069, 20],"int64"), 1, )
paddle.Tensor.unsqueeze(Tensor([1140850690, 1, 2],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([11408507, 100, 2],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([11661, 195670],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([12, 118839, 40, 40],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([12, 1901418, 10, 10],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([12, 3, 10, 6338060],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([12, 3, 1584515, 40],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([12, 3, 20, 3169030],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([12, 3, 3169030, 20],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([12, 3, 40, 1584515],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([12, 3, 6338060, 10],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([12, 475355, 20, 20],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([1220, 64, 94, 311],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([13, 1, 175515491],"float32"), 3, )
paddle.Tensor.unsqueeze(Tensor([13, 175515491],"int64"), -2, )
paddle.Tensor.unsqueeze(Tensor([13, 2, 87757746],"int64"), -2, )
paddle.Tensor.unsqueeze(Tensor([13, 21939437, 8],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([13, 25073642, 7],"float32"), 3, )
paddle.Tensor.unsqueeze(Tensor([13, 2742430, 64],"int64"), -2, )
paddle.Tensor.unsqueeze(Tensor([13, 43878873, 4],"float32"), 3, )
paddle.Tensor.unsqueeze(Tensor([13, 7, 25073642],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([131073, 1024, 2, 16],"float16"), -2, )
paddle.Tensor.unsqueeze(Tensor([142606337, 1, 2, 8],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([1444, 1, 1580126],"float32"), axis=3, )
paddle.Tensor.unsqueeze(Tensor([1444, 1580126, 1],"float32"), axis=3, )
paddle.Tensor.unsqueeze(Tensor([1444, 1580126],"float32"), axis=2, )
paddle.Tensor.unsqueeze(Tensor([15845149, 144],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([15845149, 144],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([15845149, 144],"int64"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([15845149, 144],"int64"), axis=2, )
paddle.Tensor.unsqueeze(Tensor([16, 1, 3, 64, 742742],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 1, 3, 742742, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 1, 34817, 64, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 1, 2, 7130317],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 1, 7130317, 2],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 111412, 64, 2],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 14260634],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 2, 7130317],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 245873, 58],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 3565159, 2, 2],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 58, 245873],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 64, 111412, 2],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 64, 64, 3482],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 7130317, 2],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([16, 11, 202566, 64],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([16, 11, 64, 202566],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([16, 11606, 3, 64, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 17409, 64, 64, 2],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([16, 3, 64, 742742],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 3, 742742, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 34817, 64, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 34817, 64, 64],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([16, 35651585, 1, 2, 2],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([16, 35651585, 2, 2],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([16, 42392, 58, 58],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([16, 71303169, 2],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([17825793, 2, 64],"int64"), -2, )
paddle.Tensor.unsqueeze(Tensor([1788825, 1, 49, 49],"float16"), 0, )
paddle.Tensor.unsqueeze(Tensor([185686, 1, 3, 64, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([185686, 3, 64, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([190141782, 1, 1, 3, 4],"float32"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([1901418, 3, 20, 20],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([2, 1140850690],"bool"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([2, 1140850690],"int64"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([2, 1140850690],"int64"), axis=2, )
paddle.Tensor.unsqueeze(Tensor([2, 142606337, 8],"int32"), axis=-3, )
paddle.Tensor.unsqueeze(Tensor([2, 2, 8, 128, 1048577],"float16"), 2, )
paddle.Tensor.unsqueeze(Tensor([2, 2, 8, 1398102, 96],"float16"), 2, )
paddle.Tensor.unsqueeze(Tensor([2, 2, 87382, 128, 96],"float16"), 2, )
paddle.Tensor.unsqueeze(Tensor([2, 21846, 8, 128, 96],"float16"), 2, )
paddle.Tensor.unsqueeze(Tensor([2, 8, 142606337],"int32"), axis=-3, )
paddle.Tensor.unsqueeze(Tensor([209716, 512, 1, 40],"float16"), 1, )
paddle.Tensor.unsqueeze(Tensor([21846, 2, 8, 128, 96],"float16"), 2, )
paddle.Tensor.unsqueeze(Tensor([221848, 10285],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([2228225, 1024],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([2281701379, 1, 1],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2281701379, 1, 1],"float32"), axis=3, )
paddle.Tensor.unsqueeze(Tensor([2281701379, 1],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([2281701379, 1],"float32"), axis=2, )
paddle.Tensor.unsqueeze(Tensor([2281701379, 1],"int32"), 0, )
paddle.Tensor.unsqueeze(Tensor([2281701379],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([2281701379],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([2281701379],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2281701379],"float32"), axis=0, )
paddle.Tensor.unsqueeze(Tensor([2281701379],"float32"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([2281701379],"int32"), 0, )
paddle.Tensor.unsqueeze(Tensor([2281701379],"int64"), 0, )
paddle.Tensor.unsqueeze(Tensor([2281701379],"int64"), 1, )
paddle.Tensor.unsqueeze(Tensor([2281701379],"int64"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([26844, 160000],"float16"), -1, )
paddle.Tensor.unsqueeze(Tensor([27853, 10, 64, 64, 2],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([28, 81489335],"int32"), axis=-3, )
paddle.Tensor.unsqueeze(Tensor([285212673, 8],"int32"), axis=-3, )
paddle.Tensor.unsqueeze(Tensor([28521268, 10, 8],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([285213, 8000],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([3, 760567127],"int64"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([32, 32, 2228225],"float32"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([32, 71303169, 1],"float32"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([325957340, 1, 7],"float32"), 3, )
paddle.Tensor.unsqueeze(Tensor([35651585, 8, 8],"int32"), axis=-3, )
paddle.Tensor.unsqueeze(Tensor([36, 1, 63380594],"float32"), axis=3, )
paddle.Tensor.unsqueeze(Tensor([36, 36, 1760573],"float32"), axis=3, )
paddle.Tensor.unsqueeze(Tensor([36, 63380594, 1],"float32"), axis=3, )
paddle.Tensor.unsqueeze(Tensor([4, 1, 1, 142606337, 4],"float32"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([4, 1, 1, 3, 190141782],"float32"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([4, 1, 47535446, 3, 4],"float32"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([4, 19513, 94, 311],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4, 19513, 94, 311],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([4, 47535446, 1, 3, 4],"float32"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([4, 64, 28659, 311],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([4, 64, 94, 94819],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([4, 81, 22645, 311],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4, 81, 94, 74918],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([40744668, 56],"int64"), -2, )
paddle.Tensor.unsqueeze(Tensor([40744668, 7, 8],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([416, 1, 5484860],"bool"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([416, 182829, 30],"bool"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([4294967297],"float16"), -1, )
paddle.Tensor.unsqueeze(Tensor([4294967297],"float16"), -2, )
paddle.Tensor.unsqueeze(Tensor([4572548, 1, 499],"bool"), 3, )
paddle.Tensor.unsqueeze(Tensor([46565335, 49],"int64"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([46565335, 49],"int64"), axis=2, )
paddle.Tensor.unsqueeze(Tensor([475355, 3, 40, 40],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([50642, 11, 64, 64],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([512, 1, 4456449],"bool"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([512, 148549, 30],"bool"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([518569, 1100, 4],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([52, 1, 43878873],"bool"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([52, 1462630, 30],"bool"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([570425345, 1, 4],"float32"), 3, )
paddle.Tensor.unsqueeze(Tensor([570425345, 4],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([57042535, 10, 1, 2, 2],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([57042535, 10, 2, 2],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([5704254, 100, 4],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([5820667, 392],"int64"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([63380594, 36, 1],"float32"), axis=3, )
paddle.Tensor.unsqueeze(Tensor([64, 1677722, 1, 40],"float16"), 1, )
paddle.Tensor.unsqueeze(Tensor([64, 512, 1, 131073],"float16"), 1, )
paddle.Tensor.unsqueeze(Tensor([64, 512, 3277, 40],"float16"), 1, )
paddle.Tensor.unsqueeze(Tensor([67828, 10, 58, 58],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([71303169, 1, 32],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([71303169, 2, 2, 8],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([71303169, 32, 1],"float32"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([760567127, 1, 3],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([760567127, 3],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([76056713, 1, 30],"bool"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([7605672, 3, 10, 10],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([8, 285212673],"int32"), axis=-3, )
paddle.Tensor.unsqueeze(Tensor([81489335, 28],"int32"), axis=-3, )
paddle.Tensor.unsqueeze(Tensor([8912897, 256],"bool"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([950313, 1, 49, 49],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([964, 81, 94, 311],"float32"), 1, )
paddle.Tensor.var(Tensor([1000, 2281702],"float32"), axis=0, )
paddle.Tensor.var(Tensor([10000, 143166, 3],"float16"), axis=0, )
paddle.Tensor.var(Tensor([10000, 2, 114086],"float32"), axis=0, )
paddle.Tensor.var(Tensor([10000, 2, 214749],"float16"), axis=0, )
paddle.Tensor.var(Tensor([10000, 76057, 3],"float32"), axis=0, )
paddle.Tensor.var(Tensor([100000, 42950],"float16"), axis=0, )
paddle.Tensor.var(Tensor([1000000, 4295],"float16"), axis=0, )
paddle.Tensor.var(Tensor([1073741825, 4],"float16"), axis=0, )
paddle.Tensor.var(Tensor([1140850690, 2],"float32"), axis=0, )
paddle.Tensor.var(Tensor([2281701379],"float32"), axis=0, )
paddle.Tensor.var(Tensor([2910334, 784],"float32"), axis=0, )
paddle.Tensor.var(Tensor([380283564, 2, 3],"float32"), axis=0, )
paddle.Tensor.var(Tensor([4294967297, 1],"float16"), axis=0, )
paddle.Tensor.var(Tensor([4294967297],"float16"), axis=0, )
paddle.Tensor.var(Tensor([5000, 456341],"float32"), axis=0, )
paddle.Tensor.var(Tensor([5000, 858994],"float16"), axis=0, )
paddle.Tensor.var(Tensor([50000, 2, 42950],"float16"), axis=0, )
paddle.Tensor.var(Tensor([50000, 28634, 3],"float16"), axis=0, )
paddle.Tensor.var(Tensor([50000, 45635],"float32"), axis=0, )
paddle.Tensor.var(Tensor([715827883, 2, 3],"float16"), axis=0, )
paddle.Tensor.zero_(Tensor([134217729, 32],"float16"), )
paddle.Tensor.zero_(Tensor([14, 10186167, 16],"float32"), )
paddle.Tensor.zero_(Tensor([14, 40744668, 4],"float32"), )
paddle.Tensor.zero_(Tensor([14, 64, 2546542],"float32"), )
paddle.Tensor.zero_(Tensor([2228225, 64, 16],"float32"), )
paddle.Tensor.zero_(Tensor([2281701379],"float32"), )
paddle.Tensor.zero_(Tensor([32, 134217729],"float16"), )
paddle.Tensor.zero_(Tensor([32, 71303169],"float32"), )
paddle.Tensor.zero_(Tensor([32, 71303169],"int32"), )
paddle.Tensor.zero_(Tensor([32, 71303169],"int64"), )
paddle.Tensor.zero_(Tensor([4294967297],"float16"), )
paddle.Tensor.zero_(Tensor([71303169, 32],"float32"), )
paddle.Tensor.zero_(Tensor([71303169, 32],"int32"), )
paddle.Tensor.zero_(Tensor([71303169, 32],"int64"), )
paddle.Tensor.zero_(Tensor([8912897, 64, 4],"float32"), )
paddle.Tensor.zero_(x=Tensor([10, 16, 26843546],"float16"), )
paddle.Tensor.zero_(x=Tensor([10, 26843546, 16],"float16"), )
paddle.Tensor.zero_(x=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.zero_(x=Tensor([16, 268435457],"float16"), )
paddle.Tensor.zero_(x=Tensor([16777217, 16, 16],"float16"), )
paddle.Tensor.zero_(x=Tensor([268435457, 16],"float16"), )
paddle.Tensor.zero_(x=Tensor([4, 1073741825],"float16"), )
paddle.Tensor.zero_(x=Tensor([4, 570425345],"float32"), )
paddle.Tensor.zero_(x=Tensor([4, 570425345],"int32"), )
paddle.Tensor.zero_(x=Tensor([4, 570425345],"int64"), )
paddle.Tensor.zero_(x=Tensor([4294967297],"float16"), )
paddle.Tensor.zero_(x=Tensor([570425345, 4],"float32"), )
paddle.Tensor.zero_(x=Tensor([570425345, 4],"int32"), )
paddle.Tensor.zero_(x=Tensor([570425345, 4],"int64"), )
paddle.abs(Tensor([1, 1, 32, 71303169],"float32"), )
paddle.abs(Tensor([1, 1, 71303169, 32],"float32"), )
paddle.abs(Tensor([1, 1444, 1, 1580126],"float32"), )
paddle.abs(Tensor([1, 1444, 1580126, 1],"float32"), )
paddle.abs(Tensor([1, 15845149, 12, 12],"float32"), )
paddle.abs(Tensor([1, 16, 11883862, 12],"float32"), )
paddle.abs(Tensor([1, 16, 12, 11883862],"float32"), )
paddle.abs(Tensor([1, 190141782, 3, 4],"float32"), )
paddle.abs(Tensor([1, 2, 285212673, 4],"float32"), )
paddle.abs(Tensor([1, 2, 3, 380283564],"float32"), )
paddle.abs(Tensor([1, 2, 3, 715827883],"float16"), )
paddle.abs(Tensor([1, 2, 536870913, 4],"float16"), )
paddle.abs(Tensor([1, 2228225, 32, 32],"float32"), )
paddle.abs(Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.abs(Tensor([1, 2281701379, 1],"float32"), )
paddle.abs(Tensor([1, 2281701379],"float32"), )
paddle.abs(Tensor([1, 3, 23767723, 32],"float32"), )
paddle.abs(Tensor([1, 3, 256, 2970966],"float32"), )
paddle.abs(Tensor([1, 3, 2970966, 256],"float32"), )
paddle.abs(Tensor([1, 3, 32, 23767723],"float32"), )
paddle.abs(Tensor([1, 34817, 256, 256],"float32"), )
paddle.abs(Tensor([1, 357913942, 3, 4],"float16"), )
paddle.abs(Tensor([1, 36, 1, 63380594],"float32"), )
paddle.abs(Tensor([1, 36, 63380594, 1],"float32"), )
paddle.abs(Tensor([1, 38, 60044774],"float32"), )
paddle.abs(Tensor([1, 4294967297],"float16"), )
paddle.abs(Tensor([1, 6, 11883862, 32],"float32"), )
paddle.abs(Tensor([1, 6, 16, 23767723],"float32"), )
paddle.abs(Tensor([1, 6, 23767723, 16],"float32"), )
paddle.abs(Tensor([1, 6, 32, 11883862],"float32"), )
paddle.abs(Tensor([1, 8912897, 16, 16],"float32"), )
paddle.abs(Tensor([1, 9, 253522376],"float32"), )
paddle.abs(Tensor([10, 2, 114085069],"float32"), )
paddle.abs(Tensor([10, 20, 11408507],"float32"), )
paddle.abs(Tensor([10, 200, 1140851],"float32"), )
paddle.abs(Tensor([10, 200, 1140851],"int32"), )
paddle.abs(Tensor([10, 228170138, 1],"float32"), )
paddle.abs(Tensor([10, 228170138],"float32"), )
paddle.abs(Tensor([10, 45634028, 5],"float32"), )
paddle.abs(Tensor([10, 760568, 300],"float32"), )
paddle.abs(Tensor([10, 760568, 300],"int32"), )
paddle.abs(Tensor([114085069, 20, 1],"float32"), )
paddle.abs(Tensor([11606, 3, 256, 256],"float32"), )
paddle.abs(Tensor([12, 118839, 40, 40, 1],"float32"), )
paddle.abs(Tensor([12, 1901418, 10, 10, 1],"float32"), )
paddle.abs(Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.abs(Tensor([12, 3, 10, 6338060, 1],"float32"), )
paddle.abs(Tensor([12, 3, 1584515, 40, 1],"float32"), )
paddle.abs(Tensor([12, 3, 20, 20, 158452],"float32"), )
paddle.abs(Tensor([12, 3, 20, 3169030, 1],"float32"), )
paddle.abs(Tensor([12, 3, 3169030, 20, 1],"float32"), )
paddle.abs(Tensor([12, 3, 40, 1584515, 1],"float32"), )
paddle.abs(Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.abs(Tensor([12, 3, 6338060, 10, 1],"float32"), )
paddle.abs(Tensor([12, 475355, 20, 20, 1],"float32"), )
paddle.abs(Tensor([128, 1, 17825793],"float32"), )
paddle.abs(Tensor([128, 139265, 128],"float32"), )
paddle.abs(Tensor([13, 110127367, 3],"float16"), )
paddle.abs(Tensor([13, 3, 110127367],"float16"), )
paddle.abs(Tensor([13, 3, 58505164],"float32"), )
paddle.abs(Tensor([13, 58505164, 3],"float32"), )
paddle.abs(Tensor([1485483, 6, 16, 16],"float32"), )
paddle.abs(Tensor([1580126, 1444, 1, 1],"float32"), )
paddle.abs(Tensor([17825793, 1, 128],"float32"), )
paddle.abs(Tensor([178956971, 2, 3, 4],"float16"), )
paddle.abs(Tensor([19014179, 120],"float32"), )
paddle.abs(Tensor([1901418, 3, 20, 20, 1],"float32"), )
paddle.abs(Tensor([2, 11408507, 10, 10, 1],"float32"), )
paddle.abs(Tensor([2, 3, 10, 10, 3802836],"float32"), )
paddle.abs(Tensor([2, 3, 10, 38028357, 1],"float32"), )
paddle.abs(Tensor([2, 3, 11, 11, 3142840],"float32"), )
paddle.abs(Tensor([2, 3, 11, 34571234, 1],"float32"), )
paddle.abs(Tensor([2, 3, 12, 12, 2640859],"float32"), )
paddle.abs(Tensor([2, 3, 12, 31690297, 1],"float32"), )
paddle.abs(Tensor([2, 3, 13, 13, 2250199],"float32"), )
paddle.abs(Tensor([2, 3, 13, 29252582, 1],"float32"), )
paddle.abs(Tensor([2, 3, 14, 14, 1940223],"float32"), )
paddle.abs(Tensor([2, 3, 14, 27163112, 1],"float32"), )
paddle.abs(Tensor([2, 3, 15, 15, 1690150],"float32"), )
paddle.abs(Tensor([2, 3, 15, 25352238, 1],"float32"), )
paddle.abs(Tensor([2, 3, 16, 16, 1485483],"float32"), )
paddle.abs(Tensor([2, 3, 16, 23767723, 1],"float32"), )
paddle.abs(Tensor([2, 3, 17, 17, 1315861],"float32"), )
paddle.abs(Tensor([2, 3, 17, 22369622, 1],"float32"), )
paddle.abs(Tensor([2, 3, 22369622, 17, 1],"float32"), )
paddle.abs(Tensor([2, 3, 23767723, 16, 1],"float32"), )
paddle.abs(Tensor([2, 3, 25352238, 15, 1],"float32"), )
paddle.abs(Tensor([2, 3, 27163112, 14, 1],"float32"), )
paddle.abs(Tensor([2, 3, 29252582, 13, 1],"float32"), )
paddle.abs(Tensor([2, 3, 31690297, 12, 1],"float32"), )
paddle.abs(Tensor([2, 3, 34571234, 11, 1],"float32"), )
paddle.abs(Tensor([2, 3, 38028357, 10, 1],"float32"), )
paddle.abs(Tensor([2, 3947581, 17, 17, 1],"float32"), )
paddle.abs(Tensor([2, 4456449, 16, 16, 1],"float32"), )
paddle.abs(Tensor([2, 5070448, 15, 15, 1],"float32"), )
paddle.abs(Tensor([2, 5820667, 14, 14, 1],"float32"), )
paddle.abs(Tensor([2, 6750596, 13, 13, 1],"float32"), )
paddle.abs(Tensor([2, 7922575, 12, 12, 1],"float32"), )
paddle.abs(Tensor([2, 9428519, 11, 11, 1],"float32"), )
paddle.abs(Tensor([2228225, 1, 32, 32],"float32"), )
paddle.abs(Tensor([2281701379, 1],"float32"), )
paddle.abs(Tensor([2281701379],"float32"), )
paddle.abs(Tensor([228170138, 10],"float32"), )
paddle.abs(Tensor([228170138, 2, 5],"float32"), )
paddle.abs(Tensor([253522376, 3, 3],"float32"), )
paddle.abs(Tensor([253522376, 9, 1],"float32"), )
paddle.abs(Tensor([2631721, 3, 17, 17, 1],"float32"), )
paddle.abs(Tensor([27163112, 84],"float32"), )
paddle.abs(Tensor([2970966, 3, 16, 16, 1],"float32"), )
paddle.abs(Tensor([3380299, 3, 15, 15, 1],"float32"), )
paddle.abs(Tensor([371371, 6, 32, 32],"float32"), )
paddle.abs(Tensor([38029, 200, 300],"float32"), )
paddle.abs(Tensor([38029, 200, 300],"int32"), )
paddle.abs(Tensor([3880445, 3, 14, 14, 1],"float32"), )
paddle.abs(Tensor([3961288, 576],"float32"), )
paddle.abs(Tensor([4294967297, 1],"float16"), )
paddle.abs(Tensor([42949673, 100],"float16"), )
paddle.abs(Tensor([4500398, 3, 13, 13, 1],"float32"), )
paddle.abs(Tensor([475355, 3, 40, 40, 1],"float32"), )
paddle.abs(Tensor([477218589, 3, 3],"float16"), )
paddle.abs(Tensor([5281717, 3, 12, 12, 1],"float32"), )
paddle.abs(Tensor([570425345, 4],"float32"), )
paddle.abs(Tensor([60044774, 38, 1],"float32"), )
paddle.abs(Tensor([60632, 37632],"float32"), )
paddle.abs(Tensor([6285679, 3, 11, 11, 1],"float32"), )
paddle.abs(Tensor([63380594, 36, 1, 1],"float32"), )
paddle.abs(Tensor([742742, 3, 32, 32],"float32"), )
paddle.abs(Tensor([7605672, 3, 10, 10, 1],"float32"), )
paddle.abs(Tensor([95070891, 2, 3, 4],"float32"), )
paddle.abs(Tensor([990322, 16, 12, 12],"float32"), )
paddle.abs(x=Tensor([100, 18, 3, 422538],"float32"), )
paddle.abs(x=Tensor([100, 18, 422538, 3],"float32"), )
paddle.abs(x=Tensor([100, 2281702, 10],"float32"), )
paddle.abs(x=Tensor([100, 2535224, 3, 3],"float32"), )
paddle.abs(x=Tensor([100, 38, 600448],"float32"), )
paddle.abs(x=Tensor([100, 4563403, 5],"float32"), )
paddle.abs(x=Tensor([100, 5704254, 2, 2],"float32"), )
paddle.abs(x=Tensor([100, 722, 15802, 2],"float32"), )
paddle.abs(x=Tensor([100, 722, 2, 15802],"float32"), )
paddle.abs(x=Tensor([100, 9, 2535224],"float32"), )
paddle.abs(x=Tensor([14084577, 18, 3, 3],"float32"), )
paddle.abs(x=Tensor([1431655766, 3],"float16"), )
paddle.abs(x=Tensor([227, 1116839, 3, 3],"float32"), )
paddle.abs(x=Tensor([227, 18, 186140, 3],"float32"), )
paddle.abs(x=Tensor([227, 18, 3, 186140],"float32"), )
paddle.abs(x=Tensor([227, 2010310, 5],"float32"), )
paddle.abs(x=Tensor([227, 9, 1116839],"float32"), )
paddle.abs(x=Tensor([253522376, 3, 3],"float32"), )
paddle.abs(x=Tensor([256, 1782580, 5],"float32"), )
paddle.abs(x=Tensor([256, 18, 165054, 3],"float32"), )
paddle.abs(x=Tensor([256, 18, 3, 165054],"float32"), )
paddle.abs(x=Tensor([256, 2228225, 2, 2],"float32"), )
paddle.abs(x=Tensor([256, 38, 234550],"float32"), )
paddle.abs(x=Tensor([256, 722, 2, 6173],"float32"), )
paddle.abs(x=Tensor([256, 722, 6173, 2],"float32"), )
paddle.abs(x=Tensor([256, 891290, 10],"float32"), )
paddle.abs(x=Tensor([256, 9, 990322],"float32"), )
paddle.abs(x=Tensor([256, 990322, 3, 3],"float32"), )
paddle.abs(x=Tensor([3, 253522376, 3],"float32"), )
paddle.abs(x=Tensor([3, 3, 253522376],"float32"), )
paddle.abs(x=Tensor([3, 3, 477218589],"float16"), )
paddle.abs(x=Tensor([3, 477218589, 3],"float16"), )
paddle.abs(x=Tensor([4294967297],"float16"), )
paddle.abs(x=Tensor([477218589, 3, 3],"float16"), )
paddle.abs(x=Tensor([5, 858993460],"float16"), )
paddle.abs(x=Tensor([50704476, 9, 5],"float32"), )
paddle.abs(x=Tensor([56, 10186167, 2, 2],"float32"), )
paddle.abs(x=Tensor([56, 38, 1072229],"float32"), )
paddle.abs(x=Tensor([56, 4074467, 10],"float32"), )
paddle.abs(x=Tensor([56, 722, 2, 28217],"float32"), )
paddle.abs(x=Tensor([56, 722, 28217, 2],"float32"), )
paddle.abs(x=Tensor([6004478, 38, 10],"float32"), )
paddle.abs(x=Tensor([790063, 722, 2, 2],"float32"), )
paddle.abs(x=Tensor([82, 18, 3, 515290],"float32"), )
paddle.abs(x=Tensor([82, 18, 515290, 3],"float32"), )
paddle.abs(x=Tensor([82, 3091737, 3, 3],"float32"), )
paddle.abs(x=Tensor([82, 5565126, 5],"float32"), )
paddle.abs(x=Tensor([82, 9, 3091737],"float32"), )
paddle.abs(x=Tensor([87, 2622646, 10],"float32"), )
paddle.abs(x=Tensor([87, 38, 690170],"float32"), )
paddle.abs(x=Tensor([87, 6556614, 2, 2],"float32"), )
paddle.abs(x=Tensor([87, 722, 18163, 2],"float32"), )
paddle.abs(x=Tensor([87, 722, 2, 18163],"float32"), )
paddle.acos(Tensor([10, 20, 11408507],"float32"), )
paddle.acos(Tensor([10, 228170138, 1],"float32"), )
paddle.acos(Tensor([10, 228170138],"float32"), )
paddle.acos(Tensor([1073741825, 4],"float16"), )
paddle.acos(Tensor([114085069, 20, 1],"float32"), )
paddle.acos(Tensor([2, 2147483649],"float16"), )
paddle.acos(Tensor([228170138, 10],"float32"), )
paddle.acos(x=Tensor([253522376, 3, 3],"float32"), )
paddle.acos(x=Tensor([3, 253522376, 3],"float32"), )
paddle.acos(x=Tensor([3, 3, 253522376],"float32"), )
paddle.acos(x=Tensor([3, 3, 477218589],"float16"), )
paddle.acos(x=Tensor([3, 477218589, 3],"float16"), )
paddle.acos(x=Tensor([477218589, 3, 3],"float16"), )
paddle.acosh(Tensor([10, 20, 11408507],"float32"), )
paddle.acosh(Tensor([10, 228170138, 1],"float32"), )
paddle.acosh(Tensor([114085069, 20, 1],"float32"), )
paddle.add(Tensor([1, 1024, 34817, 64],"float32"), Tensor([1, 1024, 34817, 64],"float32"), None, )
paddle.add(Tensor([1, 1024, 62, 35940],"float32"), Tensor([1, 1024, 62, 35940],"float32"), None, )
paddle.add(Tensor([1, 1024, 62, 64],"float32"), Tensor([562, 1024, 62, 64],"float32"), None, )
paddle.add(Tensor([1, 1114113, 32, 64],"float32"), Tensor([1, 1114113, 32, 64],"float32"), )
paddle.add(Tensor([1, 112, 318318, 64],"float32"), Tensor([1, 112, 318318, 64],"float32"), )
paddle.add(Tensor([1, 112, 32, 636636],"float32"), Tensor([1, 112, 32, 636636],"float32"), )
paddle.add(Tensor([1, 112, 32, 64],"float32"), Tensor([9948, 112, 32, 64],"float32"), )
paddle.add(Tensor([1, 575026, 62, 64],"float32"), Tensor([1, 575026, 62, 64],"float32"), None, )
paddle.add(Tensor([100, 1, 11408507, 2],"float32"), Tensor([100, 1, 11408507, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 11408507, 2],"float32"), Tensor([100, 1, 11408507, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 2, 11408507],"float32"), Tensor([100, 1, 2, 11408507],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 2, 11408507],"float32"), Tensor([100, 1, 2, 11408507],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 2, 2],"float32"), Tensor([100, 5704254, 2, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 2, 2],"float32"), Tensor([100, 5704254, 2, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 22817014],"float32"), Tensor([100, 1, 22817014],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 22817014],"float32"), Tensor([100, 1, 22817014],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 2],"float32"), Tensor([100, 11408507, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 2],"float32"), Tensor([100, 11408507, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 11408507, 2],"float32"), Tensor([100, 1, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 11408507, 2],"float32"), Tensor([100, 1, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 11408507, 2],"float32"), Tensor([100, 11408507, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 11408507, 2],"float32"), Tensor([100, 11408507, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1],"float32"), Tensor([100, 22817014],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1],"float32"), Tensor([100, 22817014],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 22817014],"float32"), Tensor([100, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 22817014],"float32"), Tensor([100, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 5704254, 2, 2],"float32"), Tensor([100, 1, 2, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 5704254, 2, 2],"float32"), Tensor([100, 1, 2, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 5704254, 2, 2],"float32"), Tensor([100, 5704254, 2, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 5704254, 2, 2],"float32"), Tensor([100, 5704254, 2, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([1073741825, 4],"float16"), Tensor([4],"float16"), name="Uniform_sample", )
paddle.add(Tensor([1140850690, 1, 2],"float32"), Tensor([1140850690, 1, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([1140850690, 1, 2],"float32"), Tensor([1140850690, 1, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([12544, 16, 11369],"float32"), Tensor([12544, 16, 11369],"float32"), )
paddle.add(Tensor([12544, 7579, 24],"float32"), Tensor([12544, 7579, 24],"float32"), )
paddle.add(Tensor([13, 1772884, 99],"float32"), Tensor([99],"float32"), )
paddle.add(Tensor([16, 1, 142606337, 1],"float32"), Tensor([1],"float32"), name="Normal_sample", )
paddle.add(Tensor([16, 1, 25, 5704254],"float32"), Tensor([1],"float32"), name="Normal_sample", )
paddle.add(Tensor([16, 5704254, 25, 1],"float32"), Tensor([1],"float32"), name="Normal_sample", )
paddle.add(Tensor([1],"float32"), Tensor([2281701379],"float32"), name="Cauchy_entropy", )
paddle.add(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), name="Normal_entropy", )
paddle.add(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), name=None, )
paddle.add(Tensor([2, 1140851, 1, 1000],"float32"), Tensor([1000],"float32"), )
paddle.add(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), name="Normal_kl_divergence", )
paddle.add(Tensor([2, 3, 3, 126761188],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.add(Tensor([2, 3, 380284, 1000],"float32"), Tensor([1000],"float32"), )
paddle.add(Tensor([2, 3, 95070891, 4],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.add(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), name="Normal_kl_divergence", )
paddle.add(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([2281701379],"float32"), Tensor([1],"float32"), name="Cauchy_entropy", )
paddle.add(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), name="Cauchy_entropy", )
paddle.add(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([286331154, 5, 3],"float16"), Tensor([5, 3],"float16"), name="Uniform_sample", )
paddle.add(Tensor([3292499, 7, 99],"float32"), Tensor([99],"float32"), )
paddle.add(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), name="Normal_entropy", )
paddle.add(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), name="Normal_kl_divergence", )
paddle.add(Tensor([5, 10, 15, 3042269],"float32"), Tensor([5, 10, 15, 3042269],"float32"), name=None, )
paddle.add(Tensor([5, 10, 2281702, 20],"float32"), Tensor([5, 10, 2281702, 20],"float32"), name=None, )
paddle.add(Tensor([5, 1521135, 15, 20],"float32"), Tensor([5, 1521135, 15, 20],"float32"), name=None, )
paddle.add(Tensor([562, 1024, 62, 64],"float32"), Tensor([1, 1024, 62, 64],"float32"), None, )
paddle.add(Tensor([562, 1024, 62, 64],"float32"), Tensor([562, 1024, 62, 64],"float32"), None, )
paddle.add(Tensor([570425345, 1, 2, 2],"float32"), Tensor([570425345, 1, 2, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([570425345, 1, 2, 2],"float32"), Tensor([570425345, 1, 2, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([5941931, 16, 24],"float32"), Tensor([5941931, 16, 24],"float32"), )
paddle.add(Tensor([63380594, 3, 3, 4],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.add(Tensor([64, 1741, 512, 1, 40],"float32"), Tensor([64, 1741, 512, 1, 1],"float32"), )
paddle.add(Tensor([71303169, 8, 4],"float32"), Tensor([8, 4],"float32"), )
paddle.add(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), name="Normal_entropy", )
paddle.add(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), name=None, )
paddle.add(Tensor([760568, 10, 15, 20],"float32"), Tensor([760568, 10, 15, 20],"float32"), name=None, )
paddle.add(Tensor([760568, 3, 1, 1000],"float32"), Tensor([1000],"float32"), )
paddle.add(Tensor([91268056, 1, 25, 1],"float32"), Tensor([1],"float32"), name="Normal_sample", )
paddle.add(Tensor([9948, 112, 32, 64],"float32"), Tensor([1, 112, 32, 64],"float32"), )
paddle.add(Tensor([9948, 112, 32, 64],"float32"), Tensor([9948, 112, 32, 64],"float32"), )
paddle.add(x=Tensor([1, 1024, 14, 14],"float32"), y=Tensor([11369, 1024, 14, 14],"float32"), )
paddle.add(x=Tensor([1, 1024, 14, 159159],"float32"), y=Tensor([1, 1024, 14, 159159],"float32"), )
paddle.add(x=Tensor([1, 1024, 159159, 14],"float32"), y=Tensor([1, 1024, 159159, 14],"float32"), )
paddle.add(x=Tensor([1, 11641334, 14, 14],"float32"), y=Tensor([1, 11641334, 14, 14],"float32"), )
paddle.add(x=Tensor([11369, 1024, 14, 14],"float32"), y=Tensor([1, 1024, 14, 14],"float32"), )
paddle.add(x=Tensor([11369, 1024, 14, 14],"float32"), y=Tensor([11369, 1024, 14, 14],"float32"), )
paddle.add(x=Tensor([2, 1140850690],"float32"), y=Tensor([2, 1140850690],"float32"), )
paddle.add(x=Tensor([253522376, 3, 3],"float32"), y=Tensor([253522376, 3, 3],"float32"), )
paddle.add(x=Tensor([2843, 1024, 4, 14, 14],"float32"), y=Tensor([2843, 1024, 4, 14, 14],"float32"), )
paddle.add(x=Tensor([3, 253522376, 3],"float32"), y=Tensor([3, 253522376, 3],"float32"), )
paddle.add(x=Tensor([3, 3, 253522376],"float32"), y=Tensor([3, 3, 253522376],"float32"), )
paddle.add(x=Tensor([8, 1024, 1422, 14, 14],"float32"), y=Tensor([8, 1024, 1422, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 1024, 4, 14, 4974],"float32"), y=Tensor([8, 1024, 4, 14, 4974],"float32"), )
paddle.add(x=Tensor([8, 1024, 4, 4974, 14],"float32"), y=Tensor([8, 1024, 4, 4974, 14],"float32"), )
paddle.add(x=Tensor([8, 363792, 4, 14, 14],"float32"), y=Tensor([8, 363792, 4, 14, 14],"float32"), )
paddle.add(x=Tensor([95070891, 24],"float32"), y=Tensor([95070891, 24],"float32"), )
paddle.add_n(Tensor([15955954, 13, 11],"float32"), )
paddle.add_n(Tensor([2, 103713700, 11],"float32"), )
paddle.add_n(Tensor([2, 13, 87757746],"float32"), )
paddle.add_n(inputs=Tensor([1073741825, 4],"float16"), )
paddle.add_n(inputs=Tensor([2281701379],"float32"), )
paddle.add_n(inputs=Tensor([2281701379],"int64"), )
paddle.add_n(inputs=Tensor([268435457, 4, 4],"float16"), )
paddle.add_n(inputs=Tensor([4, 1073741825],"float16"), )
paddle.add_n(inputs=Tensor([4, 268435457, 4],"float16"), )
paddle.add_n(inputs=Tensor([4, 4, 268435457],"float16"), )
paddle.add_n(inputs=Tensor([4, 4, 4, 67108865],"float16"), )
paddle.add_n(inputs=Tensor([4, 4, 67108865, 4],"float16"), )
paddle.add_n(inputs=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.add_n(inputs=Tensor([4294967297],"float16"), )
paddle.add_n(inputs=Tensor([67108865, 4, 4, 4],"float16"), )
paddle.add_n(list[Tensor([10, 1, 10, 4563403, 5],"float32"),Tensor([10, 1, 10, 4563403, 5],"float32"),Tensor([10, 1, 10, 4563403, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 4563403],"float32"),Tensor([10, 1, 10, 5, 4563403],"float32"),Tensor([10, 1, 10, 5, 4563403],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 912681, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 912681, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 9126806, 5, 5],"float32"),Tensor([10, 1, 9126806, 5, 5],"float32"),Tensor([10, 1, 9126806, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 912681, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 912681, 10, 5, 5],"float32"),Tensor([10, 912681, 10, 5, 5],"float32"),Tensor([10, 912681, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([100, 1],"float32"),Tensor([100, 22817014],"float32"),], )
paddle.add_n(list[Tensor([100, 22817014],"float32"),Tensor([100, 1],"float32"),], )
paddle.add_n(list[Tensor([100, 22817014],"float32"),Tensor([100, 22817014],"float32"),], )
paddle.add_n(list[Tensor([1073741825, 4],"float16"),Tensor([1073741825, 4],"float16"),Tensor([1073741825, 4],"float16"),], )
paddle.add_n(list[Tensor([107374183, 40],"float16"),Tensor([107374183, 40],"float16"),Tensor([107374183, 40],"float16"),], )
paddle.add_n(list[Tensor([1200, 1901418],"float32"),Tensor([1200, 1901418],"float32"),], )
paddle.add_n(list[Tensor([1200, 1901418],"float32"),Tensor([1200, 1],"float32"),], )
paddle.add_n(list[Tensor([1200, 1],"float32"),Tensor([1200, 1901418],"float32"),], )
paddle.add_n(list[Tensor([1291, 1767391],"float32"),Tensor([1291, 1767391],"float32"),], )
paddle.add_n(list[Tensor([1291, 1767391],"float32"),Tensor([1291, 1],"float32"),], )
paddle.add_n(list[Tensor([1291, 1],"float32"),Tensor([1291, 1767391],"float32"),], )
paddle.add_n(list[Tensor([17409, 128, 32, 32],"float32"),Tensor([17409, 128, 32, 32],"float32"),], )
paddle.add_n(list[Tensor([1800, 1267612],"float32"),Tensor([1800, 1267612],"float32"),], )
paddle.add_n(list[Tensor([1800, 1267612],"float32"),Tensor([1800, 1],"float32"),], )
paddle.add_n(list[Tensor([1800, 1],"float32"),Tensor([1800, 1267612],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.add_n(list[Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),], )
paddle.add_n(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], )
paddle.add_n(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], )
paddle.add_n(list[Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),], )
paddle.add_n(list[Tensor([32769, 128, 32, 32],"float16"),Tensor([32769, 128, 32, 32],"float16"),], )
paddle.add_n(list[Tensor([4, 1073741825],"float16"),Tensor([4, 1073741825],"float16"),Tensor([4, 1073741825],"float16"),], )
paddle.add_n(list[Tensor([4353, 128, 64, 64],"float32"),Tensor([4353, 128, 64, 64],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 16385, 32],"float16"),Tensor([64, 128, 16385, 32],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 32, 16385],"float16"),Tensor([64, 128, 32, 16385],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 32, 8705],"float32"),Tensor([64, 128, 32, 8705],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 4353, 64],"float32"),Tensor([64, 128, 4353, 64],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 64, 4353],"float32"),Tensor([64, 128, 64, 4353],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 64, 8193],"float16"),Tensor([64, 128, 64, 8193],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 8193, 64],"float16"),Tensor([64, 128, 8193, 64],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 8705, 32],"float32"),Tensor([64, 128, 8705, 32],"float32"),], )
paddle.add_n(list[Tensor([64, 16385, 64, 64],"float16"),Tensor([64, 16385, 64, 64],"float16"),], )
paddle.add_n(list[Tensor([64, 34817, 32, 32],"float32"),Tensor([64, 34817, 32, 32],"float32"),], )
paddle.add_n(list[Tensor([64, 65537, 32, 32],"float16"),Tensor([64, 65537, 32, 32],"float16"),], )
paddle.add_n(list[Tensor([64, 8705, 64, 64],"float32"),Tensor([64, 8705, 64, 64],"float32"),], )
paddle.add_n(list[Tensor([8193, 128, 64, 64],"float16"),Tensor([8193, 128, 64, 64],"float16"),], )
paddle.add_n(list[Tensor([9126806, 1, 10, 5, 5],"float32"),Tensor([9126806, 1, 10, 5, 5],"float32"),Tensor([9126806, 1, 10, 5, 5],"float32"),], )
paddle.addmm(input=Tensor([1, 1],"float16"), x=Tensor([1073741825, 4],"float16"), y=Tensor([4, 5],"float16"), beta=-3.3, alpha=3.3, )
paddle.addmm(input=Tensor([1, 1],"float16"), x=Tensor([5, 4],"float16"), y=Tensor([4, 1073741825],"float16"), beta=-3.3, alpha=3.3, )
paddle.addmm(input=Tensor([5, 1],"float16"), x=Tensor([5, 4],"float16"), y=Tensor([4, 1073741825],"float16"), beta=-3.3, alpha=3.3, )
paddle.all(Tensor([1, 2281701379],"bool"), )
paddle.all(Tensor([1140850690, 2],"bool"), )
paddle.all(Tensor([12, 190141782],"bool"), )
paddle.all(Tensor([12, 190141782],"bool"), axis=-1, )
paddle.all(Tensor([12, 190141782],"bool"), axis=0, )
paddle.all(Tensor([12, 190141782],"bool"), axis=1, keepdim=True, )
paddle.all(Tensor([12, 190141782],"int64"), )
paddle.all(Tensor([13, 175515491],"bool"), )
paddle.all(Tensor([2, 1140850690],"bool"), )
paddle.all(Tensor([2, 3, 4, 95070891],"bool"), )
paddle.all(Tensor([2, 3, 76056713, 5],"bool"), )
paddle.all(Tensor([2, 57042535, 4, 5],"bool"), )
paddle.all(Tensor([2281701379, 1],"bool"), )
paddle.all(Tensor([2281701379],"bool"), )
paddle.all(Tensor([2281701379],"bool"), axis=-1, )
paddle.all(Tensor([2281701379],"bool"), axis=0, )
paddle.all(Tensor([228170138, 10],"bool"), )
paddle.all(Tensor([228170138, 10],"bool"), axis=-1, )
paddle.all(Tensor([228170138, 10],"bool"), axis=0, )
paddle.all(Tensor([228170138, 10],"bool"), axis=1, keepdim=True, )
paddle.all(Tensor([228170138, 10],"int64"), )
paddle.all(Tensor([253522376, 9],"bool"), )
paddle.all(Tensor([285212673, 8],"bool"), )
paddle.all(Tensor([3, 760567127],"bool"), )
paddle.all(Tensor([3, 760567127],"bool"), axis=None, )
paddle.all(Tensor([3, 760567127],"bool"), keepdim=True, )
paddle.all(Tensor([38028357, 3, 4, 5],"bool"), )
paddle.all(Tensor([38028357, 6, 10],"bool"), None, False, None, )
paddle.all(Tensor([38028357, 6, 10],"int64"), None, False, None, )
paddle.all(Tensor([4, 570425345],"bool"), )
paddle.all(Tensor([456340276, 5],"bool"), )
paddle.all(Tensor([456340276, 5],"bool"), axis=None, )
paddle.all(Tensor([456340276, 5],"bool"), keepdim=True, )
paddle.all(Tensor([5, 45634028, 10],"bool"), None, False, None, )
paddle.all(Tensor([5, 45634028, 10],"int64"), None, False, None, )
paddle.all(Tensor([5, 6, 76056713],"bool"), None, False, None, )
paddle.all(Tensor([5, 6, 76056713],"int64"), None, False, None, )
paddle.all(Tensor([570425345, 4],"bool"), )
paddle.all(Tensor([57042535, 40],"bool"), )
paddle.all(Tensor([8, 285212673],"bool"), )
paddle.all(x=Tensor([10, 228170138],"bool"), )
paddle.all(x=Tensor([2, 1140850690],"bool"), keepdim=True, )
paddle.all(x=Tensor([2, 142606337, 4, 2],"bool"), )
paddle.all(x=Tensor([2, 142606337, 4, 2],"bool"), axis=1, )
paddle.all(x=Tensor([2, 142606337, 4, 2],"bool"), axis=tuple(0,1,), )
paddle.all(x=Tensor([2, 4, 142606337, 2],"bool"), )
paddle.all(x=Tensor([2, 4, 142606337, 2],"bool"), axis=1, )
paddle.all(x=Tensor([2, 4, 142606337, 2],"bool"), axis=tuple(0,1,), )
paddle.all(x=Tensor([2, 4, 4, 71303169],"bool"), )
paddle.all(x=Tensor([2, 4, 4, 71303169],"bool"), axis=1, )
paddle.all(x=Tensor([2, 4, 4, 71303169],"bool"), axis=tuple(0,1,), )
paddle.all(x=Tensor([2281701379],"bool"), )
paddle.all(x=Tensor([228170138, 10],"bool"), )
paddle.all(x=Tensor([285212673, 4, 2],"bool"), )
paddle.all(x=Tensor([3, 380283564, 2],"bool"), )
paddle.all(x=Tensor([3, 4, 190141782],"bool"), )
paddle.all(x=Tensor([570425345, 4],"bool"), keepdim=True, )
paddle.all(x=Tensor([71303169, 4, 4, 2],"bool"), )
paddle.all(x=Tensor([71303169, 4, 4, 2],"bool"), axis=1, )
paddle.all(x=Tensor([71303169, 4, 4, 2],"bool"), axis=tuple(0,1,), )
paddle.allclose(Tensor([1, 11408507, 200],"float32"), Tensor([1, 11408507, 200],"float32"), )
paddle.allclose(Tensor([1, 20, 114085069],"float32"), Tensor([1, 20, 114085069],"float32"), )
paddle.allclose(Tensor([1, 20, 200],"float32"), Tensor([570426, 20, 200],"float32"), )
paddle.allclose(Tensor([1, 20, 32],"float32"), Tensor([3565159, 20, 32],"float32"), )
paddle.allclose(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([1, 5, 32],"float32"), Tensor([14260634, 5, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([1, 5, 456340276],"float32"), Tensor([1, 5, 456340276],"float32"), atol=1e-05, )
paddle.allclose(Tensor([1, 71303169, 32],"float32"), Tensor([1, 71303169, 32],"float32"), )
paddle.allclose(Tensor([1, 71303169, 32],"float32"), Tensor([1, 71303169, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([1, 8],"float32"), Tensor([285212673, 8],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), rtol=1e-05, atol=1e-08, )
paddle.allclose(Tensor([10186167, 7, 32],"float32"), Tensor([10186167, 7, 32],"float32"), )
paddle.allclose(Tensor([1124, 2029984],"float32"), Tensor([1124, 2029984],"float32"), )
paddle.allclose(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([11883862, 3, 8, 8],"float32"), Tensor([11883862, 3, 8, 8],"float32"), )
paddle.allclose(Tensor([13, 13, 13501192],"float32"), Tensor([13, 13, 13501192],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 1371215, 128],"float32"), Tensor([13, 1371215, 128],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 175515491],"float32"), Tensor([13, 175515491],"float32"), atol=0.001, )
paddle.allclose(Tensor([13, 175515491],"float32"), Tensor([13, 175515491],"float32"), atol=0.01, )
paddle.allclose(Tensor([13, 175515491],"float32"), Tensor([13, 175515491],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 32, 5484860],"float32"), Tensor([13, 32, 5484860],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 5484860, 32],"float32"), Tensor([13, 5484860, 32],"float32"), )
paddle.allclose(Tensor([13, 5484860, 32],"float32"), Tensor([13, 5484860, 32],"float32"), atol=0.0001, )
paddle.allclose(Tensor([13, 5484860, 32],"float32"), Tensor([13, 5484860, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 7, 25073642],"float32"), Tensor([13, 7, 25073642],"float32"), )
paddle.allclose(Tensor([13, 8, 21939437],"float32"), Tensor([13, 8, 21939437],"float32"), atol=0.0001, )
paddle.allclose(Tensor([1371215, 13, 128],"float32"), Tensor([1371215, 13, 128],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([14, 10186167, 16],"float32"), Tensor([14, 10186167, 16],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 162978670],"float32"), Tensor([14, 162978670],"float32"), atol=0.001, )
paddle.allclose(Tensor([14, 40744668, 4],"float32"), Tensor([14, 40744668, 4],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 64, 2546542],"float32"), Tensor([14, 64, 2546542],"float32"), atol=1e-05, )
paddle.allclose(Tensor([142606337, 16],"float32"), Tensor([142606337, 16],"float32"), )
paddle.allclose(Tensor([142606337, 16],"float32"), Tensor([142606337, 16],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([14260634, 5, 32],"float32"), Tensor([1, 5, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14260634, 5, 32],"float32"), Tensor([14260634, 5, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([16, 142606337],"float32"), Tensor([16, 142606337],"float32"), )
paddle.allclose(Tensor([175515491, 13],"float32"), Tensor([175515491, 13],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([1],"bool"), Tensor([2281701379],"bool"), 0.0, 0.0, False, )
paddle.allclose(Tensor([1],"float16"), Tensor([4294967297],"float16"), atol=0.0001, rtol=0.0001, )
paddle.allclose(Tensor([1],"float16"), Tensor([4294967297],"float16"), rtol=0.015, atol=0.0, name="test_8", )
paddle.allclose(Tensor([1],"float32"), Tensor([2281701379],"float32"), rtol=0.01, atol=0.0, name="test_7", )
paddle.allclose(Tensor([1],"int32"), Tensor([2281701379],"int32"), 50.0, 48.0, False, )
paddle.allclose(Tensor([1],"int32"), Tensor([2281701379],"int32"), 50.0, 49.0, False, )
paddle.allclose(Tensor([1],"int64"), Tensor([2281701379],"int64"), 50.0, 48.0, False, )
paddle.allclose(Tensor([1],"int64"), Tensor([2281701379],"int64"), 50.0, 49.0, False, )
paddle.allclose(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), atol=0.0001, )
paddle.allclose(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), atol=0.001, )
paddle.allclose(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), atol=1e-06, )
paddle.allclose(Tensor([2, 17825793, 8, 8],"float32"), Tensor([2, 17825793, 8, 8],"float32"), )
paddle.allclose(Tensor([2, 3, 47535446, 8],"float32"), Tensor([2, 3, 47535446, 8],"float32"), )
paddle.allclose(Tensor([2, 3, 8, 47535446],"float32"), Tensor([2, 3, 8, 47535446],"float32"), )
paddle.allclose(Tensor([2228225, 32, 32],"float32"), Tensor([2228225, 32, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([2228225, 64, 16],"float32"), Tensor([2228225, 64, 16],"float32"), atol=1e-05, )
paddle.allclose(Tensor([2281701379],"bool"), Tensor([1],"bool"), 0.0, 0.0, False, )
paddle.allclose(Tensor([2281701379],"bool"), Tensor([2281701379],"bool"), 0.0, 0.0, False, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([1],"float32"), rtol=0.01, atol=0.0, name="test_7", )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), atol=0.0001, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), atol=0.001, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), atol=0.5, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), atol=1e-06, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), rtol=0.01, atol=0.0, name="test_7", )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_1", )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_3", )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_5", )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_2", )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_4", )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_6", )
paddle.allclose(Tensor([2281701379],"int32"), Tensor([1],"int32"), 50.0, 48.0, False, )
paddle.allclose(Tensor([2281701379],"int32"), Tensor([1],"int32"), 50.0, 49.0, False, )
paddle.allclose(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), 50.0, 48.0, False, )
paddle.allclose(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), 50.0, 49.0, False, )
paddle.allclose(Tensor([2281701379],"int64"), Tensor([1],"int64"), 50.0, 48.0, False, )
paddle.allclose(Tensor([2281701379],"int64"), Tensor([1],"int64"), 50.0, 49.0, False, )
paddle.allclose(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), 50.0, 48.0, False, )
paddle.allclose(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), 50.0, 49.0, False, )
paddle.allclose(Tensor([285212673, 8],"float32"), Tensor([1, 8],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([285212673, 8],"float32"), Tensor([285212673, 8],"float32"), atol=1e-06, )
paddle.allclose(Tensor([285212673, 8],"float32"), Tensor([285212673, 8],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([3565159, 20, 32],"float32"), Tensor([1, 20, 32],"float32"), )
paddle.allclose(Tensor([3565159, 20, 32],"float32"), Tensor([3565159, 20, 32],"float32"), )
paddle.allclose(Tensor([4, 570425345],"float32"), Tensor([4, 570425345],"float32"), atol=1e-06, )
paddle.allclose(Tensor([4294967297],"float16"), Tensor([1],"float16"), atol=0.0001, rtol=0.0001, )
paddle.allclose(Tensor([4294967297],"float16"), Tensor([1],"float16"), rtol=0.015, atol=0.0, name="test_8", )
paddle.allclose(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), atol=0.0001, rtol=0.0001, )
paddle.allclose(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), rtol=0.015, atol=0.0, name="test_8", )
paddle.allclose(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), rtol=1e-05, atol=1e-08, )
paddle.allclose(Tensor([456340276, 5],"float32"), Tensor([456340276, 5],"float32"), atol=1e-06, )
paddle.allclose(Tensor([5484860, 13, 32],"float32"), Tensor([5484860, 13, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([570426, 20, 200],"float32"), Tensor([1, 20, 200],"float32"), )
paddle.allclose(Tensor([570426, 20, 200],"float32"), Tensor([570426, 20, 200],"float32"), )
paddle.allclose(Tensor([64, 35651585],"float32"), Tensor([64, 35651585],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([71303169, 32],"float32"), Tensor([71303169, 32],"float32"), )
paddle.allclose(Tensor([71303169, 32],"float32"), Tensor([71303169, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), atol=0.0001, )
paddle.allclose(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), atol=0.001, )
paddle.allclose(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), atol=0.01, )
paddle.allclose(Tensor([8912897, 64, 4],"float32"), Tensor([8912897, 64, 4],"float32"), atol=1e-05, )
paddle.allclose(Tensor([8912897, 8, 32],"float32"), Tensor([8912897, 8, 32],"float32"), atol=0.0001, )
paddle.allclose(x=Tensor([1],"float16"), y=Tensor([4294967297],"float16"), )
paddle.allclose(x=Tensor([1],"float16"), y=Tensor([4294967297],"float16"), rtol=0.01, atol=0.0, equal_nan=False, )
paddle.allclose(x=Tensor([1],"float16"), y=Tensor([4294967297],"float16"), rtol=0.01, atol=0.01, equal_nan=False, )
paddle.allclose(x=Tensor([1],"float16"), y=Tensor([4294967297],"float16"), rtol=1e-05, atol=0.001, equal_nan=False, )
paddle.allclose(x=Tensor([1],"float16"), y=Tensor([4294967297],"float16"), rtol=1e-06, atol=0.001, equal_nan=False, )
paddle.allclose(x=Tensor([1],"float32"), y=Tensor([2281701379],"float32"), rtol=0.01, atol=0.01, equal_nan=False, )
paddle.allclose(x=Tensor([2, 2, 2, 536870913],"float16"), y=Tensor([2, 2, 2, 536870913],"float16"), )
paddle.allclose(x=Tensor([2, 2, 2, 536870913],"float16"), y=Tensor([2, 2, 2, 536870913],"float16"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([2, 2, 357913942, 3],"float16"), y=Tensor([2, 2, 357913942, 3],"float16"), )
paddle.allclose(x=Tensor([2, 2, 357913942, 3],"float16"), y=Tensor([2, 2, 357913942, 3],"float16"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([2, 357913942, 2, 3],"float16"), y=Tensor([2, 357913942, 2, 3],"float16"), )
paddle.allclose(x=Tensor([2, 357913942, 2, 3],"float16"), y=Tensor([2, 357913942, 2, 3],"float16"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([2281701379],"float32"), y=Tensor([1],"float32"), rtol=0.01, atol=0.01, equal_nan=False, )
paddle.allclose(x=Tensor([2281701379],"float32"), y=Tensor([2281701379],"float32"), rtol=0.01, atol=0.01, equal_nan=False, )
paddle.allclose(x=Tensor([357913942, 2, 2, 3],"float16"), y=Tensor([357913942, 2, 2, 3],"float16"), )
paddle.allclose(x=Tensor([357913942, 2, 2, 3],"float16"), y=Tensor([357913942, 2, 2, 3],"float16"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([1],"float16"), )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([1],"float16"), rtol=0.01, atol=0.0, equal_nan=False, )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([1],"float16"), rtol=0.01, atol=0.01, equal_nan=False, )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([1],"float16"), rtol=1e-05, atol=0.001, equal_nan=False, )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([1],"float16"), rtol=1e-05, atol=0.001, equal_nan=True, )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([1],"float16"), rtol=1e-06, atol=0.001, equal_nan=False, )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), rtol=0.01, atol=0.0, equal_nan=False, )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), rtol=0.01, atol=0.01, equal_nan=False, )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), rtol=1e-05, atol=0.001, equal_nan=False, )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), rtol=1e-05, atol=0.001, equal_nan=True, )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), rtol=1e-06, atol=0.001, equal_nan=False, )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), rtol=1e-06, atol=0.001, equal_nan=True, )
paddle.amax(Tensor([10, 10, 22817014],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amax(Tensor([10, 10, 22817014],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amax(Tensor([10, 10, 22817014],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amax(Tensor([10, 10, 22817014],"float32"), keepdim=False, )
paddle.amax(Tensor([10, 10, 22817014],"float32"), keepdim=True, )
paddle.amax(Tensor([10, 22817014, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amax(Tensor([10, 22817014, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amax(Tensor([10, 22817014, 10],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amax(Tensor([10, 22817014, 10],"float32"), keepdim=False, )
paddle.amax(Tensor([10, 22817014, 10],"float32"), keepdim=True, )
paddle.amax(Tensor([114085069, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([2, 1140850690],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([2, 2, 570425345],"int32"), tuple(0,1,), False, )
paddle.amax(Tensor([2, 285212673, 4],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([2, 5, 228170138],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([2, 570425345, 2],"int32"), tuple(0,1,), False, )
paddle.amax(Tensor([2281701379],"float32"), axis=0, )
paddle.amax(Tensor([2281701379],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([2281701379],"float32"), keepdim=True, )
paddle.amax(Tensor([2281701379],"int32"), axis=None, keepdim=False, )
paddle.amax(Tensor([2281701379],"int64"), axis=None, keepdim=False, )
paddle.amax(Tensor([22817014, 10, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amax(Tensor([22817014, 10, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amax(Tensor([22817014, 10, 10],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amax(Tensor([22817014, 10, 10],"float32"), keepdim=False, )
paddle.amax(Tensor([22817014, 10, 10],"float32"), keepdim=True, )
paddle.amax(Tensor([3, 2, 4, 95070891],"float32"), axis=-1, keepdim=True, )
paddle.amax(Tensor([3, 2, 5, 76056713],"float32"), axis=2, keepdim=True, )
paddle.amax(Tensor([3, 2, 5, 76056713],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([3, 2, 5, 76056713],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amax(Tensor([3, 2, 76056713, 5],"float32"), axis=-1, keepdim=True, )
paddle.amax(Tensor([3, 2, 95070891, 4],"float32"), axis=2, keepdim=True, )
paddle.amax(Tensor([3, 2, 95070891, 4],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([3, 2, 95070891, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amax(Tensor([3, 38028357, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amax(Tensor([3, 38028357, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amax(Tensor([3, 38028357, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([3, 38028357, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amax(Tensor([3, 760567127],"float32"), axis=None, )
paddle.amax(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.amax(Tensor([456340276, 5],"float32"), axis=None, )
paddle.amax(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.amax(Tensor([570425345, 2, 2],"int32"), tuple(0,1,), False, )
paddle.amax(Tensor([570425345, 4],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([57042535, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amax(Tensor([57042535, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amax(Tensor([57042535, 2, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([57042535, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amin(Tensor([10, 10, 22817014],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amin(Tensor([10, 10, 22817014],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amin(Tensor([10, 10, 22817014],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amin(Tensor([10, 10, 22817014],"float32"), keepdim=False, )
paddle.amin(Tensor([10, 10, 22817014],"float32"), keepdim=True, )
paddle.amin(Tensor([10, 22817014, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amin(Tensor([10, 22817014, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amin(Tensor([10, 22817014, 10],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amin(Tensor([10, 22817014, 10],"float32"), keepdim=False, )
paddle.amin(Tensor([10, 22817014, 10],"float32"), keepdim=True, )
paddle.amin(Tensor([114085069, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([2, 1140850690],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([2, 2, 570425345],"int32"), tuple(0,1,), False, )
paddle.amin(Tensor([2, 285212673, 4],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([2, 5, 228170138],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([2, 570425345, 2],"int32"), tuple(0,1,), False, )
paddle.amin(Tensor([2281701379],"float32"), axis=0, )
paddle.amin(Tensor([2281701379],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([2281701379],"float32"), keepdim=True, )
paddle.amin(Tensor([2281701379],"int32"), axis=None, keepdim=False, )
paddle.amin(Tensor([2281701379],"int64"), axis=None, keepdim=False, )
paddle.amin(Tensor([22817014, 10, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amin(Tensor([22817014, 10, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amin(Tensor([22817014, 10, 10],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amin(Tensor([22817014, 10, 10],"float32"), keepdim=False, )
paddle.amin(Tensor([22817014, 10, 10],"float32"), keepdim=True, )
paddle.amin(Tensor([3, 2, 4, 95070891],"float32"), axis=-1, keepdim=True, )
paddle.amin(Tensor([3, 2, 5, 76056713],"float32"), axis=2, keepdim=True, )
paddle.amin(Tensor([3, 2, 5, 76056713],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([3, 2, 5, 76056713],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amin(Tensor([3, 2, 76056713, 5],"float32"), axis=-1, keepdim=True, )
paddle.amin(Tensor([3, 2, 95070891, 4],"float32"), axis=2, keepdim=True, )
paddle.amin(Tensor([3, 2, 95070891, 4],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([3, 2, 95070891, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amin(Tensor([3, 38028357, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amin(Tensor([3, 38028357, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amin(Tensor([3, 38028357, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([3, 38028357, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amin(Tensor([3, 760567127],"float32"), axis=None, )
paddle.amin(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.amin(Tensor([456340276, 5],"float32"), axis=None, )
paddle.amin(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.amin(Tensor([570425345, 2, 2],"int32"), tuple(0,1,), False, )
paddle.amin(Tensor([570425345, 4],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([57042535, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amin(Tensor([57042535, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amin(Tensor([57042535, 2, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([57042535, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.any(Tensor([1, 2281701379],"bool"), )
paddle.any(Tensor([1, 300, 7605672],"bool"), )
paddle.any(Tensor([1, 557057, 4096],"bool"), )
paddle.any(Tensor([10, 2, 114085069],"bool"), )
paddle.any(Tensor([10, 228170138, 1],"bool"), )
paddle.any(Tensor([10, 228170138],"bool"), )
paddle.any(Tensor([1124, 2029984],"bool"), )
paddle.any(Tensor([114085069, 20],"bool"), )
paddle.any(Tensor([114085069, 4, 5],"bool"), )
paddle.any(Tensor([1140850690, 2, 1],"bool"), )
paddle.any(Tensor([1140850690, 2],"bool"), )
paddle.any(Tensor([1140850690, 2],"bool"), list[0,], )
paddle.any(Tensor([12, 190141782],"bool"), )
paddle.any(Tensor([12, 190141782],"bool"), axis=-1, )
paddle.any(Tensor([12, 190141782],"bool"), axis=0, )
paddle.any(Tensor([12, 190141782],"bool"), axis=1, keepdim=True, )
paddle.any(Tensor([12, 190141782],"float32"), )
paddle.any(Tensor([12, 190141782],"int64"), )
paddle.any(Tensor([13, 175515491],"bool"), )
paddle.any(Tensor([134217729, 17],"bool"), )
paddle.any(Tensor([142606337, 16],"bool"), )
paddle.any(Tensor([152113426, 15],"bool"), )
paddle.any(Tensor([16, 142606337],"bool"), )
paddle.any(Tensor([1857, 300, 4096],"bool"), )
paddle.any(Tensor([2, 1140850690],"bool"), )
paddle.any(Tensor([2, 1140850690],"bool"), list[0,], )
paddle.any(Tensor([2, 228170138, 5],"bool"), )
paddle.any(Tensor([2, 4, 285212673],"bool"), )
paddle.any(Tensor([207427399, 11],"bool"), )
paddle.any(Tensor([2281701379, 1],"bool"), )
paddle.any(Tensor([2281701379],"bool"), )
paddle.any(Tensor([2281701379],"bool"), axis=0, )
paddle.any(Tensor([228170138, 10],"bool"), )
paddle.any(Tensor([228170138, 10],"bool"), axis=-1, )
paddle.any(Tensor([228170138, 10],"bool"), axis=0, )
paddle.any(Tensor([228170138, 10],"bool"), axis=1, keepdim=True, )
paddle.any(Tensor([228170138, 10],"float32"), )
paddle.any(Tensor([228170138, 10],"int64"), )
paddle.any(Tensor([3, 760567127],"bool"), axis=None, )
paddle.any(Tensor([3, 760567127],"bool"), keepdim=True, )
paddle.any(Tensor([325957340, 7],"bool"), )
paddle.any(Tensor([38028357, 6, 10],"bool"), None, False, None, )
paddle.any(Tensor([38028357, 6, 10],"int64"), None, False, None, )
paddle.any(Tensor([456340276, 5],"bool"), axis=None, )
paddle.any(Tensor([456340276, 5],"bool"), keepdim=True, )
paddle.any(Tensor([5, 45634028, 10],"bool"), None, False, None, )
paddle.any(Tensor([5, 45634028, 10],"int64"), None, False, None, )
paddle.any(Tensor([5, 6, 76056713],"bool"), None, False, None, )
paddle.any(Tensor([5, 6, 76056713],"int64"), None, False, None, )
paddle.any(Tensor([57042535, 2, 4, 5],"bool"), )
paddle.any(Tensor([6, 19014179, 4, 5],"bool"), )
paddle.any(Tensor([6, 2, 38028357, 5],"bool"), )
paddle.any(Tensor([6, 2, 4, 47535446],"bool"), )
paddle.any(Tensor([71303169, 32],"bool"), )
paddle.any(Tensor([760567127, 3],"bool"), )
paddle.any(x=Tensor([10, 228170138],"bool"), )
paddle.any(x=Tensor([2, 1140850690],"bool"), keepdim=True, )
paddle.any(x=Tensor([2, 142606337, 4, 2],"bool"), )
paddle.any(x=Tensor([2, 142606337, 4, 2],"bool"), axis=1, )
paddle.any(x=Tensor([2, 142606337, 4, 2],"bool"), axis=tuple(0,1,), )
paddle.any(x=Tensor([2, 4, 142606337, 2],"bool"), )
paddle.any(x=Tensor([2, 4, 142606337, 2],"bool"), axis=1, )
paddle.any(x=Tensor([2, 4, 142606337, 2],"bool"), axis=tuple(0,1,), )
paddle.any(x=Tensor([2, 4, 4, 71303169],"bool"), )
paddle.any(x=Tensor([2, 4, 4, 71303169],"bool"), axis=1, )
paddle.any(x=Tensor([2, 4, 4, 71303169],"bool"), axis=tuple(0,1,), )
paddle.any(x=Tensor([2281701379],"bool"), )
paddle.any(x=Tensor([228170138, 10],"bool"), )
paddle.any(x=Tensor([285212673, 4, 2],"bool"), )
paddle.any(x=Tensor([3, 380283564, 2],"bool"), )
paddle.any(x=Tensor([3, 4, 190141782],"bool"), )
paddle.any(x=Tensor([570425345, 4],"bool"), keepdim=True, )
paddle.any(x=Tensor([71303169, 4, 4, 2],"bool"), )
paddle.any(x=Tensor([71303169, 4, 4, 2],"bool"), axis=1, )
paddle.any(x=Tensor([71303169, 4, 4, 2],"bool"), axis=tuple(0,1,), )
paddle.argmax(Tensor([1, 13581556, 14, 12],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([1, 2281701379],"float32"), axis=-1, )
paddle.argmax(Tensor([1, 2281701379],"float32"), axis=1, )
paddle.argmax(Tensor([1, 4294967297],"float16"), axis=-1, )
paddle.argmax(Tensor([1, 8, 14, 20372334],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([1, 8, 23767723, 12],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([10, 228170138],"float32"), )
paddle.argmax(Tensor([10, 228170138],"float32"), axis=-1, )
paddle.argmax(Tensor([10, 228170138],"float32"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([10, 228170138],"float32"), axis=1, )
paddle.argmax(Tensor([100, 22817014],"float32"), axis=-1, )
paddle.argmax(Tensor([1114113, 32, 64],"float32"), axis=1, )
paddle.argmax(Tensor([12988, 2745, 64],"float32"), axis=1, )
paddle.argmax(Tensor([12988, 32, 5490],"float32"), axis=1, )
paddle.argmax(Tensor([13, 1371215, 4, 16, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 175515491],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 1772884, 99],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 2, 2742430, 16, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 2, 4, 10969719, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 2, 4, 16, 1371215],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 7, 25073642],"float32"), axis=-1, )
paddle.argmax(Tensor([134217729, 32],"float16"), axis=-1, )
paddle.argmax(Tensor([16777217, 4, 4, 4, 4],"float16"), axis=0, )
paddle.argmax(Tensor([1697695, 8, 14, 12],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([17674763, 3, 3, 3, 3, 3],"float16"), axis=0, )
paddle.argmax(Tensor([1782580, 20, 64],"float32"), axis=1, )
paddle.argmax(Tensor([18550418, 123],"float32"), axis=-1, )
paddle.argmax(Tensor([2, 1140850690],"float32"), axis=-1, )
paddle.argmax(Tensor([2, 3, 715827883],"float16"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([2, 536870913, 4],"float16"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([2281701379],"float32"), 0, )
paddle.argmax(Tensor([228170138, 10],"float32"), )
paddle.argmax(Tensor([228170138, 10],"float32"), axis=-1, )
paddle.argmax(Tensor([228170138, 10],"float32"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([228170138, 10],"float32"), axis=1, )
paddle.argmax(Tensor([22817014, 100],"float32"), axis=-1, )
paddle.argmax(Tensor([2281702, 1000],"float32"), axis=1, )
paddle.argmax(Tensor([23047489, 99],"float32"), axis=-1, )
paddle.argmax(Tensor([29151, 100, 783],"float32"), axis=1, )
paddle.argmax(Tensor([29151, 1223, 64],"float32"), axis=1, )
paddle.argmax(Tensor([29151, 2446, 32],"float32"), axis=1, )
paddle.argmax(Tensor([3, 17674763, 3, 3, 3, 3],"float16"), axis=0, )
paddle.argmax(Tensor([3, 3, 17674763, 3, 3, 3],"float16"), axis=0, )
paddle.argmax(Tensor([3, 3, 3, 17674763, 3, 3],"float16"), axis=0, )
paddle.argmax(Tensor([3, 3, 3, 3, 17674763, 3],"float16"), axis=0, )
paddle.argmax(Tensor([3, 3, 3, 3, 3, 17674763],"float16"), axis=0, )
paddle.argmax(Tensor([3, 760567127],"float32"), )
paddle.argmax(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.argmax(Tensor([3292499, 7, 99],"float32"), axis=-1, )
paddle.argmax(Tensor([34359739, 5, 5, 5],"float16"), axis=0, )
paddle.argmax(Tensor([3565159, 20, 32],"float32"), axis=1, )
paddle.argmax(Tensor([356516, 100, 64],"float32"), axis=1, )
paddle.argmax(Tensor([357913942, 3, 4],"float16"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([380283564, 6],"float32"), axis=1, )
paddle.argmax(Tensor([3802836, 30, 20],"float32"), axis=-1, )
paddle.argmax(Tensor([4, 16777217, 4, 4, 4],"float16"), axis=0, )
paddle.argmax(Tensor([4, 4, 16777217, 4, 4],"float16"), axis=0, )
paddle.argmax(Tensor([4, 4, 4, 16777217, 4],"float16"), axis=0, )
paddle.argmax(Tensor([4, 4, 4, 4, 16777217],"float16"), axis=0, )
paddle.argmax(Tensor([4, 570425345],"float32"), axis=1, )
paddle.argmax(Tensor([4148, 27504, 20],"float32"), axis=-1, )
paddle.argmax(Tensor([4148, 30, 18336],"float32"), axis=-1, )
paddle.argmax(Tensor([43994, 51865],"float32"), axis=-1, )
paddle.argmax(Tensor([456340276, 5],"float32"), )
paddle.argmax(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.argmax(Tensor([5, 34359739, 5, 5],"float16"), axis=0, )
paddle.argmax(Tensor([5, 5, 34359739, 5],"float16"), axis=0, )
paddle.argmax(Tensor([5, 5, 5, 34359739],"float16"), axis=0, )
paddle.argmax(Tensor([713032, 100, 32],"float32"), axis=1, )
paddle.argmax(Tensor([71304, 32000],"float32"), axis=-1, )
paddle.argmax(Tensor([80239, 20, 1422],"float32"), axis=1, )
paddle.argmax(Tensor([80239, 445, 64],"float32"), axis=1, )
paddle.argmax(Tensor([80239, 889, 32],"float32"), axis=1, )
paddle.argmax(Tensor([8912897, 2, 4, 16, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([8912897, 256],"float32"), axis=-1, )
paddle.argmax(x=Tensor([2, 1140850690],"int64"), axis=-1, )
paddle.argmax(x=Tensor([2281701379, 1],"int64"), keepdim=None, )
paddle.argmax(x=Tensor([2281701379],"int64"), axis=-1, keepdim=True, )
paddle.argmax(x=Tensor([286331154, 3, 5],"float16"), axis=2, dtype=type(numpy.int64), )
paddle.argmax(x=Tensor([3, 286331154, 5],"float16"), axis=2, dtype=type(numpy.int64), )
paddle.argmax(x=Tensor([3, 3, 2, 238609295],"float16"), axis=-1, dtype="int64", )
paddle.argmax(x=Tensor([3, 3, 477218589, 1],"float16"), axis=-1, dtype="int64", )
paddle.argmax(x=Tensor([3, 3, 477218589],"float16"), )
paddle.argmax(x=Tensor([3, 3, 477218589],"float16"), axis=1, keepdim=False, )
paddle.argmax(x=Tensor([3, 3, 477218589],"float16"), axis=2, dtype=type(numpy.int64), )
paddle.argmax(x=Tensor([3, 357913942, 4],"float16"), axis=1, keepdim=False, )
paddle.argmax(x=Tensor([3, 477218589, 3],"float16"), )
paddle.argmax(x=Tensor([3, 715827883, 2, 1],"float16"), axis=-1, dtype="int64", )
paddle.argmax(x=Tensor([3, 760567127],"int64"), axis=-2, )
paddle.argmax(x=Tensor([3, 760567127],"int64"), axis=Tensor([1],"int64"), )
paddle.argmax(x=Tensor([3, 760567127],"int64"), keepdim=None, )
paddle.argmax(x=Tensor([357913942, 3, 4],"float16"), axis=1, keepdim=False, )
paddle.argmax(x=Tensor([477218589, 3, 3],"float16"), )
paddle.argmax(x=Tensor([715827883, 3, 2, 1],"float16"), axis=-1, dtype="int64", )
paddle.argmax(x=Tensor([760567127, 3],"int64"), axis=-1, )
paddle.argmax(x=Tensor([760567127, 3],"int64"), axis=-2, )
paddle.argmax(x=Tensor([760567127, 3],"int64"), axis=Tensor([1],"int64"), )
paddle.argmin(Tensor([10, 228170138],"float32"), )
paddle.argmin(Tensor([10, 228170138],"float32"), axis=-1, )
paddle.argmin(Tensor([10, 228170138],"float32"), axis=-1, keepdim=True, )
paddle.argmin(Tensor([10, 228170138],"float32"), axis=1, )
paddle.argmin(Tensor([16777217, 4, 4, 4, 4],"float16"), axis=0, )
paddle.argmin(Tensor([17674763, 3, 3, 3, 3, 3],"float16"), axis=0, )
paddle.argmin(Tensor([2281701379],"float32"), 0, )
paddle.argmin(Tensor([228170138, 10],"float32"), )
paddle.argmin(Tensor([228170138, 10],"float32"), axis=-1, )
paddle.argmin(Tensor([228170138, 10],"float32"), axis=-1, keepdim=True, )
paddle.argmin(Tensor([228170138, 10],"float32"), axis=1, )
paddle.argmin(Tensor([3, 17674763, 3, 3, 3, 3],"float16"), axis=0, )
paddle.argmin(Tensor([3, 3, 17674763, 3, 3, 3],"float16"), axis=0, )
paddle.argmin(Tensor([3, 3, 3, 17674763, 3, 3],"float16"), axis=0, )
paddle.argmin(Tensor([3, 3, 3, 3, 17674763, 3],"float16"), axis=0, )
paddle.argmin(Tensor([3, 3, 3, 3, 3, 17674763],"float16"), axis=0, )
paddle.argmin(Tensor([3, 760567127],"float32"), )
paddle.argmin(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.argmin(Tensor([34359739, 5, 5, 5],"float16"), axis=0, )
paddle.argmin(Tensor([4, 16777217, 4, 4, 4],"float16"), axis=0, )
paddle.argmin(Tensor([4, 4, 16777217, 4, 4],"float16"), axis=0, )
paddle.argmin(Tensor([4, 4, 4, 16777217, 4],"float16"), axis=0, )
paddle.argmin(Tensor([4, 4, 4, 4, 16777217],"float16"), axis=0, )
paddle.argmin(Tensor([456340276, 5],"float32"), )
paddle.argmin(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.argmin(Tensor([5, 34359739, 5, 5],"float16"), axis=0, )
paddle.argmin(Tensor([5, 5, 34359739, 5],"float16"), axis=0, )
paddle.argmin(Tensor([5, 5, 5, 34359739],"float16"), axis=0, )
paddle.argmin(x=Tensor([2, 1140850690],"int64"), axis=-1, )
paddle.argmin(x=Tensor([2281701379, 1],"int64"), keepdim=None, )
paddle.argmin(x=Tensor([2281701379],"int64"), axis=-1, keepdim=True, )
paddle.argmin(x=Tensor([286331154, 3, 5],"float16"), axis=2, dtype=type(numpy.int64), )
paddle.argmin(x=Tensor([3, 286331154, 5],"float16"), axis=2, dtype=type(numpy.int64), )
paddle.argmin(x=Tensor([3, 3, 2, 238609295],"float16"), axis=-1, dtype="int64", )
paddle.argmin(x=Tensor([3, 3, 477218589, 1],"float16"), axis=-1, dtype="int64", )
paddle.argmin(x=Tensor([3, 3, 477218589],"float16"), )
paddle.argmin(x=Tensor([3, 3, 477218589],"float16"), axis=1, keepdim=False, )
paddle.argmin(x=Tensor([3, 3, 477218589],"float16"), axis=2, dtype=type(numpy.int64), )
paddle.argmin(x=Tensor([3, 357913942, 4],"float16"), axis=1, keepdim=False, )
paddle.argmin(x=Tensor([3, 477218589, 3],"float16"), )
paddle.argmin(x=Tensor([3, 715827883, 2, 1],"float16"), axis=-1, dtype="int64", )
paddle.argmin(x=Tensor([3, 760567127],"int64"), axis=-2, )
paddle.argmin(x=Tensor([3, 760567127],"int64"), axis=Tensor([1],"int64"), )
paddle.argmin(x=Tensor([3, 760567127],"int64"), keepdim=None, )
paddle.argmin(x=Tensor([357913942, 3, 4],"float16"), axis=1, keepdim=False, )
paddle.argmin(x=Tensor([477218589, 3, 3],"float16"), )
paddle.argmin(x=Tensor([715827883, 3, 2, 1],"float16"), axis=-1, dtype="int64", )
paddle.argmin(x=Tensor([760567127, 3],"int64"), axis=-1, )
paddle.argmin(x=Tensor([760567127, 3],"int64"), axis=-2, )
paddle.argmin(x=Tensor([760567127, 3],"int64"), axis=Tensor([1],"int64"), )
paddle.argsort(Tensor([2, 1140850690],"float32"), descending=True, )
paddle.as_complex(Tensor([10, 10, 11408507, 2],"float32"), )
paddle.as_complex(Tensor([10, 11408507, 10, 2],"float32"), )
paddle.as_complex(Tensor([11408507, 10, 10, 2],"float32"), )
paddle.as_complex(Tensor([2, 570425345, 2],"float32"), )
paddle.as_complex(Tensor([20, 64, 891290, 2],"float32"), )
paddle.as_complex(Tensor([20, 891290, 64, 2],"float32"), )
paddle.as_complex(Tensor([2228225, 8, 4, 4, 4, 2],"float32"), )
paddle.as_complex(Tensor([247581, 32, 12, 12, 2],"float32"), )
paddle.as_complex(Tensor([278529, 64, 64, 2],"float32"), )
paddle.as_complex(Tensor([285212673, 4, 2],"float32"), )
paddle.as_complex(Tensor([32, 15, 8, 8, 37138, 2],"float32"), )
paddle.as_complex(Tensor([32, 15, 8, 9285, 32, 2],"float32"), )
paddle.as_complex(Tensor([32, 15, 9285, 8, 32, 2],"float32"), )
paddle.as_complex(Tensor([32, 17409, 8, 8, 32, 2],"float32"), )
paddle.as_complex(Tensor([32, 247581, 12, 12, 2],"float32"), )
paddle.as_complex(Tensor([32, 32, 12, 92843, 2],"float32"), )
paddle.as_complex(Tensor([32, 32, 92843, 12, 2],"float32"), )
paddle.as_complex(Tensor([35651585, 8, 4, 2],"float32"), )
paddle.as_complex(Tensor([37138, 15, 8, 8, 32, 2],"float32"), )
paddle.as_complex(Tensor([4, 32, 32, 278529, 2],"float32"), )
paddle.as_complex(Tensor([4, 32, 557057, 16, 2],"float32"), )
paddle.as_complex(Tensor([4, 557057, 32, 16, 2],"float32"), )
paddle.as_complex(Tensor([69633, 32, 32, 16, 2],"float32"), )
paddle.as_complex(Tensor([8, 2228225, 4, 4, 4, 2],"float32"), )
paddle.as_complex(Tensor([8, 35651585, 4, 2],"float32"), )
paddle.as_complex(Tensor([8, 8, 1114113, 4, 4, 2],"float32"), )
paddle.as_complex(Tensor([8, 8, 17825793, 2],"float32"), )
paddle.as_complex(Tensor([8, 8, 4, 1114113, 4, 2],"float32"), )
paddle.as_complex(Tensor([8, 8, 4, 4, 1114113, 2],"float32"), )
paddle.as_complex(x=Tensor([1140850690, 2],"float32"), )
paddle.as_strided(Tensor([134217729, 32],"float16"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([134217729, 32],"float16"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([2, 190141782, 6],"float32"), list[8,6,], list[6,1,], )
paddle.as_strided(Tensor([2, 4, 285212673],"float32"), list[8,6,], list[6,1,], )
paddle.as_strided(Tensor([32, 134217729],"float16"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 134217729],"float16"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 71303169],"float32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 71303169],"float32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 71303169],"int32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 71303169],"int32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 71303169],"int64"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 71303169],"int64"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([71303169, 32],"float32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([71303169, 32],"float32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([71303169, 32],"int32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([71303169, 32],"int32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([71303169, 32],"int64"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([71303169, 32],"int64"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([95070891, 4, 6],"float32"), list[8,6,], list[6,1,], )
paddle.asin(Tensor([10, 20, 11408507],"float32"), )
paddle.asin(Tensor([10, 228170138, 1],"float32"), )
paddle.asin(Tensor([114085069, 20, 1],"float32"), )
paddle.asin(Tensor([4456449, 16, 32],"float32"), )
paddle.asin(Tensor([8, 16, 17825793],"float32"), )
paddle.asin(Tensor([8, 16, 33554433],"float16"), )
paddle.asin(Tensor([8, 16777217, 32],"float16"), )
paddle.asin(Tensor([8, 8912897, 32],"float32"), )
paddle.asin(Tensor([8388609, 16, 32],"float16"), )
paddle.asin(x=Tensor([253522376, 3, 3],"float32"), )
paddle.asin(x=Tensor([3, 253522376, 3],"float32"), )
paddle.asin(x=Tensor([3, 3, 253522376],"float32"), )
paddle.asin(x=Tensor([3, 3, 477218589],"float16"), )
paddle.asin(x=Tensor([3, 477218589, 3],"float16"), )
paddle.asin(x=Tensor([477218589, 3, 3],"float16"), )
paddle.asinh(Tensor([10, 20, 11408507],"float32"), )
paddle.asinh(Tensor([10, 228170138, 1],"float32"), )
paddle.asinh(Tensor([114085069, 20, 1],"float32"), )
paddle.asinh(Tensor([4456449, 16, 32],"float32"), )
paddle.asinh(Tensor([8, 16, 17825793],"float32"), )
paddle.asinh(Tensor([8, 16, 33554433],"float16"), )
paddle.asinh(Tensor([8, 16777217, 32],"float16"), )
paddle.asinh(Tensor([8, 8912897, 32],"float32"), )
paddle.asinh(Tensor([8388609, 16, 32],"float16"), )
paddle.assign(Tensor([1, 1, 1, 11],"float32"), Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.assign(Tensor([1, 1, 1, 11],"float32"), Tensor([1, 1, 207427399, 11],"float32"), )
paddle.assign(Tensor([1, 1, 1, 11],"float32"), Tensor([1, 207427399, 1, 11],"float32"), )
paddle.assign(Tensor([1, 1, 1, 11],"float32"), Tensor([207427399, 1, 1, 11],"float32"), )
paddle.assign(Tensor([1, 1, 1, 2281701379],"float32"), Tensor([1, 1, 1, 11],"float32"), )
paddle.assign(Tensor([1, 1, 1, 2281701379],"float32"), Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.assign(Tensor([1, 1, 1, 2281701379],"float32"), Tensor([1, 1, 1, 7],"float32"), )
paddle.assign(Tensor([1, 1, 1, 2281701379],"float32"), Tensor([1, 1, 1, 9],"float32"), )
paddle.assign(Tensor([1, 1, 1, 7],"float32"), Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.assign(Tensor([1, 1, 1, 7],"float32"), Tensor([1, 1, 325957340, 7],"float32"), )
paddle.assign(Tensor([1, 1, 1, 7],"float32"), Tensor([1, 325957340, 1, 7],"float32"), )
paddle.assign(Tensor([1, 1, 1, 7],"float32"), Tensor([325957340, 1, 1, 7],"float32"), )
paddle.assign(Tensor([1, 1, 1, 9],"float32"), Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.assign(Tensor([1, 1, 1, 9],"float32"), Tensor([1, 1, 253522376, 9],"float32"), )
paddle.assign(Tensor([1, 1, 1, 9],"float32"), Tensor([1, 253522376, 1, 9],"float32"), )
paddle.assign(Tensor([1, 1, 1, 9],"float32"), Tensor([253522376, 1, 1, 9],"float32"), )
paddle.assign(Tensor([1, 1, 207427399, 11],"float32"), Tensor([1, 1, 1, 11],"float32"), )
paddle.assign(Tensor([1, 1, 207427399, 11],"float32"), Tensor([1, 1, 207427399, 11],"float32"), )
paddle.assign(Tensor([1, 1, 2281701379],"float32"), Tensor([1, 1, 2281701379],"float32"), )
paddle.assign(Tensor([1, 1, 2281701379],"float32"), Tensor([1, 1, 768],"float32"), )
paddle.assign(Tensor([1, 1, 253522376, 9],"float32"), Tensor([1, 1, 1, 9],"float32"), )
paddle.assign(Tensor([1, 1, 253522376, 9],"float32"), Tensor([1, 1, 253522376, 9],"float32"), )
paddle.assign(Tensor([1, 1, 325957340, 7],"float32"), Tensor([1, 1, 1, 7],"float32"), )
paddle.assign(Tensor([1, 1, 325957340, 7],"float32"), Tensor([1, 1, 325957340, 7],"float32"), )
paddle.assign(Tensor([1, 1, 768],"float32"), Tensor([1, 1, 2281701379],"float32"), )
paddle.assign(Tensor([1, 1, 768],"float32"), Tensor([1, 2970966, 768],"float32"), )
paddle.assign(Tensor([1, 1, 768],"float32"), Tensor([2970966, 1, 768],"float32"), )
paddle.assign(Tensor([1, 1444, 1, 1580126],"float32"), output=Tensor([1, 1444, 1, 1580126],"float32"), )
paddle.assign(Tensor([1, 1444, 1, 1580126],"float32"), output=Tensor([1, 1444, 1, 1],"float32"), )
paddle.assign(Tensor([1, 1444, 1, 1],"float32"), output=Tensor([1, 1444, 1, 1580126],"float32"), )
paddle.assign(Tensor([1, 1444, 1, 1],"float32"), output=Tensor([1, 1444, 1580126, 1],"float32"), )
paddle.assign(Tensor([1, 1444, 1, 1],"float32"), output=Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.assign(Tensor([1, 1444, 1, 1],"float32"), output=Tensor([1580126, 1444, 1, 1],"float32"), )
paddle.assign(Tensor([1, 1444, 1580126, 1],"float32"), output=Tensor([1, 1444, 1, 1],"float32"), )
paddle.assign(Tensor([1, 1444, 1580126, 1],"float32"), output=Tensor([1, 1444, 1580126, 1],"float32"), )
paddle.assign(Tensor([1, 152113426, 3, 5],"float32"), )
paddle.assign(Tensor([1, 197, 11582241],"float32"), Tensor([1, 197, 11582241],"float32"), )
paddle.assign(Tensor([1, 197, 11582241],"float32"), Tensor([1, 197, 768],"float32"), )
paddle.assign(Tensor([1, 197, 768],"float32"), Tensor([1, 197, 11582241],"float32"), )
paddle.assign(Tensor([1, 197, 768],"float32"), Tensor([1, 2970966, 768],"float32"), )
paddle.assign(Tensor([1, 197, 768],"float32"), Tensor([15082, 197, 768],"float32"), )
paddle.assign(Tensor([1, 207427399, 1, 11],"float32"), Tensor([1, 1, 1, 11],"float32"), )
paddle.assign(Tensor([1, 207427399, 1, 11],"float32"), Tensor([1, 207427399, 1, 11],"float32"), )
paddle.assign(Tensor([1, 2281701379, 1, 1],"float32"), output=Tensor([1, 1444, 1, 1],"float32"), )
paddle.assign(Tensor([1, 2281701379, 1, 1],"float32"), output=Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.assign(Tensor([1, 2281701379, 1, 1],"float32"), output=Tensor([1, 36, 1, 1],"float32"), )
paddle.assign(Tensor([1, 2281701379, 1],"float32"), Tensor([1, 2281701379, 1],"float32"), )
paddle.assign(Tensor([1, 2281701379, 1],"float32"), Tensor([1, 64, 1],"float32"), )
paddle.assign(Tensor([1, 2281701379, 1],"float32"), output=Tensor([1, 2281701379, 1],"float32"), )
paddle.assign(Tensor([1, 2281701379, 1],"float32"), output=Tensor([1, 38, 1],"float32"), )
paddle.assign(Tensor([1, 2281701379, 1],"float32"), output=Tensor([1, 9, 1],"float32"), )
paddle.assign(Tensor([1, 2281701379],"float32"), )
paddle.assign(Tensor([1, 253522376, 1, 9],"float32"), Tensor([1, 1, 1, 9],"float32"), )
paddle.assign(Tensor([1, 253522376, 1, 9],"float32"), Tensor([1, 253522376, 1, 9],"float32"), )
paddle.assign(Tensor([1, 2970966, 768],"float32"), Tensor([1, 1, 768],"float32"), )
paddle.assign(Tensor([1, 2970966, 768],"float32"), Tensor([1, 197, 768],"float32"), )
paddle.assign(Tensor([1, 2970966, 768],"float32"), Tensor([1, 2970966, 768],"float32"), )
paddle.assign(Tensor([1, 3, 152113426, 5],"float32"), )
paddle.assign(Tensor([1, 3, 3, 253522376],"float32"), )
paddle.assign(Tensor([1, 325957340, 1, 7],"float32"), Tensor([1, 1, 1, 7],"float32"), )
paddle.assign(Tensor([1, 325957340, 1, 7],"float32"), Tensor([1, 325957340, 1, 7],"float32"), )
paddle.assign(Tensor([1, 36, 1, 1],"float32"), output=Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.assign(Tensor([1, 36, 1, 1],"float32"), output=Tensor([1, 36, 1, 63380594],"float32"), )
paddle.assign(Tensor([1, 36, 1, 1],"float32"), output=Tensor([1, 36, 63380594, 1],"float32"), )
paddle.assign(Tensor([1, 36, 1, 1],"float32"), output=Tensor([63380594, 36, 1, 1],"float32"), )
paddle.assign(Tensor([1, 36, 1, 63380594],"float32"), output=Tensor([1, 36, 1, 1],"float32"), )
paddle.assign(Tensor([1, 36, 1, 63380594],"float32"), output=Tensor([1, 36, 1, 63380594],"float32"), )
paddle.assign(Tensor([1, 36, 63380594, 1],"float32"), output=Tensor([1, 36, 1, 1],"float32"), )
paddle.assign(Tensor([1, 36, 63380594, 1],"float32"), output=Tensor([1, 36, 63380594, 1],"float32"), )
paddle.assign(Tensor([1, 38, 1],"float32"), output=Tensor([1, 2281701379, 1],"float32"), )
paddle.assign(Tensor([1, 38, 1],"float32"), output=Tensor([1, 38, 60044774],"float32"), )
paddle.assign(Tensor([1, 38, 1],"float32"), output=Tensor([60044774, 38, 1],"float32"), )
paddle.assign(Tensor([1, 38, 60044774],"float32"), output=Tensor([1, 38, 1],"float32"), )
paddle.assign(Tensor([1, 38, 60044774],"float32"), output=Tensor([1, 38, 60044774],"float32"), )
paddle.assign(Tensor([1, 64, 1],"float32"), Tensor([1, 2281701379, 1],"float32"), )
paddle.assign(Tensor([1, 64, 1],"float32"), Tensor([1, 64, 35651585],"float32"), )
paddle.assign(Tensor([1, 64, 1],"float32"), Tensor([35651585, 64, 1],"float32"), )
paddle.assign(Tensor([1, 64, 35651585],"float32"), Tensor([1, 64, 1],"float32"), )
paddle.assign(Tensor([1, 64, 35651585],"float32"), Tensor([1, 64, 35651585],"float32"), )
paddle.assign(Tensor([1, 9, 1],"float32"), output=Tensor([1, 2281701379, 1],"float32"), )
paddle.assign(Tensor([1, 9, 1],"float32"), output=Tensor([1, 9, 253522376],"float32"), )
paddle.assign(Tensor([1, 9, 1],"float32"), output=Tensor([253522376, 9, 1],"float32"), )
paddle.assign(Tensor([1, 9, 253522376],"float32"), output=Tensor([1, 9, 1],"float32"), )
paddle.assign(Tensor([1, 9, 253522376],"float32"), output=Tensor([1, 9, 253522376],"float32"), )
paddle.assign(Tensor([10, 20],"float32"), Tensor([10, 228170138],"float32"), )
paddle.assign(Tensor([10, 20],"float32"), Tensor([114085069, 20],"float32"), )
paddle.assign(Tensor([10, 228170138],"float32"), Tensor([10, 20],"float32"), )
paddle.assign(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.assign(Tensor([1000],"float32"), Tensor([2281701379],"float32"), )
paddle.assign(Tensor([100],"bfloat16"), Tensor([4294967297],"bfloat16"), )
paddle.assign(Tensor([100],"float16"), Tensor([4294967297],"float16"), )
paddle.assign(Tensor([1024, 1024],"float32"), output=Tensor([1024, 2228225],"float32"), )
paddle.assign(Tensor([1024, 1024],"float32"), output=Tensor([2228225, 1024],"float32"), )
paddle.assign(Tensor([1024, 102],"float32"), output=Tensor([1024, 2228225],"float32"), )
paddle.assign(Tensor([1024, 102],"float32"), output=Tensor([22369622, 102],"float32"), )
paddle.assign(Tensor([1024, 11369, 14, 14],"float32"), output=Tensor([1024, 11369, 14, 14],"float32"), )
paddle.assign(Tensor([1024, 11369, 14, 14],"float32"), output=Tensor([1024, 3, 14, 14],"float32"), )
paddle.assign(Tensor([1024, 2228225],"float32"), output=Tensor([1024, 1024],"float32"), )
paddle.assign(Tensor([1024, 2228225],"float32"), output=Tensor([1024, 102],"float32"), )
paddle.assign(Tensor([1024, 2228225],"float32"), output=Tensor([1024, 2228225],"float32"), )
paddle.assign(Tensor([1024, 2228225],"float32"), output=Tensor([1024, 3072],"float32"), )
paddle.assign(Tensor([1024, 3, 14, 14],"float32"), output=Tensor([1024, 11369, 14, 14],"float32"), )
paddle.assign(Tensor([1024, 3, 14, 14],"float32"), output=Tensor([1024, 3, 14, 53053],"float32"), )
paddle.assign(Tensor([1024, 3, 14, 14],"float32"), output=Tensor([1024, 3, 53053, 14],"float32"), )
paddle.assign(Tensor([1024, 3, 14, 14],"float32"), output=Tensor([3880445, 3, 14, 14],"float32"), )
paddle.assign(Tensor([1024, 3, 14, 53053],"float32"), output=Tensor([1024, 3, 14, 14],"float32"), )
paddle.assign(Tensor([1024, 3, 14, 53053],"float32"), output=Tensor([1024, 3, 14, 53053],"float32"), )
paddle.assign(Tensor([1024, 3, 53053, 14],"float32"), output=Tensor([1024, 3, 14, 14],"float32"), )
paddle.assign(Tensor([1024, 3, 53053, 14],"float32"), output=Tensor([1024, 3, 53053, 14],"float32"), )
paddle.assign(Tensor([1024, 3072],"float32"), output=Tensor([1024, 2228225],"float32"), )
paddle.assign(Tensor([1024, 3072],"float32"), output=Tensor([742742, 3072],"float32"), )
paddle.assign(Tensor([114085069, 20],"float32"), Tensor([10, 20],"float32"), )
paddle.assign(Tensor([114085069, 20],"float32"), Tensor([114085069, 20],"float32"), )
paddle.assign(Tensor([13, 1, 175515491],"float32"), )
paddle.assign(Tensor([13, 175515491, 1],"float32"), )
paddle.assign(Tensor([13, 175515491],"int64"), Tensor([13, 175515491],"int64"), )
paddle.assign(Tensor([13, 175515491],"int64"), Tensor([13, 8],"int64"), )
paddle.assign(Tensor([13, 8],"int64"), Tensor([13, 175515491],"int64"), )
paddle.assign(Tensor([13, 8],"int64"), Tensor([285212673, 8],"int64"), )
paddle.assign(Tensor([15, 152113426],"float32"), Tensor([15, 152113426],"float32"), )
paddle.assign(Tensor([15, 152113426],"float32"), Tensor([15, 48],"float32"), )
paddle.assign(Tensor([15, 48],"float32"), Tensor([15, 152113426],"float32"), )
paddle.assign(Tensor([15, 48],"float32"), Tensor([47535446, 48],"float32"), )
paddle.assign(Tensor([15082, 197, 768],"float32"), Tensor([1, 197, 768],"float32"), )
paddle.assign(Tensor([15082, 197, 768],"float32"), Tensor([15082, 197, 768],"float32"), )
paddle.assign(Tensor([1580126, 1444, 1, 1],"float32"), output=Tensor([1, 1444, 1, 1],"float32"), )
paddle.assign(Tensor([1580126, 1444, 1, 1],"float32"), output=Tensor([1580126, 1444, 1, 1],"float32"), )
paddle.assign(Tensor([16, 1, 142606337],"float32"), )
paddle.assign(Tensor([16, 142606337, 1],"float32"), )
paddle.assign(Tensor([2, 10, 114085069],"float32"), )
paddle.assign(Tensor([2, 10, 3, 38028357],"float32"), )
paddle.assign(Tensor([2, 10, 38028357, 3],"float32"), )
paddle.assign(Tensor([2, 126761188, 3, 3],"float32"), )
paddle.assign(Tensor([2, 228170138, 5],"float32"), )
paddle.assign(Tensor([2, 3, 3, 238609295],"float16"), )
paddle.assign(Tensor([2, 3, 357913942, 2],"float16"), )
paddle.assign(Tensor([2, 357913942, 3, 2],"float16"), )
paddle.assign(Tensor([207427399, 1, 1, 11],"float32"), Tensor([1, 1, 1, 11],"float32"), )
paddle.assign(Tensor([207427399, 1, 1, 11],"float32"), Tensor([207427399, 1, 1, 11],"float32"), )
paddle.assign(Tensor([2228225, 1024],"float32"), output=Tensor([1024, 1024],"float32"), )
paddle.assign(Tensor([2228225, 1024],"float32"), output=Tensor([2228225, 1024],"float32"), )
paddle.assign(Tensor([22369622, 102],"float32"), output=Tensor([1024, 102],"float32"), )
paddle.assign(Tensor([22369622, 102],"float32"), output=Tensor([22369622, 102],"float32"), )
paddle.assign(Tensor([2281701379, 1, 1],"float32"), )
paddle.assign(Tensor([2281701379, 1],"float32"), )
paddle.assign(Tensor([2281701379],"float32"), )
paddle.assign(Tensor([2281701379],"float32"), Tensor([1000],"float32"), )
paddle.assign(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.assign(Tensor([2281701379],"int32"), )
paddle.assign(Tensor([238609295, 3, 3, 2],"float16"), )
paddle.assign(Tensor([247581, 32, 12, 12, 2],"float32"), Tensor([247581, 32, 12, 12, 2],"float32"), )
paddle.assign(Tensor([247581, 32, 12, 12, 2],"float32"), Tensor([32, 32, 12, 12, 2],"float32"), )
paddle.assign(Tensor([253522376, 1, 1, 9],"float32"), Tensor([1, 1, 1, 9],"float32"), )
paddle.assign(Tensor([253522376, 1, 1, 9],"float32"), Tensor([253522376, 1, 1, 9],"float32"), )
paddle.assign(Tensor([253522376, 9, 1],"float32"), output=Tensor([1, 9, 1],"float32"), )
paddle.assign(Tensor([253522376, 9, 1],"float32"), output=Tensor([253522376, 9, 1],"float32"), )
paddle.assign(Tensor([25352238, 10, 3, 3],"float32"), )
paddle.assign(Tensor([28169153, 3, 3, 3, 3],"float32"), Tensor([28169153, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([28169153, 3, 3, 3, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([285212673, 8],"int64"), Tensor([13, 8],"int64"), )
paddle.assign(Tensor([285212673, 8],"int64"), Tensor([285212673, 8],"int64"), )
paddle.assign(Tensor([2970966, 1, 768],"float32"), Tensor([1, 1, 768],"float32"), )
paddle.assign(Tensor([2970966, 1, 768],"float32"), Tensor([2970966, 1, 768],"float32"), )
paddle.assign(Tensor([32, 247581, 12, 12, 2],"float32"), Tensor([32, 247581, 12, 12, 2],"float32"), )
paddle.assign(Tensor([32, 247581, 12, 12, 2],"float32"), Tensor([32, 32, 12, 12, 2],"float32"), )
paddle.assign(Tensor([32, 32, 12, 12, 15474],"float32"), Tensor([32, 32, 12, 12, 15474],"float32"), )
paddle.assign(Tensor([32, 32, 12, 12, 15474],"float32"), Tensor([32, 32, 12, 12, 2],"float32"), )
paddle.assign(Tensor([32, 32, 12, 12, 2],"float32"), Tensor([247581, 32, 12, 12, 2],"float32"), )
paddle.assign(Tensor([32, 32, 12, 12, 2],"float32"), Tensor([32, 247581, 12, 12, 2],"float32"), )
paddle.assign(Tensor([32, 32, 12, 12, 2],"float32"), Tensor([32, 32, 12, 12, 15474],"float32"), )
paddle.assign(Tensor([32, 32, 12, 12, 2],"float32"), Tensor([32, 32, 12, 92843, 2],"float32"), )
paddle.assign(Tensor([32, 32, 12, 12, 2],"float32"), Tensor([32, 32, 92843, 12, 2],"float32"), )
paddle.assign(Tensor([32, 32, 12, 92843, 2],"float32"), Tensor([32, 32, 12, 12, 2],"float32"), )
paddle.assign(Tensor([32, 32, 12, 92843, 2],"float32"), Tensor([32, 32, 12, 92843, 2],"float32"), )
paddle.assign(Tensor([32, 32, 92843, 12, 2],"float32"), Tensor([32, 32, 12, 12, 2],"float32"), )
paddle.assign(Tensor([32, 32, 92843, 12, 2],"float32"), Tensor([32, 32, 92843, 12, 2],"float32"), )
paddle.assign(Tensor([325957340, 1, 1, 7],"float32"), Tensor([1, 1, 1, 7],"float32"), )
paddle.assign(Tensor([325957340, 1, 1, 7],"float32"), Tensor([325957340, 1, 1, 7],"float32"), )
paddle.assign(Tensor([35651585, 64, 1],"float32"), Tensor([1, 64, 1],"float32"), )
paddle.assign(Tensor([35651585, 64, 1],"float32"), Tensor([35651585, 64, 1],"float32"), )
paddle.assign(Tensor([3880445, 3, 14, 14],"float32"), output=Tensor([1024, 3, 14, 14],"float32"), )
paddle.assign(Tensor([3880445, 3, 14, 14],"float32"), output=Tensor([3880445, 3, 14, 14],"float32"), )
paddle.assign(Tensor([4294967297],"bfloat16"), Tensor([100],"bfloat16"), )
paddle.assign(Tensor([4294967297],"bfloat16"), Tensor([4294967297],"bfloat16"), )
paddle.assign(Tensor([4294967297],"float16"), Tensor([100],"float16"), )
paddle.assign(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.assign(Tensor([45359, 50304],"float32"), )
paddle.assign(Tensor([45634028, 10, 5],"float32"), )
paddle.assign(Tensor([47535446, 48],"float32"), Tensor([15, 48],"float32"), )
paddle.assign(Tensor([47535446, 48],"float32"), Tensor([47535446, 48],"float32"), )
paddle.assign(Tensor([5, 16901492, 3, 3, 3],"float32"), Tensor([5, 16901492, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 16901492, 3, 3, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3, 16901492, 3, 3],"float32"), Tensor([5, 3, 16901492, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3, 16901492, 3, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3, 3, 16901492, 3],"float32"), Tensor([5, 3, 3, 16901492, 3],"float32"), )
paddle.assign(Tensor([5, 3, 3, 16901492, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3, 3, 3, 16901492],"float32"), Tensor([5, 3, 3, 3, 16901492],"float32"), )
paddle.assign(Tensor([5, 3, 3, 3, 16901492],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3, 3, 3, 3],"float32"), Tensor([28169153, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5, 16901492, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5, 3, 16901492, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5, 3, 3, 16901492, 3],"float32"), )
paddle.assign(Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5, 3, 3, 3, 16901492],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 4],"float32"), Tensor([5, 4, 4, 4, 7130317],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 4],"float32"), Tensor([5, 4, 4, 7130317, 4],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 4],"float32"), Tensor([5, 4, 7130317, 4, 4],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 4],"float32"), Tensor([5, 7130317, 4, 4, 4],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 4],"float32"), Tensor([8912897, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 7130317],"float32"), Tensor([5, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 7130317],"float32"), Tensor([5, 4, 4, 4, 7130317],"float32"), )
paddle.assign(Tensor([5, 4, 4, 7130317, 4],"float32"), Tensor([5, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([5, 4, 4, 7130317, 4],"float32"), Tensor([5, 4, 4, 7130317, 4],"float32"), )
paddle.assign(Tensor([5, 4, 7130317, 4, 4],"float32"), Tensor([5, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([5, 4, 7130317, 4, 4],"float32"), Tensor([5, 4, 7130317, 4, 4],"float32"), )
paddle.assign(Tensor([5, 7130317, 4, 4, 4],"float32"), Tensor([5, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([5, 7130317, 4, 4, 4],"float32"), Tensor([5, 7130317, 4, 4, 4],"float32"), )
paddle.assign(Tensor([50704476, 3, 3, 5],"float32"), )
paddle.assign(Tensor([60044774, 38, 1],"float32"), output=Tensor([1, 38, 1],"float32"), )
paddle.assign(Tensor([60044774, 38, 1],"float32"), output=Tensor([60044774, 38, 1],"float32"), )
paddle.assign(Tensor([63380594, 36, 1, 1],"float32"), output=Tensor([1, 36, 1, 1],"float32"), )
paddle.assign(Tensor([63380594, 36, 1, 1],"float32"), output=Tensor([63380594, 36, 1, 1],"float32"), )
paddle.assign(Tensor([742742, 3072],"float32"), output=Tensor([1024, 3072],"float32"), )
paddle.assign(Tensor([742742, 3072],"float32"), output=Tensor([742742, 3072],"float32"), )
paddle.assign(Tensor([8912897, 4, 4, 4, 4],"float32"), Tensor([5, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([8912897, 4, 4, 4, 4],"float32"), Tensor([8912897, 4, 4, 4, 4],"float32"), )
paddle.assign(list[Tensor([100, 42949673],"float16"),], )
paddle.assign(list[Tensor([429496730, 10],"float16"),], )
paddle.assign(x=Tensor([1073741825, 4],"float16"), )
paddle.assign(x=Tensor([1431655766, 3],"float16"), )
paddle.assign(x=Tensor([3, 1431655766],"float16"), )
paddle.assign(x=Tensor([3, 760567127],"float32"), )
paddle.assign(x=Tensor([570425345, 4],"float32"), )
paddle.atan(Tensor([10, 20, 11408507],"float32"), )
paddle.atan(Tensor([10, 228170138, 1],"float32"), )
paddle.atan(Tensor([114085069, 20, 1],"float32"), )
paddle.atan(Tensor([2281701379],"float32"), name="Cauchy_cdf", )
paddle.atan(Tensor([4294967297],"float16"), name="Cauchy_cdf", )
paddle.atan(Tensor([4456449, 16, 32],"float32"), )
paddle.atan(Tensor([8, 16, 17825793],"float32"), )
paddle.atan(Tensor([8, 16, 33554433],"float16"), )
paddle.atan(Tensor([8, 16777217, 32],"float16"), )
paddle.atan(Tensor([8, 8912897, 32],"float32"), )
paddle.atan(Tensor([8388609, 16, 32],"float16"), )
paddle.atan(x=Tensor([253522376, 3, 3],"float32"), )
paddle.atan(x=Tensor([3, 253522376, 3],"float32"), )
paddle.atan(x=Tensor([3, 3, 253522376],"float32"), )
paddle.atan(x=Tensor([3, 3, 477218589],"float16"), )
paddle.atan(x=Tensor([3, 477218589, 3],"float16"), )
paddle.atan(x=Tensor([477218589, 3, 3],"float16"), )
paddle.atan2(Tensor([58099, 222, 333],"float16"), Tensor([222, 333],"float16"), )
paddle.atanh(Tensor([10, 20, 11408507],"float32"), )
paddle.atanh(Tensor([10, 228170138, 1],"float32"), )
paddle.atanh(Tensor([114085069, 20, 1],"float32"), )
paddle.atanh(Tensor([4456449, 16, 32],"float32"), )
paddle.atanh(Tensor([8, 16, 17825793],"float32"), )
paddle.atanh(Tensor([8, 16, 33554433],"float16"), )
paddle.atanh(Tensor([8, 16777217, 32],"float16"), )
paddle.atanh(Tensor([8, 8912897, 32],"float32"), )
paddle.atanh(Tensor([8388609, 16, 32],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297],"float16"), Tensor([2],"float16"), )
paddle.atleast_1d(Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), Tensor([4294967297, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1],"float16"), Tensor([1, 4294967297],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1],"float16"), Tensor([4294967297, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 2],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297, 1],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297, 1],"float16"), Tensor([2],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297],"float16"), Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297],"float16"), Tensor([3],"float16"), )
paddle.atleast_1d(Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([107374183, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([107374183, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([1431655766, 3, 1],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_1d(Tensor([1431655766, 3, 1],"float16"), Tensor([3],"float16"), )
paddle.atleast_1d(Tensor([1],"float16"), Tensor([1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([1],"float16"), Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.atleast_1d(Tensor([2, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([2, 2147483649, 1],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_1d(Tensor([2, 2147483649, 1],"float16"), Tensor([3],"float16"), )
paddle.atleast_1d(Tensor([2, 2147483649],"float16"), Tensor([3],"float16"), )
paddle.atleast_1d(Tensor([2, 3, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([2, 3, 1],"float16"), Tensor([1431655766, 3],"float16"), )
paddle.atleast_1d(Tensor([2, 3, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([2, 3, 715827883],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_1d(Tensor([2, 3, 715827883],"float16"), Tensor([3],"float16"), )
paddle.atleast_1d(Tensor([2147483649, 2],"float16"), )
paddle.atleast_1d(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_1d(Tensor([2147483649, 2],"float16"), Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_1d(Tensor([2147483649, 2],"float16"), Tensor([3],"float16"), )
paddle.atleast_1d(Tensor([2281701379],"float32"), Tensor([2],"float64"), )
paddle.atleast_1d(Tensor([2281701379],"float32"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([2],"float32"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([3, 1431655766],"float16"), )
paddle.atleast_1d(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), )
paddle.atleast_1d(Tensor([3, 1431655766],"float16"), Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 2],"float16"), Tensor([2147483649, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 2],"float16"), Tensor([3, 1431655766],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), Tensor([3, 1431655766],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float16"), Tensor([3, 715827883, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 71582789, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 715827883, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 715827883, 2],"float16"), Tensor([3, 715827883, 2],"float16"), Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1],"float16"), Tensor([2],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1],"float16"), Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1],"float16"), Tensor([3],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1],"float16"), Tensor([4294967297, 1],"float16"), Tensor([4294967297, 1],"float16"), )
paddle.atleast_1d(Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([4294967297],"float16"), Tensor([1],"float16"), Tensor([1],"float16"), )
paddle.atleast_1d(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([4294967297],"float16"), Tensor([5],"float16"), Tensor([5],"float16"), )
paddle.atleast_1d(Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([536870913, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([536870913, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([5],"float16"), Tensor([4294967297],"float16"), Tensor([5],"float16"), )
paddle.atleast_1d(Tensor([5],"float16"), Tensor([5],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 4294967297],"float16"), Tensor([2],"float16"), )
paddle.atleast_2d(Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), Tensor([4294967297, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1],"float16"), Tensor([1, 4294967297],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1],"float16"), Tensor([4294967297, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 2],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1],"float16"), Tensor([2],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297],"float16"), Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297],"float16"), Tensor([3],"float16"), )
paddle.atleast_2d(Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([107374183, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([107374183, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([1431655766, 3, 1],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_2d(Tensor([1431655766, 3, 1],"float16"), Tensor([3],"float16"), )
paddle.atleast_2d(Tensor([1],"float16"), Tensor([1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([1],"float16"), Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.atleast_2d(Tensor([2, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([2, 2147483649, 1],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_2d(Tensor([2, 2147483649, 1],"float16"), Tensor([3],"float16"), )
paddle.atleast_2d(Tensor([2, 2147483649],"float16"), Tensor([3],"float16"), )
paddle.atleast_2d(Tensor([2, 3, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([2, 3, 1],"float16"), Tensor([1431655766, 3],"float16"), )
paddle.atleast_2d(Tensor([2, 3, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([2, 3, 715827883],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_2d(Tensor([2, 3, 715827883],"float16"), Tensor([3],"float16"), )
paddle.atleast_2d(Tensor([2147483649, 2],"float16"), )
paddle.atleast_2d(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_2d(Tensor([2147483649, 2],"float16"), Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_2d(Tensor([2147483649, 2],"float16"), Tensor([3],"float16"), )
paddle.atleast_2d(Tensor([2281701379],"float32"), Tensor([2],"float64"), )
paddle.atleast_2d(Tensor([2281701379],"float32"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([2],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([2],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_2d(Tensor([2],"float32"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([3, 1431655766],"float16"), )
paddle.atleast_2d(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), )
paddle.atleast_2d(Tensor([3, 1431655766],"float16"), Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_2d(Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 2],"float16"), Tensor([2147483649, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_2d(Tensor([3, 2],"float16"), Tensor([3, 1431655766],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_2d(Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_2d(Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), Tensor([3, 1431655766],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float16"), Tensor([3, 715827883, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 71582789, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_2d(Tensor([3, 715827883, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_2d(Tensor([3, 715827883, 2],"float16"), Tensor([3, 715827883, 2],"float16"), Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1, 1],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1, 1],"float16"), Tensor([2],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1],"float16"), Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1],"float16"), Tensor([3],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1],"float16"), Tensor([4294967297, 1],"float16"), Tensor([4294967297, 1],"float16"), )
paddle.atleast_2d(Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([4294967297],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_2d(Tensor([4294967297],"float16"), Tensor([1],"float16"), Tensor([1],"float16"), )
paddle.atleast_2d(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([4294967297],"float16"), Tensor([5],"float16"), Tensor([5],"float16"), )
paddle.atleast_2d(Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_2d(Tensor([536870913, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_2d(Tensor([536870913, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_2d(Tensor([5],"float16"), Tensor([4294967297],"float16"), Tensor([5],"float16"), )
paddle.atleast_2d(Tensor([5],"float16"), Tensor([5],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 4294967297],"float16"), Tensor([2],"float16"), )
paddle.atleast_3d(Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), Tensor([4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1],"float16"), Tensor([1, 4294967297],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1],"float16"), Tensor([4294967297, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 2],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297, 1],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297, 1],"float16"), Tensor([2],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297],"float16"), Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297],"float16"), Tensor([3],"float16"), )
paddle.atleast_3d(Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([107374183, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([107374183, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([1431655766, 3, 1],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_3d(Tensor([1431655766, 3, 1],"float16"), Tensor([3],"float16"), )
paddle.atleast_3d(Tensor([1],"float16"), Tensor([1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([1],"float16"), Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.atleast_3d(Tensor([2, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([2, 2147483649, 1],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_3d(Tensor([2, 2147483649, 1],"float16"), Tensor([3],"float16"), )
paddle.atleast_3d(Tensor([2, 2147483649],"float16"), Tensor([3],"float16"), )
paddle.atleast_3d(Tensor([2, 3, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([2, 3, 1],"float16"), Tensor([1431655766, 3],"float16"), )
paddle.atleast_3d(Tensor([2, 3, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([2, 3, 715827883],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_3d(Tensor([2, 3, 715827883],"float16"), Tensor([3],"float16"), )
paddle.atleast_3d(Tensor([2147483649, 2],"float16"), )
paddle.atleast_3d(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_3d(Tensor([2147483649, 2],"float16"), Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_3d(Tensor([2147483649, 2],"float16"), Tensor([3],"float16"), )
paddle.atleast_3d(Tensor([2281701379],"float32"), Tensor([2],"float64"), )
paddle.atleast_3d(Tensor([2281701379],"float32"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([2],"float16"), Tensor([1, 2, 2147483649],"float16"), )
paddle.atleast_3d(Tensor([2],"float16"), Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([2],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([2],"float16"), Tensor([2147483649, 2, 1],"float16"), )
paddle.atleast_3d(Tensor([2],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_3d(Tensor([2],"float32"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([3, 1431655766],"float16"), )
paddle.atleast_3d(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), )
paddle.atleast_3d(Tensor([3, 1431655766],"float16"), Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 2],"float16"), Tensor([2147483649, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 2],"float16"), Tensor([3, 1431655766],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), Tensor([3, 1431655766],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float16"), Tensor([3, 715827883, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 71582789, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 715827883, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 715827883, 2],"float16"), Tensor([3, 715827883, 2],"float16"), Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1],"float16"), Tensor([2],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1],"float16"), Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1],"float16"), Tensor([3],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1],"float16"), Tensor([4294967297, 1],"float16"), Tensor([4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([4294967297],"float16"), Tensor([1, 2, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_3d(Tensor([4294967297],"float16"), Tensor([1],"float16"), Tensor([1],"float16"), )
paddle.atleast_3d(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([4294967297],"float16"), Tensor([5],"float16"), Tensor([5],"float16"), )
paddle.atleast_3d(Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([536870913, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([536870913, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([5],"float16"), Tensor([4294967297],"float16"), Tensor([5],"float16"), )
paddle.atleast_3d(Tensor([5],"float16"), Tensor([5],"float16"), Tensor([4294967297],"float16"), )
paddle.bincount(Tensor([2281701379],"int32"), weights=Tensor([2281701379],"float32"), )
paddle.bincount(Tensor([2281701379],"int64"), )
paddle.bincount(Tensor([2281701379],"int64"), minlength=100, )
paddle.bincount(Tensor([2281701379],"int64"), minlength=123, )
paddle.bincount(Tensor([2281701379],"int64"), minlength=256, )
paddle.bincount(Tensor([2281701379],"int64"), minlength=256000, )
paddle.bincount(Tensor([2281701379],"int64"), minlength=32000, )
paddle.bincount(Tensor([2281701379],"int64"), minlength=4, )
paddle.bincount(Tensor([2281701379],"int64"), minlength=99, )
paddle.bincount(Tensor([2281701379],"int64"), minlength=Tensor([1],"int32"), )
paddle.bincount(x=Tensor([2281701379],"int32"), )
paddle.bincount(x=Tensor([2281701379],"int32"), minlength=4, )
paddle.bincount(x=Tensor([2281701379],"int32"), minlength=Tensor([1],"int64"), )
paddle.bincount(x=Tensor([2281701379],"int32"), weights=Tensor([2281701379],"int32"), )
paddle.bincount(x=Tensor([2281701379],"int64"), )
paddle.bitwise_and(Tensor([152113426, 3, 5],"int32"), Tensor([152113426, 3, 5],"int32"), )
paddle.bitwise_and(Tensor([2, 228170138, 5],"int32"), Tensor([2, 228170138, 5],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 380283564],"int32"), Tensor([2, 3, 380283564],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.bitwise_and(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_and(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 1],"int32"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int32"), Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 95070891],"int64"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 76056713, 5],"int64"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 57042535, 4, 5],"int64"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([38028357, 3, 4, 5],"int64"), )
paddle.bitwise_and(Tensor([3, 760567127, 1],"int32"), Tensor([3, 760567127, 1],"int32"), )
paddle.bitwise_and(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([570425345, 4, 1],"int32"), Tensor([570425345, 4, 1],"int32"), )
paddle.bitwise_invert(Tensor([2, 3, 4, 95070891],"int32"), )
paddle.bitwise_invert(Tensor([2, 3, 76056713, 5],"int32"), )
paddle.bitwise_invert(Tensor([2, 57042535, 4, 5],"int32"), )
paddle.bitwise_invert(Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_invert(Tensor([3, 760567127, 1],"int32"), )
paddle.bitwise_invert(Tensor([38028357, 3, 4, 5],"int32"), )
paddle.bitwise_invert(Tensor([570425345, 4, 1],"int32"), )
paddle.bitwise_left_shift(Tensor([114085069, 4, 5],"int32"), Tensor([114085069, 4, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([114085069, 4, 5],"int32"), Tensor([114085069, 4, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([1],"int16"), Tensor([4294967297],"int16"), )
paddle.bitwise_left_shift(Tensor([1],"int16"), Tensor([4294967297],"int16"), False, )
paddle.bitwise_left_shift(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), )
paddle.bitwise_left_shift(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), )
paddle.bitwise_left_shift(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 11408507],"int64"), Tensor([200, 11408507],"int64"), )
paddle.bitwise_left_shift(Tensor([200, 11408507],"int64"), Tensor([200, 11408507],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.bitwise_left_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([3, 152113426, 5],"int32"), Tensor([3, 152113426, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 152113426, 5],"int32"), Tensor([3, 152113426, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 190141782],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 190141782],"int32"), True, )
paddle.bitwise_left_shift(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.bitwise_left_shift(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.bitwise_left_shift(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.bitwise_left_shift(Tensor([300],"int64"), Tensor([7605672, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.bitwise_left_shift(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.bitwise_left_shift(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([4294967297],"int16"), Tensor([1],"int16"), )
paddle.bitwise_left_shift(Tensor([4294967297],"int16"), Tensor([1],"int16"), False, )
paddle.bitwise_left_shift(Tensor([4294967297],"int16"), Tensor([4294967297],"int16"), )
paddle.bitwise_left_shift(Tensor([4294967297],"int16"), Tensor([4294967297],"int16"), False, )
paddle.bitwise_left_shift(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), )
paddle.bitwise_left_shift(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), )
paddle.bitwise_left_shift(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int64"), Tensor([300],"int64"), )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int64"), Tensor([300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int64"), Tensor([7605672, 300],"int64"), False, )
paddle.bitwise_not(Tensor([152113426, 3, 5],"int32"), )
paddle.bitwise_not(Tensor([2, 228170138, 5],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_not(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 380283564],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_not(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_not(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_not(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_not(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_not(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_not(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_not(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_not(Tensor([2281701379],"int32"), )
paddle.bitwise_not(Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_not(Tensor([3, 4, 190141782],"int64"), out=Tensor([3, 4, 190141782],"int64"), )
paddle.bitwise_not(Tensor([3, 4, 190141782],"int64"), out=Tensor([3, 4, 1],"int64"), )
paddle.bitwise_not(Tensor([3, 4, 1],"int64"), out=Tensor([3, 4, 190141782],"int64"), )
paddle.bitwise_not(Tensor([3, 4, 1],"int64"), out=Tensor([3, 760567127, 1],"int64"), )
paddle.bitwise_not(Tensor([3, 4, 1],"int64"), out=Tensor([570425345, 4, 1],"int64"), )
paddle.bitwise_not(Tensor([3, 760567127, 1],"int32"), )
paddle.bitwise_not(Tensor([3, 760567127, 1],"int64"), out=Tensor([3, 4, 1],"int64"), )
paddle.bitwise_not(Tensor([3, 760567127, 1],"int64"), out=Tensor([3, 760567127, 1],"int64"), )
paddle.bitwise_not(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_not(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_not(Tensor([570425345, 4, 1],"int32"), )
paddle.bitwise_not(Tensor([570425345, 4, 1],"int64"), out=Tensor([3, 4, 1],"int64"), )
paddle.bitwise_not(Tensor([570425345, 4, 1],"int64"), out=Tensor([570425345, 4, 1],"int64"), )
paddle.bitwise_or(Tensor([152113426, 3, 5],"int32"), Tensor([152113426, 3, 5],"int32"), )
paddle.bitwise_or(Tensor([2, 228170138, 5],"int32"), Tensor([2, 228170138, 5],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 380283564],"int32"), Tensor([2, 3, 380283564],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.bitwise_or(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_or(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 1],"int32"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int32"), Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 95070891],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 76056713, 5],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 57042535, 4, 5],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([38028357, 3, 4, 5],"int64"), )
paddle.bitwise_or(Tensor([3, 760567127, 1],"int32"), Tensor([3, 760567127, 1],"int32"), )
paddle.bitwise_or(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([570425345, 4, 1],"int32"), Tensor([570425345, 4, 1],"int32"), )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([1],"int8"), Tensor([4294967297],"int8"), )
paddle.bitwise_right_shift(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), )
paddle.bitwise_right_shift(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), )
paddle.bitwise_right_shift(Tensor([200, 11408507],"int64"), Tensor([200, 11408507],"int64"), )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), )
paddle.bitwise_right_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.bitwise_right_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.bitwise_right_shift(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.bitwise_right_shift(Tensor([300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.bitwise_right_shift(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.bitwise_right_shift(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.bitwise_right_shift(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([4294967297],"int8"), Tensor([1],"int8"), )
paddle.bitwise_right_shift(Tensor([4294967297],"int8"), Tensor([4294967297],"int8"), )
paddle.bitwise_right_shift(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), )
paddle.bitwise_right_shift(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), )
paddle.bitwise_right_shift(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), )
paddle.bitwise_right_shift(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.bitwise_right_shift(Tensor([7605672, 300],"int64"), Tensor([300],"int64"), )
paddle.bitwise_right_shift(Tensor([7605672, 300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.bitwise_xor(Tensor([152113426, 3, 5],"int32"), Tensor([152113426, 3, 5],"int32"), )
paddle.bitwise_xor(Tensor([2, 228170138, 5],"int32"), Tensor([2, 228170138, 5],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 380283564],"int32"), Tensor([2, 3, 380283564],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.bitwise_xor(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_xor(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 1],"int32"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int32"), Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 95070891],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 76056713, 5],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 57042535, 4, 5],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([38028357, 3, 4, 5],"int64"), )
paddle.bitwise_xor(Tensor([3, 760567127, 1],"int32"), Tensor([3, 760567127, 1],"int32"), )
paddle.bitwise_xor(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([570425345, 4, 1],"int32"), Tensor([570425345, 4, 1],"int32"), )
paddle.bmm(Tensor([1008, 17685, 128],"float32"), Tensor([1008, 128, 7],"float32"), )
paddle.bmm(Tensor([1008, 7, 128],"float32"), Tensor([1008, 128, 17685],"float32"), )
paddle.bmm(Tensor([1008, 7, 7],"float32"), Tensor([1008, 7, 323371],"float32"), )
paddle.bmm(Tensor([109750, 165, 126],"float32"), Tensor([109750, 126, 64],"float32"), )
paddle.bmm(Tensor([112, 109529, 186],"float32"), Tensor([112, 186, 64],"float32"), )
paddle.bmm(Tensor([112, 123469, 165],"float32"), Tensor([112, 165, 64],"float32"), )
paddle.bmm(Tensor([112, 161686, 126],"float32"), Tensor([112, 126, 64],"float32"), )
paddle.bmm(Tensor([112, 165, 126],"float32"), Tensor([112, 126, 161686],"float32"), )
paddle.bmm(Tensor([112, 165, 165],"float32"), Tensor([112, 165, 123469],"float32"), )
paddle.bmm(Tensor([112, 165, 64],"float32"), Tensor([112, 64, 318318],"float32"), )
paddle.bmm(Tensor([112, 186, 126],"float32"), Tensor([112, 126, 161686],"float32"), )
paddle.bmm(Tensor([112, 186, 186],"float32"), Tensor([112, 186, 109529],"float32"), )
paddle.bmm(Tensor([112, 186, 64],"float32"), Tensor([112, 64, 318318],"float32"), )
paddle.bmm(Tensor([112, 206, 126],"float32"), Tensor([112, 126, 161686],"float32"), )
paddle.bmm(Tensor([112, 206, 206],"float32"), Tensor([112, 206, 98895],"float32"), )
paddle.bmm(Tensor([112, 206, 64],"float32"), Tensor([112, 64, 318318],"float32"), )
paddle.bmm(Tensor([112, 209, 126],"float32"), Tensor([112, 126, 161686],"float32"), )
paddle.bmm(Tensor([112, 209, 209],"float32"), Tensor([112, 209, 97476],"float32"), )
paddle.bmm(Tensor([112, 318318, 64],"float32"), Tensor([112, 64, 126],"float32"), )
paddle.bmm(Tensor([112, 318318, 64],"float32"), Tensor([112, 64, 165],"float32"), )
paddle.bmm(Tensor([112, 318318, 64],"float32"), Tensor([112, 64, 186],"float32"), )
paddle.bmm(Tensor([112, 318318, 64],"float32"), Tensor([112, 64, 206],"float32"), )
paddle.bmm(Tensor([112, 97476, 209],"float32"), Tensor([112, 209, 64],"float32"), )
paddle.bmm(Tensor([112, 98895, 206],"float32"), Tensor([112, 206, 64],"float32"), )
paddle.bmm(Tensor([173066, 206, 64],"float32"), Tensor([173066, 64, 126],"float32"), )
paddle.bmm(Tensor([173066, 206, 64],"float32"), Tensor([173066, 64, 206],"float32"), )
paddle.bmm(Tensor([191676, 186, 64],"float32"), Tensor([191676, 64, 126],"float32"), )
paddle.bmm(Tensor([191676, 186, 64],"float32"), Tensor([191676, 64, 186],"float32"), )
paddle.bmm(Tensor([216071, 165, 64],"float32"), Tensor([216071, 64, 126],"float32"), )
paddle.bmm(Tensor([216071, 165, 64],"float32"), Tensor([216071, 64, 165],"float32"), )
paddle.bmm(Tensor([2546542, 7, 128],"float32"), Tensor([2546542, 128, 7],"float32"), )
paddle.bmm(Tensor([52236, 209, 209],"float32"), Tensor([52236, 209, 64],"float32"), )
paddle.bmm(Tensor([53769, 206, 206],"float32"), Tensor([53769, 206, 64],"float32"), )
paddle.bmm(Tensor([65953, 186, 186],"float32"), Tensor([65953, 186, 64],"float32"), )
paddle.bmm(Tensor([83810, 165, 165],"float32"), Tensor([83810, 165, 64],"float32"), )
paddle.bmm(Tensor([86645, 209, 126],"float32"), Tensor([86645, 126, 64],"float32"), )
paddle.bmm(Tensor([87907, 206, 126],"float32"), Tensor([87907, 126, 64],"float32"), )
paddle.bmm(Tensor([97359, 186, 126],"float32"), Tensor([97359, 126, 64],"float32"), )
paddle.bmm(x=Tensor([2, 2, 3],"float16"), y=Tensor([2, 3, 715827883],"float16"), )
paddle.bmm(x=Tensor([2, 2, 3],"float32"), y=Tensor([2, 3, 380283564],"float32"), )
paddle.bmm(x=Tensor([2, 380283564, 3],"float32"), y=Tensor([2, 3, 2],"float32"), )
paddle.bmm(x=Tensor([2, 715827883, 3],"float16"), y=Tensor([2, 3, 2],"float16"), )
paddle.bmm(x=Tensor([380283564, 2, 3],"float32"), y=Tensor([380283564, 3, 2],"float32"), )
paddle.bmm(x=Tensor([715827883, 2, 3],"float16"), y=Tensor([715827883, 3, 2],"float16"), )
paddle.broadcast_tensors(input=list[Tensor([1, 190141782, 2, 6, 1],"bool"),Tensor([1, 190141782, 1, 1, 3],"bool"),Tensor([1, 190141782, 1, 6, 3],"bool"),Tensor([1, 190141782, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 190141782, 1],"bool"),Tensor([1, 6, 1, 190141782, 3],"bool"),Tensor([1, 1, 1, 190141782, 3],"bool"),Tensor([1, 6, 1, 190141782, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([21126865, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 31690297],"bool"),Tensor([1, 6, 1, 1, 31690297],"bool"),Tensor([1, 1, 1, 6, 31690297],"bool"),Tensor([1, 6, 1, 6, 31690297],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 10563433],"bool"),Tensor([1, 6, 1, 6, 10563433],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 10563433],"float32"),Tensor([1, 6, 1, 6, 10563433],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"bool"),Tensor([1, 6, 1, 6, 63380594],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"bool"),Tensor([21126865, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 63380594, 1],"bool"),Tensor([1, 6, 1, 63380594, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 63380594, 1],"float32"),Tensor([1, 6, 1, 63380594, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 63380594, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 63380594, 6, 1],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 63380594, 6, 1],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 63380594, 6, 6, 1],"bool"),Tensor([1, 63380594, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 63380594, 6, 6, 1],"float32"),Tensor([1, 63380594, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([10563433, 6, 6, 6, 1],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([10563433, 6, 6, 6, 1],"bool"),Tensor([10563433, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([10563433, 6, 6, 6, 1],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([10563433, 6, 6, 6, 1],"float32"),Tensor([10563433, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([31690297, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([31690297, 6, 2, 6, 1],"bool"),Tensor([31690297, 6, 1, 1, 3],"bool"),Tensor([31690297, 1, 1, 6, 3],"bool"),Tensor([31690297, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([380283564, 6],"bool"),Tensor([380283564, 1],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([380283564, 6],"float32"),Tensor([380283564, 1],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 380283564],"bool"),Tensor([6, 1],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 380283564],"bool"),Tensor([6, 380283564],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 380283564],"float32"),Tensor([6, 1],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 10563433],"bool"),Tensor([6, 1, 6, 10563433],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 10563433],"float32"),Tensor([6, 1, 6, 10563433],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"bool"),Tensor([6, 1, 6, 63380594],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 63380594, 1],"bool"),Tensor([6, 1, 63380594, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 63380594, 1],"float32"),Tensor([6, 1, 63380594, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 63380594],"bool"),Tensor([6, 1, 63380594],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 63380594],"float32"),Tensor([6, 1, 63380594],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 63380594, 6, 1],"bool"),Tensor([6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 63380594, 6, 1],"float32"),Tensor([6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 63380594, 6],"bool"),Tensor([6, 1, 6],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 63380594, 6],"bool"),Tensor([6, 63380594, 6],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 63380594, 6],"float32"),Tensor([6, 1, 6],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([63380594, 6, 6, 1],"bool"),Tensor([63380594, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([63380594, 6, 6, 1],"float32"),Tensor([63380594, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([63380594, 6, 6],"bool"),Tensor([63380594, 1, 6],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([63380594, 6, 6],"float32"),Tensor([63380594, 1, 6],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 1],"float32"),Tensor([2281701379, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 2281701379],"float32"),Tensor([1, 2281701379],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 2],"float32"),Tensor([1140850690, 2],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1140850690, 1, 2],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1140850690, 2],"float32"),Tensor([1, 2],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1140850690, 2],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([12, 1, 10, 1],"float16"),Tensor([12, 1, 10, 35791395],"float16"),], )
paddle.broadcast_tensors(list[Tensor([12, 1, 10, 1],"float16"),Tensor([12, 35791395, 10, 1],"float16"),], )
paddle.broadcast_tensors(list[Tensor([12, 1, 10, 35791395],"float16"),Tensor([12, 1, 10, 1],"float16"),], )
paddle.broadcast_tensors(list[Tensor([12, 35791395, 10, 1],"float16"),Tensor([12, 1, 10, 1],"float16"),], )
paddle.broadcast_tensors(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2, 1, 1140850690],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2, 1140850690],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2, 570425345, 2],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2281701379, 1],"float32"),Tensor([1, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2],"float16"),Tensor([2],"float16"),Tensor([2147483649, 2],"float16"),], )
paddle.broadcast_tensors(list[Tensor([2],"float32"),Tensor([1140850690, 2],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),], )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float16"),Tensor([2, 1],"float16"),Tensor([2, 2147483649],"float16"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float16"),Tensor([2, 2147483649],"float16"),Tensor([2, 1],"float16"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 2147483649],"float16"),Tensor([2, 1],"float16"),Tensor([2, 1],"float16"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 2147483649],"float16"),Tensor([2, 2147483649],"float16"),Tensor([2, 2147483649],"float16"),), )
paddle.broadcast_tensors(tuple(Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),), )
paddle.bucketize(Tensor([1073741825, 4],"float16"), Tensor([4],"float16"), )
paddle.bucketize(Tensor([1073741825, 4],"float16"), Tensor([4],"float16"), out_int32=True, )
paddle.bucketize(Tensor([1073741825, 4],"float16"), Tensor([4],"float16"), right=True, )
paddle.bucketize(Tensor([2, 2147483649],"float16"), Tensor([4],"float16"), )
paddle.bucketize(Tensor([2, 2147483649],"float16"), Tensor([4],"float16"), out_int32=True, )
paddle.bucketize(Tensor([2, 2147483649],"float16"), Tensor([4],"float16"), right=True, )
paddle.bucketize(Tensor([2, 4],"float16"), Tensor([4294967297],"float16"), )
paddle.bucketize(Tensor([2, 4],"float16"), Tensor([4294967297],"float16"), right=True, )
paddle.cartesian_prod(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.cartesian_prod(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.cartesian_prod(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.cartesian_prod(list[Tensor([2281701379],"float32"),], )
paddle.cartesian_prod(list[Tensor([2281701379],"int32"),], )
paddle.cartesian_prod(list[Tensor([2281701379],"int64"),], )
paddle.cartesian_prod(list[Tensor([4294967297],"float16"),], )
paddle.cast(Tensor([1, 1, 1, 2281701379],"bool"), "bool", )
paddle.cast(Tensor([1, 1, 1, 2281701379],"bool"), dtype="float32", )
paddle.cast(Tensor([1, 1, 1, 2281701379],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 1, 1, 4294967297],"float16"), "float32", )
paddle.cast(Tensor([1, 1, 1, 4294967297],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([1, 1, 1114113, 2048],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 1, 207427399, 11],"bool"), "bool", )
paddle.cast(Tensor([1, 1, 207427399, 11],"bool"), dtype="float32", )
paddle.cast(Tensor([1, 1, 2281701379],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 1, 2281701379],"float32"), dtype="float32", )
paddle.cast(Tensor([1, 1, 4294967297, 1],"float16"), "float32", )
paddle.cast(Tensor([1, 1, 4294967297],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([1, 1, 4294967297],"float16"), "float32", )
paddle.cast(Tensor([1, 1, 85899346, 50],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([1, 1024, 2228225],"bool"), "int64", )
paddle.cast(Tensor([1, 1024, 2228225],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1, 1024, 2228225],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([1, 1114113, 1, 2048],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 11641334, 14, 14],"float32"), VarType(float32), )
paddle.cast(Tensor([1, 11883862, 192],"float32"), dtype="float32", )
paddle.cast(Tensor([1, 128, 17825793],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([1, 128, 17825793],"int32"), dtype=Dtype(float32), )
paddle.cast(Tensor([1, 14, 11641334, 14],"bool"), "int64", )
paddle.cast(Tensor([1, 14, 5, 32595734],"bool"), "int64", )
paddle.cast(Tensor([1, 153391690, 28],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([1, 16, 268435457],"float16"), Dtype(float32), )
paddle.cast(Tensor([1, 17825793, 128],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([1, 17825793, 128],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([1, 17825793, 128],"int32"), dtype=Dtype(float32), )
paddle.cast(Tensor([1, 2, 1, 1140850690],"float32"), Dtype(float32), )
paddle.cast(Tensor([1, 2, 19669840, 58],"float32"), Dtype(float32), )
paddle.cast(Tensor([1, 207427399, 1, 11],"bool"), "bool", )
paddle.cast(Tensor([1, 207427399, 1, 11],"bool"), dtype="float32", )
paddle.cast(Tensor([1, 2228225, 1024],"bool"), "int64", )
paddle.cast(Tensor([1, 22369622, 192],"float16"), "float32", )
paddle.cast(Tensor([1, 2281701379, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1, 2281701379, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([1, 2281701379],"bool"), "int32", )
paddle.cast(Tensor([1, 2281701379],"bool"), "int64", )
paddle.cast(Tensor([1, 2281701379],"bool"), dtype="int", )
paddle.cast(Tensor([1, 2281701379],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1, 2281701379],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([1, 2281701379],"float32"), "float32", )
paddle.cast(Tensor([1, 2281701379],"float32"), dtype="float32", )
paddle.cast(Tensor([1, 2281701379],"float32"), dtype="int64", )
paddle.cast(Tensor([1, 2281701379],"int32"), Dtype(int64), )
paddle.cast(Tensor([1, 2281701379],"int64"), "bool", )
paddle.cast(Tensor([1, 28, 153391690],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([1, 32595734, 5, 14],"bool"), "int64", )
paddle.cast(Tensor([1, 35651585, 64],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 39339679, 1, 58],"float32"), Dtype(float32), )
paddle.cast(Tensor([1, 4, 570425345],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([1, 4194305, 1024],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([1, 4294967297, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([1, 4294967297],"float16"), Dtype(float32), )
paddle.cast(Tensor([1, 67108865, 64],"float16"), Dtype(float32), )
paddle.cast(Tensor([1, 768, 14, 212212],"float32"), VarType(float32), )
paddle.cast(Tensor([1, 768, 212212, 14],"float32"), VarType(float32), )
paddle.cast(Tensor([1, 85899346, 1, 50],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([10, 20, 11408507],"float32"), "float64", )
paddle.cast(Tensor([10, 228170138, 1],"float32"), "float64", )
paddle.cast(Tensor([10, 228170138],"float32"), Dtype(float16), )
paddle.cast(Tensor([10, 228170138],"float32"), VarType(bfloat16), )
paddle.cast(Tensor([10, 228170138],"float32"), VarType(float16), )
paddle.cast(Tensor([10, 228170138],"float32"), VarType(float64), )
paddle.cast(Tensor([10, 228170138],"float32"), type(numpy.float32), )
paddle.cast(Tensor([10, 228170138],"float32"), type(numpy.float64), )
paddle.cast(Tensor([10, 228170138],"int64"), Dtype(bool), )
paddle.cast(Tensor([10, 228170138],"int64"), Dtype(int32), )
paddle.cast(Tensor([10, 429496730],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([101, 22591103],"bool"), dtype=type(numpy.int32), )
paddle.cast(Tensor([1024, 256, 1, 1, 16385],"float16"), "float32", )
paddle.cast(Tensor([1024, 256, 1, 16385, 1],"float16"), "float32", )
paddle.cast(Tensor([1024, 256, 16385, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([1024, 4194305, 1, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([104, 21939437],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([11, 17, 12201612],"bool"), dtype="bool", )
paddle.cast(Tensor([11, 207427399],"bool"), dtype="bool", )
paddle.cast(Tensor([11, 20742740, 10],"bool"), dtype="bool", )
paddle.cast(Tensor([11008, 390168],"float16"), Dtype(bfloat16), )
paddle.cast(Tensor([1114113, 1, 1, 2048],"float32"), Dtype(float16), )
paddle.cast(Tensor([114085069, 20, 1],"float32"), "float64", )
paddle.cast(Tensor([114085069, 20],"float32"), "float32", )
paddle.cast(Tensor([1140850690, 2],"float32"), dtype=Dtype(bfloat16), )
paddle.cast(Tensor([11883862, 1, 192],"float32"), dtype="float32", )
paddle.cast(Tensor([12, 190141782],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([12, 190141782],"float32"), "int", )
paddle.cast(Tensor([12, 294338, 19, 34],"bool"), dtype="int64", )
paddle.cast(Tensor([12, 4, 1398102, 34],"bool"), dtype="int64", )
paddle.cast(Tensor([12, 4, 19, 2501866],"bool"), dtype="int64", )
paddle.cast(Tensor([134217729, 17],"bool"), dtype="bool", )
paddle.cast(Tensor([13421773, 17, 10],"bool"), dtype="bool", )
paddle.cast(Tensor([139265, 128, 128],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([139265, 128, 128],"int32"), dtype=Dtype(float32), )
paddle.cast(Tensor([15158, 768, 14, 14],"float32"), VarType(float32), )
paddle.cast(Tensor([16, 268435457],"float16"), Dtype(int8), )
paddle.cast(Tensor([16777217, 256, 1, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([16777217, 256],"float16"), Dtype(int8), )
paddle.cast(Tensor([17409, 1024, 128],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([1760573, 8, 9, 18],"bool"), dtype="int", )
paddle.cast(Tensor([185686, 128, 96],"float32"), dtype="int32", )
paddle.cast(Tensor([190141782, 12],"int64"), Dtype(bool), )
paddle.cast(Tensor([190141782, 12],"int64"), Dtype(int32), )
paddle.cast(Tensor([1901418, 1200],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([192, 11883862],"bool"), dtype=VarType(float32), )
paddle.cast(Tensor([192, 22369622],"float16"), "int8", )
paddle.cast(Tensor([19669840, 2, 1, 58],"float32"), Dtype(float32), )
paddle.cast(Tensor([2, 1, 1, 1, 1140850690],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 1, 1, 1, 1140850690],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 1, 1140850690, 1],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 1, 1, 1140850690, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 1, 1140850690],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 1, 1140850690],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([2, 1, 10007463, 114],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([2, 1, 1140850690, 1, 1],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 1, 1140850690, 1, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 1140850690, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 1140850690],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 1, 2, 570425345],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 1, 570425345, 2],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 10007463, 1, 114],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([2, 1024, 1024, 1089],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([2, 1024, 1114113, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([2, 1114113, 1024, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([2, 1140850690, 1, 1, 1],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 1140850690, 1, 1, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1140850690, 1, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1140850690],"bool"), dtype="int32", )
paddle.cast(Tensor([2, 1140850690],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([2, 1140850690],"float32"), "float16", )
paddle.cast(Tensor([2, 1140850690],"float32"), "float64", )
paddle.cast(Tensor([2, 1140850690],"float32"), "uint8", )
paddle.cast(Tensor([2, 1140850690],"float32"), dtype=Dtype(bfloat16), )
paddle.cast(Tensor([2, 11408507, 100],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 20, 57042535],"int32"), "bool", )
paddle.cast(Tensor([2, 285212673, 2, 2],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 3, 4, 95070891],"bool"), dtype="bool", )
paddle.cast(Tensor([2, 3, 76056713, 5],"bool"), dtype="bool", )
paddle.cast(Tensor([2, 32, 32, 1114113],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([2, 32, 32, 1114113],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([2, 32, 35651585, 1],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([2, 32, 35651585, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([2, 35651585, 32, 1],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([2, 35651585, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([2, 57042535, 20],"int32"), "bool", )
paddle.cast(Tensor([2, 57042535, 4, 5],"bool"), dtype="bool", )
paddle.cast(Tensor([20014925, 1, 1, 114],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([207427399, 1, 1, 11],"bool"), "bool", )
paddle.cast(Tensor([207427399, 1, 1, 11],"bool"), dtype="float32", )
paddle.cast(Tensor([207427399, 11],"bool"), "int64", )
paddle.cast(Tensor([2177, 1024, 1024, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([2177, 1024, 1024],"bool"), "int64", )
paddle.cast(Tensor([2228225, 1024, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2228225, 32, 32, 1],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([2228225, 32, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([22369622, 1, 192],"float16"), "float32", )
paddle.cast(Tensor([2281701379, 1, 1, 1, 1],"bool"), Dtype(float32), )
paddle.cast(Tensor([2281701379, 1, 1, 1, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([2281701379, 1, 1, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([2281701379, 1],"bool"), "int32", )
paddle.cast(Tensor([2281701379, 1],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([2281701379, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([2281701379, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2281701379, 1],"bool"), dtype=VarType(float32), )
paddle.cast(Tensor([2281701379, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([2281701379, 1],"bool"), dtype=type(numpy.int32), )
paddle.cast(Tensor([2281701379, 1],"float32"), dtype="float32", )
paddle.cast(Tensor([2281701379, 1],"float32"), dtype="int64", )
paddle.cast(Tensor([2281701379, 1],"int32"), Dtype(int64), )
paddle.cast(Tensor([2281701379],"bool"), "int64", )
paddle.cast(Tensor([2281701379],"bool"), Dtype(float32), )
paddle.cast(Tensor([2281701379],"bool"), Dtype(int64), )
paddle.cast(Tensor([2281701379],"bool"), VarType(float32), )
paddle.cast(Tensor([2281701379],"bool"), dtype="bool", )
paddle.cast(Tensor([2281701379],"bool"), dtype="float64", )
paddle.cast(Tensor([2281701379],"bool"), dtype="int", )
paddle.cast(Tensor([2281701379],"bool"), dtype=Dtype(float16), )
paddle.cast(Tensor([2281701379],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([2281701379],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([2281701379],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2281701379],"bool"), type(numpy.bool_), )
paddle.cast(Tensor([2281701379],"bool"), type(numpy.float16), )
paddle.cast(Tensor([2281701379],"bool"), type(numpy.float32), )
paddle.cast(Tensor([2281701379],"bool"), type(numpy.float64), )
paddle.cast(Tensor([2281701379],"bool"), type(numpy.int32), )
paddle.cast(Tensor([2281701379],"bool"), type(numpy.int64), )
paddle.cast(Tensor([2281701379],"float32"), "float16", )
paddle.cast(Tensor([2281701379],"float32"), "float64", )
paddle.cast(Tensor([2281701379],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([2281701379],"float32"), Dtype(float16), )
paddle.cast(Tensor([2281701379],"float32"), Dtype(float64), )
paddle.cast(Tensor([2281701379],"float32"), dtype="float16", )
paddle.cast(Tensor([2281701379],"float32"), dtype="float32", )
paddle.cast(Tensor([2281701379],"float32"), dtype="int64", )
paddle.cast(Tensor([2281701379],"int64"), "bool", )
paddle.cast(Tensor([2281701379],"int64"), "int32", )
paddle.cast(Tensor([2281701379],"int64"), Dtype(int32), )
paddle.cast(Tensor([2281701379],"int64"), VarType(int32), )
paddle.cast(Tensor([2281701379],"int64"), dtype=Dtype(float32), )
paddle.cast(Tensor([228170138, 10],"bool"), dtype="int32", )
paddle.cast(Tensor([228170138, 10],"float32"), "int", )
paddle.cast(Tensor([228170138, 10],"float32"), Dtype(float16), )
paddle.cast(Tensor([228170138, 10],"float32"), VarType(bfloat16), )
paddle.cast(Tensor([228170138, 10],"float32"), VarType(float16), )
paddle.cast(Tensor([228170138, 10],"float32"), VarType(float64), )
paddle.cast(Tensor([228170138, 10],"float32"), type(numpy.float32), )
paddle.cast(Tensor([228170138, 10],"float32"), type(numpy.float64), )
paddle.cast(Tensor([22817014, 1, 100],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([23282668, 7, 14],"bool"), dtype="int64", )
paddle.cast(Tensor([2328267, 14, 5, 14],"bool"), "int64", )
paddle.cast(Tensor([28269, 151936],"float16"), Dtype(float32), )
paddle.cast(Tensor([285212673, 4, 2],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([3, 128, 5941931],"float32"), dtype="int32", )
paddle.cast(Tensor([3, 380283564, 2],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([3, 4, 190141782],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([3, 760567127],"bool"), dtype=Dtype(float16), )
paddle.cast(Tensor([3, 7922575, 96],"float32"), dtype="int32", )
paddle.cast(Tensor([35651585, 1, 64],"float32"), Dtype(float16), )
paddle.cast(Tensor([38028357, 3, 4, 5],"bool"), dtype="bool", )
paddle.cast(Tensor([39339679, 58],"int64"), "bool", )
paddle.cast(Tensor([4, 128, 4456449],"int32"), dtype=VarType(float32), )
paddle.cast(Tensor([4, 285212673, 2],"int32"), dtype=VarType(float32), )
paddle.cast(Tensor([4, 570425345],"float32"), "complex64", )
paddle.cast(Tensor([4194305, 1, 1024],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([4194305, 16, 64],"float16"), Dtype(float32), )
paddle.cast(Tensor([4294967297, 1, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([4294967297],"float16"), "float32", )
paddle.cast(Tensor([4294967297],"float16"), dtype="int32", )
paddle.cast(Tensor([429496730, 10],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([5478275, 28, 28],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([5592406, 768],"float16"), Dtype(bfloat16), )
paddle.cast(Tensor([570425345, 1, 2, 2],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([570425345, 4, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([570425345, 4],"bool"), dtype=Dtype(float16), )
paddle.cast(Tensor([570425345, 4],"float32"), "complex64", )
paddle.cast(Tensor([5704254, 20, 20],"int32"), "bool", )
paddle.cast(Tensor([6, 2347430, 9, 18],"bool"), dtype="int", )
paddle.cast(Tensor([6, 8, 2640859, 18],"bool"), dtype="int", )
paddle.cast(Tensor([6, 8, 9, 5281717],"bool"), dtype="int", )
paddle.cast(Tensor([639133, 17, 5, 6, 7],"bool"), dtype="bool", )
paddle.cast(Tensor([67108865, 64],"float16"), "int8", )
paddle.cast(Tensor([7, 23282668, 14],"bool"), dtype="int64", )
paddle.cast(Tensor([7, 7, 46565335],"bool"), dtype="int64", )
paddle.cast(Tensor([760567127, 3],"bool"), dtype="int", )
paddle.cast(Tensor([760567127, 3],"float32"), "float16", )
paddle.cast(Tensor([760567127, 3],"float32"), "float64", )
paddle.cast(Tensor([760567127, 3],"float32"), "uint8", )
paddle.cast(Tensor([8, 1358156, 5, 6, 7],"bool"), dtype="bool", )
paddle.cast(Tensor([8, 17, 399458, 6, 7],"bool"), dtype="bool", )
paddle.cast(Tensor([8, 17, 5, 479350, 7],"bool"), dtype="bool", )
paddle.cast(Tensor([8, 17, 5, 6, 559241],"bool"), dtype="bool", )
paddle.cast(Tensor([85899346, 1, 1, 50],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([883012, 4, 19, 34],"bool"), dtype="int64", )
paddle.cast(Tensor([8912897, 128, 2],"int32"), dtype=VarType(float32), )
paddle.cast(x=Tensor([104, 21939437],"bool"), dtype="float32", )
paddle.cast(x=Tensor([1242, 1837119],"int64"), dtype="int32", )
paddle.cast(x=Tensor([2281701379, 1],"int64"), dtype="int32", )
paddle.cast(x=Tensor([2281701379],"bool"), dtype=Dtype(float16), )
paddle.cast(x=Tensor([2281701379],"bool"), dtype=Dtype(float32), )
paddle.cast(x=Tensor([228171, 100, 100],"bool"), dtype=Dtype(float16), )
paddle.cast(x=Tensor([228171, 100, 100],"bool"), dtype=Dtype(float32), )
paddle.cast(x=Tensor([24422, 93431],"bool"), dtype="float32", )
paddle.cast(x=Tensor([253522376, 3, 3],"float32"), dtype="float64", )
paddle.cast(x=Tensor([3, 253522376, 3],"float32"), dtype="float64", )
paddle.cast(x=Tensor([3, 3, 253522376],"float32"), dtype="float64", )
paddle.cast(x=Tensor([8, 100, 2852127],"bool"), dtype=Dtype(float16), )
paddle.cast(x=Tensor([8, 100, 2852127],"bool"), dtype=Dtype(float32), )
paddle.cast(x=Tensor([8, 2852127, 100],"bool"), dtype=Dtype(float16), )
paddle.cast(x=Tensor([8, 2852127, 100],"bool"), dtype=Dtype(float32), )
paddle.cdist(Tensor([300, 7605672],"float32"), Tensor([1, 7605672],"float32"), p=1, )
paddle.cdist(Tensor([570425345, 4],"float32"), Tensor([1, 4],"float32"), p=1, )
paddle.cdist(Tensor([6380, 357634],"float32"), Tensor([1, 357634],"float32"), p=1, )
paddle.cdist(Tensor([8550, 266866],"float32"), Tensor([1, 266866],"float32"), p=1, )
paddle.cdist(Tensor([900, 2535224],"float32"), Tensor([1, 2535224],"float32"), p=1, )
paddle.ceil(Tensor([1, 1073741825, 4],"float16"), )
paddle.ceil(Tensor([1, 1431655766, 3],"float16"), )
paddle.ceil(Tensor([1, 3, 1431655766],"float16"), )
paddle.ceil(Tensor([1, 3, 760567127],"float32"), )
paddle.ceil(Tensor([1, 4294967297],"float16"), )
paddle.ceil(Tensor([1, 760567127, 3],"float32"), )
paddle.ceil(Tensor([103713700, 11, 2],"float32"), )
paddle.ceil(Tensor([114085069, 10, 2],"float32"), )
paddle.ceil(Tensor([11930465, 6, 3, 4, 1, 5],"float16"), )
paddle.ceil(Tensor([142606337, 8, 2],"float32"), )
paddle.ceil(Tensor([1431655766, 3],"float16"), )
paddle.ceil(Tensor([162978670, 7, 2],"float32"), )
paddle.ceil(Tensor([190141782, 6, 2],"float32"), )
paddle.ceil(Tensor([2, 1140850690],"float32"), )
paddle.ceil(Tensor([2281701379, 1],"float32"), )
paddle.ceil(Tensor([2281701379],"float32"), )
paddle.ceil(Tensor([228170138, 5, 2],"float32"), )
paddle.ceil(Tensor([23860930, 6, 3, 1, 2, 5],"float16"), )
paddle.ceil(Tensor([253522376, 3, 3],"float32"), )
paddle.ceil(Tensor([285212673, 4, 2],"float32"), )
paddle.ceil(Tensor([29826162, 6, 3, 4, 2, 1],"float16"), )
paddle.ceil(Tensor([3, 23860930, 3, 4, 1, 5],"float16"), )
paddle.ceil(Tensor([3, 47721859, 3, 1, 2, 5],"float16"), )
paddle.ceil(Tensor([3, 59652324, 3, 4, 2, 1],"float16"), )
paddle.ceil(Tensor([3, 6, 11930465, 4, 1, 5],"float16"), )
paddle.ceil(Tensor([3, 6, 23860930, 1, 2, 5],"float16"), )
paddle.ceil(Tensor([3, 6, 29826162, 4, 2, 1],"float16"), )
paddle.ceil(Tensor([3, 6, 3, 1, 15907287, 5],"float16"), )
paddle.ceil(Tensor([3, 6, 3, 1, 2, 39768216],"float16"), )
paddle.ceil(Tensor([3, 6, 3, 15907287, 1, 5],"float16"), )
paddle.ceil(Tensor([3, 6, 3, 39768216, 2, 1],"float16"), )
paddle.ceil(Tensor([3, 6, 3, 4, 1, 19884108],"float16"), )
paddle.ceil(Tensor([3, 6, 3, 4, 19884108, 1],"float16"), )
paddle.ceil(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), )
paddle.ceil(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), )
paddle.ceil(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), )
paddle.ceil(Tensor([32, 32, 2228225],"float32"), )
paddle.ceil(Tensor([32, 557057, 128],"float32"), )
paddle.ceil(Tensor([357913942, 3, 4],"float16"), )
paddle.ceil(Tensor([380283564, 3, 2],"float32"), )
paddle.ceil(Tensor([4, 1, 1073741825],"float16"), )
paddle.ceil(Tensor([4, 10, 57042535],"float32"), )
paddle.ceil(Tensor([4, 1073741825, 1],"float16"), )
paddle.ceil(Tensor([4, 1073741825],"float16"), )
paddle.ceil(Tensor([4, 11, 51856850],"float32"), )
paddle.ceil(Tensor([4, 12, 47535446],"float32"), )
paddle.ceil(Tensor([4, 13, 43878873],"float32"), )
paddle.ceil(Tensor([4, 14, 40744668],"float32"), )
paddle.ceil(Tensor([4, 15, 38028357],"float32"), )
paddle.ceil(Tensor([4, 16, 35651585],"float32"), )
paddle.ceil(Tensor([4, 17, 33554433],"float32"), )
paddle.ceil(Tensor([4, 178956971, 6],"float16"), )
paddle.ceil(Tensor([4, 18, 31690297],"float32"), )
paddle.ceil(Tensor([4, 19, 30022387],"float32"), )
paddle.ceil(Tensor([4, 285212673, 2],"float32"), )
paddle.ceil(Tensor([4, 3, 190141782],"float32"), )
paddle.ceil(Tensor([4, 4, 142606337],"float32"), )
paddle.ceil(Tensor([4, 5, 114085069],"float32"), )
paddle.ceil(Tensor([4, 570425345],"float32"), )
paddle.ceil(Tensor([4, 6, 95070891],"float32"), )
paddle.ceil(Tensor([4, 7, 153391690],"float16"), )
paddle.ceil(Tensor([4, 7, 81489335],"float32"), )
paddle.ceil(Tensor([4, 8, 71303169],"float32"), )
paddle.ceil(Tensor([4294967297, 1],"float16"), )
paddle.ceil(Tensor([4294967297],"float16"), )
paddle.ceil(Tensor([477218589, 3, 3],"float16"), )
paddle.ceil(Tensor([5, 858993460],"float16"), )
paddle.ceil(Tensor([557057, 32, 128],"float32"), )
paddle.ceil(Tensor([60044774, 19, 2],"float32"), )
paddle.ceil(Tensor([613566757, 7, 1],"float16"), )
paddle.ceil(Tensor([63380594, 18, 2],"float32"), )
paddle.ceil(Tensor([67108865, 17, 2],"float32"), )
paddle.ceil(Tensor([7, 613566757],"float16"), )
paddle.ceil(Tensor([71303169, 16, 2],"float32"), )
paddle.ceil(Tensor([715827883, 1, 6],"float16"), )
paddle.ceil(Tensor([76056713, 15, 2],"float32"), )
paddle.ceil(Tensor([81489335, 14, 2],"float32"), )
paddle.ceil(Tensor([87757746, 13, 2],"float32"), )
paddle.ceil(Tensor([95070891, 12, 2],"float32"), )
paddle.ceil(x=Tensor([253522376, 3, 3],"float32"), )
paddle.ceil(x=Tensor([3, 253522376, 3],"float32"), )
paddle.ceil(x=Tensor([3, 3, 253522376],"float32"), )
paddle.chunk(Tensor([1, 1, 1, 4294967297],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1, 1, 64, 67108865],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1, 1, 67108865, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1, 1048577, 64, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1, 11, 207427399],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([1, 2228225, 1024],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([1, 4, 20, 28521268],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([1, 4, 23767723, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([1, 4753545, 20, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([1, 67108865, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([10, 2, 14260634, 8],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([10, 2, 28521268, 4],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([10, 2, 8, 14260634],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([10, 3565159, 8, 8],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([10, 7130317, 8, 4],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([1048577, 1, 64, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1114113, 16, 128],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([1114113, 32, 64],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([114, 1177349, 1, 32],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([114, 4, 1, 9418788],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([114, 4, 147169, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([114, 4, 294338, 32],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([114, 588675, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1188387, 4, 20, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 1044736, 7, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 1371215, 128],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([13, 16, 10969719],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([13, 175515491, 1],"float32"), 4, axis=1, )
paddle.chunk(Tensor([13, 21, 8357881],"float32"), 3, axis=1, )
paddle.chunk(Tensor([13, 2437716, 72],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 2742430, 64],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([13, 32, 5484860],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([13, 4, 1828287, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 4, 43878873],"float32"), 4, axis=1, )
paddle.chunk(Tensor([13, 4, 7, 6268411],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 5484860, 32],"float32"), 3, axis=1, )
paddle.chunk(Tensor([13, 56, 3134206],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13581556, 21, 8],"float32"), 3, axis=1, )
paddle.chunk(Tensor([16, 128, 1114113],"float32"), 2, axis=1, )
paddle.chunk(Tensor([16, 5593, 25500],"float32"), 2, axis=1, )
paddle.chunk(Tensor([16777217, 4, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([17825793, 2, 8, 8],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([202566, 11, 1024],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([2048, 1114113],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([2579, 216, 64, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([33554433, 2, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([33554433, 4, 1, 32],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([3395389, 21, 32],"float32"), 3, axis=1, )
paddle.chunk(Tensor([3395389, 4, 7, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([35, 1917397, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([35, 2, 1, 61356676],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([35, 2, 1917397, 32],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([35, 2, 958699, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([35, 3834793, 1, 32],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([35651585, 2, 8, 4],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([4, 108, 155345, 64],"float16"), 3, axis=1, )
paddle.chunk(Tensor([4, 108, 64, 155345],"float16"), 3, axis=1, )
paddle.chunk(Tensor([4, 108, 64, 82527],"float32"), 3, axis=1, )
paddle.chunk(Tensor([4, 108, 82527, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([4, 139265, 64, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([4, 216, 41264, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([4, 216, 64, 41264],"float32"), 3, axis=1, )
paddle.chunk(Tensor([4, 216, 64, 77673],"float16"), 3, axis=1, )
paddle.chunk(Tensor([4, 216, 77673, 64],"float16"), 3, axis=1, )
paddle.chunk(Tensor([4, 262145, 64, 64],"float16"), 3, axis=1, )
paddle.chunk(Tensor([4, 6, 6],"int32"), chunks=3, axis=Tensor([2281701379],"int32"), )
paddle.chunk(Tensor([4, 6, 95070891],"bool"), chunks=3, axis=1, )
paddle.chunk(Tensor([4, 6, 95070891],"int32"), chunks=3, axis=1, )
paddle.chunk(Tensor([4, 6, 95070891],"int32"), chunks=3, axis=Tensor([1],"int32"), )
paddle.chunk(Tensor([4, 95070891, 6],"bool"), chunks=3, axis=1, )
paddle.chunk(Tensor([4, 95070891, 6],"int32"), chunks=3, axis=1, )
paddle.chunk(Tensor([4, 95070891, 6],"int32"), chunks=3, axis=Tensor([1],"int32"), )
paddle.chunk(Tensor([4855, 216, 64, 64],"float16"), 3, axis=1, )
paddle.chunk(Tensor([5158, 108, 64, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([52, 21, 2089471],"float32"), 3, axis=1, )
paddle.chunk(Tensor([52, 261184, 7, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([52, 4, 457072, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([52, 4, 7, 1567103],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([52, 5484860, 8],"float32"), 3, axis=1, )
paddle.chunk(Tensor([565899, 56, 72],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([570425345, 4, 1],"float32"), 4, axis=1, )
paddle.chunk(Tensor([570425345, 4],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([63380594, 6, 6],"bool"), chunks=3, axis=1, )
paddle.chunk(Tensor([63380594, 6, 6],"int32"), chunks=3, axis=1, )
paddle.chunk(Tensor([63380594, 6, 6],"int32"), chunks=3, axis=Tensor([1],"int32"), )
paddle.chunk(Tensor([67108865, 1, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([67108865, 2, 1, 32],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([700, 128, 25500],"float32"), 2, axis=1, )
paddle.chunk(Tensor([8192, 278529],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([9710, 108, 64, 64],"float16"), 3, axis=1, )
paddle.chunk(x=Tensor([1431655766, 3],"float16"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([1431655766, 3],"float16"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([1431655766, 3],"float16"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(x=Tensor([2281701379],"bool"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([3, 1431655766],"float16"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([3, 1431655766],"float16"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([3, 1431655766],"float16"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(x=Tensor([3, 3],"float16"), chunks=3, axis=Tensor([2281701379],"int64"), )
paddle.chunk(x=Tensor([3, 3],"float32"), chunks=3, axis=Tensor([2281701379],"int64"), )
paddle.chunk(x=Tensor([3, 3],"float64"), chunks=3, axis=Tensor([2281701379],"int64"), )
paddle.chunk(x=Tensor([3, 3],"int32"), chunks=3, axis=Tensor([2281701379],"int64"), )
paddle.chunk(x=Tensor([3, 3],"int64"), chunks=3, axis=Tensor([2281701379],"int64"), )
paddle.chunk(x=Tensor([3, 760567127],"float32"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([3, 760567127],"float32"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([3, 760567127],"float32"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(x=Tensor([3, 760567127],"int32"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([3, 760567127],"int32"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([3, 760567127],"int32"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(x=Tensor([3, 760567127],"int64"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([3, 760567127],"int64"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([3, 760567127],"int64"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(x=Tensor([760567127, 3],"float32"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([760567127, 3],"float32"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([760567127, 3],"float32"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(x=Tensor([760567127, 3],"int32"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([760567127, 3],"int32"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([760567127, 3],"int32"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(x=Tensor([760567127, 3],"int64"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([760567127, 3],"int64"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([760567127, 3],"int64"), chunks=3, axis=Tensor([1],"int64"), )
paddle.clip(Tensor([1, 1, 2281701379],"float32"), min=-2, max=2, )
paddle.clip(Tensor([1, 1140850690, 2],"float32"), min=-1.0, max=1.0, )
paddle.clip(Tensor([1, 11883862, 192],"float32"), min=-2, max=2, )
paddle.clip(Tensor([1, 1620527, 1408],"float32"), min=-2, max=2, )
paddle.clip(Tensor([1, 2, 1140850690],"float32"), min=-1.0, max=1.0, )
paddle.clip(Tensor([1, 2228225, 1024],"float32"), min=-2, max=2, )
paddle.clip(Tensor([1, 2281701379],"float32"), min=-2.0, max=2.0, )
paddle.clip(Tensor([1, 2281701379],"float32"), min=1.1754943508222875e-38, )
paddle.clip(Tensor([1, 2281701379],"float32"), min=1e-05, )
paddle.clip(Tensor([1, 257, 8878216],"float32"), min=-2, max=2, )
paddle.clip(Tensor([1, 300, 7605672],"float32"), 0, 1, )
paddle.clip(Tensor([1, 557057, 4096],"float32"), 0, 1, )
paddle.clip(Tensor([10, 2, 114085069],"float32"), min=1e-06, )
paddle.clip(Tensor([10, 228170138, 1],"float32"), min=1e-06, )
paddle.clip(Tensor([10, 228170138],"float32"), min=1e-05, )
paddle.clip(Tensor([10, 228170138],"float32"), min=1e-06, )
paddle.clip(Tensor([100, 22817014],"float32"), min=1e-05, )
paddle.clip(Tensor([1024, 2228225],"float32"), min=-2, max=2, )
paddle.clip(Tensor([103, 22152441],"float32"), min=1e-05, )
paddle.clip(Tensor([108, 21126865],"float32"), min=1e-05, )
paddle.clip(Tensor([11, 1, 207427399],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([11, 207427399, 1],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([1140850690, 2, 1],"float32"), min=1e-06, )
paddle.clip(Tensor([1140850690, 2],"float32"), min=1.1754943508222875e-38, )
paddle.clip(Tensor([1140850690, 2],"float32"), min=1e-06, )
paddle.clip(Tensor([11883862, 1, 192],"float32"), min=-2, max=2, )
paddle.clip(Tensor([128, 17825793],"float32"), -8, 7, )
paddle.clip(Tensor([139265, 1, 128, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([1408, 1620527],"float32"), min=-2, max=2, )
paddle.clip(Tensor([16, 1025, 139129],"float32"), min=1e-07, )
paddle.clip(Tensor([16, 107, 1332770],"float32"), min=1e-07, )
paddle.clip(Tensor([16, 1332770, 107],"float32"), min=1e-07, )
paddle.clip(Tensor([16, 139129, 1025],"float32"), min=1e-07, )
paddle.clip(Tensor([16, 213, 669514],"float32"), min=1e-07, )
paddle.clip(Tensor([16, 257, 554889],"float32"), min=1e-07, )
paddle.clip(Tensor([16, 277986, 513],"float32"), min=1e-07, )
paddle.clip(Tensor([16, 279074, 511],"float32"), min=1e-07, )
paddle.clip(Tensor([16, 511, 279074],"float32"), min=1e-07, )
paddle.clip(Tensor([16, 554889, 257],"float32"), min=1e-07, )
paddle.clip(Tensor([1620527, 1, 1408],"float32"), min=-2, max=2, )
paddle.clip(Tensor([1620527, 1408],"float32"), min=-2, max=2, )
paddle.clip(Tensor([162978670, 14],"float32"), min=0, )
paddle.clip(Tensor([17375, 257, 511],"float32"), min=1e-07, )
paddle.clip(Tensor([17375, 511, 257],"float32"), min=1e-07, )
paddle.clip(Tensor([175515491, 13],"float32"), min=0, )
paddle.clip(Tensor([175515491, 13],"float32"), min=1e-06, )
paddle.clip(Tensor([17825793, 128],"float32"), -8, 7, )
paddle.clip(Tensor([1857, 300, 4096],"float32"), 0, 1, )
paddle.clip(Tensor([190141782, 12],"float32"), min=0, )
paddle.clip(Tensor([190141782, 12],"float32"), min=1e-06, )
paddle.clip(Tensor([192, 3, 14, 282950],"float32"), min=-2, max=2, )
paddle.clip(Tensor([192, 3, 282950, 14],"float32"), min=-2, max=2, )
paddle.clip(Tensor([192, 60632, 14, 14],"float32"), min=-2, max=2, )
paddle.clip(Tensor([2, 107136, 10649],"float32"), min=0, )
paddle.clip(Tensor([2, 1140850690, 1],"float32"), min=0, )
paddle.clip(Tensor([2, 1140850690],"float32"), min=1.0, )
paddle.clip(Tensor([2, 1140850690],"float32"), min=1.1754943508222875e-38, )
paddle.clip(Tensor([2, 142606337, 8],"float32"), 0.0, 1.0, )
paddle.clip(Tensor([2, 2, 570425345],"float32"), min=-1.0, max=1.0, )
paddle.clip(Tensor([2, 570425345, 2],"float32"), min=-1.0, max=1.0, )
paddle.clip(Tensor([2, 8, 142606337],"float32"), 0.0, 1.0, )
paddle.clip(Tensor([20, 1, 152, 750560],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([20, 1, 419431, 272],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([20, 114085069],"float32"), min=1.1920928955078125e-07, )
paddle.clip(Tensor([20, 2760, 152, 272],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([2048, 1114113],"float32"), max=4.135166556742356, )
paddle.clip(Tensor([207427399, 11],"float32"), min=0, )
paddle.clip(Tensor([207427399, 11],"float32"), min=1e-06, )
paddle.clip(Tensor([20805, 1025, 107],"float32"), min=1e-07, )
paddle.clip(Tensor([20805, 107, 1025],"float32"), min=1e-07, )
paddle.clip(Tensor([20882, 213, 513],"float32"), min=1e-07, )
paddle.clip(Tensor([21, 1, 108652447],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([21, 108652447, 1],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([21298, 107136, 1],"float32"), min=0, )
paddle.clip(Tensor([21298, 2, 248, 216],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([22, 1, 103713700],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([22, 103713700, 1],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([2228225, 1, 1024],"float32"), min=-2, max=2, )
paddle.clip(Tensor([2228225, 1024],"float32"), min=-2, max=2, )
paddle.clip(Tensor([2281701379, 1, 1],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([2281701379, 1],"float32"), max=4.135166556742356, )
paddle.clip(Tensor([2281701379, 1],"float32"), min=-2.0, max=2.0, )
paddle.clip(Tensor([2281701379, 1],"float32"), min=1.0, )
paddle.clip(Tensor([2281701379, 1],"float32"), min=1.1920928955078125e-07, )
paddle.clip(Tensor([2281701379],"float32"), 0, 1, )
paddle.clip(Tensor([2281701379],"float32"), max=22400, )
paddle.clip(Tensor([2281701379],"float32"), min=0, )
paddle.clip(Tensor([2281701379],"float32"), min=0.001, max=100.0, )
paddle.clip(Tensor([2281701379],"float32"), min=1, )
paddle.clip(Tensor([2281701379],"float32"), min=1.0, )
paddle.clip(Tensor([2281701379],"float32"), min=1.1754943508222875e-38, )
paddle.clip(Tensor([228170138, 10],"float32"), min=0, )
paddle.clip(Tensor([228170138, 10],"float32"), min=1e-06, )
paddle.clip(Tensor([256, 8912897],"float32"), min=-2.0, max=2.0, )
paddle.clip(Tensor([28, 81489335],"float32"), 0.0, 1.0, )
paddle.clip(Tensor([285212673, 8],"float32"), 0.0, 1.0, )
paddle.clip(Tensor([2970966, 768],"float32"), min=-2, max=2, )
paddle.clip(Tensor([3, 3840, 198065],"float32"), 0, 255, )
paddle.clip(Tensor([3, 74275, 10240],"float32"), 0, 255, )
paddle.clip(Tensor([34817, 4, 128, 128],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([35651585, 64],"float32"), min=-2.0, max=2.0, )
paddle.clip(Tensor([35651585, 8, 8],"float32"), 0.0, 1.0, )
paddle.clip(Tensor([356516, 32, 100, 2],"float32"), 0, 1, )
paddle.clip(Tensor([3880445, 3, 14, 14],"float32"), min=-2, max=2, )
paddle.clip(Tensor([4, 1, 128, 4456449],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 1, 248, 2300103],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 1, 2640859, 216],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 1, 4456449, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 10649, 248, 216],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 157920, 3613],"float32"), min=0, )
paddle.clip(Tensor([4, 190141782, 3],"float32"), min=0, )
paddle.clip(Tensor([4, 2, 128, 2228225],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 2, 1320430, 216],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 2, 2228225, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 2, 248, 1150052],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 34817, 128, 128],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([4, 34817, 128, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 4, 1114113, 128],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([4, 4, 128, 1114113],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([4, 570425345],"float32"), -1, 1, )
paddle.clip(Tensor([4, 570425345],"float32"), min=1.0, )
paddle.clip(Tensor([42595, 1, 248, 216],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4456449, 512],"float32"), -64, 64, )
paddle.clip(Tensor([456340276, 5],"float32"), -1, 1, )
paddle.clip(Tensor([4572548, 499],"float32"), min=1e-10, )
paddle.clip(Tensor([4817, 157920, 3],"float32"), min=0, )
paddle.clip(Tensor([5, 456340276],"float32"), -1, 1, )
paddle.clip(Tensor([512, 22283, 100, 2],"float32"), 0, 1, )
paddle.clip(Tensor([512, 32, 100, 1393],"float32"), 0, 1, )
paddle.clip(Tensor([512, 32, 69633, 2],"float32"), 0, 1, )
paddle.clip(Tensor([512, 4456449],"float32"), -64, 64, )
paddle.clip(Tensor([512, 4456449],"float32"), max=4.135166556742356, )
paddle.clip(Tensor([52640, 43346],"float32"), min=0, )
paddle.clip(Tensor([52640, 43346],"float32"), min=1e-06, )
paddle.clip(Tensor([55189, 1, 152, 272],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([570425345, 2, 2],"float32"), min=-1.0, max=1.0, )
paddle.clip(Tensor([570425345, 4],"float32"), -1, 1, )
paddle.clip(Tensor([59, 3840, 10240],"float32"), 0, 255, )
paddle.clip(Tensor([6306, 257, 1408],"float32"), min=-2, max=2, )
paddle.clip(Tensor([64, 35651585],"float32"), min=-2.0, max=2.0, )
paddle.clip(Tensor([69633, 2, 128, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([71303169, 32],"float32"), min=-2.0, max=2.0, )
paddle.clip(Tensor([760567127, 3],"float32"), min=1e-05, )
paddle.clip(Tensor([8, 1, 128, 2228225],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([8, 1, 2228225, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([8, 17409, 128, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([8, 285212673],"float32"), 0.0, 1.0, )
paddle.clip(Tensor([80, 28521268],"float32"), min=1e-10, )
paddle.clip(Tensor([81489335, 28],"float32"), 0.0, 1.0, )
paddle.clip(Tensor([835789, 2730],"float32"), min=-2, max=2, )
paddle.clip(Tensor([8671, 257, 1024],"float32"), min=-2, max=2, )
paddle.clip(Tensor([8912897, 256],"float32"), min=-2.0, max=2.0, )
paddle.clip(Tensor([9, 1, 253522376],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([9, 253522376, 1],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([9, 253522376],"float32"), max=4.135166556742356, )
paddle.clip(x=Tensor([1, 2, 1140850690],"float32"), min=None, max=1, )
paddle.clip(x=Tensor([1, 760567127, 3],"float32"), min=None, max=1, )
paddle.clip(x=Tensor([10, 228170138],"float32"), min=-0.1, max=0.8, )
paddle.clip(x=Tensor([10, 228170138],"float32"), min=-0.6, max=0.6, )
paddle.clip(x=Tensor([142606337, 16],"float32"), min=-1.0, max=1.0, )
paddle.clip(x=Tensor([14626291, 156],"float32"), min=0, max=1, )
paddle.clip(x=Tensor([16, 142606337],"float32"), min=-1.0, max=1.0, )
paddle.clip(x=Tensor([17825793, 8, 16],"float32"), min=0.0, max=0.0, )
paddle.clip(x=Tensor([1828287, 1248],"float32"), min=0, max=1, )
paddle.clip(x=Tensor([2281701379],"float32"), min=-0.1, max=0.1, )
paddle.clip(x=Tensor([228170138, 10],"float32"), min=-0.1, max=0.8, )
paddle.clip(x=Tensor([228170138, 10],"float32"), min=-0.6, max=0.6, )
paddle.clip(x=Tensor([24801102, 92],"float32"), min=0, max=1, )
paddle.clip(x=Tensor([253522376, 3, 3],"float32"), min=None, max=5, )
paddle.clip(x=Tensor([2616631, 872],"float32"), min=0, max=1, )
paddle.clip(x=Tensor([3, 253522376, 3],"float32"), min=None, max=5, )
paddle.clip(x=Tensor([3, 3, 253522376],"float32"), min=None, max=5, )
paddle.clip(x=Tensor([3, 760567127],"float32"), min=-5.0, max=5.0, )
paddle.clip(x=Tensor([3656573, 624],"float32"), min=0, max=1, )
paddle.clip(x=Tensor([380283564, 2, 3],"float32"), min=None, max=1, )
paddle.clip(x=Tensor([4, 35651585, 16],"float32"), min=0.0, max=0.0, )
paddle.clip(x=Tensor([4, 8, 71303169],"float32"), min=0.0, max=0.0, )
paddle.clip(x=Tensor([512, 4456449],"float32"), min=0, max=1, )
paddle.clip(x=Tensor([760567127, 3],"float32"), min=-5.0, max=5.0, )
paddle.clone(Tensor([1, 100, 22817014],"float32"), )
paddle.clone(Tensor([1, 10000, 228171],"float32"), )
paddle.clone(Tensor([1, 1024, 30948, 72],"float32"), )
paddle.clone(Tensor([1, 1024, 48, 46422],"float32"), )
paddle.clone(Tensor([1, 1140850690, 2],"float32"), )
paddle.clone(Tensor([1, 1178565, 44, 44],"float32"), )
paddle.clone(Tensor([1, 12, 1, 190141782],"float32"), )
paddle.clone(Tensor([1, 12, 11, 17285617],"float32"), )
paddle.clone(Tensor([1, 12, 11883862, 16],"float32"), )
paddle.clone(Tensor([1, 12, 1485483, 128],"float32"), )
paddle.clone(Tensor([1, 12, 168, 1131797],"float32"), )
paddle.clone(Tensor([1, 12, 21, 9054371],"float32"), )
paddle.clone(Tensor([1, 12, 2970966, 64],"float32"), )
paddle.clone(Tensor([1, 12, 42, 4527186],"float32"), )
paddle.clone(Tensor([1, 12, 5941931, 32],"float32"), )
paddle.clone(Tensor([1, 12, 742742, 256],"float32"), )
paddle.clone(Tensor([1, 12, 84, 2263593],"float32"), )
paddle.clone(Tensor([1, 128, 152, 117275],"float32"), )
paddle.clone(Tensor([1, 128, 65537, 272],"float32"), )
paddle.clone(Tensor([1, 12964213, 11, 16],"float32"), )
paddle.clone(Tensor([1, 144, 21, 754531],"float32"), )
paddle.clone(Tensor([1, 144, 495161, 32],"float32"), )
paddle.clone(Tensor([1, 15, 2376773, 64],"float32"), )
paddle.clone(Tensor([1, 15, 64, 2376773],"float32"), )
paddle.clone(Tensor([1, 152113426, 15],"float32"), )
paddle.clone(Tensor([1, 171888, 13275],"float32"), )
paddle.clone(Tensor([1, 18, 168, 754531],"float32"), )
paddle.clone(Tensor([1, 18, 495161, 256],"float32"), )
paddle.clone(Tensor([1, 192, 185686, 64],"float32"), )
paddle.clone(Tensor([1, 192, 270088, 44],"float32"), )
paddle.clone(Tensor([1, 192, 32, 371371],"float32"), )
paddle.clone(Tensor([1, 192, 371371, 32],"float32"), )
paddle.clone(Tensor([1, 192, 44, 270088],"float32"), )
paddle.clone(Tensor([1, 192, 64, 185686],"float32"), )
paddle.clone(Tensor([1, 2048, 24, 46422],"float32"), )
paddle.clone(Tensor([1, 2048, 30948, 36],"float32"), )
paddle.clone(Tensor([1, 212212, 84, 128],"float32"), )
paddle.clone(Tensor([1, 21504, 106106],"float32"), )
paddle.clone(Tensor([1, 2228225, 32, 32],"float32"), )
paddle.clone(Tensor([1, 2281701379, 1],"float32"), )
paddle.clone(Tensor([1, 2281701379],"bool"), )
paddle.clone(Tensor([1, 2281701379],"float32"), )
paddle.clone(Tensor([1, 2281701379],"int32"), )
paddle.clone(Tensor([1, 247581, 96, 96, 1],"float32"), )
paddle.clone(Tensor([1, 2500, 912681],"float32"), )
paddle.clone(Tensor([1, 25073642, 91],"float32"), )
paddle.clone(Tensor([1, 2541, 897955],"float32"), )
paddle.clone(Tensor([1, 256, 123791, 72],"float32"), )
paddle.clone(Tensor([1, 256, 139265, 64],"float32"), )
paddle.clone(Tensor([1, 256, 168, 53053],"float32"), )
paddle.clone(Tensor([1, 256, 192, 46422],"float32"), )
paddle.clone(Tensor([1, 256, 21, 424424],"float32"), )
paddle.clone(Tensor([1, 256, 24, 371371],"float32"), )
paddle.clone(Tensor([1, 256, 247581, 36],"float32"), )
paddle.clone(Tensor([1, 256, 278529, 32],"float32"), )
paddle.clone(Tensor([1, 256, 30948, 288],"float32"), )
paddle.clone(Tensor([1, 256, 34817, 256],"float32"), )
paddle.clone(Tensor([1, 256, 42, 212212],"float32"), )
paddle.clone(Tensor([1, 256, 48, 185686],"float32"), )
paddle.clone(Tensor([1, 2640859, 24, 36],"float32"), )
paddle.clone(Tensor([1, 28521268, 80],"float32"), )
paddle.clone(Tensor([1, 3, 7922575, 96, 1],"float32"), )
paddle.clone(Tensor([1, 3, 96, 7922575, 1],"float32"), )
paddle.clone(Tensor([1, 3, 96, 96, 82527],"float32"), )
paddle.clone(Tensor([1, 33554433, 68],"float32"), )
paddle.clone(Tensor([1, 3395389, 21, 32],"float32"), )
paddle.clone(Tensor([1, 35651585, 1, 64],"float32"), )
paddle.clone(Tensor([1, 41264, 192, 288],"float32"), )
paddle.clone(Tensor([1, 53053, 168, 256],"float32"), )
paddle.clone(Tensor([1, 55189, 152, 272],"float32"), )
paddle.clone(Tensor([1, 557057, 64, 64],"float32"), )
paddle.clone(Tensor([1, 570425345, 4],"float32"), )
paddle.clone(Tensor([1, 625, 3650723],"float32"), )
paddle.clone(Tensor([1, 660215, 48, 72],"float32"), )
paddle.clone(Tensor([1, 848848, 42, 64],"float32"), )
paddle.clone(Tensor([10, 228170138],"float32"), )
paddle.clone(Tensor([10316, 256, 24, 36],"float32"), )
paddle.clone(Tensor([106106, 21504, 1],"float32"), )
paddle.clone(Tensor([1080352, 12, 11, 16],"float32"), )
paddle.clone(Tensor([11225, 2541, 80],"float32"), )
paddle.clone(Tensor([1139711, 2002],"float32"), )
paddle.clone(Tensor([1140850690, 2],"float32"), )
paddle.clone(Tensor([11409, 2500, 80],"float32"), )
paddle.clone(Tensor([11606, 192, 32, 32],"float32"), )
paddle.clone(Tensor([1166, 21504, 91],"float32"), )
paddle.clone(Tensor([1276120, 1788],"float32"), )
paddle.clone(Tensor([1290, 2048, 24, 36],"float32"), )
paddle.clone(Tensor([129024, 17685],"float32"), )
paddle.clone(Tensor([13206, 2541, 68],"float32"), )
paddle.clone(Tensor([13264, 256, 21, 32],"float32"), )
paddle.clone(Tensor([13275, 171888, 1],"float32"), )
paddle.clone(Tensor([1431655766, 3],"float16"), )
paddle.clone(Tensor([16, 142606337],"float32"), )
paddle.clone(Tensor([16, 268435457],"float16"), )
paddle.clone(Tensor([162, 256, 192, 288],"float32"), )
paddle.clone(Tensor([16384, 139265],"float32"), )
paddle.clone(Tensor([17685, 12, 84, 128],"float32"), )
paddle.clone(Tensor([2, 1140850690],"float32"), )
paddle.clone(Tensor([2016, 1131797],"float32"), )
paddle.clone(Tensor([208, 256, 168, 256],"float32"), )
paddle.clone(Tensor([224489, 2541, 4],"float32"), )
paddle.clone(Tensor([2281701379],"float32"), )
paddle.clone(Tensor([2281701379],"int32"), )
paddle.clone(Tensor([228171, 10000, 1],"float32"), )
paddle.clone(Tensor([228171, 2500, 4],"float32"), )
paddle.clone(Tensor([23580, 144, 21, 32],"float32"), )
paddle.clone(Tensor([24, 95070891],"float32"), )
paddle.clone(Tensor([2541, 897955],"float32"), )
paddle.clone(Tensor([2579, 256, 48, 72],"float32"), )
paddle.clone(Tensor([26527, 21504, 4],"float32"), )
paddle.clone(Tensor([282950, 12, 21, 32],"float32"), )
paddle.clone(Tensor([285212673, 8],"float32"), )
paddle.clone(Tensor([285213, 100, 80],"float32"), )
paddle.clone(Tensor([2853, 10000, 80],"float32"), )
paddle.clone(Tensor([2902, 192, 64, 64],"float32"), )
paddle.clone(Tensor([2948, 18, 168, 256],"float32"), )
paddle.clone(Tensor([2970966, 12, 1, 64],"float32"), )
paddle.clone(Tensor([3, 1431655766],"float16"), )
paddle.clone(Tensor([32256, 70738],"float32"), )
paddle.clone(Tensor([3316, 256, 42, 64],"float32"), )
paddle.clone(Tensor([3319, 171888, 4],"float32"), )
paddle.clone(Tensor([35651585, 64],"float32"), )
paddle.clone(Tensor([3565159, 640],"float32"), )
paddle.clone(Tensor([3650723, 625, 1],"float32"), )
paddle.clone(Tensor([37138, 15, 64, 64],"float32"), )
paddle.clone(Tensor([4294967297],"float16"), )
paddle.clone(Tensor([4312, 529152],"float32"), )
paddle.clone(Tensor([432, 128, 152, 272],"float32"), )
paddle.clone(Tensor([4422, 12, 168, 256],"float32"), )
paddle.clone(Tensor([456340276, 5],"float32"), )
paddle.clone(Tensor([4563403, 500],"int32"), )
paddle.clone(Tensor([45635, 625, 80],"float32"), )
paddle.clone(Tensor([512, 4456449],"float32"), )
paddle.clone(Tensor([53053, 21504, 2],"float32"), )
paddle.clone(Tensor([570425345, 4],"float32"), )
paddle.clone(Tensor([5704254, 100, 4],"float32"), )
paddle.clone(Tensor([57043, 10000, 4],"float32"), )
paddle.clone(Tensor([6139, 192, 44, 44],"float32"), )
paddle.clone(Tensor([645, 1024, 48, 72],"float32"), )
paddle.clone(Tensor([67108865, 64],"float16"), )
paddle.clone(Tensor([70738, 12, 42, 64],"float32"), )
paddle.clone(Tensor([7074, 21504, 15],"float32"), )
paddle.clone(Tensor([82527, 3, 96, 96, 1],"float32"), )
paddle.clone(Tensor([897955, 2541],"bool"), )
paddle.clone(Tensor([912681, 2500, 1],"float32"), )
paddle.clone(Tensor([912681, 625, 4],"float32"), )
paddle.column_stack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 1, 4294967297],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),Tensor([1, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 4294967297],"float16"),], )
paddle.column_stack(list[Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),Tensor([1, 4294967297],"float16"),], )
paddle.column_stack(list[Tensor([1, 1],"float16"),Tensor([1, 4294967297],"float16"),Tensor([1, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297],"float16"),Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297],"float16"),], )
paddle.column_stack(list[Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.column_stack(list[Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.column_stack(list[Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),], )
paddle.column_stack(list[Tensor([2147483649, 2],"float16"),], )
paddle.column_stack(list[Tensor([2],"float16"),Tensor([2, 2147483649],"float16"),], )
paddle.column_stack(list[Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),], )
paddle.column_stack(list[Tensor([3, 1431655766],"float16"),Tensor([3, 2],"float16"),Tensor([3, 2],"float16"),], )
paddle.column_stack(list[Tensor([3, 1431655766],"float16"),], )
paddle.column_stack(list[Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),], )
paddle.column_stack(list[Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], )
paddle.column_stack(list[Tensor([3, 143165577, 2, 5],"float16"),], )
paddle.column_stack(list[Tensor([3, 2],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 2],"float16"),], )
paddle.column_stack(list[Tensor([3, 2],"float16"),Tensor([3, 2],"float16"),Tensor([3, 1431655766],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 178956971],"float16"),Tensor([3, 4, 2, 178956971],"float16"),Tensor([3, 4, 2, 178956971],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 178956971],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),Tensor([3, 715827883, 2],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 2],"float16"),Tensor([3, 715827883, 2],"float16"),Tensor([3, 4, 2],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 357913942],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 71582789, 5],"float16"),], )
paddle.column_stack(list[Tensor([3, 715827883, 2],"float16"),Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),], )
paddle.column_stack(list[Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),], )
paddle.column_stack(list[Tensor([3, 715827883, 2],"float16"),], )
paddle.column_stack(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([4294967297, 1, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([4294967297, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),], )
paddle.column_stack(list[Tensor([4294967297],"float16"),], )
paddle.column_stack(list[Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),], )
paddle.column_stack(list[Tensor([536870913, 4, 2],"float16"),], )
paddle.combinations(Tensor([2281701379],"int32"), 1, True, )
paddle.combinations(Tensor([2281701379],"int64"), 0, True, )
paddle.complex(real=Tensor([1],"float32"), imag=Tensor([2281701379],"float32"), )
paddle.complex(real=Tensor([2281701379],"float32"), imag=Tensor([1],"float32"), )
paddle.concat(list[Tensor([1, 1, 1, 16],"float32"),Tensor([1, 1, 1, 2281701379],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 2281701379],"float32"),Tensor([1, 1, 1, 16],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 1, 2281701379],"float32"),Tensor([1, 1, 1, 2281701379],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 4294967297],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 4294967297],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 4294967297],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 100, 136],"float32"),Tensor([1, 167773, 100, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 100, 176, 176],"float32"),Tensor([737, 1, 100, 176, 176],"float32"),], )
paddle.concat(list[Tensor([1, 1, 100, 22817014],"float32"),Tensor([1, 1, 100, 22817014],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 100, 2],"float32"),Tensor([11408507, 1, 100, 2],"float32"),], )
paddle.concat(list[Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 221848],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 221848],"float32"),Tensor([1, 1, 10285, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 221848],"float32"),Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 10285, 221848],"float32"),Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 1140850690, 2],"float32"),], )
paddle.concat(list[Tensor([1, 1, 12544, 181896],"float32"),], )
paddle.concat(list[Tensor([1, 1, 142606337, 16],"float32"),Tensor([1, 1, 142606337, 16],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 16777217, 136],"float32"),Tensor([1, 1, 16777217, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 1, 4294967297],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1],"float16"),Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),Tensor([1, 1, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1],"float32"),Tensor([1, 1, 2281701379],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 1200],"float32"),Tensor([1, 1, 300],"float32"),Tensor([1, 1, 80],"float32"),Tensor([1, 1, 20],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 2281701379],"float32"),], -1, )
paddle.concat(list[Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 2281701379],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 2281701379],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 4],"float32"),], -1, )
paddle.concat(list[Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 676],"float32"),Tensor([1, 1, 169],"float32"),Tensor([1, 1, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 6912],"float32"),Tensor([1, 1, 1728],"float32"),Tensor([1, 1, 432],"float32"),Tensor([1, 1, 108],"float32"),Tensor([1, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 2704],"float32"),Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 169],"float32"),Tensor([1, 1, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 2704],"float32"),Tensor([1, 1, 676],"float32"),Tensor([1, 1, 169],"float32"),Tensor([1, 1, 2281701379],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 2704],"float32"),Tensor([1, 1, 676],"float32"),Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 27648],"float32"),Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 1728],"float32"),Tensor([1, 1, 432],"float32"),Tensor([1, 1, 108],"float32"),Tensor([1, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 27648],"float32"),Tensor([1, 1, 6912],"float32"),Tensor([1, 1, 1728],"float32"),Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 108],"float32"),Tensor([1, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 27648],"float32"),Tensor([1, 1, 6912],"float32"),Tensor([1, 1, 1728],"float32"),Tensor([1, 1, 432],"float32"),Tensor([1, 1, 108],"float32"),Tensor([1, 1, 2281701379],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 27648],"float32"),Tensor([1, 1, 6912],"float32"),Tensor([1, 1, 1728],"float32"),Tensor([1, 1, 432],"float32"),Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 27648],"float32"),Tensor([1, 1, 6912],"float32"),Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 432],"float32"),Tensor([1, 1, 108],"float32"),Tensor([1, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 2],"float32"),Tensor([1, 1140850690, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 1, 32],"float32"),Tensor([1, 71303169, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 3],"float32"),Tensor([1, 1, 2281701379],"float32"),], -1, )
paddle.concat(list[Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 4294967297, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 4294967297, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 4294967297, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 4294967297],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 4294967297],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 4294967297],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 4800],"float32"),Tensor([1, 1, 1200],"float32"),Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 80],"float32"),Tensor([1, 1, 20],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 4800],"float32"),Tensor([1, 1, 1200],"float32"),Tensor([1, 1, 300],"float32"),Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 20],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 4800],"float32"),Tensor([1, 1, 1200],"float32"),Tensor([1, 1, 300],"float32"),Tensor([1, 1, 80],"float32"),Tensor([1, 1, 2281701379],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 4800],"float32"),Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 300],"float32"),Tensor([1, 1, 80],"float32"),Tensor([1, 1, 20],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 512, 512],"float16"),Tensor([1, 1, 512, 512],"float16"),Tensor([1, 16385, 512, 512],"float16"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 512, 512],"float16"),Tensor([1, 16385, 512, 512],"float16"),Tensor([1, 1, 512, 512],"float16"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 512, 8388609],"float16"),Tensor([1, 1, 512, 8388609],"float16"),Tensor([1, 1, 512, 8388609],"float16"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 8388609, 512],"float16"),Tensor([1, 1, 8388609, 512],"float16"),Tensor([1, 1, 8388609, 512],"float16"),], axis=1, )
paddle.concat(list[Tensor([1, 10, 228170138],"float32"),Tensor([1, 10, 228170138],"float32"),], )
paddle.concat(list[Tensor([1, 10, 5],"float32"),Tensor([45634028, 10, 5],"float32"),], )
paddle.concat(list[Tensor([1, 100, 256],"float32"),Tensor([1, 8912897, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 1024, 10],"float32"),Tensor([1, 228170138, 10],"float32"),Tensor([1, 16384, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 10],"float32"),Tensor([1, 4096, 10],"float32"),Tensor([1, 228170138, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 18, 18],"float32"),Tensor([1, 7042289, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 7042289, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 7042289, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 7042289, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 7042289, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 7042289, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 1],"float32"),Tensor([1, 2281701379, 1],"float32"),Tensor([1, 6480, 1],"float32"),Tensor([1, 1620, 1],"float32"),Tensor([1, 420, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 1],"float32"),Tensor([1, 25920, 1],"float32"),Tensor([1, 2281701379, 1],"float32"),Tensor([1, 1620, 1],"float32"),Tensor([1, 420, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 1],"float32"),Tensor([1, 25920, 1],"float32"),Tensor([1, 6480, 1],"float32"),Tensor([1, 1620, 1],"float32"),Tensor([1, 2281701379, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 1],"float32"),Tensor([1, 25920, 1],"float32"),Tensor([1, 6480, 1],"float32"),Tensor([1, 2281701379, 1],"float32"),Tensor([1, 420, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 22008],"float32"),Tensor([1, 25920, 22008],"float32"),Tensor([1, 6480, 22008],"float32"),Tensor([1, 1620, 22008],"float32"),Tensor([1, 420, 22008],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 107, 128],"float16"),Tensor([1, 107, 40139882],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 107, 40139882],"float16"),Tensor([1, 107, 107],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 107, 40139882],"float16"),Tensor([1, 107, 40139882],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 11, 207427399],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 2074274],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 2074274],"float32"),Tensor([1, 1100, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 2074274],"float32"),Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 1100, 2074274],"float32"),Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 1140850690, 2],"float32"),Tensor([1, 1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 1140850690, 2],"float32"),Tensor([1, 1140850690, 2],"float32"),Tensor([1, 1140850690, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1140850690, 2],"float32"),Tensor([1, 1140850690, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 1164134, 140, 1, 2, 7],"float32"),Tensor([1, 1164134, 140, 1, 2, 7],"float32"),Tensor([1, 1164134, 140, 1, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 1164134, 140, 2, 7],"float32"),Tensor([1, 1164134, 140, 2, 7],"float32"),Tensor([1, 1164134, 140, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 128, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),Tensor([1, 34817, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 128, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),Tensor([1, 34817, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 128, 256, 256],"float32"),Tensor([1, 34817, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 128, 278529, 64],"float32"),Tensor([1, 128, 278529, 64],"float32"),], 1, )
paddle.concat(list[Tensor([1, 128, 32, 32],"float32"),Tensor([1, 2228225, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 2228225, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 2228225, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 2228225, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 32, 557057],"float32"),Tensor([1, 32, 32, 557057],"float32"),Tensor([1, 32, 32, 557057],"float32"),Tensor([1, 32, 32, 557057],"float32"),Tensor([1, 32, 32, 557057],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 557057, 32],"float32"),Tensor([1, 32, 557057, 32],"float32"),Tensor([1, 32, 557057, 32],"float32"),Tensor([1, 32, 557057, 32],"float32"),Tensor([1, 32, 557057, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 64, 278529],"float32"),Tensor([1, 128, 64, 278529],"float32"),], 1, )
paddle.concat(list[Tensor([1, 128, 64, 64],"float32"),Tensor([1, 557057, 64, 64],"float32"),], 1, )
paddle.concat(list[Tensor([1, 12964213, 176],"float32"),], )
paddle.concat(list[Tensor([1, 142606337, 1, 16],"float32"),Tensor([1, 142606337, 1, 16],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 15, 15, 10140896],"float32"),Tensor([1, 15, 15, 10140896],"float32"),], -1, )
paddle.concat(list[Tensor([1, 15, 15, 10140896],"float32"),Tensor([1, 15, 15, 2],"float32"),], -1, )
paddle.concat(list[Tensor([1, 15, 15, 2],"float32"),Tensor([1, 15, 15, 10140896],"float32"),], -1, )
paddle.concat(list[Tensor([1, 15, 76056713, 2],"float32"),Tensor([1, 15, 76056713, 2],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 1369569],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 1369569],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 1369569],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 1369569],"float16"),], -1, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([2228225, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([2228225, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([2228225, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([2228225, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([2228225, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([2228225, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([2228225, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([2228225, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([2228225, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([2228225, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([2228225, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([2228225, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16385, 512, 512],"float16"),Tensor([1, 1, 512, 512],"float16"),Tensor([1, 1, 512, 512],"float16"),], axis=1, )
paddle.concat(list[Tensor([1, 16385, 512, 512],"float16"),Tensor([1, 16385, 512, 512],"float16"),Tensor([1, 16385, 512, 512],"float16"),], axis=1, )
paddle.concat(list[Tensor([1, 167773, 100, 136],"float32"),Tensor([1, 1, 100, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 167773, 100, 136],"float32"),Tensor([1, 167773, 100, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 176, 12964213],"float32"),], )
paddle.concat(list[Tensor([1, 188, 140, 1, 12385, 7],"float32"),Tensor([1, 188, 140, 1, 12385, 7],"float32"),Tensor([1, 188, 140, 1, 12385, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 1, 2, 43346],"float32"),Tensor([1, 188, 140, 1, 2, 43346],"float32"),Tensor([1, 188, 140, 1, 2, 43346],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 1, 2, 7],"float32"),Tensor([1, 188, 140, 1, 2, 7],"float32"),Tensor([1, 188, 140, 6193, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 1, 2, 7],"float32"),Tensor([1, 188, 140, 6193, 2, 7],"float32"),Tensor([1, 188, 140, 1, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 12385, 7],"float32"),Tensor([1, 188, 140, 12385, 7],"float32"),Tensor([1, 188, 140, 12385, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 188, 140, 12385, 7],"float32"),Tensor([1, 188, 140, 2, 7],"float32"),Tensor([1, 188, 140, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 188, 140, 2, 43346],"float32"),Tensor([1, 188, 140, 2, 43346],"float32"),Tensor([1, 188, 140, 2, 43346],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 188, 140, 2, 7],"float32"),Tensor([1, 188, 140, 12385, 7],"float32"),Tensor([1, 188, 140, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 188, 140, 2, 7],"float32"),Tensor([1, 188, 140, 2, 7],"float32"),Tensor([1, 188, 140, 12385, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 188, 140, 2],"float32"),Tensor([1, 188, 140, 2],"float32"),Tensor([1, 188, 140, 86691],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 140, 2],"float32"),Tensor([1, 188, 140, 86691],"float32"),Tensor([1, 188, 140, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 140, 6193, 2, 7],"float32"),Tensor([1, 188, 140, 1, 2, 7],"float32"),Tensor([1, 188, 140, 1, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 6193, 2, 7],"float32"),Tensor([1, 188, 140, 6193, 2, 7],"float32"),Tensor([1, 188, 140, 6193, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 86691],"float32"),Tensor([1, 188, 140, 2],"float32"),Tensor([1, 188, 140, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 140, 86691],"float32"),Tensor([1, 188, 140, 86691],"float32"),Tensor([1, 188, 140, 86691],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 6068355, 2],"float32"),Tensor([1, 188, 6068355, 2],"float32"),Tensor([1, 188, 6068355, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 866908, 1, 2, 7],"float32"),Tensor([1, 188, 866908, 1, 2, 7],"float32"),Tensor([1, 188, 866908, 1, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 866908, 2, 7],"float32"),Tensor([1, 188, 866908, 2, 7],"float32"),Tensor([1, 188, 866908, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 192, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),Tensor([1, 5704254, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 192, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),Tensor([1, 5704254, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 192, 20, 20],"float32"),Tensor([1, 5704254, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),Tensor([1, 4294967297],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),Tensor([4294967297, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1],"float16"),Tensor([1, 4294967297],"float16"),Tensor([1, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([1, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),], -1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),], -1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),], -1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),], 1, )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2281701379, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2281701379, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([2281701379, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2281701379, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2281701379, 1],"int32"),], )
paddle.concat(list[Tensor([1, 2, 1],"float16"),Tensor([1, 2, 2147483649],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 2, 2147483649],"float16"),Tensor([1, 2, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 2, 2147483649],"float16"),Tensor([1, 2, 2147483649],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 7605672],"float32"),], -1, )
paddle.concat(list[Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 7605672],"float32"),Tensor([1, 20, 15, 384],"float32"),], -1, )
paddle.concat(list[Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 7605672],"float32"),Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 384],"float32"),], -1, )
paddle.concat(list[Tensor([1, 20, 15, 7605672],"float32"),Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 384],"float32"),], -1, )
paddle.concat(list[Tensor([1, 20372334, 14, 8],"float32"),Tensor([1, 20372334, 14, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 207427399, 11],"float32"),Tensor([1, 676, 11],"float32"),Tensor([1, 169, 11],"float32"),Tensor([1, 49, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 21504, 106106],"float32"),Tensor([1, 21504, 106106],"float32"),Tensor([1, 21504, 106106],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 21504, 106106],"float32"),Tensor([1, 21504, 2],"float32"),Tensor([1, 21504, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 21504, 2],"float32"),Tensor([1, 21504, 106106],"float32"),Tensor([1, 21504, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 21504, 2],"float32"),Tensor([1, 21504, 2],"float32"),Tensor([1, 21504, 106106],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 2228225, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2281701379, 1],"float32"),Tensor([1, 2281701379, 1],"float32"),Tensor([1, 2281701379, 1],"float32"),], -1, )
paddle.concat(list[Tensor([1, 2281701379, 1],"float32"),Tensor([1, 2281701379, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 2281701379, 1],"float32"),Tensor([1, 25920, 1],"float32"),Tensor([1, 6480, 1],"float32"),Tensor([1, 1620, 1],"float32"),Tensor([1, 420, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2281701379, 1],"float32"),Tensor([1, 62208, 1],"float32"),Tensor([1, 15552, 1],"float32"),Tensor([1, 3888, 1],"float32"),Tensor([1, 972, 1],"float32"),Tensor([1, 270, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2281701379, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2281701379],"float32"),Tensor([1, 1200],"float32"),Tensor([1, 300],"float32"),Tensor([1, 80],"float32"),], 1, )
paddle.concat(list[Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], -1, )
paddle.concat(list[Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),], -1, )
paddle.concat(list[Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),], 1, )
paddle.concat(list[Tensor([1, 2281701379],"float32"),Tensor([1, 2281701379],"float32"),Tensor([1, 2281701379],"float32"),], -1, )
paddle.concat(list[Tensor([1, 2281701379],"float32"),Tensor([1, 2281701379],"float32"),], -1, )
paddle.concat(list[Tensor([1, 2281701379],"float32"),Tensor([1, 2281701379],"float32"),], 1, )
paddle.concat(list[Tensor([1, 2281701379],"float32"),Tensor([1, 2281701379],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 2281701379],"float32"),Tensor([1, 6912],"float32"),Tensor([1, 1728],"float32"),Tensor([1, 432],"float32"),Tensor([1, 108],"float32"),], 1, )
paddle.concat(list[Tensor([1, 2281701379],"int32"),Tensor([1, 2281701379],"int32"),], )
paddle.concat(list[Tensor([1, 2281701379],"int32"),], axis=0, )
paddle.concat(list[Tensor([1, 228170138, 10],"float32"),Tensor([1, 228170138, 10],"float32"),Tensor([1, 228170138, 10],"float32"),], 0, )
paddle.concat(list[Tensor([1, 228170138, 10],"float32"),Tensor([1, 228170138, 10],"float32"),Tensor([1, 228170138, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 228170138, 10],"float32"),Tensor([1, 4096, 10],"float32"),Tensor([1, 16384, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248, 216, 2, 21298],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 248, 216, 6085, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 248, 657173, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 248832, 1],"float32"),Tensor([1, 2281701379, 1],"float32"),Tensor([1, 15552, 1],"float32"),Tensor([1, 3888, 1],"float32"),Tensor([1, 972, 1],"float32"),Tensor([1, 270, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248832, 1],"float32"),Tensor([1, 62208, 1],"float32"),Tensor([1, 15552, 1],"float32"),Tensor([1, 2281701379, 1],"float32"),Tensor([1, 972, 1],"float32"),Tensor([1, 270, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248832, 1],"float32"),Tensor([1, 62208, 1],"float32"),Tensor([1, 15552, 1],"float32"),Tensor([1, 3888, 1],"float32"),Tensor([1, 2281701379, 1],"float32"),Tensor([1, 270, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248832, 1],"float32"),Tensor([1, 62208, 1],"float32"),Tensor([1, 15552, 1],"float32"),Tensor([1, 3888, 1],"float32"),Tensor([1, 972, 1],"float32"),Tensor([1, 2281701379, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248832, 1],"float32"),Tensor([1, 62208, 1],"float32"),Tensor([1, 2281701379, 1],"float32"),Tensor([1, 3888, 1],"float32"),Tensor([1, 972, 1],"float32"),Tensor([1, 270, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248832, 9170],"float32"),Tensor([1, 62208, 9170],"float32"),Tensor([1, 15552, 9170],"float32"),Tensor([1, 3888, 9170],"float32"),Tensor([1, 972, 9170],"float32"),Tensor([1, 270, 9170],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2704, 11],"float32"),Tensor([1, 207427399, 11],"float32"),Tensor([1, 169, 11],"float32"),Tensor([1, 49, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2704, 11],"float32"),Tensor([1, 676, 11],"float32"),Tensor([1, 169, 11],"float32"),Tensor([1, 207427399, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2704, 11],"float32"),Tensor([1, 676, 11],"float32"),Tensor([1, 207427399, 11],"float32"),Tensor([1, 49, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2704, 843825],"float32"),Tensor([1, 676, 843825],"float32"),Tensor([1, 169, 843825],"float32"),Tensor([1, 49, 843825],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 27648, 256],"float32"),Tensor([1, 6912, 256],"float32"),Tensor([1, 1728, 256],"float32"),Tensor([1, 432, 256],"float32"),Tensor([1, 8912897, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648, 256],"float32"),Tensor([1, 6912, 256],"float32"),Tensor([1, 1728, 256],"float32"),Tensor([1, 8912897, 256],"float32"),Tensor([1, 108, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648, 256],"float32"),Tensor([1, 6912, 256],"float32"),Tensor([1, 8912897, 256],"float32"),Tensor([1, 432, 256],"float32"),Tensor([1, 108, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648, 256],"float32"),Tensor([1, 8912897, 256],"float32"),Tensor([1, 1728, 256],"float32"),Tensor([1, 432, 256],"float32"),Tensor([1, 108, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648, 82527],"float32"),Tensor([1, 6912, 82527],"float32"),Tensor([1, 1728, 82527],"float32"),Tensor([1, 432, 82527],"float32"),Tensor([1, 108, 82527],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648],"float32"),Tensor([1, 2281701379],"float32"),Tensor([1, 1728],"float32"),Tensor([1, 432],"float32"),Tensor([1, 108],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648],"float32"),Tensor([1, 6912],"float32"),Tensor([1, 1728],"float32"),Tensor([1, 2281701379],"float32"),Tensor([1, 108],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648],"float32"),Tensor([1, 6912],"float32"),Tensor([1, 1728],"float32"),Tensor([1, 432],"float32"),Tensor([1, 2281701379],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648],"float32"),Tensor([1, 6912],"float32"),Tensor([1, 2281701379],"float32"),Tensor([1, 432],"float32"),Tensor([1, 108],"float32"),], 1, )
paddle.concat(list[Tensor([1, 285212673, 1, 8],"float32"),Tensor([1, 285212673, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 2],"float16"),Tensor([2147483649, 2],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 2],"float32"),Tensor([1140850690, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 3, 224, 224],"float32"),Tensor([15158, 3, 224, 224],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 224, 3395389],"float32"),Tensor([1, 3, 224, 3395389],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 256, 2970966],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 2970966, 256],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 3395389, 224],"float32"),Tensor([1, 3, 3395389, 224],"float32"),], 0, )
paddle.concat(list[Tensor([1, 310, 1],"float32"),Tensor([1, 310, 1],"float32"),Tensor([1, 310, 7360328],"float32"),], -1, )
paddle.concat(list[Tensor([1, 310, 1],"float32"),Tensor([1, 310, 7360328],"float32"),Tensor([1, 310, 1],"float32"),], -1, )
paddle.concat(list[Tensor([1, 310, 7360328],"float32"),Tensor([1, 310, 1],"float32"),Tensor([1, 310, 1],"float32"),], -1, )
paddle.concat(list[Tensor([1, 310, 7360328],"float32"),Tensor([1, 310, 7360328],"float32"),Tensor([1, 310, 7360328],"float32"),], -1, )
paddle.concat(list[Tensor([1, 33554433, 128],"float16"),Tensor([1, 33554433, 107],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 34817, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 34817, 256, 256],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3600, 4],"float32"),Tensor([1, 570425345, 4],"float32"),Tensor([1, 225, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 3600, 4],"float32"),Tensor([1, 900, 4],"float32"),Tensor([1, 570425345, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 3600, 633806],"float32"),Tensor([1, 900, 633806],"float32"),Tensor([1, 225, 633806],"float32"),], 1, )
paddle.concat(list[Tensor([1, 36000, 63381],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 4, 1, 570425345],"float32"),Tensor([1, 4, 1, 570425345],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 4, 1, 8],"float32"),Tensor([1, 4, 71303169, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 4, 10],"float32"),Tensor([1, 4, 10],"float32"),Tensor([57042535, 4, 10],"float32"),], 0, )
paddle.concat(list[Tensor([1, 4, 10],"float32"),Tensor([57042535, 4, 10],"float32"),Tensor([1, 4, 10],"float32"),], 0, )
paddle.concat(list[Tensor([1, 4, 570425345],"float32"),Tensor([1, 4, 570425345],"float32"),Tensor([1, 4, 570425345],"float32"),], 0, )
paddle.concat(list[Tensor([1, 4, 71303169, 8],"float32"),Tensor([1, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 4, 71303169, 8],"float32"),Tensor([1, 4, 71303169, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 4294967297, 1, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 4294967297, 1, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 4294967297, 1, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 4294967297, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 4294967297, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 4294967297, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 4294967297],"float16"),Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 4294967297],"float16"),], )
paddle.concat(list[Tensor([1, 4294967297],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 4294967297],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 45474, 224, 224],"float32"),Tensor([1, 45474, 224, 224],"float32"),], 0, )
paddle.concat(list[Tensor([1, 456340276, 5],"float32"),Tensor([1, 456340276, 5],"float32"),], )
paddle.concat(list[Tensor([1, 475355, 4800],"float32"),Tensor([1, 475355, 1200],"float32"),Tensor([1, 475355, 300],"float32"),Tensor([1, 475355, 80],"float32"),Tensor([1, 475355, 20],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 4800, 256],"float32"),Tensor([1, 1200, 256],"float32"),Tensor([1, 300, 256],"float32"),Tensor([1, 8912897, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800, 256],"float32"),Tensor([1, 1200, 256],"float32"),Tensor([1, 8912897, 256],"float32"),Tensor([1, 80, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800, 256],"float32"),Tensor([1, 8912897, 256],"float32"),Tensor([1, 300, 256],"float32"),Tensor([1, 80, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800, 475355],"float32"),Tensor([1, 1200, 475355],"float32"),Tensor([1, 300, 475355],"float32"),Tensor([1, 80, 475355],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800],"float32"),Tensor([1, 1200],"float32"),Tensor([1, 2281701379],"float32"),Tensor([1, 80],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800],"float32"),Tensor([1, 1200],"float32"),Tensor([1, 300],"float32"),Tensor([1, 2281701379],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800],"float32"),Tensor([1, 2281701379],"float32"),Tensor([1, 300],"float32"),Tensor([1, 80],"float32"),], 1, )
paddle.concat(list[Tensor([1, 52, 14, 3134206],"float32"),Tensor([1, 52, 14, 3134206],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 52, 14, 8],"float32"),Tensor([391776, 52, 14, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 52, 5484860, 8],"float32"),Tensor([1, 52, 5484860, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 557057, 64, 64],"float32"),Tensor([1, 128, 64, 64],"float32"),], 1, )
paddle.concat(list[Tensor([1, 557057, 64, 64],"float32"),Tensor([1, 557057, 64, 64],"float32"),], 1, )
paddle.concat(list[Tensor([1, 570425345, 4],"float32"),Tensor([1, 570425345, 4],"float32"),Tensor([1, 570425345, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 570425345, 4],"float32"),Tensor([1, 900, 4],"float32"),Tensor([1, 225, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 5704254, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([5571, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([5571, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([5571, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([5571, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([5571, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([5571, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 640, 640],"float32"),Tensor([5571, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 7042289, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 71303169, 32],"float32"),Tensor([1, 225, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 71303169, 32],"float32"),Tensor([1, 71303169, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 754531, 216, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 760567127, 3],"float32"),Tensor([1, 760567127, 4],"float32"),], -1, )
paddle.concat(list[Tensor([1, 76056713, 15, 2],"float32"),Tensor([1, 76056713, 15, 2],"float32"),], -1, )
paddle.concat(list[Tensor([1, 8148934, 140, 2],"float32"),Tensor([1, 8148934, 140, 2],"float32"),Tensor([1, 8148934, 140, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 82527, 27648],"float32"),Tensor([1, 82527, 6912],"float32"),Tensor([1, 82527, 1728],"float32"),Tensor([1, 82527, 432],"float32"),Tensor([1, 82527, 108],"float32"),Tensor([1, 82527, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 843825, 2704],"float32"),Tensor([1, 843825, 676],"float32"),Tensor([1, 843825, 169],"float32"),Tensor([1, 843825, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 8912897, 256],"float32"),Tensor([1, 1200, 256],"float32"),Tensor([1, 300, 256],"float32"),Tensor([1, 80, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 8912897, 256],"float32"),Tensor([1, 300, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 8912897, 256],"float32"),Tensor([1, 6912, 256],"float32"),Tensor([1, 1728, 256],"float32"),Tensor([1, 432, 256],"float32"),Tensor([1, 108, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 8912897, 256],"float32"),Tensor([1, 8912897, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 8912897, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 90948, 12544, 2],"float32"),], )
paddle.concat(list[Tensor([10, 228170138],"float32"),], axis=-1, )
paddle.concat(list[Tensor([100, 128],"float32"),Tensor([100, 128],"float32"),Tensor([100, 128],"float32"),Tensor([100, 22817014],"float32"),], axis=1, )
paddle.concat(list[Tensor([100, 128],"float32"),Tensor([100, 128],"float32"),Tensor([100, 22817014],"float32"),Tensor([100, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([100, 128],"float32"),Tensor([100, 22817014],"float32"),Tensor([100, 128],"float32"),Tensor([100, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([100, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1600, 1],"float32"),], )
paddle.concat(list[Tensor([100, 1],"float32"),Tensor([400, 1],"float32"),Tensor([2281701379, 1],"float32"),], )
paddle.concat(list[Tensor([100, 22817014, 1],"float32"),Tensor([100, 22817014, 1],"float32"),Tensor([100, 22817014, 1],"float32"),], 2, )
paddle.concat(list[Tensor([100, 22817014, 1],"float32"),Tensor([100, 22817014, 1],"float32"),], 2, )
paddle.concat(list[Tensor([100, 22817014],"float32"),Tensor([100, 128],"float32"),Tensor([100, 128],"float32"),Tensor([100, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([100, 376, 1],"float32"),Tensor([100, 376, 1],"float32"),Tensor([100, 376, 60684],"float32"),], 2, )
paddle.concat(list[Tensor([100, 376, 1],"float32"),Tensor([100, 376, 60684],"float32"),Tensor([100, 376, 1],"float32"),], 2, )
paddle.concat(list[Tensor([100, 376, 1],"float32"),Tensor([100, 376, 60684],"float32"),], 2, )
paddle.concat(list[Tensor([100, 376, 60684],"float32"),Tensor([100, 376, 1],"float32"),Tensor([100, 376, 1],"float32"),], 2, )
paddle.concat(list[Tensor([100, 376, 60684],"float32"),Tensor([100, 376, 1],"float32"),], 2, )
paddle.concat(list[Tensor([100, 376, 60684],"float32"),Tensor([100, 376, 60684],"float32"),Tensor([100, 376, 60684],"float32"),], 2, )
paddle.concat(list[Tensor([100, 376, 60684],"float32"),Tensor([100, 376, 60684],"float32"),], 2, )
paddle.concat(list[Tensor([1000, 1, 31, 73604],"float32"),], axis=1, )
paddle.concat(list[Tensor([1000, 1, 73604, 31],"float32"),], axis=1, )
paddle.concat(list[Tensor([1000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([469, 1],"float32"),Tensor([636, 1],"float32"),Tensor([221, 1],"float32"),], )
paddle.concat(list[Tensor([1000, 1],"float32"),Tensor([517, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([636, 1],"float32"),Tensor([221, 1],"float32"),], )
paddle.concat(list[Tensor([1000, 1],"float32"),Tensor([517, 1],"float32"),Tensor([469, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([221, 1],"float32"),], )
paddle.concat(list[Tensor([1000, 1],"float32"),Tensor([517, 1],"float32"),Tensor([469, 1],"float32"),Tensor([636, 1],"float32"),Tensor([2281701379, 1],"float32"),], )
paddle.concat(list[Tensor([1000, 2281702],"float32"),Tensor([517, 2281702],"float32"),Tensor([469, 2281702],"float32"),Tensor([636, 2281702],"float32"),Tensor([221, 2281702],"float32"),], )
paddle.concat(list[Tensor([1000, 2375, 31, 31],"float32"),], axis=1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),], axis=1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([10000, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10000, 228171],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([10000, 228171],"float32"),Tensor([10000, 228171],"float32"),Tensor([10000, 228171],"float32"),], axis=1, )
paddle.concat(list[Tensor([1000],"float16"),Tensor([4294967297],"float16"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([2281701379],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([120],"float32"),Tensor([128],"float32"),Tensor([2281701379],"float32"),], axis=0, )
paddle.concat(list[Tensor([100],"float32"),Tensor([120],"float32"),Tensor([2281701379],"float32"),Tensor([128],"float32"),], axis=0, )
paddle.concat(list[Tensor([100],"float32"),Tensor([132],"float32"),Tensor([140],"float32"),Tensor([2281701379],"float32"),Tensor([24],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([132],"float32"),Tensor([140],"float32"),Tensor([56],"float32"),Tensor([2281701379],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([132],"float32"),Tensor([2281701379],"float32"),Tensor([56],"float32"),Tensor([24],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], axis=0, )
paddle.concat(list[Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([140],"float32"),Tensor([56],"float32"),Tensor([24],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([150],"float32"),Tensor([3],"float32"),], axis=0, )
paddle.concat(list[Tensor([100],"float32"),Tensor([50],"float32"),Tensor([2281701379],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([150],"float32"),Tensor([3],"float32"),], axis=0, )
paddle.concat(list[Tensor([100],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([2281701379],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([150],"float32"),Tensor([3],"float32"),], axis=0, )
paddle.concat(list[Tensor([100],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2281701379],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([150],"float32"),Tensor([3],"float32"),], axis=0, )
paddle.concat(list[Tensor([100],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([2281701379],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([150],"float32"),Tensor([3],"float32"),], axis=0, )
paddle.concat(list[Tensor([100],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2281701379],"float32"),Tensor([50],"float32"),Tensor([150],"float32"),Tensor([3],"float32"),], axis=0, )
paddle.concat(list[Tensor([100],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([2281701379],"float32"),Tensor([150],"float32"),Tensor([3],"float32"),], axis=0, )
paddle.concat(list[Tensor([100],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([150],"float32"),Tensor([2281701379],"float32"),], axis=0, )
paddle.concat(list[Tensor([100],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2281701379],"float32"),Tensor([3],"float32"),], axis=0, )
paddle.concat(list[Tensor([101376, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([6336, 1],"float32"),Tensor([1584, 1],"float32"),Tensor([396, 1],"float32"),], axis=0, )
paddle.concat(list[Tensor([101376, 1],"float32"),Tensor([25344, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1584, 1],"float32"),Tensor([396, 1],"float32"),], axis=0, )
paddle.concat(list[Tensor([101376, 1],"float32"),Tensor([25344, 1],"float32"),Tensor([6336, 1],"float32"),Tensor([1584, 1],"float32"),Tensor([2281701379, 1],"float32"),], axis=0, )
paddle.concat(list[Tensor([101376, 1],"float32"),Tensor([25344, 1],"float32"),Tensor([6336, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([396, 1],"float32"),], axis=0, )
paddle.concat(list[Tensor([101376, 22508],"float32"),Tensor([25344, 22508],"float32"),Tensor([6336, 22508],"float32"),Tensor([1584, 22508],"float32"),Tensor([396, 22508],"float32"),], axis=0, )
paddle.concat(list[Tensor([10186167, 7, 32],"float32"),Tensor([10186167, 7, 32],"float32"),], axis=0, )
paddle.concat(list[Tensor([10186167, 7, 32],"float32"),Tensor([13, 7, 32],"float32"),], axis=0, )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 2228225],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([1024, 2228225],"float32"),Tensor([1024, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1024, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([1024, 2228225],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1024, 2228225],"float32"),Tensor([1024, 2228225],"float32"),Tensor([1024, 2228225],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([2281701379],"float32"),], )
paddle.concat(list[Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([2281701379],"float32"),Tensor([1024],"float32"),], )
paddle.concat(list[Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([2281701379],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),], )
paddle.concat(list[Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([2281701379],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),], )
paddle.concat(list[Tensor([1024],"float32"),Tensor([2281701379],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([10649, 214272],"float32"),Tensor([10649, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([10649, 214272],"float32"),Tensor([64, 214272],"float32"),Tensor([64, 214272],"float32"),Tensor([64, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([10649, 214272],"float32"),Tensor([64, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([11, 207427399],"float32"),], 0, )
paddle.concat(list[Tensor([1114113, 2, 16, 4, 16],"float32"),Tensor([1114113, 2, 16, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([114085069, 10, 1, 2],"float32"),Tensor([114085069, 10, 1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1140850690, 1, 2],"float32"),Tensor([1140850690, 1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1140850690, 2],"float32"),Tensor([1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1140850690, 2],"float32"),Tensor([1140850690, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1140850690, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([11408507, 1, 100, 2],"float32"),Tensor([11408507, 1, 100, 2],"float32"),], )
paddle.concat(list[Tensor([11408507, 1, 100, 2],"float32"),Tensor([6, 1, 100, 2],"float32"),], )
paddle.concat(list[Tensor([11606, 3, 256, 256],"float32"),], 0, )
paddle.concat(list[Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 633806],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 633806],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 633806],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 10, 10, 633806],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([128, 224, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 42800, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 42800, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 42800, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 42800, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 28, 28],"float16"),Tensor([128, 42800, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 42800, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([128],"float32"),Tensor([2281701379],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([320],"float32"),Tensor([5],"float32"),], axis=0, )
paddle.concat(list[Tensor([128],"float32"),Tensor([64],"float32"),Tensor([2281701379],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([320],"float32"),Tensor([5],"float32"),], axis=0, )
paddle.concat(list[Tensor([128],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([2281701379],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([320],"float32"),Tensor([5],"float32"),], axis=0, )
paddle.concat(list[Tensor([128],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([2281701379],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([320],"float32"),Tensor([5],"float32"),], axis=0, )
paddle.concat(list[Tensor([128],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([2281701379],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([320],"float32"),Tensor([5],"float32"),], axis=0, )
paddle.concat(list[Tensor([128],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([2281701379],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([320],"float32"),Tensor([5],"float32"),], axis=0, )
paddle.concat(list[Tensor([128],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([2281701379],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([320],"float32"),Tensor([5],"float32"),], axis=0, )
paddle.concat(list[Tensor([128],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([2281701379],"float32"),Tensor([64],"float32"),Tensor([320],"float32"),Tensor([5],"float32"),], axis=0, )
paddle.concat(list[Tensor([128],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([2281701379],"float32"),Tensor([320],"float32"),Tensor([5],"float32"),], axis=0, )
paddle.concat(list[Tensor([128],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([2281701379],"float32"),Tensor([5],"float32"),], axis=0, )
paddle.concat(list[Tensor([128],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([320],"float32"),Tensor([2281701379],"float32"),], axis=0, )
paddle.concat(list[Tensor([13, 171402, 16, 4, 16],"float32"),Tensor([13, 171402, 16, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 1, 4, 16],"float32"),Tensor([13, 2, 1371215, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 1371215, 4, 16],"float32"),Tensor([13, 2, 1371215, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 1371215, 4, 16],"float32"),Tensor([13, 2, 1371215, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 1371215, 4, 16],"float32"),Tensor([13, 2, 15, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 16, 342804, 16],"float32"),Tensor([13, 2, 16, 342804, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 16, 342804, 16],"float32"),Tensor([13, 2, 16, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 16, 4, 1371215],"float32"),Tensor([13, 2, 16, 4, 1371215],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 16, 4, 16],"float32"),Tensor([13, 2, 16, 342804, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 32],"float32"),Tensor([13, 2, 32],"float32"),Tensor([13, 2, 87757746],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 32],"float32"),Tensor([13, 2, 87757746],"float32"),Tensor([13, 2, 32],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 4, 16, 1371215],"float32"),Tensor([13, 2, 4, 16, 1371215],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 2, 4, 16, 1371215],"float32"),Tensor([13, 2, 4, 16, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 2, 4, 16, 1],"float32"),Tensor([13, 2, 4, 16, 1371215],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 2, 4, 21939437, 1],"float32"),Tensor([13, 2, 4, 21939437, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 2, 5484860, 16, 1],"float32"),Tensor([13, 2, 5484860, 16, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 2, 87757746],"float32"),Tensor([13, 2, 32],"float32"),Tensor([13, 2, 32],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 87757746],"float32"),Tensor([13, 2, 87757746],"float32"),Tensor([13, 2, 87757746],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2742430, 4, 16, 1],"float32"),Tensor([13, 2742430, 4, 16, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 4, 1, 1, 8],"float32"),Tensor([13, 4, 3, 1, 8],"float32"),Tensor([13, 4, 5484860, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 1, 8],"float32"),Tensor([13, 4, 5484860, 1, 8],"float32"),Tensor([13, 4, 1, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 5, 1, 8],"float32"),Tensor([13, 4, 1096972, 5, 1, 8],"float32"),Tensor([13, 4, 1, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 5, 1, 8],"float32"),Tensor([13, 4, 3, 5, 1, 8],"float32"),Tensor([13, 4, 1096972, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 8],"float32"),Tensor([13, 4, 5, 8],"float32"),Tensor([13, 4, 5484860, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 8],"float32"),Tensor([13, 4, 5484860, 8],"float32"),Tensor([13, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1096972, 5, 1, 8],"float32"),Tensor([13, 4, 1096972, 5, 1, 8],"float32"),Tensor([13, 4, 1096972, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1096972, 5, 1, 8],"float32"),Tensor([13, 4, 3, 5, 1, 8],"float32"),Tensor([13, 4, 1, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 3, 1, 1, 14626291],"float32"),Tensor([13, 4, 3, 1, 1, 14626291],"float32"),Tensor([13, 4, 3, 1, 1, 14626291],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1, 1, 8],"float32"),Tensor([13, 4, 3, 1, 1, 8],"float32"),Tensor([13, 4, 3, 1828287, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1, 1, 8],"float32"),Tensor([13, 4, 3, 1828287, 1, 8],"float32"),Tensor([13, 4, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1, 1828287, 8],"float32"),Tensor([13, 4, 3, 1, 1828287, 8],"float32"),Tensor([13, 4, 3, 1, 1828287, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1828287, 1, 8],"float32"),Tensor([13, 4, 3, 1, 1, 8],"float32"),Tensor([13, 4, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1828287, 1, 8],"float32"),Tensor([13, 4, 3, 1828287, 1, 8],"float32"),Tensor([13, 4, 3, 1828287, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 5, 1, 5],"float32"),Tensor([13, 4, 5, 1, 8775775],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 4, 5, 1, 8775775],"float32"),Tensor([13, 4, 5, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 4, 5, 1, 8775775],"float32"),Tensor([13, 4, 5, 1, 8775775],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 4, 5, 1755155, 5],"float32"),Tensor([13, 4, 5, 1755155, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 4, 5484860, 1, 1, 8],"float32"),Tensor([13, 4, 5484860, 1, 1, 8],"float32"),Tensor([13, 4, 5484860, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 5484860, 1, 8],"float32"),Tensor([13, 4, 3, 1, 8],"float32"),Tensor([13, 4, 1, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 5484860, 1, 8],"float32"),Tensor([13, 4, 5484860, 1, 8],"float32"),Tensor([13, 4, 5484860, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 5484860, 8],"float32"),Tensor([13, 4, 5, 8],"float32"),Tensor([13, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 5484860, 8],"float32"),Tensor([13, 4, 5484860, 8],"float32"),Tensor([13, 4, 5484860, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 8775775, 1, 5],"float32"),Tensor([13, 4, 8775775, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 5, 1, 1],"float32"),Tensor([13, 5, 1, 35103099],"float32"),Tensor([13, 5, 1, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 5, 1, 1],"float32"),Tensor([13, 5, 1, 3],"float32"),Tensor([13, 5, 1, 35103099],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 5, 1, 35103099],"float32"),Tensor([13, 5, 1, 35103099],"float32"),Tensor([13, 5, 1, 35103099],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 5, 1, 35103099],"float32"),Tensor([13, 5, 1, 3],"float32"),Tensor([13, 5, 1, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 5484860, 32],"float32"),Tensor([13, 5484860, 32],"float32"),Tensor([13, 5484860, 32],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 5484860, 32],"float32"),Tensor([13, 5484860, 32],"float32"),], axis=0, )
paddle.concat(list[Tensor([13, 7, 25073642],"float32"),Tensor([13, 7, 25073642],"float32"),], axis=0, )
paddle.concat(list[Tensor([13, 7, 32],"float32"),Tensor([10186167, 7, 32],"float32"),], axis=0, )
paddle.concat(list[Tensor([13, 7020620, 5, 1, 5],"float32"),Tensor([13, 7020620, 5, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 7313146, 3, 1, 1, 8],"float32"),Tensor([13, 7313146, 3, 1, 1, 8],"float32"),Tensor([13, 7313146, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([142606337, 1, 1, 16],"float32"),Tensor([142606337, 1, 1, 16],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1514, 1],"float32"),Tensor([1570, 1],"float32"),Tensor([1690, 1],"float32"),Tensor([1866, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([97, 1],"float32"),], )
paddle.concat(list[Tensor([1514, 1],"float32"),Tensor([1570, 1],"float32"),Tensor([1690, 1],"float32"),Tensor([1866, 1],"float32"),Tensor([406, 1],"float32"),Tensor([2281701379, 1],"float32"),], )
paddle.concat(list[Tensor([1514, 1],"float32"),Tensor([1570, 1],"float32"),Tensor([1690, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([406, 1],"float32"),Tensor([97, 1],"float32"),], )
paddle.concat(list[Tensor([1514, 1],"float32"),Tensor([1570, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1866, 1],"float32"),Tensor([406, 1],"float32"),Tensor([97, 1],"float32"),], )
paddle.concat(list[Tensor([1514, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([1690, 1],"float32"),Tensor([1866, 1],"float32"),Tensor([406, 1],"float32"),Tensor([97, 1],"float32"),], )
paddle.concat(list[Tensor([15158, 3, 224, 224],"float32"),Tensor([1, 3, 224, 224],"float32"),], 0, )
paddle.concat(list[Tensor([15158, 3, 224, 224],"float32"),Tensor([15158, 3, 224, 224],"float32"),], 0, )
paddle.concat(list[Tensor([158452, 3600, 4],"float32"),Tensor([158452, 900, 4],"float32"),Tensor([158452, 225, 4],"float32"),], 1, )
paddle.concat(list[Tensor([16, 1, 64, 64, 2],"float32"),Tensor([16, 17409, 64, 64, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 10, 1, 14260634],"float32"),Tensor([16, 10, 1, 14260634],"float32"),], axis=-2, )
paddle.concat(list[Tensor([16, 10, 1, 2],"float32"),Tensor([16, 10, 7130317, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([16, 10, 7130317, 2],"float32"),Tensor([16, 10, 1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([16, 10, 7130317, 2],"float32"),Tensor([16, 10, 7130317, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([16, 17409, 64, 64, 2],"float32"),Tensor([16, 10, 64, 64, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 17409, 64, 64, 2],"float32"),Tensor([16, 17409, 64, 64, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 71303169, 1, 2],"float32"),Tensor([16, 71303169, 1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([16385, 1, 512, 512],"float16"),Tensor([16385, 1, 512, 512],"float16"),Tensor([16385, 1, 512, 512],"float16"),], axis=1, )
paddle.concat(list[Tensor([167773, 1, 100, 136],"float32"),Tensor([167773, 1, 100, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),], -1, )
paddle.concat(list[Tensor([17409, 128, 32, 32],"float32"),Tensor([17409, 32, 32, 32],"float32"),Tensor([17409, 32, 32, 32],"float32"),Tensor([17409, 32, 32, 32],"float32"),Tensor([17409, 32, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([17825793, 2, 4, 16, 1],"float32"),Tensor([17825793, 2, 4, 16, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1857, 4800, 256],"float32"),Tensor([1857, 1200, 256],"float32"),Tensor([1857, 300, 256],"float32"),Tensor([1857, 80, 256],"float32"),], 1, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1],"float16"),Tensor([4294967297],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 142606337, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 142606337, 8],"float32"),Tensor([2, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 142606337, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 142606337, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 142606337, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 142606337, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1, 8],"float32"),Tensor([2, 142606337, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 2147483649],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 2147483649],"float16"),Tensor([2, 12],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 2147483649],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 2147483649],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 2147483649],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 2147483649],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 2147483649],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 2147483649],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 2147483649],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 2147483649],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float16"),Tensor([2, 2147483649],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 142606337, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1],"float16"),Tensor([2, 2147483649],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([2, 2147483649],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),Tensor([2, 12],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 2147483649],"float16"),Tensor([2, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([2, 2147483649],"float16"),Tensor([2, 2147483649],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([207427399, 11],"int32"),], axis=0, )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([4294967297],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([4294967297],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([4294967297],"float16"),], )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([4294967297],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([4294967297],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([4294967297],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4294967297],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([4294967297],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([2147483649, 2, 1],"float16"),Tensor([2147483649, 2, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([2147483649, 2],"float16"),Tensor([1, 2],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 21298],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 3],"float32"),Tensor([216, 248, 1, 1, 2, 21298],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 21298],"float32"),Tensor([216, 248, 1, 1, 2, 3],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 21298],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 3],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 1, 1, 2, 21298],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 3],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([21955, 20, 5],"float32"),Tensor([20524, 20, 5],"float32"),Tensor([19780, 20, 5],"float32"),Tensor([17980, 20, 5],"float32"),Tensor([14701, 20, 5],"float32"),Tensor([22817014, 20, 5],"float32"),Tensor([27860, 20, 5],"float32"),Tensor([22071, 20, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([21955, 20, 5],"float32"),Tensor([20524, 20, 5],"float32"),Tensor([19780, 20, 5],"float32"),Tensor([17980, 20, 5],"float32"),Tensor([14701, 20, 5],"float32"),Tensor([25757, 20, 5],"float32"),Tensor([22817014, 20, 5],"float32"),Tensor([22071, 20, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([21955, 20, 5],"float32"),Tensor([20524, 20, 5],"float32"),Tensor([19780, 20, 5],"float32"),Tensor([17980, 20, 5],"float32"),Tensor([14701, 20, 5],"float32"),Tensor([25757, 20, 5],"float32"),Tensor([27860, 20, 5],"float32"),Tensor([22817014, 20, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([21955, 20, 5],"float32"),Tensor([20524, 20, 5],"float32"),Tensor([19780, 20, 5],"float32"),Tensor([17980, 20, 5],"float32"),Tensor([22817014, 20, 5],"float32"),Tensor([25757, 20, 5],"float32"),Tensor([27860, 20, 5],"float32"),Tensor([22071, 20, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([21955, 20, 5],"float32"),Tensor([20524, 20, 5],"float32"),Tensor([19780, 20, 5],"float32"),Tensor([22817014, 20, 5],"float32"),Tensor([14701, 20, 5],"float32"),Tensor([25757, 20, 5],"float32"),Tensor([27860, 20, 5],"float32"),Tensor([22071, 20, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([21955, 20, 5],"float32"),Tensor([20524, 20, 5],"float32"),Tensor([22817014, 20, 5],"float32"),Tensor([17980, 20, 5],"float32"),Tensor([14701, 20, 5],"float32"),Tensor([25757, 20, 5],"float32"),Tensor([27860, 20, 5],"float32"),Tensor([22071, 20, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([21955, 20, 5],"float32"),Tensor([22817014, 20, 5],"float32"),Tensor([19780, 20, 5],"float32"),Tensor([17980, 20, 5],"float32"),Tensor([14701, 20, 5],"float32"),Tensor([25757, 20, 5],"float32"),Tensor([27860, 20, 5],"float32"),Tensor([22071, 20, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),Tensor([14701, 4],"int32"),Tensor([25757, 4],"int32"),Tensor([27860, 4],"int32"),Tensor([570425345, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),Tensor([14701, 4],"int32"),Tensor([25757, 4],"int32"),Tensor([570425345, 4],"int32"),Tensor([22071, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),Tensor([14701, 4],"int32"),Tensor([570425345, 4],"int32"),Tensor([27860, 4],"int32"),Tensor([22071, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),Tensor([570425345, 4],"int32"),Tensor([25757, 4],"int32"),Tensor([27860, 4],"int32"),Tensor([22071, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([570425345, 4],"int32"),Tensor([14701, 4],"int32"),Tensor([25757, 4],"int32"),Tensor([27860, 4],"int32"),Tensor([22071, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([570425345, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([570425345, 4],"int32"),Tensor([17980, 4],"int32"),Tensor([14701, 4],"int32"),Tensor([25757, 4],"int32"),Tensor([27860, 4],"int32"),Tensor([22071, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([570425345, 4],"int32"),Tensor([17980, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([570425345, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),Tensor([14701, 4],"int32"),Tensor([25757, 4],"int32"),Tensor([27860, 4],"int32"),Tensor([22071, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([570425345, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([22008, 103680, 1],"float32"),Tensor([22008, 25920, 1],"float32"),Tensor([22008, 6480, 1],"float32"),Tensor([22008, 1620, 1],"float32"),Tensor([22008, 420, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([2228225, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([2281701379, 1, 1],"float32"),Tensor([2281701379, 1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2281701379, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([10000, 1],"float32"),Tensor([6512, 1],"float32"),], )
paddle.concat(list[Tensor([2281701379, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([1024, 1],"float32"),Tensor([544, 1],"float32"),], )
paddle.concat(list[Tensor([2281701379, 1],"float32"),Tensor([1570, 1],"float32"),Tensor([1690, 1],"float32"),Tensor([1866, 1],"float32"),Tensor([406, 1],"float32"),Tensor([97, 1],"float32"),], )
paddle.concat(list[Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),], )
paddle.concat(list[Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),], -1, )
paddle.concat(list[Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),], -1, )
paddle.concat(list[Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),], 1, )
paddle.concat(list[Tensor([2281701379, 1],"float32"),Tensor([25344, 1],"float32"),Tensor([6336, 1],"float32"),Tensor([1584, 1],"float32"),Tensor([396, 1],"float32"),], axis=0, )
paddle.concat(list[Tensor([2281701379, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([2281701379, 1],"float32"),Tensor([400, 1],"float32"),Tensor([1600, 1],"float32"),], )
paddle.concat(list[Tensor([2281701379, 1],"float32"),Tensor([517, 1],"float32"),Tensor([469, 1],"float32"),Tensor([636, 1],"float32"),Tensor([221, 1],"float32"),], )
paddle.concat(list[Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([2281701379, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2281701379, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([2281701379, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([2281701379, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([2281701379, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([2281701379, 1],"int32"),Tensor([2281701379, 1],"int32"),], )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),], )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([120],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], axis=0, )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([132],"float32"),Tensor([140],"float32"),Tensor([56],"float32"),Tensor([24],"float32"),], )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], axis=0, )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([2500],"float32"),Tensor([50],"float32"),Tensor([150],"float32"),Tensor([3],"float32"),], axis=0, )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([512],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([4096],"float32"),Tensor([64],"float32"),Tensor([320],"float32"),Tensor([5],"float32"),], axis=0, )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([8],"float32"),Tensor([80],"float32"),Tensor([10],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),Tensor([200],"float32"),], )
paddle.concat(list[Tensor([2281701379],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([2281701379],"float32"),], 0, )
paddle.concat(list[Tensor([2281701379],"float32"),], axis=0, )
paddle.concat(list[Tensor([228170138, 10],"float32"),Tensor([228170138, 10],"float32"),Tensor([228170138, 10],"float32"),], 1, )
paddle.concat(list[Tensor([228170138, 10],"float32"),], 1, )
paddle.concat(list[Tensor([22817014, 20, 5],"float32"),Tensor([20524, 20, 5],"float32"),Tensor([19780, 20, 5],"float32"),Tensor([17980, 20, 5],"float32"),Tensor([14701, 20, 5],"float32"),Tensor([25757, 20, 5],"float32"),Tensor([27860, 20, 5],"float32"),Tensor([22071, 20, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([22817014, 4, 5, 1, 5],"float32"),Tensor([22817014, 4, 5, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([2374300, 1, 31, 31],"float32"),], axis=1, )
paddle.concat(list[Tensor([23767723, 4, 3, 1, 1, 8],"float32"),Tensor([23767723, 4, 3, 1, 1, 8],"float32"),Tensor([23767723, 4, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([2281701379],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([2281701379],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([2281701379],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([2281701379],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([2281701379],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([2281701379],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([2281701379],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([2281701379],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([2281701379],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([2281701379],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([2281701379],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([2281701379],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([2281701379],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([2281701379],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([2281701379],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([2281701379],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([2281701379],"float32"),Tensor([360],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([2281701379],"float32"),Tensor([4],"float32"),], axis=0, )
paddle.concat(list[Tensor([270],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([8100],"float32"),Tensor([90],"float32"),Tensor([360],"float32"),Tensor([2281701379],"float32"),], axis=0, )
paddle.concat(list[Tensor([27648, 256],"float32"),Tensor([6912, 256],"float32"),Tensor([1728, 256],"float32"),Tensor([432, 256],"float32"),Tensor([108, 256],"float32"),Tensor([8912897, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([27648, 256],"float32"),Tensor([6912, 256],"float32"),Tensor([1728, 256],"float32"),Tensor([432, 256],"float32"),Tensor([8912897, 256],"float32"),Tensor([30, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([27648, 256],"float32"),Tensor([6912, 256],"float32"),Tensor([1728, 256],"float32"),Tensor([8912897, 256],"float32"),Tensor([108, 256],"float32"),Tensor([30, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([27648, 256],"float32"),Tensor([6912, 256],"float32"),Tensor([8912897, 256],"float32"),Tensor([432, 256],"float32"),Tensor([108, 256],"float32"),Tensor([30, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([27648, 256],"float32"),Tensor([8912897, 256],"float32"),Tensor([1728, 256],"float32"),Tensor([432, 256],"float32"),Tensor([108, 256],"float32"),Tensor([30, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([27648, 82527],"float32"),Tensor([6912, 82527],"float32"),Tensor([1728, 82527],"float32"),Tensor([432, 82527],"float32"),Tensor([108, 82527],"float32"),Tensor([30, 82527],"float32"),], axis=0, )
paddle.concat(list[Tensor([2970966, 3, 16, 16],"float32"),Tensor([2970966, 3, 16, 16],"float32"),Tensor([2970966, 2, 16, 16],"float32"),], 1, )
paddle.concat(list[Tensor([298496, 39, 14, 14, 1],"float32"),Tensor([50, 39, 14, 14, 1],"float32"),Tensor([50, 39, 14, 14, 1],"float32"),Tensor([50, 39, 14, 14, 1],"float32"),], )
paddle.concat(list[Tensor([3, 1431655766],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),], axis=1, )
paddle.concat(list[Tensor([3, 1],"float16"),Tensor([18, 1],"float16"),Tensor([4294967297, 1],"float16"),], 0, )
paddle.concat(list[Tensor([3, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([18, 1],"float16"),], 0, )
paddle.concat(list[Tensor([3, 6],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),], axis=1, )
paddle.concat(list[Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),], axis=1, )
paddle.concat(list[Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),], axis=1, )
paddle.concat(list[Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 6],"float16"),], axis=1, )
paddle.concat(list[Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 6],"float16"),Tensor([3, 1431655766],"float16"),], axis=1, )
paddle.concat(list[Tensor([3043, 248, 216, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([313593, 107, 128],"float16"),Tensor([313593, 107, 107],"float16"),], axis=2, )
paddle.concat(list[Tensor([323, 27648, 256],"float32"),Tensor([323, 6912, 256],"float32"),Tensor([323, 1728, 256],"float32"),Tensor([323, 432, 256],"float32"),Tensor([323, 108, 256],"float32"),], 1, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float16"),Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([32],"float32"),Tensor([2281701379],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([2281701379],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([2281701379],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([2281701379],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([2281701379],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([2281701379],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([2281701379],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([2281701379],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([2281701379],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([2281701379],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([2281701379],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([2281701379],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([2281701379],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([2281701379],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([2281701379],"float32"),], axis=-1, )
paddle.concat(list[Tensor([35651585, 2, 32],"float32"),Tensor([35651585, 2, 32],"float32"),Tensor([35651585, 2, 32],"float32"),], axis=2, )
paddle.concat(list[Tensor([36380, 1280, 7, 7],"float32"),Tensor([36380, 288, 7, 7],"float32"),Tensor([36380, 288, 7, 7],"float32"),Tensor([36380, 288, 7, 7],"float32"),Tensor([36380, 288, 7, 7],"float32"),Tensor([36380, 288, 7, 7],"float32"),Tensor([36380, 288, 7, 7],"float32"),Tensor([36380, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([36],"float16"),Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([3802836, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([52, 30, 20],"float32"),], )
paddle.concat(list[Tensor([391776, 52, 14, 8],"float32"),Tensor([1, 52, 14, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([391776, 52, 14, 8],"float32"),Tensor([391776, 52, 14, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([4, 10],"float32"),Tensor([4, 10],"float32"),Tensor([4, 570425345],"float32"),], 1, )
paddle.concat(list[Tensor([4, 10],"float32"),Tensor([4, 570425345],"float32"),Tensor([4, 10],"float32"),], 1, )
paddle.concat(list[Tensor([4, 304, 3532046],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 3532046],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 3532046],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 3532046],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 3532046],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 3532046],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 3532046],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 3532046],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 3532046],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 3532046],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 3532046],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 3532046],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 570425345],"float32"),Tensor([4, 10],"float32"),Tensor([4, 10],"float32"),], 1, )
paddle.concat(list[Tensor([4, 570425345],"float32"),Tensor([4, 570425345],"float32"),Tensor([4, 570425345],"float32"),], 1, )
paddle.concat(list[Tensor([4, 570425345],"float32"),], 1, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([2281701379, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([2281701379],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([2281701379],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([2281701379],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([2281701379],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([2281701379],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([2281701379],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([2281701379],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([2281701379],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([2281701379],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([2281701379],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([2281701379],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([2281701379],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([2281701379],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([20],"float32"),Tensor([2281701379],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([40],"float32"),Tensor([2281701379],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([400],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([4294967297, 1, 1, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([4294967297, 1, 1, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([4294967297, 1, 1, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([4294967297, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([4294967297, 1, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([4294967297, 1, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([4294967297, 1, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([4294967297, 1],"float16"),Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([4294967297, 1],"float16"),Tensor([18, 1],"float16"),Tensor([18, 1],"float16"),], 0, )
paddle.concat(list[Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),], 0, )
paddle.concat(list[Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([4294967297, 1],"float16"),], )
paddle.concat(list[Tensor([4294967297, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([4294967297, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([128],"float16"),Tensor([128],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),], axis=0, )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([2],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),Tensor([32],"float16"),], axis=0, )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),Tensor([36],"float16"),], axis=0, )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),], )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([500],"float16"),], )
paddle.concat(list[Tensor([4294967297],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),], axis=0, )
paddle.concat(list[Tensor([4294967297],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([43346, 188, 140, 2],"float32"),Tensor([43346, 188, 140, 2],"float32"),Tensor([43346, 188, 140, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([4353, 128, 64, 64],"float32"),Tensor([4353, 128, 64, 64],"float32"),], 1, )
paddle.concat(list[Tensor([4456449, 8, 4, 4, 4, 1],"float32"),Tensor([4456449, 8, 4, 4, 4, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([45634028, 10, 5],"float32"),Tensor([1, 10, 5],"float32"),], )
paddle.concat(list[Tensor([45634028, 10, 5],"float32"),Tensor([45634028, 10, 5],"float32"),], )
paddle.concat(list[Tensor([475355, 1, 4800],"float32"),Tensor([475355, 1, 1200],"float32"),Tensor([475355, 1, 300],"float32"),Tensor([475355, 1, 80],"float32"),Tensor([475355, 1, 20],"float32"),], axis=-1, )
paddle.concat(list[Tensor([475355, 4800],"float32"),Tensor([475355, 1200],"float32"),Tensor([475355, 300],"float32"),Tensor([475355, 80],"float32"),], 1, )
paddle.concat(list[Tensor([5, 456340276],"float32"),], axis=1, )
paddle.concat(list[Tensor([50, 39, 14, 14, 1],"float32"),Tensor([298496, 39, 14, 14, 1],"float32"),Tensor([50, 39, 14, 14, 1],"float32"),Tensor([50, 39, 14, 14, 1],"float32"),], )
paddle.concat(list[Tensor([50, 39, 14, 14, 1],"float32"),Tensor([50, 39, 14, 14, 1],"float32"),Tensor([298496, 39, 14, 14, 1],"float32"),Tensor([50, 39, 14, 14, 1],"float32"),], )
paddle.concat(list[Tensor([50, 39, 14, 14, 1],"float32"),Tensor([50, 39, 14, 14, 1],"float32"),Tensor([50, 39, 14, 14, 1],"float32"),Tensor([298496, 39, 14, 14, 1],"float32"),], )
paddle.concat(list[Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 4563403],"float32"),], axis=-1, )
paddle.concat(list[Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 4563403],"float32"),Tensor([500, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 4563403],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 4563403],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 4563403],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 4563403],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 4563403],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([500, 1],"float32"),Tensor([500, 4563403],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([500, 4563403],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),Tensor([500, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([5070448, 15, 15, 2],"float32"),Tensor([5070448, 15, 15, 2],"float32"),], -1, )
paddle.concat(list[Tensor([512, 30, 20],"float32"),Tensor([3802836, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([52, 30, 20],"float32"),], )
paddle.concat(list[Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([3802836, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([52, 30, 20],"float32"),], )
paddle.concat(list[Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([3802836, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([52, 30, 20],"float32"),], )
paddle.concat(list[Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([3802836, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([52, 30, 20],"float32"),], )
paddle.concat(list[Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([3802836, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([52, 30, 20],"float32"),], )
paddle.concat(list[Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([3802836, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([52, 30, 20],"float32"),], )
paddle.concat(list[Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([3802836, 30, 20],"float32"),Tensor([52, 30, 20],"float32"),], )
paddle.concat(list[Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([512, 30, 20],"float32"),Tensor([3802836, 30, 20],"float32"),], )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 4456449],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512],"float16"),Tensor([128],"float16"),Tensor([4294967297],"float16"),], axis=-1, )
paddle.concat(list[Tensor([512],"float16"),Tensor([4294967297],"float16"),Tensor([128],"float16"),], axis=-1, )
paddle.concat(list[Tensor([512],"float32"),Tensor([2281701379],"float32"),], axis=-1, )
paddle.concat(list[Tensor([53053, 21504, 2],"float32"),Tensor([53053, 21504, 2],"float32"),Tensor([53053, 21504, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([5571, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([56, 159159, 16, 16],"float32"),Tensor([56, 159159, 16, 16],"float32"),Tensor([56, 159159, 16, 16],"float32"),], 1, )
paddle.concat(list[Tensor([56, 159159, 16, 16],"float32"),Tensor([56, 3, 16, 16],"float32"),Tensor([56, 2, 16, 16],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 16, 16],"float32"),Tensor([56, 159159, 16, 16],"float32"),Tensor([56, 2, 16, 16],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 16, 16],"float32"),Tensor([56, 3, 16, 16],"float32"),Tensor([56, 159159, 16, 16],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 16, 848848],"float32"),Tensor([56, 3, 16, 848848],"float32"),Tensor([56, 2, 16, 848848],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 848848, 16],"float32"),Tensor([56, 3, 848848, 16],"float32"),Tensor([56, 2, 848848, 16],"float32"),], 1, )
paddle.concat(list[Tensor([570425345, 4],"float32"),], 0, )
paddle.concat(list[Tensor([570425345, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),Tensor([14701, 4],"int32"),Tensor([25757, 4],"int32"),Tensor([27860, 4],"int32"),Tensor([22071, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([570425345, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([57042535, 4, 10],"float32"),Tensor([1, 4, 10],"float32"),Tensor([1, 4, 10],"float32"),], 0, )
paddle.concat(list[Tensor([57042535, 4, 10],"float32"),Tensor([57042535, 4, 10],"float32"),Tensor([57042535, 4, 10],"float32"),], 0, )
paddle.concat(list[Tensor([6068355, 376, 1],"float32"),Tensor([6068355, 376, 1],"float32"),Tensor([6068355, 376, 1],"float32"),], 2, )
paddle.concat(list[Tensor([6068355, 376, 1],"float32"),Tensor([6068355, 376, 1],"float32"),], 2, )
paddle.concat(list[Tensor([6193, 188, 140, 1, 2, 7],"float32"),Tensor([6193, 188, 140, 1, 2, 7],"float32"),Tensor([6193, 188, 140, 1, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([6193, 188, 140, 2, 7],"float32"),Tensor([6193, 188, 140, 2, 7],"float32"),Tensor([6193, 188, 140, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([63381, 36000, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 3979, 7],"float32"),Tensor([64, 288, 3979, 7],"float32"),Tensor([64, 288, 3979, 7],"float32"),Tensor([64, 288, 3979, 7],"float32"),Tensor([64, 288, 3979, 7],"float32"),Tensor([64, 288, 3979, 7],"float32"),Tensor([64, 288, 3979, 7],"float32"),Tensor([64, 288, 3979, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 3979],"float32"),Tensor([64, 288, 7, 3979],"float32"),Tensor([64, 288, 7, 3979],"float32"),Tensor([64, 288, 7, 3979],"float32"),Tensor([64, 288, 7, 3979],"float32"),Tensor([64, 288, 7, 3979],"float32"),Tensor([64, 288, 7, 3979],"float32"),Tensor([64, 288, 7, 3979],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 727584, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 727584, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 727584, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 727584, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 727584, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 727584, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 7],"float32"),Tensor([64, 727584, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([64, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([36, 1],"float32"),], )
paddle.concat(list[Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([64, 1],"float32"),Tensor([2281701379, 1],"float32"),], )
paddle.concat(list[Tensor([64, 214272],"float32"),Tensor([10649, 214272],"float32"),Tensor([64, 214272],"float32"),Tensor([64, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([64, 214272],"float32"),Tensor([10649, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([64, 214272],"float32"),Tensor([64, 214272],"float32"),Tensor([10649, 214272],"float32"),Tensor([64, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([64, 214272],"float32"),Tensor([64, 214272],"float32"),Tensor([64, 214272],"float32"),Tensor([10649, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([8705, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([8705, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([8705, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([8705, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([8705, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([8705, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([8705, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 35651585],"float32"),Tensor([64, 35651585],"float32"),], 0, )
paddle.concat(list[Tensor([64, 727584, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([6],"float16"),Tensor([4294967297],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),], axis=0, )
paddle.concat(list[Tensor([6],"float16"),Tensor([6],"float16"),Tensor([4294967297],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),], axis=0, )
paddle.concat(list[Tensor([6],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),Tensor([4294967297],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),], axis=0, )
paddle.concat(list[Tensor([6],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),Tensor([4294967297],"float16"),Tensor([6],"float16"),], axis=0, )
paddle.concat(list[Tensor([6],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),Tensor([6],"float16"),Tensor([4294967297],"float16"),], axis=0, )
paddle.concat(list[Tensor([71303169, 4, 1, 8],"float32"),Tensor([71303169, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([720],"float32"),Tensor([2281701379],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([2281701379],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([2281701379],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([2281701379],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([2281701379],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([2281701379],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([2281701379],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([2281701379],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([2281701379],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),Tensor([720],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([2304],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([7360328, 310, 1],"float32"),Tensor([7360328, 310, 1],"float32"),Tensor([7360328, 310, 1],"float32"),], -1, )
paddle.concat(list[Tensor([73661, 176, 176],"float32"),], )
paddle.concat(list[Tensor([737, 1, 100, 176, 176],"float32"),Tensor([6, 1, 100, 176, 176],"float32"),], )
paddle.concat(list[Tensor([737, 1, 100, 176, 176],"float32"),Tensor([737, 1, 100, 176, 176],"float32"),], )
paddle.concat(list[Tensor([760567127, 1, 3],"float32"),Tensor([760567127, 1, 4],"float32"),], -1, )
paddle.concat(list[Tensor([76712, 2704, 11],"float32"),Tensor([76712, 676, 11],"float32"),Tensor([76712, 169, 11],"float32"),Tensor([76712, 49, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([8, 4456449, 4, 4, 4, 1],"float32"),Tensor([8, 4456449, 4, 4, 4, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([8, 8, 2228225, 4, 4, 1],"float32"),Tensor([8, 8, 2228225, 4, 4, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([8, 8, 4, 2228225, 4, 1],"float32"),Tensor([8, 8, 4, 2228225, 4, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([8, 8, 4, 4, 2228225, 1],"float32"),Tensor([8, 8, 4, 4, 2228225, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([8, 8, 4, 4, 4, 1],"float32"),Tensor([8, 8, 4, 4, 4, 557057],"float32"),], axis=-1, )
paddle.concat(list[Tensor([8, 8, 4, 4, 4, 557057],"float32"),Tensor([8, 8, 4, 4, 4, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([8, 8, 4, 4, 4, 557057],"float32"),Tensor([8, 8, 4, 4, 4, 557057],"float32"),], axis=-1, )
paddle.concat(list[Tensor([80],"float32"),Tensor([2281701379],"float32"),Tensor([80],"float32"),Tensor([10],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),Tensor([200],"float32"),], )
paddle.concat(list[Tensor([80],"float32"),Tensor([8],"float32"),Tensor([2281701379],"float32"),Tensor([10],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),Tensor([200],"float32"),], )
paddle.concat(list[Tensor([80],"float32"),Tensor([8],"float32"),Tensor([80],"float32"),Tensor([10],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),Tensor([2281701379],"float32"),], )
paddle.concat(list[Tensor([80],"float32"),Tensor([8],"float32"),Tensor([80],"float32"),Tensor([10],"float32"),Tensor([100],"float32"),Tensor([2281701379],"float32"),Tensor([200],"float32"),], )
paddle.concat(list[Tensor([80],"float32"),Tensor([8],"float32"),Tensor([80],"float32"),Tensor([10],"float32"),Tensor([2281701379],"float32"),Tensor([10],"float32"),Tensor([200],"float32"),], )
paddle.concat(list[Tensor([80],"float32"),Tensor([8],"float32"),Tensor([80],"float32"),Tensor([2281701379],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),Tensor([200],"float32"),], )
paddle.concat(list[Tensor([810264, 11, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([82527, 1, 27648],"float32"),Tensor([82527, 1, 6912],"float32"),Tensor([82527, 1, 1728],"float32"),Tensor([82527, 1, 432],"float32"),Tensor([82527, 1, 108],"float32"),Tensor([82527, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([82527, 27648],"float32"),Tensor([82527, 6912],"float32"),Tensor([82527, 1728],"float32"),Tensor([82527, 432],"float32"),Tensor([82527, 108],"float32"),], 1, )
paddle.concat(list[Tensor([843825, 1, 2704],"float32"),Tensor([843825, 1, 676],"float32"),Tensor([843825, 1, 169],"float32"),Tensor([843825, 1, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([8705, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([8912897, 256],"float32"),Tensor([6912, 256],"float32"),Tensor([1728, 256],"float32"),Tensor([432, 256],"float32"),Tensor([108, 256],"float32"),Tensor([30, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([90948, 1, 12544, 2],"float32"),], )
paddle.concat(list[Tensor([9170, 248832, 1],"float32"),Tensor([9170, 62208, 1],"float32"),Tensor([9170, 15552, 1],"float32"),Tensor([9170, 3888, 1],"float32"),Tensor([9170, 972, 1],"float32"),Tensor([9170, 270, 1],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([1, 1, 142606337, 16],"float32"),Tensor([1, 1, 142606337, 16],"float32"),Tensor([1, 1, 142606337, 16],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 16, 142606337],"float32"),Tensor([1, 1, 16, 142606337],"float32"),Tensor([1, 1, 16, 142606337],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 16, 16],"float32"),Tensor([1, 1, 16, 16],"float32"),Tensor([1, 8912897, 16, 16],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 16, 16],"float32"),Tensor([1, 8912897, 16, 16],"float32"),Tensor([1, 1, 16, 16],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 19, 120089547],"float32"),Tensor([1, 1, 19, 120089547],"float32"),Tensor([1, 1, 19, 120089547],"float32"),), 3, )
paddle.concat(tuple(Tensor([1, 1, 19, 120089547],"float32"),Tensor([1, 1, 19, 80],"float32"),Tensor([1, 1, 19, 2],"float32"),), 3, )
paddle.concat(tuple(Tensor([1, 1, 19, 2],"float32"),Tensor([1, 1, 19, 120089547],"float32"),Tensor([1, 1, 19, 2],"float32"),), 3, )
paddle.concat(tuple(Tensor([1, 1, 19, 2],"float32"),Tensor([1, 1, 19, 80],"float32"),Tensor([1, 1, 19, 120089547],"float32"),), 3, )
paddle.concat(tuple(Tensor([1, 1, 192],"float32"),Tensor([1, 11883862, 192],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 2, 1140850690],"float32"),Tensor([1, 1, 2, 1140850690],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 2, 1140850690],"float32"),Tensor([1, 1, 2, 4],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 2, 49],"float32"),Tensor([1, 1, 272, 49],"float32"),Tensor([1, 1, 46565335, 49],"float32"),), 2, )
paddle.concat(tuple(Tensor([1, 1, 2, 49],"float32"),Tensor([1, 1, 46565335, 49],"float32"),Tensor([1, 1, 2, 49],"float32"),), 2, )
paddle.concat(tuple(Tensor([1, 1, 2, 4],"float32"),Tensor([1, 1, 2, 1140850690],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 46565335, 49],"float32"),Tensor([1, 1, 272, 49],"float32"),Tensor([1, 1, 2, 49],"float32"),), 2, )
paddle.concat(tuple(Tensor([1, 1, 46565335, 49],"float32"),Tensor([1, 1, 46565335, 49],"float32"),Tensor([1, 1, 46565335, 49],"float32"),), 2, )
paddle.concat(tuple(Tensor([1, 1, 570425345, 4],"float32"),Tensor([1, 1, 570425345, 4],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 570425345, 4],"float32"),Tensor([1, 1, 570425345, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 8, 285212673],"float32"),Tensor([1, 1, 8, 285212673],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 8, 4],"float32"),Tensor([1, 71303169, 8, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 10, 114085069, 2],"float32"),Tensor([1, 10, 114085069, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 10, 1782580, 128],"float32"),Tensor([1, 10, 1782580, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 10, 8, 128],"float32"),Tensor([1, 10, 8, 28521268],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 10, 8, 28521268],"float32"),Tensor([1, 10, 8, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 10, 8, 28521268],"float32"),Tensor([1, 10, 8, 28521268],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 10, 8, 28521268],"float32"),Tensor([1, 10, 8, 28521268],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 10, 8, 28521268],"float32"),Tensor([1, 10, 8, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 10, 8, 2],"float32"),Tensor([1, 10, 8, 28521268],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 100],"bool"),Tensor([1, 2281701379],"bool"),), axis=1, )
paddle.concat(tuple(Tensor([1, 11883862, 192],"float32"),Tensor([1, 11883862, 192],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 11883862, 192],"float32"),Tensor([1, 576, 192],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 142606337, 8, 2],"float32"),Tensor([1, 142606337, 8, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 20, 114085069],"float32"),Tensor([1, 20, 114085069],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 20, 114085069],"float32"),Tensor([1, 20, 20],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 20, 2],"float32"),Tensor([1, 20, 114085069],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 2228225, 8, 128],"float32"),Tensor([1, 2228225, 8, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 2281701379],"bool"),Tensor([1, 1],"bool"),), axis=1, )
paddle.concat(tuple(Tensor([1, 2281701379],"bool"),Tensor([1, 2281701379],"bool"),), axis=1, )
paddle.concat(tuple(Tensor([1, 285212673, 1, 8],"float32"),Tensor([1, 285212673, 1, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 285212673, 2, 4],"float32"),Tensor([1, 285212673, 2, 4],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 3, 256, 256],"float32"),Tensor([1, 34817, 256, 256],"float32"),), 1, )
paddle.concat(tuple(Tensor([1, 3, 256, 2970966],"float32"),Tensor([1, 3, 256, 2970966],"float32"),), 1, )
paddle.concat(tuple(Tensor([1, 3, 2970966, 256],"float32"),Tensor([1, 3, 2970966, 256],"float32"),), 1, )
paddle.concat(tuple(Tensor([1, 34817, 256, 256],"float32"),Tensor([1, 3, 256, 256],"float32"),), 1, )
paddle.concat(tuple(Tensor([1, 34817, 256, 256],"float32"),Tensor([1, 34817, 256, 256],"float32"),), 1, )
paddle.concat(tuple(Tensor([1, 4, 1, 570425345],"float32"),Tensor([1, 4, 1, 570425345],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 4, 1, 8],"float32"),Tensor([1, 4, 71303169, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 4, 71303169, 8],"float32"),Tensor([1, 4, 1, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 4, 71303169, 8],"float32"),Tensor([1, 4, 71303169, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 71303169, 8, 4],"float32"),Tensor([1, 1, 8, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 71303169, 8, 4],"float32"),Tensor([1, 71303169, 8, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 8912897, 16, 16],"float32"),Tensor([1, 1, 16, 16],"float32"),Tensor([1, 1, 16, 16],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 8912897, 16, 16],"float32"),Tensor([1, 8912897, 16, 16],"float32"),Tensor([1, 8912897, 16, 16],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([100, 167773, 2, 128],"float16"),Tensor([1, 167773, 2, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([100, 2, 167773, 128],"float16"),Tensor([1, 2, 167773, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([100, 2, 2, 10737419],"float16"),Tensor([1, 2, 2, 10737419],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([100, 2, 2, 128],"float16"),Tensor([8388609, 2, 2, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([10000],"int32"),Tensor([2281701379],"int32"),), axis=0, )
paddle.concat(tuple(Tensor([1011393, 188, 1, 1, 2, 6],"float32"),Tensor([1011393, 188, 1, 1, 2, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([10186167, 7, 32],"float32"),Tensor([10186167, 7, 32],"float32"),Tensor([10186167, 7, 32],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([11606, 3, 256, 256],"float32"),Tensor([11606, 3, 256, 256],"float32"),), 1, )
paddle.concat(tuple(Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 5484860, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 5484860, 32],"float32"),Tensor([13, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 5484860, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 5484860, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 5484860, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 5484860, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 1, 32],"float32"),Tensor([13, 5484860, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 10969719, 16],"float32"),Tensor([13, 10969719, 16],"float32"),), 2, )
paddle.concat(tuple(Tensor([13, 43878873, 4],"float32"),Tensor([13, 43878873, 4],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 5484860, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 5484860, 32],"float32"),Tensor([13, 5484860, 32],"float32"),Tensor([13, 5484860, 32],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 25073642],"float32"),), 2, )
paddle.concat(tuple(Tensor([13, 7, 25073642],"float32"),Tensor([13, 7, 16],"float32"),), 2, )
paddle.concat(tuple(Tensor([13, 7, 25073642],"float32"),Tensor([13, 7, 25073642],"float32"),), 2, )
paddle.concat(tuple(Tensor([13, 7, 25073642],"float32"),Tensor([13, 7, 25073642],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 7, 25073642],"float32"),Tensor([13, 7, 25073642],"float32"),Tensor([13, 7, 25073642],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 7, 25073642],"float32"),Tensor([13, 7, 32],"float32"),Tensor([13, 7, 32],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 7, 25073642],"float32"),Tensor([13, 7, 4],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 7, 25073642],"float32"),Tensor([13, 7, 32],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 7, 32],"float32"),Tensor([13, 7, 25073642],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 7, 4],"float32"),Tensor([13, 7, 25073642],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([140, 1358156, 1, 1, 2, 6],"float32"),Tensor([140, 1358156, 1, 1, 2, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 14449, 6],"float32"),Tensor([140, 188, 1, 1, 14449, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 2, 43346],"float32"),Tensor([140, 188, 1, 1, 2, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 2, 43346],"float32"),Tensor([140, 188, 1, 1, 2, 43346],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 2, 6],"float32"),Tensor([140, 188, 1, 1, 2, 43346],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 3],"float32"),Tensor([140, 188, 1, 1, 86691],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 86691],"float32"),Tensor([140, 188, 1, 1, 3],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 86691],"float32"),Tensor([140, 188, 1, 1, 86691],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 28897, 3],"float32"),Tensor([140, 188, 1, 28897, 3],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 7225, 2, 6],"float32"),Tensor([140, 188, 1, 7225, 2, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 28897, 1, 3],"float32"),Tensor([140, 188, 28897, 1, 3],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 7225, 1, 2, 6],"float32"),Tensor([140, 188, 7225, 1, 2, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 5432623, 1, 1, 3],"float32"),Tensor([140, 5432623, 1, 1, 3],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([14260634, 10, 8, 2],"float32"),Tensor([14260634, 10, 8, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([1431655766, 3],"float16"),Tensor([1431655766, 3],"float16"),), 1, )
paddle.concat(tuple(Tensor([171402, 26, 512],"float32"),Tensor([171402, 26, 512],"float32"),Tensor([171402, 26, 512],"float32"),), 2, )
paddle.concat(tuple(Tensor([2, 2147483649],"float16"),), 1, )
paddle.concat(tuple(Tensor([20372334, 7, 16],"float32"),Tensor([20372334, 7, 16],"float32"),), 2, )
paddle.concat(tuple(Tensor([222823, 10, 8, 128],"float32"),Tensor([222823, 10, 8, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([2281701379],"int32"),Tensor([1],"int32"),), axis=0, )
paddle.concat(tuple(Tensor([2281701379],"int32"),Tensor([2281701379],"int32"),), axis=0, )
paddle.concat(tuple(Tensor([22817014, 100],"bool"),Tensor([22817014, 1],"bool"),), axis=1, )
paddle.concat(tuple(Tensor([24],"float16"),Tensor([24],"float16"),Tensor([4294967297],"float16"),), )
paddle.concat(tuple(Tensor([24],"float16"),Tensor([4294967297],"float16"),Tensor([24],"float16"),), )
paddle.concat(tuple(Tensor([285212673, 1, 2, 4],"float32"),Tensor([285212673, 1, 2, 4],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),), 1, )
paddle.concat(tuple(Tensor([3, 1431655766],"float16"),Tensor([3, 3],"float16"),), 1, )
paddle.concat(tuple(Tensor([3, 3],"float16"),Tensor([3, 1431655766],"float16"),), 1, )
paddle.concat(tuple(Tensor([357913942, 12],"float16"),), 1, )
paddle.concat(tuple(Tensor([4, 10649, 248, 216],"float32"),Tensor([4, 1, 248, 216],"float32"),Tensor([4, 3, 248, 216],"float32"),Tensor([4, 2, 248, 216],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 1],"float32"),Tensor([4, 1],"float32"),Tensor([4, 570425345],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 1],"float32"),Tensor([4, 570425345],"float32"),Tensor([4, 1],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 128, 128],"float32"),Tensor([4, 1, 128, 128],"float32"),Tensor([4, 3, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),Tensor([4, 34817, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 128, 128],"float32"),Tensor([4, 1, 128, 128],"float32"),Tensor([4, 3, 128, 128],"float32"),Tensor([4, 34817, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 128, 128],"float32"),Tensor([4, 1, 128, 128],"float32"),Tensor([4, 34817, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 128, 128],"float32"),Tensor([4, 34817, 128, 128],"float32"),Tensor([4, 3, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 248, 216],"float32"),Tensor([4, 1, 248, 216],"float32"),Tensor([4, 10649, 248, 216],"float32"),Tensor([4, 2, 248, 216],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 248, 216],"float32"),Tensor([4, 1, 248, 216],"float32"),Tensor([4, 3, 248, 216],"float32"),Tensor([4, 10649, 248, 216],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 248, 216],"float32"),Tensor([4, 10649, 248, 216],"float32"),Tensor([4, 3, 248, 216],"float32"),Tensor([4, 2, 248, 216],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 34817, 128, 128],"float32"),Tensor([4, 1, 128, 128],"float32"),Tensor([4, 3, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 570425345],"float32"),Tensor([4, 1],"float32"),Tensor([4, 1],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 570425345],"float32"),Tensor([4, 570425345],"float32"),Tensor([4, 570425345],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4045570, 188, 1, 1, 3],"float32"),Tensor([4045570, 188, 1, 1, 3],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([4294967297],"float16"),), )
paddle.concat(tuple(Tensor([4294967297],"float16"),Tensor([24],"float16"),Tensor([24],"float16"),), )
paddle.concat(tuple(Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),), )
paddle.concat(tuple(Tensor([64, 1024, 7, 7],"float16"),Tensor([64, 1024, 7, 7],"float16"),Tensor([64, 1369569, 7, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 7, 7],"float16"),Tensor([64, 1369569, 7, 7],"float16"),Tensor([64, 512, 7, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 7, 9363],"float16"),Tensor([64, 1024, 7, 9363],"float16"),Tensor([64, 512, 7, 9363],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 9363, 7],"float16"),Tensor([64, 1024, 9363, 7],"float16"),Tensor([64, 512, 9363, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 1369569, 7, 7],"float16"),Tensor([64, 1024, 7, 7],"float16"),Tensor([64, 512, 7, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 1369569, 7, 7],"float16"),Tensor([64, 1369569, 7, 7],"float16"),Tensor([64, 1369569, 7, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 128, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 85599, 28, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 128, 28, 28],"float16"),Tensor([64, 85599, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 85599, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 28],"float16"),Tensor([64, 85599, 28, 28],"float16"),Tensor([64, 128, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 26, 1371215],"float32"),Tensor([64, 26, 1371215],"float32"),Tensor([64, 26, 1371215],"float32"),), 2, )
paddle.concat(tuple(Tensor([64, 26, 1371215],"float32"),Tensor([64, 26, 512],"float32"),Tensor([64, 26, 512],"float32"),), 2, )
paddle.concat(tuple(Tensor([64, 26, 512],"float32"),Tensor([64, 26, 1371215],"float32"),Tensor([64, 26, 512],"float32"),), 2, )
paddle.concat(tuple(Tensor([64, 26, 512],"float32"),Tensor([64, 26, 512],"float32"),Tensor([64, 26, 1371215],"float32"),), 2, )
paddle.concat(tuple(Tensor([64, 342393, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 256, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 342393, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 342393, 14, 14],"float16"),Tensor([64, 256, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 342393, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 256, 14, 14],"float16"),Tensor([64, 342393, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 256, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 342393, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 256, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 342393, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 256, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 342393, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 342393, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 342393, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 342393, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 69633, 512],"float32"),Tensor([64, 69633, 512],"float32"),Tensor([64, 69633, 512],"float32"),), 2, )
paddle.concat(tuple(Tensor([64, 85599, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 128, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([71303169, 1, 8, 4],"float32"),Tensor([71303169, 1, 8, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([71303169, 4, 1, 8],"float32"),Tensor([71303169, 4, 1, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([81489335, 7, 4],"float32"),Tensor([81489335, 7, 4],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([8388609, 2, 2, 128],"float16"),Tensor([1, 2, 2, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([8388609, 2, 2, 128],"float16"),Tensor([8388609, 2, 2, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([85599, 1024, 7, 7],"float16"),Tensor([85599, 1024, 7, 7],"float16"),Tensor([85599, 512, 7, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([8912897, 1, 16, 16],"float32"),Tensor([8912897, 1, 16, 16],"float32"),Tensor([8912897, 1, 16, 16],"float32"),), axis=1, )
paddle.concat(x=list[Tensor([1, 13581556, 14, 12],"float32"),Tensor([1, 13581556, 14, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 2281701379],"float32"),Tensor([1, 2281701379],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 3],"float32"),Tensor([760567127, 3],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 8, 14, 12],"float32"),Tensor([1697695, 8, 14, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 8, 14, 20372334],"float32"),Tensor([1, 8, 14, 20372334],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 8, 23767723, 12],"float32"),Tensor([1, 8, 23767723, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([100, 18, 3, 3],"float32"),Tensor([100, 2535224, 3, 3],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([100, 18, 3, 422538],"float32"),Tensor([100, 18, 3, 422538],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([100, 18, 422538, 3],"float32"),Tensor([100, 18, 422538, 3],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([100, 2535224, 3, 3],"float32"),Tensor([100, 18, 3, 3],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([100, 2535224, 3, 3],"float32"),Tensor([100, 2535224, 3, 3],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([1114113, 2048, 1, 1, 1],"float32"),Tensor([1114113, 256, 1, 1, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([13, 12, 1],"float32"),Tensor([13, 175515491, 1],"float32"),Tensor([13, 12, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([13, 12, 1],"float32"),Tensor([13, 96, 1],"float32"),Tensor([13, 175515491, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([13, 175515491, 1],"float32"),Tensor([13, 175515491, 1],"float32"),Tensor([13, 175515491, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([13, 175515491, 1],"float32"),Tensor([13, 96, 1],"float32"),Tensor([13, 12, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([14084577, 18, 3, 3],"float32"),Tensor([14084577, 18, 3, 3],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([16, 16, 32],"float32"),Tensor([16, 16, 8912897],"float32"),], axis=2, )
paddle.concat(x=list[Tensor([16, 16, 8912897],"float32"),Tensor([16, 16, 32],"float32"),], axis=2, )
paddle.concat(x=list[Tensor([16, 16, 8912897],"float32"),Tensor([16, 16, 8912897],"float32"),], axis=2, )
paddle.concat(x=list[Tensor([16, 4456449, 32],"float32"),Tensor([16, 4456449, 32],"float32"),], axis=2, )
paddle.concat(x=list[Tensor([1697695, 8, 14, 12],"float32"),Tensor([1, 8, 14, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1697695, 8, 14, 12],"float32"),Tensor([1697695, 8, 14, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([2048, 1408],"float16"),Tensor([2048, 2097153],"float16"),], axis=-1, )
paddle.concat(x=list[Tensor([2048, 2097153],"float16"),Tensor([2048, 1408],"float16"),], axis=-1, )
paddle.concat(x=list[Tensor([2048, 2097153],"float16"),Tensor([2048, 2097153],"float16"),], axis=-1, )
paddle.concat(x=list[Tensor([2843, 1024, 4, 14, 14],"float32"),Tensor([2843, 256, 4, 14, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([3050403, 1408],"float16"),Tensor([3050403, 1408],"float16"),], axis=-1, )
paddle.concat(x=list[Tensor([4456449, 16, 32],"float32"),Tensor([4456449, 16, 32],"float32"),], axis=2, )
paddle.concat(x=list[Tensor([760567127, 3],"float32"),Tensor([1, 3],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([760567127, 3],"float32"),Tensor([760567127, 3],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([8, 1024, 1422, 14, 14],"float32"),Tensor([8, 256, 1422, 14, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 1024, 4, 14, 14],"float32"),Tensor([8, 363792, 4, 14, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 1024, 4, 14, 4974],"float32"),Tensor([8, 256, 4, 14, 4974],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 1024, 4, 4974, 14],"float32"),Tensor([8, 256, 4, 4974, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 2048, 1, 1, 139265],"float32"),Tensor([8, 256, 1, 1, 139265],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([8, 2048, 1, 1, 1],"float32"),Tensor([8, 285212673, 1, 1, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([8, 2048, 1, 139265, 1],"float32"),Tensor([8, 256, 1, 139265, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([8, 2048, 139265, 1, 1],"float32"),Tensor([8, 256, 139265, 1, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([8, 285212673, 1, 1, 1],"float32"),Tensor([8, 256, 1, 1, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([8, 285212673, 1, 1, 1],"float32"),Tensor([8, 285212673, 1, 1, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([8, 363792, 4, 14, 14],"float32"),Tensor([8, 256, 4, 14, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 363792, 4, 14, 14],"float32"),Tensor([8, 363792, 4, 14, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=tuple(Tensor([1, 1, 1024],"float32"),Tensor([1, 2228225, 1024],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([1, 16, 1, 64],"float32"),Tensor([1, 16, 2228225, 64],"float32"),), axis=-2, )
paddle.concat(x=tuple(Tensor([1, 16, 2228225, 64],"float32"),Tensor([1, 16, 2228225, 64],"float32"),), axis=-2, )
paddle.concat(x=tuple(Tensor([1, 16, 2228225, 64],"float32"),Tensor([1, 16, 256, 64],"float32"),), axis=-2, )
paddle.concat(x=tuple(Tensor([1, 2228225, 1024],"float32"),Tensor([1, 2228225, 1024],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([1, 2228225, 1024],"float32"),Tensor([1, 256, 1024],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([124, 10, 56, 56],"float32"),Tensor([124, 5868, 56, 56],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([124, 5868, 56, 56],"float32"),Tensor([124, 30, 56, 56],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([124, 5868, 56, 56],"float32"),Tensor([124, 5868, 56, 56],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([13, 1, 5484860, 32],"float32"),Tensor([13, 1, 5484860, 4],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([13, 1, 96, 1828287],"float32"),Tensor([13, 1, 96, 1828287],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([13, 1, 96, 1828287],"float32"),Tensor([13, 1, 96, 4],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([13, 1, 96, 32],"float32"),Tensor([13, 1, 96, 1828287],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([13, 175515491, 1],"float32"),Tensor([13, 175515491, 1],"float32"),Tensor([13, 175515491, 1],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([13, 175515491, 1],"float32"),Tensor([13, 384, 1],"float32"),Tensor([13, 384, 1],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([13, 57134, 96, 32],"float32"),Tensor([13, 57134, 96, 4],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([13, 96, 1],"float32"),Tensor([13, 175515491, 1],"float32"),Tensor([13, 384, 1],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([13, 96, 1],"float32"),Tensor([13, 384, 1],"float32"),Tensor([13, 175515491, 1],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([187679, 12158],"float32"),Tensor([187679, 10],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([187679, 12158],"float32"),Tensor([187679, 12158],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([187679, 1],"float32"),Tensor([187679, 12158],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([2, 1140850690],"float32"),Tensor([2, 1140850690],"float32"),), axis=0, )
paddle.concat(x=tuple(Tensor([2, 3],"float32"),Tensor([760567127, 3],"float32"),), axis=0, )
paddle.concat(x=tuple(Tensor([742742, 1, 96, 32],"float32"),Tensor([742742, 1, 96, 4],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([760567127, 3],"float32"),Tensor([2, 3],"float32"),), axis=0, )
paddle.concat(x=tuple(Tensor([760567127, 3],"float32"),Tensor([760567127, 3],"float32"),), axis=0, )
paddle.conj(Tensor([19014179, 20, 2, 3],"float32"), )
paddle.conj(Tensor([2, 190141782, 2, 3],"float32"), )
paddle.conj(Tensor([2, 20, 19014179, 3],"float32"), )
paddle.conj(Tensor([2, 20, 2, 28521268],"float32"), )
paddle.conj(Tensor([2, 20, 2, 53687092],"float16"), )
paddle.conj(Tensor([2, 20, 35791395, 3],"float16"), )
paddle.conj(Tensor([2, 357913942, 2, 3],"float16"), )
paddle.conj(Tensor([35791395, 20, 2, 3],"float16"), )
paddle.copysign(Tensor([10, 228170138],"float32"), -3.0, )
paddle.copysign(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.copysign(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), )
paddle.copysign(Tensor([107374183, 20, 2],"float16"), Tensor([107374183, 20, 2],"float16"), )
paddle.copysign(Tensor([11, 207427399],"float32"), Tensor([11, 207427399],"float32"), )
paddle.copysign(Tensor([114085069, 20],"float32"), -3.0, )
paddle.copysign(Tensor([114085069, 20],"float32"), Tensor([114085069, 20],"float32"), )
paddle.copysign(Tensor([12, 178956971, 2],"float16"), Tensor([12, 178956971, 2],"float16"), )
paddle.copysign(Tensor([12, 20, 17895698],"float16"), Tensor([12, 20, 17895698],"float16"), )
paddle.copysign(Tensor([12, 20, 9507090],"float32"), Tensor([12, 20, 9507090],"float32"), )
paddle.copysign(Tensor([12, 95070891, 2],"float32"), Tensor([12, 95070891, 2],"float32"), )
paddle.copysign(Tensor([1203073, 17, 5, 6, 7],"float16"), Tensor([1203073, 17, 5, 6, 7],"float16"), )
paddle.copysign(Tensor([134217729, 17],"float32"), Tensor([134217729, 17],"float32"), )
paddle.copysign(Tensor([2, 107374183, 4, 5],"float16"), Tensor([2, 107374183, 4, 5],"float16"), )
paddle.copysign(Tensor([2, 3, 143165577, 5],"float16"), Tensor([2, 3, 143165577, 5],"float16"), )
paddle.copysign(Tensor([2, 3, 4, 178956971],"float16"), Tensor([2, 3, 4, 178956971],"float16"), )
paddle.copysign(Tensor([20, 214748365],"float16"), Tensor([20, 214748365],"float16"), )
paddle.copysign(Tensor([214748365, 20],"float16"), Tensor([214748365, 20],"float16"), )
paddle.copysign(Tensor([214748365, 4, 5],"float16"), Tensor([4, 5],"float16"), )
paddle.copysign(Tensor([214748365, 4, 5],"float16"), Tensor([5],"float16"), )
paddle.copysign(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.copysign(Tensor([3, 286331154, 5],"float16"), Tensor([5],"float16"), )
paddle.copysign(Tensor([4, 5],"float16"), Tensor([214748365, 4, 5],"float16"), )
paddle.copysign(Tensor([57042535, 20, 2],"float32"), Tensor([57042535, 20, 2],"float32"), )
paddle.copysign(Tensor([715827883, 6],"float16"), Tensor([715827883, 6],"float16"), )
paddle.copysign(Tensor([71582789, 3, 4, 5],"float16"), Tensor([71582789, 3, 4, 5],"float16"), )
paddle.copysign(Tensor([8, 17, 5, 6, 1052689],"float16"), Tensor([8, 17, 5, 6, 1052689],"float16"), )
paddle.copysign(Tensor([8, 17, 5, 902305, 7],"float16"), Tensor([8, 17, 5, 902305, 7],"float16"), )
paddle.copysign(Tensor([8, 17, 751921, 6, 7],"float16"), Tensor([8, 17, 751921, 6, 7],"float16"), )
paddle.copysign(Tensor([8, 2556529, 5, 6, 7],"float16"), Tensor([8, 2556529, 5, 6, 7],"float16"), )
paddle.cos(Tensor([1, 128, 1, 17825793],"float32"), )
paddle.cos(Tensor([1, 128, 557057, 32],"float32"), )
paddle.cos(Tensor([1, 17825793, 1, 128],"float32"), )
paddle.cos(Tensor([1, 2281701379, 1],"float32"), )
paddle.cos(Tensor([1, 2281701379],"float32"), )
paddle.cos(Tensor([1, 25, 91268056],"float32"), )
paddle.cos(Tensor([1, 35651585, 1, 64],"float32"), )
paddle.cos(Tensor([1, 4096, 1, 557057],"float32"), )
paddle.cos(Tensor([1, 4096, 4353, 128],"float32"), )
paddle.cos(Tensor([1, 4096, 8705, 64],"float32"), )
paddle.cos(Tensor([1, 71303169, 1, 32],"float32"), )
paddle.cos(Tensor([10, 20, 11408507],"float32"), )
paddle.cos(Tensor([10, 228170138, 1],"float32"), )
paddle.cos(Tensor([10, 228170138],"float32"), )
paddle.cos(Tensor([100, 22817014],"float32"), )
paddle.cos(Tensor([1000, 2281702],"float32"), )
paddle.cos(Tensor([1024, 2228225],"float32"), )
paddle.cos(Tensor([1073741825, 4],"float16"), )
paddle.cos(Tensor([11, 207427399],"float32"), )
paddle.cos(Tensor([114085069, 20, 1],"float32"), )
paddle.cos(Tensor([1140850690, 2],"float32"), )
paddle.cos(Tensor([1156, 1973791],"float32"), )
paddle.cos(Tensor([11883862, 192],"float32"), )
paddle.cos(Tensor([1200, 1901418],"float32"), )
paddle.cos(Tensor([121, 18857037],"float32"), )
paddle.cos(Tensor([12676119, 180],"float32"), )
paddle.cos(Tensor([128, 17825793],"float32"), )
paddle.cos(Tensor([1291, 1767391],"float32"), )
paddle.cos(Tensor([1296, 1760573],"float32"), )
paddle.cos(Tensor([14, 162978670],"float32"), )
paddle.cos(Tensor([142606337, 16],"float32"), )
paddle.cos(Tensor([144, 15845149],"float32"), )
paddle.cos(Tensor([1444, 1580126],"float32"), )
paddle.cos(Tensor([14449, 157920, 1],"float32"), )
paddle.cos(Tensor([15, 152113426],"float32"), )
paddle.cos(Tensor([1500, 1521135],"float32"), )
paddle.cos(Tensor([16, 142606337],"float32"), )
paddle.cos(Tensor([1600, 1426064],"float32"), )
paddle.cos(Tensor([162978670, 14],"float32"), )
paddle.cos(Tensor([16800, 135816],"float32"), )
paddle.cos(Tensor([169, 13501192],"float32"), )
paddle.cos(Tensor([1764, 1293482],"float32"), )
paddle.cos(Tensor([17825793, 128],"float32"), )
paddle.cos(Tensor([190141782, 12],"float32"), )
paddle.cos(Tensor([190141782, 3, 4],"float32"), )
paddle.cos(Tensor([1936, 1178565],"float32"), )
paddle.cos(Tensor([196, 11641334],"float32"), )
paddle.cos(Tensor([2, 107136, 10649],"float32"), )
paddle.cos(Tensor([2, 1140850690, 1],"float32"), )
paddle.cos(Tensor([2, 1140850690],"float32"), )
paddle.cos(Tensor([2, 2147483649],"float16"), )
paddle.cos(Tensor([2, 285212673, 4],"float32"), )
paddle.cos(Tensor([2, 3, 380283564],"float32"), )
paddle.cos(Tensor([200, 11408507],"float32"), )
paddle.cos(Tensor([2048, 1114113],"float32"), )
paddle.cos(Tensor([20742740, 110],"float32"), )
paddle.cos(Tensor([2116, 1078309],"float32"), )
paddle.cos(Tensor([21298, 107136, 1],"float32"), )
paddle.cos(Tensor([22120, 103152],"float32"), )
paddle.cos(Tensor([22369622, 102],"float32"), )
paddle.cos(Tensor([225, 10140896],"float32"), )
paddle.cos(Tensor([2281701379, 1],"float32"), )
paddle.cos(Tensor([2281701379],"float32"), )
paddle.cos(Tensor([228170138, 10],"float32"), )
paddle.cos(Tensor([2304, 990322],"float32"), )
paddle.cos(Tensor([23767723, 96],"float32"), )
paddle.cos(Tensor([25, 91268056],"float32"), )
paddle.cos(Tensor([250, 9126806],"float32"), )
paddle.cos(Tensor([2500, 912681],"float32"), )
paddle.cos(Tensor([256, 8912897],"float32"), )
paddle.cos(Tensor([2704, 843825],"float32"), )
paddle.cos(Tensor([28, 81489335],"float32"), )
paddle.cos(Tensor([285212673, 8],"float32"), )
paddle.cos(Tensor([289, 7895161],"float32"), )
paddle.cos(Tensor([2916, 782477],"float32"), )
paddle.cos(Tensor([3, 760567127],"float32"), )
paddle.cos(Tensor([3136, 727584],"float32"), )
paddle.cos(Tensor([324, 7042289],"float32"), )
paddle.cos(Tensor([32768, 69633],"float32"), )
paddle.cos(Tensor([3364, 678271],"float32"), )
paddle.cos(Tensor([35651585, 64],"float32"), )
paddle.cos(Tensor([3565159, 640],"float32"), )
paddle.cos(Tensor([36, 63380594],"float32"), )
paddle.cos(Tensor([3600, 633806],"float32"), )
paddle.cos(Tensor([361, 6320503],"float32"), )
paddle.cos(Tensor([4, 157920, 3613],"float32"), )
paddle.cos(Tensor([4, 570425345, 1],"float32"), )
paddle.cos(Tensor([4, 570425345],"float32"), )
paddle.cos(Tensor([40, 57042535],"float32"), )
paddle.cos(Tensor([400, 5704254],"float32"), )
paddle.cos(Tensor([4000, 570426],"float32"), )
paddle.cos(Tensor([4004, 569856],"float32"), )
paddle.cos(Tensor([4096, 557057],"float32"), )
paddle.cos(Tensor([4294967297],"float16"), )
paddle.cos(Tensor([4353, 4096, 1, 128],"float32"), )
paddle.cos(Tensor([441, 5173927],"float32"), )
paddle.cos(Tensor([4456449, 512],"float32"), )
paddle.cos(Tensor([450, 5070448],"float32"), )
paddle.cos(Tensor([454, 5025774],"float32"), )
paddle.cos(Tensor([45634028, 50],"float32"), )
paddle.cos(Tensor([4800, 475355],"float32"), )
paddle.cos(Tensor([484, 4714260],"float32"), )
paddle.cos(Tensor([5, 456340276],"float32"), )
paddle.cos(Tensor([50, 45634028],"float32"), )
paddle.cos(Tensor([5000, 456341],"float32"), )
paddle.cos(Tensor([512, 4456449],"float32"), )
paddle.cos(Tensor([51856850, 44],"float32"), )
paddle.cos(Tensor([529, 4313236],"float32"), )
paddle.cos(Tensor([557057, 128, 1, 32],"float32"), )
paddle.cos(Tensor([576, 3961288],"float32"), )
paddle.cos(Tensor([5941931, 384],"float32"), )
paddle.cos(Tensor([6284, 363097],"float32"), )
paddle.cos(Tensor([64, 35651585],"float32"), )
paddle.cos(Tensor([7, 325957340],"float32"), )
paddle.cos(Tensor([71303169, 32],"float32"), )
paddle.cos(Tensor([7456541, 306],"float32"), )
paddle.cos(Tensor([760567127, 3],"float32"), )
paddle.cos(Tensor([76056713, 30],"float32"), )
paddle.cos(Tensor([8, 285212673],"float32"), )
paddle.cos(Tensor([81489335, 28],"float32"), )
paddle.cos(Tensor([8192, 278529],"float32"), )
paddle.cos(Tensor([8705, 4096, 1, 64],"float32"), )
paddle.cos(Tensor([8775775, 260],"float32"), )
paddle.cos(Tensor([8912897, 256],"float32"), )
paddle.cos(Tensor([91268056, 25, 1],"float32"), )
paddle.cos(Tensor([91268056, 25],"float32"), )
paddle.cos(Tensor([9750861, 234],"float32"), )
paddle.cos(x=Tensor([17825793, 128],"float32"), )
paddle.cos(x=Tensor([253522376, 3, 3],"float32"), )
paddle.cos(x=Tensor([3, 253522376, 3],"float32"), )
paddle.cos(x=Tensor([3, 3, 253522376],"float32"), )
paddle.cos(x=Tensor([3, 3, 477218589],"float16"), )
paddle.cos(x=Tensor([3, 477218589, 3],"float16"), )
paddle.cos(x=Tensor([30, 76056713],"float32"), )
paddle.cos(x=Tensor([477218589, 3, 3],"float16"), )
paddle.cosh(Tensor([10, 20, 11408507],"float32"), )
paddle.cosh(Tensor([10, 228170138, 1],"float32"), )
paddle.cosh(Tensor([114085069, 20, 1],"float32"), )
paddle.cosh(Tensor([1228, 32, 241, 241],"float32"), )
paddle.cosh(Tensor([8, 32, 241, 36983],"float32"), )
paddle.cosh(Tensor([8, 32, 36983, 241],"float32"), )
paddle.cosh(Tensor([8, 4911, 241, 241],"float32"), )
paddle.cosh(x=Tensor([253522376, 3, 3],"float32"), )
paddle.cosh(x=Tensor([3, 253522376, 3],"float32"), )
paddle.cosh(x=Tensor([3, 3, 253522376],"float32"), )
paddle.cosh(x=Tensor([3, 3, 477218589],"float16"), )
paddle.cosh(x=Tensor([3, 477218589, 3],"float16"), )
paddle.cosh(x=Tensor([477218589, 3, 3],"float16"), )
paddle.count_nonzero(Tensor([1, 14, 21913099, 14],"float16"), axis=list[1,3,], keepdim=False, name=None, )
paddle.count_nonzero(Tensor([1, 14, 5, 61356676],"float16"), axis=list[1,3,], keepdim=False, name=None, )
paddle.count_nonzero(Tensor([1, 61356676, 5, 14],"float16"), axis=list[1,3,], keepdim=False, name=None, )
paddle.count_nonzero(Tensor([2, 3, 4, 95070891],"float32"), axis=-1, keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 4, 95070891],"float32"), axis=None, keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 4, 95070891],"float32"), axis=list[0,1,2,3,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 4, 95070891],"float32"), axis=list[0,2,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 4, 95070891],"float32"), axis=tuple(0,1,3,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 4, 95070891],"float32"), axis=tuple(0,2,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 76056713, 5],"float32"), axis=-1, keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 76056713, 5],"float32"), axis=None, keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 76056713, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 76056713, 5],"float32"), axis=list[0,2,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 76056713, 5],"float32"), axis=tuple(0,1,3,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 76056713, 5],"float32"), axis=tuple(0,2,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 57042535, 4, 5],"float32"), axis=-1, keepdim=False, )
paddle.count_nonzero(Tensor([2, 57042535, 4, 5],"float32"), axis=None, keepdim=False, )
paddle.count_nonzero(Tensor([2, 57042535, 4, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 57042535, 4, 5],"float32"), axis=list[0,2,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 57042535, 4, 5],"float32"), axis=tuple(0,1,3,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 57042535, 4, 5],"float32"), axis=tuple(0,2,), keepdim=False, )
paddle.count_nonzero(Tensor([2281701379],"float32"), axis=0, )
paddle.count_nonzero(Tensor([3, 760567127],"float32"), axis=None, )
paddle.count_nonzero(Tensor([38028357, 3, 4, 5],"float32"), axis=-1, keepdim=False, )
paddle.count_nonzero(Tensor([38028357, 3, 4, 5],"float32"), axis=None, keepdim=False, )
paddle.count_nonzero(Tensor([38028357, 3, 4, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, )
paddle.count_nonzero(Tensor([38028357, 3, 4, 5],"float32"), axis=list[0,2,], keepdim=False, )
paddle.count_nonzero(Tensor([38028357, 3, 4, 5],"float32"), axis=tuple(0,1,3,), keepdim=False, )
paddle.count_nonzero(Tensor([38028357, 3, 4, 5],"float32"), axis=tuple(0,2,), keepdim=False, )
paddle.count_nonzero(Tensor([4382620, 14, 5, 14],"float16"), axis=list[1,3,], keepdim=False, name=None, )
paddle.count_nonzero(Tensor([456340276, 5],"float32"), axis=None, )
paddle.crop(x=Tensor([3, 760567127],"float32"), shape=list[2,2,], )
paddle.crop(x=Tensor([3, 760567127],"int32"), shape=list[2,2,], )
paddle.crop(x=Tensor([3, 760567127],"int64"), shape=list[2,2,], )
paddle.crop(x=Tensor([760567127, 3],"float32"), shape=list[2,2,], )
paddle.crop(x=Tensor([760567127, 3],"int32"), shape=list[2,2,], )
paddle.crop(x=Tensor([760567127, 3],"int64"), shape=list[2,2,], )
paddle.cross(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), axis=1, )
paddle.cross(x=Tensor([1431655766, 3],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.cross(x=Tensor([1431655766, 3],"float16"), y=Tensor([1431655766, 3],"float16"), axis=-1, )
paddle.cross(x=Tensor([1431655766, 3],"float16"), y=Tensor([1431655766, 3],"float16"), axis=1, )
paddle.cross(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.cross(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), axis=0, )
paddle.cross(x=Tensor([3, 3, 477218589],"float16"), y=Tensor([3, 3, 477218589],"float16"), axis=0, )
paddle.cross(x=Tensor([3, 3, 477218589],"float16"), y=Tensor([3, 3, 477218589],"float16"), axis=1, )
paddle.cross(x=Tensor([3, 477218589, 3],"float16"), y=Tensor([3, 477218589, 3],"float16"), axis=0, )
paddle.cross(x=Tensor([3, 477218589, 3],"float16"), y=Tensor([3, 477218589, 3],"float16"), axis=2, )
paddle.cross(x=Tensor([3, 760567127],"float32"), y=Tensor([3, 760567127],"float32"), )
paddle.cross(x=Tensor([3, 760567127],"int32"), y=Tensor([3, 760567127],"int32"), )
paddle.cross(x=Tensor([477218589, 3, 3],"float16"), y=Tensor([477218589, 3, 3],"float16"), axis=1, )
paddle.cross(x=Tensor([477218589, 3, 3],"float16"), y=Tensor([477218589, 3, 3],"float16"), axis=2, )
paddle.cross(x=Tensor([760567127, 3],"float32"), y=Tensor([760567127, 3],"float32"), )
paddle.cross(x=Tensor([760567127, 3],"int32"), y=Tensor([760567127, 3],"int32"), )
paddle.cumsum(Tensor([1, 2281701379],"float32"), axis=-1, )
paddle.cumsum(Tensor([10, 20, 11408507],"float32"), dtype="float32", )
paddle.cumsum(Tensor([10, 228170138, 1],"float32"), dtype="float32", )
paddle.cumsum(Tensor([10, 228170138],"float32"), dtype="float32", )
paddle.cumsum(Tensor([114085069, 20, 1],"float32"), dtype="float32", )
paddle.cumsum(Tensor([1140850690, 2],"float32"), axis=1, )
paddle.cumsum(Tensor([190141782, 12],"float32"), dtype="float32", )
paddle.cumsum(Tensor([2, 1140850690],"float32"), axis=-1, )
paddle.cumsum(Tensor([2, 1140850690],"float32"), axis=1, )
paddle.cumsum(Tensor([20742740, 10, 11],"float32"), axis=Tensor([1],"int64"), )
paddle.cumsum(Tensor([2281701379],"float32"), axis=0, )
paddle.cumsum(Tensor([2281701379],"float32"), dtype="float32", )
paddle.cumsum(Tensor([228170138, 10],"float32"), axis=-1, )
paddle.cumsum(Tensor([228171, 10000],"float32"), axis=-1, )
paddle.cumsum(Tensor([285212673, 2, 4],"float32"), axis=1, )
paddle.cumsum(Tensor([3, 190141782, 4],"float32"), axis=1, )
paddle.cumsum(Tensor([3, 2, 380283564],"float32"), axis=1, )
paddle.cumsum(Tensor([3, 760567127],"float32"), axis=-1, )
paddle.cumsum(Tensor([45359, 50304],"float32"), axis=-1, )
paddle.cumsum(Tensor([5, 858993460],"float16"), axis=Tensor([1],"int32"), )
paddle.cumsum(Tensor([570425345, 4],"float32"), axis=-1, )
paddle.cumsum(Tensor([715827883, 6],"float16"), axis=Tensor([1],"int32"), )
paddle.cumsum(Tensor([760567127, 3],"float32"), axis=0, )
paddle.cumsum(Tensor([76057, 30000],"float32"), axis=-1, )
paddle.cumsum(Tensor([9, 10, 25352238],"float32"), axis=Tensor([1],"int64"), )
paddle.cumsum(Tensor([9, 23047489, 11],"float32"), axis=Tensor([1],"int64"), )
paddle.cumsum(x=Tensor([1, 1398102, 96, 32],"float16"), axis=2, )
paddle.cumsum(x=Tensor([1, 1431655766, 1, 3],"float16"), axis=3, )
paddle.cumsum(x=Tensor([1, 1431655766, 1, 3],"float16"), axis=Tensor([1],"float16"), )
paddle.cumsum(x=Tensor([1, 16, 8388609, 32],"float16"), axis=2, )
paddle.cumsum(x=Tensor([1, 16, 96, 2796203],"float16"), axis=2, )
paddle.cumsum(x=Tensor([1, 2, 715827883, 3],"float16"), axis=3, )
paddle.cumsum(x=Tensor([1, 2, 715827883, 3],"float16"), axis=Tensor([1],"float16"), )
paddle.cumsum(x=Tensor([2281701379],"float32"), )
paddle.cumsum(x=Tensor([4294967297],"float16"), )
paddle.cumsum(x=Tensor([715827883, 2, 1, 3],"float16"), axis=-4, )
paddle.cumsum(x=Tensor([715827883, 2, 1, 3],"float16"), axis=3, )
paddle.cumsum(x=Tensor([715827883, 2, 1, 3],"float16"), axis=Tensor([1],"float16"), )
paddle.cumsum(x=Tensor([87382, 16, 96, 32],"float16"), axis=2, )
paddle.deg2rad(Tensor([2281701379],"float32"), )
paddle.deg2rad(Tensor([2281701379],"int64"), )
paddle.deg2rad(Tensor([4456449, 16, 32],"float32"), )
paddle.deg2rad(Tensor([8, 16, 17825793],"float32"), )
paddle.deg2rad(Tensor([8, 8912897, 32],"float32"), )
paddle.diag(Tensor([10, 228170138],"float32"), )
paddle.diag(Tensor([10, 228170138],"float32"), offset=-1, )
paddle.diag(Tensor([10, 228170138],"float32"), offset=1, )
paddle.diag(Tensor([10096024, 226],"float32"), )
paddle.diag(Tensor([101, 22591103],"float32"), )
paddle.diag(Tensor([102, 22369622],"float32"), )
paddle.diag(Tensor([10277935, 222],"float32"), )
paddle.diag(Tensor([10371370, 220],"float32"), )
paddle.diag(Tensor([10514753, 217],"float32"), )
paddle.diag(Tensor([107, 21324312],"float32"), )
paddle.diag(Tensor([1073741825, 4],"float16"), )
paddle.diag(Tensor([108, 21126865],"float32"), )
paddle.diag(Tensor([10813751, 211],"float32"), )
paddle.diag(Tensor([108652447, 21],"float32"), )
paddle.diag(Tensor([110, 20742740],"float32"), )
paddle.diag(Tensor([11239909, 203],"float32"), )
paddle.diag(Tensor([1140851, 2000],"float32"), )
paddle.diag(Tensor([1140851, 2000],"float32"), offset=-1, )
paddle.diag(Tensor([1140851, 2000],"float32"), offset=1, )
paddle.diag(Tensor([115, 19840882],"float32"), )
paddle.diag(Tensor([118, 19336453],"float32"), )
paddle.diag(Tensor([124, 18400818],"float32"), )
paddle.diag(Tensor([12400551, 184],"float32"), )
paddle.diag(Tensor([12468314, 183],"float32"), )
paddle.diag(Tensor([126, 18108742],"float32"), )
paddle.diag(Tensor([126761188, 18],"float32"), )
paddle.diag(Tensor([13113227, 174],"float32"), )
paddle.diag(Tensor([133, 17155650],"float32"), )
paddle.diag(Tensor([134, 17027623],"float32"), )
paddle.diag(Tensor([134217729, 17],"float32"), )
paddle.diag(Tensor([13581556, 168],"float32"), )
paddle.diag(Tensor([13745190, 166],"float32"), )
paddle.diag(Tensor([13998168, 163],"float32"), )
paddle.diag(Tensor([14084577, 162],"float32"), )
paddle.diag(Tensor([14260634, 160],"float32"), )
paddle.diag(Tensor([14626291, 156],"float32"), )
paddle.diag(Tensor([14720655, 155],"float32"), )
paddle.diag(Tensor([1521135, 1500],"float32"), offset=-1, )
paddle.diag(Tensor([155, 14720655],"float32"), )
paddle.diag(Tensor([156, 14626291],"float32"), )
paddle.diag(Tensor([160, 14260634],"float32"), )
paddle.diag(Tensor([162, 14084577],"float32"), )
paddle.diag(Tensor([163, 13998168],"float32"), )
paddle.diag(Tensor([166, 13745190],"float32"), )
paddle.diag(Tensor([168, 13581556],"float32"), )
paddle.diag(Tensor([17, 134217729],"float32"), )
paddle.diag(Tensor([17027623, 134],"float32"), )
paddle.diag(Tensor([17155650, 133],"float32"), )
paddle.diag(Tensor([174, 13113227],"float32"), )
paddle.diag(Tensor([18, 126761188],"float32"), )
paddle.diag(Tensor([18108742, 126],"float32"), )
paddle.diag(Tensor([183, 12468314],"float32"), )
paddle.diag(Tensor([184, 12400551],"float32"), )
paddle.diag(Tensor([18400818, 124],"float32"), )
paddle.diag(Tensor([19336453, 118],"float32"), )
paddle.diag(Tensor([19840882, 115],"float32"), )
paddle.diag(Tensor([2000, 1140851],"float32"), )
paddle.diag(Tensor([2000, 1140851],"float32"), offset=-1, )
paddle.diag(Tensor([2000, 1140851],"float32"), offset=1, )
paddle.diag(Tensor([203, 11239909],"float32"), )
paddle.diag(Tensor([20742740, 110],"float32"), )
paddle.diag(Tensor([21, 108652447],"float32"), )
paddle.diag(Tensor([211, 10813751],"float32"), )
paddle.diag(Tensor([21126865, 108],"float32"), )
paddle.diag(Tensor([21324312, 107],"float32"), )
paddle.diag(Tensor([217, 10514753],"float32"), )
paddle.diag(Tensor([220, 10371370],"float32"), )
paddle.diag(Tensor([222, 10277935],"float32"), )
paddle.diag(Tensor([22369622, 102],"float32"), )
paddle.diag(Tensor([22591103, 101],"float32"), )
paddle.diag(Tensor([226, 10096024],"float32"), )
paddle.diag(Tensor([228170138, 10],"float32"), )
paddle.diag(Tensor([228170138, 10],"float32"), offset=-1, )
paddle.diag(Tensor([228170138, 10],"float32"), offset=1, )
paddle.diag(Tensor([23, 99204408],"float32"), )
paddle.diag(Tensor([23047489, 99],"float32"), )
paddle.diag(Tensor([23282668, 98],"float32"), )
paddle.diag(Tensor([23767723, 96],"float32"), )
paddle.diag(Tensor([24273419, 94],"float32"), )
paddle.diag(Tensor([243, 9389718],"float32"), )
paddle.diag(Tensor([25637095, 89],"float32"), )
paddle.diag(Tensor([25928425, 88],"float32"), )
paddle.diag(Tensor([262, 8708784],"float32"), )
paddle.diag(Tensor([264, 8642809],"float32"), )
paddle.diag(Tensor([26843546, 85],"float32"), )
paddle.diag(Tensor([27, 84507459],"float32"), )
paddle.diag(Tensor([27490379, 83],"float32"), )
paddle.diag(Tensor([27825627, 82],"float32"), )
paddle.diag(Tensor([28521268, 80],"float32"), )
paddle.diag(Tensor([29, 78679358],"float32"), )
paddle.diag(Tensor([29252582, 78],"float32"), )
paddle.diag(Tensor([29632486, 77],"float32"), )
paddle.diag(Tensor([30833803, 74],"float32"), )
paddle.diag(Tensor([31, 73603271],"float32"), )
paddle.diag(Tensor([31256184, 73],"float32"), )
paddle.diag(Tensor([32136640, 71],"float32"), )
paddle.diag(Tensor([33, 69142467],"float32"), )
paddle.diag(Tensor([33068136, 69],"float32"), )
paddle.diag(Tensor([33554433, 68],"float32"), )
paddle.diag(Tensor([34, 67108865],"float32"), )
paddle.diag(Tensor([35, 65191468],"float32"), )
paddle.diag(Tensor([35651585, 64],"float32"), )
paddle.diag(Tensor([38672905, 59],"float32"), )
paddle.diag(Tensor([39339679, 58],"float32"), )
paddle.diag(Tensor([4, 1073741825],"float16"), )
paddle.diag(Tensor([4, 570425345],"float32"), )
paddle.diag(Tensor([40, 57042535],"float32"), )
paddle.diag(Tensor([40029849, 57],"float32"), )
paddle.diag(Tensor([42253730, 54],"float32"), )
paddle.diag(Tensor([43878873, 52],"float32"), )
paddle.diag(Tensor([44739243, 51],"float32"), )
paddle.diag(Tensor([456340276, 5],"float32"), )
paddle.diag(Tensor([47535446, 48],"float32"), )
paddle.diag(Tensor([48, 47535446],"float32"), )
paddle.diag(Tensor([5, 456340276],"float32"), )
paddle.diag(Tensor([5, 858993460],"float16"), )
paddle.diag(Tensor([51, 44739243],"float32"), )
paddle.diag(Tensor([52, 43878873],"float32"), )
paddle.diag(Tensor([54, 42253730],"float32"), )
paddle.diag(Tensor([57, 40029849],"float32"), )
paddle.diag(Tensor([570425345, 4],"float32"), )
paddle.diag(Tensor([57042535, 40],"float32"), )
paddle.diag(Tensor([58, 39339679],"float32"), )
paddle.diag(Tensor([59, 38672905],"float32"), )
paddle.diag(Tensor([64, 35651585],"float32"), )
paddle.diag(Tensor([65191468, 35],"float32"), )
paddle.diag(Tensor([67108865, 34],"float32"), )
paddle.diag(Tensor([68, 33554433],"float32"), )
paddle.diag(Tensor([69, 33068136],"float32"), )
paddle.diag(Tensor([69142467, 33],"float32"), )
paddle.diag(Tensor([71, 32136640],"float32"), )
paddle.diag(Tensor([73, 31256184],"float32"), )
paddle.diag(Tensor([73603271, 31],"float32"), )
paddle.diag(Tensor([74, 30833803],"float32"), )
paddle.diag(Tensor([77, 29632486],"float32"), )
paddle.diag(Tensor([78, 29252582],"float32"), )
paddle.diag(Tensor([78679358, 29],"float32"), )
paddle.diag(Tensor([80, 28521268],"float32"), )
paddle.diag(Tensor([82, 27825627],"float32"), )
paddle.diag(Tensor([83, 27490379],"float32"), )
paddle.diag(Tensor([84507459, 27],"float32"), )
paddle.diag(Tensor([85, 26843546],"float32"), )
paddle.diag(Tensor([858993460, 5],"float16"), )
paddle.diag(Tensor([8642809, 264],"float32"), )
paddle.diag(Tensor([8708784, 262],"float32"), )
paddle.diag(Tensor([88, 25928425],"float32"), )
paddle.diag(Tensor([89, 25637095],"float32"), )
paddle.diag(Tensor([9389718, 243],"float32"), )
paddle.diag(Tensor([94, 24273419],"float32"), )
paddle.diag(Tensor([96, 23767723],"float32"), )
paddle.diag(Tensor([98, 23282668],"float32"), )
paddle.diag(Tensor([99, 23047489],"float32"), )
paddle.diag(Tensor([99204408, 23],"float32"), )
paddle.diag(x=Tensor([1431655766, 3],"float16"), )
paddle.diag(x=Tensor([1431655766, 3],"float16"), offset=-1, )
paddle.diag(x=Tensor([1431655766, 3],"float16"), offset=0, )
paddle.diag(x=Tensor([1431655766, 3],"float16"), offset=1, )
paddle.diag(x=Tensor([1431655766, 3],"float16"), offset=2, )
paddle.diag(x=Tensor([2, 2147483649],"float16"), offset=-1, )
paddle.diag(x=Tensor([2, 2147483649],"float16"), offset=0, )
paddle.diag(x=Tensor([2, 2147483649],"float16"), offset=2, )
paddle.diag(x=Tensor([2147483649, 2],"float16"), )
paddle.diag(x=Tensor([2147483649, 2],"float16"), offset=-1, )
paddle.diag(x=Tensor([2147483649, 2],"float16"), offset=0, )
paddle.diag(x=Tensor([2147483649, 2],"float16"), offset=1, )
paddle.diag(x=Tensor([3, 1431655766],"float16"), )
paddle.diag(x=Tensor([3, 1431655766],"float16"), offset=-1, )
paddle.diag(x=Tensor([3, 1431655766],"float16"), offset=0, )
paddle.diag(x=Tensor([3, 1431655766],"float16"), offset=1, )
paddle.diag(x=Tensor([4294967297, 1],"float16"), )
paddle.diag_embed(Tensor([1140850690, 2],"float32"), )
paddle.diagonal(Tensor([1, 1140850690, 2],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(Tensor([1, 2, 1140850690],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(Tensor([10, 3, 76056713],"float32"), )
paddle.diagonal(Tensor([10, 3, 76056713],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([10, 3, 76056713],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(Tensor([10, 3, 76056713],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(Tensor([10, 57042535, 4],"float32"), )
paddle.diagonal(Tensor([10, 57042535, 4],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([10, 57042535, 4],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(Tensor([10, 57042535, 4],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(Tensor([190141782, 3, 4],"float32"), )
paddle.diagonal(Tensor([190141782, 3, 4],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([190141782, 3, 4],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(Tensor([190141782, 3, 4],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(Tensor([2, 285212673, 4],"float32"), )
paddle.diagonal(Tensor([2, 285212673, 4],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([2, 285212673, 4],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(Tensor([2, 285212673, 4],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(Tensor([2, 3, 380283564],"float32"), )
paddle.diagonal(Tensor([2, 3, 380283564],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([2, 3, 380283564],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(Tensor([2, 3, 380283564],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(Tensor([570425345, 2, 2],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(x=Tensor([119304648, 6, 6],"float16"), )
paddle.diagonal(x=Tensor([19884108, 6, 6, 6],"float16"), )
paddle.diagonal(x=Tensor([29826162, 6, 6, 2, 2],"float16"), )
paddle.diagonal(x=Tensor([29826162, 6, 6, 2, 2],"float16"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([29826162, 6, 6, 2, 2],"float16"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([29826162, 6, 6, 2, 2],"float16"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([29826162, 6, 6, 2, 2],"float16"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([29826162, 6, 6, 2, 2],"float16"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([380283564, 6],"float32"), )
paddle.diagonal(x=Tensor([380283564, 6],"int32"), )
paddle.diagonal(x=Tensor([380283564, 6],"int64"), )
paddle.diagonal(x=Tensor([6, 119304648, 6],"float16"), )
paddle.diagonal(x=Tensor([6, 19884108, 6, 6],"float16"), )
paddle.diagonal(x=Tensor([6, 29826162, 6, 2, 2],"float16"), )
paddle.diagonal(x=Tensor([6, 29826162, 6, 2, 2],"float16"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 29826162, 6, 2, 2],"float16"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 29826162, 6, 2, 2],"float16"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 29826162, 6, 2, 2],"float16"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 29826162, 6, 2, 2],"float16"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 380283564],"float32"), )
paddle.diagonal(x=Tensor([6, 380283564],"int32"), )
paddle.diagonal(x=Tensor([6, 380283564],"int64"), )
paddle.diagonal(x=Tensor([6, 6, 119304648],"float16"), )
paddle.diagonal(x=Tensor([6, 6, 19884108, 6],"float16"), )
paddle.diagonal(x=Tensor([6, 6, 29826162, 2, 2],"float16"), )
paddle.diagonal(x=Tensor([6, 6, 29826162, 2, 2],"float16"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 29826162, 2, 2],"float16"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 29826162, 2, 2],"float16"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 29826162, 2, 2],"float16"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 29826162, 2, 2],"float16"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 6, 19884108],"float16"), )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 9942054],"float16"), )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 9942054],"float16"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 9942054],"float16"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 9942054],"float16"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 9942054],"float16"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 9942054],"float16"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 6, 9942054, 2],"float16"), )
paddle.diagonal(x=Tensor([6, 6, 6, 9942054, 2],"float16"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 6, 9942054, 2],"float16"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 9942054, 2],"float16"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 9942054, 2],"float16"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 6, 9942054, 2],"float16"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 715827883],"float16"), )
paddle.diagonal(x=Tensor([6, 715827883],"float16"), offset=-1, )
paddle.diagonal(x=Tensor([6, 715827883],"float16"), offset=1, )
paddle.diagonal(x=Tensor([715827883, 6],"float16"), )
paddle.diagonal(x=Tensor([715827883, 6],"float16"), offset=-1, )
paddle.diagonal(x=Tensor([715827883, 6],"float16"), offset=1, )
paddle.diagonal_scatter(Tensor([10, 228170138],"bool"), Tensor([10],"bool"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([10, 228170138],"int32"), Tensor([10],"int32"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([10, 429496730],"int16"), Tensor([10],"int16"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([10, 429496730],"int8"), Tensor([10],"int8"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([10, 429496730],"uint8"), Tensor([10],"uint8"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([228170138, 10],"bool"), Tensor([10],"bool"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([228170138, 10],"int32"), Tensor([10],"int32"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([429496730, 10],"int16"), Tensor([10],"int16"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([429496730, 10],"int8"), Tensor([10],"int8"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([429496730, 10],"uint8"), Tensor([10],"uint8"), offset=0, axis1=0, axis2=1, )
paddle.diff(Tensor([10, 228170138],"float32"), n=1, axis=-1, prepend=None, append=None, )
paddle.diff(Tensor([1431655766, 3],"float16"), axis=1, )
paddle.diff(Tensor([2, 1140850690],"float32"), axis=1, )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=-1, prepend=None, append=Tensor([2, 3],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=-1, prepend=Tensor([2, 2],"float32"), append=Tensor([2, 3],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=-1, prepend=Tensor([2, 3],"float32"), append=None, )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=0, prepend=None, append=None, )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=0, prepend=None, append=Tensor([1, 1140850690],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=0, prepend=Tensor([2, 1140850690],"float32"), append=Tensor([2, 1140850690],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=0, prepend=Tensor([3, 1140850690],"float32"), append=None, )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=-1, prepend=None, append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=-1, prepend=Tensor([2, 4],"float32"), append=None, )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=-1, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=0, prepend=None, append=Tensor([2, 1140850690],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=0, prepend=Tensor([2, 1140850690],"float32"), append=None, )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=1, prepend=None, append=None, )
paddle.diff(Tensor([2, 2147483649],"float16"), axis=1, )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=-1, prepend=None, append=Tensor([2, 1140850690],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=-1, prepend=Tensor([2, 1140850690],"float32"), append=None, )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=-1, prepend=Tensor([2, 1140850690],"float32"), append=Tensor([2, 3],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=-1, prepend=Tensor([2, 2],"float32"), append=Tensor([2, 1140850690],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([570425345, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=-1, prepend=None, append=Tensor([2, 1140850690],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=-1, prepend=Tensor([2, 1140850690],"float32"), append=None, )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=-1, prepend=Tensor([2, 1140850690],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=-1, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 1140850690],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([570425345, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([570425345, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([2281701379],"bool"), n=1, axis=-1, prepend=None, append=None, )
paddle.diff(Tensor([2281701379],"float32"), )
paddle.diff(Tensor([2281701379],"float32"), n=1, axis=-1, prepend=None, append=None, )
paddle.diff(Tensor([2281701379],"float32"), n=2, axis=0, prepend=None, append=None, )
paddle.diff(Tensor([228170138, 10],"float32"), n=1, axis=-1, prepend=None, append=None, )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=-1, prepend=None, append=Tensor([570425345, 3],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=-1, prepend=Tensor([570425345, 3],"float32"), append=None, )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=None, append=None, )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([1, 4],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([3, 4],"float32"), append=None, )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=Tensor([570425345, 4],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=None, )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=1, prepend=None, append=None, )
paddle.diff(Tensor([760567127, 3],"float32"), axis=1, )
paddle.diff(x=Tensor([10, 429496730],"float16"), axis=0, prepend=Tensor([4, 429496730],"float16"), append=Tensor([4, 429496730],"float16"), )
paddle.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([1073741825, 4],"float16"), append=Tensor([4, 4],"float16"), )
paddle.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([1073741825, 4],"float16"), )
paddle.diff(x=Tensor([1073741825, 4],"float16"), )
paddle.diff(x=Tensor([1073741825, 4],"float16"), axis=0, prepend=Tensor([1073741825, 4],"float16"), append=Tensor([1073741825, 4],"float16"), )
paddle.diff(x=Tensor([1073741825, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([4, 4],"float16"), )
paddle.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), )
paddle.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), append=Tensor([4],"float16"), )
paddle.diff(x=Tensor([10],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4294967297],"float16"), )
paddle.diff(x=Tensor([2281701379],"float32"), )
paddle.diff(x=Tensor([2281701379],"int32"), )
paddle.diff(x=Tensor([2281701379],"int64"), )
paddle.diff(x=Tensor([268435457, 4, 4],"float16"), )
paddle.diff(x=Tensor([4, 1073741825],"float16"), )
paddle.diff(x=Tensor([4, 268435457, 4],"float16"), )
paddle.diff(x=Tensor([4, 4, 268435457],"float16"), )
paddle.diff(x=Tensor([4, 4, 4, 67108865],"float16"), )
paddle.diff(x=Tensor([4, 4, 4, 67108865],"float16"), axis=-2, )
paddle.diff(x=Tensor([4, 4, 4, 67108865],"float16"), axis=2, )
paddle.diff(x=Tensor([4, 4, 67108865, 4],"float16"), )
paddle.diff(x=Tensor([4, 4, 67108865, 4],"float16"), axis=-2, )
paddle.diff(x=Tensor([4, 4, 67108865, 4],"float16"), axis=2, )
paddle.diff(x=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.diff(x=Tensor([4, 67108865, 4, 4],"float16"), axis=-2, )
paddle.diff(x=Tensor([4, 67108865, 4, 4],"float16"), axis=2, )
paddle.diff(x=Tensor([4294967297],"float16"), )
paddle.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4294967297],"float16"), )
paddle.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4294967297],"float16"), append=Tensor([4294967297],"float16"), )
paddle.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), )
paddle.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4],"float16"), )
paddle.diff(x=Tensor([67108865, 4, 4, 4],"float16"), )
paddle.diff(x=Tensor([67108865, 4, 4, 4],"float16"), axis=-2, )
paddle.diff(x=Tensor([67108865, 4, 4, 4],"float16"), axis=2, )
paddle.digamma(Tensor([1, 1140850690, 2],"float32"), )
paddle.digamma(Tensor([1, 2, 1140850690],"float32"), )
paddle.digamma(Tensor([1, 2281701379],"float32"), )
paddle.digamma(Tensor([10, 10, 10, 4294968],"float16"), )
paddle.digamma(Tensor([10, 10, 21474837, 2],"float16"), )
paddle.digamma(Tensor([10, 10, 42949673],"float16"), )
paddle.digamma(Tensor([10, 20, 11408507],"float32"), )
paddle.digamma(Tensor([10, 21474837, 10, 2],"float16"), )
paddle.digamma(Tensor([10, 228170138, 1],"float32"), )
paddle.digamma(Tensor([10, 228170138],"float32"), )
paddle.digamma(Tensor([10, 42949673, 10],"float16"), )
paddle.digamma(Tensor([114085069, 20, 1],"float32"), )
paddle.digamma(Tensor([1140850690, 2],"float32"), )
paddle.digamma(Tensor([1398102, 3, 32, 32],"float16"), )
paddle.digamma(Tensor([1431655766, 3],"float16"), )
paddle.digamma(Tensor([190141782, 12],"float32"), )
paddle.digamma(Tensor([2, 1073741825, 2],"float16"), )
paddle.digamma(Tensor([2, 1140850690],"float32"), )
paddle.digamma(Tensor([2, 2, 570425345],"float32"), )
paddle.digamma(Tensor([2, 2147483649],"float16"), )
paddle.digamma(Tensor([2, 5, 429496730],"float16"), )
paddle.digamma(Tensor([2, 570425345, 2],"float32"), )
paddle.digamma(Tensor([21474837, 10, 10, 2],"float16"), )
paddle.digamma(Tensor([2281701379, 1],"float32"), )
paddle.digamma(Tensor([2281701379],"float32"), )
paddle.digamma(Tensor([4, 570425345],"float32"), )
paddle.digamma(Tensor([4294967297],"float16"), )
paddle.digamma(Tensor([42949673, 10, 10],"float16"), )
paddle.digamma(Tensor([429496730, 5, 2],"float16"), )
paddle.digamma(Tensor([570425345, 2, 2],"float32"), )
paddle.digamma(Tensor([742742, 3, 32, 32],"float32"), )
paddle.digamma(Tensor([760567127, 3],"float32"), )
paddle.digamma(Tensor([8, 278529, 32, 32],"float32"), )
paddle.digamma(Tensor([8, 3, 2970966, 32],"float32"), )
paddle.digamma(Tensor([8, 3, 32, 2970966],"float32"), )
paddle.digamma(Tensor([8, 3, 32, 5592406],"float16"), )
paddle.digamma(Tensor([8, 3, 5592406, 32],"float16"), )
paddle.digamma(Tensor([8, 524289, 32, 32],"float16"), )
paddle.digamma(Tensor([858993460, 5],"float16"), )
paddle.digamma(x=Tensor([119304648, 6, 6],"float16"), )
paddle.digamma(x=Tensor([1431655766, 3],"float16"), )
paddle.digamma(x=Tensor([19884108, 6, 6, 6],"float16"), )
paddle.digamma(x=Tensor([3, 1431655766],"float16"), )
paddle.digamma(x=Tensor([3, 6, 6, 6, 6628036],"float16"), )
paddle.digamma(x=Tensor([3, 6, 6, 6628036, 6],"float16"), )
paddle.digamma(x=Tensor([3, 6, 6628036, 6, 6],"float16"), )
paddle.digamma(x=Tensor([3, 6628036, 6, 6, 6],"float16"), )
paddle.digamma(x=Tensor([3, 760567127],"float32"), )
paddle.digamma(x=Tensor([3314018, 6, 6, 6, 6],"float16"), )
paddle.digamma(x=Tensor([6, 119304648, 6],"float16"), )
paddle.digamma(x=Tensor([6, 19884108, 6, 6],"float16"), )
paddle.digamma(x=Tensor([6, 6, 119304648],"float16"), )
paddle.digamma(x=Tensor([6, 6, 19884108, 6],"float16"), )
paddle.digamma(x=Tensor([6, 6, 6, 19884108],"float16"), )
paddle.digamma(x=Tensor([760567127, 3],"float32"), )
paddle.dist(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), 0, )
paddle.dist(Tensor([190141782, 2, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(Tensor([190141782, 2, 3, 2],"float32"), Tensor([190141782, 1, 3, 1],"float32"), 2, )
paddle.dist(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 0, )
paddle.dist(Tensor([2, 190141782, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(Tensor([2, 190141782, 3, 2],"float32"), Tensor([1, 190141782, 3, 1],"float32"), 2, )
paddle.dist(Tensor([2, 2, 285212673, 2],"float32"), Tensor([1, 1, 285212673, 1],"float32"), 2, )
paddle.dist(Tensor([2, 2, 3, 190141782],"float32"), Tensor([1, 1, 3, 190141782],"float32"), 2, )
paddle.dist(Tensor([2, 2, 3, 190141782],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(x=Tensor([1073741825, 4],"float16"), y=Tensor([1073741825, 4],"float16"), )
paddle.dist(x=Tensor([1073741825, 4],"float16"), y=Tensor([1073741825, 4],"float16"), p=1, )
paddle.dist(x=Tensor([10],"float16"), y=Tensor([429496730, 10],"float16"), )
paddle.dist(x=Tensor([10],"float16"), y=Tensor([429496730, 10],"float16"), p=4, )
paddle.dist(x=Tensor([2, 2147483649],"float16"), y=Tensor([2, 2147483649],"float16"), p=0, )
paddle.dist(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), p=0, )
paddle.dist(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), )
paddle.dist(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), p=1, )
paddle.dist(x=Tensor([4, 570425345],"float32"), y=Tensor([4, 570425345],"float32"), )
paddle.dist(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.dist(x=Tensor([570425345, 4],"float32"), y=Tensor([570425345, 4],"float32"), )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.divide(Tensor([1, 1, 1, 2281701379],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.divide(Tensor([1, 1, 1, 2281701379],"float32"), Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.divide(Tensor([1, 1, 2281701379, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.divide(Tensor([1, 1, 2281701379, 1],"float32"), Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.divide(Tensor([1, 1],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.divide(Tensor([1, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.divide(Tensor([1, 2281701379, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.divide(Tensor([1, 2281701379, 1, 1],"float32"), Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.divide(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.divide(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.divide(Tensor([1, 3],"float32"), Tensor([760567127, 3],"float32"), )
paddle.divide(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.divide(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.divide(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.divide(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.divide(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.divide(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), )
paddle.divide(Tensor([104, 21939437],"float32"), Tensor([104, 1],"float32"), )
paddle.divide(Tensor([104, 21939437],"float32"), Tensor([104, 21939437],"float32"), )
paddle.divide(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.divide(Tensor([1426064, 40, 40],"float32"), Tensor([1426064, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), name="Normal_probs", )
paddle.divide(Tensor([152113426, 3, 1, 5],"float32"), Tensor([152113426, 3, 1, 5],"float32"), )
paddle.divide(Tensor([158452, 3, 3, 40, 40],"float32"), Tensor([158452, 3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([158452, 3, 40, 40, 3],"float32"), Tensor([158452, 3, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([17825793, 128],"float32"), Tensor([17825793, 1],"float32"), )
paddle.divide(Tensor([190141782, 12],"float32"), Tensor([190141782, 12],"float32"), )
paddle.divide(Tensor([190141782, 3, 4],"float32"), Tensor([190141782, 3, 4],"float32"), )
paddle.divide(Tensor([1],"float16"), Tensor([4294967297],"float16"), )
paddle.divide(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.divide(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), name="Normal_probs", )
paddle.divide(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), name="Normal_probs", )
paddle.divide(Tensor([2, 228170138, 1, 5],"float32"), Tensor([2, 228170138, 1, 5],"float32"), )
paddle.divide(Tensor([2, 285212673, 4],"float32"), Tensor([2, 285212673, 4],"float32"), )
paddle.divide(Tensor([2, 3, 1, 380283564],"float32"), Tensor([2, 3, 1, 380283564],"float32"), )
paddle.divide(Tensor([2, 3, 1, 5],"float32"), Tensor([2, 3, 76056713, 5],"float32"), )
paddle.divide(Tensor([2, 3, 3, 126761188],"float32"), Tensor([2, 3, 1, 126761188],"float32"), )
paddle.divide(Tensor([2, 3, 3, 126761188],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.divide(Tensor([2, 3, 380283564],"float32"), Tensor([2, 3, 380283564],"float32"), )
paddle.divide(Tensor([2, 3, 76056713, 5],"float32"), Tensor([2, 3, 1, 5],"float32"), )
paddle.divide(Tensor([2, 3, 76056713, 5],"float32"), Tensor([2, 3, 76056713, 5],"float32"), )
paddle.divide(Tensor([2, 3, 95070891, 4],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.divide(Tensor([2, 3, 95070891, 4],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.divide(Tensor([2, 3, 95070891, 4],"float32"), Tensor([2, 3, 95070891, 1],"float32"), )
paddle.divide(Tensor([2, 3, 95070891, 4],"float32"), Tensor([2, 3, 95070891, 4],"float32"), )
paddle.divide(Tensor([2, 3, 95070891, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.divide(Tensor([2, 95070891, 3, 4],"float32"), Tensor([2, 95070891, 1, 1],"float32"), )
paddle.divide(Tensor([2, 95070891, 3, 4],"float32"), Tensor([2, 95070891, 1, 4],"float32"), )
paddle.divide(Tensor([2281701379, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.divide(Tensor([2281701379, 1, 1, 1],"float32"), Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.divide(Tensor([2281701379, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.divide(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.divide(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.divide(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.divide(Tensor([3, 100, 14316558],"float16"), Tensor([3, 100, 14316558],"float16"), )
paddle.divide(Tensor([3, 11930465, 120],"float16"), Tensor([3, 11930465, 120],"float16"), )
paddle.divide(Tensor([3, 158452, 3, 40, 40],"float32"), Tensor([3, 158452, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 158452, 40, 40, 3],"float32"), Tensor([3, 158452, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 19014179, 40],"float32"), Tensor([3, 19014179, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 158452, 40, 40],"float32"), Tensor([3, 3, 158452, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 2112687, 40, 3],"float32"), Tensor([3, 3, 2112687, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 3, 2112687, 40],"float32"), Tensor([3, 3, 3, 2112687, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 3, 40, 2112687],"float32"), Tensor([3, 3, 3, 40, 2112687],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 2112687, 3],"float32"), Tensor([3, 3, 40, 2112687, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 40, 158452],"float32"), Tensor([3, 3, 40, 40, 158452],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 6338060],"float32"), Tensor([3, 3, 40, 6338060],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 6338060, 40],"float32"), Tensor([3, 3, 6338060, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 19014179],"float32"), Tensor([3, 40, 19014179],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 40, 475355],"float32"), Tensor([3, 40, 40, 475355],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 6338060, 3],"float32"), Tensor([3, 40, 6338060, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 475355, 40, 40],"float32"), Tensor([3, 475355, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 6338060, 40, 3],"float32"), Tensor([3, 6338060, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([357913942, 12],"float16"), Tensor([357913942, 12],"float16"), )
paddle.divide(Tensor([357914, 100, 120],"float16"), Tensor([357914, 100, 120],"float16"), )
paddle.divide(Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.divide(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.divide(Tensor([475355, 3, 40, 40],"float32"), Tensor([475355, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([475355, 40, 40, 3],"float32"), Tensor([475355, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([63380594, 3, 3, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.divide(Tensor([63380594, 3, 3, 4],"float32"), Tensor([63380594, 3, 1, 1],"float32"), )
paddle.divide(Tensor([63380594, 3, 3, 4],"float32"), Tensor([63380594, 3, 1, 4],"float32"), )
paddle.divide(Tensor([760567127, 3],"float32"), Tensor([1, 3],"float32"), )
paddle.divide(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), )
paddle.divide(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), name="Normal_probs", )
paddle.divide(x=Tensor([2281701379],"float32"), y=Tensor([2281701379],"float32"), )
paddle.divide(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.divide(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), name=None, )
paddle.divide(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1],"float16"), name=None, )
paddle.divide(x=Tensor([3, 1],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.divide(x=Tensor([3, 1],"float16"), y=Tensor([3, 1431655766],"float16"), name=None, )
paddle.divide(x=Tensor([3, 477218589, 3],"float16"), y=Tensor([3],"float16"), )
paddle.divide(x=Tensor([3],"float16"), y=Tensor([4294967297, 1],"float16"), )
paddle.divide(x=Tensor([4294967297, 1],"float16"), y=Tensor([4294967297, 1],"float16"), name=None, )
paddle.divide(x=Tensor([4294967297, 1],"float16"), y=Tensor([4294967297, 2],"float16"), )
paddle.divide(x=Tensor([4294967297],"float16"), y=Tensor([3, 1],"float16"), )
paddle.divide(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.divide(x=Tensor([477218589, 3, 3],"float16"), y=Tensor([3],"float16"), )
paddle.divide(x=Tensor([760567127, 3],"float32"), y=Tensor([3],"float32"), )
paddle.dsplit(Tensor([126761188, 3, 6],"int64"), list[-1,1,3,], )
paddle.dsplit(Tensor([126761188, 3, 6],"int64"), list[-1,], )
paddle.dsplit(Tensor([126761188, 3, 6],"int64"), list[2,4,], )
paddle.dsplit(Tensor([126761188, 3, 6],"int64"), tuple(2,1,3,), )
paddle.dsplit(Tensor([4, 3, 190141782],"int64"), list[-1,], )
paddle.dsplit(Tensor([4, 3, 190141782],"int64"), list[2,4,], )
paddle.dsplit(Tensor([4, 3, 190141782],"int64"), tuple(2,1,3,), )
paddle.dsplit(Tensor([4, 95070891, 6],"int64"), list[-1,1,3,], )
paddle.dsplit(Tensor([4, 95070891, 6],"int64"), list[-1,], )
paddle.dsplit(Tensor([4, 95070891, 6],"int64"), list[2,4,], )
paddle.dsplit(Tensor([4, 95070891, 6],"int64"), tuple(2,1,3,), )
paddle.dstack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 1],"float16"),Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 4294967297, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 4294967297, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 4294967297, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.dstack(list[Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.dstack(list[Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),], )
paddle.dstack(list[Tensor([2147483649, 2],"float16"),], )
paddle.dstack(list[Tensor([2],"float16"),Tensor([1, 2, 2147483649],"float16"),], )
paddle.dstack(list[Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),], )
paddle.dstack(list[Tensor([3, 1431655766],"float16"),], )
paddle.dstack(list[Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),], )
paddle.dstack(list[Tensor([3, 143165577, 2, 5],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 2, 178956971],"float16"),Tensor([3, 4, 2, 178956971],"float16"),Tensor([3, 4, 2, 178956971],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 2, 178956971],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),Tensor([3, 4, 357913942],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 2],"float16"),Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 2],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 357913942],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 71582789, 5],"float16"),], )
paddle.dstack(list[Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),], )
paddle.dstack(list[Tensor([3, 715827883, 2],"float16"),], )
paddle.dstack(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([4294967297, 1, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([4294967297, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),], )
paddle.dstack(list[Tensor([4294967297, 1],"float16"),], )
paddle.dstack(list[Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),], )
paddle.dstack(list[Tensor([4294967297],"float16"),], )
paddle.dstack(list[Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),], )
paddle.dstack(list[Tensor([536870913, 4, 2],"float16"),], )
paddle.einsum("..., ...", Tensor([3, 10],"float16"), Tensor([143165577, 3, 10],"float16"), )
paddle.einsum("...,...", Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.einsum("...,...->...", Tensor([171798692, 5, 5],"float16"), Tensor([171798692, 5, 5],"float16"), )
paddle.einsum("...,...->...", Tensor([5, 171798692, 5],"float16"), Tensor([5, 171798692, 5],"float16"), )
paddle.einsum("...,...->...", Tensor([5, 5, 171798692],"float16"), Tensor([5, 5, 171798692],"float16"), )
paddle.einsum("...->...", Tensor([171798692, 5, 5],"float16"), )
paddle.einsum("...->...", Tensor([5, 171798692, 5],"float16"), )
paddle.einsum("...->...", Tensor([5, 5, 171798692],"float16"), )
paddle.einsum("...hqk,...khd->...qhd", Tensor([22283, 16, 128, 50],"float32"), Tensor([22283, 50, 16, 16],"float32"), )
paddle.einsum("...hqk,...khd->...qhd", Tensor([256, 16, 11142, 50],"float32"), Tensor([256, 50, 16, 16],"float32"), )
paddle.einsum("...hqk,...khd->...qhd", Tensor([256, 16, 128, 50],"float32"), Tensor([256, 50, 16, 11142],"float32"), )
paddle.einsum("...i, ...i", Tensor([143165577, 3, 10],"float16"), Tensor([10],"float16"), )
paddle.einsum("...i, ...i", Tensor([2, 214748365, 10],"float16"), Tensor([10],"float16"), )
paddle.einsum("...i->...", Tensor([143165577, 3, 10],"float16"), )
paddle.einsum("...i->...", Tensor([2, 214748365, 10],"float16"), )
paddle.einsum("...i->...", Tensor([2, 3, 715827883],"float16"), )
paddle.einsum("...ii,...i->...i", Tensor([176487, 13, 13, 12, 12],"float16"), Tensor([1, 12],"float16"), )
paddle.einsum("...ii,...i->...i", Tensor([32, 13, 71698, 12, 12],"float16"), Tensor([1, 12],"float16"), )
paddle.einsum("...ii,...i->...i", Tensor([32, 71698, 13, 12, 12],"float16"), Tensor([1, 12],"float16"), )
paddle.einsum("...ij,...jk->...ik", Tensor([1, 5],"float16"), Tensor([5, 858993460],"float16"), )
paddle.einsum("...ij,...jk->...ik", Tensor([858993460, 5],"float16"), Tensor([5, 1],"float16"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 6, 8, 8],"float32"), Tensor([2, 2970966, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 28, 28],"float32"), Tensor([485056, 6, 28, 28],"float32"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([143165577, 10, 3],"float16"), Tensor([143165577, 3, 10],"float16"), )
paddle.einsum("...jk->...kj", Tensor([143165577, 10, 3],"float16"), )
paddle.einsum("...jk->...kj", Tensor([3, 10, 143165577],"float16"), )
paddle.einsum("...jk->...kj", Tensor([3, 477218589, 3],"float16"), )
paddle.einsum("...km,mlk->...lm", Tensor([139265, 32, 32, 16],"float32"), Tensor([16, 32, 32],"float32"), )
paddle.einsum("...km,mlk->...lm", Tensor([4, 1114113, 32, 16],"float32"), Tensor([16, 32, 32],"float32"), )
paddle.einsum("...lm, mlk->...km", Tensor([139265, 32, 32, 16],"float32"), Tensor([16, 32, 32],"float32"), )
paddle.einsum("...lm, mlk->...km", Tensor([4, 1114113, 32, 16],"float32"), Tensor([16, 32, 32],"float32"), )
paddle.einsum("...qhd,...khd->...hqk", Tensor([256, 128, 16, 4353],"float32"), Tensor([256, 50, 16, 4353],"float32"), )
paddle.einsum("...qhd,...khd->...hqk", Tensor([256, 128, 4353, 16],"float32"), Tensor([256, 50, 4353, 16],"float32"), )
paddle.einsum("...qhd,...khd->...hqk", Tensor([256, 34817, 16, 16],"float32"), Tensor([256, 50, 16, 16],"float32"), )
paddle.einsum("...qhd,...khd->...hqk", Tensor([69633, 128, 16, 16],"float32"), Tensor([69633, 50, 16, 16],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 1, 2],"float32"), Tensor([13, 4, 3, 2, 7313146],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 7313146, 2],"float32"), Tensor([13, 4, 3, 2, 8],"float32"), )
paddle.einsum("a...a->...", Tensor([5, 21474837, 2, 1, 4, 5],"float16"), )
paddle.einsum("a...a->...", Tensor([5, 3, 14316558, 1, 4, 5],"float16"), )
paddle.einsum("a...a->...", Tensor([5, 3, 2, 1, 28633116, 5],"float16"), )
paddle.einsum("a...a->...", Tensor([5, 3, 2, 7158279, 4, 5],"float16"), )
paddle.einsum("a...a->a...", Tensor([5, 21474837, 2, 1, 4, 5],"float16"), )
paddle.einsum("a...a->a...", Tensor([5, 3, 14316558, 1, 4, 5],"float16"), )
paddle.einsum("a...a->a...", Tensor([5, 3, 2, 1, 28633116, 5],"float16"), )
paddle.einsum("a...a->a...", Tensor([5, 3, 2, 7158279, 4, 5],"float16"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float16"), Tensor([4, 3, 1, 4],"float16"), Tensor([4, 3, 89478486, 4],"float16"), )
paddle.einsum("a...b,b...c,c...d", Tensor([357913942, 3, 1, 4],"float16"), Tensor([4, 3, 1, 4],"float16"), Tensor([4, 3, 1, 4],"float16"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 4],"float16"), Tensor([4, 3, 1, 4],"float16"), Tensor([4, 3, 1, 357913942],"float16"), )
paddle.einsum("abcd,bec->aecd", Tensor([139265, 32, 32, 16],"float32"), Tensor([32, 32, 32],"float32"), )
paddle.einsum("abcd,bec->aecd", Tensor([4, 32, 32, 16],"float32"), Tensor([32, 2228225, 32],"float32"), )
paddle.einsum("abcd,bec->aecd", Tensor([4, 32, 32, 557057],"float32"), Tensor([32, 32, 32],"float32"), )
paddle.einsum("abcd,becd->aecd", Tensor([16, 128, 8, 5],"float32"), Tensor([128, 445645, 8, 5],"float32"), )
paddle.einsum("abcd,becd->aecd", Tensor([445645, 128, 8, 5],"float32"), Tensor([128, 64, 8, 5],"float32"), )
paddle.einsum("abcd,dfg->abcfg", Tensor([2, 143165577, 5, 3],"float16"), Tensor([3, 4, 5],"float16"), )
paddle.einsum("abcd,dfg->abcfg", Tensor([71582789, 4, 5, 3],"float16"), Tensor([3, 4, 5],"float16"), )
paddle.einsum("acdbi,bio->acdbo", Tensor([32, 15, 18569, 8, 32],"float32"), Tensor([8, 32, 32],"float32"), )
paddle.einsum("acdbi,bio->acdbo", Tensor([32, 34817, 8, 8, 32],"float32"), Tensor([8, 32, 32],"float32"), )
paddle.einsum("acdbi,bio->acdbo", Tensor([74275, 15, 8, 8, 32],"float32"), Tensor([8, 32, 32],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([207427399, 11],"float32"), Tensor([11, 50],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 35651585, 1, 64],"float32"), Tensor([1, 35651585, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 285212673],"float32"), Tensor([1, 8, 1, 285212673],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 8, 4456449, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([4456449, 8, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 4456449, 64],"float32"), Tensor([1, 8, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4456449, 8, 1, 64],"float32"), Tensor([1, 8, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4456449, 8, 1, 64],"float32"), Tensor([4456449, 8, 1, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 109],"float32"), Tensor([1, 8, 109, 2616631],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 109],"float32"), Tensor([40885, 8, 109, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 2616631, 109],"float32"), Tensor([1, 8, 109, 64],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1, 8],"float32"), Tensor([13, 4, 5, 1096972, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1096972, 8],"float32"), Tensor([13, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([13, 4, 3, 1, 14626291],"float32"), Tensor([13, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([13, 4, 3, 1, 1],"float32"), Tensor([13, 4, 1, 43878873],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([13, 4, 3, 1, 1],"float32"), Tensor([13, 4, 5484860, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 7],"float32"), Tensor([13, 4, 1, 7, 6268411],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 7],"float32"), Tensor([13, 4, 783552, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 6268411, 7],"float32"), Tensor([13, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([181896, 14, 14, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([432, 14, 5895, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([181896, 14, 14, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([432, 5895, 14, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bi,bi->b", Tensor([10000, 228171],"float32"), Tensor([10000, 228171],"float32"), )
paddle.einsum("bi,bi->b", Tensor([57042535, 40],"float32"), Tensor([57042535, 40],"float32"), )
paddle.einsum("bij,bjk->bik", Tensor([214748365, 4, 5],"float16"), Tensor([214748365, 5, 2],"float16"), )
paddle.einsum("bij,bjk->bik", Tensor([3, 286331154, 5],"float16"), Tensor([3, 5, 2],"float16"), )
paddle.einsum("bij,bjk->bik", Tensor([3, 4, 5],"float16"), Tensor([3, 5, 286331154],"float16"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 10969719, 4, 4],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 21939437, 4],"float32"), Tensor([13, 2, 21939437, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 21939437],"float32"), Tensor([13, 2, 4, 21939437],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 4],"float32"), Tensor([13, 10969719, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([71303169, 2, 4, 4],"float32"), Tensor([71303169, 2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 10969719, 4, 4],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([71303169, 2, 4, 4],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 10969719, 4, 4],"float32"), Tensor([4, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([71303169, 2, 4, 4],"float32"), Tensor([4, 4, 4],"float32"), )
paddle.einsum("bix,iox->box", Tensor([20, 64, 64],"float32"), Tensor([64, 557057, 64],"float32"), )
paddle.einsum("bix,iox->box", Tensor([557057, 64, 64],"float32"), Tensor([64, 64, 64],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 1, 1],"float32"), Tensor([13, 5, 1, 35103099],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 1, 1],"float32"), Tensor([13, 5, 11701033, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 35103099, 1],"float32"), Tensor([13, 5, 1, 3],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 175515491, 1, 1],"float32"), Tensor([13, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 175515491, 1, 1],"float32"), Tensor([13, 175515491, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 5, 1, 1],"float32"), Tensor([13, 1, 1, 175515491],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 5, 1, 1],"float32"), Tensor([13, 175515491, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 5, 1, 35103099],"float32"), Tensor([13, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 5, 35103099, 1],"float32"), Tensor([13, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([456340276, 5, 1, 1],"float32"), Tensor([456340276, 1, 1, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 2, 5484860, 16],"float32"), Tensor([2, 16, 4, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([4456449, 2, 16, 16],"float32"), Tensor([2, 16, 4, 1],"float32"), )
paddle.einsum("bn,anm,bm->ba", Tensor([2, 5],"float16"), Tensor([429496730, 5, 2],"float16"), Tensor([2, 2],"float16"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 2],"float32"), Tensor([13, 2, 4, 21939437],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 21939437, 2],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 7, 7],"float32"), Tensor([7, 10, 4, 8148934],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 8148934, 7],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("i,i->i", Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.einsum("i,ij->", Tensor([2],"float16"), Tensor([2, 2147483649],"float16"), )
paddle.einsum("i,j->ii", Tensor([2],"float16"), Tensor([4294967297],"float16"), )
paddle.einsum("i->", Tensor([4294967297],"float16"), )
paddle.einsum("i..., i...", Tensor([1, 2147483649, 2],"float16"), Tensor([1],"float16"), )
paddle.einsum("i..., i...", Tensor([1, 3, 1431655766],"float16"), Tensor([1],"float16"), )
paddle.einsum("i..., i...", Tensor([1, 3, 2],"float16"), Tensor([4294967297],"float16"), )
paddle.einsum("i..., i...", Tensor([715827883, 3, 2],"float16"), Tensor([1],"float16"), )
paddle.einsum("i...->...", Tensor([143165577, 3, 10],"float16"), )
paddle.einsum("i...->...", Tensor([2, 2147483649],"float16"), )
paddle.einsum("i...->...", Tensor([2, 214748365, 10],"float16"), )
paddle.einsum("i...->...", Tensor([2, 3, 715827883],"float16"), )
paddle.einsum("i...->...", Tensor([429496730, 10],"float16"), )
paddle.einsum("i...->...", Tensor([47721859, 10, 3, 3],"float16"), )
paddle.einsum("i...->...", Tensor([5, 10, 28633116, 3],"float16"), )
paddle.einsum("i...->...", Tensor([5, 10, 3, 28633116],"float16"), )
paddle.einsum("i...->...", Tensor([5, 95443718, 3, 3],"float16"), )
paddle.einsum("ibm,hm->ibh", Tensor([1, 14, 32],"float32"), Tensor([71303169, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([1, 71303169, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([5093084, 14, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 8],"float32"), Tensor([7130317, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,snd->ibns", Tensor([5093084, 14, 4, 8],"float32"), Tensor([2, 4, 8],"float32"), )
paddle.einsum("ibnd,snd->ibns", Tensor([7, 10186167, 4, 8],"float32"), Tensor([2, 4, 8],"float32"), )
paddle.einsum("ic,pi->pc", Tensor([200, 11408507],"float32"), Tensor([128, 200],"float32"), )
paddle.einsum("ic,pi->pc", Tensor([200, 256],"float32"), Tensor([11408507, 200],"float32"), )
paddle.einsum("ij, j", Tensor([429496730, 10],"float16"), Tensor([10],"float16"), )
paddle.einsum("ij,...i->j...", Tensor([4, 1073741825],"float16"), Tensor([3, 2, 4],"float16"), )
paddle.einsum("ij,...i->j...", Tensor([4, 5],"float16"), Tensor([3, 357913942, 4],"float16"), )
paddle.einsum("ij,...i->j...", Tensor([4, 5],"float16"), Tensor([536870913, 2, 4],"float16"), )
paddle.einsum("ij,i->", Tensor([2, 2147483649],"float16"), Tensor([2],"float16"), )
paddle.einsum("ij,ij->ij", Tensor([4, 1073741825],"float16"), Tensor([4, 1073741825],"float16"), )
paddle.einsum("ij,ij->ij", Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), )
paddle.einsum("ij,j", Tensor([1, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.einsum("ij,j", Tensor([1, 4294967297],"float16"), Tensor([1],"float16"), )
paddle.einsum("ij,j", Tensor([4294967297, 1],"float16"), Tensor([1],"float16"), )
paddle.einsum("ij,j->i", Tensor([858993460, 5],"float16"), Tensor([5],"float16"), )
paddle.einsum("ij,jk", Tensor([4, 10],"float16"), Tensor([10, 429496730],"float16"), )
paddle.einsum("ij,jk", Tensor([429496730, 10],"float16"), Tensor([10, 6],"float16"), )
paddle.einsum("ij,jk,kl", Tensor([1073741825, 4],"float16"), Tensor([4, 5],"float16"), Tensor([5, 6],"float16"), )
paddle.einsum("ij,jk,kl", Tensor([3, 4],"float16"), Tensor([4, 5],"float16"), Tensor([5, 858993460],"float16"), )
paddle.einsum("ij,kj->ik", Tensor([4, 1073741825],"float16"), Tensor([2, 1073741825],"float16"), )
paddle.einsum("ij,kj->ik", Tensor([4, 5],"float16"), Tensor([858993460, 5],"float16"), )
paddle.einsum("ij,kj->ik", Tensor([858993460, 5],"float16"), Tensor([2, 5],"float16"), )
paddle.einsum("ij->", Tensor([1140850690, 2],"float32"), )
paddle.einsum("ij->", Tensor([2, 1140850690],"float32"), )
paddle.einsum("ij->i", Tensor([4, 1073741825],"float16"), )
paddle.einsum("ij->i", Tensor([858993460, 5],"float16"), )
paddle.einsum("ij->j", Tensor([4, 1073741825],"float16"), )
paddle.einsum("ij->j", Tensor([858993460, 5],"float16"), )
paddle.einsum("ij->ji", Tensor([4, 1073741825],"float16"), )
paddle.einsum("ij->ji", Tensor([858993460, 5],"float16"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([11641334, 7, 14, 2],"float32"), Tensor([11641334, 14, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 11641334, 14, 2],"float32"), Tensor([7, 14, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 14, 3326096],"float32"), Tensor([7, 14, 4, 3326096],"float32"), )
paddle.einsum("iji->j", Tensor([5, 171798692, 5],"float16"), )
paddle.einsum("ijk, ik->jk", Tensor([4, 214748365, 5],"float16"), Tensor([4, 5],"float16"), )
paddle.einsum("ijk, ikl->ijl", Tensor([143165577, 10, 3],"float16"), Tensor([143165577, 3, 10],"float16"), )
paddle.einsum("ijk, jil -> kl", Tensor([3, 4, 357913942],"float16"), Tensor([4, 3, 2],"float16"), )
paddle.einsum("ijk, jil -> kl", Tensor([3, 4, 5],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.einsum("ijk,jk->i", Tensor([214748365, 4, 5],"float16"), Tensor([4, 5],"float16"), )
paddle.einsum("ijk,jk->ij", Tensor([214748365, 4, 5],"float16"), Tensor([4, 5],"float16"), )
paddle.einsum("ijk,jk->ik", Tensor([214748365, 4, 5],"float16"), Tensor([4, 5],"float16"), )
paddle.einsum("ijk,lk->ijl", Tensor([214748365, 4, 5],"float16"), Tensor([2, 5],"float16"), )
paddle.einsum("ijk,lk->ijl", Tensor([3, 286331154, 5],"float16"), Tensor([2, 5],"float16"), )
paddle.einsum("ijk,lk->ijl", Tensor([3, 4, 5],"float16"), Tensor([858993460, 5],"float16"), )
paddle.einsum("ijk->kji", Tensor([143165577, 10, 3],"float16"), )
paddle.einsum("ijk->kji", Tensor([3, 10, 143165577],"float16"), )
paddle.einsum("ijk->kji", Tensor([3, 477218589, 3],"float16"), )
paddle.einsum("ijkl, lmn->ijn", Tensor([2, 143165577, 5, 3],"float16"), Tensor([3, 2, 4],"float16"), )
paddle.einsum("ijkl, lmn->ijn", Tensor([2, 4, 178956971, 3],"float16"), Tensor([3, 2, 4],"float16"), )
paddle.einsum("ijkl, lmn->ijn", Tensor([2, 4, 5, 3],"float16"), Tensor([3, 2, 715827883],"float16"), )
paddle.einsum("ijkl, lmn->ijn", Tensor([2, 4, 5, 3],"float16"), Tensor([3, 357913942, 4],"float16"), )
paddle.einsum("ijkl, lmn->ijn", Tensor([71582789, 4, 5, 3],"float16"), Tensor([3, 2, 4],"float16"), )
paddle.einsum("ijkl, lmn->kmn", Tensor([2, 143165577, 5, 3],"float16"), Tensor([3, 2, 4],"float16"), )
paddle.einsum("ijkl, lmn->kmn", Tensor([2, 4, 178956971, 3],"float16"), Tensor([3, 2, 4],"float16"), )
paddle.einsum("ijkl, lmn->kmn", Tensor([2, 4, 5, 3],"float16"), Tensor([3, 2, 715827883],"float16"), )
paddle.einsum("ijkl, lmn->kmn", Tensor([2, 4, 5, 3],"float16"), Tensor([3, 357913942, 4],"float16"), )
paddle.einsum("ijkl, lmn->kmn", Tensor([71582789, 4, 5, 3],"float16"), Tensor([3, 2, 4],"float16"), )
paddle.einsum("ik, ijk->j", Tensor([4, 5],"float16"), Tensor([4, 214748365, 5],"float16"), )
paddle.einsum("ji,i->", Tensor([2147483649, 2],"float16"), Tensor([2],"float16"), )
paddle.einsum("ji,j", Tensor([1, 4294967297],"float16"), Tensor([1],"float16"), )
paddle.einsum("ji,j", Tensor([1, 4],"float16"), Tensor([4294967297],"float16"), )
paddle.einsum("ji,j", Tensor([1073741825, 4],"float16"), Tensor([1],"float16"), )
paddle.einsum("lbnd,mlb->mbnd", Tensor([8, 14, 2546542, 8],"float32"), Tensor([1, 8, 14],"float32"), )
paddle.einsum("lbnd,mlb->mbnd", Tensor([8, 14, 4, 5093084],"float32"), Tensor([1, 8, 14],"float32"), )
paddle.einsum("mbnd,mlb->lbnd", Tensor([1, 14, 4, 8],"float32"), Tensor([20372334, 8, 14],"float32"), )
paddle.einsum("mbnd,mlb->lbnd", Tensor([5093084, 14, 4, 8],"float32"), Tensor([1, 8, 14],"float32"), )
paddle.einsum("mlk,k->mlk", Tensor([16, 8388609, 32],"float16"), Tensor([32],"float16"), )
paddle.einsum("mlk,k->mlk", Tensor([4194305, 32, 32],"float16"), Tensor([32],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 285212673, 4, 2],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 380283564, 2],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 4, 2],"float32"), Tensor([2, 2, 570425345],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 4, 2],"float32"), Tensor([2, 285212673, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([95070891, 3, 4, 2],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 126761188, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 6],"float32"), Tensor([6, 2, 190141782],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 6],"float32"), Tensor([6, 95070891, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 76056713, 5, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([25352238, 3, 5, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1, 3, 95070891, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 76056713],"float32"), Tensor([1, 3, 4, 2, 76056713],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 95070891, 2, 4],"float32"), Tensor([1, 3, 4, 2, 4],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 7, 8],"float32"), Tensor([2, 52, 2742430, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 11641334, 7, 14],"float32"), Tensor([2, 11641334, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 1567103, 14],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 7, 14],"float32"), Tensor([2, 52, 14, 1567103],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([447744, 52, 7, 14],"float32"), Tensor([447744, 52, 14, 8],"float32"), )
paddle.einsum("se,sec->sec", Tensor([10, 60],"float32"), Tensor([10, 60, 3802836],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([10, 60, 10],"float32"), Tensor([60, 10, 3802836],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([3802836, 60, 10],"float32"), Tensor([60, 10, 64],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([14, 32],"float32"), Tensor([32, 17825793, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([14, 32],"float32"), Tensor([32, 4, 17825793],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([71303169, 32],"float32"), Tensor([32, 4, 4],"float32"), )
paddle.equal(Tensor([1, 28, 81489335],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([1, 28, 81489335],"int32"), Tensor([6, 1, 81489335],"int32"), )
paddle.equal(Tensor([1, 285212673, 8],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([1, 285212673, 8],"int32"), Tensor([6, 285212673, 1],"int32"), )
paddle.equal(Tensor([1, 8, 285212673],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([1, 8, 285212673],"int32"), Tensor([6, 1, 285212673],"int32"), )
paddle.equal(Tensor([1, 81489335, 28],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([1, 81489335, 28],"int32"), Tensor([6, 81489335, 1],"int32"), )
paddle.equal(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.equal(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.equal(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.equal(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.equal(Tensor([10, 228170138],"int32"), 0, )
paddle.equal(Tensor([114, 1],"float16"), Tensor([114, 37675152],"float16"), )
paddle.equal(Tensor([114, 37675152],"float16"), Tensor([114, 1],"float16"), )
paddle.equal(Tensor([114, 37675152],"float16"), Tensor([114, 37675152],"float16"), )
paddle.equal(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.equal(Tensor([114085069, 20],"int32"), 0, )
paddle.equal(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), )
paddle.equal(Tensor([1140850690, 2],"int64"), Tensor([2],"int64"), )
paddle.equal(Tensor([126761188, 18],"float32"), Tensor([126761188, 18],"float32"), )
paddle.equal(Tensor([13, 175515491],"int32"), Tensor([13, 175515491],"int32"), )
paddle.equal(Tensor([13, 175515491],"int64"), 0, )
paddle.equal(Tensor([1431655766, 3],"float16"), 0, )
paddle.equal(Tensor([148, 5, 3083381],"float32"), Tensor([148, 5, 3083381],"float32"), )
paddle.equal(Tensor([148, 5138968, 3],"float32"), Tensor([148, 5138968, 3],"float32"), )
paddle.equal(Tensor([152113426, 5, 3],"float32"), Tensor([152113426, 5, 3],"float32"), )
paddle.equal(Tensor([18, 126761188],"float32"), Tensor([18, 126761188],"float32"), )
paddle.equal(Tensor([1948, 1171305],"float32"), Tensor([1948, 1171305],"float32"), )
paddle.equal(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.equal(Tensor([1],"int32"), Tensor([2281701379],"int32"), )
paddle.equal(Tensor([1],"int64"), Tensor([2281701379],"int64"), )
paddle.equal(Tensor([2, 1, 8, 142606337],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([2, 1140850690],"float32"), 0, )
paddle.equal(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), )
paddle.equal(Tensor([2, 1140850690],"int64"), 1, )
paddle.equal(Tensor([2, 1140850690],"int64"), Tensor([1],"int64"), )
paddle.equal(Tensor([2, 142606337, 8],"float32"), Tensor([2, 142606337, 8],"float32"), )
paddle.equal(Tensor([2, 1],"int64"), Tensor([2281701379],"int64"), )
paddle.equal(Tensor([2, 2147483649],"float16"), 0, )
paddle.equal(Tensor([2, 8, 142606337],"float32"), Tensor([2, 8, 142606337],"float32"), )
paddle.equal(Tensor([2281701379, 1],"int64"), Tensor([1],"int64"), )
paddle.equal(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.equal(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.equal(Tensor([2281701379],"int32"), 0, )
paddle.equal(Tensor([2281701379],"int32"), Tensor([1],"int32"), )
paddle.equal(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.equal(Tensor([2281701379],"int64"), 0, )
paddle.equal(Tensor([2281701379],"int64"), 1, )
paddle.equal(Tensor([2281701379],"int64"), 1.0, )
paddle.equal(Tensor([2281701379],"int64"), 10, )
paddle.equal(Tensor([2281701379],"int64"), 2, )
paddle.equal(Tensor([2281701379],"int64"), Tensor([1],"int64"), )
paddle.equal(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.equal(Tensor([2281701379],"int64"), True, )
paddle.equal(Tensor([28, 81489335],"float32"), Tensor([28, 81489335],"float32"), )
paddle.equal(Tensor([285212673, 8],"float32"), Tensor([285212673, 8],"float32"), )
paddle.equal(Tensor([285212673, 8],"int64"), Tensor([1],"int64"), )
paddle.equal(Tensor([2910334, 28, 28],"int32"), Tensor([2910334, 1, 1],"int32"), )
paddle.equal(Tensor([325957340, 7],"int32"), Tensor([325957340, 7],"int32"), )
paddle.equal(Tensor([325957340, 7],"int64"), 0, )
paddle.equal(Tensor([325957340, 7],"int64"), 1, )
paddle.equal(Tensor([35651585, 1, 8, 8],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([35651585, 8, 8],"float32"), Tensor([35651585, 8, 8],"float32"), )
paddle.equal(Tensor([35651585, 8, 8],"int32"), Tensor([35651585, 1, 1],"int32"), )
paddle.equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.equal(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.equal(Tensor([4, 570425345],"float32"), Tensor([4, 570425345],"float32"), )
paddle.equal(Tensor([4, 570425345],"int64"), Tensor([1],"int64"), )
paddle.equal(Tensor([400, 10737419],"float16"), Tensor([400, 10737419],"float16"), )
paddle.equal(Tensor([400, 10737419],"float16"), Tensor([400, 1],"float16"), )
paddle.equal(Tensor([400, 1],"float16"), Tensor([400, 10737419],"float16"), )
paddle.equal(Tensor([4148, 550073],"int64"), Tensor([4148, 550073],"int64"), )
paddle.equal(Tensor([416, 5484860],"int64"), 0, )
paddle.equal(Tensor([4294967297, 1],"float16"), Tensor([4294967297, 1],"float16"), )
paddle.equal(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.equal(Tensor([512, 4456449],"int64"), 0, )
paddle.equal(Tensor([52, 43878873],"int64"), 0, )
paddle.equal(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), )
paddle.equal(Tensor([570425345, 4],"int64"), Tensor([1],"int64"), )
paddle.equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.equal(Tensor([760567127, 3],"float32"), 0, )
paddle.equal(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), )
paddle.equal(Tensor([760567127, 3],"int64"), Tensor([3],"int64"), )
paddle.equal(Tensor([76056713, 30],"int64"), 0, )
paddle.equal(Tensor([76056713, 30],"int64"), Tensor([76056713, 30],"int64"), )
paddle.equal(Tensor([8, 285212673],"float32"), Tensor([8, 285212673],"float32"), )
paddle.equal(Tensor([8, 285212673],"int64"), Tensor([1],"int64"), )
paddle.equal(Tensor([81489335, 28],"float32"), Tensor([81489335, 28],"float32"), )
paddle.equal(Tensor([91, 1],"float16"), Tensor([91, 47197443],"float16"), )
paddle.equal(Tensor([91, 47197443],"float16"), Tensor([91, 1],"float16"), )
paddle.equal(Tensor([91, 47197443],"float16"), Tensor([91, 47197443],"float16"), )
paddle.equal(x=Tensor([1, 1, 1, 1, 1431655766, 3],"float16"), y=Tensor([1, 1, 1, 1, 1431655766, 3],"float16"), )
paddle.equal(x=Tensor([1, 1, 1, 1, 3, 1431655766],"float16"), y=Tensor([1, 1, 1, 1, 3, 1431655766],"float16"), )
paddle.equal(x=Tensor([1, 1, 1, 1, 3, 3],"float16"), y=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 1, 1, 1, 3, 3],"float16"), y=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 1, 1, 1, 3, 3],"float16"), y=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 1, 1, 1, 3, 3],"float16"), y=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), y=Tensor([1, 1, 1, 1, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), y=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), y=Tensor([3, 3],"float16"), )
paddle.equal(x=Tensor([1, 1, 1431655766, 3],"float16"), y=Tensor([1, 3],"float16"), )
paddle.equal(x=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), y=Tensor([1, 1, 1, 1, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), y=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), y=Tensor([3, 3],"float16"), )
paddle.equal(x=Tensor([1, 3],"float16"), y=Tensor([1, 1, 1, 1431655766, 3],"float16"), )
paddle.equal(x=Tensor([1, 3],"float16"), y=Tensor([1, 1, 1431655766, 3],"float16"), )
paddle.equal(x=Tensor([1, 3],"float16"), y=Tensor([1, 1, 477218589, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 3],"float16"), y=Tensor([1, 477218589, 1, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 3],"float16"), y=Tensor([1, 477218589, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 3],"float16"), y=Tensor([477218589, 1, 1, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 3],"float16"), y=Tensor([477218589, 1, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), y=Tensor([1, 1, 1, 1, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), y=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), )
paddle.equal(x=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), y=Tensor([3, 3],"float16"), )
paddle.equal(x=Tensor([1, 477218589, 3, 3],"float16"), y=Tensor([1, 3],"float16"), )
paddle.equal(x=Tensor([1431655766, 3],"float16"), y=Tensor([1, 3],"float16"), )
paddle.equal(x=Tensor([1431655766, 3],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.equal(x=Tensor([1431655766, 3],"float16"), y=Tensor([3],"float16"), )
paddle.equal(x=Tensor([2281701379],"int64"), y=Tensor([2281701379],"int64"), )
paddle.equal(x=Tensor([253522376, 3, 3],"float32"), y=Tensor([253522376, 3, 3],"float32"), )
paddle.equal(x=Tensor([253522376, 3, 3],"int32"), y=Tensor([253522376, 3, 3],"int32"), )
paddle.equal(x=Tensor([253522376, 3, 3],"int64"), y=Tensor([253522376, 3, 3],"int64"), )
paddle.equal(x=Tensor([3, 1431655766],"float16"), y=Tensor([1, 1431655766],"float16"), )
paddle.equal(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.equal(x=Tensor([3, 253522376, 3],"float32"), y=Tensor([3, 253522376, 3],"float32"), )
paddle.equal(x=Tensor([3, 253522376, 3],"int32"), y=Tensor([3, 253522376, 3],"int32"), )
paddle.equal(x=Tensor([3, 253522376, 3],"int64"), y=Tensor([3, 253522376, 3],"int64"), )
paddle.equal(x=Tensor([3, 3, 1],"float16"), y=Tensor([3, 3, 3, 159072863],"float16"), )
paddle.equal(x=Tensor([3, 3, 1],"float16"), y=Tensor([477218589, 3, 3, 1],"float16"), )
paddle.equal(x=Tensor([3, 3, 253522376],"float32"), y=Tensor([3, 3, 253522376],"float32"), )
paddle.equal(x=Tensor([3, 3, 253522376],"int32"), y=Tensor([3, 3, 253522376],"int32"), )
paddle.equal(x=Tensor([3, 3, 253522376],"int64"), y=Tensor([3, 3, 253522376],"int64"), )
paddle.equal(x=Tensor([3, 3, 3, 159072863],"float16"), y=Tensor([3, 3, 1],"float16"), )
paddle.equal(x=Tensor([3, 3, 3, 1],"float16"), y=Tensor([3, 3, 477218589],"float16"), )
paddle.equal(x=Tensor([3, 3, 477218589],"float16"), y=Tensor([3, 3, 3, 1],"float16"), )
paddle.equal(x=Tensor([3, 3, 477218589],"float16"), y=Tensor([3, 3, 477218589],"float16"), )
paddle.equal(x=Tensor([3, 477218589, 3],"float16"), y=Tensor([3, 477218589, 3],"float16"), )
paddle.equal(x=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), y=Tensor([1, 1, 1, 1, 3, 3],"float16"), )
paddle.equal(x=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), y=Tensor([3, 3],"float16"), )
paddle.equal(x=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), y=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), )
paddle.equal(x=Tensor([477218589, 1, 3, 3],"float16"), y=Tensor([1, 3],"float16"), )
paddle.equal(x=Tensor([477218589, 3, 3, 1],"float16"), y=Tensor([3, 3, 1],"float16"), )
paddle.equal(x=Tensor([477218589, 3, 3],"float16"), y=Tensor([477218589, 3, 3],"float16"), )
paddle.equal_all(Tensor([1, 10],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.equal_all(Tensor([1, 10],"float32"), Tensor([228170138, 10],"float32"), )
paddle.equal_all(Tensor([1, 14260634, 10, 16],"bool"), Tensor([1, 14260634, 10, 16],"bool"), )
paddle.equal_all(Tensor([1, 14260634, 10, 16],"bool"), Tensor([1, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([1, 190141782, 3, 4],"float32"), Tensor([1, 190141782, 3, 4],"float32"), )
paddle.equal_all(Tensor([1, 190141782, 3, 4],"float32"), Tensor([1, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([1, 2, 10, 114085069],"bool"), Tensor([1, 2, 10, 114085069],"bool"), )
paddle.equal_all(Tensor([1, 2, 10, 114085069],"bool"), Tensor([1, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([1, 2, 10, 16],"bool"), Tensor([1, 14260634, 10, 16],"bool"), )
paddle.equal_all(Tensor([1, 2, 10, 16],"bool"), Tensor([1, 2, 10, 114085069],"bool"), )
paddle.equal_all(Tensor([1, 2, 10, 16],"bool"), Tensor([1, 2, 71303169, 16],"bool"), )
paddle.equal_all(Tensor([1, 2, 10, 16],"bool"), Tensor([7130317, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([1, 2, 285212673, 4],"float32"), Tensor([1, 2, 285212673, 4],"float32"), )
paddle.equal_all(Tensor([1, 2, 285212673, 4],"float32"), Tensor([1, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([1, 2, 3, 380283564],"float32"), Tensor([1, 2, 3, 380283564],"float32"), )
paddle.equal_all(Tensor([1, 2, 3, 380283564],"float32"), Tensor([1, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([1, 2, 3, 4],"float32"), Tensor([1, 190141782, 3, 4],"float32"), )
paddle.equal_all(Tensor([1, 2, 3, 4],"float32"), Tensor([1, 2, 285212673, 4],"float32"), )
paddle.equal_all(Tensor([1, 2, 3, 4],"float32"), Tensor([1, 2, 3, 380283564],"float32"), )
paddle.equal_all(Tensor([1, 2, 3, 4],"float32"), Tensor([95070891, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([1, 2, 71303169, 16],"bool"), Tensor([1, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([1, 2, 71303169, 16],"bool"), Tensor([1, 2, 71303169, 16],"bool"), )
paddle.equal_all(Tensor([1, 2281701379],"float32"), Tensor([1, 10],"float32"), )
paddle.equal_all(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.equal_all(Tensor([1, 2281701379],"float32"), Tensor([1, 2],"float32"), )
paddle.equal_all(Tensor([1, 2],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.equal_all(Tensor([1, 2],"float32"), Tensor([1140850690, 2],"float32"), )
paddle.equal_all(Tensor([10, 10],"int32"), Tensor([10, 228170138],"int32"), )
paddle.equal_all(Tensor([10, 10],"int32"), Tensor([228170138, 10],"int32"), )
paddle.equal_all(Tensor([10, 228170138],"int32"), Tensor([10, 10],"int32"), )
paddle.equal_all(Tensor([10, 228170138],"int32"), Tensor([10, 228170138],"int32"), )
paddle.equal_all(Tensor([1140850690, 1, 2],"int64"), Tensor([1140850690, 1, 2],"int64"), )
paddle.equal_all(Tensor([1140850690, 1, 2],"int64"), Tensor([2, 1, 2],"int64"), )
paddle.equal_all(Tensor([1140850690, 2],"float32"), Tensor([1, 2],"float32"), )
paddle.equal_all(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), )
paddle.equal_all(Tensor([128],"float32"), Tensor([2281701379],"float32"), )
paddle.equal_all(Tensor([13, 175515491],"int64"), Tensor([13, 175515491],"int64"), )
paddle.equal_all(Tensor([13, 175515491],"int64"), Tensor([13, 7],"int64"), )
paddle.equal_all(Tensor([13, 7],"int64"), Tensor([13, 175515491],"int64"), )
paddle.equal_all(Tensor([13, 7],"int64"), Tensor([325957340, 7],"int64"), )
paddle.equal_all(Tensor([142606337, 16],"float32"), Tensor([142606337, 16],"float32"), )
paddle.equal_all(Tensor([142606337, 16],"float32"), Tensor([16, 16],"float32"), )
paddle.equal_all(Tensor([16, 142606337],"float32"), Tensor([16, 142606337],"float32"), )
paddle.equal_all(Tensor([16, 142606337],"float32"), Tensor([16, 16],"float32"), )
paddle.equal_all(Tensor([16, 16],"float32"), Tensor([142606337, 16],"float32"), )
paddle.equal_all(Tensor([16, 16],"float32"), Tensor([16, 142606337],"float32"), )
paddle.equal_all(Tensor([16],"float32"), Tensor([2281701379],"float32"), )
paddle.equal_all(Tensor([2, 1, 1140850690],"int64"), Tensor([2, 1, 1140850690],"int64"), )
paddle.equal_all(Tensor([2, 1, 1140850690],"int64"), Tensor([2, 1, 2],"int64"), )
paddle.equal_all(Tensor([2, 1, 1140850690],"int64"), Tensor([2, 1, 4],"int64"), )
paddle.equal_all(Tensor([2, 1, 2],"int64"), Tensor([1140850690, 1, 2],"int64"), )
paddle.equal_all(Tensor([2, 1, 2],"int64"), Tensor([2, 1, 1140850690],"int64"), )
paddle.equal_all(Tensor([2, 1, 2],"int64"), Tensor([2, 570425345, 2],"int64"), )
paddle.equal_all(Tensor([2, 1, 4],"int64"), Tensor([2, 1, 1140850690],"int64"), )
paddle.equal_all(Tensor([2, 1, 4],"int64"), Tensor([2, 285212673, 4],"int64"), )
paddle.equal_all(Tensor([2, 1, 4],"int64"), Tensor([570425345, 1, 4],"int64"), )
paddle.equal_all(Tensor([2, 1140850690],"int64"), Tensor([2, 1140850690],"int64"), )
paddle.equal_all(Tensor([2, 1140850690],"int64"), Tensor([2, 1],"int64"), )
paddle.equal_all(Tensor([2, 1],"int64"), Tensor([2, 1140850690],"int64"), )
paddle.equal_all(Tensor([2, 1],"int64"), Tensor([2281701379, 1],"int64"), )
paddle.equal_all(Tensor([2, 2, 3],"int64"), Tensor([2, 2, 570425345],"int64"), )
paddle.equal_all(Tensor([2, 2, 3],"int64"), Tensor([2, 380283564, 3],"int64"), )
paddle.equal_all(Tensor([2, 2, 3],"int64"), Tensor([380283564, 2, 3],"int64"), )
paddle.equal_all(Tensor([2, 2, 4],"int64"), Tensor([2, 2, 570425345],"int64"), )
paddle.equal_all(Tensor([2, 2, 4],"int64"), Tensor([2, 285212673, 4],"int64"), )
paddle.equal_all(Tensor([2, 2, 4],"int64"), Tensor([285212673, 2, 4],"int64"), )
paddle.equal_all(Tensor([2, 2, 570425345],"int64"), Tensor([2, 2, 3],"int64"), )
paddle.equal_all(Tensor([2, 2, 570425345],"int64"), Tensor([2, 2, 4],"int64"), )
paddle.equal_all(Tensor([2, 2, 570425345],"int64"), Tensor([2, 2, 570425345],"int64"), )
paddle.equal_all(Tensor([2, 285212673, 4],"int64"), Tensor([2, 1, 4],"int64"), )
paddle.equal_all(Tensor([2, 285212673, 4],"int64"), Tensor([2, 2, 4],"int64"), )
paddle.equal_all(Tensor([2, 285212673, 4],"int64"), Tensor([2, 285212673, 4],"int64"), )
paddle.equal_all(Tensor([2, 380283564, 3],"int64"), Tensor([2, 2, 3],"int64"), )
paddle.equal_all(Tensor([2, 380283564, 3],"int64"), Tensor([2, 380283564, 3],"int64"), )
paddle.equal_all(Tensor([2, 570425345, 2],"int64"), Tensor([2, 1, 2],"int64"), )
paddle.equal_all(Tensor([2, 570425345, 2],"int64"), Tensor([2, 570425345, 2],"int64"), )
paddle.equal_all(Tensor([2281701379, 1],"int64"), Tensor([2, 1],"int64"), )
paddle.equal_all(Tensor([2281701379, 1],"int64"), Tensor([2281701379, 1],"int64"), )
paddle.equal_all(Tensor([2281701379],"float32"), Tensor([128],"float32"), )
paddle.equal_all(Tensor([2281701379],"float32"), Tensor([16],"float32"), )
paddle.equal_all(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.equal_all(Tensor([2281701379],"float32"), Tensor([24],"float32"), )
paddle.equal_all(Tensor([2281701379],"float32"), Tensor([32],"float32"), )
paddle.equal_all(Tensor([2281701379],"float32"), Tensor([50],"float32"), )
paddle.equal_all(Tensor([2281701379],"float32"), Tensor([64],"float32"), )
paddle.equal_all(Tensor([228170138, 10],"float32"), Tensor([1, 10],"float32"), )
paddle.equal_all(Tensor([228170138, 10],"float32"), Tensor([228170138, 10],"float32"), )
paddle.equal_all(Tensor([228170138, 10],"int32"), Tensor([10, 10],"int32"), )
paddle.equal_all(Tensor([228170138, 10],"int32"), Tensor([228170138, 10],"int32"), )
paddle.equal_all(Tensor([24],"float32"), Tensor([2281701379],"float32"), )
paddle.equal_all(Tensor([285212673, 2, 4],"int64"), Tensor([2, 2, 4],"int64"), )
paddle.equal_all(Tensor([285212673, 2, 4],"int64"), Tensor([285212673, 2, 4],"int64"), )
paddle.equal_all(Tensor([325957340, 7],"int64"), Tensor([13, 7],"int64"), )
paddle.equal_all(Tensor([325957340, 7],"int64"), Tensor([325957340, 7],"int64"), )
paddle.equal_all(Tensor([32],"float32"), Tensor([2281701379],"float32"), )
paddle.equal_all(Tensor([380283564, 2, 3],"int64"), Tensor([2, 2, 3],"int64"), )
paddle.equal_all(Tensor([380283564, 2, 3],"int64"), Tensor([380283564, 2, 3],"int64"), )
paddle.equal_all(Tensor([50],"float32"), Tensor([2281701379],"float32"), )
paddle.equal_all(Tensor([570425345, 1, 4],"int64"), Tensor([2, 1, 4],"int64"), )
paddle.equal_all(Tensor([570425345, 1, 4],"int64"), Tensor([570425345, 1, 4],"int64"), )
paddle.equal_all(Tensor([64],"float32"), Tensor([2281701379],"float32"), )
paddle.equal_all(Tensor([7130317, 2, 10, 16],"bool"), Tensor([1, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([7130317, 2, 10, 16],"bool"), Tensor([7130317, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([95070891, 2, 3, 4],"float32"), Tensor([1, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([95070891, 2, 3, 4],"float32"), Tensor([95070891, 2, 3, 4],"float32"), )
paddle.equal_all(x=Tensor([253522376, 3, 3],"float32"), y=Tensor([253522376, 3, 3],"float32"), )
paddle.equal_all(x=Tensor([253522376, 3, 3],"float32"), y=Tensor([3, 3, 3],"float32"), )
paddle.equal_all(x=Tensor([253522376, 3, 3],"int32"), y=Tensor([253522376, 3, 3],"int32"), )
paddle.equal_all(x=Tensor([253522376, 3, 3],"int32"), y=Tensor([3, 3, 3],"int32"), )
paddle.equal_all(x=Tensor([253522376, 3, 3],"int64"), y=Tensor([253522376, 3, 3],"int64"), )
paddle.equal_all(x=Tensor([253522376, 3, 3],"int64"), y=Tensor([3, 3, 3],"int64"), )
paddle.equal_all(x=Tensor([3, 253522376, 3],"float32"), y=Tensor([3, 253522376, 3],"float32"), )
paddle.equal_all(x=Tensor([3, 253522376, 3],"float32"), y=Tensor([3, 3, 3],"float32"), )
paddle.equal_all(x=Tensor([3, 253522376, 3],"int32"), y=Tensor([3, 253522376, 3],"int32"), )
paddle.equal_all(x=Tensor([3, 253522376, 3],"int32"), y=Tensor([3, 3, 3],"int32"), )
paddle.equal_all(x=Tensor([3, 253522376, 3],"int64"), y=Tensor([3, 253522376, 3],"int64"), )
paddle.equal_all(x=Tensor([3, 253522376, 3],"int64"), y=Tensor([3, 3, 3],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 253522376],"float32"), y=Tensor([3, 3, 253522376],"float32"), )
paddle.equal_all(x=Tensor([3, 3, 253522376],"float32"), y=Tensor([3, 3, 3],"float32"), )
paddle.equal_all(x=Tensor([3, 3, 253522376],"int32"), y=Tensor([3, 3, 253522376],"int32"), )
paddle.equal_all(x=Tensor([3, 3, 253522376],"int32"), y=Tensor([3, 3, 3],"int32"), )
paddle.equal_all(x=Tensor([3, 3, 253522376],"int64"), y=Tensor([3, 3, 253522376],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 253522376],"int64"), y=Tensor([3, 3, 3],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 3],"float32"), y=Tensor([253522376, 3, 3],"float32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"float32"), y=Tensor([3, 253522376, 3],"float32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"float32"), y=Tensor([3, 3, 253522376],"float32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int32"), y=Tensor([253522376, 3, 3],"int32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int32"), y=Tensor([3, 253522376, 3],"int32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int32"), y=Tensor([3, 3, 253522376],"int32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int64"), y=Tensor([253522376, 3, 3],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int64"), y=Tensor([3, 253522376, 3],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int64"), y=Tensor([3, 3, 253522376],"int64"), )
paddle.erf(Tensor([11, 390451573],"float16"), )
paddle.erf(Tensor([143165577, 2, 3, 5],"float16"), )
paddle.erf(Tensor([2147483649, 2],"float16"), )
paddle.erf(Tensor([252645136, 17],"float16"), )
paddle.erf(Tensor([35791395, 2, 3, 5, 4],"float16"), )
paddle.erf(Tensor([4, 1073741825],"float16"), )
paddle.erf(Tensor([4, 17895698, 3, 5, 4],"float16"), )
paddle.erf(Tensor([4, 2, 107374183, 5],"float16"), )
paddle.erf(Tensor([4, 2, 26843546, 5, 4],"float16"), )
paddle.erf(Tensor([4, 2, 3, 178956971],"float16"), )
paddle.erf(Tensor([4, 2, 3, 44739243, 4],"float16"), )
paddle.erf(Tensor([4, 2, 3, 5, 35791395],"float16"), )
paddle.erf(Tensor([4, 2, 536870913],"float16"), )
paddle.erf(Tensor([4, 357913942, 3],"float16"), )
paddle.erf(Tensor([4, 71582789, 3, 5],"float16"), )
paddle.erf(Tensor([4294967297],"float16"), )
paddle.erf(Tensor([715827883, 2, 3],"float16"), )
paddle.erf(x=Tensor([1140850690, 2],"float32"), )
paddle.erf(x=Tensor([2, 1140850690],"float32"), )
paddle.erf(x=Tensor([2, 2147483649],"float16"), )
paddle.erf(x=Tensor([2147483649, 2],"float16"), )
paddle.erf(x=Tensor([2281701379],"float32"), )
paddle.erf(x=Tensor([4294967297],"float16"), )
paddle.erfinv(Tensor([2281701379],"float32"), )
paddle.erfinv(x=Tensor([143165577, 2, 3, 5],"float16"), )
paddle.erfinv(x=Tensor([2147483649, 2],"float16"), )
paddle.erfinv(x=Tensor([2281701379],"float32"), )
paddle.erfinv(x=Tensor([35791395, 2, 3, 5, 4],"float16"), )
paddle.erfinv(x=Tensor([4, 1073741825],"float16"), )
paddle.erfinv(x=Tensor([4, 17895698, 3, 5, 4],"float16"), )
paddle.erfinv(x=Tensor([4, 2, 107374183, 5],"float16"), )
paddle.erfinv(x=Tensor([4, 2, 26843546, 5, 4],"float16"), )
paddle.erfinv(x=Tensor([4, 2, 3, 178956971],"float16"), )
paddle.erfinv(x=Tensor([4, 2, 3, 44739243, 4],"float16"), )
paddle.erfinv(x=Tensor([4, 2, 3, 5, 35791395],"float16"), )
paddle.erfinv(x=Tensor([4, 2, 536870913],"float16"), )
paddle.erfinv(x=Tensor([4, 357913942, 3],"float16"), )
paddle.erfinv(x=Tensor([4, 71582789, 3, 5],"float16"), )
paddle.erfinv(x=Tensor([4294967297],"float16"), )
paddle.erfinv(x=Tensor([715827883, 2, 3],"float16"), )
paddle.exp(Tensor([1, 190141782, 3, 4],"float32"), )
paddle.exp(Tensor([1, 2, 1140850690],"float32"), )
paddle.exp(Tensor([1, 2, 285212673, 4],"float32"), )
paddle.exp(Tensor([1, 2, 3, 380283564],"float32"), )
paddle.exp(Tensor([1, 2, 3, 715827883],"float16"), )
paddle.exp(Tensor([1, 2, 536870913, 4],"float16"), )
paddle.exp(Tensor([1, 2281701379],"float32"), )
paddle.exp(Tensor([1, 357913942, 3, 4],"float16"), )
paddle.exp(Tensor([1, 760567127, 3],"float32"), )
paddle.exp(Tensor([10, 10, 42949673],"float16"), )
paddle.exp(Tensor([10, 114085069, 1, 2],"float32"), )
paddle.exp(Tensor([10, 114085069, 2],"float32"), )
paddle.exp(Tensor([10, 2, 1, 114085069],"float32"), )
paddle.exp(Tensor([10, 2, 114085069],"float32"), )
paddle.exp(Tensor([10, 2, 57042535, 2],"float32"), )
paddle.exp(Tensor([10, 200, 1140851],"float32"), )
paddle.exp(Tensor([10, 200, 1140851],"int32"), )
paddle.exp(Tensor([10, 200, 1140851],"int64"), )
paddle.exp(Tensor([10, 228170138],"float32"), )
paddle.exp(Tensor([10, 42949673, 10],"float16"), )
paddle.exp(Tensor([10, 429496730],"float16"), )
paddle.exp(Tensor([10, 760568, 300],"float32"), )
paddle.exp(Tensor([10, 760568, 300],"int32"), )
paddle.exp(Tensor([10, 760568, 300],"int64"), )
paddle.exp(Tensor([100, 22817014],"float32"), )
paddle.exp(Tensor([1000, 4294968],"float16"), )
paddle.exp(Tensor([1073741825, 4],"float16"), )
paddle.exp(Tensor([11, 1, 207427399],"float32"), )
paddle.exp(Tensor([11, 207427399, 1],"float32"), )
paddle.exp(Tensor([1125100, 3, 26, 26, 1],"float32"), )
paddle.exp(Tensor([114, 37675152],"float16"), )
paddle.exp(Tensor([1140850690, 1, 2],"float32"), )
paddle.exp(Tensor([1140850690, 2],"float32"), )
paddle.exp(Tensor([11408507, 200],"float32"), )
paddle.exp(Tensor([12, 118839, 40, 40, 1],"float32"), )
paddle.exp(Tensor([12, 1901418, 10, 10, 1],"float32"), )
paddle.exp(Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.exp(Tensor([12, 3, 10, 6338060, 1],"float32"), )
paddle.exp(Tensor([12, 3, 1584515, 40, 1],"float32"), )
paddle.exp(Tensor([12, 3, 20, 20, 158452],"float32"), )
paddle.exp(Tensor([12, 3, 20, 3169030, 1],"float32"), )
paddle.exp(Tensor([12, 3, 3169030, 20, 1],"float32"), )
paddle.exp(Tensor([12, 3, 40, 1584515, 1],"float32"), )
paddle.exp(Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.exp(Tensor([12, 3, 6338060, 10, 1],"float32"), )
paddle.exp(Tensor([12, 475355, 20, 20, 1],"float32"), )
paddle.exp(Tensor([1200, 1901418],"float32"), )
paddle.exp(Tensor([120089547, 19],"float32"), )
paddle.exp(Tensor([123189, 9261, 2],"float32"), )
paddle.exp(Tensor([128, 17825793],"float32"), )
paddle.exp(Tensor([1291, 1767391],"float32"), )
paddle.exp(Tensor([13, 10894, 1007, 16],"float32"), )
paddle.exp(Tensor([13, 1096972, 10, 16],"float32"), )
paddle.exp(Tensor([13, 1567103, 7, 16],"float32"), )
paddle.exp(Tensor([13, 175515491],"float32"), )
paddle.exp(Tensor([13, 2, 16, 4, 1371215],"float32"), )
paddle.exp(Tensor([13, 2, 16, 685608, 8],"float32"), )
paddle.exp(Tensor([13, 2, 2742430, 4, 8],"float32"), )
paddle.exp(Tensor([13, 2, 4, 16, 1371215],"float32"), )
paddle.exp(Tensor([13, 2, 4, 21939437, 1],"float32"), )
paddle.exp(Tensor([13, 2, 5484860, 16, 1],"float32"), )
paddle.exp(Tensor([13, 2, 8, 1371215, 8],"float32"), )
paddle.exp(Tensor([13, 2, 8, 4, 2742430],"float32"), )
paddle.exp(Tensor([13, 2742430, 4, 16, 1],"float32"), )
paddle.exp(Tensor([13, 3, 58505164],"float32"), )
paddle.exp(Tensor([13, 342804, 16, 4, 8],"float32"), )
paddle.exp(Tensor([13, 3656573, 3, 16],"float32"), )
paddle.exp(Tensor([13, 58505164, 3],"float32"), )
paddle.exp(Tensor([13, 64, 10, 274243],"float32"), )
paddle.exp(Tensor([13, 64, 1007, 2724],"float32"), )
paddle.exp(Tensor([13, 64, 171402, 16],"float32"), )
paddle.exp(Tensor([13, 64, 3, 914144],"float32"), )
paddle.exp(Tensor([13, 64, 7, 391776],"float32"), )
paddle.exp(Tensor([13, 685608, 8, 4, 8],"float32"), )
paddle.exp(Tensor([131678, 3, 76, 76, 1],"float32"), )
paddle.exp(Tensor([1320430, 3, 24, 24, 1],"float32"), )
paddle.exp(Tensor([14, 1455167, 7, 16],"float32"), )
paddle.exp(Tensor([14, 64, 159159, 16],"float32"), )
paddle.exp(Tensor([14, 64, 7, 363792],"float32"), )
paddle.exp(Tensor([142606337, 16],"float32"), )
paddle.exp(Tensor([1431655766, 3],"float16"), )
paddle.exp(Tensor([146715, 3, 72, 72, 1],"float32"), )
paddle.exp(Tensor([148, 5, 3083381],"float32"), )
paddle.exp(Tensor([148, 5138968, 3],"float32"), )
paddle.exp(Tensor([152113426, 5, 3],"float32"), )
paddle.exp(Tensor([1571420, 3, 22, 22, 1],"float32"), )
paddle.exp(Tensor([16, 1, 222823, 640],"float32"), )
paddle.exp(Tensor([16, 1, 640, 222823],"float32"), )
paddle.exp(Tensor([16, 10, 222823, 64],"float32"), )
paddle.exp(Tensor([16, 10, 64, 222823],"float32"), )
paddle.exp(Tensor([16, 34817, 64, 64],"float32"), )
paddle.exp(Tensor([16, 349, 640, 640],"float32"), )
paddle.exp(Tensor([164483, 3, 68, 68, 1],"float32"), )
paddle.exp(Tensor([167674, 6804, 2],"float32"), )
paddle.exp(Tensor([16800, 135816],"float32"), )
paddle.exp(Tensor([175515491, 13],"float32"), )
paddle.exp(Tensor([17825793, 2, 4, 16, 1],"float32"), )
paddle.exp(Tensor([178956971, 2, 3, 4],"float16"), )
paddle.exp(Tensor([1800, 1267612],"float32"), )
paddle.exp(Tensor([18211, 125293],"float32"), )
paddle.exp(Tensor([185686, 3, 64, 64, 1],"float32"), )
paddle.exp(Tensor([190141782, 3, 4],"float32"), )
paddle.exp(Tensor([1901418, 3, 20, 20, 1],"float32"), )
paddle.exp(Tensor([1948, 1171305],"float32"), )
paddle.exp(Tensor([2, 1, 1140850690],"float32"), )
paddle.exp(Tensor([2, 107136, 10649],"float32"), )
paddle.exp(Tensor([2, 1114113, 32, 32, 1],"float32"), )
paddle.exp(Tensor([2, 1140850690, 1],"float32"), )
paddle.exp(Tensor([2, 1140850690],"float32"), )
paddle.exp(Tensor([2, 11408507, 10, 10, 1],"float32"), )
paddle.exp(Tensor([2, 1267612, 30, 30, 1],"float32"), )
paddle.exp(Tensor([2, 1455167, 28, 28, 1],"float32"), )
paddle.exp(Tensor([2, 1687649, 26, 26, 1],"float32"), )
paddle.exp(Tensor([2, 197516, 76, 76, 1],"float32"), )
paddle.exp(Tensor([2, 1980644, 24, 24, 1],"float32"), )
paddle.exp(Tensor([2, 2147483649],"float16"), )
paddle.exp(Tensor([2, 220072, 72, 72, 1],"float32"), )
paddle.exp(Tensor([2, 2357130, 22, 22, 1],"float32"), )
paddle.exp(Tensor([2, 246724, 68, 68, 1],"float32"), )
paddle.exp(Tensor([2, 278529, 64, 64, 1],"float32"), )
paddle.exp(Tensor([2, 285212673, 4],"float32"), )
paddle.exp(Tensor([2, 2852127, 20, 20, 1],"float32"), )
paddle.exp(Tensor([2, 3, 10, 10, 3802836],"float32"), )
paddle.exp(Tensor([2, 3, 10, 38028357, 1],"float32"), )
paddle.exp(Tensor([2, 3, 10007463, 38, 1],"float32"), )
paddle.exp(Tensor([2, 3, 10563433, 36, 1],"float32"), )
paddle.exp(Tensor([2, 3, 11, 11, 3142840],"float32"), )
paddle.exp(Tensor([2, 3, 11, 34571234, 1],"float32"), )
paddle.exp(Tensor([2, 3, 11184811, 34, 1],"float32"), )
paddle.exp(Tensor([2, 3, 11883862, 32, 1],"float32"), )
paddle.exp(Tensor([2, 3, 12, 12, 2640859],"float32"), )
paddle.exp(Tensor([2, 3, 12, 31690297, 1],"float32"), )
paddle.exp(Tensor([2, 3, 12676119, 30, 1],"float32"), )
paddle.exp(Tensor([2, 3, 13, 13, 2250199],"float32"), )
paddle.exp(Tensor([2, 3, 13, 29252582, 1],"float32"), )
paddle.exp(Tensor([2, 3, 13581556, 28, 1],"float32"), )
paddle.exp(Tensor([2, 3, 14, 14, 1940223],"float32"), )
paddle.exp(Tensor([2, 3, 14, 27163112, 1],"float32"), )
paddle.exp(Tensor([2, 3, 14626291, 26, 1],"float32"), )
paddle.exp(Tensor([2, 3, 15, 15, 1690150],"float32"), )
paddle.exp(Tensor([2, 3, 15, 25352238, 1],"float32"), )
paddle.exp(Tensor([2, 3, 15845149, 24, 1],"float32"), )
paddle.exp(Tensor([2, 3, 16, 16, 1485483],"float32"), )
paddle.exp(Tensor([2, 3, 16, 23767723, 1],"float32"), )
paddle.exp(Tensor([2, 3, 17, 17, 1315861],"float32"), )
paddle.exp(Tensor([2, 3, 17, 22369622, 1],"float32"), )
paddle.exp(Tensor([2, 3, 17285617, 22, 1],"float32"), )
paddle.exp(Tensor([2, 3, 18, 18, 1173715],"float32"), )
paddle.exp(Tensor([2, 3, 18, 21126865, 1],"float32"), )
paddle.exp(Tensor([2, 3, 19, 19, 1053418],"float32"), )
paddle.exp(Tensor([2, 3, 19, 20014925, 1],"float32"), )
paddle.exp(Tensor([2, 3, 19014179, 20, 1],"float32"), )
paddle.exp(Tensor([2, 3, 20, 19014179, 1],"float32"), )
paddle.exp(Tensor([2, 3, 20, 20, 950709],"float32"), )
paddle.exp(Tensor([2, 3, 20014925, 19, 1],"float32"), )
paddle.exp(Tensor([2, 3, 21126865, 18, 1],"float32"), )
paddle.exp(Tensor([2, 3, 22, 17285617, 1],"float32"), )
paddle.exp(Tensor([2, 3, 22, 22, 785710],"float32"), )
paddle.exp(Tensor([2, 3, 22369622, 17, 1],"float32"), )
paddle.exp(Tensor([2, 3, 23767723, 16, 1],"float32"), )
paddle.exp(Tensor([2, 3, 24, 15845149, 1],"float32"), )
paddle.exp(Tensor([2, 3, 24, 24, 660215],"float32"), )
paddle.exp(Tensor([2, 3, 25352238, 15, 1],"float32"), )
paddle.exp(Tensor([2, 3, 26, 14626291, 1],"float32"), )
paddle.exp(Tensor([2, 3, 26, 26, 562550],"float32"), )
paddle.exp(Tensor([2, 3, 27163112, 14, 1],"float32"), )
paddle.exp(Tensor([2, 3, 28, 13581556, 1],"float32"), )
paddle.exp(Tensor([2, 3, 28, 28, 485056],"float32"), )
paddle.exp(Tensor([2, 3, 29252582, 13, 1],"float32"), )
paddle.exp(Tensor([2, 3, 30, 12676119, 1],"float32"), )
paddle.exp(Tensor([2, 3, 30, 30, 422538],"float32"), )
paddle.exp(Tensor([2, 3, 31690297, 12, 1],"float32"), )
paddle.exp(Tensor([2, 3, 32, 11883862, 1],"float32"), )
paddle.exp(Tensor([2, 3, 32, 32, 371371],"float32"), )
paddle.exp(Tensor([2, 3, 34, 11184811, 1],"float32"), )
paddle.exp(Tensor([2, 3, 34, 34, 328966],"float32"), )
paddle.exp(Tensor([2, 3, 34571234, 11, 1],"float32"), )
paddle.exp(Tensor([2, 3, 36, 10563433, 1],"float32"), )
paddle.exp(Tensor([2, 3, 36, 36, 293429],"float32"), )
paddle.exp(Tensor([2, 3, 38, 10007463, 1],"float32"), )
paddle.exp(Tensor([2, 3, 38, 38, 263355],"float32"), )
paddle.exp(Tensor([2, 3, 380283564],"float32"), )
paddle.exp(Tensor([2, 3, 38028357, 10, 1],"float32"), )
paddle.exp(Tensor([2, 3, 40, 40, 237678],"float32"), )
paddle.exp(Tensor([2, 3, 40, 9507090, 1],"float32"), )
paddle.exp(Tensor([2, 3, 44, 44, 196428],"float32"), )
paddle.exp(Tensor([2, 3, 44, 8642809, 1],"float32"), )
paddle.exp(Tensor([2, 3, 48, 48, 165054],"float32"), )
paddle.exp(Tensor([2, 3, 48, 7922575, 1],"float32"), )
paddle.exp(Tensor([2, 3, 5003732, 76, 1],"float32"), )
paddle.exp(Tensor([2, 3, 52, 52, 140638],"float32"), )
paddle.exp(Tensor([2, 3, 52, 7313146, 1],"float32"), )
paddle.exp(Tensor([2, 3, 5281717, 72, 1],"float32"), )
paddle.exp(Tensor([2, 3, 5592406, 68, 1],"float32"), )
paddle.exp(Tensor([2, 3, 56, 56, 121264],"float32"), )
paddle.exp(Tensor([2, 3, 56, 6790778, 1],"float32"), )
paddle.exp(Tensor([2, 3, 5941931, 64, 1],"float32"), )
paddle.exp(Tensor([2, 3, 60, 60, 105635],"float32"), )
paddle.exp(Tensor([2, 3, 60, 6338060, 1],"float32"), )
paddle.exp(Tensor([2, 3, 6338060, 60, 1],"float32"), )
paddle.exp(Tensor([2, 3, 64, 5941931, 1],"float32"), )
paddle.exp(Tensor([2, 3, 64, 64, 92843],"float32"), )
paddle.exp(Tensor([2, 3, 6790778, 56, 1],"float32"), )
paddle.exp(Tensor([2, 3, 68, 5592406, 1],"float32"), )
paddle.exp(Tensor([2, 3, 68, 68, 82242],"float32"), )
paddle.exp(Tensor([2, 3, 72, 5281717, 1],"float32"), )
paddle.exp(Tensor([2, 3, 72, 72, 73358],"float32"), )
paddle.exp(Tensor([2, 3, 7313146, 52, 1],"float32"), )
paddle.exp(Tensor([2, 3, 76, 5003732, 1],"float32"), )
paddle.exp(Tensor([2, 3, 76, 76, 65839],"float32"), )
paddle.exp(Tensor([2, 3, 7922575, 48, 1],"float32"), )
paddle.exp(Tensor([2, 3, 8642809, 44, 1],"float32"), )
paddle.exp(Tensor([2, 3, 9507090, 40, 1],"float32"), )
paddle.exp(Tensor([2, 3160252, 19, 19, 1],"float32"), )
paddle.exp(Tensor([2, 316903, 60, 60, 1],"float32"), )
paddle.exp(Tensor([2, 3521145, 18, 18, 1],"float32"), )
paddle.exp(Tensor([2, 363792, 56, 56, 1],"float32"), )
paddle.exp(Tensor([2, 3947581, 17, 17, 1],"float32"), )
paddle.exp(Tensor([2, 421913, 52, 52, 1],"float32"), )
paddle.exp(Tensor([2, 4456449, 16, 16, 1],"float32"), )
paddle.exp(Tensor([2, 4725, 241450],"float32"), )
paddle.exp(Tensor([2, 495161, 48, 48, 1],"float32"), )
paddle.exp(Tensor([2, 5070448, 15, 15, 1],"float32"), )
paddle.exp(Tensor([2, 570425345, 2],"float32"), )
paddle.exp(Tensor([2, 5820667, 14, 14, 1],"float32"), )
paddle.exp(Tensor([2, 589283, 44, 44, 1],"float32"), )
paddle.exp(Tensor([2, 6750596, 13, 13, 1],"float32"), )
paddle.exp(Tensor([2, 713032, 40, 40, 1],"float32"), )
paddle.exp(Tensor([2, 790063, 38, 38, 1],"float32"), )
paddle.exp(Tensor([2, 7922575, 12, 12, 1],"float32"), )
paddle.exp(Tensor([2, 880287, 36, 36, 1],"float32"), )
paddle.exp(Tensor([2, 9261, 123189],"float32"), )
paddle.exp(Tensor([2, 9428519, 11, 11, 1],"float32"), )
paddle.exp(Tensor([2, 986896, 34, 34, 1],"float32"), )
paddle.exp(Tensor([2048, 1114113],"float32"), )
paddle.exp(Tensor([21, 1, 108652447],"float32"), )
paddle.exp(Tensor([21, 108652447, 1],"float32"), )
paddle.exp(Tensor([2106835, 3, 19, 19, 1],"float32"), )
paddle.exp(Tensor([211269, 3, 60, 60, 1],"float32"), )
paddle.exp(Tensor([212212, 5376, 2],"float32"), )
paddle.exp(Tensor([21298, 107136, 1],"float32"), )
paddle.exp(Tensor([2147483649, 2],"float16"), )
paddle.exp(Tensor([214748365, 20],"float16"), )
paddle.exp(Tensor([21474837, 10, 20],"float16"), )
paddle.exp(Tensor([22, 1, 103713700],"float32"), )
paddle.exp(Tensor([22, 103713700, 1],"float32"), )
paddle.exp(Tensor([22120, 103152],"float32"), )
paddle.exp(Tensor([2213, 64, 1007, 16],"float32"), )
paddle.exp(Tensor([2228225, 2, 16, 4, 8],"float32"), )
paddle.exp(Tensor([222823, 64, 10, 16],"float32"), )
paddle.exp(Tensor([2281701379, 1, 1],"float32"), )
paddle.exp(Tensor([2281701379, 1],"float32"), )
paddle.exp(Tensor([2281701379],"float32"), )
paddle.exp(Tensor([228170138, 2, 5],"float32"), )
paddle.exp(Tensor([2347430, 3, 18, 18, 1],"float32"), )
paddle.exp(Tensor([23767723, 96],"float32"), )
paddle.exp(Tensor([241450, 4725, 2],"float32"), )
paddle.exp(Tensor([242528, 3, 56, 56, 1],"float32"), )
paddle.exp(Tensor([2476, 1, 960, 960],"float32"), )
paddle.exp(Tensor([253522376, 3, 3],"float32"), )
paddle.exp(Tensor([2631721, 3, 17, 17, 1],"float32"), )
paddle.exp(Tensor([277175, 4116, 2],"float32"), )
paddle.exp(Tensor([281275, 3, 52, 52, 1],"float32"), )
paddle.exp(Tensor([2885, 790885],"float32"), )
paddle.exp(Tensor([29, 78679358],"float32"), )
paddle.exp(Tensor([2970966, 3, 16, 16, 1],"float32"), )
paddle.exp(Tensor([3, 1431655766],"float16"), )
paddle.exp(Tensor([3, 152113426, 5],"float32"), )
paddle.exp(Tensor([3, 2, 380283564],"float32"), )
paddle.exp(Tensor([3, 760567127],"float32"), )
paddle.exp(Tensor([318318, 64, 7, 16],"float32"), )
paddle.exp(Tensor([32, 32, 2228225],"float32"), )
paddle.exp(Tensor([32, 557057, 128],"float32"), )
paddle.exp(Tensor([32, 71303169],"float32"), )
paddle.exp(Tensor([325957340, 7],"float32"), )
paddle.exp(Tensor([330108, 3, 48, 48, 1],"float32"), )
paddle.exp(Tensor([3380299, 3, 15, 15, 1],"float32"), )
paddle.exp(Tensor([357913942, 12],"float16"), )
paddle.exp(Tensor([380283564, 2, 3],"float32"), )
paddle.exp(Tensor([380283564, 3, 2],"float32"), )
paddle.exp(Tensor([38029, 200, 300],"float32"), )
paddle.exp(Tensor([38029, 200, 300],"int32"), )
paddle.exp(Tensor([38029, 200, 300],"int64"), )
paddle.exp(Tensor([3880445, 3, 14, 14, 1],"float32"), )
paddle.exp(Tensor([392855, 3, 44, 44, 1],"float32"), )
paddle.exp(Tensor([4, 1, 594194, 960],"float32"), )
paddle.exp(Tensor([4, 1, 640, 891290],"float32"), )
paddle.exp(Tensor([4, 1, 891290, 640],"float32"), )
paddle.exp(Tensor([4, 1, 960, 594194],"float32"), )
paddle.exp(Tensor([4, 1073741825],"float16"), )
paddle.exp(Tensor([4, 1393, 640, 640],"float32"), )
paddle.exp(Tensor([4, 157920, 3613],"float32"), )
paddle.exp(Tensor([4, 190141782, 3],"float32"), )
paddle.exp(Tensor([4, 285212673, 2],"float32"), )
paddle.exp(Tensor([4, 3, 190141782],"float32"), )
paddle.exp(Tensor([4, 3, 357913942],"float16"), )
paddle.exp(Tensor([4, 536870913, 2],"float16"), )
paddle.exp(Tensor([4, 5376, 106106],"float32"), )
paddle.exp(Tensor([4, 570425345],"float32"), )
paddle.exp(Tensor([4, 619, 960, 960],"float32"), )
paddle.exp(Tensor([4, 6804, 83837],"float32"), )
paddle.exp(Tensor([400, 10737419],"float16"), )
paddle.exp(Tensor([4294967297, 1],"float16"), )
paddle.exp(Tensor([4294967297],"float16"), )
paddle.exp(Tensor([42949673, 10, 10],"float16"), )
paddle.exp(Tensor([4456449, 2, 8, 4, 8],"float32"), )
paddle.exp(Tensor([4500398, 3, 13, 13, 1],"float32"), )
paddle.exp(Tensor([456340276, 5],"float32"), )
paddle.exp(Tensor([475355, 3, 40, 40, 1],"float32"), )
paddle.exp(Tensor([4800, 475355],"float32"), )
paddle.exp(Tensor([4817, 157920, 3],"float32"), )
paddle.exp(Tensor([5, 456340276],"float32"), )
paddle.exp(Tensor([5, 858993460],"float16"), )
paddle.exp(Tensor([50, 45634028],"float32"), )
paddle.exp(Tensor([5000, 456341],"float32"), )
paddle.exp(Tensor([512, 4456449],"float32"), )
paddle.exp(Tensor([526709, 3, 38, 38, 1],"float32"), )
paddle.exp(Tensor([5281717, 3, 12, 12, 1],"float32"), )
paddle.exp(Tensor([543263, 2100, 2],"float32"), )
paddle.exp(Tensor([557057, 32, 128],"float32"), )
paddle.exp(Tensor([55706, 10, 64, 64],"float32"), )
paddle.exp(Tensor([5571, 1, 640, 640],"float32"), )
paddle.exp(Tensor([570425345, 2, 1, 2],"float32"), )
paddle.exp(Tensor([570425345, 2, 2],"float32"), )
paddle.exp(Tensor([570425345, 4],"float32"), )
paddle.exp(Tensor([586858, 3, 36, 36, 1],"float32"), )
paddle.exp(Tensor([6284, 363097],"float32"), )
paddle.exp(Tensor([6285679, 3, 11, 11, 1],"float32"), )
paddle.exp(Tensor([64, 35651585],"float32"), )
paddle.exp(Tensor([657931, 3, 34, 34, 1],"float32"), )
paddle.exp(Tensor([7, 325957340],"float32"), )
paddle.exp(Tensor([715827883, 3, 2],"float16"), )
paddle.exp(Tensor([715827883, 6],"float16"), )
paddle.exp(Tensor([742742, 3, 32, 32, 1],"float32"), )
paddle.exp(Tensor([742742, 64, 3, 16],"float32"), )
paddle.exp(Tensor([760567127, 3],"float32"), )
paddle.exp(Tensor([7605672, 3, 10, 10, 1],"float32"), )
paddle.exp(Tensor([78679358, 29],"float32"), )
paddle.exp(Tensor([8, 1, 297097, 960],"float32"), )
paddle.exp(Tensor([8, 1, 445645, 640],"float32"), )
paddle.exp(Tensor([8, 1, 640, 445645],"float32"), )
paddle.exp(Tensor([8, 1, 960, 297097],"float32"), )
paddle.exp(Tensor([8, 105479, 52, 52, 1],"float32"), )
paddle.exp(Tensor([8, 1114113, 16, 16, 1],"float32"), )
paddle.exp(Tensor([8, 123791, 48, 48, 1],"float32"), )
paddle.exp(Tensor([8, 1267612, 15, 15, 1],"float32"), )
paddle.exp(Tensor([8, 13125, 21731],"float32"), )
paddle.exp(Tensor([8, 142606337, 2],"float32"), )
paddle.exp(Tensor([8, 1455167, 14, 14, 1],"float32"), )
paddle.exp(Tensor([8, 147321, 44, 44, 1],"float32"), )
paddle.exp(Tensor([8, 1687649, 13, 13, 1],"float32"), )
paddle.exp(Tensor([8, 178258, 40, 40, 1],"float32"), )
paddle.exp(Tensor([8, 197516, 38, 38, 1],"float32"), )
paddle.exp(Tensor([8, 1980644, 12, 12, 1],"float32"), )
paddle.exp(Tensor([8, 2100, 135816],"float32"), )
paddle.exp(Tensor([8, 220072, 36, 36, 1],"float32"), )
paddle.exp(Tensor([8, 2357130, 11, 11, 1],"float32"), )
paddle.exp(Tensor([8, 246724, 34, 34, 1],"float32"), )
paddle.exp(Tensor([8, 278529, 32, 32, 1],"float32"), )
paddle.exp(Tensor([8, 2852127, 10, 10, 1],"float32"), )
paddle.exp(Tensor([8, 3, 10, 10, 950709],"float32"), )
paddle.exp(Tensor([8, 3, 10, 9507090, 1],"float32"), )
paddle.exp(Tensor([8, 3, 11, 11, 785710],"float32"), )
paddle.exp(Tensor([8, 3, 11, 8642809, 1],"float32"), )
paddle.exp(Tensor([8, 3, 12, 12, 660215],"float32"), )
paddle.exp(Tensor([8, 3, 12, 7922575, 1],"float32"), )
paddle.exp(Tensor([8, 3, 1250933, 76, 1],"float32"), )
paddle.exp(Tensor([8, 3, 13, 13, 562550],"float32"), )
paddle.exp(Tensor([8, 3, 13, 7313146, 1],"float32"), )
paddle.exp(Tensor([8, 3, 1320430, 72, 1],"float32"), )
paddle.exp(Tensor([8, 3, 1398102, 68, 1],"float32"), )
paddle.exp(Tensor([8, 3, 14, 14, 485056],"float32"), )
paddle.exp(Tensor([8, 3, 14, 6790778, 1],"float32"), )
paddle.exp(Tensor([8, 3, 1485483, 64, 1],"float32"), )
paddle.exp(Tensor([8, 3, 15, 15, 422538],"float32"), )
paddle.exp(Tensor([8, 3, 15, 6338060, 1],"float32"), )
paddle.exp(Tensor([8, 3, 1584515, 60, 1],"float32"), )
paddle.exp(Tensor([8, 3, 16, 16, 371371],"float32"), )
paddle.exp(Tensor([8, 3, 16, 5941931, 1],"float32"), )
paddle.exp(Tensor([8, 3, 1697695, 56, 1],"float32"), )
paddle.exp(Tensor([8, 3, 17, 17, 328966],"float32"), )
paddle.exp(Tensor([8, 3, 17, 5592406, 1],"float32"), )
paddle.exp(Tensor([8, 3, 18, 18, 293429],"float32"), )
paddle.exp(Tensor([8, 3, 18, 5281717, 1],"float32"), )
paddle.exp(Tensor([8, 3, 1828287, 52, 1],"float32"), )
paddle.exp(Tensor([8, 3, 19, 19, 263355],"float32"), )
paddle.exp(Tensor([8, 3, 19, 5003732, 1],"float32"), )
paddle.exp(Tensor([8, 3, 1980644, 48, 1],"float32"), )
paddle.exp(Tensor([8, 3, 20, 20, 237678],"float32"), )
paddle.exp(Tensor([8, 3, 20, 4753545, 1],"float32"), )
paddle.exp(Tensor([8, 3, 2160703, 44, 1],"float32"), )
paddle.exp(Tensor([8, 3, 22, 22, 196428],"float32"), )
paddle.exp(Tensor([8, 3, 22, 4321405, 1],"float32"), )
paddle.exp(Tensor([8, 3, 2376773, 40, 1],"float32"), )
paddle.exp(Tensor([8, 3, 24, 24, 165054],"float32"), )
paddle.exp(Tensor([8, 3, 24, 3961288, 1],"float32"), )
paddle.exp(Tensor([8, 3, 2501866, 38, 1],"float32"), )
paddle.exp(Tensor([8, 3, 26, 26, 140638],"float32"), )
paddle.exp(Tensor([8, 3, 26, 3656573, 1],"float32"), )
paddle.exp(Tensor([8, 3, 2640859, 36, 1],"float32"), )
paddle.exp(Tensor([8, 3, 2796203, 34, 1],"float32"), )
paddle.exp(Tensor([8, 3, 28, 28, 121264],"float32"), )
paddle.exp(Tensor([8, 3, 28, 3395389, 1],"float32"), )
paddle.exp(Tensor([8, 3, 2970966, 32, 1],"float32"), )
paddle.exp(Tensor([8, 3, 30, 30, 105635],"float32"), )
paddle.exp(Tensor([8, 3, 30, 3169030, 1],"float32"), )
paddle.exp(Tensor([8, 3, 3169030, 30, 1],"float32"), )
paddle.exp(Tensor([8, 3, 32, 2970966, 1],"float32"), )
paddle.exp(Tensor([8, 3, 32, 32, 92843],"float32"), )
paddle.exp(Tensor([8, 3, 3395389, 28, 1],"float32"), )
paddle.exp(Tensor([8, 3, 34, 2796203, 1],"float32"), )
paddle.exp(Tensor([8, 3, 34, 34, 82242],"float32"), )
paddle.exp(Tensor([8, 3, 36, 2640859, 1],"float32"), )
paddle.exp(Tensor([8, 3, 36, 36, 73358],"float32"), )
paddle.exp(Tensor([8, 3, 3656573, 26, 1],"float32"), )
paddle.exp(Tensor([8, 3, 38, 2501866, 1],"float32"), )
paddle.exp(Tensor([8, 3, 38, 38, 65839],"float32"), )
paddle.exp(Tensor([8, 3, 3961288, 24, 1],"float32"), )
paddle.exp(Tensor([8, 3, 40, 2376773, 1],"float32"), )
paddle.exp(Tensor([8, 3, 40, 40, 59420],"float32"), )
paddle.exp(Tensor([8, 3, 4321405, 22, 1],"float32"), )
paddle.exp(Tensor([8, 3, 44, 2160703, 1],"float32"), )
paddle.exp(Tensor([8, 3, 44, 44, 49107],"float32"), )
paddle.exp(Tensor([8, 3, 4753545, 20, 1],"float32"), )
paddle.exp(Tensor([8, 3, 48, 1980644, 1],"float32"), )
paddle.exp(Tensor([8, 3, 48, 48, 41264],"float32"), )
paddle.exp(Tensor([8, 3, 5003732, 19, 1],"float32"), )
paddle.exp(Tensor([8, 3, 52, 1828287, 1],"float32"), )
paddle.exp(Tensor([8, 3, 52, 52, 35160],"float32"), )
paddle.exp(Tensor([8, 3, 5281717, 18, 1],"float32"), )
paddle.exp(Tensor([8, 3, 5592406, 17, 1],"float32"), )
paddle.exp(Tensor([8, 3, 56, 1697695, 1],"float32"), )
paddle.exp(Tensor([8, 3, 56, 56, 30316],"float32"), )
paddle.exp(Tensor([8, 3, 5941931, 16, 1],"float32"), )
paddle.exp(Tensor([8, 3, 60, 1584515, 1],"float32"), )
paddle.exp(Tensor([8, 3, 60, 60, 26409],"float32"), )
paddle.exp(Tensor([8, 3, 6338060, 15, 1],"float32"), )
paddle.exp(Tensor([8, 3, 64, 1485483, 1],"float32"), )
paddle.exp(Tensor([8, 3, 64, 64, 23211],"float32"), )
paddle.exp(Tensor([8, 3, 6790778, 14, 1],"float32"), )
paddle.exp(Tensor([8, 3, 68, 1398102, 1],"float32"), )
paddle.exp(Tensor([8, 3, 68, 68, 20561],"float32"), )
paddle.exp(Tensor([8, 3, 72, 1320430, 1],"float32"), )
paddle.exp(Tensor([8, 3, 72, 72, 18340],"float32"), )
paddle.exp(Tensor([8, 3, 7313146, 13, 1],"float32"), )
paddle.exp(Tensor([8, 3, 76, 1250933, 1],"float32"), )
paddle.exp(Tensor([8, 3, 76, 76, 16460],"float32"), )
paddle.exp(Tensor([8, 3, 7922575, 12, 1],"float32"), )
paddle.exp(Tensor([8, 3, 8642809, 11, 1],"float32"), )
paddle.exp(Tensor([8, 3, 9507090, 10, 1],"float32"), )
paddle.exp(Tensor([8, 310, 960, 960],"float32"), )
paddle.exp(Tensor([8, 316903, 30, 30, 1],"float32"), )
paddle.exp(Tensor([8, 363792, 28, 28, 1],"float32"), )
paddle.exp(Tensor([8, 4116, 69294],"float32"), )
paddle.exp(Tensor([8, 421913, 26, 26, 1],"float32"), )
paddle.exp(Tensor([8, 4725, 60363],"float32"), )
paddle.exp(Tensor([8, 49379, 76, 76, 1],"float32"), )
paddle.exp(Tensor([8, 495161, 24, 24, 1],"float32"), )
paddle.exp(Tensor([8, 55018, 72, 72, 1],"float32"), )
paddle.exp(Tensor([8, 589283, 22, 22, 1],"float32"), )
paddle.exp(Tensor([8, 61681, 68, 68, 1],"float32"), )
paddle.exp(Tensor([8, 69633, 64, 64, 1],"float32"), )
paddle.exp(Tensor([8, 697, 640, 640],"float32"), )
paddle.exp(Tensor([8, 713032, 20, 20, 1],"float32"), )
paddle.exp(Tensor([8, 790063, 19, 19, 1],"float32"), )
paddle.exp(Tensor([8, 79226, 60, 60, 1],"float32"), )
paddle.exp(Tensor([8, 880287, 18, 18, 1],"float32"), )
paddle.exp(Tensor([8, 90948, 56, 56, 1],"float32"), )
paddle.exp(Tensor([8, 986896, 17, 17, 1],"float32"), )
paddle.exp(Tensor([845075, 3, 30, 30, 1],"float32"), )
paddle.exp(Tensor([858993460, 5],"float16"), )
paddle.exp(Tensor([86922, 13125, 2],"float32"), )
paddle.exp(Tensor([87757746, 26],"float32"), )
paddle.exp(Tensor([8912897, 256],"float32"), )
paddle.exp(Tensor([9, 1, 253522376],"float32"), )
paddle.exp(Tensor([9, 10, 47721859],"float16"), )
paddle.exp(Tensor([9, 23860930, 20],"float16"), )
paddle.exp(Tensor([9, 253522376, 1],"float32"), )
paddle.exp(Tensor([9, 253522376],"float32"), )
paddle.exp(Tensor([91, 47197443],"float16"), )
paddle.exp(Tensor([95070891, 2, 3, 4],"float32"), )
paddle.exp(Tensor([970112, 3, 28, 28, 1],"float32"), )
paddle.exp(x=Tensor([2281701379],"float32"), )
paddle.exp(x=Tensor([253522376, 3, 3],"float32"), )
paddle.exp(x=Tensor([3, 253522376, 3],"float32"), )
paddle.exp(x=Tensor([3, 3, 253522376],"float32"), )
paddle.exp(x=Tensor([3, 3, 477218589],"float16"), )
paddle.exp(x=Tensor([3, 477218589, 3],"float16"), )
paddle.exp(x=Tensor([477218589, 3, 3],"float16"), )
paddle.expand(Tensor([1, 1, 100, 22817014],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 14626291, 156],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 15011194, 152],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 152, 15011194],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 16297867, 140],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 22817014, 100],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 25, 91268056],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 67108865, 34],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([13, 4, 1, 1, 1, 43878873],"float32"), list[13,4,3,1,1,-1,], )
paddle.expand(Tensor([2281701379, 1],"int32"), list[-1,1,], )
paddle.expand(Tensor([2281701379],"int64"), shape=list[1,-1,], )
paddle.expand(Tensor([52, 1, 7, 6268411],"float32"), list[52,4,7,-1,], )
paddle.expand(Tensor([52, 4, 1, 1, 1, 10969719],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(x=Tensor([2281701379, 1, 1],"int64"), shape=Tensor([3],"int32"), )
paddle.expand(x=Tensor([2281701379],"int64"), shape=Tensor([2281701379],"int32"), )
paddle.expand(x=Tensor([2281701379],"int64"), shape=Tensor([2],"int32"), )
paddle.expand(x=Tensor([2281701379],"int64"), shape=list[1,-1,], )
paddle.expand(x=Tensor([4294967297],"float16"), shape=Tensor([2281701379],"int32"), )
paddle.expand(x=Tensor([4294967297],"float16"), shape=Tensor([2],"int32"), )
paddle.expand_as(Tensor([1, 128],"int64"), Tensor([17825793, 128],"int64"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([1, 1, 1, 1, 1, 2281701379],"int64"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([1, 1, 1, 1, 2281701379, 1],"int64"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([1, 1, 1, 2281701379, 1, 1],"int64"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([1, 2281701379, 1, 1, 1, 1],"int64"), )
paddle.expand_as(x=Tensor([2, 2],"int32"), y=Tensor([570425345, 2, 2],"int32"), )
paddle.expand_as(x=Tensor([2281701379],"int32"), y=Tensor([2281701379],"int32"), )
paddle.expand_as(x=Tensor([2],"int32"), y=Tensor([1140850690, 1, 2],"int32"), )
paddle.expand_as(x=Tensor([2],"int32"), y=Tensor([2, 570425345, 2],"int32"), )
paddle.expand_as(x=Tensor([3, 1],"int64"), y=Tensor([3, 760567127],"int64"), )
paddle.expand_as(x=Tensor([3],"int32"), y=Tensor([760567127, 3],"int32"), )
paddle.expand_as(x=Tensor([3],"int64"), y=Tensor([760567127, 3],"int64"), )
paddle.expm1(Tensor([1431655766, 3],"float16"), )
paddle.expm1(Tensor([2, 2147483649],"float16"), )
paddle.expm1(Tensor([2147483649, 2],"float16"), )
paddle.expm1(Tensor([3, 1431655766],"float16"), )
paddle.expm1(Tensor([4294967297],"float16"), )
paddle.expm1(Tensor([8, 16, 33554433],"float16"), )
paddle.expm1(Tensor([8, 16777217, 32],"float16"), )
paddle.expm1(Tensor([8388609, 16, 32],"float16"), )
paddle.expm1(x=Tensor([119304648, 6, 6],"float16"), )
paddle.expm1(x=Tensor([19884108, 6, 6, 6],"float16"), )
paddle.expm1(x=Tensor([3, 3, 477218589],"float16"), )
paddle.expm1(x=Tensor([3, 477218589, 3],"float16"), )
paddle.expm1(x=Tensor([3, 6, 6, 6, 6628036],"float16"), )
paddle.expm1(x=Tensor([3, 6, 6, 6628036, 6],"float16"), )
paddle.expm1(x=Tensor([3, 6, 6628036, 6, 6],"float16"), )
paddle.expm1(x=Tensor([3, 6628036, 6, 6, 6],"float16"), )
paddle.expm1(x=Tensor([3314018, 6, 6, 6, 6],"float16"), )
paddle.expm1(x=Tensor([477218589, 3, 3],"float16"), )
paddle.expm1(x=Tensor([6, 119304648, 6],"float16"), )
paddle.expm1(x=Tensor([6, 19884108, 6, 6],"float16"), )
paddle.expm1(x=Tensor([6, 6, 119304648],"float16"), )
paddle.expm1(x=Tensor([6, 6, 19884108, 6],"float16"), )
paddle.expm1(x=Tensor([6, 6, 6, 19884108],"float16"), )
paddle.expm1(x=Tensor([6, 715827883],"float16"), )
paddle.expm1(x=Tensor([715827883, 6],"float16"), )
paddle.fft.fftshift(x=Tensor([2, 1073741825, 2],"float16"), )
paddle.fft.fftshift(x=Tensor([2, 4, 536870913],"float16"), )
paddle.fft.fftshift(x=Tensor([214748365, 5, 4],"float16"), )
paddle.fft.fftshift(x=Tensor([2281701379],"float32"), )
paddle.fft.fftshift(x=Tensor([4, 268435457, 4],"float16"), )
paddle.fft.fftshift(x=Tensor([4, 5, 214748365],"float16"), )
paddle.fft.fftshift(x=Tensor([4, 5, 4, 53687092],"float16"), )
paddle.fft.fftshift(x=Tensor([4, 5, 53687092, 4],"float16"), )
paddle.fft.fftshift(x=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.fft.fftshift(x=Tensor([4294967297],"float16"), )
paddle.fft.fftshift(x=Tensor([536870913, 4, 2],"float16"), )
paddle.fft.fftshift(x=Tensor([53687092, 5, 4, 4],"float16"), )
paddle.fft.ifftshift(x=Tensor([2, 1073741825, 2],"float16"), )
paddle.fft.ifftshift(x=Tensor([2, 4, 536870913],"float16"), )
paddle.fft.ifftshift(x=Tensor([214748365, 5, 4],"float16"), )
paddle.fft.ifftshift(x=Tensor([2281701379],"float32"), )
paddle.fft.ifftshift(x=Tensor([4, 268435457, 4],"float16"), )
paddle.fft.ifftshift(x=Tensor([4, 5, 214748365],"float16"), )
paddle.fft.ifftshift(x=Tensor([4, 5, 4, 53687092],"float16"), )
paddle.fft.ifftshift(x=Tensor([4, 5, 53687092, 4],"float16"), )
paddle.fft.ifftshift(x=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.fft.ifftshift(x=Tensor([4294967297],"float16"), )
paddle.fft.ifftshift(x=Tensor([536870913, 4, 2],"float16"), )
paddle.fft.ifftshift(x=Tensor([53687092, 5, 4, 4],"float16"), )
paddle.flatten(Tensor([1, 1024, 1, 2228225],"float32"), 1, )
paddle.flatten(Tensor([1, 1024, 2228225, 1],"float32"), 1, )
paddle.flatten(Tensor([1, 1048577, 64, 64],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1, 1280, 1, 1782580],"float32"), 1, )
paddle.flatten(Tensor([1, 1280, 1782580, 1],"float32"), 1, )
paddle.flatten(Tensor([1, 13581556, 14, 12],"float32"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([1, 1431655766, 3],"float16"), start_axis=-3, stop_axis=-3, )
paddle.flatten(Tensor([1, 1431655766, 3],"float16"), start_axis=0, stop_axis=1, )
paddle.flatten(Tensor([1, 1431655766, 3],"float16"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([1, 16, 23767723, 6],"float32"), 1, )
paddle.flatten(Tensor([1, 16, 28521268, 5],"float32"), 1, )
paddle.flatten(Tensor([1, 16, 5, 28521268],"float32"), 1, )
paddle.flatten(Tensor([1, 16, 6, 23767723],"float32"), 1, )
paddle.flatten(Tensor([1, 2, 2147483649],"float16"), start_axis=-3, stop_axis=-3, )
paddle.flatten(Tensor([1, 2, 2147483649],"float16"), start_axis=0, stop_axis=1, )
paddle.flatten(Tensor([1, 2, 2147483649],"float16"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([1, 2048, 1, 1114113],"float32"), 1, )
paddle.flatten(Tensor([1, 2048, 1114113, 1],"float32"), 1, )
paddle.flatten(Tensor([1, 2281701379, 1, 1],"float32"), 1, )
paddle.flatten(Tensor([1, 256, 262145, 64],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1, 256, 64, 262145],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1, 2910334, 28, 28],"float32"), 2, )
paddle.flatten(Tensor([1, 46565335, 7, 7],"float32"), 1, )
paddle.flatten(Tensor([1, 46565335, 7, 7],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1, 512, 1, 4456449],"float32"), 1, )
paddle.flatten(Tensor([1, 512, 4456449, 1],"float32"), 1, )
paddle.flatten(Tensor([1, 512, 636636, 7],"float32"), 1, )
paddle.flatten(Tensor([1, 512, 7, 636636],"float32"), 1, )
paddle.flatten(Tensor([1, 576, 1, 3961288],"float32"), 1, )
paddle.flatten(Tensor([1, 576, 3961288, 1],"float32"), 1, )
paddle.flatten(Tensor([1, 63380594, 6, 6],"float32"), 1, )
paddle.flatten(Tensor([1, 768, 106106, 28],"float32"), 2, )
paddle.flatten(Tensor([1, 768, 28, 106106],"float32"), 2, )
paddle.flatten(Tensor([1, 8, 14, 20372334],"float32"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([1, 8, 23767723, 12],"float32"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([1, 8, 40744668, 7],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1, 8, 7, 40744668],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1, 91268056, 5, 5],"float32"), 1, )
paddle.flatten(Tensor([10, 228170138, 1, 1],"float32"), 1, )
paddle.flatten(Tensor([10, 512, 1, 445645],"float32"), 1, )
paddle.flatten(Tensor([10, 512, 445645, 1],"float32"), 1, )
paddle.flatten(Tensor([1000, 2281702],"float32"), )
paddle.flatten(Tensor([102261127, 7, 6],"float16"), )
paddle.flatten(Tensor([102261127, 7, 6],"float16"), 1, 2, )
paddle.flatten(Tensor([1024, 1280, 1, 1741],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1024, 1280, 1, 3277],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1024, 1280, 1741, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1024, 1280, 3277, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1024, 2228225, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1024, 256, 1244, 7],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1024, 256, 7, 1244],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1024, 4194305, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1024, 45474, 7, 7],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([104858, 1024, 1, 40],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([1073741825, 4],"float16"), )
paddle.flatten(Tensor([1073741825, 4],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([107374183, 2, 4, 5],"float16"), )
paddle.flatten(Tensor([110036, 144, 144, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([110036, 144, 144, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([1114113, 2048, 1, 1],"float32"), 1, )
paddle.flatten(Tensor([1114113, 2048, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1124, 2029984],"float32"), )
paddle.flatten(Tensor([114085069, 4, 5],"float32"), )
paddle.flatten(Tensor([114085069, 4, 5],"int32"), )
paddle.flatten(Tensor([114085069, 4, 5],"int64"), )
paddle.flatten(Tensor([11641334, 14, 14],"int64"), 1, )
paddle.flatten(Tensor([11883862, 1, 16, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([1188387, 1920, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([118839, 480, 1, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([12, 1024, 185686],"float32"), 1, )
paddle.flatten(Tensor([12, 11883862, 1, 16],"float32"), 2, )
paddle.flatten(Tensor([12, 190141782, 1],"float32"), 1, )
paddle.flatten(Tensor([12, 256, 1, 742742],"float32"), 2, )
paddle.flatten(Tensor([12, 256, 46422, 16],"float32"), 2, )
paddle.flatten(Tensor([12, 256, 742742],"float32"), 1, )
paddle.flatten(Tensor([124, 1536, 11980],"float32"), 1, )
paddle.flatten(Tensor([124, 18400818, 1],"float32"), 1, )
paddle.flatten(Tensor([124, 768, 23960],"float32"), 1, )
paddle.flatten(Tensor([128, 1024, 1, 17409],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 1024, 1, 17409],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([128, 1024, 1, 32769],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 1024, 1, 32769],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([128, 1024, 17409, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 1024, 32769, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 1024, 32769],"float16"), 1, )
paddle.flatten(Tensor([128, 1024, 436, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([128, 1024, 820, 40],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([128, 1280, 1, 13927],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 1280, 1, 26215],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 1280, 13927, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 1280, 26215, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 1536, 11606],"float32"), 1, )
paddle.flatten(Tensor([128, 17825793, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 17825793, 1],"float32"), 1, )
paddle.flatten(Tensor([128, 17825793],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 1920, 1, 9285],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 1920, 9285, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 2048, 1, 16385],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 2048, 1, 8705],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 2048, 16385, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 2048, 8705, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 2560, 1, 6964],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 2560, 6964, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 33554433, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 33554433, 1],"float16"), 1, )
paddle.flatten(Tensor([128, 33554433],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 445645, 1, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([128, 768, 23211],"float32"), 1, )
paddle.flatten(Tensor([128, 768, 43691],"float16"), 1, )
paddle.flatten(Tensor([128, 838861, 1, 40],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([13, 1, 14626291, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([13, 1, 16, 10969719],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([13, 914144, 16, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([141475, 144, 112, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([141475, 144, 112, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([142606337, 4, 4],"int64"), 1, )
paddle.flatten(Tensor([1431655766, 3],"bfloat16"), )
paddle.flatten(Tensor([1485483, 1536, 1],"float32"), 1, )
paddle.flatten(Tensor([148549, 384, 1, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([15845149, 12, 12],"int64"), 1, )
paddle.flatten(Tensor([16, 1, 11883862, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([16, 1, 16, 8912897],"float32"), start_axis=-2, )
paddle.flatten(Tensor([16, 1, 16, 8912897],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([16, 1, 8912897, 16],"float32"), start_axis=-2, )
paddle.flatten(Tensor([16, 1024, 139265],"float32"), 1, )
paddle.flatten(Tensor([16, 142606337, 1],"float32"), 1, )
paddle.flatten(Tensor([16, 142606337],"float32"), )
paddle.flatten(Tensor([16, 2, 16, 4456449],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([16, 2, 5941931, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([16, 557057, 16, 16],"float32"), start_axis=-2, )
paddle.flatten(Tensor([16, 742742, 16, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([1677722, 2560, 1, 1],"float16"), start_axis=1, )
paddle.flatten(Tensor([1687649, 2, 26, 26],"float32"), start_axis=1, )
paddle.flatten(Tensor([1697695, 8, 14, 12],"float32"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([1782580, 1280, 1, 1],"float32"), 1, )
paddle.flatten(Tensor([1782580, 1280, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([178956971, 4, 6],"float16"), 1, 2, )
paddle.flatten(Tensor([181896, 256, 7, 7],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([192, 480, 1, 46604],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([192, 480, 1166, 40],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([192, 559241, 1, 40],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([2, 1024, 1, 1114113],"float32"), 1, )
paddle.flatten(Tensor([2, 1024, 1114113, 1],"float32"), 1, )
paddle.flatten(Tensor([2, 107374183, 4, 5],"float16"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([2, 107374183, 4, 5],"float16"), start_axis=-3, stop_axis=-1, )
paddle.flatten(Tensor([2, 1140850690, 1, 1],"float32"), 1, )
paddle.flatten(Tensor([2, 1140850690],"float32"), )
paddle.flatten(Tensor([2, 1140850690],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([2, 1140850690],"int32"), )
paddle.flatten(Tensor([2, 1140850690],"int32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([2, 1140850690],"int64"), )
paddle.flatten(Tensor([2, 1140850690],"int64"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([2, 12, 95070891],"int64"), 1, )
paddle.flatten(Tensor([2, 1280, 1, 891290],"float32"), 1, )
paddle.flatten(Tensor([2, 1280, 891290, 1],"float32"), 1, )
paddle.flatten(Tensor([2, 14, 81489335],"int64"), 1, )
paddle.flatten(Tensor([2, 16, 14260634, 5],"float32"), 1, )
paddle.flatten(Tensor([2, 16, 5, 14260634],"float32"), 1, )
paddle.flatten(Tensor([2, 2, 1073741825],"float16"), start_axis=-1, stop_axis=-1, )
paddle.flatten(Tensor([2, 2, 1073741825],"float16"), start_axis=-3, stop_axis=1, )
paddle.flatten(Tensor([2, 2, 1073741825],"float16"), start_axis=0, stop_axis=-1, )
paddle.flatten(Tensor([2, 2, 1073741825],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([2, 2, 1073741825],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([2, 2, 16, 35651585],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([2, 2, 47535446, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([2, 2048, 1, 557057],"float32"), 1, )
paddle.flatten(Tensor([2, 2048, 557057, 1],"float32"), 1, )
paddle.flatten(Tensor([2, 2147483649],"bfloat16"), )
paddle.flatten(Tensor([2, 2147483649],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([2, 228170138, 5],"float32"), )
paddle.flatten(Tensor([2, 228170138, 5],"int32"), )
paddle.flatten(Tensor([2, 228170138, 5],"int64"), )
paddle.flatten(Tensor([2, 228170138, 5],"int64"), 1, )
paddle.flatten(Tensor([2, 285212673, 4],"int64"), 1, )
paddle.flatten(Tensor([2, 3, 143165577, 5],"float16"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([2, 3, 143165577, 5],"float16"), start_axis=-3, stop_axis=-1, )
paddle.flatten(Tensor([2, 3, 4, 178956971],"float16"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([2, 3, 4, 178956971],"float16"), start_axis=-3, stop_axis=-1, )
paddle.flatten(Tensor([2, 3, 4, 95070891],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([2, 3, 4, 95070891],"float32"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([2, 3, 715827883],"float16"), start_axis=-2, stop_axis=1, )
paddle.flatten(Tensor([2, 3, 95070891, 4],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([2, 3, 95070891, 4],"float32"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([2, 4, 285212673],"float32"), )
paddle.flatten(Tensor([2, 4, 285212673],"int32"), )
paddle.flatten(Tensor([2, 4, 285212673],"int64"), )
paddle.flatten(Tensor([2, 4, 285212673],"int64"), 1, )
paddle.flatten(Tensor([2, 4, 536870913],"float16"), )
paddle.flatten(Tensor([2, 429496730, 5],"float16"), )
paddle.flatten(Tensor([2, 45634028, 5, 5],"float32"), 1, )
paddle.flatten(Tensor([2, 5, 228170138],"int64"), 1, )
paddle.flatten(Tensor([2, 536870913, 4],"float16"), start_axis=-2, stop_axis=1, )
paddle.flatten(Tensor([2, 5941931, 16, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([2, 71303169, 4, 4],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([2, 71303169, 4, 4],"float32"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([2, 715827883, 3],"float16"), start_axis=-1, stop_axis=-1, )
paddle.flatten(Tensor([2, 715827883, 3],"float16"), start_axis=-3, stop_axis=1, )
paddle.flatten(Tensor([2, 715827883, 3],"float16"), start_axis=0, stop_axis=-1, )
paddle.flatten(Tensor([2, 715827883, 3],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([2, 715827883, 3],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([2, 81489335, 14],"int64"), 1, )
paddle.flatten(Tensor([2, 95070891, 12],"int64"), 1, )
paddle.flatten(Tensor([2097153, 2048, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([214748365, 4, 5],"float16"), )
paddle.flatten(Tensor([2228225, 1024, 1, 1],"float32"), 1, )
paddle.flatten(Tensor([2228225, 1024, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([2228225, 1024, 1],"float32"), 1, )
paddle.flatten(Tensor([223697, 480, 1, 40],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([2281701379],"float32"), )
paddle.flatten(Tensor([228170138, 10],"int64"), )
paddle.flatten(Tensor([25352238, 10, 9, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([25352238, 10, 9, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([25466, 50, 7, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([26843546, 2, 4, 4, 5],"float16"), )
paddle.flatten(Tensor([27509, 144, 144, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([285212673, 4, 2],"float32"), )
paddle.flatten(Tensor([285212673, 4, 2],"int32"), )
paddle.flatten(Tensor([285212673, 4, 2],"int64"), )
paddle.flatten(Tensor([2910334, 784],"float32"), )
paddle.flatten(Tensor([2970966, 768, 1],"float32"), 1, )
paddle.flatten(Tensor([3, 1, 16, 47535446],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([3, 1, 63380594, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([3, 100, 14316558],"float16"), 1, 2, )
paddle.flatten(Tensor([3, 100, 14316558],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([3, 11930465, 120],"float16"), 1, 2, )
paddle.flatten(Tensor([3, 11930465, 3, 4, 2, 5],"float16"), )
paddle.flatten(Tensor([3, 1431655766],"float16"), )
paddle.flatten(Tensor([3, 14316558, 100],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([3, 380283564, 2],"float32"), )
paddle.flatten(Tensor([3, 380283564, 2],"int32"), )
paddle.flatten(Tensor([3, 380283564, 2],"int64"), )
paddle.flatten(Tensor([3, 3961288, 16, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([3, 4, 190141782],"float32"), )
paddle.flatten(Tensor([3, 4, 190141782],"int32"), )
paddle.flatten(Tensor([3, 4, 190141782],"int64"), )
paddle.flatten(Tensor([3, 4, 357913942],"float16"), )
paddle.flatten(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), )
paddle.flatten(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), )
paddle.flatten(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), )
paddle.flatten(Tensor([3, 6, 5965233, 4, 2, 5],"float16"), )
paddle.flatten(Tensor([3, 715827883, 2],"float16"), )
paddle.flatten(Tensor([3, 760567127],"float32"), )
paddle.flatten(Tensor([32, 105479, 26, 26],"float32"), start_axis=1, )
paddle.flatten(Tensor([32, 2, 1371215, 26],"float32"), start_axis=1, )
paddle.flatten(Tensor([32, 2, 26, 1371215],"float32"), start_axis=1, )
paddle.flatten(Tensor([32, 71303169],"float32"), )
paddle.flatten(Tensor([32595734, 10, 7, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([32595734, 10, 7, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([3355444, 1280, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([35369, 144, 112, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([357913942, 3, 4],"float16"), 1, 2, )
paddle.flatten(Tensor([357913942, 3, 4],"float16"), start_axis=-2, stop_axis=1, )
paddle.flatten(Tensor([357914, 100, 120],"float16"), 1, 2, )
paddle.flatten(Tensor([371371, 3, 32, 64],"float32"), start_axis=-2, )
paddle.flatten(Tensor([3790, 768, 28, 28],"float32"), 2, )
paddle.flatten(Tensor([3961288, 16, 6, 6],"float32"), 1, )
paddle.flatten(Tensor([3961288, 576, 1, 1],"float32"), 1, )
paddle.flatten(Tensor([4, 10, 14260634, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 10, 57042535, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 10, 57042535, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 10, 7, 8148934],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 10, 7, 8148934],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 10, 9, 6338060],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 10, 9, 6338060],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 1024, 1, 557057],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([4, 1024, 13927, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([4, 1273271, 112, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 13421773, 4, 4, 5],"float16"), )
paddle.flatten(Tensor([4, 14260634, 1, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([4, 144, 112, 35369],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 144, 112, 35369],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 144, 144, 27509],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 144, 144, 27509],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 144, 160, 24759],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 144, 3961288, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 144, 3961288, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 144, 990322, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 15845149, 9, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 178956971, 6],"float16"), )
paddle.flatten(Tensor([4, 178956971, 6],"float16"), 1, 2, )
paddle.flatten(Tensor([4, 2, 107374183, 5],"float16"), )
paddle.flatten(Tensor([4, 2, 26843546, 4, 5],"float16"), )
paddle.flatten(Tensor([4, 2, 4, 134217729],"float16"), )
paddle.flatten(Tensor([4, 2, 4, 26843546, 5],"float16"), )
paddle.flatten(Tensor([4, 2, 4, 4, 33554433],"float16"), )
paddle.flatten(Tensor([4, 2, 536870913],"float16"), )
paddle.flatten(Tensor([4, 20372334, 7, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 268435457, 4],"float16"), )
paddle.flatten(Tensor([4, 278529, 32, 64],"float32"), start_axis=-2, )
paddle.flatten(Tensor([4, 3, 2970966, 64],"float32"), start_axis=-2, )
paddle.flatten(Tensor([4, 3, 32, 5941931],"float32"), start_axis=-2, )
paddle.flatten(Tensor([4, 3565159, 160, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 384, 1, 1485483],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([4, 384, 37138, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([4, 3961288, 144, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 3961288, 144, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 480, 1, 1188387],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([4, 480, 29710, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([4, 5093084, 112, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 5093084, 112, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 53687092, 4, 5],"float16"), )
paddle.flatten(Tensor([4, 63380594, 9, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 63380594, 9, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 7, 153391690],"float16"), )
paddle.flatten(Tensor([4, 7, 153391690],"float16"), 1, 2, )
paddle.flatten(Tensor([4, 81489335, 7, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 81489335, 7, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 990322, 144, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4097, 256, 64, 64],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([416, 3061, 7, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([416, 50, 429, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([416, 50, 7, 15672],"float32"), start_axis=2, )
paddle.flatten(Tensor([4194305, 1024, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([4194305, 1024, 1],"float16"), 1, )
paddle.flatten(Tensor([4294967297],"float16"), )
paddle.flatten(Tensor([429497, 100, 100],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([4456449, 512, 1, 1],"float32"), 1, )
paddle.flatten(Tensor([4456449, 512],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([456340276, 5],"float32"), )
paddle.flatten(Tensor([47535446, 3, 4, 4],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([47535446, 3, 4, 4],"float32"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([5, 214748365, 4],"float16"), 1, 2, )
paddle.flatten(Tensor([5, 3, 286331154],"float16"), 1, 2, )
paddle.flatten(Tensor([512, 2487, 7, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([512, 50, 349, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([512, 50, 7, 12733],"float32"), start_axis=2, )
paddle.flatten(Tensor([52, 24486, 7, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([52, 50, 3429, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([52, 50, 7, 125369],"float32"), start_axis=2, )
paddle.flatten(Tensor([536870913, 2, 4],"float16"), )
paddle.flatten(Tensor([536870913, 4, 2],"float16"), )
paddle.flatten(Tensor([557057, 256, 1, 16],"float32"), 2, )
paddle.flatten(Tensor([55706, 1024, 1, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([5592406, 768, 1],"float16"), 1, )
paddle.flatten(Tensor([570425345, 4],"float32"), )
paddle.flatten(Tensor([570425345, 4],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([570425345, 4],"int32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([570425345, 4],"int64"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([5704254, 16, 5, 5],"float32"), 1, )
paddle.flatten(Tensor([5704254, 16, 5, 5],"float32"), 1, -1, )
paddle.flatten(Tensor([5820667, 8, 7, 7],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([5941931, 2, 16, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([5965233, 6, 3, 4, 2, 5],"float16"), )
paddle.flatten(Tensor([6338060, 10, 9, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 1426064, 5, 5],"float32"), 1, -1, )
paddle.flatten(Tensor([64, 16, 445645, 5],"float32"), 1, -1, )
paddle.flatten(Tensor([64, 16, 5, 445645],"float32"), 1, -1, )
paddle.flatten(Tensor([64, 2560, 1, 13927],"float32"), start_axis=1, )
paddle.flatten(Tensor([64, 2560, 1, 26215],"float16"), start_axis=1, )
paddle.flatten(Tensor([64, 2560, 13927, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([64, 2560, 26215, 1],"float16"), start_axis=1, )
paddle.flatten(Tensor([64, 35651585, 1, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([64, 67108865, 1, 1],"float16"), start_axis=1, )
paddle.flatten(Tensor([7, 102261127, 6],"float16"), 1, 2, )
paddle.flatten(Tensor([7, 4, 153391690],"float16"), 1, 2, )
paddle.flatten(Tensor([71303169, 32],"float32"), )
paddle.flatten(Tensor([715827883, 2, 3],"float16"), start_axis=-1, stop_axis=-1, )
paddle.flatten(Tensor([715827883, 2, 3],"float16"), start_axis=-3, stop_axis=-3, )
paddle.flatten(Tensor([715827883, 2, 3],"float16"), start_axis=-3, stop_axis=1, )
paddle.flatten(Tensor([715827883, 2, 3],"float16"), start_axis=0, stop_axis=-1, )
paddle.flatten(Tensor([715827883, 2, 3],"float16"), start_axis=0, stop_axis=1, )
paddle.flatten(Tensor([715827883, 2, 3],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([715827883, 2, 3],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([715827883, 2, 3],"float16"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([71582789, 3, 4, 5],"float16"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([71582789, 3, 4, 5],"float16"), start_axis=-3, stop_axis=-1, )
paddle.flatten(Tensor([760567127, 3],"float32"), )
paddle.flatten(Tensor([760567127, 3],"int32"), )
paddle.flatten(Tensor([8148934, 10, 7, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8388609, 512],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8912897, 1, 16, 16],"float32"), start_axis=-2, )
paddle.flatten(Tensor([8912897, 256, 1],"float32"), 1, )
paddle.flatten(Tensor([891290, 2560, 1, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([891290, 2560, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([90948, 512, 7, 7],"float32"), 1, )
paddle.flatten(Tensor([91268056, 5, 5],"int64"), 1, )
paddle.flatten(Tensor([96, 480, 1, 49517],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([96, 480, 1238, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([96, 594194, 1, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([99033, 144, 160, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([1, 1431655766, 3],"float16"), start_axis=-3, stop_axis=-3, )
paddle.flatten(x=Tensor([1, 1431655766, 3],"float16"), start_axis=0, stop_axis=1, )
paddle.flatten(x=Tensor([1, 1431655766, 3],"float16"), start_axis=1, stop_axis=2, )
paddle.flatten(x=Tensor([1, 2, 2147483649],"float16"), start_axis=-3, stop_axis=-3, )
paddle.flatten(x=Tensor([1, 2, 2147483649],"float16"), start_axis=0, stop_axis=1, )
paddle.flatten(x=Tensor([1, 2, 2147483649],"float16"), start_axis=1, stop_axis=2, )
paddle.flatten(x=Tensor([11883862, 192, 1, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([124, 1280, 1, 14376],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([124, 1280, 14376, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([124, 18400818, 1, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([124, 192, 1, 95838],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([124, 192, 95838, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([124, 256, 1, 71879],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([124, 256, 71879, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([128, 1280, 1, 13927],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([128, 1280, 13927, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([128, 17825793, 1, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([128, 192, 1, 92843],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([128, 192, 92843, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([128, 256, 1, 69633],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([128, 256, 69633, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([1782580, 1280, 1, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([2, 107374183, 4, 5],"float16"), start_axis=-2, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 107374183, 4, 5],"float16"), start_axis=-3, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 2, 1073741825],"float16"), )
paddle.flatten(x=Tensor([2, 2, 1073741825],"float16"), start_axis=-3, stop_axis=1, )
paddle.flatten(x=Tensor([2, 2, 1073741825],"float16"), start_axis=0, )
paddle.flatten(x=Tensor([2, 2, 1073741825],"float16"), start_axis=0, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 2, 1073741825],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([2, 2, 1073741825],"float16"), stop_axis=-1, )
paddle.flatten(x=Tensor([2, 2, 1073741825],"int8"), )
paddle.flatten(x=Tensor([2, 2, 570425345],"float32"), )
paddle.flatten(x=Tensor([2, 2, 570425345],"int32"), )
paddle.flatten(x=Tensor([2, 2, 570425345],"int64"), )
paddle.flatten(x=Tensor([2, 3, 143165577, 5],"float16"), start_axis=-2, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 3, 143165577, 5],"float16"), start_axis=-3, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 3, 4, 178956971],"float16"), start_axis=-2, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 3, 4, 178956971],"float16"), start_axis=-3, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 3, 715827883],"float16"), start_axis=-2, stop_axis=1, )
paddle.flatten(x=Tensor([2, 380283564, 3],"float32"), )
paddle.flatten(x=Tensor([2, 380283564, 3],"int32"), )
paddle.flatten(x=Tensor([2, 380283564, 3],"int64"), )
paddle.flatten(x=Tensor([2, 536870913, 4],"float16"), start_axis=-2, stop_axis=1, )
paddle.flatten(x=Tensor([2, 715827883, 3],"float16"), )
paddle.flatten(x=Tensor([2, 715827883, 3],"float16"), start_axis=-3, stop_axis=1, )
paddle.flatten(x=Tensor([2, 715827883, 3],"float16"), start_axis=0, )
paddle.flatten(x=Tensor([2, 715827883, 3],"float16"), start_axis=0, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 715827883, 3],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([2, 715827883, 3],"float16"), stop_axis=-1, )
paddle.flatten(x=Tensor([2, 715827883, 3],"int8"), )
paddle.flatten(x=Tensor([20, 114085069, 1, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([20, 192, 1, 594194],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([20, 192, 594194, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([3, 100, 14316558],"float16"), )
paddle.flatten(x=Tensor([3, 14316558, 100],"float16"), )
paddle.flatten(x=Tensor([3, 3, 477218589],"float16"), name="test_name", )
paddle.flatten(x=Tensor([3, 477218589, 3],"float16"), name="test_name", )
paddle.flatten(x=Tensor([357913942, 3, 4],"float16"), start_axis=-2, stop_axis=1, )
paddle.flatten(x=Tensor([380283564, 2, 3],"float32"), )
paddle.flatten(x=Tensor([380283564, 2, 3],"int32"), )
paddle.flatten(x=Tensor([380283564, 2, 3],"int64"), )
paddle.flatten(x=Tensor([4, 1280, 1, 445645],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([4, 1280, 445645, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([4, 256, 1, 2228225],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([4, 256, 2228225, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([4, 570425345, 1, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([4294967297],"float16"), )
paddle.flatten(x=Tensor([429497, 100, 100],"float16"), )
paddle.flatten(x=Tensor([477218589, 3, 3],"float16"), name="test_name", )
paddle.flatten(x=Tensor([60, 1280, 1, 29710],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([60, 1280, 29710, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([60, 38028357, 1, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([64, 1280, 1, 27853],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([64, 1280, 27853, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([64, 35651585, 1, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([715827883, 2, 3],"float16"), )
paddle.flatten(x=Tensor([715827883, 2, 3],"float16"), start_axis=-3, stop_axis=-3, )
paddle.flatten(x=Tensor([715827883, 2, 3],"float16"), start_axis=-3, stop_axis=1, )
paddle.flatten(x=Tensor([715827883, 2, 3],"float16"), start_axis=0, )
paddle.flatten(x=Tensor([715827883, 2, 3],"float16"), start_axis=0, stop_axis=-1, )
paddle.flatten(x=Tensor([715827883, 2, 3],"float16"), start_axis=0, stop_axis=1, )
paddle.flatten(x=Tensor([715827883, 2, 3],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([715827883, 2, 3],"float16"), start_axis=1, stop_axis=2, )
paddle.flatten(x=Tensor([715827883, 2, 3],"float16"), stop_axis=-1, )
paddle.flatten(x=Tensor([715827883, 2, 3],"int8"), )
paddle.flatten(x=Tensor([71582789, 3, 4, 5],"float16"), start_axis=-2, stop_axis=-1, )
paddle.flatten(x=Tensor([71582789, 3, 4, 5],"float16"), start_axis=-3, stop_axis=-1, )
paddle.flatten(x=Tensor([8912897, 256, 1, 1],"float32"), start_axis=1, )
paddle.flip(Tensor([1140850690, 2],"float32"), tuple(-2,-1,), )
paddle.flip(Tensor([2, 1140850690],"float32"), list[0,], )
paddle.flip(Tensor([2, 1140850690],"float32"), tuple(-2,-1,), )
paddle.flip(Tensor([2, 2147483649],"float16"), tuple(-2,-1,), )
paddle.flip(Tensor([2147483649, 2],"float16"), tuple(-2,-1,), )
paddle.flip(Tensor([2281701379],"int32"), axis=list[0,], )
paddle.flip(Tensor([3, 15158, 224, 224],"float32"), axis=list[3,], )
paddle.flip(Tensor([3, 2, 380283564],"float32"), list[0,1,], )
paddle.flip(Tensor([3, 380283564, 2],"float32"), list[0,1,], )
paddle.flip(Tensor([3, 8, 224, 424424],"float32"), axis=list[3,], )
paddle.flip(Tensor([3, 8, 424424, 224],"float32"), axis=list[3,], )
paddle.flip(Tensor([4, 570425345],"float32"), list[0,1,], )
paddle.flip(Tensor([5685, 8, 224, 224],"float32"), axis=list[3,], )
paddle.flip(Tensor([570425345, 2, 2],"float32"), list[0,1,], )
paddle.flip(Tensor([570425345, 4],"float32"), list[0,1,], )
paddle.flip(Tensor([760567127, 3],"float32"), list[0,], )
paddle.flip(x=Tensor([17674763, 3, 3, 3, 3, 3],"float16"), axis=list[-1,0,3,4,2,], )
paddle.flip(x=Tensor([253522376, 3, 3],"bool"), axis=list[0,], )
paddle.flip(x=Tensor([3, 17674763, 3, 3, 3, 3],"float16"), axis=list[-1,0,3,4,2,], )
paddle.flip(x=Tensor([3, 253522376, 3],"bool"), axis=list[0,], )
paddle.flip(x=Tensor([3, 3, 17674763, 3, 3, 3],"float16"), axis=list[-1,0,3,4,2,], )
paddle.flip(x=Tensor([3, 3, 253522376],"bool"), axis=list[0,], )
paddle.flip(x=Tensor([3, 3, 3, 17674763, 3, 3],"float16"), axis=list[-1,0,3,4,2,], )
paddle.flip(x=Tensor([3, 3, 3, 3, 17674763, 3],"float16"), axis=list[-1,0,3,4,2,], )
paddle.flip(x=Tensor([3, 3, 3, 3, 3, 17674763],"float16"), axis=list[-1,0,3,4,2,], )
paddle.flip(x=Tensor([3, 3, 477218589],"float16"), axis=list[-1,0,1,], )
paddle.flip(x=Tensor([3, 3, 477218589],"float16"), axis=list[0,1,2,], )
paddle.flip(x=Tensor([3, 3, 477218589],"float16"), axis=list[0,], )
paddle.flip(x=Tensor([3, 477218589, 3],"float16"), axis=list[-1,0,1,], )
paddle.flip(x=Tensor([3, 477218589, 3],"float16"), axis=list[0,1,2,], )
paddle.flip(x=Tensor([3, 477218589, 3],"float16"), axis=list[0,], )
paddle.flip(x=Tensor([477218589, 3, 3],"float16"), axis=list[-1,0,1,], )
paddle.flip(x=Tensor([477218589, 3, 3],"float16"), axis=list[0,1,2,], )
paddle.flip(x=Tensor([477218589, 3, 3],"float16"), axis=list[0,], )
paddle.floor(Tensor([1, 1, 1, 1, 2281701379],"float32"), )
paddle.floor(Tensor([1, 1, 1, 2281701379, 1],"float32"), )
paddle.floor(Tensor([1, 1, 2281701379, 1, 1],"float32"), )
paddle.floor(Tensor([1, 1, 2281701379],"float32"), )
paddle.floor(Tensor([1, 1073741825, 4],"float16"), )
paddle.floor(Tensor([1, 1431655766, 3],"float16"), )
paddle.floor(Tensor([1, 2281701379, 1, 1, 1],"float32"), )
paddle.floor(Tensor([1, 2281701379, 1],"float32"), )
paddle.floor(Tensor([1, 3, 1431655766],"float16"), )
paddle.floor(Tensor([1, 3, 760567127],"float32"), )
paddle.floor(Tensor([1, 4294967297],"float16"), )
paddle.floor(Tensor([1, 760567127, 3],"float32"), )
paddle.floor(Tensor([10, 228170138],"float32"), )
paddle.floor(Tensor([10, 429496730],"float16"), )
paddle.floor(Tensor([100000, 2, 11409],"float32"), )
paddle.floor(Tensor([100000, 22818],"float32"), )
paddle.floor(Tensor([100000, 7606, 3],"float32"), )
paddle.floor(Tensor([103713700, 11, 2],"float32"), )
paddle.floor(Tensor([1073741825, 1, 4],"float16"), )
paddle.floor(Tensor([112, 1, 20372334],"float32"), )
paddle.floor(Tensor([112, 20372334, 1],"float32"), )
paddle.floor(Tensor([114085069, 10, 2],"float32"), )
paddle.floor(Tensor([1140850690, 2],"float32"), )
paddle.floor(Tensor([11930465, 6, 3, 4, 1, 5],"float16"), )
paddle.floor(Tensor([12, 1, 190141782],"float32"), )
paddle.floor(Tensor([12, 190141782, 1],"float32"), )
paddle.floor(Tensor([124, 1, 1, 18400818],"float32"), )
paddle.floor(Tensor([124, 1, 18400818, 1],"float32"), )
paddle.floor(Tensor([124, 18400818, 1, 1],"float32"), )
paddle.floor(Tensor([126761188, 9, 2],"float32"), )
paddle.floor(Tensor([128, 1, 1, 17825793],"float32"), )
paddle.floor(Tensor([128, 1, 17825793, 1],"float32"), )
paddle.floor(Tensor([128, 1, 17825793],"float32"), )
paddle.floor(Tensor([128, 17825793, 1, 1],"float32"), )
paddle.floor(Tensor([128, 17825793, 1],"float32"), )
paddle.floor(Tensor([14, 1, 162978670],"float32"), )
paddle.floor(Tensor([14, 162978670, 1],"float32"), )
paddle.floor(Tensor([142606337, 8, 2],"float32"), )
paddle.floor(Tensor([1431655766, 3],"float16"), )
paddle.floor(Tensor([144, 1, 15845149],"float32"), )
paddle.floor(Tensor([144, 15845149, 1],"float32"), )
paddle.floor(Tensor([14449, 157920],"float32"), )
paddle.floor(Tensor([16, 1, 1, 142606337],"float32"), )
paddle.floor(Tensor([16, 1, 142606337, 1],"float32"), )
paddle.floor(Tensor([16, 1, 142606337],"float32"), )
paddle.floor(Tensor([16, 142606337, 1, 1],"float32"), )
paddle.floor(Tensor([16, 142606337, 1],"float32"), )
paddle.floor(Tensor([162978670, 7, 2],"float32"), )
paddle.floor(Tensor([190141782, 12],"float32"), )
paddle.floor(Tensor([190141782, 2, 2, 3],"float32"), )
paddle.floor(Tensor([190141782, 6, 2],"float32"), )
paddle.floor(Tensor([2, 1, 1140850690],"float32"), )
paddle.floor(Tensor([2, 1140850690, 1],"float32"), )
paddle.floor(Tensor([2, 1140850690],"float32"), )
paddle.floor(Tensor([2, 142606337, 8],"float32"), )
paddle.floor(Tensor([2, 190141782, 2, 3],"float32"), )
paddle.floor(Tensor([2, 5, 2, 114085069],"float32"), )
paddle.floor(Tensor([2, 5, 228170138],"float32"), )
paddle.floor(Tensor([2, 5, 76056713, 3],"float32"), )
paddle.floor(Tensor([2, 570425345, 2],"float32"), )
paddle.floor(Tensor([2, 8, 142606337],"float32"), )
paddle.floor(Tensor([2281701379, 1, 1, 1, 1],"float32"), )
paddle.floor(Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.floor(Tensor([2281701379, 1, 1],"float32"), )
paddle.floor(Tensor([2281701379, 1],"float32"), )
paddle.floor(Tensor([2281701379],"float32"), )
paddle.floor(Tensor([228170138, 5, 2],"float32"), )
paddle.floor(Tensor([23860930, 6, 3, 1, 2, 5],"float16"), )
paddle.floor(Tensor([253522376, 3, 3],"float32"), )
paddle.floor(Tensor([2744, 1, 831524],"float32"), )
paddle.floor(Tensor([2744, 831524, 1],"float32"), )
paddle.floor(Tensor([28, 81489335],"float32"), )
paddle.floor(Tensor([285212673, 4, 2],"float32"), )
paddle.floor(Tensor([285212673, 8],"float32"), )
paddle.floor(Tensor([285213, 200, 40],"float32"), )
paddle.floor(Tensor([2910334, 1, 28, 28],"float32"), )
paddle.floor(Tensor([29826162, 6, 3, 4, 2, 1],"float16"), )
paddle.floor(Tensor([3, 23860930, 3, 4, 1, 5],"float16"), )
paddle.floor(Tensor([3, 47721859, 3, 1, 2, 5],"float16"), )
paddle.floor(Tensor([3, 59652324, 3, 4, 2, 1],"float16"), )
paddle.floor(Tensor([3, 6, 11930465, 4, 1, 5],"float16"), )
paddle.floor(Tensor([3, 6, 23860930, 1, 2, 5],"float16"), )
paddle.floor(Tensor([3, 6, 29826162, 4, 2, 1],"float16"), )
paddle.floor(Tensor([3, 6, 3, 1, 15907287, 5],"float16"), )
paddle.floor(Tensor([3, 6, 3, 1, 2, 39768216],"float16"), )
paddle.floor(Tensor([3, 6, 3, 15907287, 1, 5],"float16"), )
paddle.floor(Tensor([3, 6, 3, 39768216, 2, 1],"float16"), )
paddle.floor(Tensor([3, 6, 3, 4, 1, 19884108],"float16"), )
paddle.floor(Tensor([3, 6, 3, 4, 19884108, 1],"float16"), )
paddle.floor(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), )
paddle.floor(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), )
paddle.floor(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), )
paddle.floor(Tensor([30, 1901418, 40],"float32"), )
paddle.floor(Tensor([30, 200, 380284],"float32"), )
paddle.floor(Tensor([32, 1, 1, 71303169],"float32"), )
paddle.floor(Tensor([32, 1, 71303169, 1],"float32"), )
paddle.floor(Tensor([32, 71303169, 1, 1],"float32"), )
paddle.floor(Tensor([35651585, 8, 8],"float32"), )
paddle.floor(Tensor([357913942, 12],"float16"), )
paddle.floor(Tensor([357913942, 3, 4],"float16"), )
paddle.floor(Tensor([380283564, 2, 3],"float32"), )
paddle.floor(Tensor([380283564, 3, 2],"float32"), )
paddle.floor(Tensor([380283564, 6],"float32"), )
paddle.floor(Tensor([4, 1, 1, 570425345],"float32"), )
paddle.floor(Tensor([4, 1, 1073741825],"float16"), )
paddle.floor(Tensor([4, 1, 570425345, 1],"float32"), )
paddle.floor(Tensor([4, 1, 570425345],"float32"), )
paddle.floor(Tensor([4, 10, 57042535],"float32"), )
paddle.floor(Tensor([4, 1073741825, 1],"float16"), )
paddle.floor(Tensor([4, 1073741825],"float16"), )
paddle.floor(Tensor([4, 11, 51856850],"float32"), )
paddle.floor(Tensor([4, 12, 47535446],"float32"), )
paddle.floor(Tensor([4, 13, 43878873],"float32"), )
paddle.floor(Tensor([4, 14, 40744668],"float32"), )
paddle.floor(Tensor([4, 15, 38028357],"float32"), )
paddle.floor(Tensor([4, 16, 35651585],"float32"), )
paddle.floor(Tensor([4, 17, 33554433],"float32"), )
paddle.floor(Tensor([4, 178956971, 6],"float16"), )
paddle.floor(Tensor([4, 18, 31690297],"float32"), )
paddle.floor(Tensor([4, 19, 30022387],"float32"), )
paddle.floor(Tensor([4, 2, 2, 142606337],"float32"), )
paddle.floor(Tensor([4, 2, 285212673],"float32"), )
paddle.floor(Tensor([4, 2, 95070891, 3],"float32"), )
paddle.floor(Tensor([4, 285212673, 2],"float32"), )
paddle.floor(Tensor([4, 3, 190141782],"float32"), )
paddle.floor(Tensor([4, 4, 142606337],"float32"), )
paddle.floor(Tensor([4, 5, 114085069],"float32"), )
paddle.floor(Tensor([4, 5, 214748365],"float16"), )
paddle.floor(Tensor([4, 536870913, 2],"float16"), )
paddle.floor(Tensor([4, 570425345, 1, 1],"float32"), )
paddle.floor(Tensor([4, 570425345, 1],"float32"), )
paddle.floor(Tensor([4, 570425345],"float32"), )
paddle.floor(Tensor([4, 6, 95070891],"float32"), )
paddle.floor(Tensor([4, 7, 153391690],"float16"), )
paddle.floor(Tensor([4, 7, 81489335],"float32"), )
paddle.floor(Tensor([4, 8, 71303169],"float32"), )
paddle.floor(Tensor([4, 9, 63380594],"float32"), )
paddle.floor(Tensor([4, 95070891, 2, 3],"float32"), )
paddle.floor(Tensor([4294967297, 1],"float16"), )
paddle.floor(Tensor([4294967297],"float16"), )
paddle.floor(Tensor([429496730, 5, 2],"float16"), )
paddle.floor(Tensor([477218589, 3, 3],"float16"), )
paddle.floor(Tensor([5, 1, 858993460],"float16"), )
paddle.floor(Tensor([5, 214748365, 4],"float16"), )
paddle.floor(Tensor([5, 858993460],"float16"), )
paddle.floor(Tensor([512, 1, 4456449],"float32"), )
paddle.floor(Tensor([512, 4456449, 1],"float32"), )
paddle.floor(Tensor([570425345, 2, 2],"float32"), )
paddle.floor(Tensor([60, 1, 1, 38028357],"float32"), )
paddle.floor(Tensor([60, 1, 38028357, 1],"float32"), )
paddle.floor(Tensor([60, 1, 38028357],"float32"), )
paddle.floor(Tensor([60, 38028357, 1, 1],"float32"), )
paddle.floor(Tensor([60, 38028357, 1],"float32"), )
paddle.floor(Tensor([60044774, 19, 2],"float32"), )
paddle.floor(Tensor([613566757, 7, 1],"float16"), )
paddle.floor(Tensor([63380594, 18, 2],"float32"), )
paddle.floor(Tensor([64, 1, 1, 35651585],"float32"), )
paddle.floor(Tensor([64, 1, 1273271, 28],"float32"), )
paddle.floor(Tensor([64, 1, 28, 1273271],"float32"), )
paddle.floor(Tensor([64, 1, 35651585, 1],"float32"), )
paddle.floor(Tensor([64, 1, 35651585],"float32"), )
paddle.floor(Tensor([64, 35651585, 1, 1],"float32"), )
paddle.floor(Tensor([64, 35651585, 1],"float32"), )
paddle.floor(Tensor([64, 45474, 28, 28],"float32"), )
paddle.floor(Tensor([67108865, 17, 2],"float32"), )
paddle.floor(Tensor([7, 613566757],"float16"), )
paddle.floor(Tensor([71303169, 16, 2],"float32"), )
paddle.floor(Tensor([715827883, 1, 6],"float16"), )
paddle.floor(Tensor([760567127, 3],"float32"), )
paddle.floor(Tensor([76056713, 15, 2],"float32"), )
paddle.floor(Tensor([76056713, 5, 2, 3],"float32"), )
paddle.floor(Tensor([8, 1, 1, 285212673],"float32"), )
paddle.floor(Tensor([8, 1, 285212673, 1],"float32"), )
paddle.floor(Tensor([8, 1, 285212673],"float32"), )
paddle.floor(Tensor([8, 285212673, 1, 1],"float32"), )
paddle.floor(Tensor([8, 285212673, 1],"float32"), )
paddle.floor(Tensor([8, 285212673],"float32"), )
paddle.floor(Tensor([81489335, 14, 2],"float32"), )
paddle.floor(Tensor([81489335, 28],"float32"), )
paddle.floor(Tensor([87757746, 13, 2],"float32"), )
paddle.floor(Tensor([9, 253522376],"float32"), )
paddle.floor(Tensor([95070891, 12, 2],"float32"), )
paddle.floor(x=Tensor([100, 15802, 38, 38],"float32"), )
paddle.floor(x=Tensor([100, 281692, 9, 9],"float32"), )
paddle.floor(x=Tensor([100, 4, 150112, 38],"float32"), )
paddle.floor(x=Tensor([100, 4, 38, 150112],"float32"), )
paddle.floor(x=Tensor([100, 4, 633806, 9],"float32"), )
paddle.floor(x=Tensor([100, 4, 9, 633806],"float32"), )
paddle.floor(x=Tensor([253522376, 3, 3],"float32"), )
paddle.floor(x=Tensor([3, 253522376, 3],"float32"), )
paddle.floor(x=Tensor([3, 3, 253522376],"float32"), )
paddle.floor(x=Tensor([3, 3, 477218589],"float16"), )
paddle.floor(x=Tensor([3, 477218589, 3],"float16"), )
paddle.floor(x=Tensor([395032, 4, 38, 38],"float32"), )
paddle.floor(x=Tensor([477218589, 3, 3],"float16"), )
paddle.floor(x=Tensor([7042289, 4, 9, 9],"float32"), )
paddle.floor_divide(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.floor_divide(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.floor_divide(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.floor_divide(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.floor_divide(Tensor([10, 228170138],"int64"), Tensor([10, 228170138],"int64"), )
paddle.floor_divide(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.floor_divide(Tensor([1],"bfloat16"), Tensor([4294967297],"bfloat16"), )
paddle.floor_divide(Tensor([1],"float16"), Tensor([4294967297],"float16"), )
paddle.floor_divide(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.floor_divide(Tensor([2228225, 1024],"int64"), Tensor([2228225, 1024],"int64"), )
paddle.floor_divide(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.floor_divide(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.floor_divide(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.floor_divide(Tensor([285212673, 8],"int64"), Tensor([1],"int64"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 357913942],"float16"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.floor_divide(Tensor([4, 536870913, 2],"bfloat16"), Tensor([4, 536870913, 2],"float16"), )
paddle.floor_divide(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"bfloat16"), )
paddle.floor_divide(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.floor_divide(Tensor([4, 570425345],"int64"), Tensor([1],"int64"), )
paddle.floor_divide(Tensor([4294967297],"bfloat16"), Tensor([4294967297],"bfloat16"), )
paddle.floor_divide(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.floor_divide(Tensor([4294967297],"int16"), Tensor([4294967297],"int16"), )
paddle.floor_divide(Tensor([4294967297],"int8"), Tensor([4294967297],"int8"), )
paddle.floor_divide(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), )
paddle.floor_divide(Tensor([570425345, 4],"int64"), Tensor([1],"int64"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float16"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"bfloat16"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.floor_divide(Tensor([8, 285212673],"int64"), Tensor([1],"int64"), )
paddle.floor_divide(x=Tensor([2281701379, 1],"int32"), y=Tensor([2281701379, 1],"int32"), )
paddle.floor_divide(x=Tensor([2281701379, 1],"int32"), y=Tensor([2281701379, 1],"int32"), name=None, )
paddle.floor_divide(x=Tensor([2281701379],"int32"), y=Tensor([2281701379],"int32"), )
paddle.floor_divide(x=Tensor([2281701379],"int64"), y=Tensor([2281701379],"int64"), )
paddle.floor_divide(x=Tensor([253522376, 3, 3],"int32"), y=Tensor([3],"int32"), )
paddle.floor_divide(x=Tensor([3, 1],"int32"), y=Tensor([3, 760567127],"int32"), )
paddle.floor_divide(x=Tensor([3, 1],"int32"), y=Tensor([3, 760567127],"int32"), name=None, )
paddle.floor_divide(x=Tensor([3, 253522376, 3],"int32"), y=Tensor([3],"int32"), )
paddle.floor_divide(x=Tensor([3, 760567127],"int32"), y=Tensor([3, 1],"int32"), )
paddle.floor_divide(x=Tensor([3, 760567127],"int32"), y=Tensor([3, 1],"int32"), name=None, )
paddle.floor_divide(x=Tensor([3, 760567127],"int32"), y=Tensor([3, 760567127],"int32"), )
paddle.floor_divide(x=Tensor([3, 760567127],"int32"), y=Tensor([3, 760567127],"int32"), name=None, )
paddle.fmax(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.fmax(Tensor([152113426, 15],"float32"), Tensor([152113426, 15],"float32"), )
paddle.fmax(Tensor([152113426, 15],"float32"), Tensor([15],"float32"), )
paddle.fmax(Tensor([285213, 200, 40],"float32"), Tensor([285213, 200, 40],"float32"), )
paddle.fmax(Tensor([30, 1901418, 40],"float32"), Tensor([30, 1901418, 40],"float32"), )
paddle.fmax(Tensor([30, 200, 380284],"float32"), Tensor([30, 200, 380284],"float32"), )
paddle.fmax(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.fmax(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.fmax(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.fmin(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.fmin(Tensor([152113426, 15],"float32"), Tensor([152113426, 15],"float32"), )
paddle.fmin(Tensor([152113426, 15],"float32"), Tensor([15],"float32"), )
paddle.fmin(Tensor([285213, 200, 40],"float32"), Tensor([285213, 200, 40],"float32"), )
paddle.fmin(Tensor([30, 1901418, 40],"float32"), Tensor([30, 1901418, 40],"float32"), )
paddle.fmin(Tensor([30, 200, 380284],"float32"), Tensor([30, 200, 380284],"float32"), )
paddle.fmin(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.fmin(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.fmin(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.frac(Tensor([10, 20, 11408507],"float32"), )
paddle.frac(Tensor([10, 228170138, 1],"float32"), )
paddle.frac(Tensor([114085069, 20, 1],"float32"), )
paddle.frac(Tensor([1431655766, 3],"float16"), )
paddle.frac(Tensor([2, 1140850690],"float32"), )
paddle.frac(Tensor([2, 2147483649],"float16"), )
paddle.frac(Tensor([760567127, 3],"float32"), )
paddle.full_like(Tensor([1, 1, 1, 2281701379],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 1, 2281701379],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([1, 1, 103713700, 22],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 1114113, 2048],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([1, 1, 20, 114085069],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 2048, 1114113],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([1, 1, 2281701379, 1],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([1, 1, 39339679, 58],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 58, 39339679],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 87757746, 26],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 91268056, 25],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 95070891, 24],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 99204408, 23],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1073741825, 4],"float16"), fill_value=1, )
paddle.full_like(Tensor([1, 1431655766, 3],"float16"), fill_value=2, )
paddle.full_like(Tensor([1, 192, 3, 3961288],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 192, 3961288, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 2281701379, 1, 1],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([1, 2281701379],"float32"), -math.inf, )
paddle.full_like(Tensor([1, 2281701379],"float32"), 0.0, )
paddle.full_like(Tensor([1, 2281701379],"float32"), dtype=type(numpy.float32), fill_value=1.1, )
paddle.full_like(Tensor([1, 2281701379],"int32"), 10, )
paddle.full_like(Tensor([1, 2281701379],"int32"), 11, )
paddle.full_like(Tensor([1, 2281701379],"int32"), 15, )
paddle.full_like(Tensor([1, 2281701379],"int32"), 2, )
paddle.full_like(Tensor([1, 2281701379],"int32"), 4, )
paddle.full_like(Tensor([1, 2281701379],"int64"), -1, )
paddle.full_like(Tensor([1, 2281701379],"int64"), 0, )
paddle.full_like(Tensor([1, 2281701379],"int64"), 1, )
paddle.full_like(Tensor([1, 2281701379],"int64"), 2, )
paddle.full_like(Tensor([1, 2281701379],"int64"), 255, )
paddle.full_like(Tensor([1, 2281701379],"int64"), 3, )
paddle.full_like(Tensor([1, 2281701379],"int64"), 7, )
paddle.full_like(Tensor([1, 2281701379],"int64"), 98, )
paddle.full_like(Tensor([1, 2281701379],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([1, 253522376, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 3, 1431655766],"float16"), fill_value=1, )
paddle.full_like(Tensor([1, 3, 1431655766],"float16"), fill_value=2, )
paddle.full_like(Tensor([1, 3, 760567127],"float32"), fill_value=2, )
paddle.full_like(Tensor([1, 300, 7605672],"float32"), 1, )
paddle.full_like(Tensor([1, 384, 1980644, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 384, 3, 1980644],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 4294967297],"float16"), 0.0, )
paddle.full_like(Tensor([1, 5185685, 20, 22],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 545, 2048, 2048],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([1, 557057, 4096],"float32"), 1, )
paddle.full_like(Tensor([1, 678271, 58, 58],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 760567127, 3],"float32"), fill_value=2, )
paddle.full_like(Tensor([1, 768, 3, 990322],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 768, 990322, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 87757746, 1, 26],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 91268056, 1, 25],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 95070891, 1, 24],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 96, 3, 7922575],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 96, 7922575, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 99204408, 1, 23],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([10, 192, 3, 396129],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([10, 192, 396129, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([10, 228170138],"float32"), -math.inf, )
paddle.full_like(Tensor([10, 228170138],"float32"), 0, )
paddle.full_like(Tensor([10, 228170138],"int64"), 3, )
paddle.full_like(Tensor([10, 228170138],"int64"), 7, )
paddle.full_like(Tensor([10, 228170138],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([10, 25352238, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([10, 384, 198065, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([10, 384, 3, 198065],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([10, 429496730],"float16"), 0, )
paddle.full_like(Tensor([10, 768, 3, 99033],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([10, 768, 99033, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1024, 2228225],"float32"), 0.334840825619673, )
paddle.full_like(Tensor([106106, 21504],"int32"), 10, )
paddle.full_like(Tensor([106106, 21504],"int32"), 15, )
paddle.full_like(Tensor([1073741825, 1, 4],"float16"), fill_value=2, )
paddle.full_like(Tensor([1073742, 2125],"int32"), 4, )
paddle.full_like(Tensor([1086525, 2100],"int32"), 1, )
paddle.full_like(Tensor([1086525, 2100],"int32"), 80, )
paddle.full_like(Tensor([114, 37675152],"float16"), -2.220446049250313e-16, )
paddle.full_like(Tensor([114, 37675152],"float16"), -math.inf, )
paddle.full_like(Tensor([114, 37675152],"float16"), 0.0, )
paddle.full_like(Tensor([114, 37675152],"float16"), math.inf, )
paddle.full_like(Tensor([114085069, 20],"int64"), 3, )
paddle.full_like(Tensor([114085069, 20],"int64"), 7, )
paddle.full_like(Tensor([1140850690, 2],"float32"), -1.1920928955078125e-07, )
paddle.full_like(Tensor([1140850690, 2],"float32"), -math.inf, )
paddle.full_like(Tensor([1140850690, 2],"float32"), 0.0, )
paddle.full_like(Tensor([1140850690, 2],"float32"), 0.5, )
paddle.full_like(Tensor([1140850690, 2],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([1140850690, 2],"float32"), dtype=type(numpy.float32), fill_value=1.1, )
paddle.full_like(Tensor([1140850690, 2],"float32"), math.inf, )
paddle.full_like(Tensor([1140850690, 2],"int64"), 7, )
paddle.full_like(Tensor([11408507, 200],"float32"), 0.0, )
paddle.full_like(Tensor([11641334, 4, 7, 7],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([11883862, 192],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([11883862, 192],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([11930465, 6, 3, 4, 1, 5],"float16"), fill_value=1, )
paddle.full_like(Tensor([128, 33554433],"float16"), -127, )
paddle.full_like(Tensor([128, 33554433],"float16"), 127, )
paddle.full_like(Tensor([13, 175515491],"int64"), 1, )
paddle.full_like(Tensor([13, 3134206, 56],"int64"), 15, )
paddle.full_like(Tensor([13, 3134206, 56],"int64"), 31, )
paddle.full_like(Tensor([13, 3581949, 7, 7],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([13, 4, 6268411, 7],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([13, 4, 7, 6268411],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([13, 56, 3134206],"int64"), 15, )
paddle.full_like(Tensor([13, 56, 3134206],"int64"), 31, )
paddle.full_like(Tensor([131073, 8, 64, 64],"float16"), -127, )
paddle.full_like(Tensor([131073, 8, 64, 64],"float16"), 127, )
paddle.full_like(Tensor([1320430, 192, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([1320430, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([134217729, 17],"int64"), 3, )
paddle.full_like(Tensor([134218, 32000],"float16"), 0.0, )
paddle.full_like(Tensor([14260634, 160],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1431655766, 3],"float16"), 0.5, )
paddle.full_like(Tensor([1431655766, 3],"float16"), 0.9999998807907104, )
paddle.full_like(Tensor([1431655766, 3],"float16"), 1.1754943508222875e-38, )
paddle.full_like(Tensor([1431655766, 3],"float16"), fill_value=math.inf, )
paddle.full_like(Tensor([1431655766, 3],"float16"), fill_value=nan, )
paddle.full_like(Tensor([148, 5, 3083381],"float32"), -1.1920928955078125e-07, )
paddle.full_like(Tensor([148, 5, 3083381],"float32"), -math.inf, )
paddle.full_like(Tensor([148, 5, 3083381],"float32"), 0.0, )
paddle.full_like(Tensor([148, 5, 3083381],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([148, 5, 3083381],"float32"), math.inf, )
paddle.full_like(Tensor([148, 5138968, 3],"float32"), -1.1920928955078125e-07, )
paddle.full_like(Tensor([148, 5138968, 3],"float32"), -math.inf, )
paddle.full_like(Tensor([148, 5138968, 3],"float32"), 0.0, )
paddle.full_like(Tensor([148, 5138968, 3],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([148, 5138968, 3],"float32"), math.inf, )
paddle.full_like(Tensor([152113426, 5, 3],"float32"), -1.1920928955078125e-07, )
paddle.full_like(Tensor([152113426, 5, 3],"float32"), -math.inf, )
paddle.full_like(Tensor([152113426, 5, 3],"float32"), 0.0, )
paddle.full_like(Tensor([152113426, 5, 3],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([152113426, 5, 3],"float32"), math.inf, )
paddle.full_like(Tensor([16, 142606337],"float32"), 1.0, )
paddle.full_like(Tensor([16, 142606337],"float32"), 1e-20, )
paddle.full_like(Tensor([16, 142606337],"int32"), 4, )
paddle.full_like(Tensor([16, 142606337],"int32"), 80, )
paddle.full_like(Tensor([16, 268435457],"float16"), 1.0, )
paddle.full_like(Tensor([16, 268435457],"float16"), 1e-20, )
paddle.full_like(Tensor([17, 134217729],"int64"), 3, )
paddle.full_like(Tensor([17825793, 128],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([17825793, 128],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([18512791, 232],"float16"), 0.0, None, None, )
paddle.full_like(Tensor([1857, 300, 4096],"float32"), 1, )
paddle.full_like(Tensor([188633, 12096],"int32"), 1, )
paddle.full_like(Tensor([188633, 12096],"int32"), 80, )
paddle.full_like(Tensor([190141782, 12],"float32"), 0, )
paddle.full_like(Tensor([1948, 1171305],"float32"), -1.1920928955078125e-07, )
paddle.full_like(Tensor([1948, 1171305],"float32"), -math.inf, )
paddle.full_like(Tensor([1948, 1171305],"float32"), 0.0, )
paddle.full_like(Tensor([1948, 1171305],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([1948, 1171305],"float32"), math.inf, )
paddle.full_like(Tensor([2, 1, 1, 1140850690],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([2, 1, 1, 1140850690],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1, 1, 1140850690],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 1, 10, 114085069],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 1, 10969719, 104],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1, 11076221, 103],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1, 11184811, 102],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1, 11295552, 101],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1, 114085069, 10],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 1, 11408507, 100],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1, 162978670, 7],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 1, 190141782, 6],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([2, 1, 190141782, 6],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 1, 228170138, 5],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 1, 31690297, 36],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1, 5, 228170138],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 1, 6, 190141782],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 10969719, 1, 104],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 11076221, 1, 103],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 11184811, 1, 102],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 11295552, 1, 101],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1140850690],"float32"), -10.0, )
paddle.full_like(Tensor([2, 1140850690],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 1140850690],"float32"), -math.inf, )
paddle.full_like(Tensor([2, 1140850690],"float32"), 0.5, )
paddle.full_like(Tensor([2, 1140850690],"float32"), 1.0, )
paddle.full_like(Tensor([2, 1140850690],"float32"), 100.0, )
paddle.full_like(Tensor([2, 1140850690],"float32"), 2.0, )
paddle.full_like(Tensor([2, 1140850690],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 1140850690],"float32"), fill_value=2, )
paddle.full_like(Tensor([2, 1140850690],"float32"), fill_value=math.inf, )
paddle.full_like(Tensor([2, 1140850690],"float32"), fill_value=nan, )
paddle.full_like(Tensor([2, 1140850690],"float32"), math.inf, )
paddle.full_like(Tensor([2, 1140850690],"int32"), 1, )
paddle.full_like(Tensor([2, 1140850690],"int32"), 4, )
paddle.full_like(Tensor([2, 1140850690],"int64"), -1, )
paddle.full_like(Tensor([2, 1140850690],"int64"), 0, )
paddle.full_like(Tensor([2, 1140850690],"int64"), 1, )
paddle.full_like(Tensor([2, 1140850690],"int64"), 151643, )
paddle.full_like(Tensor([2, 1140850690],"int64"), 2, )
paddle.full_like(Tensor([2, 1140850690],"int64"), 255, )
paddle.full_like(Tensor([2, 1140850690],"int64"), 3, )
paddle.full_like(Tensor([2, 1140850690],"int64"), 7, )
paddle.full_like(Tensor([2, 1140850690],"int64"), 98, )
paddle.full_like(Tensor([2, 1140850690],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([2, 11408507, 1, 100],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 11408507, 10, 10],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 162978670, 1, 7],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 190141782, 1, 6],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([2, 190141782, 1, 6],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 2147483649],"float16"), -127, )
paddle.full_like(Tensor([2, 2147483649],"float16"), 0.5, )
paddle.full_like(Tensor([2, 2147483649],"float16"), 127, )
paddle.full_like(Tensor([2, 2147483649],"float16"), fill_value=math.inf, )
paddle.full_like(Tensor([2, 2147483649],"float16"), fill_value=nan, )
paddle.full_like(Tensor([2, 31690297, 1, 36],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 31690297, 6, 6],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 45634028, 5, 5],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 524289, 64, 64],"float16"), -127, )
paddle.full_like(Tensor([2, 524289, 64, 64],"float16"), 127, )
paddle.full_like(Tensor([2, 8, 4194305, 64],"float16"), -127, )
paddle.full_like(Tensor([2, 8, 4194305, 64],"float16"), 127, )
paddle.full_like(Tensor([2, 8, 64, 4194305],"float16"), -127, )
paddle.full_like(Tensor([2, 8, 64, 4194305],"float16"), 127, )
paddle.full_like(Tensor([20, 114085069],"int64"), 3, )
paddle.full_like(Tensor([20, 114085069],"int64"), 7, )
paddle.full_like(Tensor([205393, 11109],"int32"), 1, )
paddle.full_like(Tensor([205393, 11109],"int32"), 80, )
paddle.full_like(Tensor([219, 10418728],"float32"), 0.0, None, None, )
paddle.full_like(Tensor([219, 10418728],"float32"), 0.0, VarType(bfloat16), None, )
paddle.full_like(Tensor([219, 10418728],"int32"), 0.0, Dtype(int16), None, )
paddle.full_like(Tensor([219, 10418728],"int32"), 0.0, None, None, )
paddle.full_like(Tensor([219, 10418728],"int32"), 0.0, VarType(float32), None, )
paddle.full_like(Tensor([219, 10418728],"int32"), 1.0, None, None, )
paddle.full_like(Tensor([219, 10418728],"int32"), 1e-10, None, None, )
paddle.full_like(Tensor([219, 10418728],"int32"), 1e-100, None, None, )
paddle.full_like(Tensor([219, 19611723],"float16"), 0.0, None, None, )
paddle.full_like(Tensor([21939437, 1, 1, 104],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([22152441, 1, 1, 103],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([221848, 10285],"int32"), 11, )
paddle.full_like(Tensor([2228225, 1024],"float32"), 0.334840825619673, )
paddle.full_like(Tensor([22369622, 1, 1, 102],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([224489, 10164],"int32"), 1, )
paddle.full_like(Tensor([224489, 10164],"int32"), 4, )
paddle.full_like(Tensor([224489, 10164],"int32"), 80, )
paddle.full_like(Tensor([22591103, 1, 1, 101],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2281701379, 1, 1, 1],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2281701379, 1],"float32"), 0.5, )
paddle.full_like(Tensor([2281701379, 1],"float32"), fill_value=2, )
paddle.full_like(Tensor([2281701379, 1],"float32"), fill_value=6, )
paddle.full_like(Tensor([2281701379, 1],"int64"), -1, )
paddle.full_like(Tensor([2281701379, 1],"int64"), 0, )
paddle.full_like(Tensor([2281701379, 1],"int64"), 1, )
paddle.full_like(Tensor([2281701379, 1],"int64"), 151643, )
paddle.full_like(Tensor([2281701379, 1],"int64"), 2, )
paddle.full_like(Tensor([2281701379, 1],"int64"), 255, )
paddle.full_like(Tensor([2281701379, 1],"int64"), 3, )
paddle.full_like(Tensor([2281701379, 1],"int64"), 7, )
paddle.full_like(Tensor([2281701379, 1],"int64"), 98, )
paddle.full_like(Tensor([2281701379, 1],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([2281701379],"float32"), -2.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2281701379],"float32"), -4.595, dtype=Dtype(float32), )
paddle.full_like(Tensor([2281701379],"float32"), -4.59511985013459, dtype=Dtype(float32), )
paddle.full_like(Tensor([2281701379],"float32"), -4.59511985013459, dtype=VarType(float32), )
paddle.full_like(Tensor([2281701379],"float32"), 0, dtype=Dtype(float32), )
paddle.full_like(Tensor([2281701379],"float32"), 0, dtype=VarType(float32), )
paddle.full_like(Tensor([2281701379],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([2281701379],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2281701379],"float32"), 0.0001, )
paddle.full_like(Tensor([2281701379],"float32"), 0.5, )
paddle.full_like(Tensor([2281701379],"float32"), 1.0, )
paddle.full_like(Tensor([2281701379],"float32"), 1.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([2281701379],"float32"), 1.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2281701379],"float32"), 1e-20, )
paddle.full_like(Tensor([2281701379],"float32"), fill_value=0, )
paddle.full_like(Tensor([2281701379],"float32"), fill_value=1023, )
paddle.full_like(Tensor([2281701379],"float32"), fill_value=1183, )
paddle.full_like(Tensor([2281701379],"float32"), fill_value=16383, )
paddle.full_like(Tensor([2281701379],"float32"), fill_value=19, )
paddle.full_like(Tensor([2281701379],"float32"), fill_value=2, )
paddle.full_like(Tensor([2281701379],"float32"), fill_value=31, )
paddle.full_like(Tensor([2281701379],"float32"), fill_value=35967, )
paddle.full_like(Tensor([2281701379],"float32"), fill_value=36, )
paddle.full_like(Tensor([2281701379],"float32"), fill_value=5, )
paddle.full_like(Tensor([2281701379],"float32"), fill_value=511, )
paddle.full_like(Tensor([2281701379],"float32"), fill_value=7, )
paddle.full_like(Tensor([2281701379],"int64"), 0, )
paddle.full_like(Tensor([2281701379],"int64"), 1, )
paddle.full_like(Tensor([2281701379],"int64"), 10, )
paddle.full_like(Tensor([2281701379],"int64"), 11, )
paddle.full_like(Tensor([2281701379],"int64"), 12, )
paddle.full_like(Tensor([2281701379],"int64"), 13, )
paddle.full_like(Tensor([2281701379],"int64"), 14, )
paddle.full_like(Tensor([2281701379],"int64"), 15, )
paddle.full_like(Tensor([2281701379],"int64"), 2, )
paddle.full_like(Tensor([2281701379],"int64"), 3, )
paddle.full_like(Tensor([2281701379],"int64"), 4, )
paddle.full_like(Tensor([2281701379],"int64"), 5, )
paddle.full_like(Tensor([2281701379],"int64"), 6, )
paddle.full_like(Tensor([2281701379],"int64"), 7, )
paddle.full_like(Tensor([2281701379],"int64"), 8, )
paddle.full_like(Tensor([2281701379],"int64"), 9, )
paddle.full_like(Tensor([2281701379],"int64"), False, dtype="bool", )
paddle.full_like(Tensor([228170138, 10],"int64"), 3, )
paddle.full_like(Tensor([228170138, 10],"int64"), 7, )
paddle.full_like(Tensor([228170138, 5, 2],"float32"), 0, )
paddle.full_like(Tensor([22817014, 1, 1, 100],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([22817014, 1, 10, 10],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([23047489, 99],"float32"), 0.0, )
paddle.full_like(Tensor([23767723, 96],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([23767723, 96],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([23860930, 6, 3, 1, 2, 5],"float16"), fill_value=3, )
paddle.full_like(Tensor([253522376, 3, 3],"float32"), fill_value=2, )
paddle.full_like(Tensor([256, 8912897],"float32"), 0, dtype=VarType(float32), )
paddle.full_like(Tensor([256, 8912897],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([256, 8912897],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2640859, 96, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([2640859, 96, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([265933, 8580],"int32"), 4, )
paddle.full_like(Tensor([271632, 8400],"int32"), 2, )
paddle.full_like(Tensor([285213, 8000],"float32"), -math.inf, )
paddle.full_like(Tensor([29826162, 6, 3, 4, 2, 1],"float16"), fill_value=4, )
paddle.full_like(Tensor([3, 23860930, 3, 4, 1, 5],"float16"), fill_value=1, )
paddle.full_like(Tensor([3, 47721859, 3, 1, 2, 5],"float16"), fill_value=3, )
paddle.full_like(Tensor([3, 59652324, 3, 4, 2, 1],"float16"), fill_value=4, )
paddle.full_like(Tensor([3, 6, 11930465, 4, 1, 5],"float16"), fill_value=1, )
paddle.full_like(Tensor([3, 6, 23860930, 1, 2, 5],"float16"), fill_value=3, )
paddle.full_like(Tensor([3, 6, 29826162, 4, 2, 1],"float16"), fill_value=4, )
paddle.full_like(Tensor([3, 6, 3, 1, 15907287, 5],"float16"), fill_value=3, )
paddle.full_like(Tensor([3, 6, 3, 1, 2, 39768216],"float16"), fill_value=3, )
paddle.full_like(Tensor([3, 6, 3, 15907287, 1, 5],"float16"), fill_value=1, )
paddle.full_like(Tensor([3, 6, 3, 39768216, 2, 1],"float16"), fill_value=4, )
paddle.full_like(Tensor([3, 6, 3, 4, 1, 19884108],"float16"), fill_value=1, )
paddle.full_like(Tensor([3, 6, 3, 4, 19884108, 1],"float16"), fill_value=4, )
paddle.full_like(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), fill_value=4, )
paddle.full_like(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), fill_value=1, )
paddle.full_like(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), fill_value=3, )
paddle.full_like(Tensor([3, 760567127],"float32"), -1.0, )
paddle.full_like(Tensor([3, 760567127],"float32"), 1.0, )
paddle.full_like(Tensor([3, 760567127],"int64"), 3, )
paddle.full_like(Tensor([3, 760567127],"int64"), 7, )
paddle.full_like(Tensor([3, 760567127],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([325957340, 1, 1, 7],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([325957340, 7],"int64"), 15, )
paddle.full_like(Tensor([330108, 768, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([330108, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([331402, 6885],"int32"), 11, )
paddle.full_like(Tensor([35651585, 64],"float32"), 1.0, )
paddle.full_like(Tensor([35651585, 64],"float32"), 1e-20, )
paddle.full_like(Tensor([356516, 6400],"int32"), 4, )
paddle.full_like(Tensor([357913942, 12],"float16"), 0, )
paddle.full_like(Tensor([357913942, 3, 4],"float16"), fill_value=1, )
paddle.full_like(Tensor([371009, 6150],"int32"), 11, )
paddle.full_like(Tensor([380283564, 1, 1, 6],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([380283564, 1, 1, 6],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([4, 1, 1073741825],"float16"), fill_value=6, )
paddle.full_like(Tensor([4, 1073741825, 1],"float16"), fill_value=5, )
paddle.full_like(Tensor([4, 1073741825],"float16"), fill_value=41, )
paddle.full_like(Tensor([4, 1073741825],"float16"), fill_value=6, )
paddle.full_like(Tensor([4, 178956971, 6],"float16"), fill_value=6, )
paddle.full_like(Tensor([4, 285212673, 2],"float32"), 0, )
paddle.full_like(Tensor([4, 5, 114085069],"float32"), 0, )
paddle.full_like(Tensor([4, 5, 214748365],"float16"), 0, )
paddle.full_like(Tensor([4, 536870913, 2],"float16"), 0, )
paddle.full_like(Tensor([4, 570425345],"float32"), fill_value=6, )
paddle.full_like(Tensor([4, 570425345],"int64"), 7, )
paddle.full_like(Tensor([4, 570425345],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([4, 7, 153391690],"float16"), fill_value=5, )
paddle.full_like(Tensor([400, 10737419],"float16"), -2.220446049250313e-16, )
paddle.full_like(Tensor([400, 10737419],"float16"), math.inf, )
paddle.full_like(Tensor([419431, 5440],"int32"), 11, )
paddle.full_like(Tensor([4294967297, 1],"float16"), -2.220446049250313e-16, )
paddle.full_like(Tensor([4294967297, 1],"float16"), -math.inf, )
paddle.full_like(Tensor([4294967297, 1],"float16"), 0.0, )
paddle.full_like(Tensor([4294967297, 1],"float16"), 0.5, )
paddle.full_like(Tensor([4294967297, 1],"float16"), fill_value=11, )
paddle.full_like(Tensor([4294967297, 1],"float16"), fill_value=23, )
paddle.full_like(Tensor([4294967297, 1],"float16"), fill_value=41, )
paddle.full_like(Tensor([4294967297, 1],"float16"), fill_value=6, )
paddle.full_like(Tensor([4294967297, 1],"float16"), math.inf, )
paddle.full_like(Tensor([4294967297],"float16"), -2.220446049250313e-16, )
paddle.full_like(Tensor([4294967297],"float16"), -math.inf, )
paddle.full_like(Tensor([4294967297],"float16"), 0.0, )
paddle.full_like(Tensor([4294967297],"float16"), 0.9999998807907104, )
paddle.full_like(Tensor([4294967297],"float16"), 1.0, )
paddle.full_like(Tensor([4294967297],"float16"), 1.1754943508222875e-38, )
paddle.full_like(Tensor([4294967297],"float16"), 1e-20, )
paddle.full_like(Tensor([4294967297],"float16"), fill_value=167, )
paddle.full_like(Tensor([4294967297],"float16"), fill_value=2159, )
paddle.full_like(Tensor([4294967297],"float16"), math.inf, )
paddle.full_like(Tensor([429496730, 5, 2],"float16"), 0, )
paddle.full_like(Tensor([45359, 50304],"float32"), 0.0, )
paddle.full_like(Tensor([456340276, 5],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([456340276, 5],"int64"), 7, )
paddle.full_like(Tensor([476447, 4789],"int32"), 11, )
paddle.full_like(Tensor([477218589, 3, 3],"float16"), fill_value=2, )
paddle.full_like(Tensor([5, 1, 858993460],"float16"), fill_value=2, )
paddle.full_like(Tensor([5, 214748365, 4],"float16"), fill_value=2, )
paddle.full_like(Tensor([5, 456340276],"int64"), 0, )
paddle.full_like(Tensor([5, 456340276],"int64"), 7, )
paddle.full_like(Tensor([5, 456340276],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([5, 858993460],"float16"), 0.9999998807907104, )
paddle.full_like(Tensor([5, 858993460],"float16"), 1.1754943508222875e-38, )
paddle.full_like(Tensor([5, 858993460],"float16"), fill_value=11, )
paddle.full_like(Tensor([5185685, 1, 20, 22],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([545, 1, 2048, 2048],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([547828, 4165],"int32"), 11, )
paddle.full_like(Tensor([56123, 40656],"int32"), 10, )
paddle.full_like(Tensor([570425345, 4],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([570425345, 4],"float32"), -math.inf, )
paddle.full_like(Tensor([570425345, 4],"float32"), 0, dtype=VarType(float32), )
paddle.full_like(Tensor([570425345, 4],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([570425345, 4],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([570425345, 4],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([570425345, 4],"float32"), math.inf, )
paddle.full_like(Tensor([570425345, 4],"int64"), 7, )
paddle.full_like(Tensor([57042535, 40],"float32"), -1.0, )
paddle.full_like(Tensor([57042535, 40],"float32"), 1.0, )
paddle.full_like(Tensor([59417, 38402],"int32"), 4, )
paddle.full_like(Tensor([6, 380283564],"int64"), 0, )
paddle.full_like(Tensor([6, 380283564],"int64"), 2, )
paddle.full_like(Tensor([6, 380283564],"int64"), 255, )
paddle.full_like(Tensor([6, 380283564],"int64"), 3, )
paddle.full_like(Tensor([6, 380283564],"int64"), 98, )
paddle.full_like(Tensor([6, 380283564],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([613566757, 7, 1],"float16"), fill_value=5, )
paddle.full_like(Tensor([61595, 37044],"int32"), 10, )
paddle.full_like(Tensor([61906, 36858],"int32"), 4, )
paddle.full_like(Tensor([63380594, 1, 1, 36],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([63380594, 1, 6, 6],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([634159, 3598],"int32"), 11, )
paddle.full_like(Tensor([642914, 3549],"int32"), 80, )
paddle.full_like(Tensor([660215, 384, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([660215, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([67108865, 64],"float16"), 1.0, )
paddle.full_like(Tensor([67108865, 64],"float16"), 1e-20, )
paddle.full_like(Tensor([678271, 1, 58, 58],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([67908, 33600],"int32"), 10, )
paddle.full_like(Tensor([68, 192, 3, 58255],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 192, 58255, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 3728271, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 384, 29128, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 384, 3, 29128],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 768, 14564, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 768, 3, 14564],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 96, 116509, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 96, 3, 116509],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([7, 325957340],"int64"), 15, )
paddle.full_like(Tensor([7, 613566757],"float16"), fill_value=23, )
paddle.full_like(Tensor([7130317, 320],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([715827883, 1, 6],"float16"), fill_value=6, )
paddle.full_like(Tensor([727584, 56, 56],"int64"), 15, )
paddle.full_like(Tensor([727584, 56, 56],"int64"), 31, )
paddle.full_like(Tensor([745655, 3060],"int32"), 4, )
paddle.full_like(Tensor([75245, 30324],"int32"), 10, )
paddle.full_like(Tensor([754531, 3024],"int32"), 80, )
paddle.full_like(Tensor([760567127, 3],"float32"), -10.0, )
paddle.full_like(Tensor([760567127, 3],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([760567127, 3],"float32"), -math.inf, )
paddle.full_like(Tensor([760567127, 3],"float32"), 0.5, )
paddle.full_like(Tensor([760567127, 3],"float32"), 1.0, )
paddle.full_like(Tensor([760567127, 3],"float32"), 100.0, )
paddle.full_like(Tensor([760567127, 3],"float32"), 2.0, )
paddle.full_like(Tensor([760567127, 3],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([760567127, 3],"float32"), fill_value=math.inf, )
paddle.full_like(Tensor([760567127, 3],"float32"), fill_value=nan, )
paddle.full_like(Tensor([760567127, 3],"float32"), math.inf, )
paddle.full_like(Tensor([760567127, 3],"int64"), 3, )
paddle.full_like(Tensor([760567127, 3],"int64"), 7, )
paddle.full_like(Tensor([76057, 30000],"float32"), 0.0, )
paddle.full_like(Tensor([80, 192, 3, 49517],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([80, 192, 49517, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([80, 3169030, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([80, 384, 24759, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([80, 384, 3, 24759],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([80, 768, 12380, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([80, 768, 3, 12380],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([83837, 27216],"int32"), 10, )
paddle.full_like(Tensor([8388609, 512],"float16"), -127, )
paddle.full_like(Tensor([8388609, 512],"float16"), 127, )
paddle.full_like(Tensor([87757746, 1, 1, 26],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([8912897, 256],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([8912897, 256],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([897955, 2541],"int32"), 80, )
paddle.full_like(Tensor([91, 47197443],"float16"), -2.220446049250313e-16, )
paddle.full_like(Tensor([91, 47197443],"float16"), math.inf, )
paddle.full_like(Tensor([91268056, 1, 1, 25],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([91268056, 1, 5, 5],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([93991, 24276],"int32"), 10, )
paddle.full_like(Tensor([95070891, 1, 1, 24],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([9834920, 232],"float32"), 0.0, None, None, )
paddle.full_like(Tensor([9834920, 232],"float32"), 0.0, VarType(bfloat16), None, )
paddle.full_like(Tensor([9834920, 232],"int32"), 0.0, Dtype(int16), None, )
paddle.full_like(Tensor([9834920, 232],"int32"), 0.0, None, None, )
paddle.full_like(Tensor([9834920, 232],"int32"), 0.0, VarType(float32), None, )
paddle.full_like(Tensor([9834920, 232],"int32"), 1.0, None, None, )
paddle.full_like(Tensor([9834920, 232],"int32"), 1e-10, None, None, )
paddle.full_like(Tensor([9834920, 232],"int32"), 1e-100, None, None, )
paddle.full_like(Tensor([99204408, 1, 1, 23],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(x=Tensor([2281701379],"bool"), fill_value=1, )
paddle.full_like(x=Tensor([2281701379],"float32"), fill_value=1, )
paddle.full_like(x=Tensor([2281701379],"int32"), fill_value=1, )
paddle.full_like(x=Tensor([2281701379],"int64"), fill_value=1, )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=-math.inf, )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=1, )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=1, dtype="int32", )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=1, dtype="int64", )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=1, dtype=type(numpy.int32), )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=1, dtype=type(numpy.int64), )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=1.0, dtype="float16", )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=1.0, dtype="float32", )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=1.0, dtype=type(numpy.float16), )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=1.0, dtype=type(numpy.float32), )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=False, dtype="bool", )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=False, dtype=type(numpy.bool_), )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=True, dtype="bool", )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=True, dtype=type(numpy.bool_), )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=math.inf, )
paddle.gather(Tensor([1, 1, 1, 2281701379],"float32"), Tensor([4],"int64"), )
paddle.gather(Tensor([1, 1, 1, 2281701379],"float32"), Tensor([5],"int64"), )
paddle.gather(Tensor([1, 1, 134217729, 17],"float32"), Tensor([5],"int64"), )
paddle.gather(Tensor([1, 1, 207427399, 11],"float32"), Tensor([4],"int64"), )
paddle.gather(Tensor([1, 1, 2281701379],"float32"), Tensor([4],"int64"), )
paddle.gather(Tensor([1, 11641334, 14, 14],"float32"), Tensor([1, 1],"int32"), )
paddle.gather(Tensor([1, 207427399, 1, 11],"float32"), Tensor([4],"int64"), )
paddle.gather(Tensor([1, 2281701379],"float32"), index=Tensor([1],"int64"), axis=0, )
paddle.gather(Tensor([1, 2281701379],"float32"), index=Tensor([2],"int64"), axis=0, )
paddle.gather(Tensor([1, 2281701379],"float32"), index=Tensor([2],"int64"), axis=1, )
paddle.gather(Tensor([1, 2281701379],"int32"), Tensor([1],"int64"), axis=0, )
paddle.gather(Tensor([1, 256, 14, 636636],"float32"), Tensor([1, 1],"int32"), )
paddle.gather(Tensor([1, 256, 636636, 14],"float32"), Tensor([1, 1],"int32"), )
paddle.gather_nd(x=Tensor([760567127, 3],"float32"), index=Tensor([2],"int32"), )
paddle.gather_nd(x=Tensor([760567127, 3],"float32"), index=Tensor([2],"int64"), )
paddle.gather_nd(x=Tensor([760567127, 3],"int32"), index=Tensor([2],"int32"), )
paddle.isinf(Tensor([10, 228170138],"float32"), )
paddle.isinf(Tensor([10, 429496730],"float16"), )
paddle.isinf(Tensor([10186167, 7, 32],"float32"), )
paddle.isinf(Tensor([11, 17, 12201612],"int32"), )
paddle.isinf(Tensor([11, 17, 22967740],"int16"), )
paddle.isinf(Tensor([11, 207427399],"float32"), )
paddle.isinf(Tensor([11, 20742740, 10],"int32"), )
paddle.isinf(Tensor([11, 39045158, 10],"int16"), )
paddle.isinf(Tensor([1140850690, 1, 2],"float32"), )
paddle.isinf(Tensor([1140850690, 2],"float32"), )
paddle.isinf(Tensor([1203073, 17, 5, 6, 7],"float16"), )
paddle.isinf(Tensor([134217729, 17],"float32"), )
paddle.isinf(Tensor([13421773, 17, 10],"int32"), )
paddle.isinf(Tensor([14, 10186167, 16],"float32"), )
paddle.isinf(Tensor([14, 1646250, 99],"float32"), )
paddle.isinf(Tensor([14, 40744668, 4],"float32"), )
paddle.isinf(Tensor([14, 5093084, 32],"float32"), )
paddle.isinf(Tensor([14, 64, 2546542],"float32"), )
paddle.isinf(Tensor([14, 7, 23282668],"float32"), )
paddle.isinf(Tensor([190141782, 12],"float32"), )
paddle.isinf(Tensor([2, 1, 1140850690],"float32"), )
paddle.isinf(Tensor([2, 107374183, 4, 5],"float16"), )
paddle.isinf(Tensor([2, 1140850690],"float32"), )
paddle.isinf(Tensor([2, 2147483649],"float16"), )
paddle.isinf(Tensor([2, 3, 143165577, 5],"float16"), )
paddle.isinf(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.isinf(Tensor([2, 570425345, 2],"float32"), )
paddle.isinf(Tensor([2147483649, 2],"float16"), )
paddle.isinf(Tensor([2228225, 64, 16],"float32"), )
paddle.isinf(Tensor([2281701379],"float32"), )
paddle.isinf(Tensor([2281701379],"int64"), )
paddle.isinf(Tensor([228170138, 5, 2],"float32"), )
paddle.isinf(Tensor([25264514, 17, 10],"int16"), )
paddle.isinf(Tensor([3292499, 7, 99],"float32"), )
paddle.isinf(Tensor([357913942, 12],"float16"), )
paddle.isinf(Tensor([4, 285212673, 2],"float32"), )
paddle.isinf(Tensor([4, 5, 114085069],"float32"), )
paddle.isinf(Tensor([4, 5, 214748365],"float16"), )
paddle.isinf(Tensor([4, 536870913, 2],"float16"), )
paddle.isinf(Tensor([4294967297],"float16"), )
paddle.isinf(Tensor([429496730, 5, 2],"float16"), )
paddle.isinf(Tensor([456340276, 5],"float32"), )
paddle.isinf(Tensor([71582789, 3, 4, 5],"float16"), )
paddle.isinf(Tensor([8, 17, 5, 6, 1052689],"float16"), )
paddle.isinf(Tensor([8, 17, 5, 902305, 7],"float16"), )
paddle.isinf(Tensor([8, 17, 751921, 6, 7],"float16"), )
paddle.isinf(Tensor([8, 2556529, 5, 6, 7],"float16"), )
paddle.isinf(Tensor([8912897, 64, 4],"float32"), )
paddle.isinf(x=Tensor([4294967297],"float16"), )
paddle.isnan(Tensor([10186167, 7, 32],"float32"), )
paddle.isnan(Tensor([1024, 4194305],"float16"), )
paddle.isnan(Tensor([1073741825, 4],"float16"), )
paddle.isnan(Tensor([11, 17, 12201612],"int32"), )
paddle.isnan(Tensor([11, 207427399],"float32"), )
paddle.isnan(Tensor([11, 20742740, 10],"int32"), )
paddle.isnan(Tensor([11008, 390168],"float16"), )
paddle.isnan(Tensor([114, 37675152],"float16"), )
paddle.isnan(Tensor([1140850690, 2],"float32"), )
paddle.isnan(Tensor([1203073, 17, 5, 6, 7],"float16"), )
paddle.isnan(Tensor([134217729, 17],"float32"), )
paddle.isnan(Tensor([13421773, 17, 10],"int32"), )
paddle.isnan(Tensor([1393, 64, 160, 160],"float32"), )
paddle.isnan(Tensor([14, 10186167, 16],"float32"), )
paddle.isnan(Tensor([14, 1646250, 99],"float32"), )
paddle.isnan(Tensor([14, 40744668, 4],"float32"), )
paddle.isnan(Tensor([14, 5093084, 32],"float32"), )
paddle.isnan(Tensor([14, 64, 2546542],"float32"), )
paddle.isnan(Tensor([14, 7, 23282668],"float32"), )
paddle.isnan(Tensor([142606337, 4, 4],"float32"), )
paddle.isnan(Tensor([148, 5, 3083381],"float32"), )
paddle.isnan(Tensor([148, 5138968, 3],"float32"), )
paddle.isnan(Tensor([152113426, 5, 3],"float32"), )
paddle.isnan(Tensor([16, 142606337],"float32"), )
paddle.isnan(Tensor([16, 268435457],"float16"), )
paddle.isnan(Tensor([1633, 3, 375, 1242],"float32"), )
paddle.isnan(Tensor([1748, 24, 320, 320],"float16"), )
paddle.isnan(Tensor([190141782, 12],"float32"), )
paddle.isnan(Tensor([192, 22369622],"float16"), )
paddle.isnan(Tensor([1948, 1171305],"float32"), )
paddle.isnan(Tensor([2, 1073741825, 2],"float16"), )
paddle.isnan(Tensor([2, 107374183, 4, 5],"float16"), )
paddle.isnan(Tensor([2, 1140850690],"float32"), )
paddle.isnan(Tensor([2, 3, 143165577, 5],"float16"), )
paddle.isnan(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.isnan(Tensor([2, 3, 4, 95070891],"float32"), )
paddle.isnan(Tensor([2, 3, 76056713, 5],"float32"), )
paddle.isnan(Tensor([2, 4, 285212673],"float32"), )
paddle.isnan(Tensor([2, 4, 536870913],"float16"), )
paddle.isnan(Tensor([2, 570425345, 2],"float32"), )
paddle.isnan(Tensor([2, 57042535, 4, 5],"float32"), )
paddle.isnan(Tensor([2065, 157920, 7],"float32"), )
paddle.isnan(Tensor([2228225, 64, 16],"float32"), )
paddle.isnan(Tensor([2281701379],"float32"), )
paddle.isnan(Tensor([2281701379],"int32"), )
paddle.isnan(Tensor([2281701379],"int64"), )
paddle.isnan(Tensor([228170138, 10],"float32"), )
paddle.isnan(Tensor([22817014, 100],"float32"), )
paddle.isnan(Tensor([256, 16777217],"float16"), )
paddle.isnan(Tensor([26, 87757746],"float32"), )
paddle.isnan(Tensor([2622, 64, 160, 160],"float16"), )
paddle.isnan(Tensor([285212673, 4, 2],"float32"), )
paddle.isnan(Tensor([285212673, 4, 2],"int32"), )
paddle.isnan(Tensor([285212673, 4, 2],"int64"), )
paddle.isnan(Tensor([3, 1431655766],"float16"), )
paddle.isnan(Tensor([3, 380283564, 2],"float32"), )
paddle.isnan(Tensor([3, 380283564, 2],"int32"), )
paddle.isnan(Tensor([3, 380283564, 2],"int64"), )
paddle.isnan(Tensor([3, 4, 190141782],"float32"), )
paddle.isnan(Tensor([3, 4, 190141782],"int32"), )
paddle.isnan(Tensor([3, 4, 190141782],"int64"), )
paddle.isnan(Tensor([3, 4, 357913942],"float16"), )
paddle.isnan(Tensor([3, 715827883, 2],"float16"), )
paddle.isnan(Tensor([3, 760567127],"float32"), )
paddle.isnan(Tensor([32, 134217729],"float16"), )
paddle.isnan(Tensor([32, 71303169],"float32"), )
paddle.isnan(Tensor([3292499, 7, 99],"float32"), )
paddle.isnan(Tensor([349, 64, 320, 320],"float32"), )
paddle.isnan(Tensor([35651585, 64],"float32"), )
paddle.isnan(Tensor([3714, 24, 160, 160],"float32"), )
paddle.isnan(Tensor([38028357, 3, 4, 5],"float32"), )
paddle.isnan(Tensor([4, 10486, 320, 320],"float16"), )
paddle.isnan(Tensor([4, 1225, 375, 1242],"float32"), )
paddle.isnan(Tensor([4, 142606337, 4],"float32"), )
paddle.isnan(Tensor([4, 157920, 3613],"float32"), )
paddle.isnan(Tensor([4, 22283, 160, 160],"float32"), )
paddle.isnan(Tensor([4, 3, 153094, 1242],"float32"), )
paddle.isnan(Tensor([4, 3, 375, 507045],"float32"), )
paddle.isnan(Tensor([4, 4, 142606337],"float32"), )
paddle.isnan(Tensor([4, 41944, 160, 160],"float16"), )
paddle.isnan(Tensor([4, 5571, 320, 320],"float32"), )
paddle.isnan(Tensor([4, 64, 104858, 160],"float16"), )
paddle.isnan(Tensor([4, 64, 160, 104858],"float16"), )
paddle.isnan(Tensor([4, 64, 160, 55706],"float32"), )
paddle.isnan(Tensor([4, 64, 27853, 320],"float32"), )
paddle.isnan(Tensor([4, 64, 320, 27853],"float32"), )
paddle.isnan(Tensor([4, 64, 320, 52429],"float16"), )
paddle.isnan(Tensor([4, 64, 52429, 320],"float16"), )
paddle.isnan(Tensor([4, 64, 55706, 160],"float32"), )
paddle.isnan(Tensor([4, 81489335, 7],"float32"), )
paddle.isnan(Tensor([400, 10737419],"float16"), )
paddle.isnan(Tensor([4294967297, 1],"float16"), )
paddle.isnan(Tensor([4294967297],"float16"), )
paddle.isnan(Tensor([456340276, 5],"float32"), )
paddle.isnan(Tensor([536870913, 4, 2],"float16"), )
paddle.isnan(Tensor([5592406, 768],"float16"), )
paddle.isnan(Tensor([570425345, 4],"float32"), )
paddle.isnan(Tensor([656, 64, 320, 320],"float16"), )
paddle.isnan(Tensor([67108865, 64],"float16"), )
paddle.isnan(Tensor([6991, 24, 160, 160],"float16"), )
paddle.isnan(Tensor([71303169, 32],"float32"), )
paddle.isnan(Tensor([71582789, 3, 4, 5],"float16"), )
paddle.isnan(Tensor([760567127, 3],"float32"), )
paddle.isnan(Tensor([8, 11142, 160, 160],"float32"), )
paddle.isnan(Tensor([8, 17, 5, 6, 1052689],"float16"), )
paddle.isnan(Tensor([8, 17, 5, 902305, 7],"float16"), )
paddle.isnan(Tensor([8, 17, 751921, 6, 7],"float16"), )
paddle.isnan(Tensor([8, 20972, 160, 160],"float16"), )
paddle.isnan(Tensor([8, 24, 139811, 160],"float16"), )
paddle.isnan(Tensor([8, 24, 160, 139811],"float16"), )
paddle.isnan(Tensor([8, 24, 160, 74275],"float32"), )
paddle.isnan(Tensor([8, 24, 320, 37138],"float32"), )
paddle.isnan(Tensor([8, 24, 320, 69906],"float16"), )
paddle.isnan(Tensor([8, 24, 37138, 320],"float32"), )
paddle.isnan(Tensor([8, 24, 69906, 320],"float16"), )
paddle.isnan(Tensor([8, 24, 74275, 160],"float32"), )
paddle.isnan(Tensor([8, 2556529, 5, 6, 7],"float16"), )
paddle.isnan(Tensor([8, 2786, 320, 320],"float32"), )
paddle.isnan(Tensor([8, 5243, 320, 320],"float16"), )
paddle.isnan(Tensor([8388609, 512],"float16"), )
paddle.isnan(Tensor([8912897, 64, 4],"float32"), )
paddle.isnan(Tensor([929, 24, 320, 320],"float32"), )
paddle.isnan(x=Tensor([4294967297],"float16"), )
paddle.isneginf(Tensor([11, 17, 12201612],"int32"), )
paddle.isneginf(Tensor([11, 17, 22967740],"int16"), )
paddle.isneginf(Tensor([11, 207427399],"float32"), )
paddle.isneginf(Tensor([11, 20742740, 10],"int32"), )
paddle.isneginf(Tensor([11, 39045158, 10],"int16"), )
paddle.isneginf(Tensor([134217729, 17],"float32"), )
paddle.isneginf(Tensor([13421773, 17, 10],"int32"), )
paddle.isneginf(Tensor([2, 107374183, 4, 5],"float16"), )
paddle.isneginf(Tensor([2, 107374183, 4, 5],"int8"), )
paddle.isneginf(Tensor([2, 3, 143165577, 5],"float16"), )
paddle.isneginf(Tensor([2, 3, 143165577, 5],"int8"), )
paddle.isneginf(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.isneginf(Tensor([2, 3, 4, 178956971],"int8"), )
paddle.isneginf(Tensor([25264514, 17, 10],"int16"), )
paddle.isneginf(Tensor([4294967297],"uint8"), )
paddle.isneginf(Tensor([71582789, 3, 4, 5],"float16"), )
paddle.isneginf(Tensor([71582789, 3, 4, 5],"int8"), )
paddle.isposinf(Tensor([11, 17, 12201612],"int32"), )
paddle.isposinf(Tensor([11, 17, 22967740],"int16"), )
paddle.isposinf(Tensor([11, 207427399],"float32"), )
paddle.isposinf(Tensor([11, 20742740, 10],"int32"), )
paddle.isposinf(Tensor([11, 39045158, 10],"int16"), )
paddle.isposinf(Tensor([134217729, 17],"float32"), )
paddle.isposinf(Tensor([13421773, 17, 10],"int32"), )
paddle.isposinf(Tensor([2, 107374183, 4, 5],"float16"), )
paddle.isposinf(Tensor([2, 107374183, 4, 5],"int8"), )
paddle.isposinf(Tensor([2, 3, 143165577, 5],"float16"), )
paddle.isposinf(Tensor([2, 3, 143165577, 5],"int8"), )
paddle.isposinf(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.isposinf(Tensor([2, 3, 4, 178956971],"int8"), )
paddle.isposinf(Tensor([25264514, 17, 10],"int16"), )
paddle.isposinf(Tensor([4294967297],"uint8"), )
paddle.isposinf(Tensor([71582789, 3, 4, 5],"float16"), )
paddle.isposinf(Tensor([71582789, 3, 4, 5],"int8"), )
paddle.isreal(Tensor([134217729, 32],"bfloat16"), )
paddle.isreal(Tensor([134217729, 32],"float16"), )
paddle.isreal(Tensor([134217729, 32],"int16"), )
paddle.isreal(Tensor([1431655766, 3],"bfloat16"), )
paddle.isreal(Tensor([1431655766, 3],"float16"), )
paddle.isreal(Tensor([1431655766, 3],"int16"), )
paddle.isreal(Tensor([2, 1140850690],"bool"), )
paddle.isreal(Tensor([2, 1140850690],"float32"), )
paddle.isreal(Tensor([2, 1140850690],"int32"), )
paddle.isreal(Tensor([2, 1140850690],"int64"), )
paddle.isreal(Tensor([2, 2147483649],"bfloat16"), )
paddle.isreal(Tensor([2, 2147483649],"float16"), )
paddle.isreal(Tensor([2, 2147483649],"int16"), )
paddle.isreal(Tensor([64, 35651585],"bool"), )
paddle.isreal(Tensor([64, 35651585],"float32"), )
paddle.isreal(Tensor([64, 35651585],"int32"), )
paddle.isreal(Tensor([64, 35651585],"int64"), )
paddle.isreal(Tensor([64, 67108865],"bfloat16"), )
paddle.isreal(Tensor([64, 67108865],"float16"), )
paddle.isreal(Tensor([64, 67108865],"int16"), )
paddle.isreal(Tensor([71303169, 32],"bool"), )
paddle.isreal(Tensor([71303169, 32],"float32"), )
paddle.isreal(Tensor([71303169, 32],"int32"), )
paddle.isreal(Tensor([71303169, 32],"int64"), )
paddle.isreal(Tensor([760567127, 3],"bool"), )
paddle.isreal(Tensor([760567127, 3],"float32"), )
paddle.isreal(Tensor([760567127, 3],"int32"), )
paddle.isreal(Tensor([760567127, 3],"int64"), )
paddle.kron(Tensor([2, 2],"float32"), Tensor([23, 99204408],"float32"), )
paddle.kron(Tensor([2, 2],"float32"), Tensor([325957340, 7],"float32"), )
paddle.kron(Tensor([2, 3],"float32"), Tensor([13, 175515491],"float32"), )
paddle.kron(Tensor([2, 3],"float32"), Tensor([570425345, 4],"float32"), )
paddle.kron(x=Tensor([1],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.kron(x=Tensor([1],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.kron(x=Tensor([2, 2],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.kron(x=Tensor([2, 2],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.kron(x=Tensor([2, 2],"float16"), y=Tensor([3, 3, 477218589],"float16"), )
paddle.kron(x=Tensor([2, 2],"float16"), y=Tensor([3, 715827883, 2],"float16"), )
paddle.kron(x=Tensor([2, 2],"float16"), y=Tensor([715827883, 3, 2],"float16"), )
paddle.kron(x=Tensor([2, 3],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.kron(x=Tensor([2, 3],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.kron(x=Tensor([2, 3],"float32"), y=Tensor([3, 760567127],"float32"), )
paddle.kron(x=Tensor([2, 3],"float32"), y=Tensor([760567127, 3],"float32"), )
paddle.kron(x=Tensor([2, 3],"int32"), y=Tensor([760567127, 3],"int32"), )
paddle.kthvalue(Tensor([2, 128, 16777217],"float16"), 2, -1, )
paddle.kthvalue(Tensor([2, 128, 16777217],"float16"), 2, 2, )
paddle.kthvalue(Tensor([2, 214748365, 10],"float16"), 2, -1, )
paddle.kthvalue(Tensor([2, 214748365, 10],"float16"), 2, 2, )
paddle.kthvalue(Tensor([2, 30, 71582789],"float16"), 244, -1, )
paddle.kthvalue(Tensor([2, 30, 71582789],"float16"), 244, 2, )
paddle.kthvalue(Tensor([2, 8589935, 250],"float16"), 244, -1, )
paddle.kthvalue(Tensor([2, 8589935, 250],"float16"), 244, 2, )
paddle.kthvalue(Tensor([2281701379],"float32"), 1, )
paddle.kthvalue(Tensor([2281701379],"float32"), k=2, )
paddle.kthvalue(Tensor([285213, 200, 40],"float32"), k=1, axis=1, )
paddle.kthvalue(Tensor([285213, 200, 40],"float32"), k=1, axis=1, keepdim=True, )
paddle.kthvalue(Tensor([285213, 200, 40],"float32"), k=2, )
paddle.kthvalue(Tensor([30, 1901418, 40],"float32"), k=1, axis=1, )
paddle.kthvalue(Tensor([30, 1901418, 40],"float32"), k=1, axis=1, keepdim=True, )
paddle.kthvalue(Tensor([30, 1901418, 40],"float32"), k=2, )
paddle.kthvalue(Tensor([30, 200, 380284],"float32"), k=1, axis=1, )
paddle.kthvalue(Tensor([30, 200, 380284],"float32"), k=1, axis=1, keepdim=True, )
paddle.kthvalue(Tensor([30, 200, 380284],"float32"), k=2, )
paddle.kthvalue(Tensor([3355444, 128, 10],"float16"), 2, -1, )
paddle.kthvalue(Tensor([3355444, 128, 10],"float16"), 2, 2, )
paddle.kthvalue(Tensor([572663, 30, 250],"float16"), 244, -1, )
paddle.kthvalue(Tensor([572663, 30, 250],"float16"), 244, 2, )
paddle.kthvalue(x=Tensor([285212673, 2, 4],"float32"), k=3, axis=0, )
paddle.kthvalue(x=Tensor([3, 190141782, 4],"float32"), k=3, axis=0, )
paddle.kthvalue(x=Tensor([3, 2, 380283564],"float32"), k=3, axis=0, )
paddle.kthvalue(x=Tensor([3, 2, 715827883],"float16"), k=3, axis=0, )
paddle.kthvalue(x=Tensor([3, 2, 715827883],"float16"), k=4, axis=2, keepdim=False, )
paddle.kthvalue(x=Tensor([3, 2, 715827883],"float16"), k=4, axis=2, keepdim=True, )
paddle.kthvalue(x=Tensor([3, 357913942, 4],"float16"), k=3, axis=0, )
paddle.kthvalue(x=Tensor([3, 357913942, 4],"float16"), k=4, axis=2, keepdim=False, )
paddle.kthvalue(x=Tensor([3, 357913942, 4],"float16"), k=4, axis=2, keepdim=True, )
paddle.kthvalue(x=Tensor([536870913, 2, 4],"float16"), k=3, axis=0, )
paddle.kthvalue(x=Tensor([536870913, 2, 4],"float16"), k=4, axis=2, keepdim=False, )
paddle.kthvalue(x=Tensor([536870913, 2, 4],"float16"), k=4, axis=2, keepdim=True, )
paddle.ldexp(Tensor([10, 20, 11408507],"float32"), Tensor([1],"int32"), )
paddle.ldexp(Tensor([10, 228170138, 1],"float32"), Tensor([1],"int32"), )
paddle.ldexp(Tensor([114085069, 20, 1],"float32"), Tensor([1],"int32"), )
paddle.ldexp(Tensor([119304648, 6, 6],"float16"), Tensor([6],"int32"), )
paddle.ldexp(Tensor([5, 143165577, 6],"float16"), Tensor([6],"int32"), )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([2910334, 28, 28],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 27163112, 28],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 28, 27163112],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 8, 95070891],"float32"), 0.3, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 95070891, 8],"float32"), 0.3, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([35651585, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([1, 28, 28],"float32"), Tensor([2910334, 28, 28],"float32"), 1.0, )
paddle.lerp(Tensor([1, 8, 8],"float32"), Tensor([35651585, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([11883862, 3, 8, 8],"float32"), Tensor([11883862, 3, 8, 8],"float32"), 2.1, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 3, 47535446, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 3, 8, 47535446],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 8, 8],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([2, 17825793, 8, 8],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([2, 17825793, 8, 8],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 2.1, )
paddle.lerp(Tensor([2, 2, 5],"float32"), Tensor([228170138, 2, 1, 5],"float32"), 0.5, )
paddle.lerp(Tensor([2, 228170138, 5],"float32"), Tensor([3, 2, 1, 5],"float32"), 0.5, )
paddle.lerp(Tensor([2, 3, 47535446, 8],"float32"), Tensor([2, 3, 47535446, 8],"float32"), 2.1, )
paddle.lerp(Tensor([2, 3, 8, 47535446],"float32"), Tensor([2, 3, 8, 47535446],"float32"), 2.1, )
paddle.lerp(Tensor([2910334, 28, 28],"float32"), Tensor([2910334, 28, 28],"float32"), 1.0, )
paddle.lerp(Tensor([2910334, 28, 28],"float32"), Tensor([2910334, 28, 28],"float32"), 1.2, )
paddle.lerp(Tensor([3, 27163112, 28],"float32"), Tensor([3, 27163112, 28],"float32"), 1.2, )
paddle.lerp(Tensor([3, 28, 27163112],"float32"), Tensor([3, 28, 27163112],"float32"), 1.2, )
paddle.lerp(Tensor([3, 8, 95070891],"float32"), Tensor([3, 8, 95070891],"float32"), 2.1, )
paddle.lerp(Tensor([3, 95070891, 8],"float32"), Tensor([3, 95070891, 8],"float32"), 2.1, )
paddle.lerp(Tensor([35651585, 8, 8],"float32"), Tensor([35651585, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([35651585, 8, 8],"float32"), Tensor([35651585, 8, 8],"float32"), 2.1, )
paddle.lerp(x=Tensor([214748365, 5, 4],"float16"), y=Tensor([214748365, 5, 4],"float16"), weight=0.5, )
paddle.lerp(x=Tensor([2281701379],"float32"), y=Tensor([2281701379],"float32"), weight=0.5, )
paddle.lerp(x=Tensor([4, 1073741825],"float16"), y=Tensor([1],"float16"), weight=0.2, )
paddle.lerp(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), weight=0.5, )
paddle.lerp(x=Tensor([4, 268435457, 4],"float16"), y=Tensor([4, 268435457, 4],"float16"), weight=0.5, )
paddle.lerp(x=Tensor([4, 5, 214748365],"float16"), y=Tensor([4, 5, 214748365],"float16"), weight=0.5, )
paddle.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=0.0, )
paddle.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=0.5, )
paddle.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=1.0, )
paddle.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=0.0, )
paddle.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=0.5, )
paddle.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=1.0, )
paddle.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=0.0, )
paddle.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=0.5, )
paddle.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=1.0, )
paddle.lerp(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), weight=0.5, )
paddle.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=0.0, )
paddle.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=0.5, )
paddle.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=1.0, )
paddle.lerp(x=Tensor([858993460, 5],"float16"), y=Tensor([1],"float16"), weight=0.2, )
paddle.lerp(x=Tensor([858993460, 5],"float16"), y=Tensor([858993460, 5],"float16"), weight=0.5, )
paddle.less(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.less(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.less(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.less(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.less(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.less(Tensor([2228225, 1024],"float32"), Tensor([2228225, 1024],"float32"), )
paddle.less(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.less(x=Tensor([2281701379],"int64"), y=Tensor([2281701379],"int64"), )
paddle.less_equal(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.less_equal(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less_equal(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.less_equal(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.less_equal(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.less_equal(Tensor([1],"int32"), Tensor([2281701379],"int32"), )
paddle.less_equal(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.less_equal(Tensor([2281701379],"int32"), Tensor([1],"int32"), )
paddle.less_equal(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.less_equal(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.less_equal(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.less_equal(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.less_equal(x=Tensor([1, 1431655766, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.less_equal(x=Tensor([1, 2, 1, 3],"float16"), y=Tensor([1, 1431655766, 3],"float16"), )
paddle.less_equal(x=Tensor([1, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.less_equal(x=Tensor([1431655766, 3],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.less_equal(x=Tensor([1],"float16"), y=Tensor([4294967297],"float16"), )
paddle.less_equal(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.less_equal(x=Tensor([2281701379],"int64"), y=Tensor([2281701379],"int64"), )
paddle.less_equal(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.less_equal(x=Tensor([3, 760567127],"float32"), y=Tensor([3, 760567127],"float32"), )
paddle.less_equal(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.less_equal(x=Tensor([715827883, 2, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.less_equal(x=Tensor([760567127, 3],"float32"), y=Tensor([760567127, 3],"float32"), )
paddle.less_than(Tensor([1, 128, 128],"float32"), Tensor([139265, 128, 128],"float32"), )
paddle.less_than(Tensor([1, 128, 128],"int64"), Tensor([139265, 128, 128],"int64"), )
paddle.less_than(Tensor([1, 128, 17825793],"float32"), Tensor([1, 128, 17825793],"float32"), )
paddle.less_than(Tensor([1, 128, 17825793],"int64"), Tensor([1, 128, 17825793],"int64"), )
paddle.less_than(Tensor([1, 128, 256],"float32"), Tensor([69633, 128, 256],"float32"), )
paddle.less_than(Tensor([1, 128, 256],"int64"), Tensor([69633, 128, 256],"int64"), )
paddle.less_than(Tensor([1, 17825793, 128],"float32"), Tensor([1, 17825793, 128],"float32"), )
paddle.less_than(Tensor([1, 17825793, 128],"int64"), Tensor([1, 17825793, 128],"int64"), )
paddle.less_than(Tensor([1, 8912897, 256],"float32"), Tensor([1, 8912897, 256],"float32"), )
paddle.less_than(Tensor([1, 8912897, 256],"int64"), Tensor([1, 8912897, 256],"int64"), )
paddle.less_than(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.less_than(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less_than(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.less_than(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.less_than(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.less_than(Tensor([139265, 1, 128, 128],"float32"), Tensor([139265, 1, 128, 128],"float32"), )
paddle.less_than(Tensor([139265, 128, 128],"float32"), Tensor([1, 128, 128],"float32"), )
paddle.less_than(Tensor([139265, 128, 128],"float32"), Tensor([139265, 128, 128],"float32"), )
paddle.less_than(Tensor([139265, 128, 128],"int64"), Tensor([1, 128, 128],"int64"), )
paddle.less_than(Tensor([139265, 128, 128],"int64"), Tensor([139265, 128, 128],"int64"), )
paddle.less_than(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.less_than(Tensor([1],"int64"), Tensor([2281701379],"int64"), )
paddle.less_than(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.less_than(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.less_than(Tensor([2281701379],"int64"), Tensor([1],"int64"), )
paddle.less_than(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.less_than(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.less_than(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.less_than(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.less_than(Tensor([69633, 128, 256],"float32"), Tensor([1, 128, 256],"float32"), )
paddle.less_than(Tensor([69633, 128, 256],"float32"), Tensor([69633, 128, 256],"float32"), )
paddle.less_than(Tensor([69633, 128, 256],"int64"), Tensor([1, 128, 256],"int64"), )
paddle.less_than(Tensor([69633, 128, 256],"int64"), Tensor([69633, 128, 256],"int64"), )
paddle.less_than(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.less_than(Tensor([8, 1, 128, 128],"float32"), Tensor([8, 17409, 128, 128],"float32"), )
paddle.less_than(Tensor([8, 1, 128, 2228225],"float32"), Tensor([8, 1, 128, 2228225],"float32"), )
paddle.less_than(Tensor([8, 1, 2228225, 128],"float32"), Tensor([8, 1, 2228225, 128],"float32"), )
paddle.less_than(Tensor([8, 17409, 128, 128],"float32"), Tensor([8, 1, 128, 128],"float32"), )
paddle.less_than(Tensor([8, 17409, 128, 128],"float32"), Tensor([8, 17409, 128, 128],"float32"), )
paddle.less_than(x=Tensor([1, 1431655766, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.less_than(x=Tensor([1, 2, 1, 3],"float16"), y=Tensor([1, 1431655766, 3],"float16"), )
paddle.less_than(x=Tensor([1, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.less_than(x=Tensor([1431655766, 3],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.less_than(x=Tensor([1],"float16"), y=Tensor([4294967297],"float16"), )
paddle.less_than(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.less_than(x=Tensor([2281701379],"int64"), y=Tensor([2281701379],"int64"), )
paddle.less_than(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.less_than(x=Tensor([3, 760567127],"float32"), y=Tensor([3, 760567127],"float32"), )
paddle.less_than(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.less_than(x=Tensor([715827883, 2, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.less_than(x=Tensor([760567127, 3],"float32"), y=Tensor([760567127, 3],"float32"), )
paddle.lgamma(Tensor([1, 1140850690, 2],"float32"), )
paddle.lgamma(Tensor([1, 2, 1140850690],"float32"), )
paddle.lgamma(Tensor([1, 2281701379],"float32"), )
paddle.lgamma(Tensor([10, 1, 1, 228170138],"float32"), )
paddle.lgamma(Tensor([10, 1, 228170138, 1],"float32"), )
paddle.lgamma(Tensor([10, 1, 228170138],"float32"), )
paddle.lgamma(Tensor([10, 10, 10, 4294968],"float16"), )
paddle.lgamma(Tensor([10, 10, 21474837, 2],"float16"), )
paddle.lgamma(Tensor([10, 10, 42949673],"float16"), )
paddle.lgamma(Tensor([10, 114085069, 2],"float32"), )
paddle.lgamma(Tensor([10, 20, 11408507],"float32"), )
paddle.lgamma(Tensor([10, 20, 21474837],"float16"), )
paddle.lgamma(Tensor([10, 214748365, 2],"float16"), )
paddle.lgamma(Tensor([10, 21474837, 10, 2],"float16"), )
paddle.lgamma(Tensor([10, 228170138, 1, 1],"float32"), )
paddle.lgamma(Tensor([10, 228170138, 1],"float32"), )
paddle.lgamma(Tensor([10, 228170138],"float32"), )
paddle.lgamma(Tensor([10, 42949673, 10],"float16"), )
paddle.lgamma(Tensor([10, 429496730],"float16"), )
paddle.lgamma(Tensor([100, 42949673],"float16"), )
paddle.lgamma(Tensor([107374183, 20, 2],"float16"), )
paddle.lgamma(Tensor([114, 37675152],"float16"), )
paddle.lgamma(Tensor([114085069, 20, 1],"float32"), )
paddle.lgamma(Tensor([1140850690, 1, 2],"float32"), )
paddle.lgamma(Tensor([1140850690, 2],"float32"), )
paddle.lgamma(Tensor([1431655766, 3],"float16"), )
paddle.lgamma(Tensor([148, 1, 15416902],"float32"), )
paddle.lgamma(Tensor([148, 15416902, 1],"float32"), )
paddle.lgamma(Tensor([190141782, 12],"float32"), )
paddle.lgamma(Tensor([1948, 1171305],"float32"), )
paddle.lgamma(Tensor([2, 1, 1140850690],"float32"), )
paddle.lgamma(Tensor([2, 1073741825, 2],"float16"), )
paddle.lgamma(Tensor([2, 1140850690],"float32"), )
paddle.lgamma(Tensor([2, 2, 570425345],"float32"), )
paddle.lgamma(Tensor([2, 2147483649],"float16"), )
paddle.lgamma(Tensor([2, 5, 429496730],"float16"), )
paddle.lgamma(Tensor([2, 570425345, 2],"float32"), )
paddle.lgamma(Tensor([2147483649, 2],"float16"), )
paddle.lgamma(Tensor([21474837, 10, 10, 2],"float16"), )
paddle.lgamma(Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.lgamma(Tensor([2281701379, 1, 1],"float32"), )
paddle.lgamma(Tensor([2281701379, 1],"float32"), )
paddle.lgamma(Tensor([2281701379],"float32"), )
paddle.lgamma(Tensor([4, 570425345],"float32"), )
paddle.lgamma(Tensor([400, 10737419],"float16"), )
paddle.lgamma(Tensor([4294967297, 1, 1],"float16"), )
paddle.lgamma(Tensor([4294967297, 1],"float16"), )
paddle.lgamma(Tensor([4294967297],"float16"), )
paddle.lgamma(Tensor([42949673, 10, 10],"float16"), )
paddle.lgamma(Tensor([42949673, 100],"float16"), )
paddle.lgamma(Tensor([429496730, 5, 2],"float16"), )
paddle.lgamma(Tensor([570425345, 2, 2],"float32"), )
paddle.lgamma(Tensor([570425345, 4],"float32"), )
paddle.lgamma(Tensor([57042535, 20, 2],"float32"), )
paddle.lgamma(Tensor([7, 325957340],"float32"), )
paddle.lgamma(Tensor([760567127, 3],"float32"), )
paddle.lgamma(Tensor([858993460, 5],"float16"), )
paddle.lgamma(Tensor([9, 1, 477218589],"float16"), )
paddle.lgamma(Tensor([9, 477218589, 1],"float16"), )
paddle.lgamma(Tensor([91, 47197443],"float16"), )
paddle.lgamma(x=Tensor([119304648, 6, 6],"float16"), )
paddle.lgamma(x=Tensor([1431655766, 3],"float16"), )
paddle.lgamma(x=Tensor([3, 1431655766],"float16"), )
paddle.lgamma(x=Tensor([3, 760567127],"float32"), )
paddle.lgamma(x=Tensor([380283564, 6],"float32"), )
paddle.lgamma(x=Tensor([6, 119304648, 6],"float16"), )
paddle.lgamma(x=Tensor([6, 380283564],"float32"), )
paddle.lgamma(x=Tensor([6, 6, 119304648],"float16"), )
paddle.lgamma(x=Tensor([6, 715827883],"float16"), )
paddle.lgamma(x=Tensor([715827883, 6],"float16"), )
paddle.lgamma(x=Tensor([760567127, 3],"float32"), )
paddle.linalg.cholesky(Tensor([1140850690, 2],"float32"), )
paddle.linalg.cholesky(Tensor([1431655766, 3],"float16"), )
paddle.linalg.cholesky(Tensor([2, 1140850690],"float32"), )
paddle.linalg.cholesky(Tensor([2, 2147483649],"float16"), )
paddle.linalg.cholesky(Tensor([2147483649, 2],"float16"), )
paddle.linalg.cholesky(Tensor([3, 1431655766],"float16"), )
paddle.linalg.cond(Tensor([142606337, 4, 4],"float32"), p="fro", )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), "fro", )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), -1, )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), 1, )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), math.inf, )
paddle.linalg.cond(Tensor([2, 4, 3, 95070891],"float32"), -2, )
paddle.linalg.cond(Tensor([2, 4, 3, 95070891],"float32"), 2, )
paddle.linalg.cond(Tensor([2, 4, 3, 95070891],"float32"), None, )
paddle.linalg.cond(Tensor([2, 4, 95070891, 3],"float32"), -2, )
paddle.linalg.cond(Tensor([2, 4, 95070891, 3],"float32"), 2, )
paddle.linalg.cond(Tensor([2, 4, 95070891, 3],"float32"), None, )
paddle.linalg.cond(Tensor([3, 5, 152113426, 1],"float32"), None, )
paddle.linalg.cond(Tensor([3, 5, 4, 38028357],"float32"), None, )
paddle.linalg.cond(Tensor([4, 2, 285212673],"float32"), -2, )
paddle.linalg.cond(Tensor([4, 2, 285212673],"float32"), 2, )
paddle.linalg.cond(Tensor([4, 2, 285212673],"float32"), None, )
paddle.linalg.cond(Tensor([4, 57042535, 10],"float32"), -2, )
paddle.linalg.cond(Tensor([4, 57042535, 10],"float32"), 2, )
paddle.linalg.cond(Tensor([4, 57042535, 10],"float32"), None, )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), "fro", )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), -1, )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), 1, )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), math.inf, )
paddle.linalg.corrcoef(Tensor([4, 1073741825],"float16"), )
paddle.linalg.corrcoef(Tensor([4, 570425345],"float32"), )
paddle.linalg.corrcoef(Tensor([456340276, 5],"float32"), rowvar=False, )
paddle.linalg.corrcoef(Tensor([858993460, 5],"float16"), rowvar=False, )
paddle.linalg.cov(Tensor([10],"float16"), rowvar=True, ddof=True, fweights=Tensor([10],"int64"), aweights=Tensor([4294967297],"float16"), )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=None, aweights=Tensor([2281701379],"int32"), )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=Tensor([2281701379],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=Tensor([2281701379],"int64"), aweights=Tensor([10],"float64"), )
paddle.linalg.cov(Tensor([20, 10],"float16"), rowvar=True, ddof=True, fweights=Tensor([10],"int64"), aweights=Tensor([4294967297],"float16"), )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=None, aweights=Tensor([2281701379],"int32"), )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=Tensor([2281701379],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=Tensor([2281701379],"int64"), aweights=Tensor([10],"float64"), )
paddle.linalg.cov(Tensor([20, 214748365],"float16"), rowvar=True, ddof=False, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([20, 214748365],"float16"), rowvar=True, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([20, 214748365],"float16"), rowvar=True, ddof=True, fweights=Tensor([10],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([3, 760567127],"float32"), )
paddle.linalg.cov(Tensor([429496730, 10],"float16"), rowvar=False, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(x=Tensor([4, 1073741825],"float16"), )
paddle.linalg.cov(x=Tensor([4, 1073741825],"float16"), rowvar=True, )
paddle.linalg.cov(x=Tensor([4, 1073741825],"float16"), rowvar=True, ddof=True, )
paddle.linalg.cov(x=Tensor([4, 570425345],"float32"), )
paddle.linalg.det(Tensor([253522376, 3, 3],"float32"), )
paddle.linalg.det(Tensor([3, 30422686, 5, 5],"float32"), )
paddle.linalg.det(Tensor([30422686, 3, 5, 5],"float32"), )
paddle.linalg.lu(Tensor([152113426, 3, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([152113426, 5, 3],"float32"), )
paddle.linalg.lu(Tensor([152113426, 5, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([18253612, 5, 5, 5],"float32"), )
paddle.linalg.lu(Tensor([2, 228170138, 5],"float32"), )
paddle.linalg.lu(Tensor([2, 228170138, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 3, 380283564],"float32"), )
paddle.linalg.lu(Tensor([2, 3, 380283564],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 5, 3, 76056713],"float32"), )
paddle.linalg.lu(Tensor([2, 5, 3, 76056713],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 5, 45634028, 5],"float32"), )
paddle.linalg.lu(Tensor([2, 5, 45634028, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 152113426, 5],"float32"), )
paddle.linalg.lu(Tensor([3, 152113426, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 5, 152113426],"float32"), )
paddle.linalg.lu(Tensor([3, 5, 152113426],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 5, 30422686, 5],"float32"), )
paddle.linalg.lu(Tensor([3, 5, 30422686, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 5, 5, 30422686],"float32"), )
paddle.linalg.lu(Tensor([3, 5, 5, 30422686],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 760567127],"float32"), )
paddle.linalg.lu(Tensor([3, 760567127],"float32"), get_infos=False, )
paddle.linalg.lu(Tensor([3, 760567127],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([30422686, 5, 5, 3],"float32"), )
paddle.linalg.lu(Tensor([30422686, 5, 5, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([4, 190141782, 3],"float32"), )
paddle.linalg.lu(Tensor([4, 190141782, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([4, 5, 114085069],"float32"), )
paddle.linalg.lu(Tensor([4, 5, 114085069],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([4, 5, 38028357, 3],"float32"), )
paddle.linalg.lu(Tensor([4, 5, 38028357, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([4, 5, 5, 22817014],"float32"), )
paddle.linalg.lu(Tensor([4, 5, 5, 22817014],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([456340276, 5],"float32"), )
paddle.linalg.lu(Tensor([456340276, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([5, 456340276],"float32"), )
paddle.linalg.lu(Tensor([5, 456340276],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([760567127, 3],"float32"), )
paddle.linalg.lu(Tensor([760567127, 3],"float32"), get_infos=False, )
paddle.linalg.lu(Tensor([760567127, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu_unpack(Tensor([2, 3, 380283564],"float32"), Tensor([2, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([2, 3, 5],"float32"), Tensor([2, 1140850690],"int32"), )
paddle.linalg.lu_unpack(Tensor([2, 5, 3, 76056713],"float32"), Tensor([2, 5, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 3],"float32"), Tensor([2281701379],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 3],"float64"), Tensor([2281701379],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 5, 152113426],"float32"), Tensor([3, 5],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 5, 5, 30422686],"float32"), Tensor([3, 5, 5],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 5, 5, 5],"float64"), Tensor([3, 5, 152113426],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 5],"float64"), Tensor([2281701379],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 760567127],"float32"), Tensor([3],"int32"), )
paddle.linalg.lu_unpack(Tensor([4, 5, 114085069],"float32"), Tensor([4, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([4, 5, 3],"float32"), Tensor([4, 570425345],"int32"), )
paddle.linalg.lu_unpack(Tensor([4, 5, 3],"float64"), Tensor([4, 570425345],"int32"), )
paddle.linalg.lu_unpack(Tensor([4, 5, 5, 22817014],"float32"), Tensor([4, 5, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([4, 5, 5, 3],"float32"), Tensor([4, 5, 114085069],"int32"), )
paddle.linalg.lu_unpack(Tensor([5, 3, 3, 3],"float64"), Tensor([5, 3, 152113426],"int32"), )
paddle.linalg.lu_unpack(Tensor([5, 3],"float64"), Tensor([2281701379],"int32"), )
paddle.linalg.lu_unpack(Tensor([5, 456340276],"float32"), Tensor([3],"int32"), )
paddle.linalg.lu_unpack(Tensor([5, 456340276],"float32"), Tensor([5],"int32"), )
paddle.linalg.lu_unpack(Tensor([5, 5],"float32"), Tensor([2281701379],"int32"), )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_transpose(Tensor([190141782, 3, 4],"float32"), )
paddle.linalg.matrix_transpose(Tensor([2, 285212673, 4],"float32"), )
paddle.linalg.matrix_transpose(Tensor([2, 3, 380283564],"float32"), )
paddle.linalg.multi_dot(list[Tensor([1073741825, 4],"float16"),Tensor([4, 3],"float16"),Tensor([3],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([1073741825, 4],"float16"),Tensor([4, 3],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([1073741825, 4],"float16"),Tensor([4, 8],"float16"),Tensor([8, 2],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([1431655766, 3],"float16"),Tensor([3, 2],"float16"),Tensor([2, 3],"float16"),Tensor([3],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([2, 10],"float16"),Tensor([10, 4],"float16"),Tensor([4, 1073741825],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([2, 4],"float16"),Tensor([4, 1073741825],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([2, 8],"float16"),Tensor([8, 536870913],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([2, 8],"float32"),Tensor([8, 285212673],"float32"),], )
paddle.linalg.multi_dot(list[Tensor([285212673, 8],"float32"),Tensor([8, 4],"float32"),], )
paddle.linalg.multi_dot(list[Tensor([3, 4],"float16"),Tensor([4, 1073741825],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([3, 4],"float16"),Tensor([4, 8],"float16"),Tensor([8, 536870913],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([4, 4],"float16"),Tensor([4, 1073741825],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([429496730, 10],"float16"),Tensor([10, 4],"float16"),Tensor([4, 3],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([536870913, 8],"float16"),Tensor([8, 4],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([715827883, 6],"float16"),Tensor([6, 3],"float16"),Tensor([3, 4],"float16"),Tensor([4, 5],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([715827883, 6],"float16"),Tensor([6],"float16"),], )
paddle.linalg.norm(Tensor([1, 2281701379],"float32"), 2.0, )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=math.inf, axis=-1, )
paddle.linalg.norm(Tensor([10, 11408507, 20],"float32"), p=0, axis=-1, )
paddle.linalg.norm(Tensor([10, 11408507, 20],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 11408507, 20],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 11408507, 20],"float32"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 11408507, 20],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 11408507, 20],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 11408507, 20],"float32"), p=math.inf, axis=-1, )
paddle.linalg.norm(Tensor([1140850690, 2],"float32"), 2.0, )
paddle.linalg.norm(Tensor([11408507, 10, 20],"float32"), p=0, axis=-1, )
paddle.linalg.norm(Tensor([11408507, 10, 20],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([11408507, 10, 20],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([11408507, 10, 20],"float32"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([11408507, 10, 20],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(Tensor([11408507, 10, 20],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(Tensor([11408507, 10, 20],"float32"), p=math.inf, axis=-1, )
paddle.linalg.norm(Tensor([2, 107374183, 4, 5],"float16"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2, 3, 143165577, 5],"float16"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2, 3, 4, 178956971],"float16"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2281701379],"float32"), )
paddle.linalg.norm(Tensor([2281701379],"float32"), 2, )
paddle.linalg.norm(Tensor([2281701379],"float32"), 2.0, )
paddle.linalg.norm(Tensor([2281701379],"float32"), p="fro", axis=0, )
paddle.linalg.norm(Tensor([2281701379],"float32"), p=1, )
paddle.linalg.norm(Tensor([2281701379],"float32"), p=1, axis=0, )
paddle.linalg.norm(Tensor([2281701379],"float32"), p=2, )
paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), -math.inf, 2, True, )
paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), 0.0, 2, True, )
paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), 2.0, -1, False, )
paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), 2.0, 2, True, )
paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), math.inf, 2, True, )
paddle.linalg.norm(Tensor([3, 253522376, 3],"float32"), -math.inf, 2, True, )
paddle.linalg.norm(Tensor([3, 253522376, 3],"float32"), 0.0, 2, True, )
paddle.linalg.norm(Tensor([3, 253522376, 3],"float32"), 2.0, -1, False, )
paddle.linalg.norm(Tensor([3, 253522376, 3],"float32"), 2.0, 2, True, )
paddle.linalg.norm(Tensor([3, 253522376, 3],"float32"), math.inf, 2, True, )
paddle.linalg.norm(Tensor([300, 1, 7605672],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([300, 1901418, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([380283564, 6],"float32"), )
paddle.linalg.norm(Tensor([380283564, 6],"float32"), p=-math.inf, axis=list[0,1,], )
paddle.linalg.norm(Tensor([380283564, 6],"float32"), p=1, axis=list[0,1,], )
paddle.linalg.norm(Tensor([38028357, 20, 3],"float32"), -math.inf, 2, True, )
paddle.linalg.norm(Tensor([38028357, 20, 3],"float32"), 0.0, 2, True, )
paddle.linalg.norm(Tensor([38028357, 20, 3],"float32"), 2.0, -1, False, )
paddle.linalg.norm(Tensor([38028357, 20, 3],"float32"), 2.0, 2, True, )
paddle.linalg.norm(Tensor([38028357, 20, 3],"float32"), math.inf, 2, True, )
paddle.linalg.norm(Tensor([4, 570425345],"float32"), )
paddle.linalg.norm(Tensor([4, 570425345],"float32"), p=-math.inf, axis=list[0,1,], )
paddle.linalg.norm(Tensor([4, 570425345],"float32"), p=1, axis=list[0,1,], )
paddle.linalg.norm(Tensor([4294968, 50, 20],"float16"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([5, 5, 91268056],"float32"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([5, 91268056, 5],"float32"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([50, 4294968, 20],"float16"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([50, 50, 1717987],"float16"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([570425345, 1, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([6380, 1, 357634],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([6380, 89409, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([71582789, 3, 4, 5],"float16"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([8550, 1, 266866],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([8550, 66717, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([900, 1, 2535224],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([900, 633806, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([91268056, 5, 5],"float32"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([1073741825, 4],"float16"), p=1, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([1073741825, 4],"float16"), p=1, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([1073741825, 4],"float16"), p=2, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([1073741825, 4],"float16"), p=2, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([1431655766, 3],"float16"), axis=None, p="fro", )
paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), )
paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), )
paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), )
paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=-1, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=2, axis=-1, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), axis=None, p="fro", )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=1, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=1, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=2, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=2, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=1, p=-math.inf, )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=1, p=0, )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=1, p=math.inf, )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=None, )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=list[0,2,], p=1, )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=list[1,2,], p=1, )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=list[1,2,], p=math.inf, )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=list[1,], p=math.inf, )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=1, p=-math.inf, )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=1, p=0, )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=1, p=math.inf, )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=None, )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=list[0,2,], p=1, )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=list[1,2,], p=1, )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=list[1,2,], p=math.inf, )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=list[1,], p=math.inf, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=2, axis=-1, keepdim=False, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([4294967297],"float16"), axis=None, p="fro", )
paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=1, p=-math.inf, )
paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=1, p=0, )
paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=1, p=math.inf, )
paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=None, )
paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=list[0,2,], p=1, )
paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=list[1,2,], p=1, )
paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=list[1,2,], p=math.inf, )
paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=list[1,], p=math.inf, )
paddle.linalg.qr(Tensor([2, 228170138, 5],"float32"), mode="r", )
paddle.linalg.qr(Tensor([2, 228170138, 5],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([2, 3, 380283564],"float32"), mode="complete", )
paddle.linalg.qr(Tensor([2, 3, 380283564],"float32"), mode="r", )
paddle.linalg.qr(Tensor([2, 3, 380283564],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([2, 5, 3, 76056713],"float32"), mode="complete", )
paddle.linalg.qr(Tensor([2, 5, 3, 76056713],"float32"), mode="r", )
paddle.linalg.qr(Tensor([2, 5, 3, 76056713],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([2, 5, 45634028, 5],"float32"), mode="r", )
paddle.linalg.qr(Tensor([2, 5, 45634028, 5],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([3, 126761188, 6],"float32"), )
paddle.linalg.qr(Tensor([3, 152113426, 5],"float32"), mode="r", )
paddle.linalg.qr(Tensor([3, 152113426, 5],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([3, 5, 152113426],"float32"), )
paddle.linalg.qr(Tensor([3, 5, 152113426],"float32"), mode="complete", )
paddle.linalg.qr(Tensor([3, 5, 152113426],"float32"), mode="r", )
paddle.linalg.qr(Tensor([3, 5, 152113426],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([3, 5, 30422686, 5],"float32"), mode="r", )
paddle.linalg.qr(Tensor([3, 5, 30422686, 5],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([3, 5, 5, 30422686],"float32"), mode="complete", )
paddle.linalg.qr(Tensor([3, 5, 5, 30422686],"float32"), mode="r", )
paddle.linalg.qr(Tensor([3, 5, 5, 30422686],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([4, 190141782, 3],"float32"), mode="r", )
paddle.linalg.qr(Tensor([4, 190141782, 3],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([4, 5, 114085069],"float32"), mode="complete", )
paddle.linalg.qr(Tensor([4, 5, 114085069],"float32"), mode="r", )
paddle.linalg.qr(Tensor([4, 5, 114085069],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([4, 5, 38028357, 3],"float32"), mode="r", )
paddle.linalg.qr(Tensor([4, 5, 38028357, 3],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([4, 5, 5, 22817014],"float32"), mode="complete", )
paddle.linalg.qr(Tensor([4, 5, 5, 22817014],"float32"), mode="r", )
paddle.linalg.qr(Tensor([4, 5, 5, 22817014],"float32"), mode="reduced", )
paddle.linalg.slogdet(Tensor([253522376, 3, 3],"float32"), )
paddle.linalg.slogdet(Tensor([3, 30422686, 5, 5],"float32"), )
paddle.linalg.slogdet(Tensor([30422686, 3, 5, 5],"float32"), )
paddle.linalg.solve(Tensor([10, 10],"float32"), Tensor([10, 228170138],"float32"), )
paddle.linalg.solve(Tensor([10, 10],"float32"), Tensor([228170138, 10],"float32"), left=False, )
paddle.linalg.triangular_solve(Tensor([1, 2, 2],"float32"), Tensor([1, 2, 1140850690],"float32"), upper=False, )
paddle.linalg.triangular_solve(Tensor([1, 2, 2],"float32"), Tensor([1140850690, 2, 1],"float32"), upper=False, )
paddle.linalg.triangular_solve(Tensor([2, 2],"float32"), Tensor([2, 1140850690],"float32"), upper=False, )
paddle.linalg.triangular_solve(Tensor([570425345, 2, 2],"float32"), Tensor([1, 2, 1],"float32"), upper=False, )
paddle.linalg.triangular_solve(Tensor([570425345, 2, 2],"float32"), Tensor([570425345, 2, 1],"float32"), upper=False, )
paddle.linalg.triangular_solve(x=Tensor([3, 3],"float32"), y=Tensor([3, 760567127],"float32"), )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=1, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=1, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=2, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=2, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 107374183, 4, 5],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 107374183, 4, 5],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 143165577, 5],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 143165577, 5],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 4, 178956971],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 4, 178956971],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=list[0,1,2,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=list[0,1,2,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,2,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,2,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=2, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=2, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=1, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=1, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=2, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=2, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 760567127],"float32"), p=2, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 760567127],"float32"), p=2, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=list[0,1,2,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=list[0,1,2,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=2, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=2, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([570425345, 4],"float32"), p=2, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([570425345, 4],"float32"), p=2, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([71582789, 3, 4, 5],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([71582789, 3, 4, 5],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.log(Tensor([1, 100, 22817014],"float32"), )
paddle.log(Tensor([1, 10164, 224489],"float32"), )
paddle.log(Tensor([1, 11, 207427399],"float32"), )
paddle.log(Tensor([1, 1100, 2074274],"float32"), )
paddle.log(Tensor([1, 11109, 205393],"float32"), )
paddle.log(Tensor([1, 12096, 188633],"float32"), )
paddle.log(Tensor([1, 128, 17825793],"float32"), )
paddle.log(Tensor([1, 1444, 1, 1580126],"float32"), )
paddle.log(Tensor([1, 1444, 1580126, 1],"float32"), )
paddle.log(Tensor([1, 17825793, 128],"float32"), )
paddle.log(Tensor([1, 18, 126761188],"float32"), )
paddle.log(Tensor([1, 192, 11883862],"float32"), )
paddle.log(Tensor([1, 196, 11641334],"float32"), )
paddle.log(Tensor([1, 2, 300, 3802836],"float32"), )
paddle.log(Tensor([1, 2, 570425345, 2],"float32"), )
paddle.log(Tensor([1, 200, 11408507],"float32"), )
paddle.log(Tensor([1, 21, 108652447],"float32"), )
paddle.log(Tensor([1, 22, 103713700],"float32"), )
paddle.log(Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.log(Tensor([1, 2281701379, 1],"float32"), )
paddle.log(Tensor([1, 2281701379],"float32"), )
paddle.log(Tensor([1, 300, 7605672],"float32"), )
paddle.log(Tensor([1, 36, 1, 63380594],"float32"), )
paddle.log(Tensor([1, 36, 63380594, 1],"float32"), )
paddle.log(Tensor([1, 36828, 61956],"float32"), )
paddle.log(Tensor([1, 38, 60044774],"float32"), )
paddle.log(Tensor([1, 3802836, 300, 2],"float32"), )
paddle.log(Tensor([1, 38367, 59471],"float32"), )
paddle.log(Tensor([1, 400, 5704254],"float32"), )
paddle.log(Tensor([1, 4294967297],"float16"), )
paddle.log(Tensor([1, 4725, 482900],"float32"), )
paddle.log(Tensor([1, 492, 4637605],"float32"), )
paddle.log(Tensor([1, 496, 4600205],"float32"), )
paddle.log(Tensor([1, 500, 4563403],"float32"), )
paddle.log(Tensor([1, 5376, 424424],"float32"), )
paddle.log(Tensor([1, 570425345, 4],"float32"), )
paddle.log(Tensor([1, 6069, 375961],"float32"), )
paddle.log(Tensor([1, 8912897, 256],"float32"), )
paddle.log(Tensor([10, 10, 10, 4294968],"float16"), )
paddle.log(Tensor([10, 10, 21474837, 2],"float16"), )
paddle.log(Tensor([10, 21474837, 10, 2],"float16"), )
paddle.log(Tensor([10, 228170138],"float32"), )
paddle.log(Tensor([10, 429496730],"float16"), )
paddle.log(Tensor([100, 22817014],"float32"), )
paddle.log(Tensor([1000, 2, 2, 570426],"float32"), )
paddle.log(Tensor([1000, 2, 380284, 3],"float32"), )
paddle.log(Tensor([1000, 380284, 2, 3],"float32"), )
paddle.log(Tensor([100000, 22818],"float32"), )
paddle.log(Tensor([1003, 2274877],"float32"), )
paddle.log(Tensor([1021, 2234772],"float32"), )
paddle.log(Tensor([103, 22152441],"float32"), )
paddle.log(Tensor([1038, 2198171],"float32"), )
paddle.log(Tensor([1041, 2191837],"float32"), )
paddle.log(Tensor([1043, 2187634],"float32"), )
paddle.log(Tensor([105, 21730490],"float32"), )
paddle.log(Tensor([106106, 5376, 4],"float32"), )
paddle.log(Tensor([1140850690, 1, 2, 1],"float32"), )
paddle.log(Tensor([1140850690, 2],"float32"), )
paddle.log(Tensor([1140850690, 2],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([11408507, 200],"float32"), )
paddle.log(Tensor([1140851, 500, 4],"float32"), )
paddle.log(Tensor([1150052, 496, 4],"float32"), )
paddle.log(Tensor([1159402, 492, 4],"float32"), )
paddle.log(Tensor([120725, 4725, 4],"float32"), )
paddle.log(Tensor([139265, 1, 128, 128],"float32"), )
paddle.log(Tensor([139265, 128, 128],"float32"), )
paddle.log(Tensor([142606337, 16],"float32"), )
paddle.log(Tensor([1426064, 400, 4],"float32"), )
paddle.log(Tensor([1431655766, 3],"float16"), name="Categorical_log_prob", )
paddle.log(Tensor([14868, 38367, 4],"float32"), )
paddle.log(Tensor([15489, 36828, 4],"float32"), )
paddle.log(Tensor([1580126, 1444, 1, 1],"float32"), )
paddle.log(Tensor([190141782, 12],"float32"), )
paddle.log(Tensor([190141782, 2, 2, 3],"float32"), )
paddle.log(Tensor([1901418, 2, 300, 2],"float32"), )
paddle.log(Tensor([1901418, 300, 4],"float32"), )
paddle.log(Tensor([2, 190141782, 2, 3],"float32"), )
paddle.log(Tensor([2, 5, 2, 114085069],"float32"), )
paddle.log(Tensor([2, 5, 76056713, 3],"float32"), )
paddle.log(Tensor([20, 1, 152, 750560],"float32"), )
paddle.log(Tensor([20, 1, 419431, 272],"float32"), )
paddle.log(Tensor([20, 2760, 152, 272],"float32"), )
paddle.log(Tensor([21298, 2, 248, 216],"float32"), )
paddle.log(Tensor([2147483649, 2],"float16"), )
paddle.log(Tensor([214748365, 20],"float16"), )
paddle.log(Tensor([21474837, 10, 10, 2],"float16"), )
paddle.log(Tensor([2281701379, 1],"float32"), )
paddle.log(Tensor([2281701379],"float32"), )
paddle.log(Tensor([2281701379],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([228170138, 10],"float32"), )
paddle.log(Tensor([23047489, 99],"float32"), )
paddle.log(Tensor([25928425, 22, 4],"float32"), )
paddle.log(Tensor([27163112, 21, 4],"float32"), )
paddle.log(Tensor([2852127, 200, 4],"float32"), )
paddle.log(Tensor([2910334, 196, 4],"float32"), )
paddle.log(Tensor([2970966, 192, 4],"float32"), )
paddle.log(Tensor([3, 1, 2, 380283564],"float32"), )
paddle.log(Tensor([3, 1, 760567127, 1],"float32"), )
paddle.log(Tensor([3, 126761188, 2, 3],"float32"), )
paddle.log(Tensor([3, 1431655766],"float16"), name="Categorical_log_prob", )
paddle.log(Tensor([3, 2, 126761188, 3],"float32"), )
paddle.log(Tensor([3, 2, 2, 190141782],"float32"), )
paddle.log(Tensor([3, 2, 380283564],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([3, 253522376, 3],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([3, 380283564, 2, 1],"float32"), )
paddle.log(Tensor([3, 760567127],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([31690297, 18, 4],"float32"), )
paddle.log(Tensor([325957340, 7],"float32"), )
paddle.log(Tensor([34817, 4, 128, 128],"float32"), )
paddle.log(Tensor([357913942, 12],"float16"), )
paddle.log(Tensor([380283564, 2, 3],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([380283564, 6],"float32"), name="Uniform_entropy", )
paddle.log(Tensor([4, 1, 128, 4456449],"float32"), )
paddle.log(Tensor([4, 1, 248, 2300103],"float32"), )
paddle.log(Tensor([4, 1, 2640859, 216],"float32"), )
paddle.log(Tensor([4, 1, 4456449, 128],"float32"), )
paddle.log(Tensor([4, 10649, 248, 216],"float32"), )
paddle.log(Tensor([4, 19513, 94, 311],"float32"), )
paddle.log(Tensor([4, 2, 128, 2228225],"float32"), )
paddle.log(Tensor([4, 2, 1320430, 216],"float32"), )
paddle.log(Tensor([4, 2, 2, 142606337],"float32"), )
paddle.log(Tensor([4, 2, 2228225, 128],"float32"), )
paddle.log(Tensor([4, 2, 248, 1150052],"float32"), )
paddle.log(Tensor([4, 2, 95070891, 3],"float32"), )
paddle.log(Tensor([4, 34817, 128, 128],"float32"), )
paddle.log(Tensor([4, 4, 1114113, 128],"float32"), )
paddle.log(Tensor([4, 4, 128, 1114113],"float32"), )
paddle.log(Tensor([4, 81, 22645, 311],"float32"), )
paddle.log(Tensor([4, 81, 94, 74918],"float32"), )
paddle.log(Tensor([4, 95070891, 2, 3],"float32"), )
paddle.log(Tensor([42595, 1, 248, 216],"float32"), )
paddle.log(Tensor([4294967297, 1],"float16"), )
paddle.log(Tensor([45359, 50304],"float32"), )
paddle.log(Tensor([47159, 12096, 4],"float32"), )
paddle.log(Tensor([5, 456340276],"float32"), name="Uniform_entropy", )
paddle.log(Tensor([5, 858993460],"float16"), name="Uniform_entropy", )
paddle.log(Tensor([51349, 11109, 4],"float32"), )
paddle.log(Tensor([51856850, 11, 4],"float32"), )
paddle.log(Tensor([518569, 1100, 4],"float32"), )
paddle.log(Tensor([55189, 1, 152, 272],"float32"), )
paddle.log(Tensor([56123, 10164, 4],"float32"), )
paddle.log(Tensor([5704254, 100, 4],"float32"), )
paddle.log(Tensor([60044774, 38, 1],"float32"), )
paddle.log(Tensor([63380594, 36, 1, 1],"float32"), )
paddle.log(Tensor([69633, 128, 256],"float32"), )
paddle.log(Tensor([69633, 2, 128, 128],"float32"), )
paddle.log(Tensor([715827883, 6],"float16"), name="Uniform_entropy", )
paddle.log(Tensor([760567127, 3],"float32"), )
paddle.log(Tensor([760567127, 3],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([76056713, 5, 2, 3],"float32"), )
paddle.log(Tensor([76057, 30000],"float32"), )
paddle.log(Tensor([8, 1, 128, 2228225],"float32"), )
paddle.log(Tensor([8, 1, 2228225, 128],"float32"), )
paddle.log(Tensor([8, 17409, 128, 128],"float32"), )
paddle.log(Tensor([8, 2, 1114113, 128],"float32"), )
paddle.log(Tensor([8, 2, 128, 1114113],"float32"), )
paddle.log(Tensor([93991, 6069, 4],"float32"), )
paddle.log(Tensor([964, 81, 94, 311],"float32"), )
paddle.log(x=Tensor([100, 18, 3, 422538],"float32"), )
paddle.log(x=Tensor([100, 18, 422538, 3],"float32"), )
paddle.log(x=Tensor([100, 2281702, 10],"float32"), )
paddle.log(x=Tensor([100, 2535224, 3, 3],"float32"), )
paddle.log(x=Tensor([100, 38, 600448],"float32"), )
paddle.log(x=Tensor([100, 4563403, 5],"float32"), )
paddle.log(x=Tensor([100, 5704254, 2, 2],"float32"), )
paddle.log(x=Tensor([100, 722, 15802, 2],"float32"), )
paddle.log(x=Tensor([100, 722, 2, 15802],"float32"), )
paddle.log(x=Tensor([100, 9, 2535224],"float32"), )
paddle.log(x=Tensor([1140850690, 2],"float32"), )
paddle.log(x=Tensor([1140850690, 2],"int32"), )
paddle.log(x=Tensor([14084577, 18, 3, 3],"float32"), )
paddle.log(x=Tensor([2, 1140850690],"float32"), )
paddle.log(x=Tensor([2, 1140850690],"int32"), )
paddle.log(x=Tensor([2, 2, 1073741825],"float16"), )
paddle.log(x=Tensor([2, 2, 1073741825],"float16"), name="test_log", )
paddle.log(x=Tensor([2, 2147483649],"float16"), )
paddle.log(x=Tensor([2, 715827883, 3],"float16"), )
paddle.log(x=Tensor([2, 715827883, 3],"float16"), name="test_log", )
paddle.log(x=Tensor([2147483649, 2],"float16"), )
paddle.log(x=Tensor([227, 1116839, 3, 3],"float32"), )
paddle.log(x=Tensor([227, 18, 186140, 3],"float32"), )
paddle.log(x=Tensor([227, 18, 3, 186140],"float32"), )
paddle.log(x=Tensor([227, 2010310, 5],"float32"), )
paddle.log(x=Tensor([227, 9, 1116839],"float32"), )
paddle.log(x=Tensor([256, 1782580, 5],"float32"), )
paddle.log(x=Tensor([256, 18, 165054, 3],"float32"), )
paddle.log(x=Tensor([256, 18, 3, 165054],"float32"), )
paddle.log(x=Tensor([256, 2228225, 2, 2],"float32"), )
paddle.log(x=Tensor([256, 38, 234550],"float32"), )
paddle.log(x=Tensor([256, 722, 2, 6173],"float32"), )
paddle.log(x=Tensor([256, 722, 6173, 2],"float32"), )
paddle.log(x=Tensor([256, 891290, 10],"float32"), )
paddle.log(x=Tensor([256, 9, 990322],"float32"), )
paddle.log(x=Tensor([256, 990322, 3, 3],"float32"), )
paddle.log(x=Tensor([4294967297],"float16"), )
paddle.log(x=Tensor([50704476, 9, 5],"float32"), )
paddle.log(x=Tensor([56, 10186167, 2, 2],"float32"), )
paddle.log(x=Tensor([56, 38, 1072229],"float32"), )
paddle.log(x=Tensor([56, 4074467, 10],"float32"), )
paddle.log(x=Tensor([56, 722, 2, 28217],"float32"), )
paddle.log(x=Tensor([56, 722, 28217, 2],"float32"), )
paddle.log(x=Tensor([6004478, 38, 10],"float32"), )
paddle.log(x=Tensor([715827883, 2, 3],"float16"), )
paddle.log(x=Tensor([715827883, 2, 3],"float16"), name="test_log", )
paddle.log(x=Tensor([790063, 722, 2, 2],"float32"), )
paddle.log(x=Tensor([82, 18, 3, 515290],"float32"), )
paddle.log(x=Tensor([82, 18, 515290, 3],"float32"), )
paddle.log(x=Tensor([82, 3091737, 3, 3],"float32"), )
paddle.log(x=Tensor([82, 5565126, 5],"float32"), )
paddle.log(x=Tensor([82, 9, 3091737],"float32"), )
paddle.log(x=Tensor([87, 2622646, 10],"float32"), )
paddle.log(x=Tensor([87, 38, 690170],"float32"), )
paddle.log(x=Tensor([87, 6556614, 2, 2],"float32"), )
paddle.log(x=Tensor([87, 722, 18163, 2],"float32"), )
paddle.log(x=Tensor([87, 722, 2, 18163],"float32"), )
paddle.log10(Tensor([10, 20, 11408507],"float32"), )
paddle.log10(Tensor([10, 228170138, 1],"float32"), )
paddle.log10(Tensor([114085069, 20, 1],"float32"), )
paddle.log10(x=Tensor([1, 2281701379],"float32"), )
paddle.log10(x=Tensor([1, 4294967297],"float16"), )
paddle.log10(x=Tensor([1140850690, 2],"float32"), )
paddle.log10(x=Tensor([2, 2147483649],"float16"), )
paddle.log10(x=Tensor([2, 3, 2, 357913942],"float16"), )
paddle.log10(x=Tensor([2, 3, 357913942, 2],"float16"), )
paddle.log10(x=Tensor([2, 536870913, 2, 2],"float16"), )
paddle.log10(x=Tensor([2147483649, 2],"float16"), )
paddle.log10(x=Tensor([357913942, 3, 2, 2],"float16"), )
paddle.log10(x=Tensor([4294967297],"float16"), )
paddle.log1p(Tensor([1, 190141782, 3, 4],"float32"), )
paddle.log1p(Tensor([1, 2, 285212673, 4],"float32"), )
paddle.log1p(Tensor([1, 2, 3, 380283564],"float32"), )
paddle.log1p(Tensor([1, 2, 3, 715827883],"float16"), )
paddle.log1p(Tensor([1, 2, 536870913, 4],"float16"), )
paddle.log1p(Tensor([1, 357913942, 3, 4],"float16"), )
paddle.log1p(Tensor([10, 20, 11408507],"float32"), )
paddle.log1p(Tensor([10, 200, 1140851],"float32"), )
paddle.log1p(Tensor([10, 228170138, 1],"float32"), )
paddle.log1p(Tensor([10, 429496730],"float16"), )
paddle.log1p(Tensor([10, 760568, 300],"float32"), )
paddle.log1p(Tensor([1073741825, 4],"float16"), )
paddle.log1p(Tensor([114085069, 20, 1],"float32"), )
paddle.log1p(Tensor([1140850690, 1, 2],"float32"), )
paddle.log1p(Tensor([1140850690, 2],"float32"), )
paddle.log1p(Tensor([171798692, 5, 5],"float16"), )
paddle.log1p(Tensor([178956971, 2, 3, 4],"float16"), )
paddle.log1p(Tensor([190141782, 3, 4],"float32"), )
paddle.log1p(Tensor([2, 1, 1140850690],"float32"), )
paddle.log1p(Tensor([2, 107136, 10649],"float32"), )
paddle.log1p(Tensor([2, 1140850690, 1],"float32"), )
paddle.log1p(Tensor([2, 1140850690],"float32"), )
paddle.log1p(Tensor([2, 2147483649],"float16"), )
paddle.log1p(Tensor([2, 285212673, 4],"float32"), )
paddle.log1p(Tensor([2, 3, 380283564],"float32"), )
paddle.log1p(Tensor([2, 570425345, 2],"float32"), )
paddle.log1p(Tensor([21298, 107136, 1],"float32"), )
paddle.log1p(Tensor([2147483649, 2],"float16"), )
paddle.log1p(Tensor([214748365, 20],"float16"), )
paddle.log1p(Tensor([2281701379],"float32"), )
paddle.log1p(Tensor([357913942, 12],"float16"), )
paddle.log1p(Tensor([380283564, 3, 2],"float32"), )
paddle.log1p(Tensor([38029, 200, 300],"float32"), )
paddle.log1p(Tensor([4, 157920, 3613],"float32"), )
paddle.log1p(Tensor([4, 190141782, 3],"float32"), )
paddle.log1p(Tensor([4, 285212673, 2],"float32"), )
paddle.log1p(Tensor([4, 3, 190141782],"float32"), )
paddle.log1p(Tensor([4, 3, 357913942],"float16"), )
paddle.log1p(Tensor([4, 536870913, 2],"float16"), )
paddle.log1p(Tensor([4294967297],"float16"), )
paddle.log1p(Tensor([4456449, 16, 32],"float32"), )
paddle.log1p(Tensor([4817, 157920, 3],"float32"), )
paddle.log1p(Tensor([50000, 17180, 5],"float16"), )
paddle.log1p(Tensor([50000, 5, 17180],"float16"), )
paddle.log1p(Tensor([50000, 85900],"float16"), )
paddle.log1p(Tensor([715827883, 3, 2],"float16"), )
paddle.log1p(Tensor([760567127, 3],"float32"), )
paddle.log1p(Tensor([8, 16, 17825793],"float32"), )
paddle.log1p(Tensor([8, 16, 33554433],"float16"), )
paddle.log1p(Tensor([8, 16777217, 32],"float16"), )
paddle.log1p(Tensor([8, 8912897, 32],"float32"), )
paddle.log1p(Tensor([8388609, 16, 32],"float16"), )
paddle.log1p(Tensor([95070891, 2, 3, 4],"float32"), )
paddle.log1p(x=Tensor([1, 2281701379],"float32"), )
paddle.log1p(x=Tensor([1, 4294967297],"float16"), )
paddle.log1p(x=Tensor([1140850690, 2],"float32"), )
paddle.log1p(x=Tensor([2, 2147483649],"float16"), )
paddle.log1p(x=Tensor([2, 3, 2, 357913942],"float16"), )
paddle.log1p(x=Tensor([2, 3, 357913942, 2],"float16"), )
paddle.log1p(x=Tensor([2, 536870913, 2, 2],"float16"), )
paddle.log1p(x=Tensor([2147483649, 2],"float16"), )
paddle.log1p(x=Tensor([357913942, 3, 2, 2],"float16"), )
paddle.log1p(x=Tensor([4294967297],"float16"), )
paddle.log2(Tensor([10, 20, 11408507],"float32"), )
paddle.log2(Tensor([10, 228170138, 1],"float32"), )
paddle.log2(Tensor([10, 228170138],"float32"), )
paddle.log2(Tensor([10, 429496730],"float16"), )
paddle.log2(Tensor([114085069, 20, 1],"float32"), )
paddle.log2(Tensor([190141782, 12],"float32"), )
paddle.log2(Tensor([228170138, 5, 2],"float32"), )
paddle.log2(Tensor([357913942, 12],"float16"), )
paddle.log2(Tensor([4, 285212673, 2],"float32"), )
paddle.log2(Tensor([4, 5, 114085069],"float32"), )
paddle.log2(Tensor([4, 5, 214748365],"float16"), )
paddle.log2(Tensor([4, 536870913, 2],"float16"), )
paddle.log2(Tensor([429496730, 5, 2],"float16"), )
paddle.log2(x=Tensor([1, 2281701379],"float32"), )
paddle.log2(x=Tensor([1, 4294967297],"float16"), )
paddle.log2(x=Tensor([1140850690, 2],"float32"), )
paddle.log2(x=Tensor([2, 2147483649],"float16"), )
paddle.log2(x=Tensor([2, 3, 2, 357913942],"float16"), )
paddle.log2(x=Tensor([2, 3, 357913942, 2],"float16"), )
paddle.log2(x=Tensor([2, 536870913, 2, 2],"float16"), )
paddle.log2(x=Tensor([2147483649, 2],"float16"), )
paddle.log2(x=Tensor([357913942, 3, 2, 2],"float16"), )
paddle.log2(x=Tensor([4294967297],"float16"), )
paddle.logaddexp(Tensor([1, 2, 3, 380283564],"float32"), Tensor([1, 2, 3, 1],"float32"), )
paddle.logaddexp(Tensor([1, 2, 3, 4],"float16"), Tensor([178956971, 2, 3, 4],"float16"), )
paddle.logaddexp(Tensor([178956971, 2, 3, 4],"float16"), Tensor([1, 2, 3, 4],"float16"), )
paddle.logaddexp(Tensor([95070891, 2, 3, 4],"float32"), Tensor([1, 2, 3, 1],"float32"), )
paddle.logical_and(Tensor([1, 1001],"bool"), Tensor([2279422, 1001],"bool"), )
paddle.logical_and(Tensor([1, 1002],"bool"), Tensor([2277148, 1002],"bool"), )
paddle.logical_and(Tensor([1, 1003],"bool"), Tensor([2274877, 1003],"bool"), )
paddle.logical_and(Tensor([1, 1004],"bool"), Tensor([2272611, 1004],"bool"), )
paddle.logical_and(Tensor([1, 1005],"bool"), Tensor([2270350, 1005],"bool"), )
paddle.logical_and(Tensor([1, 1006],"bool"), Tensor([2268093, 1006],"bool"), )
paddle.logical_and(Tensor([1, 1007],"bool"), Tensor([2265841, 1007],"bool"), )
paddle.logical_and(Tensor([1, 1008],"bool"), Tensor([2263593, 1008],"bool"), )
paddle.logical_and(Tensor([1, 1024, 1024],"bool"), Tensor([2177, 1024, 1024],"bool"), )
paddle.logical_and(Tensor([1, 1024, 2228225],"bool"), Tensor([1, 1024, 2228225],"bool"), )
paddle.logical_and(Tensor([1, 2110733, 1081],"bool"), Tensor([1, 2110733, 1081],"bool"), )
paddle.logical_and(Tensor([1, 2124490, 1074],"bool"), Tensor([1, 2124490, 1074],"bool"), )
paddle.logical_and(Tensor([1, 2126470, 1073],"bool"), Tensor([1, 2126470, 1073],"bool"), )
paddle.logical_and(Tensor([1, 2138427, 1067],"bool"), Tensor([1, 2138427, 1067],"bool"), )
paddle.logical_and(Tensor([1, 2200291, 1037],"bool"), Tensor([1, 2200291, 1037],"bool"), )
paddle.logical_and(Tensor([1, 2228225, 1024],"bool"), Tensor([1, 2228225, 1024],"bool"), )
paddle.logical_and(Tensor([1, 2281701379],"bool"), Tensor([1, 2281701379],"bool"), )
paddle.logical_and(Tensor([1, 4456449, 512],"bool"), Tensor([1, 4456449, 512],"bool"), )
paddle.logical_and(Tensor([1, 496, 4600205],"bool"), Tensor([1, 496, 4600205],"bool"), )
paddle.logical_and(Tensor([1, 496, 512],"bool"), Tensor([8985, 496, 512],"bool"), )
paddle.logical_and(Tensor([1, 512, 4456449],"bool"), Tensor([1, 512, 4456449],"bool"), )
paddle.logical_and(Tensor([1, 512, 512],"bool"), Tensor([8705, 512, 512],"bool"), )
paddle.logical_and(Tensor([1, 800, 1037],"bool"), Tensor([2751, 800, 1037],"bool"), )
paddle.logical_and(Tensor([1, 800, 1067],"bool"), Tensor([2674, 800, 1067],"bool"), )
paddle.logical_and(Tensor([1, 800, 1073],"bool"), Tensor([2659, 800, 1073],"bool"), )
paddle.logical_and(Tensor([1, 800, 1074],"bool"), Tensor([2656, 800, 1074],"bool"), )
paddle.logical_and(Tensor([1, 800, 1081],"bool"), Tensor([2639, 800, 1081],"bool"), )
paddle.logical_and(Tensor([1, 800, 2852127],"bool"), Tensor([1, 800, 2852127],"bool"), )
paddle.logical_and(Tensor([10, 1, 499, 1],"float32"), Tensor([499, 4572548],"float32"), )
paddle.logical_and(Tensor([2, 3, 4, 95070891],"bool"), Tensor([2, 3, 4, 95070891],"bool"), )
paddle.logical_and(Tensor([2, 3, 76056713, 5],"bool"), Tensor([2, 3, 76056713, 5],"bool"), )
paddle.logical_and(Tensor([2, 57042535, 4, 5],"bool"), Tensor([2, 57042535, 4, 5],"bool"), )
paddle.logical_and(Tensor([2177, 1024, 1024],"bool"), Tensor([1, 1024, 1024],"bool"), )
paddle.logical_and(Tensor([2177, 1024, 1024],"bool"), Tensor([2177, 1024, 1024],"bool"), )
paddle.logical_and(Tensor([2263593, 1008],"bool"), Tensor([1, 1008],"bool"), )
paddle.logical_and(Tensor([2263593, 1008],"bool"), Tensor([2263593, 1008],"bool"), )
paddle.logical_and(Tensor([2265841, 1007],"bool"), Tensor([1, 1007],"bool"), )
paddle.logical_and(Tensor([2265841, 1007],"bool"), Tensor([2265841, 1007],"bool"), )
paddle.logical_and(Tensor([2268093, 1006],"bool"), Tensor([1, 1006],"bool"), )
paddle.logical_and(Tensor([2268093, 1006],"bool"), Tensor([2268093, 1006],"bool"), )
paddle.logical_and(Tensor([2270350, 1005],"bool"), Tensor([1, 1005],"bool"), )
paddle.logical_and(Tensor([2270350, 1005],"bool"), Tensor([2270350, 1005],"bool"), )
paddle.logical_and(Tensor([2272611, 1004],"bool"), Tensor([1, 1004],"bool"), )
paddle.logical_and(Tensor([2272611, 1004],"bool"), Tensor([2272611, 1004],"bool"), )
paddle.logical_and(Tensor([2274877, 1003],"bool"), Tensor([1, 1003],"bool"), )
paddle.logical_and(Tensor([2274877, 1003],"bool"), Tensor([2274877, 1003],"bool"), )
paddle.logical_and(Tensor([2277148, 1002],"bool"), Tensor([1, 1002],"bool"), )
paddle.logical_and(Tensor([2277148, 1002],"bool"), Tensor([2277148, 1002],"bool"), )
paddle.logical_and(Tensor([2279422, 1001],"bool"), Tensor([1, 1001],"bool"), )
paddle.logical_and(Tensor([2279422, 1001],"bool"), Tensor([2279422, 1001],"bool"), )
paddle.logical_and(Tensor([2281701379],"bool"), Tensor([2281701379],"bool"), )
paddle.logical_and(Tensor([2639, 800, 1081],"bool"), Tensor([1, 800, 1081],"bool"), )
paddle.logical_and(Tensor([2639, 800, 1081],"bool"), Tensor([2639, 800, 1081],"bool"), )
paddle.logical_and(Tensor([2656, 800, 1074],"bool"), Tensor([1, 800, 1074],"bool"), )
paddle.logical_and(Tensor([2656, 800, 1074],"bool"), Tensor([2656, 800, 1074],"bool"), )
paddle.logical_and(Tensor([2659, 800, 1073],"bool"), Tensor([1, 800, 1073],"bool"), )
paddle.logical_and(Tensor([2659, 800, 1073],"bool"), Tensor([2659, 800, 1073],"bool"), )
paddle.logical_and(Tensor([2674, 800, 1067],"bool"), Tensor([1, 800, 1067],"bool"), )
paddle.logical_and(Tensor([2674, 800, 1067],"bool"), Tensor([2674, 800, 1067],"bool"), )
paddle.logical_and(Tensor([2751, 800, 1037],"bool"), Tensor([1, 800, 1037],"bool"), )
paddle.logical_and(Tensor([2751, 800, 1037],"bool"), Tensor([2751, 800, 1037],"bool"), )
paddle.logical_and(Tensor([38028357, 3, 4, 5],"bool"), Tensor([38028357, 3, 4, 5],"bool"), )
paddle.logical_and(Tensor([639133, 17, 5, 6, 7],"bool"), Tensor([639133, 17, 5, 6, 7],"bool"), )
paddle.logical_and(Tensor([8, 1358156, 5, 6, 7],"bool"), Tensor([8, 1358156, 5, 6, 7],"bool"), )
paddle.logical_and(Tensor([8, 17, 399458, 6, 7],"bool"), Tensor([8, 17, 399458, 6, 7],"bool"), )
paddle.logical_and(Tensor([8, 17, 5, 479350, 7],"bool"), Tensor([8, 17, 5, 479350, 7],"bool"), )
paddle.logical_and(Tensor([8, 17, 5, 6, 559241],"bool"), Tensor([8, 17, 5, 6, 559241],"bool"), )
paddle.logical_and(Tensor([8705, 512, 512],"bool"), Tensor([1, 512, 512],"bool"), )
paddle.logical_and(Tensor([8705, 512, 512],"bool"), Tensor([8705, 512, 512],"bool"), )
paddle.logical_and(Tensor([8985, 496, 512],"bool"), Tensor([1, 496, 512],"bool"), )
paddle.logical_and(Tensor([8985, 496, 512],"bool"), Tensor([8985, 496, 512],"bool"), )
paddle.logical_and(x=Tensor([1, 2, 1, 3],"bool"), y=Tensor([1, 760567127, 3],"bool"), )
paddle.logical_and(x=Tensor([1, 2],"bool"), y=Tensor([1140850690, 2],"bool"), )
paddle.logical_and(x=Tensor([1, 760567127, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_and(x=Tensor([1140850690, 2],"bool"), y=Tensor([1140850690, 2],"bool"), )
paddle.logical_and(x=Tensor([1],"bool"), y=Tensor([2281701379],"bool"), )
paddle.logical_and(x=Tensor([2281701379],"bool"), y=Tensor([2281701379],"bool"), )
paddle.logical_and(x=Tensor([380283564, 2, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_not(Tensor([1, 1, 1, 2281701379],"bool"), )
paddle.logical_not(Tensor([1, 1, 10, 228170138],"bool"), )
paddle.logical_not(Tensor([1, 1, 10514753, 217],"bool"), )
paddle.logical_not(Tensor([1, 1, 13501192, 169],"bool"), )
paddle.logical_not(Tensor([1, 1, 14533130, 157],"bool"), )
paddle.logical_not(Tensor([1, 1, 15735872, 145],"bool"), )
paddle.logical_not(Tensor([1, 1, 20192048, 113],"bool"), )
paddle.logical_not(Tensor([1, 1, 20933041, 109],"bool"), )
paddle.logical_not(Tensor([1, 1, 2281701379, 1],"bool"), )
paddle.logical_not(Tensor([1, 1, 228170138, 10],"bool"), )
paddle.logical_not(Tensor([1, 1, 23522695, 97],"bool"), )
paddle.logical_not(Tensor([1, 1, 26843546, 85],"bool"), )
paddle.logical_not(Tensor([1, 1, 31256184, 73],"bool"), )
paddle.logical_not(Tensor([1, 1, 33068136, 69],"bool"), )
paddle.logical_not(Tensor([1, 1, 35103099, 65],"bool"), )
paddle.logical_not(Tensor([1, 1, 37404941, 61],"bool"), )
paddle.logical_not(Tensor([1, 1, 5926498, 385],"bool"), )
paddle.logical_not(Tensor([1, 1, 8742151, 261],"bool"), )
paddle.logical_not(Tensor([1, 1, 9467641, 241],"bool"), )
paddle.logical_not(Tensor([1, 1, 9963762, 229],"bool"), )
paddle.logical_not(Tensor([1, 10514753, 1, 217],"bool"), )
paddle.logical_not(Tensor([1, 1140850690, 2],"int64"), )
paddle.logical_not(Tensor([1, 13501192, 1, 169],"bool"), )
paddle.logical_not(Tensor([1, 1453313, 10, 157],"bool"), )
paddle.logical_not(Tensor([1, 14533130, 1, 157],"bool"), )
paddle.logical_not(Tensor([1, 15735872, 1, 145],"bool"), )
paddle.logical_not(Tensor([1, 1573588, 10, 145],"bool"), )
paddle.logical_not(Tensor([1, 20192048, 1, 113],"bool"), )
paddle.logical_not(Tensor([1, 2019205, 10, 113],"bool"), )
paddle.logical_not(Tensor([1, 20933041, 1, 109],"bool"), )
paddle.logical_not(Tensor([1, 2093305, 10, 109],"bool"), )
paddle.logical_not(Tensor([1, 2281701379, 1, 1],"bool"), )
paddle.logical_not(Tensor([1, 2281701379, 1],"bool"), )
paddle.logical_not(Tensor([1, 2281701379],"bool"), )
paddle.logical_not(Tensor([1, 2281701379],"int64"), )
paddle.logical_not(Tensor([1, 22817014, 10, 10],"bool"), )
paddle.logical_not(Tensor([1, 23522695, 1, 97],"bool"), )
paddle.logical_not(Tensor([1, 26843546, 1, 85],"bool"), )
paddle.logical_not(Tensor([1, 31256184, 1, 73],"bool"), )
paddle.logical_not(Tensor([1, 33068136, 1, 69],"bool"), )
paddle.logical_not(Tensor([1, 35103099, 1, 65],"bool"), )
paddle.logical_not(Tensor([1, 36828, 61956],"bool"), )
paddle.logical_not(Tensor([1, 37404941, 1, 61],"bool"), )
paddle.logical_not(Tensor([1, 38367, 59471],"bool"), )
paddle.logical_not(Tensor([1, 4, 570425345],"int64"), )
paddle.logical_not(Tensor([1, 5926498, 1, 385],"bool"), )
paddle.logical_not(Tensor([1, 6380, 357634],"bool"), )
paddle.logical_not(Tensor([1, 8550, 266866],"bool"), )
paddle.logical_not(Tensor([1, 8742151, 1, 261],"bool"), )
paddle.logical_not(Tensor([1, 9467641, 1, 241],"bool"), )
paddle.logical_not(Tensor([1, 9963762, 1, 229],"bool"), )
paddle.logical_not(Tensor([10, 20, 11408507],"float32"), )
paddle.logical_not(Tensor([10, 228170138, 1],"float32"), )
paddle.logical_not(Tensor([10, 228170138],"bool"), )
paddle.logical_not(Tensor([10, 22817014, 10],"bool"), )
paddle.logical_not(Tensor([10, 25, 9126806],"bool"), )
paddle.logical_not(Tensor([10, 60, 3802836],"bool"), )
paddle.logical_not(Tensor([10, 9126806, 25],"bool"), )
paddle.logical_not(Tensor([100, 22817014],"bool"), )
paddle.logical_not(Tensor([1000, 2281702],"bool"), )
paddle.logical_not(Tensor([1001, 2279422],"bool"), )
paddle.logical_not(Tensor([10186167, 7, 32],"bool"), )
paddle.logical_not(Tensor([103713700, 22],"bool"), )
paddle.logical_not(Tensor([10514753, 1, 1, 217],"bool"), )
paddle.logical_not(Tensor([114085069, 20, 1],"float32"), )
paddle.logical_not(Tensor([1140850690, 1, 2],"int64"), )
paddle.logical_not(Tensor([1140850690, 2],"bool"), )
paddle.logical_not(Tensor([126761188, 18],"bool"), )
paddle.logical_not(Tensor([1267612, 60, 30],"bool"), )
paddle.logical_not(Tensor([13, 5484860, 32],"bool"), )
paddle.logical_not(Tensor([13, 7, 25073642],"bool"), )
paddle.logical_not(Tensor([13501192, 1, 1, 169],"bool"), )
paddle.logical_not(Tensor([142606337, 16],"bool"), )
paddle.logical_not(Tensor([1453313, 1, 10, 157],"bool"), )
paddle.logical_not(Tensor([14533130, 1, 1, 157],"bool"), )
paddle.logical_not(Tensor([15735872, 1, 1, 145],"bool"), )
paddle.logical_not(Tensor([1573588, 1, 10, 145],"bool"), )
paddle.logical_not(Tensor([190141782, 12],"bool"), )
paddle.logical_not(Tensor([19014179, 60, 2],"bool"), )
paddle.logical_not(Tensor([1901418, 60, 20],"bool"), )
paddle.logical_not(Tensor([2, 570425345, 2],"bool"), )
paddle.logical_not(Tensor([2, 60, 19014179],"bool"), )
paddle.logical_not(Tensor([20, 5704254, 20],"bool"), )
paddle.logical_not(Tensor([20, 60, 1901418],"bool"), )
paddle.logical_not(Tensor([20192048, 1, 1, 113],"bool"), )
paddle.logical_not(Tensor([2019205, 1, 10, 113],"bool"), )
paddle.logical_not(Tensor([207427399, 11],"bool"), )
paddle.logical_not(Tensor([20933041, 1, 1, 109],"bool"), )
paddle.logical_not(Tensor([2093305, 1, 10, 109],"bool"), )
paddle.logical_not(Tensor([2281701379, 1, 1, 1],"bool"), )
paddle.logical_not(Tensor([2281701379, 1],"bool"), )
paddle.logical_not(Tensor([2281701379],"bool"), )
paddle.logical_not(Tensor([228170138, 10],"bool"), )
paddle.logical_not(Tensor([22817014, 1, 10, 10],"bool"), )
paddle.logical_not(Tensor([2281702, 1000],"bool"), )
paddle.logical_not(Tensor([23522695, 1, 1, 97],"bool"), )
paddle.logical_not(Tensor([266866, 8550, 1],"bool"), )
paddle.logical_not(Tensor([26843546, 1, 1, 85],"bool"), )
paddle.logical_not(Tensor([27, 25, 3380299],"bool"), )
paddle.logical_not(Tensor([27, 3380299, 25],"bool"), )
paddle.logical_not(Tensor([285212673, 4, 2],"int64"), )
paddle.logical_not(Tensor([3, 1, 760567127],"int64"), )
paddle.logical_not(Tensor([3, 380283564, 2],"int64"), )
paddle.logical_not(Tensor([3, 4, 190141782],"int64"), )
paddle.logical_not(Tensor([3, 760567127, 1],"int64"), )
paddle.logical_not(Tensor([30, 2535224, 30],"bool"), )
paddle.logical_not(Tensor([30, 60, 1267612],"bool"), )
paddle.logical_not(Tensor([31256184, 1, 1, 73],"bool"), )
paddle.logical_not(Tensor([33068136, 1, 1, 69],"bool"), )
paddle.logical_not(Tensor([340, 25, 268436],"bool"), )
paddle.logical_not(Tensor([340, 268436, 25],"bool"), )
paddle.logical_not(Tensor([35103099, 1, 1, 65],"bool"), )
paddle.logical_not(Tensor([357634, 6380, 1],"bool"), )
paddle.logical_not(Tensor([3650723, 25, 25],"bool"), )
paddle.logical_not(Tensor([37404941, 1, 1, 61],"bool"), )
paddle.logical_not(Tensor([38028357, 60],"bool"), )
paddle.logical_not(Tensor([3802836, 60, 10],"bool"), )
paddle.logical_not(Tensor([4, 142606337, 4],"bool"), )
paddle.logical_not(Tensor([4, 60, 9507090],"bool"), )
paddle.logical_not(Tensor([456340276, 5],"bool"), )
paddle.logical_not(Tensor([52, 1371215, 32],"bool"), )
paddle.logical_not(Tensor([52, 7, 6268411],"bool"), )
paddle.logical_not(Tensor([570425345, 4, 1],"int64"), )
paddle.logical_not(Tensor([570425345, 4],"bool"), )
paddle.logical_not(Tensor([570425345, 4],"int64"), )
paddle.logical_not(Tensor([5926498, 1, 1, 385],"bool"), )
paddle.logical_not(Tensor([59471, 38367, 1],"bool"), )
paddle.logical_not(Tensor([6, 60, 6338060],"bool"), )
paddle.logical_not(Tensor([6, 63380594, 6],"bool"), )
paddle.logical_not(Tensor([61956, 36828, 1],"bool"), )
paddle.logical_not(Tensor([6338060, 60, 6],"bool"), )
paddle.logical_not(Tensor([760567127, 3],"bool"), )
paddle.logical_not(Tensor([85, 1073742, 25],"bool"), )
paddle.logical_not(Tensor([85, 25, 1073742],"bool"), )
paddle.logical_not(Tensor([8742151, 1, 1, 261],"bool"), )
paddle.logical_not(Tensor([9467641, 1, 1, 241],"bool"), )
paddle.logical_not(Tensor([9507090, 60, 4],"bool"), )
paddle.logical_not(Tensor([9963762, 1, 1, 229],"bool"), )
paddle.logical_not(x=Tensor([1, 2, 1, 1140850690],"bool"), )
paddle.logical_not(x=Tensor([1, 2, 380283564, 3],"bool"), )
paddle.logical_not(x=Tensor([1, 2281701379],"bool"), )
paddle.logical_not(x=Tensor([1, 760567127, 1, 3],"bool"), )
paddle.logical_not(x=Tensor([1140850690, 2],"bool"), )
paddle.logical_not(x=Tensor([2281701379],"bool"), )
paddle.logical_not(x=Tensor([380283564, 2, 1, 3],"bool"), )
paddle.logical_or(Tensor([1, 1],"bool"), Tensor([1, 2281701379],"bool"), )
paddle.logical_or(Tensor([1, 1],"bool"), Tensor([2281701379, 1],"bool"), )
paddle.logical_or(Tensor([1, 2281701379],"bool"), Tensor([1, 1],"bool"), )
paddle.logical_or(Tensor([1, 2281701379],"bool"), Tensor([1, 2281701379],"bool"), )
paddle.logical_or(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.logical_or(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.logical_or(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.logical_or(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.logical_or(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.logical_or(Tensor([13, 175515491, 1],"bool"), Tensor([13, 1, 7],"bool"), )
paddle.logical_or(Tensor([13, 25073642, 7],"bool"), Tensor([13, 25073642, 7],"bool"), )
paddle.logical_or(Tensor([13, 7, 1],"bool"), Tensor([13, 1, 175515491],"bool"), )
paddle.logical_or(Tensor([13, 7, 25073642],"bool"), Tensor([13, 1, 25073642],"bool"), )
paddle.logical_or(Tensor([13, 7, 25073642],"bool"), Tensor([13, 7, 25073642],"bool"), )
paddle.logical_or(Tensor([1],"bool"), Tensor([2281701379],"bool"), )
paddle.logical_or(Tensor([2, 1140850690],"bool"), Tensor([2, 1140850690],"bool"), )
paddle.logical_or(Tensor([2, 1140850690],"bool"), Tensor([2, 1],"bool"), )
paddle.logical_or(Tensor([2, 1],"bool"), Tensor([2, 1140850690],"bool"), )
paddle.logical_or(Tensor([2281701379, 1],"bool"), Tensor([1, 1],"bool"), )
paddle.logical_or(Tensor([2281701379, 1],"bool"), Tensor([2281701379, 1],"bool"), )
paddle.logical_or(Tensor([2281701379],"bool"), Tensor([1],"bool"), )
paddle.logical_or(Tensor([2281701379],"bool"), Tensor([2281701379],"bool"), )
paddle.logical_or(Tensor([285212673, 8],"bool"), Tensor([285212673, 8],"bool"), )
paddle.logical_or(Tensor([325957340, 7, 1],"bool"), Tensor([325957340, 1, 7],"bool"), )
paddle.logical_or(Tensor([3565159, 640],"bool"), Tensor([3565159, 640],"bool"), )
paddle.logical_or(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.logical_or(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.logical_or(Tensor([4, 570425345],"bool"), Tensor([4, 570425345],"bool"), )
paddle.logical_or(Tensor([46565335, 7, 7],"bool"), Tensor([46565335, 7, 7],"bool"), )
paddle.logical_or(Tensor([570425345, 4],"bool"), Tensor([570425345, 4],"bool"), )
paddle.logical_or(Tensor([640, 3565159],"bool"), Tensor([640, 3565159],"bool"), )
paddle.logical_or(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.logical_or(Tensor([8, 285212673],"bool"), Tensor([8, 285212673],"bool"), )
paddle.logical_or(x=Tensor([1, 2, 1, 3],"bool"), y=Tensor([1, 760567127, 3],"bool"), )
paddle.logical_or(x=Tensor([1, 2],"bool"), y=Tensor([1140850690, 2],"bool"), )
paddle.logical_or(x=Tensor([1, 760567127, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_or(x=Tensor([1140850690, 2],"bool"), y=Tensor([1140850690, 2],"bool"), )
paddle.logical_or(x=Tensor([1],"bool"), y=Tensor([2281701379],"bool"), )
paddle.logical_or(x=Tensor([2281701379],"bool"), y=Tensor([2281701379],"bool"), )
paddle.logical_or(x=Tensor([380283564, 2, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_or(x=Tensor([52, 1462630, 1, 30],"bool"), y=Tensor([30, 30],"bool"), )
paddle.logical_xor(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.logical_xor(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.logical_xor(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.logical_xor(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.logical_xor(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.logical_xor(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.logical_xor(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.logical_xor(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.logical_xor(x=Tensor([1, 2, 1, 3],"bool"), y=Tensor([1, 760567127, 3],"bool"), )
paddle.logical_xor(x=Tensor([1, 2],"bool"), y=Tensor([1140850690, 2],"bool"), )
paddle.logical_xor(x=Tensor([1, 760567127, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_xor(x=Tensor([1140850690, 2],"bool"), y=Tensor([1140850690, 2],"bool"), )
paddle.logical_xor(x=Tensor([1],"bool"), y=Tensor([2281701379],"bool"), )
paddle.logical_xor(x=Tensor([2281701379],"bool"), y=Tensor([2281701379],"bool"), )
paddle.logical_xor(x=Tensor([380283564, 2, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logit(Tensor([10, 20, 11408507],"float32"), 0.001, )
paddle.logit(Tensor([10, 228170138, 1],"float32"), 0.001, )
paddle.logit(Tensor([114085069, 20, 1],"float32"), 0.001, )
paddle.logit(Tensor([2281701379],"float32"), 1e-08, )
paddle.logit(x=Tensor([143165577, 3, 2, 5],"float16"), eps=0.2, )
paddle.logit(x=Tensor([4, 107374183, 2, 5],"float16"), eps=0.2, )
paddle.logit(x=Tensor([4, 3, 2, 178956971],"float16"), eps=0.2, )
paddle.logit(x=Tensor([4, 3, 71582789, 5],"float16"), eps=0.2, )
paddle.logsumexp(Tensor([10, 228170138],"float32"), axis=1, )
paddle.logsumexp(Tensor([143165577, 5, 6],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 107374183, 4, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 107374183, 4, 5],"float16"), list[-1,], True, )
paddle.logsumexp(Tensor([2, 107374183, 4, 5],"float16"), list[0,-1,], False, )
paddle.logsumexp(Tensor([2, 107374183, 4, 5],"float16"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([2, 1140850690],"float32"), axis=1, )
paddle.logsumexp(Tensor([2, 3, 143165577, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 143165577, 5],"float16"), list[-1,], True, )
paddle.logsumexp(Tensor([2, 3, 143165577, 5],"float16"), list[0,-1,], False, )
paddle.logsumexp(Tensor([2, 3, 143165577, 5],"float16"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 178956971],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 178956971],"float16"), list[-1,], True, )
paddle.logsumexp(Tensor([2, 3, 4, 178956971],"float16"), list[0,-1,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 178956971],"float16"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 95070891],"float32"), 2, False, )
paddle.logsumexp(Tensor([2, 3, 4, 95070891],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 95070891],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 95070891],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([2, 3, 76056713, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([2, 3, 76056713, 5],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 76056713, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 3, 76056713, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([2, 57042535, 4, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([2, 57042535, 4, 5],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 57042535, 4, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 57042535, 4, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([20, 114085069],"float32"), axis=1, )
paddle.logsumexp(Tensor([2281701379],"float32"), axis=0, )
paddle.logsumexp(Tensor([26, 16, 4, 1371215],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([26, 16, 685608, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([26, 2742430, 4, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([26, 4, 16, 1371215],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([26, 4, 21939437, 1],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([26, 5484860, 16, 1],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([26, 8, 1371215, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([26, 8, 4, 2742430],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([285213, 200, 40],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([285213, 200, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([30, 1901418, 40],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([30, 1901418, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([30, 200, 380284],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([30, 200, 380284],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([30, 76056713],"float32"), axis=1, )
paddle.logsumexp(Tensor([35651585, 4, 16, 1],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([38028357, 3, 4, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([38028357, 3, 4, 5],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([38028357, 3, 4, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([38028357, 3, 4, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([38028357, 60],"float32"), axis=1, )
paddle.logsumexp(Tensor([4, 178956971, 6],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([4, 5, 214748365],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([4, 570425345],"float32"), axis=1, )
paddle.logsumexp(Tensor([4456449, 16, 4, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([6, 380283564],"float32"), axis=1, )
paddle.logsumexp(Tensor([71582789, 3, 4, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([71582789, 3, 4, 5],"float16"), list[-1,], True, )
paddle.logsumexp(Tensor([71582789, 3, 4, 5],"float16"), list[0,-1,], False, )
paddle.logsumexp(Tensor([71582789, 3, 4, 5],"float16"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([8912897, 8, 4, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(x=Tensor([2, 1073741825, 2],"float16"), axis=0, keepdim=True, )
paddle.logsumexp(x=Tensor([2, 1073741825, 2],"float16"), axis=2, )
paddle.logsumexp(x=Tensor([2, 1073741825, 2],"float16"), axis=list[0,1,], )
paddle.logsumexp(x=Tensor([2, 1073741825, 2],"float16"), axis=list[0,1,], keepdim=True, )
paddle.logsumexp(x=Tensor([2, 3, 380283564],"float32"), axis=2, )
paddle.logsumexp(x=Tensor([2, 3, 715827883],"float16"), axis=0, keepdim=True, )
paddle.logsumexp(x=Tensor([2, 3, 715827883],"float16"), axis=2, )
paddle.logsumexp(x=Tensor([2, 3, 715827883],"float16"), axis=list[0,1,], )
paddle.logsumexp(x=Tensor([2, 3, 715827883],"float16"), axis=list[0,1,], keepdim=True, )
paddle.logsumexp(x=Tensor([2, 570425345, 2],"float32"), axis=2, )
paddle.logsumexp(x=Tensor([380283564, 3, 2],"float32"), axis=2, )
paddle.logsumexp(x=Tensor([715827883, 3, 2],"float16"), axis=0, keepdim=True, )
paddle.logsumexp(x=Tensor([715827883, 3, 2],"float16"), axis=2, )
paddle.logsumexp(x=Tensor([715827883, 3, 2],"float16"), axis=list[0,1,], )
paddle.logsumexp(x=Tensor([715827883, 3, 2],"float16"), axis=list[0,1,], keepdim=True, )
paddle.masked_fill(Tensor([10, 228170138],"int32"), Tensor([10, 228170138],"bool"), 0, )
paddle.masked_fill(Tensor([10, 22817014, 10],"int32"), Tensor([10, 22817014, 10],"bool"), 0, )
paddle.masked_fill(Tensor([10, 60, 3802836],"int32"), Tensor([10, 60, 3802836],"bool"), 0, )
paddle.masked_fill(Tensor([1267612, 60, 30],"int32"), Tensor([1267612, 60, 30],"bool"), 0, )
paddle.masked_fill(Tensor([1760573, 8, 9, 18],"float32"), Tensor([1760573, 8, 9, 18],"bool"), -0.40675103664398193, )
paddle.masked_fill(Tensor([1760573, 8, 9, 18],"float32"), Tensor([1760573, 8, 9, 18],"bool"), 0.5797171592712402, )
paddle.masked_fill(Tensor([19014179, 60, 2],"int32"), Tensor([19014179, 60, 2],"bool"), 0, )
paddle.masked_fill(Tensor([1901418, 60, 20],"int32"), Tensor([1901418, 60, 20],"bool"), 0, )
paddle.masked_fill(Tensor([2, 1140850690],"int32"), Tensor([2, 1140850690],"bool"), 0, )
paddle.masked_fill(Tensor([2, 570425345, 2],"int32"), Tensor([2, 570425345, 2],"bool"), 0, )
paddle.masked_fill(Tensor([2, 60, 19014179],"int32"), Tensor([2, 60, 19014179],"bool"), 0, )
paddle.masked_fill(Tensor([20, 114085069],"int32"), Tensor([20, 114085069],"bool"), 0, )
paddle.masked_fill(Tensor([20, 5704254, 20],"int32"), Tensor([20, 5704254, 20],"bool"), 0, )
paddle.masked_fill(Tensor([20, 60, 1901418],"int32"), Tensor([20, 60, 1901418],"bool"), 0, )
paddle.masked_fill(Tensor([30, 2535224, 30],"int32"), Tensor([30, 2535224, 30],"bool"), 0, )
paddle.masked_fill(Tensor([30, 60, 1267612],"int32"), Tensor([30, 60, 1267612],"bool"), 0, )
paddle.masked_fill(Tensor([30, 76056713],"int32"), Tensor([30, 76056713],"bool"), 0, )
paddle.masked_fill(Tensor([300, 1],"float16"), Tensor([300, 7605672],"bool"), -0.54931640625, )
paddle.masked_fill(Tensor([300, 1],"float16"), Tensor([300, 7605672],"bool"), 1.3017578125, )
paddle.masked_fill(Tensor([38028357, 60],"int32"), Tensor([38028357, 60],"bool"), 0, )
paddle.masked_fill(Tensor([3802836, 60, 10],"int32"), Tensor([3802836, 60, 10],"bool"), 0, )
paddle.masked_fill(Tensor([4, 142606337, 4],"int32"), Tensor([4, 142606337, 4],"bool"), 0, )
paddle.masked_fill(Tensor([4, 570425345],"int32"), Tensor([4, 570425345],"bool"), 0, )
paddle.masked_fill(Tensor([4, 60, 9507090],"int32"), Tensor([4, 60, 9507090],"bool"), 0, )
paddle.masked_fill(Tensor([57042535, 40],"float32"), Tensor([40],"bool"), -0.29328805208206177, )
paddle.masked_fill(Tensor([57042535, 40],"float32"), Tensor([40],"bool"), 0.9238947033882141, )
paddle.masked_fill(Tensor([6, 2347430, 9, 18],"float32"), Tensor([6, 2347430, 9, 18],"bool"), -0.40675103664398193, )
paddle.masked_fill(Tensor([6, 2347430, 9, 18],"float32"), Tensor([6, 2347430, 9, 18],"bool"), 0.5797171592712402, )
paddle.masked_fill(Tensor([6, 380283564],"int32"), Tensor([6, 380283564],"bool"), 0, )
paddle.masked_fill(Tensor([6, 60, 6338060],"int32"), Tensor([6, 60, 6338060],"bool"), 0, )
paddle.masked_fill(Tensor([6, 63380594, 6],"int32"), Tensor([6, 63380594, 6],"bool"), 0, )
paddle.masked_fill(Tensor([6, 8, 2640859, 18],"float32"), Tensor([6, 8, 2640859, 18],"bool"), -0.40675103664398193, )
paddle.masked_fill(Tensor([6, 8, 2640859, 18],"float32"), Tensor([6, 8, 2640859, 18],"bool"), 0.5797171592712402, )
paddle.masked_fill(Tensor([6, 8, 9, 5281717],"float32"), Tensor([6, 8, 9, 5281717],"bool"), -0.40675103664398193, )
paddle.masked_fill(Tensor([6, 8, 9, 5281717],"float32"), Tensor([6, 8, 9, 5281717],"bool"), 0.5797171592712402, )
paddle.masked_fill(Tensor([6338060, 60, 6],"int32"), Tensor([6338060, 60, 6],"bool"), 0, )
paddle.masked_fill(Tensor([9507090, 60, 4],"int32"), Tensor([9507090, 60, 4],"bool"), 0, )
paddle.masked_scatter(Tensor([120],"float32"), Tensor([300, 120],"bool"), Tensor([300, 7605672],"float32"), )
paddle.masked_scatter(Tensor([120],"float32"), Tensor([300, 120],"bool"), Tensor([7605672, 300],"float32"), )
paddle.masked_scatter(Tensor([168],"float32"), Tensor([168],"bool"), Tensor([300, 7605672],"float32"), )
paddle.masked_scatter(Tensor([168],"float32"), Tensor([168],"bool"), Tensor([7605672, 300],"float32"), )
paddle.masked_scatter(Tensor([3, 3],"float32"), Tensor([1, 3],"bool"), Tensor([300, 7605672],"float32"), )
paddle.masked_scatter(Tensor([3, 3],"float32"), Tensor([1, 3],"bool"), Tensor([7605672, 300],"float32"), )
paddle.masked_scatter(Tensor([3, 40],"float32"), Tensor([3, 1],"bool"), Tensor([300, 7605672],"float32"), )
paddle.masked_scatter(Tensor([3, 40],"float32"), Tensor([3, 1],"bool"), Tensor([7605672, 300],"float32"), )
paddle.masked_scatter(Tensor([30, 3],"float32"), Tensor([30, 1],"bool"), Tensor([30, 76056713],"float32"), )
paddle.masked_scatter(Tensor([30, 3],"float32"), Tensor([30, 1],"bool"), Tensor([76056713, 30],"float32"), )
paddle.masked_scatter(Tensor([300, 40],"float32"), Tensor([40],"bool"), Tensor([300, 7605672],"float32"), )
paddle.masked_scatter(Tensor([300, 40],"float32"), Tensor([40],"bool"), Tensor([7605672, 300],"float32"), )
paddle.masked_scatter(Tensor([50, 3],"float32"), Tensor([50, 3],"bool"), Tensor([300, 7605672],"float32"), )
paddle.masked_scatter(Tensor([50, 3],"float32"), Tensor([50, 3],"bool"), Tensor([7605672, 300],"float32"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([300, 7605672],"float32"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([7605672, 300],"float32"), )
paddle.masked_select(Tensor([1, 1],"float32"), Tensor([1, 2281701379],"bool"), )
paddle.masked_select(Tensor([1, 1],"float32"), Tensor([2281701379, 1],"bool"), )
paddle.masked_select(Tensor([1, 21504],"float32"), Tensor([106106, 21504],"bool"), )
paddle.masked_select(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"bool"), )
paddle.masked_select(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"bool"), )
paddle.masked_select(Tensor([1, 24276],"float32"), Tensor([93991, 24276],"bool"), )
paddle.masked_select(Tensor([1, 27216],"float32"), Tensor([83837, 27216],"bool"), )
paddle.masked_select(Tensor([1, 30324],"float32"), Tensor([75245, 30324],"bool"), )
paddle.masked_select(Tensor([1, 33600],"float32"), Tensor([67908, 33600],"bool"), )
paddle.masked_select(Tensor([1, 37044],"float32"), Tensor([61595, 37044],"bool"), )
paddle.masked_select(Tensor([1, 40656],"float32"), Tensor([56123, 40656],"bool"), )
paddle.masked_select(Tensor([1, 44436],"float32"), Tensor([51349, 44436],"bool"), )
paddle.masked_select(Tensor([1, 48384],"float32"), Tensor([47159, 48384],"bool"), )
paddle.masked_select(Tensor([1, 52500],"float32"), Tensor([43461, 52500],"bool"), )
paddle.masked_select(Tensor([106106, 21504],"float32"), Tensor([1, 21504],"bool"), )
paddle.masked_select(Tensor([106106, 21504],"float32"), Tensor([106106, 21504],"bool"), )
paddle.masked_select(Tensor([2281701379, 1],"float32"), Tensor([1, 1],"bool"), )
paddle.masked_select(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"bool"), )
paddle.masked_select(Tensor([43461, 52500],"float32"), Tensor([1, 52500],"bool"), )
paddle.masked_select(Tensor([43461, 52500],"float32"), Tensor([43461, 52500],"bool"), )
paddle.masked_select(Tensor([47159, 48384],"float32"), Tensor([1, 48384],"bool"), )
paddle.masked_select(Tensor([47159, 48384],"float32"), Tensor([47159, 48384],"bool"), )
paddle.masked_select(Tensor([51349, 44436],"float32"), Tensor([1, 44436],"bool"), )
paddle.masked_select(Tensor([51349, 44436],"float32"), Tensor([51349, 44436],"bool"), )
paddle.masked_select(Tensor([56123, 40656],"float32"), Tensor([1, 40656],"bool"), )
paddle.masked_select(Tensor([56123, 40656],"float32"), Tensor([56123, 40656],"bool"), )
paddle.masked_select(Tensor([61595, 37044],"float32"), Tensor([1, 37044],"bool"), )
paddle.masked_select(Tensor([61595, 37044],"float32"), Tensor([61595, 37044],"bool"), )
paddle.masked_select(Tensor([67908, 33600],"float32"), Tensor([1, 33600],"bool"), )
paddle.masked_select(Tensor([67908, 33600],"float32"), Tensor([67908, 33600],"bool"), )
paddle.masked_select(Tensor([75245, 30324],"float32"), Tensor([1, 30324],"bool"), )
paddle.masked_select(Tensor([75245, 30324],"float32"), Tensor([75245, 30324],"bool"), )
paddle.masked_select(Tensor([83837, 27216],"float32"), Tensor([1, 27216],"bool"), )
paddle.masked_select(Tensor([83837, 27216],"float32"), Tensor([83837, 27216],"bool"), )
paddle.masked_select(Tensor([93991, 24276],"float32"), Tensor([1, 24276],"bool"), )
paddle.masked_select(Tensor([93991, 24276],"float32"), Tensor([93991, 24276],"bool"), )
paddle.masked_select(x=Tensor([2, 1140850690],"float32"), mask=Tensor([2, 1140850690],"bool"), )
paddle.masked_select(x=Tensor([2, 1140850690],"int32"), mask=Tensor([2, 1140850690],"bool"), )
paddle.masked_select(x=Tensor([760567127, 3],"float32"), mask=Tensor([760567127, 3],"bool"), )
paddle.masked_select(x=Tensor([760567127, 3],"int32"), mask=Tensor([760567127, 3],"bool"), )
paddle.matmul(Tensor([1, 1, 1, 23],"float32"), Tensor([1, 1, 23, 99204408],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 23],"float32"), Tensor([1, 3100138, 23, 32],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 23],"float32"), Tensor([3100138, 1, 23, 32],"float32"), )
paddle.matmul(Tensor([1, 1, 1024],"float32"), Tensor([2228225, 1024],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 1, 32],"float32"), Tensor([32, 71303169],"float32"), transpose_y=False, )
paddle.matmul(Tensor([1, 1, 99204408, 23],"float32"), Tensor([1, 1, 23, 32],"float32"), )
paddle.matmul(Tensor([1, 100, 100],"float32"), Tensor([1, 100, 22817014],"float32"), )
paddle.matmul(Tensor([1, 100, 32],"float32"), Tensor([32, 71303169],"float32"), )
paddle.matmul(Tensor([1, 10],"float32"), Tensor([10, 228170138],"float32"), )
paddle.matmul(Tensor([1, 22817014, 100],"float32"), Tensor([1, 100, 10],"float32"), )
paddle.matmul(Tensor([1, 285212673, 1, 8],"float32"), Tensor([1, 285212673, 1, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 2],"float32"), Tensor([1140850690, 2],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 3, 126761188, 6],"float32"), Tensor([6, 8],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 4],"float32"), Tensor([1, 3, 2, 4, 95070891],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 4],"float32"), Tensor([23767723, 3, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 95070891, 4],"float32"), Tensor([1, 3, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 38028357, 5, 4],"float32"), Tensor([1, 3, 38028357, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 5, 6],"float32"), Tensor([6, 380283564],"float32"), )
paddle.matmul(Tensor([1, 4, 1, 570425345],"float32"), Tensor([1, 4, 1, 570425345],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 8],"float32"), Tensor([1, 4, 71303169, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 8],"float32"), Tensor([71303169, 4, 1, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 71303169, 8],"float32"), Tensor([1, 4, 1, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 57042535, 2, 5, 4],"float32"), Tensor([1, 57042535, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 71303169, 32],"float32"), Tensor([32, 10],"float32"), )
paddle.matmul(Tensor([1, 71303169, 32],"float32"), Tensor([32, 200],"float32"), transpose_y=False, )
paddle.matmul(Tensor([1, 76056713, 5, 6],"float32"), Tensor([6, 8],"float32"), )
paddle.matmul(Tensor([1140850690, 2],"float32"), Tensor([12, 2],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1140850690, 2],"float32"), y=Tensor([2, 10],"float32"), )
paddle.matmul(Tensor([12, 32],"float32"), Tensor([12, 190141782],"float32"), transpose_x=True, )
paddle.matmul(Tensor([126761188, 18],"float32"), Tensor([18],"float32"), )
paddle.matmul(Tensor([13, 1371215, 128],"float32"), Tensor([13, 7, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 2, 16, 342804, 16],"float32"), Tensor([13, 2, 16, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 2, 16, 4, 16],"float32"), Tensor([13, 2, 16, 342804, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 7, 128],"float32"), Tensor([13, 1371215, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 7, 25073642],"float32"), Tensor([13, 7, 25073642],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13927, 10, 64, 64, 2, 2],"float32"), Tensor([13927, 10, 64, 64, 2, 1],"float32"), )
paddle.matmul(Tensor([16, 10, 55706, 64, 2, 2],"float32"), Tensor([16, 10, 55706, 64, 2, 1],"float32"), )
paddle.matmul(Tensor([16, 10, 64, 55706, 2, 2],"float32"), Tensor([16, 10, 64, 55706, 2, 1],"float32"), )
paddle.matmul(Tensor([16, 10, 64, 64, 1741, 2],"float32"), Tensor([16, 10, 64, 64, 2, 1],"float32"), )
paddle.matmul(Tensor([16, 10, 64, 64, 2, 2],"float32"), Tensor([16, 10, 64, 64, 2, 1741],"float32"), )
paddle.matmul(Tensor([16, 16, 128, 131073],"float16"), Tensor([16, 16, 128, 131073],"float16"), False, True, )
paddle.matmul(Tensor([16, 8705, 64, 64, 2, 2],"float32"), Tensor([16, 8705, 64, 64, 2, 1],"float32"), )
paddle.matmul(Tensor([18, 126761188],"float32"), Tensor([18, 126761188],"float32"), transpose_x=False, transpose_y=True, )
paddle.matmul(Tensor([18, 6],"float32"), Tensor([380283564, 6],"float32"), transpose_x=False, transpose_y=True, )
paddle.matmul(Tensor([190141782, 3, 4],"float32"), Tensor([4],"float32"), False, False, )
paddle.matmul(Tensor([19014179, 3, 2, 5, 4],"float32"), Tensor([1, 3, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([19014179, 3, 2, 5, 4],"float32"), Tensor([19014179, 3, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([2, 1, 5, 2],"float32"), Tensor([1, 3, 2, 380283564],"float32"), False, False, )
paddle.matmul(Tensor([2, 114085069, 5, 2],"float32"), Tensor([1, 114085069, 2, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float32"), Tensor([2, 3, 380283564],"float32"), False, False, )
paddle.matmul(Tensor([2, 285212673, 4],"float32"), Tensor([2, 5, 4],"float32"), False, True, )
paddle.matmul(Tensor([2, 285212673, 4],"float32"), Tensor([4],"float32"), False, False, )
paddle.matmul(Tensor([2, 2],"float32"), Tensor([1140850690, 2, 1],"float32"), )
paddle.matmul(Tensor([2, 2],"float32"), Tensor([50000, 2, 22818],"float32"), )
paddle.matmul(Tensor([2, 3, 380283564],"float32"), Tensor([2, 5, 380283564],"float32"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float32"), Tensor([2, 285212673, 4],"float32"), False, True, )
paddle.matmul(Tensor([2, 380283564, 3],"float32"), Tensor([2, 3, 2],"float32"), False, False, )
paddle.matmul(Tensor([2, 380283564, 3],"float32"), Tensor([2, 380283564, 5],"float32"), True, False, )
paddle.matmul(Tensor([2, 4, 285212673],"float32"), Tensor([2, 4, 5],"float32"), True, False, )
paddle.matmul(Tensor([2, 4, 285212673],"float32"), Tensor([2, 5, 4],"float32"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float32"), Tensor([2, 285212673, 4],"float32"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float32"), Tensor([2, 4, 285212673],"float32"), True, False, )
paddle.matmul(Tensor([228170138, 10],"float32"), Tensor([10, 20],"float32"), )
paddle.matmul(Tensor([228171, 100, 100],"float32"), Tensor([1, 100, 10],"float32"), )
paddle.matmul(Tensor([228171, 100, 100],"float32"), Tensor([228171, 100, 10],"float32"), )
paddle.matmul(Tensor([25352238, 3, 5, 6],"float32"), Tensor([6, 8],"float32"), )
paddle.matmul(Tensor([2546542, 7, 128],"float32"), Tensor([2546542, 7, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2],"float32"), Tensor([1140850690, 2],"float32"), False, True, )
paddle.matmul(Tensor([2],"float32"), Tensor([2, 1140850690],"float32"), False, False, )
paddle.matmul(Tensor([3, 3],"float16"), Tensor([50000, 2, 3, 14317],"float16"), )
paddle.matmul(Tensor([3, 3],"float16"), Tensor([50000, 28634, 3, 1],"float16"), )
paddle.matmul(Tensor([3, 3],"float16"), Tensor([715827883, 2, 3, 1],"float16"), )
paddle.matmul(Tensor([3, 3],"float32"), Tensor([3, 760567127],"float32"), False, False, )
paddle.matmul(Tensor([380283564, 2, 3],"float32"), Tensor([380283564, 3, 2],"float32"), False, False, )
paddle.matmul(Tensor([380283564, 6],"float32"), Tensor([18, 6],"float32"), transpose_x=False, transpose_y=True, )
paddle.matmul(Tensor([71303169, 1, 32],"float32"), Tensor([32, 200],"float32"), transpose_y=False, )
paddle.matmul(Tensor([71303169, 4, 1, 8],"float32"), Tensor([1, 4, 1, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([71303169, 4, 1, 8],"float32"), Tensor([71303169, 4, 1, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([713032, 100, 32],"float32"), Tensor([32, 10],"float32"), )
paddle.matmul(Tensor([760567127, 3],"float32"), Tensor([3, 3],"float32"), False, False, )
paddle.matmul(x=Tensor([1, 12, 2970966, 64],"float32"), y=Tensor([1, 12, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 12, 77, 2469374],"float32"), y=Tensor([1, 12, 77, 2469374],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 12, 77, 64],"float32"), y=Tensor([1, 12, 2970966, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 12, 77, 64],"float32"), y=Tensor([38584, 12, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 463008, 77, 64],"float32"), y=Tensor([1, 463008, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([10, 16],"float32"), y=Tensor([142606337, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([10, 214748365, 2],"float16"), y=Tensor([10, 2, 5],"float16"), )
paddle.matmul(x=Tensor([10, 228170138],"float32"), y=Tensor([10, 228170138],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([10, 42949673, 5, 2],"float16"), y=Tensor([1, 42949673, 2, 5],"float16"), )
paddle.matmul(x=Tensor([10, 5, 2],"float16"), y=Tensor([10, 2, 214748365],"float16"), )
paddle.matmul(x=Tensor([142606337, 16],"float32"), y=Tensor([10, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([17825793, 8, 16],"float32"), y=Tensor([17825793, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 71303169, 16],"float32"), y=Tensor([2, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 8, 142606337],"float32"), y=Tensor([2, 8, 142606337],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 8, 16],"float32"), y=Tensor([2, 71303169, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([38584, 12, 77, 64],"float32"), y=Tensor([1, 12, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([38584, 12, 77, 64],"float32"), y=Tensor([38584, 12, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([429496730, 5, 2],"float16"), y=Tensor([429496730, 2, 5],"float16"), )
paddle.matmul(x=Tensor([760567127, 3],"float32"), y=Tensor([3, 1],"float32"), )
paddle.matmul(x=Tensor([858993460, 5],"float16"), y=Tensor([5],"float16"), )
paddle.matrix_transpose(Tensor([190141782, 3, 4],"float32"), )
paddle.matrix_transpose(Tensor([190141782, 3, 4],"int32"), )
paddle.matrix_transpose(Tensor([190141782, 3, 4],"int64"), )
paddle.matrix_transpose(Tensor([2, 285212673, 4],"float32"), )
paddle.matrix_transpose(Tensor([2, 285212673, 4],"int32"), )
paddle.matrix_transpose(Tensor([2, 285212673, 4],"int64"), )
paddle.matrix_transpose(Tensor([2, 3, 380283564],"float32"), )
paddle.matrix_transpose(Tensor([2, 3, 380283564],"int32"), )
paddle.matrix_transpose(Tensor([2, 3, 380283564],"int64"), )
paddle.matrix_transpose(Tensor([2, 3, 715827883],"float16"), )
paddle.matrix_transpose(Tensor([2, 3, 715827883],"int16"), )
paddle.matrix_transpose(Tensor([2, 3, 715827883],"int8"), )
paddle.matrix_transpose(Tensor([2, 536870913, 4],"float16"), )
paddle.matrix_transpose(Tensor([2, 536870913, 4],"int16"), )
paddle.matrix_transpose(Tensor([2, 536870913, 4],"int8"), )
paddle.matrix_transpose(Tensor([357913942, 3, 4],"float16"), )
paddle.matrix_transpose(Tensor([357913942, 3, 4],"int16"), )
paddle.matrix_transpose(Tensor([357913942, 3, 4],"int8"), )
paddle.max(Tensor([1, 1, 2281701379],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([1, 1, 32, 71303169],"float32"), )
paddle.max(Tensor([1, 1, 71303169, 32],"float32"), )
paddle.max(Tensor([1, 11883862, 192],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([1, 15845149, 12, 12],"float32"), )
paddle.max(Tensor([1, 16, 11883862, 12],"float32"), )
paddle.max(Tensor([1, 16, 12, 11883862],"float32"), )
paddle.max(Tensor([1, 2228225, 32, 32],"float32"), )
paddle.max(Tensor([1, 2281701379],"float32"), )
paddle.max(Tensor([1, 2281701379],"int32"), )
paddle.max(Tensor([1, 257, 8878216],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([1, 285212673, 8],"float32"), axis=list[2,], )
paddle.max(Tensor([1, 32, 71303169],"float32"), axis=list[2,], )
paddle.max(Tensor([1, 6, 11883862, 32],"float32"), )
paddle.max(Tensor([1, 6, 16, 23767723],"float32"), )
paddle.max(Tensor([1, 6, 23767723, 16],"float32"), )
paddle.max(Tensor([1, 6, 32, 11883862],"float32"), )
paddle.max(Tensor([1, 8912897, 16, 16],"float32"), )
paddle.max(Tensor([10, 10, 4772186, 9],"float16"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.max(Tensor([10, 10, 9, 4772186],"float16"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.max(Tensor([10, 3802836, 60],"int32"), axis=1, )
paddle.max(Tensor([10, 4, 57042535],"int32"), axis=1, )
paddle.max(Tensor([10, 429496730],"float16"), axis=-1, keepdim=True, )
paddle.max(Tensor([10, 5, 9, 9544372],"float16"), Tensor([2],"int64"), )
paddle.max(Tensor([10, 5, 9544372, 9],"float16"), Tensor([2],"int64"), )
paddle.max(Tensor([10, 5302429, 9, 9],"float16"), Tensor([2],"int64"), )
paddle.max(Tensor([10, 5302429, 9, 9],"float16"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.max(Tensor([10186167, 7, 32],"float32"), )
paddle.max(Tensor([10604858, 5, 9, 9],"float16"), Tensor([2],"int64"), )
paddle.max(Tensor([1073741825, 4],"float16"), 0, False, )
paddle.max(Tensor([1073741825, 4],"float16"), 1, True, )
paddle.max(Tensor([1073741825, 4],"float16"), None, False, )
paddle.max(Tensor([1114113, 32, 64],"float32"), axis=0, )
paddle.max(Tensor([1140850690, 1, 2],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([1140850690, 2],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([1140850690, 2],"float32"), axis=tuple(-2,-1,), )
paddle.max(Tensor([11883862, 1, 192],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([11883862, 192],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([120, 19014179],"float32"), )
paddle.max(Tensor([128, 1, 17825793],"float32"), axis=2, )
paddle.max(Tensor([128, 139265, 128],"float32"), axis=2, )
paddle.max(Tensor([128, 17825793],"float32"), axis=1, keepdim=True, )
paddle.max(Tensor([128, 17825793],"int32"), axis=0, )
paddle.max(Tensor([13, 175515491],"float32"), 1, )
paddle.max(Tensor([13, 3, 58505164],"float32"), 2, )
paddle.max(Tensor([13, 4, 43878873],"float32"), )
paddle.max(Tensor([13, 58505164, 3],"float32"), 2, )
paddle.max(Tensor([13, 87757746, 2],"float32"), )
paddle.max(Tensor([14, 10186167, 16],"float32"), )
paddle.max(Tensor([14, 1646250, 99],"float32"), )
paddle.max(Tensor([14, 40744668, 4],"float32"), )
paddle.max(Tensor([14, 5093084, 32],"float32"), )
paddle.max(Tensor([14, 64, 2546542],"float32"), )
paddle.max(Tensor([14, 7, 23282668],"float32"), )
paddle.max(Tensor([1485483, 6, 16, 16],"float32"), )
paddle.max(Tensor([15211343, 6, 5, 5],"float32"), )
paddle.max(Tensor([16, 2228225, 64],"float32"), axis=0, )
paddle.max(Tensor([16, 32, 4456449],"float32"), axis=0, )
paddle.max(Tensor([16, 5704254, 5, 5],"float32"), )
paddle.max(Tensor([16, 6, 4753545, 5],"float32"), )
paddle.max(Tensor([16, 6, 5, 4753545],"float32"), )
paddle.max(Tensor([17825793, 1, 128],"float32"), axis=2, )
paddle.max(Tensor([17825793, 128],"float32"), axis=-1, )
paddle.max(Tensor([17825793, 128],"int32"), axis=0, )
paddle.max(Tensor([18400818, 124],"float32"), axis=1, keepdim=True, )
paddle.max(Tensor([185686, 128, 96],"float32"), axis=list[0,1,], )
paddle.max(Tensor([185686, 128, 96],"float32"), axis=list[2,], )
paddle.max(Tensor([185686, 128, 96],"int32"), axis=list[2,], keepdim=False, )
paddle.max(Tensor([19014179, 120],"float32"), )
paddle.max(Tensor([192, 11883862],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([192, 3, 14, 282950],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([192, 3, 282950, 14],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([192, 60632, 14, 14],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([2, 1, 1140850690],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([2, 1140850690],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([2, 1140850690],"float32"), axis=0, )
paddle.max(Tensor([2, 1140850690],"float32"), axis=tuple(-2,-1,), )
paddle.max(Tensor([2, 1140850690],"int32"), axis=0, )
paddle.max(Tensor([2, 19014179, 60],"int32"), axis=1, )
paddle.max(Tensor([2, 2, 2, 2, 2, 2, 35651585],"float32"), axis=-1, )
paddle.max(Tensor([2, 2, 2, 2, 2, 2, 35651585],"float32"), axis=6, )
paddle.max(Tensor([2, 2, 2, 2, 2, 35651585, 2],"float32"), axis=-1, )
paddle.max(Tensor([2, 2, 2, 2, 2, 35651585, 2],"float32"), axis=6, )
paddle.max(Tensor([2, 2, 2, 2, 35651585, 2, 2],"float32"), axis=-1, )
paddle.max(Tensor([2, 2, 2, 2, 35651585, 2, 2],"float32"), axis=6, )
paddle.max(Tensor([2, 2, 2, 35651585, 2, 2, 2],"float32"), axis=-1, )
paddle.max(Tensor([2, 2, 2, 35651585, 2, 2, 2],"float32"), axis=6, )
paddle.max(Tensor([2, 2, 35651585, 2, 2, 2, 2],"float32"), axis=-1, )
paddle.max(Tensor([2, 2, 35651585, 2, 2, 2, 2],"float32"), axis=6, )
paddle.max(Tensor([2, 2, 570425345],"int32"), tuple(0,1,), False, )
paddle.max(Tensor([2, 2147483649],"float16"), 0, False, )
paddle.max(Tensor([2, 2147483649],"float16"), 1, True, )
paddle.max(Tensor([2, 2147483649],"float16"), None, False, )
paddle.max(Tensor([2, 35651585, 2, 2, 2, 2, 2],"float32"), axis=-1, )
paddle.max(Tensor([2, 35651585, 2, 2, 2, 2, 2],"float32"), axis=6, )
paddle.max(Tensor([2, 4, 285212673],"int32"), axis=1, )
paddle.max(Tensor([2, 570425345, 2],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([2, 570425345, 2],"int32"), tuple(0,1,), False, )
paddle.max(Tensor([20, 1901418, 60],"int32"), axis=1, )
paddle.max(Tensor([20, 4, 28521268],"int32"), axis=1, )
paddle.max(Tensor([214748365, 20],"float16"), axis=-1, keepdim=True, )
paddle.max(Tensor([2177, 1024, 1024],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([2228225, 1, 32, 32],"float32"), )
paddle.max(Tensor([2228225, 1024],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([2228225, 64, 16],"float32"), )
paddle.max(Tensor([2281701379, 1],"int32"), )
paddle.max(Tensor([2281701379],"float32"), )
paddle.max(Tensor([2281701379],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([2281701379],"float32"), axis=0, )
paddle.max(Tensor([2281701379],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([2281701379],"float32"), axis=list[0,], keepdim=False, )
paddle.max(Tensor([2281701379],"float32"), keepdim=True, )
paddle.max(Tensor([2281701379],"int64"), )
paddle.max(Tensor([228170138, 2, 5],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([253522376, 3, 3],"float32"), 2, )
paddle.max(Tensor([25466, 50, 7, 256],"float32"), axis=1, )
paddle.max(Tensor([27163112, 84],"float32"), )
paddle.max(Tensor([278529, 64, 128],"float32"), axis=0, )
paddle.max(Tensor([285212673, 4, 2],"float32"), )
paddle.max(Tensor([285213, 200, 40],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.max(Tensor([285213, 200, 40],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.max(Tensor([285213, 200, 40],"float32"), axis=list[0,1,], keepdim=False, )
paddle.max(Tensor([285213, 200, 40],"float32"), keepdim=False, )
paddle.max(Tensor([285213, 200, 40],"float32"), keepdim=True, )
paddle.max(Tensor([3, 128, 5941931],"int32"), axis=list[2,], keepdim=False, )
paddle.max(Tensor([3, 1431655766],"float16"), axis=-1, keepdim=True, )
paddle.max(Tensor([3, 152113426, 5],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([3, 2, 380283564],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([3, 760567127],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([3, 760567127],"float32"), axis=None, )
paddle.max(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.max(Tensor([3, 7922575, 96],"int32"), axis=list[2,], keepdim=False, )
paddle.max(Tensor([30, 1267612, 60],"int32"), axis=1, )
paddle.max(Tensor([30, 1901418, 40],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.max(Tensor([30, 1901418, 40],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.max(Tensor([30, 1901418, 40],"float32"), axis=list[0,1,], keepdim=False, )
paddle.max(Tensor([30, 1901418, 40],"float32"), keepdim=False, )
paddle.max(Tensor([30, 1901418, 40],"float32"), keepdim=True, )
paddle.max(Tensor([30, 200, 380284],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.max(Tensor([30, 200, 380284],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.max(Tensor([30, 200, 380284],"float32"), axis=list[0,1,], keepdim=False, )
paddle.max(Tensor([30, 200, 380284],"float32"), keepdim=False, )
paddle.max(Tensor([30, 200, 380284],"float32"), keepdim=True, )
paddle.max(Tensor([30, 4, 19014179],"int32"), axis=1, )
paddle.max(Tensor([32, 32, 2228225],"float32"), axis=-1, )
paddle.max(Tensor([32, 557057, 128],"float32"), axis=-1, )
paddle.max(Tensor([32, 557057, 128],"float32"), axis=0, )
paddle.max(Tensor([32, 64, 1114113],"float32"), axis=0, )
paddle.max(Tensor([32, 71303169],"float32"), axis=-1, )
paddle.max(Tensor([3292499, 7, 99],"float32"), )
paddle.max(Tensor([35651585, 2, 2, 2, 2, 2, 2],"float32"), axis=-1, )
paddle.max(Tensor([35651585, 2, 2, 2, 2, 2, 2],"float32"), axis=6, )
paddle.max(Tensor([371371, 6, 32, 32],"float32"), )
paddle.max(Tensor([3880445, 3, 14, 14],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([3961288, 576],"float32"), )
paddle.max(Tensor([4, 4, 142606337],"int32"), axis=1, )
paddle.max(Tensor([4, 9507090, 60],"int32"), axis=1, )
paddle.max(Tensor([416, 3061, 7, 256],"float32"), axis=1, )
paddle.max(Tensor([416, 50, 429, 256],"float32"), axis=1, )
paddle.max(Tensor([416, 50, 7, 15672],"float32"), axis=1, )
paddle.max(Tensor([4294967297],"float16"), )
paddle.max(Tensor([4294967297],"float16"), axis=-1, keepdim=True, )
paddle.max(Tensor([4294967297],"float16"), axis=0, )
paddle.max(Tensor([4456449, 16, 32],"float32"), axis=list[0,1,2,], keepdim=False, )
paddle.max(Tensor([4456449, 512],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([4456449, 512],"int32"), axis=0, )
paddle.max(Tensor([456340276, 5],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([456340276, 5],"float32"), axis=None, )
paddle.max(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.max(Tensor([46241, 257, 192],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([5, 858993460],"float16"), axis=1, )
paddle.max(Tensor([512, 2487, 7, 256],"float32"), axis=1, )
paddle.max(Tensor([512, 4456449],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([512, 50, 349, 256],"float32"), axis=1, )
paddle.max(Tensor([512, 50, 7, 12733],"float32"), axis=1, )
paddle.max(Tensor([52, 24486, 7, 256],"float32"), axis=1, )
paddle.max(Tensor([52, 50, 3429, 256],"float32"), axis=1, )
paddle.max(Tensor([52, 50, 7, 125369],"float32"), axis=1, )
paddle.max(Tensor([5302429, 10, 9, 9],"float16"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.max(Tensor([557057, 32, 128],"float32"), axis=-1, )
paddle.max(Tensor([570425345, 2, 2],"int32"), tuple(0,1,), False, )
paddle.max(Tensor([64, 128, 278529],"float32"), axis=list[0,1,], )
paddle.max(Tensor([64, 128, 278529],"float32"), axis=list[2,], )
paddle.max(Tensor([64, 371371, 96],"float32"), axis=list[0,1,], )
paddle.max(Tensor([64, 371371, 96],"float32"), axis=list[2,], )
paddle.max(Tensor([760567127, 3],"float32"), 1, )
paddle.max(Tensor([8, 1024, 278529],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([8, 16, 17825793],"float32"), axis=list[0,1,2,], keepdim=False, )
paddle.max(Tensor([8, 278529, 1024],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([8, 8912897, 32],"float32"), axis=list[0,1,2,], keepdim=False, )
paddle.max(Tensor([858993460, 5],"float16"), axis=-1, keepdim=True, )
paddle.max(Tensor([858993460, 5],"float16"), axis=1, )
paddle.max(Tensor([8912897, 32, 8],"float32"), axis=list[2,], )
paddle.max(Tensor([8912897, 64, 4],"float32"), )
paddle.max(Tensor([9313067, 245],"float32"), axis=0, )
paddle.max(Tensor([9507090, 4, 60],"int32"), axis=1, )
paddle.max(Tensor([990322, 16, 12, 12],"float32"), )
paddle.max(x=Tensor([1140850690, 2],"float32"), axis=list[-2,1,], keepdim=False, )
paddle.max(x=Tensor([2, 1140850690],"float32"), )
paddle.max(x=Tensor([2, 1140850690],"float32"), axis=-2, )
paddle.max(x=Tensor([2, 1140850690],"float32"), axis=0, keepdim=True, )
paddle.max(x=Tensor([2, 1140850690],"float32"), axis=1, )
paddle.max(x=Tensor([2, 1140850690],"float32"), axis=Tensor([1],"int64"), )
paddle.max(x=Tensor([2, 1140850690],"float32"), axis=list[-2,1,], keepdim=False, )
paddle.max(x=Tensor([760567127, 3],"float32"), )
paddle.max(x=Tensor([760567127, 3],"float32"), axis=-2, )
paddle.max(x=Tensor([760567127, 3],"float32"), axis=0, keepdim=True, )
paddle.max(x=Tensor([760567127, 3],"float32"), axis=1, )
paddle.max(x=Tensor([760567127, 3],"float32"), axis=Tensor([1],"int64"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 1, 1140850690, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 110924, 10285, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 30798, 37044, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 317080, 3598, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 33954, 33600, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 37623, 30324, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 41919, 27216, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 46996, 24276, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([110924, 1, 10285, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([30798, 1, 37044, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([317080, 1, 3598, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([33954, 1, 33600, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([37623, 1, 30324, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([41919, 1, 27216, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([46996, 1, 24276, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1140850690, 2],"float32"), Tensor([1, 1, 1140850690, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([1, 1140850690, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([110924, 10285, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([1140850690, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([185505, 6150, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([209716, 5440, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([273914, 4165, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([29709, 38402, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([30953, 36858, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([317080, 3598, 2],"float32"), )
paddle.maximum(Tensor([1, 1140850690, 2],"float32"), Tensor([1, 1140850690, 2],"float32"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([285213, 200, 40],"float32"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([30, 1901418, 40],"float32"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([30, 200, 380284],"float32"), )
paddle.maximum(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.maximum(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.maximum(Tensor([10, 1],"float32"), Tensor([10, 228170138],"float32"), )
paddle.maximum(Tensor([10, 228170138],"float32"), Tensor([10, 1],"float32"), )
paddle.maximum(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.maximum(Tensor([100, 1],"float32"), Tensor([100, 22817014],"float32"), )
paddle.maximum(Tensor([100, 22817014],"float32"), Tensor([100, 1],"float32"), )
paddle.maximum(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), )
paddle.maximum(Tensor([100, 22817014],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([1000, 2281702],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([1001, 1],"float32"), Tensor([1001, 2279422],"float32"), )
paddle.maximum(Tensor([1001, 2279422],"float32"), Tensor([1001, 1],"float32"), )
paddle.maximum(Tensor([1001, 2279422],"float32"), Tensor([1001, 2279422],"float32"), )
paddle.maximum(Tensor([1002, 1],"float32"), Tensor([1002, 2277148],"float32"), )
paddle.maximum(Tensor([1002, 2277148],"float32"), Tensor([1002, 1],"float32"), )
paddle.maximum(Tensor([1002, 2277148],"float32"), Tensor([1002, 2277148],"float32"), )
paddle.maximum(Tensor([101, 1],"float32"), Tensor([101, 22591103],"float32"), )
paddle.maximum(Tensor([101, 22591103],"float32"), Tensor([101, 1],"float32"), )
paddle.maximum(Tensor([101, 22591103],"float32"), Tensor([101, 22591103],"float32"), )
paddle.maximum(Tensor([1140850690, 2],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([12, 118839, 40, 40, 1],"float32"), Tensor([12, 118839, 40, 40, 1],"float32"), )
paddle.maximum(Tensor([12, 1901418, 10, 10, 1],"float32"), Tensor([12, 1901418, 10, 10, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.maximum(Tensor([12, 3, 10, 10, 633806],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 10, 10, 633806],"float32"), Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.maximum(Tensor([12, 3, 10, 6338060, 1],"float32"), Tensor([12, 3, 10, 6338060, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 1584515, 40, 1],"float32"), Tensor([12, 3, 1584515, 40, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 20, 20, 158452],"float32"), Tensor([12, 3, 20, 20, 158452],"float32"), )
paddle.maximum(Tensor([12, 3, 20, 20, 158452],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 158452],"float32"), )
paddle.maximum(Tensor([12, 3, 20, 3169030, 1],"float32"), Tensor([12, 3, 20, 3169030, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 3169030, 20, 1],"float32"), Tensor([12, 3, 3169030, 20, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 40, 1584515, 1],"float32"), Tensor([12, 3, 40, 1584515, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.maximum(Tensor([12, 3, 40, 40, 39613],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 40, 40, 39613],"float32"), Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.maximum(Tensor([12, 3, 6338060, 10, 1],"float32"), Tensor([12, 3, 6338060, 10, 1],"float32"), )
paddle.maximum(Tensor([12, 475355, 20, 20, 1],"float32"), Tensor([12, 475355, 20, 20, 1],"float32"), )
paddle.maximum(Tensor([126761188, 18],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([142606337, 16],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([152113426, 15],"float32"), Tensor([152113426, 15],"float32"), )
paddle.maximum(Tensor([152113426, 15],"float32"), Tensor([15],"float32"), )
paddle.maximum(Tensor([190141782, 12],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([1901418, 3, 20, 20, 1],"float32"), Tensor([1901418, 3, 20, 20, 1],"float32"), )
paddle.maximum(Tensor([1],"float16"), Tensor([4294967297],"float16"), )
paddle.maximum(Tensor([200, 40],"float32"), Tensor([285213, 200, 40],"float32"), )
paddle.maximum(Tensor([2281701379, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.maximum(Tensor([2281701379, 1],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.maximum(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.maximum(Tensor([228170138, 10],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([40],"float32"), Tensor([285213, 200, 40],"float32"), )
paddle.maximum(Tensor([40],"float32"), Tensor([30, 1901418, 40],"float32"), )
paddle.maximum(Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.maximum(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.maximum(Tensor([475355, 3, 40, 40, 1],"float32"), Tensor([475355, 3, 40, 40, 1],"float32"), )
paddle.maximum(Tensor([7605672, 3, 10, 10, 1],"float32"), Tensor([7605672, 3, 10, 10, 1],"float32"), )
paddle.maximum(x=Tensor([1, 1431655766, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.maximum(x=Tensor([1, 2, 1, 3],"float16"), y=Tensor([1, 1431655766, 3],"float16"), )
paddle.maximum(x=Tensor([1, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.maximum(x=Tensor([1],"float16"), y=Tensor([4294967297],"float16"), )
paddle.maximum(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.maximum(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.maximum(x=Tensor([715827883, 2, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.mean(Tensor([1, 1, 1, 1, 4294967297],"float16"), )
paddle.mean(Tensor([1, 1, 1, 1431655766, 3],"float16"), )
paddle.mean(Tensor([1, 1, 1, 4, 1073741825],"float16"), )
paddle.mean(Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.mean(Tensor([1, 1, 1, 613566757, 7],"float16"), )
paddle.mean(Tensor([1, 1, 142606337, 16],"float32"), )
paddle.mean(Tensor([1, 1, 1431655766, 1, 3],"float16"), )
paddle.mean(Tensor([1, 1, 153391690, 4, 7],"float16"), )
paddle.mean(Tensor([1, 1, 16, 142606337],"float32"), )
paddle.mean(Tensor([1, 1, 16, 268435457],"float16"), )
paddle.mean(Tensor([1, 1, 16, 35651585, 4],"float32"), )
paddle.mean(Tensor([1, 1, 16, 8, 17825793],"float32"), )
paddle.mean(Tensor([1, 1, 17, 26843546, 5],"float32"), )
paddle.mean(Tensor([1, 1, 17, 9, 14913081],"float32"), )
paddle.mean(Tensor([1, 1, 19, 120089547],"float32"), )
paddle.mean(Tensor([1, 1, 2281701379],"float32"), )
paddle.mean(Tensor([1, 1, 253522376, 3, 3],"float32"), )
paddle.mean(Tensor([1, 1, 268435457, 16],"float16"), )
paddle.mean(Tensor([1, 1, 27163112, 84],"float32"), )
paddle.mean(Tensor([1, 1, 276, 8267034],"float32"), )
paddle.mean(Tensor([1, 1, 3, 253522376, 3],"float32"), )
paddle.mean(Tensor([1, 1, 3, 3, 253522376],"float32"), )
paddle.mean(Tensor([1, 1, 3, 760567127],"float32"), )
paddle.mean(Tensor([1, 1, 357913942, 4, 3],"float16"), )
paddle.mean(Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.mean(Tensor([1, 1, 4294967297],"float16"), )
paddle.mean(Tensor([1, 1, 46565335, 49],"float32"), )
paddle.mean(Tensor([1, 1, 50704476, 9, 5],"float32"), )
paddle.mean(Tensor([1, 1, 71303169, 8, 4],"float32"), )
paddle.mean(Tensor([1, 1, 760567127, 3],"float32"), )
paddle.mean(Tensor([1, 100, 2, 2, 2, 5368710],"float16"), )
paddle.mean(Tensor([1, 100, 2, 2, 5368710, 2],"float16"), )
paddle.mean(Tensor([1, 100, 2, 5368710, 2, 2],"float16"), )
paddle.mean(Tensor([1, 100, 5368710, 2, 2, 2],"float16"), )
paddle.mean(Tensor([1, 1073741825, 4],"float16"), )
paddle.mean(Tensor([1, 11930465, 3, 4, 5, 6],"float16"), )
paddle.mean(Tensor([1, 1429638, 19, 84],"float32"), )
paddle.mean(Tensor([1, 1431655766, 1, 1, 3],"float16"), )
paddle.mean(Tensor([1, 1431655766, 3],"float16"), )
paddle.mean(Tensor([1, 153391690, 1, 4, 7],"float16"), )
paddle.mean(Tensor([1, 16777217, 16, 16],"float16"), )
paddle.mean(Tensor([1, 168715, 276, 49],"float32"), )
paddle.mean(Tensor([1, 2, 14913081, 4, 4, 3, 3],"float16"), )
paddle.mean(Tensor([1, 2, 17895698, 4, 5, 6],"float16"), )
paddle.mean(Tensor([1, 2, 2, 2, 2, 268435457],"float16"), )
paddle.mean(Tensor([1, 2, 2, 2, 5368710, 100],"float16"), )
paddle.mean(Tensor([1, 2, 2, 5368710, 2, 100],"float16"), )
paddle.mean(Tensor([1, 2, 3, 19884108, 4, 3, 3],"float16"), )
paddle.mean(Tensor([1, 2, 3, 23860930, 5, 6],"float16"), )
paddle.mean(Tensor([1, 2, 3, 4, 19884108, 3, 3],"float16"), )
paddle.mean(Tensor([1, 2, 3, 4, 29826162, 6],"float16"), )
paddle.mean(Tensor([1, 2, 3, 4, 4, 14913081, 3],"float16"), )
paddle.mean(Tensor([1, 2, 3, 4, 4, 3, 14913081],"float16"), )
paddle.mean(Tensor([1, 2, 3, 4, 5, 35791395],"float16"), )
paddle.mean(Tensor([1, 2, 5368710, 2, 2, 100],"float16"), )
paddle.mean(Tensor([1, 2147483649, 2],"float16"), )
paddle.mean(Tensor([1, 2281701379],"float32"), )
paddle.mean(Tensor([1, 2281701379],"float32"), 1, keepdim=True, )
paddle.mean(Tensor([1, 2281701379],"float32"), name=None, )
paddle.mean(Tensor([1, 22817014, 100],"float32"), )
paddle.mean(Tensor([1, 253522376, 3, 3],"float32"), )
paddle.mean(Tensor([1, 268435457, 2, 2, 2, 2],"float16"), )
paddle.mean(Tensor([1, 28, 81489335],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 285212673, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 2982617, 17, 9, 5],"float32"), )
paddle.mean(Tensor([1, 357913942, 1, 4, 3],"float16"), )
paddle.mean(Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.mean(Tensor([1, 4294967297, 1],"float16"), )
paddle.mean(Tensor([1, 4294967297],"float16"), )
paddle.mean(Tensor([1, 4456449, 16, 8, 4],"float32"), )
paddle.mean(Tensor([1, 5368710, 2, 2, 2, 100],"float16"), )
paddle.mean(Tensor([1, 570425345, 4],"float32"), )
paddle.mean(Tensor([1, 8, 285212673],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 81489335, 28],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 84507459, 3, 3, 3],"float32"), )
paddle.mean(Tensor([1, 8912897, 16, 16],"float32"), )
paddle.mean(Tensor([1, 9942054, 3, 4, 4, 3, 3],"float16"), )
paddle.mean(Tensor([10, 10, 42949673],"float16"), name=None, )
paddle.mean(Tensor([10, 228170138],"float32"), axis=0, )
paddle.mean(Tensor([10, 228170138],"float32"), keepdim=True, )
paddle.mean(Tensor([10, 228170138],"float32"), name=None, )
paddle.mean(Tensor([10, 85899346, 5],"float16"), name=None, )
paddle.mean(Tensor([100, 22817014, 1],"float32"), name=None, )
paddle.mean(Tensor([100, 376, 60684],"float32"), name=None, )
paddle.mean(Tensor([10186167, 7, 32],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([10563433, 24, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([1073741825, 1, 4],"float16"), )
paddle.mean(Tensor([1114113, 2, 16, 4, 16],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([111412, 16, 1280],"float32"), axis=1, )
paddle.mean(Tensor([1118482, 12, 170, 1],"float32"), name=None, )
paddle.mean(Tensor([1140850690, 2],"float32"), )
paddle.mean(Tensor([1140850690, 2],"float32"), name=None, )
paddle.mean(Tensor([11661, 195670],"float32"), name=None, )
paddle.mean(Tensor([11883862, 96, 2],"float32"), axis=-1, )
paddle.mean(Tensor([11883862, 96, 2],"float32"), name=None, )
paddle.mean(Tensor([119304648, 3, 3, 4],"float16"), name=None, )
paddle.mean(Tensor([128, 34817, 512],"float32"), axis=1, )
paddle.mean(Tensor([128, 49, 363792],"float32"), axis=1, )
paddle.mean(Tensor([13, 171402, 16, 4, 16],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 2, 1371215, 4, 16],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 2, 16, 342804, 16],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 2, 16, 4, 1371215],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 5484860, 32],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 7, 25073642],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([139265, 2, 1, 512, 4, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([139265, 8, 2048],"float32"), axis=1, )
paddle.mean(Tensor([14, 212212, 768],"float32"), axis=1, keepdim=True, )
paddle.mean(Tensor([14, 8, 20372334],"float32"), axis=1, keepdim=True, )
paddle.mean(Tensor([142606337, 16],"float32"), axis=0, )
paddle.mean(Tensor([1429638, 1, 19, 84],"float32"), )
paddle.mean(Tensor([1431655766, 1, 1, 1, 3],"float16"), )
paddle.mean(Tensor([1431655766, 1, 3],"float16"), )
paddle.mean(Tensor([1431655766, 3],"float16"), )
paddle.mean(Tensor([1431655766, 3],"float16"), axis=list[0,], )
paddle.mean(Tensor([153391690, 1, 1, 4, 7],"float16"), )
paddle.mean(Tensor([15548, 146753],"float32"), name=None, )
paddle.mean(Tensor([15845149, 16, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 142606337, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 142606337, 1],"float32"), name=None, )
paddle.mean(Tensor([16, 142606337],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([16, 15845149, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 16, 2970966, 3],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 16, 3, 2970966],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 268435457],"float16"), axis=-1, keepdim=True, )
paddle.mean(Tensor([16, 3, 47535446],"float32"), axis=1, )
paddle.mean(Tensor([16, 32, 1, 4456449],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 32, 4456449, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 69633, 2048],"float32"), axis=1, )
paddle.mean(Tensor([16, 71303169, 2],"float32"), axis=-1, )
paddle.mean(Tensor([16, 71303169, 2],"float32"), name=None, )
paddle.mean(Tensor([16, 8, 1, 17825793],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 8, 17825793, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 8, 17825793],"float32"), axis=1, )
paddle.mean(Tensor([16, 96, 1485483],"float32"), axis=-1, )
paddle.mean(Tensor([16, 96, 1485483],"float32"), name=None, )
paddle.mean(Tensor([16777217, 1, 16, 16],"float16"), )
paddle.mean(Tensor([16777217, 256],"float16"), axis=-1, keepdim=True, )
paddle.mean(Tensor([168715, 1, 276, 49],"float32"), )
paddle.mean(Tensor([17, 134217729, 1],"float32"), name=None, )
paddle.mean(Tensor([17, 376, 356963],"float32"), name=None, )
paddle.mean(Tensor([190141782, 12],"float32"), axis=list[0,], )
paddle.mean(Tensor([192, 11883862, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([192, 48, 1, 247581],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([192, 48, 247581, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([192, 96, 1, 123791],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([192, 96, 123791, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([2, 1, 142606337, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2, 1, 8, 142606337],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2, 10, 114085069],"float32"), name=None, )
paddle.mean(Tensor([2, 114085069, 10],"float32"), name=None, )
paddle.mean(Tensor([2, 1140850690],"float32"), axis=0, )
paddle.mean(Tensor([2, 1140850690],"float32"), axis=list[0,], )
paddle.mean(Tensor([2, 1140850690],"float32"), name=None, )
paddle.mean(Tensor([2, 11883862, 3, 4, 4, 2],"float32"), )
paddle.mean(Tensor([2, 1242757, 3, 4, 3, 4, 3, 4],"float16"), )
paddle.mean(Tensor([2, 1398102, 4, 4, 2, 3, 4, 4],"float16"), )
paddle.mean(Tensor([2, 14, 20372334, 1, 1, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 1, 2, 1, 1, 8148934],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 1, 2, 1, 4074467, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 1, 2, 4074467, 1, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 1, 8148934, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 4074467, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 4074467, 1, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 16, 71303169],"float32"), axis=1, )
paddle.mean(Tensor([2, 17825793, 8, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2, 23860930, 3, 3, 2, 5],"float16"), )
paddle.mean(Tensor([2, 3, 1242757, 4, 3, 4, 3, 4],"float16"), )
paddle.mean(Tensor([2, 3, 1864136, 4, 2, 3, 4, 4],"float16"), )
paddle.mean(Tensor([2, 3, 3, 1657009, 3, 4, 3, 4],"float16"), )
paddle.mean(Tensor([2, 3, 3, 4, 1242757, 4, 3, 4],"float16"), )
paddle.mean(Tensor([2, 3, 3, 4, 3, 1657009, 3, 4],"float16"), )
paddle.mean(Tensor([2, 3, 3, 4, 3, 4, 1242757, 4],"float16"), )
paddle.mean(Tensor([2, 3, 3, 4, 3, 4, 3, 1657009],"float16"), )
paddle.mean(Tensor([2, 3, 4, 1864136, 2, 3, 4, 4],"float16"), )
paddle.mean(Tensor([2, 3, 4, 4, 2, 1398102, 4, 4],"float16"), )
paddle.mean(Tensor([2, 3, 4, 4, 2, 3, 1864136, 4],"float16"), )
paddle.mean(Tensor([2, 3, 4, 4, 2, 3, 4, 1864136],"float16"), )
paddle.mean(Tensor([2, 3, 4, 4, 3, 4, 4, 932068],"float16"), )
paddle.mean(Tensor([2, 3, 4, 4, 3, 4, 932068, 4],"float16"), )
paddle.mean(Tensor([2, 3, 4, 4, 3, 932068, 4, 4],"float16"), )
paddle.mean(Tensor([2, 3, 4, 4, 699051, 4, 4, 4],"float16"), )
paddle.mean(Tensor([2, 3, 4, 4, 932068, 3, 4, 4],"float16"), )
paddle.mean(Tensor([2, 3, 4, 932068, 3, 4, 4, 4],"float16"), )
paddle.mean(Tensor([2, 3, 932068, 4, 3, 4, 4, 4],"float16"), )
paddle.mean(Tensor([2, 300, 3802836],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([2, 5, 14316558, 3, 2, 5],"float16"), )
paddle.mean(Tensor([2, 5, 3, 1, 1, 1, 4, 35791395],"float16"), )
paddle.mean(Tensor([2, 5, 3, 1, 1, 1, 71582789, 2],"float16"), )
paddle.mean(Tensor([2, 5, 3, 1, 1, 17895698, 4, 2],"float16"), )
paddle.mean(Tensor([2, 5, 3, 1, 17895698, 1, 4, 2],"float16"), )
paddle.mean(Tensor([2, 5, 3, 14316558, 2, 5],"float16"), )
paddle.mean(Tensor([2, 5, 3, 17895698, 1, 1, 4, 2],"float16"), )
paddle.mean(Tensor([2, 5, 3, 3, 2, 23860930],"float16"), )
paddle.mean(Tensor([2, 5, 3, 3, 9544372, 5],"float16"), )
paddle.mean(Tensor([2, 5, 53687092, 1, 1, 1, 4, 2],"float16"), )
paddle.mean(Tensor([2, 557057, 2048],"float32"), axis=1, )
paddle.mean(Tensor([2, 557057, 2048],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([2, 570425345, 2],"float32"), axis=-1, )
paddle.mean(Tensor([2, 57042535, 5, 1, 1, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 6, 3, 4, 4, 3961288],"float32"), )
paddle.mean(Tensor([2, 6, 3, 4, 7922575, 2],"float32"), )
paddle.mean(Tensor([2, 6, 3, 7922575, 4, 2],"float32"), )
paddle.mean(Tensor([2, 6, 5941931, 4, 4, 2],"float32"), )
paddle.mean(Tensor([2, 699051, 4, 4, 3, 4, 4, 4],"float16"), )
paddle.mean(Tensor([2, 8, 142606337],"float32"), axis=1, )
paddle.mean(Tensor([2, 891290, 1280],"float32"), axis=1, )
paddle.mean(Tensor([2, 89478486, 3, 1, 1, 1, 4, 2],"float16"), )
paddle.mean(Tensor([2, 96, 11883862],"float32"), axis=-1, )
paddle.mean(Tensor([20, 114085069],"float32"), axis=0, )
paddle.mean(Tensor([2147483649, 1, 2],"float16"), )
paddle.mean(Tensor([2147483649, 2],"float16"), )
paddle.mean(Tensor([2147483649, 2],"float16"), axis=1, )
paddle.mean(Tensor([222823, 8, 1280],"float32"), axis=1, )
paddle.mean(Tensor([2281701379, 1],"float32"), )
paddle.mean(Tensor([2281701379, 1],"float32"), name=None, )
paddle.mean(Tensor([2281701379],"float32"), )
paddle.mean(Tensor([2281701379],"float32"), axis=0, )
paddle.mean(Tensor([2281701379],"float32"), name=None, )
paddle.mean(Tensor([228170138, 10],"float32"), axis=-1, )
paddle.mean(Tensor([228170138, 10],"float32"), keepdim=True, )
paddle.mean(Tensor([228170138, 10],"float32"), name=None, )
paddle.mean(Tensor([22817014, 1, 100],"float32"), )
paddle.mean(Tensor([22817014, 10, 10],"float32"), name=None, )
paddle.mean(Tensor([23767723, 96, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([23767723, 96, 1],"float32"), name=None, )
paddle.mean(Tensor([24, 10563433, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([24, 24, 1320430, 3],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([24, 24, 3, 1320430],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([2476, 960, 960],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([253522376, 1, 3, 3],"float32"), )
paddle.mean(Tensor([253522376, 9],"float32"), axis=1, )
paddle.mean(Tensor([26, 2742430, 32],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([26, 7, 12536821],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([26182, 2, 43574],"float32"), axis=0, )
paddle.mean(Tensor([26182, 5447, 16],"float32"), axis=0, )
paddle.mean(Tensor([26182, 87148],"float32"), axis=0, )
paddle.mean(Tensor([26843546, 2, 2, 4, 5, 2],"float16"), )
paddle.mean(Tensor([2684355, 100, 2, 2, 2, 2],"float16"), )
paddle.mean(Tensor([2684355, 2, 2, 2, 2, 100],"float16"), )
paddle.mean(Tensor([285212673, 8, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([285213, 200, 40],"float32"), axis=-1, keepdim=False, )
paddle.mean(Tensor([285213, 200, 40],"float32"), axis=1, keepdim=False, )
paddle.mean(Tensor([285213, 200, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.mean(Tensor([2910334, 28, 28],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2982617, 1, 17, 9, 5],"float32"), )
paddle.mean(Tensor([3, 17895698, 2, 4, 5, 2],"float16"), )
paddle.mean(Tensor([3, 2, 17895698, 4, 5, 2],"float16"), )
paddle.mean(Tensor([3, 2, 2, 35791395, 5, 2],"float16"), )
paddle.mean(Tensor([3, 2, 2, 4, 44739243, 2],"float16"), )
paddle.mean(Tensor([3, 2, 2, 4, 5, 17895698],"float16"), )
paddle.mean(Tensor([3, 2, 3, 1, 119304648, 1, 2],"float16"), )
paddle.mean(Tensor([3, 2, 3, 1, 5, 1, 47721859],"float16"), )
paddle.mean(Tensor([3, 2, 3, 1, 5, 23860930, 2],"float16"), )
paddle.mean(Tensor([3, 2, 3, 23860930, 5, 1, 2],"float16"), )
paddle.mean(Tensor([3, 2, 71582789, 1, 5, 1, 2],"float16"), )
paddle.mean(Tensor([3, 3, 10, 25352238],"float32"), name=None, )
paddle.mean(Tensor([3, 3, 25352238, 10],"float32"), name=None, )
paddle.mean(Tensor([3, 47721859, 3, 1, 5, 1, 2],"float16"), )
paddle.mean(Tensor([3, 760567127],"float32"), axis=None, )
paddle.mean(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.mean(Tensor([3, 7605672, 10, 10],"float32"), name=None, )
paddle.mean(Tensor([30, 1901418, 40],"float32"), axis=-1, keepdim=False, )
paddle.mean(Tensor([30, 1901418, 40],"float32"), axis=1, keepdim=False, )
paddle.mean(Tensor([30, 1901418, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.mean(Tensor([30, 200, 380284],"float32"), axis=-1, keepdim=False, )
paddle.mean(Tensor([30, 200, 380284],"float32"), axis=1, keepdim=False, )
paddle.mean(Tensor([30, 200, 380284],"float32"), axis=list[0,2,], keepdim=False, )
paddle.mean(Tensor([30, 76056713],"float32"), axis=0, )
paddle.mean(Tensor([34817, 256, 16, 16],"float32"), -2, )
paddle.mean(Tensor([3548, 12, 170, 316],"float32"), name=None, )
paddle.mean(Tensor([3548, 12, 53592, 1],"float32"), name=None, )
paddle.mean(Tensor([3548, 3783, 170, 1],"float32"), name=None, )
paddle.mean(Tensor([35651585, 1, 8, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([35651585, 64],"float32"), axis=-1, )
paddle.mean(Tensor([35651585, 8, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([357913942, 1, 1, 4, 3],"float16"), )
paddle.mean(Tensor([35791395, 120],"float16"), )
paddle.mean(Tensor([35791395, 5, 3, 1, 1, 1, 4, 2],"float16"), )
paddle.mean(Tensor([371371, 3, 2048],"float32"), axis=1, )
paddle.mean(Tensor([371371, 8, 768],"float32"), axis=1, keepdim=True, )
paddle.mean(Tensor([3714, 300, 2048],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([380283564, 6],"float32"), axis=1, )
paddle.mean(Tensor([38028357, 60],"float32"), axis=0, )
paddle.mean(Tensor([3961288, 6, 3, 4, 4, 2],"float32"), )
paddle.mean(Tensor([4, 1073741825],"float16"), axis=list[0,], )
paddle.mean(Tensor([4, 2, 1, 17825793, 4, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 2, 1, 512, 139265, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 2, 1, 512, 4, 139265],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 2, 34817, 512, 4, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 2228225, 16, 16],"float32"), -2, )
paddle.mean(Tensor([4, 256, 139265, 16],"float32"), -2, )
paddle.mean(Tensor([4, 256, 16, 139265],"float32"), -2, )
paddle.mean(Tensor([4, 3, 3, 119304648],"float16"), name=None, )
paddle.mean(Tensor([4, 3, 89478486, 4],"float16"), name=None, )
paddle.mean(Tensor([4, 384, 185686, 8],"float32"), -2, )
paddle.mean(Tensor([4, 384, 8, 185686],"float32"), -2, )
paddle.mean(Tensor([4, 570425345],"float32"), 1, keepdim=True, )
paddle.mean(Tensor([4, 570425345],"float32"), axis=-1, )
paddle.mean(Tensor([4, 570425345],"float32"), axis=0, )
paddle.mean(Tensor([4, 570425345],"float32"), axis=list[0,], )
paddle.mean(Tensor([4, 69633, 1, 512, 4, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 8912897, 8, 8],"float32"), -2, )
paddle.mean(Tensor([4, 89478486, 3, 4],"float16"), name=None, )
paddle.mean(Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.mean(Tensor([4294967297, 1, 1],"float16"), )
paddle.mean(Tensor([4294967297],"float16"), )
paddle.mean(Tensor([4294967297],"float16"), name=None, )
paddle.mean(Tensor([4456449, 1, 16, 8, 4],"float32"), )
paddle.mean(Tensor([4456449, 512],"float32"), 1, keepdim=True, )
paddle.mean(Tensor([456340276, 5],"float32"), axis=None, )
paddle.mean(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.mean(Tensor([466034, 3, 4, 4, 3, 4, 4, 4],"float16"), )
paddle.mean(Tensor([47535446, 48, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([4971027, 2, 3, 4, 4, 3, 3],"float16"), )
paddle.mean(Tensor([5, 858993460],"float16"), axis=1, )
paddle.mean(Tensor([52, 1371215, 32],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([52, 7, 6268411],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([570425345, 1, 4],"float32"), )
paddle.mean(Tensor([5965233, 2, 3, 4, 5, 6],"float16"), )
paddle.mean(Tensor([6, 380283564],"float32"), axis=1, )
paddle.mean(Tensor([6, 380283564],"float32"), axis=list[0,], )
paddle.mean(Tensor([6068355, 376, 1],"float32"), name=None, )
paddle.mean(Tensor([71303169, 2, 16],"float32"), axis=0, )
paddle.mean(Tensor([71303169, 32, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([71582789, 2, 3, 1, 5, 1, 2],"float16"), )
paddle.mean(Tensor([760567127, 3],"float32"), )
paddle.mean(Tensor([760567127, 3],"float32"), axis=list[0,], )
paddle.mean(Tensor([760567127, 3],"float32"), name=None, )
paddle.mean(Tensor([7605672, 3, 10, 10],"float32"), name=None, )
paddle.mean(Tensor([8, 1, 512, 557057],"float32"), name=None, )
paddle.mean(Tensor([8, 1, 557057, 512],"float32"), name=None, )
paddle.mean(Tensor([8, 1089, 512, 512],"float32"), name=None, )
paddle.mean(Tensor([8, 285212673],"float32"), 1, keepdim=True, )
paddle.mean(Tensor([8, 285212673],"float32"), axis=1, )
paddle.mean(Tensor([8, 285212673],"float32"), axis=list[0,], )
paddle.mean(Tensor([8, 297097, 960],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([8, 960, 297097],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([8148934, 14, 5, 1, 1, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([828505, 3, 3, 4, 3, 4, 3, 4],"float16"), )
paddle.mean(Tensor([84507459, 1, 3, 3, 3],"float32"), )
paddle.mean(Tensor([85899346, 10, 5],"float16"), name=None, )
paddle.mean(Tensor([8705, 1, 512, 512],"float32"), name=None, )
paddle.mean(Tensor([8912897, 1, 16, 16],"float32"), )
paddle.mean(Tensor([8912897, 256],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([90948, 49, 512],"float32"), axis=1, )
paddle.mean(Tensor([92843, 384, 8, 8],"float32"), -2, )
paddle.mean(Tensor([932068, 3, 4, 4, 2, 3, 4, 4],"float16"), )
paddle.mean(Tensor([9544372, 5, 3, 3, 2, 5],"float16"), )
paddle.mean(x=Tensor([1, 2281701379],"float32"), )
paddle.mean(x=Tensor([1, 4294967297],"float16"), )
paddle.mean(x=Tensor([1, 4294967297],"float16"), axis=-2, )
paddle.mean(x=Tensor([1, 4294967297],"float16"), axis=-2, keepdim=False, )
paddle.mean(x=Tensor([1, 4294967297],"float16"), axis=1, )
paddle.mean(x=Tensor([1, 4294967297],"float16"), axis=1, keepdim=True, )
paddle.mean(x=Tensor([1073741825, 4],"float16"), )
paddle.mean(x=Tensor([1073741825, 4],"float16"), axis=-2, )
paddle.mean(x=Tensor([1073741825, 4],"float16"), axis=-2, keepdim=False, )
paddle.mean(x=Tensor([1073741825, 4],"float16"), axis=1, )
paddle.mean(x=Tensor([1073741825, 4],"float16"), axis=1, keepdim=True, )
paddle.mean(x=Tensor([11883862, 96, 2],"float32"), axis=-1, )
paddle.mean(x=Tensor([11883862, 96, 2],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([13, 175515491, 1],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([13, 96, 1828287],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([1431655766, 1, 3],"float16"), axis=Tensor([2],"int64"), )
paddle.mean(x=Tensor([1431655766, 1, 3],"float16"), axis=list[0,1,2,], )
paddle.mean(x=Tensor([1431655766, 1, 3],"float16"), axis=list[0,1,2,], keepdim=False, )
paddle.mean(x=Tensor([1431655766, 1, 3],"float16"), axis=list[0,1,], )
paddle.mean(x=Tensor([1431655766, 1, 3],"float16"), axis=list[0,2,], keepdim=True, )
paddle.mean(x=Tensor([1431655766, 1, 3],"float16"), axis=tuple(0,1,2,), keepdim=False, )
paddle.mean(x=Tensor([1431655766, 1, 3],"float16"), axis=tuple(0,2,), keepdim=True, )
paddle.mean(x=Tensor([16, 142606337, 1],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([16, 71303169, 2],"float32"), axis=-1, )
paddle.mean(x=Tensor([16, 71303169, 2],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([16, 96, 1485483],"float32"), axis=-1, )
paddle.mean(x=Tensor([16, 96, 1485483],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([2, 1, 2147483649],"float16"), axis=Tensor([2],"int64"), )
paddle.mean(x=Tensor([2, 1, 2147483649],"float16"), axis=list[0,1,2,], )
paddle.mean(x=Tensor([2, 1, 2147483649],"float16"), axis=list[0,1,2,], keepdim=False, )
paddle.mean(x=Tensor([2, 1, 2147483649],"float16"), axis=list[0,1,], )
paddle.mean(x=Tensor([2, 1, 2147483649],"float16"), axis=list[0,2,], keepdim=True, )
paddle.mean(x=Tensor([2, 1, 2147483649],"float16"), axis=tuple(0,1,2,), keepdim=False, )
paddle.mean(x=Tensor([2, 1, 2147483649],"float16"), axis=tuple(0,2,), keepdim=True, )
paddle.mean(x=Tensor([2, 1140850690],"float32"), )
paddle.mean(x=Tensor([2, 570425345, 2],"float32"), axis=-1, )
paddle.mean(x=Tensor([2, 570425345, 2],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([2, 715827883, 3],"float16"), axis=Tensor([2],"int64"), )
paddle.mean(x=Tensor([2, 715827883, 3],"float16"), axis=list[0,1,2,], )
paddle.mean(x=Tensor([2, 715827883, 3],"float16"), axis=list[0,1,2,], keepdim=False, )
paddle.mean(x=Tensor([2, 715827883, 3],"float16"), axis=list[0,1,], )
paddle.mean(x=Tensor([2, 715827883, 3],"float16"), axis=list[0,2,], keepdim=True, )
paddle.mean(x=Tensor([2, 715827883, 3],"float16"), axis=tuple(0,1,2,), keepdim=False, )
paddle.mean(x=Tensor([2, 715827883, 3],"float16"), axis=tuple(0,2,), keepdim=True, )
paddle.mean(x=Tensor([2, 96, 11883862],"float32"), axis=-1, )
paddle.mean(x=Tensor([2, 96, 11883862],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([22369622, 102],"float32"), )
paddle.mean(x=Tensor([2281701379, 1],"float32"), )
paddle.mean(x=Tensor([23767723, 96, 1],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([3, 760567127, 1],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([3, 96, 7922575],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([4, 570425345],"float32"), )
paddle.mean(x=Tensor([570425345, 4],"float32"), )
paddle.mean(x=Tensor([8, 285212673],"float32"), )
paddle.median(Tensor([1073741825, 4],"float16"), -1, False, )
paddle.median(Tensor([1073741825, 4],"float16"), -1, True, )
paddle.median(Tensor([1073741825, 4],"float16"), 0, )
paddle.median(Tensor([1073741825, 4],"float16"), 0, False, )
paddle.median(Tensor([1073741825, 4],"float16"), 0, False, mode="min", )
paddle.median(Tensor([1073741825, 4],"float16"), 0, True, )
paddle.median(Tensor([1073741825, 4],"float16"), 0, True, mode="min", )
paddle.median(Tensor([1073741825, 4],"float16"), 1, False, )
paddle.median(Tensor([1073741825, 4],"float16"), 1, True, )
paddle.median(Tensor([285212673, 4, 2],"float32"), -1, False, )
paddle.median(Tensor([285212673, 4, 2],"float32"), -1, True, )
paddle.median(Tensor([285212673, 4, 2],"float32"), 1, False, )
paddle.median(Tensor([285212673, 4, 2],"float32"), 1, True, )
paddle.median(Tensor([285212673, 4, 2],"float32"), 2, False, )
paddle.median(Tensor([285212673, 4, 2],"float32"), 2, True, )
paddle.median(Tensor([285212673, 4, 2],"int32"), -1, False, )
paddle.median(Tensor([285212673, 4, 2],"int32"), -1, True, )
paddle.median(Tensor([285212673, 4, 2],"int32"), 2, False, )
paddle.median(Tensor([285212673, 4, 2],"int32"), 2, True, )
paddle.median(Tensor([3, 1431655766],"float16"), 0, )
paddle.median(Tensor([3, 1431655766],"float16"), 0, False, )
paddle.median(Tensor([3, 1431655766],"float16"), 0, True, )
paddle.median(Tensor([3, 380283564, 2],"float32"), -1, False, )
paddle.median(Tensor([3, 380283564, 2],"float32"), -1, True, )
paddle.median(Tensor([3, 380283564, 2],"float32"), 0, False, )
paddle.median(Tensor([3, 380283564, 2],"float32"), 0, True, )
paddle.median(Tensor([3, 380283564, 2],"float32"), 2, False, )
paddle.median(Tensor([3, 380283564, 2],"float32"), 2, True, )
paddle.median(Tensor([3, 380283564, 2],"int32"), -1, False, )
paddle.median(Tensor([3, 380283564, 2],"int32"), -1, True, )
paddle.median(Tensor([3, 380283564, 2],"int32"), 2, False, )
paddle.median(Tensor([3, 380283564, 2],"int32"), 2, True, )
paddle.median(Tensor([3, 4, 190141782],"float32"), 0, False, )
paddle.median(Tensor([3, 4, 190141782],"float32"), 0, True, )
paddle.median(Tensor([3, 4, 190141782],"float32"), 1, False, )
paddle.median(Tensor([3, 4, 190141782],"float32"), 1, True, )
paddle.median(Tensor([3, 4, 357913942],"float16"), 0, False, )
paddle.median(Tensor([3, 4, 357913942],"float16"), 0, True, )
paddle.median(Tensor([3, 4, 357913942],"float16"), 1, False, )
paddle.median(Tensor([3, 4, 357913942],"float16"), 1, True, )
paddle.median(Tensor([3, 715827883, 2],"float16"), 0, False, )
paddle.median(Tensor([3, 715827883, 2],"float16"), 0, True, )
paddle.median(Tensor([3, 715827883, 2],"float16"), 1, False, )
paddle.median(Tensor([3, 715827883, 2],"float16"), 1, False, mode="min", )
paddle.median(Tensor([3, 715827883, 2],"float16"), 1, True, )
paddle.median(Tensor([3, 715827883, 2],"float16"), 1, True, mode="min", )
paddle.median(Tensor([3, 760567127],"float32"), 0, False, )
paddle.median(Tensor([3, 760567127],"float32"), 0, True, )
paddle.median(Tensor([5, 456340276],"float32"), 0, False, mode="min", )
paddle.median(Tensor([5, 456340276],"float32"), 0, True, mode="min", )
paddle.median(Tensor([536870913, 4, 2],"float16"), 0, False, )
paddle.median(Tensor([536870913, 4, 2],"float16"), 0, False, mode="min", )
paddle.median(Tensor([536870913, 4, 2],"float16"), 0, True, )
paddle.median(Tensor([536870913, 4, 2],"float16"), 0, True, mode="min", )
paddle.median(Tensor([536870913, 4, 2],"float16"), 1, False, )
paddle.median(Tensor([536870913, 4, 2],"float16"), 1, True, )
paddle.median(Tensor([570425345, 4],"float32"), -1, False, )
paddle.median(Tensor([570425345, 4],"float32"), -1, True, )
paddle.median(Tensor([570425345, 4],"float32"), 1, False, )
paddle.median(x=Tensor([142606337, 4, 4],"float32"), axis=-2, keepdim=True, )
paddle.median(x=Tensor([142606337, 4, 4],"float32"), axis=1, keepdim=False, )
paddle.median(x=Tensor([142606337, 4, 4],"float32"), axis=1, keepdim=True, )
paddle.median(x=Tensor([4, 142606337, 4],"float32"), axis=0, keepdim=False, )
paddle.median(x=Tensor([4, 4, 142606337],"float32"), axis=-2, keepdim=True, )
paddle.median(x=Tensor([4, 4, 142606337],"float32"), axis=0, keepdim=False, )
paddle.median(x=Tensor([4, 4, 142606337],"float32"), axis=1, keepdim=False, )
paddle.median(x=Tensor([4, 4, 142606337],"float32"), axis=1, keepdim=True, )
paddle.meshgrid(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.meshgrid(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.meshgrid(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.min(Tensor([10, 10, 4772186, 9],"float16"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.min(Tensor([10, 10, 9, 4772186],"float16"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.min(Tensor([10, 5, 9, 9544372],"float16"), Tensor([2],"int64"), )
paddle.min(Tensor([10, 5, 9544372, 9],"float16"), Tensor([2],"int64"), )
paddle.min(Tensor([10, 5302429, 9, 9],"float16"), Tensor([2],"int64"), )
paddle.min(Tensor([10, 5302429, 9, 9],"float16"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.min(Tensor([10604858, 5, 9, 9],"float16"), Tensor([2],"int64"), )
paddle.min(Tensor([1073741825, 4],"float16"), 0, False, )
paddle.min(Tensor([1073741825, 4],"float16"), 1, True, )
paddle.min(Tensor([1073741825, 4],"float16"), None, False, )
paddle.min(Tensor([1073741825, 4],"float16"), axis=0, )
paddle.min(Tensor([128, 17825793],"float32"), axis=1, keepdim=True, )
paddle.min(Tensor([16, 142606337],"float32"), list[0,], )
paddle.min(Tensor([16, 142606337],"float32"), list[1,], )
paddle.min(Tensor([2, 1140850690],"float32"), )
paddle.min(Tensor([2, 1140850690],"float32"), axis=0, )
paddle.min(Tensor([2, 2, 570425345],"int32"), tuple(0,1,), False, )
paddle.min(Tensor([2, 2147483649],"float16"), 0, False, )
paddle.min(Tensor([2, 2147483649],"float16"), 1, True, )
paddle.min(Tensor([2, 2147483649],"float16"), None, False, )
paddle.min(Tensor([2, 570425345, 2],"int32"), tuple(0,1,), False, )
paddle.min(Tensor([2147483649, 2],"float16"), axis=0, )
paddle.min(Tensor([2281701379],"float32"), axis=0, )
paddle.min(Tensor([2281701379],"int64"), )
paddle.min(Tensor([2910334, 1, 28, 28],"float32"), )
paddle.min(Tensor([3, 760567127],"float32"), axis=None, )
paddle.min(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.min(Tensor([4, 1073741825],"float16"), axis=0, )
paddle.min(Tensor([4294967297],"float16"), axis=0, )
paddle.min(Tensor([4294967297],"float16"), axis=tuple(0,), )
paddle.min(Tensor([456340276, 5],"float32"), axis=None, )
paddle.min(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.min(Tensor([5302429, 10, 9, 9],"float16"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.min(Tensor([570425345, 2, 2],"int32"), tuple(0,1,), False, )
paddle.min(Tensor([570425345, 4],"float32"), axis=1, keepdim=True, )
paddle.min(Tensor([64, 1, 1273271, 28],"float32"), )
paddle.min(Tensor([64, 1, 28, 1273271],"float32"), )
paddle.min(Tensor([64, 45474, 28, 28],"float32"), )
paddle.min(Tensor([71303169, 32],"float32"), list[0,], )
paddle.min(Tensor([71303169, 32],"float32"), list[1,], )
paddle.min(Tensor([760567127, 3],"float32"), )
paddle.min(Tensor([8, 536870913],"float16"), axis=0, )
paddle.min(Tensor([9313067, 245],"float32"), axis=0, )
paddle.min(x=Tensor([1140850690, 2],"float32"), axis=list[-2,1,], keepdim=False, )
paddle.min(x=Tensor([2, 1140850690],"float32"), )
paddle.min(x=Tensor([2, 1140850690],"float32"), axis=-2, )
paddle.min(x=Tensor([2, 1140850690],"float32"), axis=0, keepdim=True, )
paddle.min(x=Tensor([2, 1140850690],"float32"), axis=1, )
paddle.min(x=Tensor([2, 1140850690],"float32"), axis=Tensor([1],"int32"), )
paddle.min(x=Tensor([2, 1140850690],"float32"), axis=list[-2,1,], keepdim=False, )
paddle.min(x=Tensor([760567127, 3],"float32"), )
paddle.min(x=Tensor([760567127, 3],"float32"), axis=-2, )
paddle.min(x=Tensor([760567127, 3],"float32"), axis=0, keepdim=True, )
paddle.min(x=Tensor([760567127, 3],"float32"), axis=1, )
paddle.min(x=Tensor([760567127, 3],"float32"), axis=Tensor([1],"int32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 1, 1140850690, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 110924, 10285, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 37623, 30324, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 41919, 27216, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 46996, 24276, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([110924, 1, 10285, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([37623, 1, 30324, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([41919, 1, 27216, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([46996, 1, 24276, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1140850690, 2],"float32"), Tensor([1, 1, 1140850690, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([1, 1140850690, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([110924, 10285, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([1140850690, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([29709, 38402, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([30953, 36858, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([317080, 3598, 2],"float32"), )
paddle.minimum(Tensor([1, 1140850690, 2],"float32"), Tensor([1, 1140850690, 2],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([285213, 200, 40],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([30, 1901418, 40],"float32"), )
paddle.minimum(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.minimum(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.minimum(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.minimum(Tensor([12, 118839, 40, 40, 1],"float32"), Tensor([12, 118839, 40, 40, 1],"float32"), )
paddle.minimum(Tensor([12, 1901418, 10, 10, 1],"float32"), Tensor([12, 1901418, 10, 10, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.minimum(Tensor([12, 3, 10, 10, 633806],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 10, 10, 633806],"float32"), Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.minimum(Tensor([12, 3, 10, 6338060, 1],"float32"), Tensor([12, 3, 10, 6338060, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 1584515, 40, 1],"float32"), Tensor([12, 3, 1584515, 40, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 20, 20, 158452],"float32"), Tensor([12, 3, 20, 20, 158452],"float32"), )
paddle.minimum(Tensor([12, 3, 20, 20, 158452],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 158452],"float32"), )
paddle.minimum(Tensor([12, 3, 20, 3169030, 1],"float32"), Tensor([12, 3, 20, 3169030, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 3169030, 20, 1],"float32"), Tensor([12, 3, 3169030, 20, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 40, 1584515, 1],"float32"), Tensor([12, 3, 40, 1584515, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.minimum(Tensor([12, 3, 40, 40, 39613],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 40, 40, 39613],"float32"), Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.minimum(Tensor([12, 3, 6338060, 10, 1],"float32"), Tensor([12, 3, 6338060, 10, 1],"float32"), )
paddle.minimum(Tensor([12, 475355, 20, 20, 1],"float32"), Tensor([12, 475355, 20, 20, 1],"float32"), )
paddle.minimum(Tensor([152113426, 15],"float32"), Tensor([152113426, 15],"float32"), )
paddle.minimum(Tensor([152113426, 15],"float32"), Tensor([15],"float32"), )
paddle.minimum(Tensor([1901418, 3, 20, 20, 1],"float32"), Tensor([1901418, 3, 20, 20, 1],"float32"), )
paddle.minimum(Tensor([200, 40],"float32"), Tensor([285213, 200, 40],"float32"), )
paddle.minimum(Tensor([2281701379, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.minimum(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.minimum(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.minimum(Tensor([40],"float32"), Tensor([285213, 200, 40],"float32"), )
paddle.minimum(Tensor([40],"float32"), Tensor([30, 1901418, 40],"float32"), )
paddle.minimum(Tensor([475355, 3, 40, 40, 1],"float32"), Tensor([475355, 3, 40, 40, 1],"float32"), )
paddle.minimum(Tensor([7605672, 3, 10, 10, 1],"float32"), Tensor([7605672, 3, 10, 10, 1],"float32"), )
paddle.minimum(x=Tensor([1, 1431655766, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.minimum(x=Tensor([1, 2, 1, 3],"float16"), y=Tensor([1, 1431655766, 3],"float16"), )
paddle.minimum(x=Tensor([1, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.minimum(x=Tensor([1],"float16"), y=Tensor([4294967297],"float16"), )
paddle.minimum(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.minimum(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.minimum(x=Tensor([715827883, 2, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.mm(Tensor([1, 10],"float16"), Tensor([10, 429496730],"float16"), )
paddle.mm(Tensor([1, 10],"float32"), Tensor([10, 228170138],"float32"), )
paddle.mm(Tensor([1, 12],"float32"), Tensor([12, 190141782],"float32"), )
paddle.mm(Tensor([10, 20],"float16"), Tensor([20, 214748365],"float16"), )
paddle.mm(Tensor([1024, 108, 144, 144],"float32"), Tensor([1024, 108, 144, 32],"float32"), )
paddle.mm(Tensor([1024, 1422, 49, 32],"float32"), Tensor([1024, 1422, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 4, 11369, 49],"float32"), Tensor([1024, 4, 49, 32],"float32"), )
paddle.mm(Tensor([1024, 4, 17409, 32],"float32"), Tensor([1024, 4, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 4, 49, 49],"float32"), Tensor([1024, 4, 49, 11369],"float32"), )
paddle.mm(Tensor([1024, 484, 144, 32],"float32"), Tensor([1024, 484, 32, 144],"float32"), )
paddle.mm(Tensor([1024, 6, 11606, 32],"float32"), Tensor([1024, 6, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 6, 49, 32],"float32"), Tensor([1024, 6, 32, 11606],"float32"), )
paddle.mm(Tensor([1024, 6, 49, 49],"float32"), Tensor([1024, 6, 49, 7579],"float32"), )
paddle.mm(Tensor([1024, 6, 7579, 49],"float32"), Tensor([1024, 6, 49, 32],"float32"), )
paddle.mm(Tensor([1024, 8, 144, 144],"float32"), Tensor([1024, 8, 144, 1935],"float32"), )
paddle.mm(Tensor([1024, 8, 144, 32],"float32"), Tensor([1024, 8, 32, 8705],"float32"), )
paddle.mm(Tensor([1024, 8, 1935, 144],"float32"), Tensor([1024, 8, 144, 32],"float32"), )
paddle.mm(Tensor([1024, 8, 49, 32],"float32"), Tensor([1024, 8, 32, 8705],"float32"), )
paddle.mm(Tensor([1024, 8, 8705, 32],"float32"), Tensor([1024, 8, 32, 144],"float32"), )
paddle.mm(Tensor([1024, 8, 8705, 32],"float32"), Tensor([1024, 8, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 929, 49, 49],"float32"), Tensor([1024, 929, 49, 32],"float32"), )
paddle.mm(Tensor([13755, 8, 144, 144],"float32"), Tensor([13755, 8, 144, 32],"float32"), )
paddle.mm(Tensor([158386, 6, 49, 49],"float32"), Tensor([158386, 6, 49, 32],"float32"), )
paddle.mm(Tensor([16, 32],"float32"), Tensor([32, 71303169],"float32"), )
paddle.mm(Tensor([181896, 8, 49, 32],"float32"), Tensor([181896, 8, 32, 49],"float32"), )
paddle.mm(Tensor([190141782, 12],"float32"), Tensor([12, 1],"float32"), )
paddle.mm(Tensor([20, 10],"float16"), Tensor([10, 429496730],"float16"), )
paddle.mm(Tensor([214748365, 20],"float16"), Tensor([20, 10],"float16"), )
paddle.mm(Tensor([228170138, 10],"float32"), Tensor([10, 1],"float32"), )
paddle.mm(Tensor([237579, 4, 49, 49],"float32"), Tensor([237579, 4, 49, 32],"float32"), )
paddle.mm(Tensor([24, 1, 256],"float32"), Tensor([24, 256, 371371],"float32"), )
paddle.mm(Tensor([24, 371371, 256],"float32"), Tensor([24, 256, 96],"float32"), )
paddle.mm(Tensor([242528, 6, 49, 32],"float32"), Tensor([242528, 6, 32, 49],"float32"), )
paddle.mm(Tensor([3, 3],"float32"), Tensor([3, 760567127],"float32"), )
paddle.mm(Tensor([32, 1, 256],"float32"), Tensor([32, 256, 278529],"float32"), )
paddle.mm(Tensor([32, 278529, 256],"float32"), Tensor([32, 256, 576],"float32"), )
paddle.mm(Tensor([363792, 4, 49, 32],"float32"), Tensor([363792, 4, 32, 49],"float32"), )
paddle.mm(Tensor([4, 1, 256],"float32"), Tensor([4, 256, 2228225],"float32"), )
paddle.mm(Tensor([4, 2228225, 256],"float32"), Tensor([4, 256, 512],"float32"), )
paddle.mm(Tensor([429496730, 10],"float16"), Tensor([10, 1],"float16"), )
paddle.mm(Tensor([429496730, 10],"float16"), Tensor([10, 20],"float16"), )
paddle.mm(Tensor([61896, 8, 144, 32],"float32"), Tensor([61896, 8, 32, 144],"float32"), )
paddle.mm(Tensor([71303169, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.mm(Tensor([760567127, 3],"float32"), Tensor([3, 3],"float32"), )
paddle.mm(Tensor([8, 1, 256],"float32"), Tensor([8, 256, 1114113],"float32"), )
paddle.mm(Tensor([8, 1114113, 256],"float32"), Tensor([8, 256, 512],"float32"), )
paddle.mm(input=Tensor([1431655766, 3],"float16"), mat2=Tensor([3, 2],"float16"), )
paddle.mm(input=Tensor([2, 3, 1, 2],"float16"), mat2=Tensor([2, 3, 2, 357913942],"float16"), )
paddle.mm(input=Tensor([2, 3, 357913942, 2],"float16"), mat2=Tensor([2, 3, 2, 3],"float16"), )
paddle.mm(input=Tensor([2, 3, 4],"float16"), mat2=Tensor([2, 4, 536870913],"float16"), )
paddle.mm(input=Tensor([2, 3, 4],"float16"), mat2=Tensor([4, 1073741825],"float16"), )
paddle.mm(input=Tensor([2, 3],"float16"), mat2=Tensor([3, 1431655766],"float16"), )
paddle.mm(input=Tensor([2, 3],"float32"), mat2=Tensor([3, 760567127],"float32"), )
paddle.mm(input=Tensor([2, 536870913, 4],"float16"), mat2=Tensor([2, 4, 2],"float16"), )
paddle.mm(input=Tensor([2, 536870913, 4],"float16"), mat2=Tensor([4, 5],"float16"), )
paddle.mm(input=Tensor([2, 536870913, 4],"float16"), mat2=Tensor([4],"float16"), )
paddle.mm(input=Tensor([357913942, 3, 4],"float16"), mat2=Tensor([357913942, 4, 2],"float16"), )
paddle.mm(input=Tensor([357913942, 3, 4],"float16"), mat2=Tensor([4, 5],"float16"), )
paddle.mm(input=Tensor([357913942, 3, 4],"float16"), mat2=Tensor([4],"float16"), )
paddle.mm(input=Tensor([760567127, 3],"float32"), mat2=Tensor([3, 2],"float32"), )
paddle.mod(Tensor([10, 228170138],"int32"), Tensor([10, 228170138],"int32"), )
paddle.mod(Tensor([114085069, 20],"int32"), Tensor([114085069, 20],"int32"), )
paddle.mod(Tensor([114085069, 4, 5],"int32"), Tensor([114085069, 4, 5],"int32"), )
paddle.mod(Tensor([1],"int32"), Tensor([2281701379],"int32"), )
paddle.mod(Tensor([2, 228170138, 5],"int32"), Tensor([2, 228170138, 5],"int32"), )
paddle.mod(Tensor([2, 4, 285212673],"int32"), Tensor([2, 4, 285212673],"int32"), )
paddle.mod(Tensor([2281701379],"int32"), Tensor([1],"int32"), )
paddle.mod(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.mod(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.mod(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.mod(Tensor([4, 570425345],"int32"), Tensor([4, 570425345],"int32"), )
paddle.mod(Tensor([456340276, 5],"int32"), Tensor([456340276, 5],"int32"), )
paddle.mod(Tensor([57042535, 2, 4, 5],"int32"), Tensor([57042535, 2, 4, 5],"int32"), )
paddle.mod(Tensor([6, 19014179, 4, 5],"int32"), Tensor([6, 19014179, 4, 5],"int32"), )
paddle.mod(Tensor([6, 2, 38028357, 5],"int32"), Tensor([6, 2, 38028357, 5],"int32"), )
paddle.mod(Tensor([6, 2, 4, 47535446],"int32"), Tensor([6, 2, 4, 47535446],"int32"), )
paddle.mod(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.mode(Tensor([2, 10, 214748365],"float16"), -1, )
paddle.mode(Tensor([2, 10, 214748365],"float16"), -1, keepdim=True, )
paddle.mode(Tensor([2, 214748365, 10],"float16"), 1, )
paddle.mode(Tensor([2, 214748365, 10],"float16"), 1, keepdim=True, )
paddle.mode(x=Tensor([3, 2, 380283564],"float32"), )
paddle.mode(x=Tensor([3, 2, 380283564],"int32"), )
paddle.mode(x=Tensor([3, 2, 380283564],"int64"), )
paddle.mode(x=Tensor([3, 2, 715827883],"float16"), )
paddle.mode(x=Tensor([3, 2, 715827883],"float16"), axis=2, keepdim=True, )
paddle.mode(x=Tensor([3, 477218589, 3],"float16"), axis=1, keepdim=False, )
paddle.moveaxis(Tensor([102261127, 7, 6],"float16"), list[0,2,], list[1,2,], )
paddle.moveaxis(Tensor([102261127, 7, 6],"float16"), list[1,2,], list[1,2,], )
paddle.moveaxis(Tensor([10226113, 3, 4, 5, 7],"float16"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(Tensor([2, 15339169, 4, 5, 7],"float16"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(Tensor([2, 3, 20452226, 5, 7],"float16"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(Tensor([2, 3, 4, 25565282, 7],"float16"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(Tensor([2, 3, 4, 5, 35791395],"float16"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(Tensor([357913942, 3, 4],"float16"), list[1,2,], list[1,2,], )
paddle.moveaxis(Tensor([4, 178956971, 6],"float16"), list[0,2,], list[1,2,], )
paddle.moveaxis(Tensor([4, 178956971, 6],"float16"), list[1,2,], list[1,2,], )
paddle.moveaxis(Tensor([4, 7, 153391690],"float16"), list[0,2,], list[1,2,], )
paddle.moveaxis(Tensor([4, 7, 153391690],"float16"), list[1,2,], list[1,2,], )
paddle.moveaxis(Tensor([5, 214748365, 4],"float16"), list[1,2,], list[1,2,], )
paddle.moveaxis(Tensor([5, 3, 286331154],"float16"), list[1,2,], list[1,2,], )
paddle.moveaxis(x=Tensor([1140850690, 2],"float32"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([1140850690, 2],"int32"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([1140850690, 2],"int64"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([143165577, 2, 3, 5],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([20452226, 2, 3, 5, 7],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([20452226, 2, 3, 5, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.moveaxis(x=Tensor([2147483649, 2],"float16"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([4, 10226113, 3, 5, 7],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 10226113, 3, 5, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.moveaxis(x=Tensor([4, 1073741825],"float16"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([4, 2, 107374183, 5],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 2, 15339169, 5, 7],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 2, 15339169, 5, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.moveaxis(x=Tensor([4, 2, 3, 178956971],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 2, 3, 25565282, 7],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 2, 3, 25565282, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.moveaxis(x=Tensor([4, 2, 3, 5, 35791395],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 2, 3, 5, 35791395],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.moveaxis(x=Tensor([4, 2, 536870913],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 357913942, 3],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 570425345],"float32"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([4, 570425345],"int32"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([4, 570425345],"int64"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([4, 71582789, 3, 5],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([715827883, 2, 3],"float16"), source=0, destination=2, )
paddle.multigammaln(Tensor([10, 228170138],"float32"), 2, )
paddle.multigammaln(Tensor([10, 429496730],"float16"), 2, )
paddle.multigammaln(Tensor([114085069, 20],"float32"), 2, )
paddle.multigammaln(Tensor([214748365, 20],"float16"), 2, )
paddle.multiplex(inputs=list[Tensor([2, 1140850690],"float32"),Tensor([2, 4],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([2, 3],"float32"),Tensor([2, 3],"float32"),Tensor([2, 1140850690],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([2, 3],"float32"),Tensor([2, 3],"float32"),Tensor([760567127, 3],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([2, 3],"float32"),Tensor([760567127, 3],"float32"),Tensor([2, 3],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([2, 4],"float32"),Tensor([2, 1140850690],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([2, 4],"float32"),Tensor([570425345, 4],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([3, 3],"float32"),Tensor([3, 3],"float32"),Tensor([760567127, 3],"float32"),], index=Tensor([3, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([3, 3],"float32"),Tensor([760567127, 3],"float32"),Tensor([3, 3],"float32"),], index=Tensor([3, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([3, 760567127],"float32"),Tensor([3, 3],"float32"),Tensor([3, 3],"float32"),], index=Tensor([3, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([4, 4],"float32"),Tensor([570425345, 4],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([4, 4],"float32"),Tensor([570425345, 4],"float32"),], index=Tensor([4, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([570425345, 4],"float32"),Tensor([2, 4],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([570425345, 4],"float32"),Tensor([4, 4],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([570425345, 4],"float32"),Tensor([4, 4],"float32"),], index=Tensor([4, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([570425345, 4],"float32"),Tensor([7, 4],"float32"),], index=Tensor([6, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([7, 4],"float32"),Tensor([570425345, 4],"float32"),], index=Tensor([6, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([760567127, 3],"float32"),Tensor([2, 3],"float32"),Tensor([2, 3],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([760567127, 3],"float32"),Tensor([3, 3],"float32"),Tensor([3, 3],"float32"),], index=Tensor([3, 1],"int32"), )
paddle.multiply(Tensor([1, 1, 2281701379],"float32"), Tensor([1, 1, 2281701379],"float32"), name=None, )
paddle.multiply(Tensor([1, 1, 256],"float32"), Tensor([1, 8912897, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 1, 256],"float32"), Tensor([8912897, 1, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 1],"float32"), Tensor([2281701379],"float32"), )
paddle.multiply(Tensor([1, 2, 142606337, 8],"float32"), Tensor([1, 1, 142606337, 8],"float32"), )
paddle.multiply(Tensor([1, 2, 8, 142606337],"float32"), Tensor([1, 1, 8, 142606337],"float32"), )
paddle.multiply(Tensor([1, 2, 8, 8],"float32"), Tensor([35651585, 1, 8, 8],"float32"), )
paddle.multiply(Tensor([1, 2147483649, 2],"float16"), Tensor([1, 2147483649, 2],"float16"), )
paddle.multiply(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.multiply(Tensor([1, 2281701379],"float32"), Tensor([1],"float32"), )
paddle.multiply(Tensor([1, 2],"float32"), Tensor([1140850690, 2],"float32"), )
paddle.multiply(Tensor([1, 35651585, 8, 8],"float32"), Tensor([1, 1, 8, 8],"float32"), )
paddle.multiply(Tensor([1, 35651585, 8, 8],"float32"), Tensor([1, 35651585, 8, 8],"float32"), )
paddle.multiply(Tensor([1, 5, 2],"float16"), Tensor([429496730, 5, 2],"float16"), )
paddle.multiply(Tensor([1, 5, 858993460],"float16"), Tensor([1, 5, 858993460],"float16"), )
paddle.multiply(Tensor([1, 8912897, 256],"float32"), Tensor([1, 1, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 8912897, 256],"float32"), Tensor([1, 8912897, 256],"float32"), name=None, )
paddle.multiply(Tensor([1140850690, 2],"float32"), Tensor([1, 2],"float32"), )
paddle.multiply(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), )
paddle.multiply(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), name=None, )
paddle.multiply(Tensor([13, 1371215, 4, 32],"float32"), Tensor([13, 1371215, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([13, 8, 4, 5484860],"float32"), Tensor([13, 8, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([13, 8, 4, 5484860],"float32"), Tensor([13, 8, 1, 5484860],"float32"), name=None, )
paddle.multiply(Tensor([13, 8, 685608, 32],"float32"), Tensor([13, 8, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([13, 8, 685608, 32],"float32"), Tensor([13, 8, 685608, 1],"float32"), name=None, )
paddle.multiply(Tensor([1431655766, 1, 3],"float16"), Tensor([1, 3],"float16"), )
paddle.multiply(Tensor([158452, 3, 3, 40, 40],"float32"), Tensor([158452, 3, 3, 40, 40],"float32"), )
paddle.multiply(Tensor([17825793, 2, 8, 8],"float32"), Tensor([1, 1, 8, 8],"float32"), )
paddle.multiply(Tensor([17825793, 2, 8, 8],"float32"), Tensor([17825793, 1, 8, 8],"float32"), )
paddle.multiply(Tensor([190141782, 3, 1, 4],"float32"), Tensor([3, 3, 4],"float32"), )
paddle.multiply(Tensor([2, 1, 1, 2, 3],"float32"), Tensor([2, 1, 1140850690, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([2, 1, 1, 2, 3],"float32"), Tensor([2, 1140850690, 1, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([2, 1, 1, 2, 570425345],"float32"), Tensor([2, 1, 1, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([2, 1, 1, 2, 570425345],"float32"), Tensor([2, 1, 1, 1, 570425345],"float32"), name=None, )
paddle.multiply(Tensor([2, 1, 1, 380283564, 3],"float32"), Tensor([2, 1, 1, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([2, 1, 1, 380283564, 3],"float32"), Tensor([2, 1, 1, 380283564, 1],"float32"), name=None, )
paddle.multiply(Tensor([2, 1, 190141782, 2, 3],"float32"), Tensor([2, 1, 1, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([2, 1, 190141782, 2, 3],"float32"), Tensor([2, 1, 190141782, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), name=None, )
paddle.multiply(Tensor([2, 190141782, 1, 2, 3],"float32"), Tensor([2, 1, 1, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([2, 190141782, 1, 2, 3],"float32"), Tensor([2, 190141782, 1, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([2, 3, 1, 4],"float32"), Tensor([3, 190141782, 4],"float32"), )
paddle.multiply(Tensor([2228225, 8, 4, 32],"float32"), Tensor([2228225, 8, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([2281701379, 1],"float32"), Tensor([1],"float32"), )
paddle.multiply(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.multiply(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), name=None, )
paddle.multiply(Tensor([3, 158452, 3, 40, 40],"float32"), Tensor([3, 158452, 3, 40, 40],"float32"), )
paddle.multiply(Tensor([3, 3, 158452, 40, 40],"float32"), Tensor([3, 3, 158452, 40, 40],"float32"), )
paddle.multiply(Tensor([3, 3, 3, 2112687, 40],"float32"), Tensor([3, 3, 3, 2112687, 40],"float32"), )
paddle.multiply(Tensor([3, 3, 3, 40, 2112687],"float32"), Tensor([3, 3, 3, 40, 2112687],"float32"), )
paddle.multiply(Tensor([380283564, 1, 1, 2, 3],"float32"), Tensor([380283564, 1, 1, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([429496730, 5, 2],"float16"), Tensor([1, 5, 2],"float16"), )
paddle.multiply(Tensor([429496730, 5, 2],"float16"), Tensor([429496730, 5, 2],"float16"), )
paddle.multiply(Tensor([5, 1, 3],"float16"), Tensor([1431655766, 3],"float16"), )
paddle.multiply(Tensor([5, 286331154, 3],"float16"), Tensor([1, 3],"float16"), )
paddle.multiply(Tensor([8912897, 1, 256],"float32"), Tensor([1, 1, 256],"float32"), name=None, )
paddle.multiply(Tensor([8912897, 1, 256],"float32"), Tensor([8912897, 1, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([1, 1024, 123791, 18],"float32"), y=Tensor([1, 1024, 1, 1],"float32"), )
paddle.multiply(x=Tensor([1, 1024, 123791, 18],"float32"), y=Tensor([1, 1024, 123791, 1],"float32"), )
paddle.multiply(x=Tensor([1, 1024, 18, 123791],"float32"), y=Tensor([1, 1024, 1, 123791],"float32"), )
paddle.multiply(x=Tensor([1, 1024, 18, 123791],"float32"), y=Tensor([1, 1024, 1, 1],"float32"), )
paddle.multiply(x=Tensor([1, 1431655766, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.multiply(x=Tensor([1, 1],"float32"), y=Tensor([187679, 12158],"float32"), )
paddle.multiply(x=Tensor([1, 1],"float32"), y=Tensor([2281701379, 1],"float32"), )
paddle.multiply(x=Tensor([1, 2, 1, 3],"float16"), y=Tensor([1, 1431655766, 3],"float16"), )
paddle.multiply(x=Tensor([1, 7042289, 18, 18],"float32"), y=Tensor([1, 7042289, 1, 1],"float32"), )
paddle.multiply(x=Tensor([1],"float32"), y=Tensor([2281701379],"float32"), )
paddle.multiply(x=Tensor([2281701379, 1],"float32"), y=Tensor([2281701379, 1],"float32"), )
paddle.multiply(x=Tensor([2281701379],"float32"), y=Tensor([2281701379],"float32"), )
paddle.multiply(x=Tensor([6878, 1024, 18, 18],"float32"), y=Tensor([1, 1024, 1, 1],"float32"), )
paddle.multiply(x=Tensor([6878, 1024, 18, 18],"float32"), y=Tensor([6878, 1024, 1, 1],"float32"), )
paddle.multiply(x=Tensor([715827883, 2, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.multiply(x=Tensor([760567127, 3],"float32"), y=Tensor([3],"float32"), )
paddle.mv(Tensor([126761188, 18],"float32"), Tensor([18],"float32"), )
paddle.mv(Tensor([190141782, 12],"float32"), Tensor([12],"float32"), )
paddle.mv(Tensor([380283564, 6],"float32"), Tensor([6],"float32"), )
paddle.nan_to_num(Tensor([1140850690, 2],"float32"), neginf=-1.1920928955078125e-07, )
paddle.nan_to_num(Tensor([148, 5, 3083381],"float32"), neginf=-1.1920928955078125e-07, )
paddle.nan_to_num(Tensor([1948, 1171305],"float32"), neginf=-1.1920928955078125e-07, )
paddle.nan_to_num(Tensor([2, 1140850690],"float32"), 1.0, 100.0, -10.0, )
paddle.nan_to_num(Tensor([2, 1140850690],"float32"), 1.0, 2.0, None, )
paddle.nan_to_num(Tensor([2, 1140850690],"float32"), 1.0, None, None, )
paddle.nan_to_num(Tensor([400, 10737419],"float16"), neginf=-2.220446049250313e-16, )
paddle.nan_to_num(Tensor([4294967297, 1],"float16"), neginf=-2.220446049250313e-16, )
paddle.nan_to_num(Tensor([4294967297],"float16"), neginf=-2.220446049250313e-16, )
paddle.nan_to_num(Tensor([570425345, 4],"float32"), )
paddle.nan_to_num(Tensor([760567127, 3],"float32"), )
paddle.nan_to_num(Tensor([760567127, 3],"float32"), 1.0, 100.0, -10.0, )
paddle.nan_to_num(Tensor([760567127, 3],"float32"), 1.0, 2.0, None, )
paddle.nan_to_num(Tensor([760567127, 3],"float32"), 1.0, None, -10.0, )
paddle.nan_to_num(Tensor([760567127, 3],"float32"), 1.0, None, None, )
paddle.nan_to_num(Tensor([91, 47197443],"float16"), neginf=-2.220446049250313e-16, )
paddle.nanmean(Tensor([2, 1140850690],"float32"), -1, False, )
paddle.nanmean(Tensor([2, 1140850690],"float32"), 0, True, )
paddle.nanmean(Tensor([2, 1140850690],"float32"), 1, False, )
paddle.nanmean(Tensor([2, 1140850690],"float32"), None, False, )
paddle.nanmean(Tensor([2, 1140850690],"float32"), None, True, )
paddle.nanmean(Tensor([2, 1140850690],"float32"), tuple(0,1,), False, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), -1, False, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), 2, True, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), None, False, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), None, True, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), list[0,1,2,3,], False, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), list[0,2,], False, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), list[], False, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), tuple(0,2,), False, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), -1, False, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), 2, True, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), None, False, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), None, True, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), list[0,1,2,3,], False, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), list[0,2,], False, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), list[], False, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), tuple(0,2,), False, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), -1, False, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), 2, True, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), None, False, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), None, True, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), list[0,1,2,3,], False, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), list[0,2,], False, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), list[], False, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), tuple(0,2,), False, )
paddle.nanmean(Tensor([2281701379],"float32"), axis=0, )
paddle.nanmean(Tensor([3, 760567127],"float32"), axis=None, )
paddle.nanmean(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), -1, False, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), 2, True, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), None, False, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), None, True, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), list[0,1,2,3,], False, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), list[0,2,], False, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), list[], False, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), tuple(0,2,), False, )
paddle.nanmean(Tensor([456340276, 5],"float32"), axis=None, )
paddle.nanmean(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.nanmean(Tensor([760567127, 3],"float32"), -1, False, )
paddle.nanmean(Tensor([760567127, 3],"float32"), 0, True, )
paddle.nanmean(Tensor([760567127, 3],"float32"), 1, False, )
paddle.nanmean(Tensor([760567127, 3],"float32"), None, False, )
paddle.nanmean(Tensor([760567127, 3],"float32"), None, True, )
paddle.nanmean(Tensor([760567127, 3],"float32"), tuple(0,1,), False, )
paddle.nanmedian(Tensor([2, 3, 4, 95070891],"float32"), axis=-2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 95070891],"float32"), axis=2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 95070891],"float32"), axis=tuple(1,2,), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 76056713, 5],"float32"), axis=-1, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 76056713, 5],"float32"), axis=list[0,-1,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 76056713, 5],"float32"), axis=list[0,1,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 76056713, 5],"float32"), axis=list[0,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 57042535, 4, 5],"float32"), axis=-1, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 57042535, 4, 5],"float32"), axis=-2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 57042535, 4, 5],"float32"), axis=2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 57042535, 4, 5],"float32"), axis=list[0,-1,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 57042535, 4, 5],"float32"), axis=list[0,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([22817014, 100],"float32"), axis=1, mode="min", )
paddle.nanmedian(Tensor([38028357, 3, 4, 5],"float32"), axis=-1, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([38028357, 3, 4, 5],"float32"), axis=-2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([38028357, 3, 4, 5],"float32"), axis=2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([38028357, 3, 4, 5],"float32"), axis=tuple(1,2,), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([38028357, 3, 4, 5],"float32"), axis=tuple(1,2,3,), keepdim=False, mode="min", )
paddle.nanquantile(Tensor([325957340, 7],"float32"), q=0.5, axis=1, )
paddle.nansum(Tensor([2, 1140850690],"float32"), )
paddle.nansum(Tensor([2, 1140850690],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([2, 1140850690],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([2, 1140850690],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 1140850690],"float32"), axis=list[0,], keepdim=True, name=None, )
paddle.nansum(Tensor([2, 1140850690],"float32"), axis=list[1,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 1140850690],"float32"), axis=tuple(0,1,), keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=list[0,2,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=list[2,], keepdim=True, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=list[], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=list[0,2,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=list[2,], keepdim=True, name=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=list[], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=list[0,2,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=list[2,], keepdim=True, name=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=list[], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.nansum(Tensor([2281701379],"float32"), axis=0, )
paddle.nansum(Tensor([2281701379],"float32"), axis=list[0,], keepdim=False, name=None, )
paddle.nansum(Tensor([3, 760567127],"float32"), axis=None, )
paddle.nansum(Tensor([3, 760567127],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([3, 760567127],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=list[0,2,], keepdim=False, name=None, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=list[2,], keepdim=True, name=None, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=list[], keepdim=False, name=None, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.nansum(Tensor([456340276, 5],"float32"), axis=None, )
paddle.nansum(Tensor([456340276, 5],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([456340276, 5],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.nansum(Tensor([570425345, 4],"float32"), )
paddle.nansum(Tensor([760567127, 3],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([760567127, 3],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([760567127, 3],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([760567127, 3],"float32"), axis=list[0,], keepdim=True, name=None, )
paddle.nansum(Tensor([760567127, 3],"float32"), axis=list[1,], keepdim=False, name=None, )
paddle.nansum(Tensor([760567127, 3],"float32"), axis=tuple(0,1,), keepdim=False, name=None, )
paddle.neg(Tensor([10, 20, 11408507],"float32"), )
paddle.neg(Tensor([10, 228170138, 1],"float32"), )
paddle.neg(Tensor([114085069, 20, 1],"float32"), )
paddle.neg(Tensor([285212673, 8],"float32"), )
paddle.neg(Tensor([285212673, 8],"int32"), )
paddle.neg(Tensor([32, 134217729],"float16"), )
paddle.neg(Tensor([32, 134217729],"int16"), )
paddle.neg(Tensor([32, 134217729],"int8"), )
paddle.neg(Tensor([32, 71303169],"float32"), )
paddle.neg(Tensor([32, 71303169],"int32"), )
paddle.neg(Tensor([4456449, 16, 32],"float32"), )
paddle.neg(Tensor([536870913, 8],"float16"), )
paddle.neg(Tensor([536870913, 8],"int16"), )
paddle.neg(Tensor([536870913, 8],"int8"), )
paddle.neg(Tensor([8, 16, 17825793],"float32"), )
paddle.neg(Tensor([8, 8912897, 32],"float32"), )
paddle.neg(x=Tensor([119304648, 6, 6],"float16"), )
paddle.neg(x=Tensor([380283564, 6],"float32"), )
paddle.neg(x=Tensor([380283564, 6],"int32"), )
paddle.neg(x=Tensor([6, 119304648, 6],"float16"), )
paddle.neg(x=Tensor([6, 380283564],"float32"), )
paddle.neg(x=Tensor([6, 380283564],"int32"), )
paddle.neg(x=Tensor([6, 6, 119304648],"float16"), )
paddle.neg(x=Tensor([6, 715827883],"float16"), )
paddle.neg(x=Tensor([6, 715827883],"int16"), )
paddle.neg(x=Tensor([6, 715827883],"int8"), )
paddle.neg(x=Tensor([715827883, 6],"float16"), )
paddle.neg(x=Tensor([715827883, 6],"int16"), )
paddle.neg(x=Tensor([715827883, 6],"int8"), )
paddle.negative(Tensor([2, 107374183, 4, 5],"float16"), )
paddle.negative(Tensor([2, 107374183, 4, 5],"int16"), )
paddle.negative(Tensor([2, 3, 143165577, 5],"float16"), )
paddle.negative(Tensor([2, 3, 143165577, 5],"int16"), )
paddle.negative(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.negative(Tensor([2, 3, 4, 178956971],"int16"), )
paddle.negative(Tensor([2, 3, 4, 95070891],"float32"), )
paddle.negative(Tensor([2, 3, 4, 95070891],"int32"), )
paddle.negative(Tensor([2, 3, 76056713, 5],"float32"), )
paddle.negative(Tensor([2, 3, 76056713, 5],"int32"), )
paddle.negative(Tensor([2, 57042535, 4, 5],"float32"), )
paddle.negative(Tensor([2, 57042535, 4, 5],"int32"), )
paddle.negative(Tensor([38028357, 3, 4, 5],"float32"), )
paddle.negative(Tensor([38028357, 3, 4, 5],"int32"), )
paddle.negative(Tensor([71582789, 3, 4, 5],"float16"), )
paddle.negative(Tensor([71582789, 3, 4, 5],"int16"), )
paddle.nextafter(Tensor([2, 3, 4, 95070891],"float32"), Tensor([2, 3, 4, 95070891],"float32"), )
paddle.nextafter(Tensor([2, 3, 76056713, 5],"float32"), Tensor([2, 3, 76056713, 5],"float32"), )
paddle.nextafter(Tensor([2, 57042535, 4, 5],"float32"), Tensor([2, 57042535, 4, 5],"float32"), )
paddle.nextafter(Tensor([38028357, 3, 4, 5],"float32"), Tensor([38028357, 3, 4, 5],"float32"), )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([10316, 1536, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 1024, 185686],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 11883862, 16],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 256, 742742],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 3880445, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([124, 1536, 11980],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([124, 375527, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([124, 768, 23960],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([128, 1536, 11606],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([128, 363792, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([128, 768, 23211],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([15474, 1024, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([16, 1024, 139265],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([16, 2910334, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([17685, 1024, 126],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([178956971, 3, 8],"float16"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 142606337, 8],"float32"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 268435457, 8],"float16"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 3, 380283564],"float32"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 3, 715827883],"float16"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 35651585, 32],"float32"), 16, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 35651585, 32],"float32"), 16, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 35651585, 32],"float32"), output_size=16, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([23767723, 3, 32],"float32"), 16, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([23767723, 3, 32],"float32"), 16, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([23767723, 3, 32],"float32"), output_size=16, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([28, 1536, 53053],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([28, 565899, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([30316, 1536, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([32, 1536, 46422],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([32, 495161, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([35369, 512, 126],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([4, 1024, 557057],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([4, 11641334, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([4, 1536, 371371],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([4, 3961288, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([45474, 1024, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([557057, 256, 16],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([60, 1024, 37138],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([60, 264086, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([60, 768, 49517],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([60, 776089, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([60632, 768, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([64, 1024, 34817],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([64, 247581, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([64, 727584, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([64, 768, 46422],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([7, 1024, 318318],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([7, 2586964, 126],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([7, 512, 636636],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([8, 1536, 185686],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([8, 5820667, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([95070891, 3, 8],"float32"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([178956971, 3, 8],"float16"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([2, 142606337, 8],"float32"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([2, 268435457, 8],"float16"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([2, 3, 380283564],"float32"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([2, 3, 715827883],"float16"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([95070891, 3, 8],"float32"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 1114113, 2],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 111412, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 117275, 19],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 123791, 18],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 14, 159159],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 159159, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 18, 123791],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 19, 117275],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 2, 1114113],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 20, 111412],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 11641334, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 32, 557057],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 32, 557057],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 32, 557057],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 32, 557057],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 557057, 32],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 557057, 32],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 557057, 32],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 557057, 32],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 139265, 128, 128],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 139265, 128, 128],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 139265, 128, 128],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 10, 1426064],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 11, 1296422],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 1296422, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 1426064, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 16, 891290],"float32"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 16, 891290],"float32"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 18, 792258],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 19, 750560],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 20, 713032],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 445645, 32],"float32"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 713032, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 750560, 19],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 792258, 18],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 18857037, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 159159, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 17409, 64],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 62, 17970],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 64, 17409],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 7, 159159],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 8705, 128],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2228225, 32, 32],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2228225, 32, 32],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2228225, 32, 32],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2228225, 32, 32],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 22817014, 10, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 278529, 64, 128],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 4456449, 16, 32],"float32"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 4456449, 16, 32],"float32"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 46565335, 7, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 128, 34817],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 128, 34817],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 128, 34817],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 34817, 128],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 34817, 128],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 34817, 128],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 557057, 64, 64],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 570425345, 2, 2],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 5704254, 20, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 5704254, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 575026, 62, 64],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 6320503, 19, 19],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 6320503, 19, 19],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 7042289, 18, 18],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 7042289, 18, 18],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1024, 2048, 156, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1024, 2048, 7, 156],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1024, 45474, 7, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([11369, 1024, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([11369, 64, 56, 56],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([117857, 160, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 1024, 218, 80],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 1024, 4, 4353],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 128, 28, 4974],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 128, 4974, 28],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 22737, 28, 28],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 320, 14, 3979],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 320, 3979, 14],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 512, 4974, 7],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 512, 7, 4974],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 55706, 4, 80],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 5685, 56, 56],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 64, 4974, 56],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 64, 56, 4974],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([13, 256, 12243, 56],"float32"), output_size=list[7,7,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([13, 256, 56, 12243],"float32"), output_size=list[7,7,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([13, 55968, 56, 56],"float32"), output_size=list[7,7,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([137, 2048, 64, 128],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([142607, 160, 10, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([14855, 480, 4, 80],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([15521779, 3, 7, 7],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([15521779, 3, 7, 7],"float32"), output_size=list[None,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([17409, 128, 32, 32],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([17409, 128, 32, 32],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([17409, 128, 32, 32],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([17409, 128, 32, 32],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([178258, 256, 2, 25],"float32"), output_size=list[1,25,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1950, 2048, 7, 82],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1950, 2048, 82, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1950, 23880, 7, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 134217729, 4, 4],"float16"), output_size=list[1,1,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 134217729, 4, 4],"float16"), output_size=list[1,4,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 134217729, 4, 4],"float16"), output_size=list[2,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 23282668, 7, 7],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 23282668, 7, 7],"float32"), output_size=list[None,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 178956971, 4],"float16"), output_size=list[1,1,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 178956971, 4],"float16"), output_size=list[1,4,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 178956971, 4],"float16"), output_size=list[2,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 178956971, 4],"float16"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 178956971],"float16"), output_size=list[1,1,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 178956971],"float16"), output_size=list[1,4,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 178956971],"float16"), output_size=list[2,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 178956971],"float16"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 95070891],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 54326224, 7],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 54326224],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 54326224],"float32"), output_size=list[None,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 95070891, 4],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 318318, 7],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 7, 318318],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 71303169, 4, 4],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2012, 2048, 7, 80],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2012, 2048, 80, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2012, 23144, 7, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2022, 2048, 7, 79],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2022, 2048, 79, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2022, 23030, 7, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2036, 2048, 7, 79],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2036, 2048, 79, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2036, 22871, 7, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([22737, 128, 28, 28],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([22737, 2048, 7, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([22737, 2048, 7, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([273, 2048, 64, 64],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([273, 512, 128, 128],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([273, 512, 128, 128],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([273, 512, 128, 128],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([27853, 160, 16, 32],"float32"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([27853, 160, 16, 32],"float32"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([281, 2048, 62, 64],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2843, 256, 56, 56],"float32"), output_size=list[7,7,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([35652, 160, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([36380, 320, 14, 14],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([39504, 160, 19, 19],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 1024, 4, 139265],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 1114113, 16, 32],"float32"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 1114113, 16, 32],"float32"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 139265, 32],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 139265, 32],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 139265, 32],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 32, 139265],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 32, 139265],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 32, 139265],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 160, 111412, 32],"float32"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 160, 111412, 32],"float32"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 160, 16, 222823],"float32"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 160, 16, 222823],"float32"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 34817, 128, 128],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 34817, 128, 128],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 34817, 128, 128],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 480, 14855, 80],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 480, 4, 297097],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 512, 128, 8705],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 512, 128, 8705],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 512, 128, 8705],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 512, 8705, 128],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 512, 8705, 128],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 512, 8705, 128],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 557057, 32, 32],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 557057, 32, 32],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 557057, 32, 32],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([44015, 160, 18, 18],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([47535446, 3, 4, 4],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([512, 256, 2, 8705],"float32"), output_size=list[1,25,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([512, 256, 697, 25],"float32"), output_size=list[1,25,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([512, 89129, 2, 25],"float32"), output_size=list[1,25,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([557057, 1024, 2, 2],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([5571, 1024, 20, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([6173, 1024, 19, 19],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([6878, 1024, 18, 18],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([6964, 1024, 4, 80],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([89478486, 3, 4, 4],"float16"), output_size=list[1,1,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([89478486, 3, 4, 4],"float16"), output_size=list[1,4,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([89478486, 3, 4, 4],"float16"), output_size=list[2,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([96, 480, 4, 12380],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([96, 480, 619, 80],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([96, 74275, 4, 80],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([15521779, 3, 7, 7],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([15521779, 3, 7, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 134217729, 4, 4],"float16"), output_size=list[1,1,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 134217729, 4, 4],"float16"), output_size=list[1,4,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 134217729, 4, 4],"float16"), output_size=list[2,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 23282668, 7, 7],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 23282668, 7, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 178956971, 4],"float16"), output_size=list[1,1,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 178956971, 4],"float16"), output_size=list[1,4,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 178956971, 4],"float16"), output_size=list[2,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 178956971, 4],"float16"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 4, 178956971],"float16"), output_size=list[1,1,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 4, 178956971],"float16"), output_size=list[1,4,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 4, 178956971],"float16"), output_size=list[2,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 4, 178956971],"float16"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 4, 95070891],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 54326224, 7],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 7, 54326224],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 7, 54326224],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 95070891, 4],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 71303169, 4, 4],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([47535446, 3, 4, 4],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([89478486, 3, 4, 4],"float16"), output_size=list[1,1,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([89478486, 3, 4, 4],"float16"), output_size=list[1,4,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([89478486, 3, 4, 4],"float16"), output_size=list[2,3,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 2037234, 16, 7, 10],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 2263593, 16, 7, 9],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 2546542, 16, 7, 8],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 2910334, 16, 7, 7],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 18569, 10],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 20632, 9],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 23211, 8],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 26527, 7],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 7, 26527],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 42443, 7, 10],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 47159, 7, 9],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 53053, 7, 8],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 60632, 7, 7],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 139265, 8, 32, 32],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 262145, 8, 32, 32],"float16"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 262145, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 262145, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 1485483, 32],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 1485483],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2653, 768, 16, 7, 10],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2948, 768, 16, 7, 9],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([3316, 768, 16, 7, 8],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([3790, 768, 16, 7, 7],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 139265, 8, 32, 32],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 371371, 32, 32],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 1485483, 32],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 1485483],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([92843, 3, 8, 32, 32],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_log_softmax_with_loss(Tensor([142606337, 16],"float32"), Tensor([128],"int64"), Tensor([16, 8],"float32"), list[list[Tensor([16, 8],"float32"),Tensor([8, 5],"float32"),],list[Tensor([16, 4],"float32"),Tensor([4, 5],"float32"),],list[Tensor([16, 2],"float32"),Tensor([2, 5],"float32"),],], list[5,10,15,20,], None, )
paddle.nn.functional.adaptive_log_softmax_with_loss(Tensor([285212673, 8],"float32"), Tensor([8],"int64"), Tensor([8, 3],"float32"), list[list[Tensor([8, 4],"float32"),Tensor([4, 2],"float32"),],], list[2,4,], None, )
paddle.nn.functional.adaptive_log_softmax_with_loss(Tensor([8, 8],"float32"), Tensor([8],"int64"), Tensor([8, 285212673],"float32"), list[list[Tensor([8, 4],"float32"),Tensor([4, 2],"float32"),],], list[2,4,], None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 142606337, 8],"float32"), 4, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 3, 380283564],"float32"), 16, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 3, 380283564],"float32"), 4, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 3, 380283564],"float32"), output_size=16, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 3, 715827883],"float16"), 4, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 3, 715827883],"float16"), 8, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 35651585, 32],"float32"), 16, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 35651585, 32],"float32"), output_size=16, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 67108865, 32],"float16"), 8, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([23767723, 3, 32],"float32"), 16, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([23767723, 3, 32],"float32"), output_size=16, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([44739243, 3, 32],"float16"), 8, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([95070891, 3, 8],"float32"), 4, False, None, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([2, 142606337, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([2, 3, 380283564],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([2, 3, 715827883],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([2, 3, 715827883],"float16"), output_size=8, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([2, 67108865, 32],"float16"), output_size=8, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([44739243, 3, 32],"float16"), output_size=8, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([95070891, 3, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([1, 2, 268435457, 8],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([1, 2, 8, 268435457],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([1, 67108865, 8, 8],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([15521779, 3, 7, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([15521779, 3, 7, 7],"float32"), output_size=list[2,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([15521779, 3, 7, 7],"float32"), output_size=list[3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([15521779, 3, 7, 7],"float32"), output_size=list[None,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 1, 142606337, 8],"float32"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 1, 268435457, 8],"float16"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 1, 8, 142606337],"float32"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 1, 8, 268435457],"float16"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 17825793, 8, 8],"float32"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 23282668, 7, 7],"float32"), output_size=list[2,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 23282668, 7, 7],"float32"), output_size=list[3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 23282668, 7, 7],"float32"), output_size=list[None,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 54326224, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 54326224, 7],"float32"), output_size=list[2,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 54326224, 7],"float32"), output_size=list[3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 54326224, 7],"float32"), output_size=list[None,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 7, 54326224],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 7, 54326224],"float32"), output_size=list[2,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 7, 54326224],"float32"), output_size=list[3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 7, 54326224],"float32"), output_size=list[None,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 33554433, 8, 8],"float16"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([33554433, 2, 8, 8],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([35651585, 1, 8, 8],"float32"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([67108865, 1, 8, 8],"float16"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([1, 2, 268435457, 8],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([1, 2, 8, 268435457],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([1, 67108865, 8, 8],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([15521779, 3, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([15521779, 3, 7, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([15521779, 3, 7, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([15521779, 3, 7, 7],"float32"), return_mask=False, output_size=list[3,3,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 1, 142606337, 8],"float32"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 1, 268435457, 8],"float16"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 1, 8, 142606337],"float32"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 1, 8, 268435457],"float16"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 17825793, 8, 8],"float32"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 23282668, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 23282668, 7, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 23282668, 7, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 23282668, 7, 7],"float32"), return_mask=False, output_size=list[3,3,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 54326224, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 54326224, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 54326224, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 54326224, 7],"float32"), return_mask=False, output_size=list[3,3,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 7, 54326224],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 7, 54326224],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 7, 54326224],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 7, 54326224],"float32"), return_mask=False, output_size=list[3,3,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 33554433, 8, 8],"float16"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([33554433, 2, 8, 8],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([35651585, 1, 8, 8],"float32"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([67108865, 1, 8, 8],"float16"), output_size=3, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 2, 17825793, 8, 8],"float32"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 2, 33554433, 8, 8],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 2, 8, 17825793, 8],"float32"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 2, 8, 33554433, 8],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 2, 8, 8, 17825793],"float32"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 2, 8, 8, 33554433],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 4456449, 8, 8, 8],"float32"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 8388609, 8, 8, 8],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[2,3,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[3,3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[None,3,None,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[2,3,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[3,3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[None,3,None,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[2,3,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[3,3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[None,3,None,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[2,3,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[3,3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[None,3,None,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2228225, 2, 8, 8, 8],"float32"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[2,3,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([4194305, 2, 8, 8, 8],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 2, 17825793, 8, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 2, 33554433, 8, 8],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 2, 8, 17825793, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 2, 8, 33554433, 8],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 2, 8, 8, 17825793],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 2, 8, 8, 33554433],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 4456449, 8, 8, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 8388609, 8, 8, 8],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2228225, 2, 8, 8, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([4194305, 2, 8, 8, 8],"float16"), output_size=4, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 34817, 64],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 35940, 62],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 37138, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 40, 55706],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 41264, 54],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 42, 53053],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 44, 50642],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1056344, 40, 54],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 11641334, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 128, 20, 891290],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 128, 891290, 20],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 142606337, 4, 4],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 2, 285212673, 4],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 2, 4, 285212673],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 22817014, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 253522376, 3, 3],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 256, 10, 891290],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 256, 891290, 10],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 4, 190141782, 3],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 4, 3, 190141782],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 512, 5, 891290],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 512, 891290, 5],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 5704254, 20, 20],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 8, 14, 20372334],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 8, 20372334, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 848848, 42, 64],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 864281, 44, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 91268056, 5, 5],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 920041, 40, 62],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 950709, 40, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([10186167, 1, 7, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([1032, 1024, 40, 54],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([11024, 1056, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([11369, 1024, 14, 14],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([11883862, 3, 8, 8],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([1296422, 1, 40, 44],"float32"), kernel_size=tuple(1,5,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([1296422, 1, 44, 40],"float32"), kernel_size=tuple(5,1,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([13, 1, 4, 43878873],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([13, 1, 5484860, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([13, 1, 7, 25073642],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([13, 1371215, 4, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([13, 783552, 7, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([139265, 1024, 4, 4],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1398102, 3, 32, 32],"float16"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1398102, 3, 32, 32],"float16"), kernel_size=list[3,3,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1455167, 8, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 1024, 17409, 8],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 1024, 34817, 4],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 1024, 4, 34817],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 1024, 8, 17409],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 128, 17409, 64],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 128, 256, 4353],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 128, 32, 34817],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 128, 34817, 32],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 128, 4353, 256],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 128, 64, 17409],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 139265, 32, 32],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 2177, 256, 256],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 2228225, 8, 8],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 34817, 64, 64],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 8912897, 4, 4],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([17409, 128, 32, 32],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([17409, 512, 16, 16],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([17825793, 1, 4, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([178258, 512, 5, 5],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([185686, 3, 64, 64],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([18569, 384, 4, 80],"float32"), list[4,2,], )
paddle.nn.functional.avg_pool2d(Tensor([18569, 512, 3, 80],"float32"), kernel_size=list[2,2,], stride=list[2,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([18569, 512, 3, 80],"float32"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1056, 14, 77168],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1056, 77168, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1114113, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1114113, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], divisor_override=4, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1114113, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", )
paddle.nn.functional.avg_pool2d(Tensor([2, 1114113, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 134217729, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 134217729, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 134217729, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=True, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 134217729, 4, 4],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 134217729, 4, 4],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 2097153, 32, 32],"float16"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 2097153, 32, 32],"float16"), kernel_size=list[3,3,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 11883862, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 11883862, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], divisor_override=4, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 11883862, 32],"float32"), kernel_size=2, stride=None, padding="SAME", )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 11883862, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 178956971, 4],"float16"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 178956971, 4],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 178956971, 4],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=True, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 178956971, 4],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 178956971, 4],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 22369622, 32],"float16"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 22369622, 32],"float16"), kernel_size=list[3,3,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 11883862],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 11883862],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], divisor_override=4, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 11883862],"float32"), kernel_size=2, stride=None, padding="SAME", )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 11883862],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 22369622],"float16"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 22369622],"float16"), kernel_size=list[3,3,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 178956971],"float16"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 178956971],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 178956971],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=True, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 178956971],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 178956971],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 512, 13, 171402],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 512, 171402, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 528, 13, 166208],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 528, 166208, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 5820667, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 6750596, 13, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([22737, 128, 28, 28],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([25571, 528, 13, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 11142, 16, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 128, 1393, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 128, 8, 8705],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 22283, 8, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 256, 4, 8705],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 256, 697, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 44565, 4, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 64, 16, 8705],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 64, 2786, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([26370, 512, 13, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([273, 128, 256, 256],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([27984, 104, 28, 28],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2843, 256, 56, 56],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2970966, 3, 16, 16],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([3, 1, 17285617, 44],"float32"), kernel_size=tuple(1,5,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([3, 1, 44, 17285617],"float32"), kernel_size=tuple(5,1,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([3, 432141, 40, 44],"float32"), kernel_size=tuple(1,5,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([3, 432141, 44, 40],"float32"), kernel_size=tuple(5,1,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([30316, 1536, 7, 7],"float32"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 1024, 14, 4974],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 1024, 4974, 14],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 22737, 56, 56],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 256, 4974, 56],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 256, 56, 4974],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 363792, 14, 14],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 512, 28, 4974],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 512, 4974, 28],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 90948, 28, 28],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([34817, 1024, 8, 8],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 1782580, 4, 80],"float32"), list[4,2,], )
paddle.nn.functional.avg_pool2d(Tensor([4, 384, 18569, 80],"float32"), list[4,2,], )
paddle.nn.functional.avg_pool2d(Tensor([4, 384, 4, 371371],"float32"), list[4,2,], )
paddle.nn.functional.avg_pool2d(Tensor([4353, 128, 64, 64],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4353, 128, 64, 64],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([44565, 128, 20, 20],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([44565, 128, 8, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([44565, 256, 4, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([44565, 64, 16, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([47535446, 3, 4, 4],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([55968, 208, 14, 14],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([56, 159159, 16, 16],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 2546542, 4, 4],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 16, 848848],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 1697695, 8],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 212212, 64],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 32, 424424],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 3395389, 4],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 4, 3395389],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 424424, 32],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 64, 212212],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 8, 1697695],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 848848, 16],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 39790, 32, 32],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 636636, 8, 8],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 9948, 64, 64],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([5685, 512, 28, 28],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([63380594, 4, 3, 3],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 14, 2487],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 2487, 14],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 104, 12243, 28],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 104, 28, 12243],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 28, 9948],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 4353, 64],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 64, 4353],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 9948, 28],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 139265, 16, 16],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 148549, 3, 80],"float32"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1536, 3316, 7],"float32"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1536, 7, 3316],"float32"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 181896, 14, 14],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 181896, 14, 14],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 208, 12243, 14],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 208, 14, 12243],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 256, 32, 4353],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 256, 4353, 32],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 34817, 32, 32],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 45474, 28, 28],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 45474, 28, 28],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 512, 16, 4353],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 512, 3, 23211],"float32"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 512, 4353, 16],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 512, 871, 80],"float32"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 727584, 7, 7],"float32"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 8705, 64, 64],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([71303169, 2, 4, 4],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], divisor_override=4, )
paddle.nn.functional.avg_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", )
paddle.nn.functional.avg_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8, 1188387, 3, 80],"float32"), kernel_size=list[2,2,], stride=list[2,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8, 512, 3, 185686],"float32"), kernel_size=list[2,2,], stride=list[2,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8, 512, 6964, 80],"float32"), kernel_size=list[2,2,], stride=list[2,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([829, 1024, 42, 64],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([845, 1024, 44, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8705, 256, 32, 32],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([89129, 256, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([89478486, 3, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([89478486, 3, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([89478486, 3, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=True, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([89478486, 3, 4, 4],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([89478486, 3, 4, 4],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([899, 1024, 40, 62],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([929, 1024, 40, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(x=Tensor([1398102, 3, 32, 32],"float16"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([1398102, 3, 32, 32],"float16"), kernel_size=list[3,3,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 1114113, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 134217729, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 134217729, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 134217729, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,], ceil_mode=True, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 134217729, 4, 4],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 134217729, 4, 4],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 2097153, 32, 32],"float16"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 2097153, 32, 32],"float16"), kernel_size=list[3,3,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 11883862, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 178956971, 4],"float16"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 178956971, 4],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 178956971, 4],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,], ceil_mode=True, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 178956971, 4],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 178956971, 4],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 22369622, 32],"float16"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 22369622, 32],"float16"), kernel_size=list[3,3,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 32, 11883862],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 32, 22369622],"float16"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 32, 22369622],"float16"), kernel_size=list[3,3,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 178956971],"float16"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 178956971],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 178956971],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,], ceil_mode=True, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 178956971],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 178956971],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), )
paddle.nn.functional.avg_pool2d(x=Tensor([742742, 3, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([89478486, 3, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([89478486, 3, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([89478486, 3, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,], ceil_mode=True, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([89478486, 3, 4, 4],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([89478486, 3, 4, 4],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), )
paddle.nn.functional.avg_pool3d(Tensor([1485483, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 11184811, 8, 8, 3],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 2228225, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 371371, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 371371, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 371371, 32],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 371371, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 371371, 32],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 5941931, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 5941931],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 8, 8, 11184811, 3],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 8, 8, 8, 4194305],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([203724, 1, 40, 40, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([203724, 1, 7, 40, 40],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 8, 8, 8, 3],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 158452, 3, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 2716312, 40, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 3, 1600, 158452],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 40, 40, 475355],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 475355, 40, 40],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 67908, 1600, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 3, 36217483],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 40, 2716312],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 67908, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 22636, 3, 1600, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 22636, 7, 3, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 67908, 40, 40, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 67908, 7, 40, 40],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([67908, 1, 3, 1600, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([67908, 1, 7, 3, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(x=Tensor([1485483, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 11184811, 8, 8, 3],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 2228225, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 5941931, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 5941931],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 8, 8, 11184811, 3],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 8, 8, 8, 4194305],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 8, 8, 8, 3],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([5685, 2048, 4, 7, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([5685, 256, 32, 7, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 1455167, 4, 7, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 181896, 32, 7, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 2048, 2843, 7, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 2048, 4, 4974, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 2048, 4, 7, 4974],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 256, 22737, 7, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 256, 32, 4974, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 256, 32, 7, 4974],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.batch_norm(Tensor([1, 1024, 2228225],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1114113, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([1114113, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1114113, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1114113, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1114113, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1114113, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1114113, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([119304648, 4, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([119304648, 4, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([119304648, 4, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1320430, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1320430, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 1114113, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 1114113, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 1114113, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 1048577],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 557057],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 557057],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 557057],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 2097153, 8],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([19015, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([19015, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([19015, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([19015, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 570425345],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 380283564, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 134217729, 4, 4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 134217729, 4, 4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 238609295, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 238609295, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 238609295, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 178956971, 4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 178956971, 4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 178956971, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 178956971, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 178956971, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2097153, 16, 16, 8],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([30, 25353, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 25353, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 31691, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 31691, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 31691, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 31691, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 38029],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 38029],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([380283564, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 7922575],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 7922575],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 3961288, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 3961288, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 71303169],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([57042535, 40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 1114113, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 1114113, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2228225],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2228225],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2228225, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2228225, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2228225, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2228225, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8705, 1024, 256],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([8912897, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8912897, 8, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([89478486, 3, 4, 4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([89478486, 3, 4, 4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(x=Tensor([1431655766, 1, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), )
paddle.nn.functional.batch_norm(x=Tensor([1431655766, 1, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([1431655766, 1, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 1073741825],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 1073741825],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 1073741825],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 1073741825],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 570425345],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2147483649],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2147483649],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2147483649],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 380283564, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 715827883, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 715827883, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 715827883, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 715827883, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([380283564, 1, 2, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([715827883, 1, 2, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([715827883, 1, 2, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([715827883, 1, 2, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([715827883, 1, 2, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 152113426, 15],"float32"), Tensor([1, 152113426, 15],"float32"), weight=Tensor([1, 152113426, 15],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 21504, 106106],"float32"), Tensor([1, 21504, 106106],"float32"), weight=Tensor([1, 21504, 106106],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 228170138, 10],"float32"), Tensor([1, 228170138, 10],"float32"), weight=Tensor([1, 228170138, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 24276, 93991],"float32"), Tensor([1, 24276, 93991],"float32"), weight=Tensor([1, 24276, 93991],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 27216, 83837],"float32"), Tensor([1, 27216, 83837],"float32"), weight=Tensor([1, 27216, 83837],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([10611, 21504, 10],"float32"), Tensor([10611, 21504, 10],"float32"), weight=Tensor([10611, 21504, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([7074, 21504, 15],"float32"), Tensor([7074, 21504, 15],"float32"), weight=Tensor([7074, 21504, 15],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8384, 27216, 10],"float32"), Tensor([8384, 27216, 10],"float32"), weight=Tensor([8384, 27216, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([9400, 24276, 10],"float32"), Tensor([9400, 24276, 10],"float32"), weight=Tensor([9400, 24276, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 81489335],"float32"), Tensor([1, 28, 81489335],"float32"), weight=Tensor([1, 1, 81489335],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 81489335, 28],"float32"), Tensor([1, 81489335, 28],"float32"), weight=Tensor([1, 81489335, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 8148934],"float32"), Tensor([10, 28, 8148934],"float32"), weight=Tensor([10, 1, 8148934],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 8148934, 28],"float32"), Tensor([10, 8148934, 28],"float32"), weight=Tensor([10, 8148934, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([106, 28, 768768],"float32"), Tensor([106, 28, 768768],"float32"), weight=Tensor([106, 1, 768768],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([106, 768768, 28],"float32"), Tensor([106, 768768, 28],"float32"), weight=Tensor([106, 768768, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 28, 7408122],"float32"), Tensor([11, 28, 7408122],"float32"), weight=Tensor([11, 1, 7408122],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 7408122, 28],"float32"), Tensor([11, 7408122, 28],"float32"), weight=Tensor([11, 7408122, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11641334, 14, 14],"float32"), Tensor([11641334, 14, 14],"float32"), weight=Tensor([11641334, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2910334, 28, 28],"float32"), Tensor([2910334, 28, 28],"float32"), weight=Tensor([2910334, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.celu(Tensor([190141782, 3, 4],"float32"), 1.0, None, )
paddle.nn.functional.celu(Tensor([2, 2147483649],"float16"), -0.4, None, )
paddle.nn.functional.celu(Tensor([2, 285212673, 4],"float32"), 1.0, None, )
paddle.nn.functional.celu(Tensor([2, 3, 380283564],"float32"), 1.0, None, )
paddle.nn.functional.celu(Tensor([2, 3, 715827883],"float16"), 1.0, None, )
paddle.nn.functional.celu(Tensor([2, 4, 536870913],"float16"), 0.2, None, )
paddle.nn.functional.celu(Tensor([2, 4, 536870913],"float16"), 1.0, None, )
paddle.nn.functional.celu(Tensor([2, 536870913, 4],"float16"), 0.2, None, )
paddle.nn.functional.celu(Tensor([2, 536870913, 4],"float16"), 1.0, None, )
paddle.nn.functional.celu(Tensor([2147483649, 2],"float16"), -0.4, None, )
paddle.nn.functional.celu(Tensor([268435457, 4, 4],"float16"), 0.2, None, )
paddle.nn.functional.celu(Tensor([268435457, 4, 4],"float16"), 1.0, None, )
paddle.nn.functional.celu(Tensor([357913942, 3, 4],"float16"), 1.0, None, )
paddle.nn.functional.celu(x=Tensor([190141782, 3, 4],"float32"), )
paddle.nn.functional.celu(x=Tensor([2, 2147483649],"float16"), alpha=-0.4, )
paddle.nn.functional.celu(x=Tensor([2, 285212673, 4],"float32"), )
paddle.nn.functional.celu(x=Tensor([2, 3, 380283564],"float32"), )
paddle.nn.functional.celu(x=Tensor([2, 3, 715827883],"float16"), )
paddle.nn.functional.celu(x=Tensor([2, 4, 536870913],"float16"), )
paddle.nn.functional.celu(x=Tensor([2, 4, 536870913],"float16"), alpha=0.2, )
paddle.nn.functional.celu(x=Tensor([2, 536870913, 4],"float16"), )
paddle.nn.functional.celu(x=Tensor([2, 536870913, 4],"float16"), alpha=0.2, )
paddle.nn.functional.celu(x=Tensor([2147483649, 2],"float16"), alpha=-0.4, )
paddle.nn.functional.celu(x=Tensor([268435457, 4, 4],"float16"), )
paddle.nn.functional.celu(x=Tensor([268435457, 4, 4],"float16"), alpha=0.2, )
paddle.nn.functional.celu(x=Tensor([357913942, 3, 4],"float16"), )
paddle.nn.functional.channel_shuffle(Tensor([2, 134217729, 4, 4],"float16"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([2, 134217729, 4, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 4, 134217729],"float16"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 4, 134217729],"float16"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 59652324, 9],"float16"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 59652324, 9],"float16"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 59652324, 4, 9],"float16"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([2, 59652324, 4, 9],"float16"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 4, 59652324],"float16"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 4, 59652324],"float16"), 3, "NCHW", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 59652324, 4],"float16"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 59652324, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.channel_shuffle(Tensor([29826162, 4, 4, 9],"float16"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([29826162, 4, 4, 9],"float16"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([29826162, 9, 4, 4],"float16"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([29826162, 9, 4, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.conv1d(Tensor([1, 1024, 2228225],"float32"), Tensor([1024, 1024, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 17825793],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 17825793],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 17825793],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 3, 760567127],"float32"), Tensor([4, 3, 3],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([10186167, 32, 7],"float32"), Tensor([32, 16, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([10186167, 7, 32],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 171402, 1024],"float32"), Tensor([32, 171402, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 24, 7313146],"float32"), Tensor([24, 12, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 5484860],"float32"), Tensor([32, 16, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 5484860, 32],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([152113426, 3, 5],"float32"), Tensor([4, 3, 3],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 1602319, 89],"float32"), Tensor([80, 1602319, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 1782580],"float32"), Tensor([80, 80, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([190141782, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([190141782, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([190141782, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([190141782, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([190141782, 4, 3],"float32"), Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 3, 380283564],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 380283564],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 380283564],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 380283564],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 380283564, 3],"float32"), Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([23767723, 16, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([23767723, 16, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([23767723, 6, 16],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([23767723, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([23767723, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([23767723, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([23767723, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([320464, 80, 89],"float32"), Tensor([80, 80, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 95070891],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 95070891],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 95070891],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 95070891],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 95070891],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 95070891, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 95070891, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([6790778, 24, 14],"float32"), Tensor([24, 12, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([743, 1024, 3000],"float32"), Tensor([1024, 1024, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 1114113],"float32"), Tensor([256, 64, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([89129, 256, 100],"float32"), Tensor([256, 64, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(x=Tensor([190141782, 3, 4],"float32"), weight=Tensor([1, 3, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([190141782, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([190141782, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([190141782, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([190141782, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([190141782, 4, 3],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([1, 3, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 380283564, 3],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 380283564],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 380283564],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 380283564],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 380283564],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 715827883],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 715827883],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 715827883],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 715827883],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 715827883],"float16"), Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 380283564, 3],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 715827883, 3],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 6, 16],"float32"), Tensor([6, 4, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 6, 16],"float32"), Tensor([6, 8, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([380283564, 2, 3],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([380283564, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([380283564, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([380283564, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([380283564, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([380283564, 3, 2],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([2],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 8, 47535446],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 95070891],"float32"), Tensor([6, 4, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 95070891],"float32"), Tensor([6, 8, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 95070891],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 95070891],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 95070891],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 95070891],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 95070891, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([715827883, 2, 3],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([715827883, 3, 2],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([715827883, 3, 2],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([715827883, 3, 2],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([715827883, 3, 2],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([178956971, 3, 8],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=list[4,4,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([178956971, 3, 8],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=list[list[0,0,],list[0,0,],list[3,4,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([178956971, 8, 3],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=list[list[0,0,],list[3,4,],list[0,0,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float32"), weight=Tensor([3, 253522376, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 253522376, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], output_padding=0, groups=1, dilation=2, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=list[1,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding="SaME", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding="vALiD", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=0, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=list[4,4,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=list[list[0,0,],list[0,0,],list[3,4,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 380283564, 3],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 715827883, 3],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 715827883, 3],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 715827883, 3],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=list[list[0,0,],list[3,4,],list[0,0,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([286331154, 3, 5],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding="SaME", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([286331154, 3, 5],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding="vALiD", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([380283564, 2, 3],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([380283564, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([380283564, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([380283564, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([380283564, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([380283564, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([380283564, 3, 2],"float32"), weight=Tensor([3, 2, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 2, 3],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 2, 3],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], output_padding=0, groups=1, dilation=2, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=list[1,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 222823],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 26],"float32"), Tensor([2228225, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 17409],"float32"), Tensor([12, 256, 1, 17409],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 17409],"float32"), Tensor([12, 256, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 17409, 128],"float32"), Tensor([12, 256, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 17409, 128],"float32"), Tensor([12, 256, 17409, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 85701, 26],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 69633],"float32"), Tensor([3, 128, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 69633],"float32"), Tensor([3, 128, 1, 69633],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 69633, 256],"float32"), Tensor([3, 128, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 69633, 256],"float32"), Tensor([3, 128, 69633, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 8705],"float32"), Tensor([24, 256, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 8705],"float32"), Tensor([24, 256, 1, 8705],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 69633],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 69633, 16],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 8705, 128],"float32"), Tensor([24, 256, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 8705, 128],"float32"), Tensor([24, 256, 8705, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 3395389],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 3395389],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 3395389, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 3395389, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 34817, 256, 256],"float32"), Tensor([3, 34817, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 4096, 16, 34817],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 4096, 34817, 16],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 8775775, 10, 26],"float32"), Tensor([256, 8775775, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1024, 1, 131, 17010],"float32"), Tensor([1, 1, 4, 17010],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 131, 17010],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 17010, 131],"float32"), Tensor([1, 1, 17010, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 17010, 131],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 130, 131, 131],"float32"), Tensor([1, 130, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1228, 32, 241, 241],"float32"), Tensor([32, 32, 1, 1],"float32"), Tensor([32],"float32"), )
paddle.nn.functional.conv2d(Tensor([132959, 1, 131, 131],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([137, 1024, 128, 128],"float32"), Tensor([12, 256, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1485483, 24, 8, 8],"float32"), Tensor([24, 24, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1485483, 6, 16, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1485483, 6, 16, 16],"float32"), Tensor([8, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([15158, 3, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([15158, 3, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([17409, 512, 16, 16],"float32"), Tensor([512, 512, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([19807, 512, 15, 15],"float32"), Tensor([512, 512, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([2, 192, 1485483, 4],"float32"), Tensor([384, 192, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 1485483, 4],"float32"), Tensor([48, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 1485483],"float32"), Tensor([384, 192, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 1485483],"float32"), Tensor([48, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 4],"float32"), Tensor([11883862, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 24, 8, 5941931],"float32"), Tensor([24, 24, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2177, 4096, 16, 16],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([273, 128, 256, 256],"float32"), Tensor([3, 128, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([2970966, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([2970966, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([2970966, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([2970966, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([2970966, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([2970966, 3, 16, 16],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 16, 2, 23767723],"float32"), Tensor([16, 16, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 16, 23767723, 2],"float32"), Tensor([16, 16, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([35651585, 16, 2, 2],"float32"), Tensor([16, 16, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 11883862, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 11883862, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 11883862, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 11883862, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 11883862, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 11883862, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 11883862, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 11883862, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 11883862, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 11883862, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 3, 11883862, 16],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 3, 16, 11883862],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 5941931],"float32"), Tensor([8, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 5941931, 16],"float32"), Tensor([8, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4353, 2048, 16, 16],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([64, 1, 1273271, 28],"float32"), Tensor([6, 1, 1273271, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 28, 1273271],"float32"), Tensor([6, 1, 3, 1273271],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 45474, 28, 28],"float32"), Tensor([6, 45474, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([69, 2048, 128, 128],"float32"), Tensor([24, 256, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([742742, 192, 4, 4],"float32"), Tensor([384, 192, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([742742, 192, 4, 4],"float32"), Tensor([48, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([74275, 128, 12, 20],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 1267612, 15, 15],"float32"), Tensor([512, 1267612, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 32, 241, 36983],"float32"), Tensor([32, 32, 1, 1],"float32"), Tensor([32],"float32"), )
paddle.nn.functional.conv2d(Tensor([8, 32, 36983, 241],"float32"), Tensor([32, 32, 1, 1],"float32"), Tensor([32],"float32"), )
paddle.nn.functional.conv2d(Tensor([8, 512, 15, 37138],"float32"), Tensor([512, 512, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 512, 16, 34817],"float32"), Tensor([512, 512, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 512, 34817, 16],"float32"), Tensor([512, 512, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 512, 37138, 15],"float32"), Tensor([512, 512, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8571, 1024, 10, 26],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(x=Tensor([100, 2535224, 3, 3],"float32"), weight=Tensor([36, 2535224, 1, 1],"float32"), )
paddle.nn.functional.conv2d(x=Tensor([100, 36, 211269, 3],"float32"), weight=Tensor([36, 36, 1, 1],"float32"), )
paddle.nn.functional.conv2d(x=Tensor([100, 36, 211269, 3],"float32"), weight=Tensor([36, 36, 211269, 1],"float32"), )
paddle.nn.functional.conv2d(x=Tensor([100, 36, 3, 211269],"float32"), weight=Tensor([36, 36, 1, 1],"float32"), )
paddle.nn.functional.conv2d(x=Tensor([100, 36, 3, 211269],"float32"), weight=Tensor([36, 36, 1, 211269],"float32"), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 95070891],"float32"), weight=Tensor([1, 3, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 95070891],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 95070891],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 95070891],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 95070891],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 95070891],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 95070891],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 95070891],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 95070891, 4],"float32"), weight=Tensor([1, 3, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 95070891, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 95070891, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 95070891, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 95070891, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 95070891, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 95070891, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 95070891, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 95070891, 3],"float32"), weight=Tensor([2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 95070891, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([47535446, 3, 4, 4],"float32"), weight=Tensor([1, 3, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([47535446, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([47535446, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([47535446, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([47535446, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([47535446, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([47535446, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([47535446, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([47535446, 4, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([7042289, 36, 3, 3],"float32"), weight=Tensor([36, 36, 1, 1],"float32"), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 139265],"float32"), Tensor([128, 3, 4, 4],"float32"), bias=Tensor([3],"float32"), padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 139265, 128],"float32"), Tensor([128, 3, 4, 4],"float32"), bias=Tensor([3],"float32"), padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 16, 16],"float32"), Tensor([2048, 123791, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 16, 16],"float32"), Tensor([2048, 512, 3, 726],"float32"), padding=0, stride=2, groups=4, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 16, 16],"float32"), Tensor([2048, 512, 726, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 16, 16],"float32"), Tensor([4096, 512, 3, 363],"float32"), padding=0, stride=2, groups=8, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 16, 16],"float32"), Tensor([4096, 512, 363, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 16, 16],"float32"), Tensor([4096, 61896, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.nn.functional.conv2d_transpose(Tensor([1089, 128, 128, 128],"float32"), Tensor([128, 3, 4, 4],"float32"), bias=Tensor([3],"float32"), padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 4, 3, 3],"float16"), Tensor([4, 2, 1, 1],"float16"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([1485483, 16, 16, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([1485483, 16, 16, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([1485483, 6, 16, 16],"float32"), Tensor([6, 4, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1485483, 6, 16, 16],"float32"), Tensor([6, 8, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,), output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1485483, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1485483, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1485483, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1485483, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([190141782, 3, 2, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), Tensor([1],"float32"), output_size=Tensor([2],"int64"), )
paddle.nn.functional.conv2d_transpose(Tensor([190141782, 3, 2, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([190141782, 3, 2, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=1, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([190141782, 3, 2, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([190141782, 3, 2, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([190141782, 3, 2, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([190141782, 3, 2, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 42253730, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 357913942],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 357913942],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 357913942],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 357913942, 3],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 357913942, 3],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 95070891, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 95070891, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 285212673, 2, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), Tensor([1],"float32"), output_size=Tensor([2],"int64"), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 190141782, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), Tensor([1],"float32"), output_size=Tensor([2],"int64"), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 190141782, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 190141782, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=1, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 190141782, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 190141782, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 190141782, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 190141782, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 190141782],"float32"), Tensor([3, 1, 3, 3],"float32"), Tensor([1],"float32"), output_size=Tensor([2],"int64"), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 190141782],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 190141782],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=1, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 190141782],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 190141782],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 190141782],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 190141782],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 190141782],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 190141782],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 2],"float32"), Tensor([253522376, 1, 3, 3],"float32"), Tensor([1],"float32"), output_size=Tensor([2],"int64"), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), Tensor([1],"float32"), output_size=Tensor([2281701379],"int64"), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 2],"float32"), Tensor([3, 84507459, 3, 3],"float32"), Tensor([1],"float32"), output_size=Tensor([2],"int64"), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 357913942, 2],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 357913942, 3, 2],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 178956971, 3],"float16"), Tensor([4, 2, 1, 1],"float16"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 3, 178956971],"float16"), Tensor([4, 2, 1, 1],"float16"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 6, 2, 2],"float32"), Tensor([6, 42253730, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 6, 2, 95070891],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 6, 2, 95070891],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 6, 95070891, 2],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 6, 95070891, 2],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 95070891, 2, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 95070891, 2, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2228225, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2228225, 4, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2228225, 4, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2228225, 4, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([238609295, 2, 3, 3],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([238609295, 2, 3, 3],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([238609295, 2, 3, 3],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([238609295, 3, 3, 2],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([377266, 32, 21, 9],"float32"), Tensor([32, 32, 5, 5],"float32"), bias=Tensor([32],"float32"), padding=2, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 11883862, 16, 3],"float32"), Tensor([3, 5, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 11883862, 3],"float32"), Tensor([3, 5, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 5941931, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 5941931, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 8912897, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 8912897, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 8912897],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 8912897],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 8912897],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 8912897, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 8912897, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 8912897, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 5941931, 16, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 5941931, 16, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 5941931],"float32"), Tensor([6, 4, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 5941931],"float32"), Tensor([6, 8, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,), output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 5941931],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 5941931],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 5941931],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 5941931],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 5941931, 16],"float32"), Tensor([6, 4, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 5941931, 16],"float32"), Tensor([6, 8, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,), output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 5941931, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 5941931, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 5941931, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 5941931, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 8912897, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 8912897, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([64, 32, 123791, 9],"float32"), Tensor([32, 32, 5, 5],"float32"), bias=Tensor([32],"float32"), padding=2, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([64, 32, 21, 53053],"float32"), Tensor([32, 32, 5, 5],"float32"), bias=Tensor([32],"float32"), padding=2, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([95070891, 2, 2, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([95070891, 2, 2, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([95070891, 6, 2, 2],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([95070891, 6, 2, 2],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([178956971, 6, 2, 2],"float16"), weight=Tensor([6, 1, 3, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,0,], output_padding=0, dilation=1, groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([190141782, 3, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([190141782, 3, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([190141782, 3, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, output_padding=0, dilation=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([190141782, 3, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,], dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 178956971, 2, 6],"float16"), weight=Tensor([6, 1, 3, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,0,], output_padding=0, dilation=1, groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 2, 178956971, 6],"float16"), weight=Tensor([6, 1, 3, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,0,], output_padding=0, dilation=1, groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 2, 2, 285212673],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=Tensor([2],"int32"), stride=2, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 2, 2, 6],"float32"), weight=Tensor([253522376, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=Tensor([2],"int32"), stride=2, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 2, 2, 6],"float32"), weight=Tensor([6, 1, 126761188, 3],"float32"), bias=Tensor([3],"float32"), output_size=Tensor([2],"int32"), stride=2, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 2, 2, 6],"float32"), weight=Tensor([6, 1, 3, 126761188],"float32"), bias=Tensor([3],"float32"), output_size=Tensor([2],"int32"), stride=2, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 2, 2, 6],"float32"), weight=Tensor([6, 42253730, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=Tensor([2],"int32"), stride=2, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 2, 95070891, 6],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=Tensor([2],"int32"), stride=2, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 2, 95070891, 6],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 178956971, 4],"float16"), weight=Tensor([3, 1, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding="vaLiD", output_padding=0, dilation=1, groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 190141782, 2],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 190141782, 2],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, output_padding=0, dilation=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 190141782, 2],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,], dilation=2, )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 2, 190141782],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 2, 190141782],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, output_padding=0, dilation=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 2, 190141782],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,], dilation=2, )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 2, 357913942],"float16"), weight=Tensor([3, 1, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=0, dilation=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 2, 357913942],"float16"), weight=Tensor([3, 1, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=1, dilation=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 2, 357913942],"float16"), weight=Tensor([3, 1, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,0,], dilation=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 2, 357913942],"float16"), weight=Tensor([3, 1, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,0,], dilation=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 357913942, 2],"float16"), weight=Tensor([3, 1, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=0, dilation=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 357913942, 2],"float16"), weight=Tensor([3, 1, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=1, dilation=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 357913942, 2],"float16"), weight=Tensor([3, 1, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,0,], dilation=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 4, 178956971],"float16"), weight=Tensor([3, 1, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding="vaLiD", output_padding=0, dilation=1, groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 6, 178956971, 2],"float16"), weight=Tensor([6, 1, 3, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,0,], output_padding=0, dilation=1, groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 6, 2, 178956971],"float16"), weight=Tensor([6, 1, 3, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,0,], output_padding=0, dilation=1, groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 6, 2, 95070891],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,], groups=3, dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 6, 95070891, 2],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,], groups=3, dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([22369622, 3, 8, 8],"float16"), weight=Tensor([3, 1, 5, 5],"float16"), bias=Tensor([1],"float16"), stride=1, padding="sAmE", output_padding=0, dilation=1, groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([22369622, 3, 8, 8],"float16"), weight=Tensor([3, 1, 5, 5],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,2,3,4,], output_padding=0, dilation=1, groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([22369622, 3, 8, 8],"float16"), weight=Tensor([3, 1, 5, 5],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[list[0,0,],list[0,0,],list[1,2,],list[3,4,],], output_padding=0, dilation=1, groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([357913942, 3, 2, 2],"float16"), weight=Tensor([3, 1, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=1, dilation=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([357913942, 3, 2, 2],"float16"), weight=Tensor([3, 1, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,0,], dilation=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([95070891, 2, 2, 6],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=Tensor([2],"int32"), stride=2, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([95070891, 2, 2, 6],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([95070891, 6, 2, 2],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,], groups=3, dilation=1, )
paddle.nn.functional.conv3d(Tensor([4, 2970966, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 2970966, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 6, 1485483, 8, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 1485483],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 8, 2970966, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 2970966, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 2970966, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 2970966, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 2970966, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 2970966, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 2970966, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 2970966, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([742742, 6, 8, 8, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([11883862, 4, 4, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 23767723, 4, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 23767723, 4],"float32"), weight=Tensor([1, 3, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 23767723, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 23767723, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 23767723, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 23767723, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 23767723, 4],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 23767723, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 23767723, 3],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 44739243, 3],"float16"), weight=Tensor([2, 3, 3, 3, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 44739243, 4, 3],"float16"), weight=Tensor([2, 3, 3, 3, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 44739243, 4, 4, 3],"float16"), weight=Tensor([2, 3, 3, 3, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([22369622, 4, 4, 4, 3],"float16"), weight=Tensor([2, 3, 3, 3, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([1114113, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([1114113, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 1, 3, 3, 84507459],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 1, 3, 84507459, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 1, 84507459, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 95070891, 2, 3],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 84507459],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 84507459, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 84507459, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 95070891],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 95070891],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 95070891, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 95070891, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 95070891, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 95070891, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 95070891, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 95070891, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 2970966, 8, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 2970966, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 2970966],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 2228225, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 2228225, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 2228225, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 2228225],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 2228225, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 2228225, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 21126865, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 21126865, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 21126865],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([742742, 6, 8, 8, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([95070891, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([95070891, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 84507459],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 84507459, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 84507459, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 95070891, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 84507459],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 84507459, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 2, 3, 3, 42253730],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 2, 42253730, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 28169153, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 95070891],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 95070891],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 95070891, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 95070891, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 95070891, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 95070891, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 95070891, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 95070891, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([95070891, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([95070891, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.nn.functional.cosine_similarity(Tensor([1, 2147483649, 2],"float16"), Tensor([1, 2147483649, 2],"float16"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 2147483649, 2],"float16"), Tensor([1, 2147483649, 2],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), axis=1, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), axis=1, eps=1e-07, )
paddle.nn.functional.cosine_similarity(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), axis=1, eps=1e-09, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 2],"float16"), Tensor([429496730, 5, 2],"float16"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 2],"float16"), Tensor([429496730, 5, 2],"float16"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 2],"float16"), Tensor([429496730, 5, 2],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 858993460],"float16"), Tensor([1, 5, 858993460],"float16"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 858993460],"float16"), Tensor([1, 5, 858993460],"float16"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 858993460],"float16"), Tensor([1, 5, 858993460],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 858993460],"float16"), Tensor([1, 5, 858993460],"float16"), axis=2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-07, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-09, )
paddle.nn.functional.cosine_similarity(Tensor([10, 12, 19014179],"float32"), Tensor([10, 1, 19014179],"float32"), axis=2, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([10, 22817014, 10],"float32"), Tensor([10, 1, 10],"float32"), axis=2, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([175515491, 13],"float32"), Tensor([175515491, 13],"float32"), axis=0, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([17825793, 128],"float32"), Tensor([17825793, 128],"float32"), )
paddle.nn.functional.cosine_similarity(Tensor([178956971, 2, 3, 4],"float16"), Tensor([2, 3, 4],"float16"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([19014179, 12, 10],"float32"), Tensor([19014179, 1, 10],"float32"), axis=2, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([210, 10865245],"float32"), Tensor([210, 10865245],"float32"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([2228225, 1024],"float32"), Tensor([2228225, 1024],"float32"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([268435457, 8, 2],"float16"), Tensor([268435457, 8, 2],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([3, 715827883, 2],"float16"), Tensor([3, 715827883, 2],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([3, 8, 178956971],"float16"), Tensor([3, 8, 178956971],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([32, 71303169],"float32"), Tensor([32, 71303169],"float32"), )
paddle.nn.functional.cosine_similarity(Tensor([429496730, 5, 2],"float16"), Tensor([1, 5, 2],"float16"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([429496730, 5, 2],"float16"), Tensor([1, 5, 2],"float16"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([429496730, 5, 2],"float16"), Tensor([1, 5, 2],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([429496730, 5, 2],"float16"), Tensor([429496730, 5, 2],"float16"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([429496730, 5, 2],"float16"), Tensor([429496730, 5, 2],"float16"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([429496730, 5, 2],"float16"), Tensor([429496730, 5, 2],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([1, 5],"float16"), axis=1, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([1, 5],"float16"), axis=1, eps=1e-07, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([1, 5],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([1, 5],"float16"), axis=1, eps=1e-09, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-07, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-09, )
paddle.nn.functional.cosine_similarity(x1=Tensor([1431655766, 3],"float16"), x2=Tensor([1431655766, 3],"float16"), axis=0, )
paddle.nn.functional.cosine_similarity(x1=Tensor([2, 1140850690],"float32"), x2=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.cosine_similarity(x1=Tensor([2, 2147483649],"float16"), x2=Tensor([2, 2147483649],"float16"), )
paddle.nn.functional.cosine_similarity(x1=Tensor([2, 2147483649],"float16"), x2=Tensor([2, 2147483649],"float16"), axis=1, )
paddle.nn.functional.cosine_similarity(x1=Tensor([2, 536870913, 4],"float16"), x2=Tensor([2, 536870913, 4],"float16"), axis=1, eps=0, )
paddle.nn.functional.cross_entropy(Tensor([1, 1024, 2228225],"float32"), Tensor([1, 1024, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1, 1024, 2228225],"float32"), Tensor([1, 1024, 1],"int64"), weight=None, ignore_index=0, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1, 15018, 151936],"float32"), Tensor([1, 15018, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1, 18153, 125696],"float32"), Tensor([1, 18153, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1, 2048, 1114113],"float32"), Tensor([1, 2048, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1, 45401, 50257],"float32"), Tensor([1, 45401, 1],"int64"), weight=None, ignore_index=0, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([10, 228170138],"float32"), Tensor([10],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([10, 228170138],"float32"), Tensor([10],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([100, 22817014],"float32"), Tensor([100],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([100, 42949673],"float16"), Tensor([100],"int64"), weight=None, ignore_index=-1, reduction="mean", soft_label=False, axis=1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([100, 42949673],"float16"), Tensor([100],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([100, 42949673],"float16"), Tensor([100],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([100, 42949673],"float16"), Tensor([100],"int64"), weight=None, ignore_index=-100, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1000, 2281702],"float32"), Tensor([1000],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([1006, 2268093],"float32"), Tensor([1006],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([10080, 226360],"float32"), Tensor([10080],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([101, 22591103],"float32"), Tensor([101, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([101, 22591103],"float32"), Tensor([101],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([102, 22369622],"float32"), Tensor([102, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([104, 21939437],"float32"), Tensor([104, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([104, 21939437],"float32"), label=Tensor([104, 1],"int64"), soft_label=False, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([10762743, 212],"float32"), Tensor([10762743, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([114085069, 20],"float32"), Tensor([114085069, 1],"int64"), reduction="none", use_softmax=True, )
paddle.nn.functional.cross_entropy(Tensor([1140850690, 2],"float32"), label=Tensor([1140850690, 1],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([12, 190141782],"float32"), Tensor([12],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([12, 190141782],"float32"), Tensor([12],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([124, 18400818],"float32"), label=Tensor([124, 1],"int64"), soft_label=False, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([128, 17825793],"float32"), label=Tensor([128, 1],"int64"), soft_label=False, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([14, 162978670],"float32"), Tensor([14, 1],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([14, 7, 23282668],"float32"), Tensor([14, 7],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([14800, 154170],"float32"), Tensor([14800],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([15, 1024, 151936],"float32"), Tensor([15, 1024, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1536, 1485483],"float32"), Tensor([1536],"int64"), weight=None, ignore_index=6626, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([16, 142606337],"float32"), Tensor([16, 1],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([16032, 142322],"float32"), Tensor([16032],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1914, 1192112],"float32"), Tensor([1914],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([1914, 1192112],"float32"), Tensor([1914],"int64"), reduction="sum", )
paddle.nn.functional.cross_entropy(Tensor([192, 11883862],"float32"), Tensor([192],"int64"), weight=None, ignore_index=6626, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2, 1140850690],"float32"), Tensor([2, 1],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([2, 1140850690],"float32"), Tensor([2, 1],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([2, 1140850690],"float32"), Tensor([2, 1],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2, 32, 32, 1114113],"float32"), Tensor([2, 32, 32],"int64"), weight=None, ignore_index=255, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([200, 11408507],"float32"), Tensor([200],"int64"), reduction="sum", )
paddle.nn.functional.cross_entropy(Tensor([22369622, 102],"float32"), label=Tensor([22369622, 1],"int64"), soft_label=False, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([228170138, 10],"float32"), Tensor([228170138, 1],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([228170138, 10],"float32"), Tensor([228170138, 1],"int64"), weight=None, ignore_index=-100, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2281702, 1000],"float32"), label=Tensor([2281702, 1],"int64"), soft_label=False, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([24, 158, 601715],"float32"), Tensor([24, 158],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([24422, 93431],"float32"), label=Tensor([24422, 1],"int64"), soft_label=False, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([3, 760567127],"float32"), Tensor([3],"int64"), reduction="sum", )
paddle.nn.functional.cross_entropy(Tensor([32, 71303169],"float32"), Tensor([32, 1],"int64"), reduction="none", use_softmax=True, )
paddle.nn.functional.cross_entropy(Tensor([32, 71303169],"float32"), Tensor([32, 1],"int64"), weight=None, ignore_index=-100, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([32, 71303169],"float32"), Tensor([32],"int64"), weight=None, ignore_index=512, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([36, 63380594],"float32"), Tensor([36, 1],"int64"), weight=None, ignore_index=-100, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4, 157920, 3613],"float32"), Tensor([4, 157920],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([4, 22400, 25466],"float32"), Tensor([4, 22400, 1],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([4, 570425345],"float32"), Tensor([4, 1],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([40, 57042535],"float32"), Tensor([40, 1],"int64"), reduction="none", ignore_index=-1, )
paddle.nn.functional.cross_entropy(Tensor([416, 30, 182829],"float32"), Tensor([416, 30],"int64"), weight=None, ignore_index=0, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([45, 1024, 50257],"float32"), Tensor([45, 1024, 1],"int64"), weight=None, ignore_index=0, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([456340276, 5],"float32"), Tensor([456340276, 1],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([4990, 457255],"float32"), Tensor([4990],"int64"), weight=None, ignore_index=42, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([5, 858993460],"float16"), label=Tensor([5],"int64"), weight=None, ignore_index=-100, soft_label=False, axis=-1, reduction="mean", name=None, )
paddle.nn.functional.cross_entropy(Tensor([512, 30, 148549],"float32"), Tensor([512, 30],"int64"), weight=None, ignore_index=0, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([52, 30, 1462630],"float32"), Tensor([52, 30],"int64"), weight=None, ignore_index=0, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([5704254, 400],"float32"), Tensor([5704254, 1],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([64, 187, 190651],"float32"), Tensor([64, 187],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([74756, 30522],"float32"), Tensor([74756, 1],"int64"), reduction="none", ignore_index=-1, )
paddle.nn.functional.cross_entropy(Tensor([8, 102, 2796203],"float32"), Tensor([8, 102],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([8, 2048, 151936],"float32"), Tensor([8, 2048, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([9, 2048, 125696],"float32"), Tensor([9, 2048, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(input=Tensor([100, 22817014],"float32"), label=Tensor([100, 1],"int64"), )
paddle.nn.functional.cross_entropy(input=Tensor([1024, 2228225],"float32"), label=Tensor([1024],"int64"), reduction="mean", )
paddle.nn.functional.cross_entropy(input=Tensor([107995, 21128],"float32"), label=Tensor([107995, 1],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(input=Tensor([1140850690, 2],"float32"), label=Tensor([1140850690, 1],"int64"), )
paddle.nn.functional.cross_entropy(input=Tensor([1242, 1837119],"float32"), label=Tensor([1242, 1],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(input=Tensor([1950, 1170104],"float32"), label=Tensor([1950],"int64"), reduction="mean", )
paddle.nn.functional.cross_entropy(input=Tensor([2, 1140850690],"float32"), label=Tensor([2, 1],"int64"), )
paddle.nn.functional.cross_entropy(input=Tensor([2, 1140850690],"float32"), label=Tensor([2, 1],"int64"), soft_label=False, reduction="mean", use_softmax=True, )
paddle.nn.functional.cross_entropy(input=Tensor([2012, 1134047],"float32"), label=Tensor([2012],"int64"), reduction="mean", )
paddle.nn.functional.cross_entropy(input=Tensor([22369622, 102],"float32"), label=Tensor([22369622, 1],"int64"), )
paddle.nn.functional.cross_entropy(input=Tensor([228170138, 10],"float32"), label=Tensor([228170138, 1],"int64"), )
paddle.nn.functional.cross_entropy(input=Tensor([2281702, 1000],"float32"), label=Tensor([2281702, 1],"int64"), soft_label=False, reduction="mean", use_softmax=True, )
paddle.nn.functional.elu(Tensor([1, 1140850690, 2],"float32"), )
paddle.nn.functional.elu(Tensor([1, 21504, 106106],"float32"), )
paddle.nn.functional.elu(Tensor([10, 20, 11408507],"float32"), )
paddle.nn.functional.elu(Tensor([10, 228170138, 1],"float32"), )
paddle.nn.functional.elu(Tensor([114085069, 20, 1],"float32"), )
paddle.nn.functional.elu(Tensor([114085069, 20],"float32"), 1.0, )
paddle.nn.functional.elu(Tensor([15, 152113426],"float32"), 1.0, )
paddle.nn.functional.elu(Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.elu(Tensor([2, 2147483649],"float16"), 0.2, None, )
paddle.nn.functional.elu(Tensor([2147483649, 2],"float16"), 0.2, None, )
paddle.nn.functional.elu(Tensor([253522376, 3, 3],"float32"), 1.0, None, )
paddle.nn.functional.elu(Tensor([3, 253522376, 3],"float32"), 1.0, None, )
paddle.nn.functional.elu(Tensor([3, 3, 253522376],"float32"), 1.0, None, )
paddle.nn.functional.elu(Tensor([3, 3, 477218589],"float16"), 0, None, )
paddle.nn.functional.elu(Tensor([3, 3, 477218589],"float16"), 1.0, None, )
paddle.nn.functional.elu(Tensor([3, 3, 477218589],"float16"), 2, None, )
paddle.nn.functional.elu(Tensor([3, 477218589, 3],"float16"), 0, None, )
paddle.nn.functional.elu(Tensor([3, 477218589, 3],"float16"), 1.0, None, )
paddle.nn.functional.elu(Tensor([3, 477218589, 3],"float16"), 2, None, )
paddle.nn.functional.elu(Tensor([35651585, 64],"float32"), )
paddle.nn.functional.elu(Tensor([477218589, 3, 3],"float16"), 0, None, )
paddle.nn.functional.elu(Tensor([477218589, 3, 3],"float16"), 1.0, None, )
paddle.nn.functional.elu(Tensor([477218589, 3, 3],"float16"), 2, None, )
paddle.nn.functional.elu(Tensor([53053, 21504, 2],"float32"), )
paddle.nn.functional.elu(Tensor([71303169, 32],"float32"), )
paddle.nn.functional.elu(x=Tensor([2, 2147483649],"float16"), alpha=0.2, )
paddle.nn.functional.elu(x=Tensor([2147483649, 2],"float16"), alpha=0.2, )
paddle.nn.functional.elu(x=Tensor([253522376, 3, 3],"float32"), )
paddle.nn.functional.elu(x=Tensor([3, 253522376, 3],"float32"), )
paddle.nn.functional.elu(x=Tensor([3, 3, 253522376],"float32"), )
paddle.nn.functional.elu(x=Tensor([3, 3, 477218589],"float16"), )
paddle.nn.functional.elu(x=Tensor([3, 3, 477218589],"float16"), alpha=0, )
paddle.nn.functional.elu(x=Tensor([3, 3, 477218589],"float16"), alpha=2, )
paddle.nn.functional.elu(x=Tensor([3, 477218589, 3],"float16"), )
paddle.nn.functional.elu(x=Tensor([3, 477218589, 3],"float16"), alpha=0, )
paddle.nn.functional.elu(x=Tensor([3, 477218589, 3],"float16"), alpha=2, )
paddle.nn.functional.elu(x=Tensor([477218589, 3, 3],"float16"), )
paddle.nn.functional.elu(x=Tensor([477218589, 3, 3],"float16"), alpha=0, )
paddle.nn.functional.elu(x=Tensor([477218589, 3, 3],"float16"), alpha=2, )
paddle.nn.functional.embedding(Tensor([1, 1, 1],"int64"), weight=Tensor([20, 114085069],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1, 1],"int64"), weight=Tensor([71303169, 32],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 100],"int64"), weight=Tensor([8000, 285213],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 100],"int64"), weight=Tensor([8912897, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 101],"int64"), weight=Tensor([8000, 285213],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 101],"int64"), weight=Tensor([8912897, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1024],"int64"), weight=Tensor([1024, 4194305],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1024],"int64"), weight=Tensor([1048577, 4096],"bfloat16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1024],"int64"), weight=Tensor([151936, 28269],"bfloat16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1024],"int64"), weight=Tensor([151936, 28269],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1024],"int64"), weight=Tensor([268435457, 16],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1024],"int64"), weight=Tensor([33554433, 128],"bfloat16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1024],"int64"), weight=Tensor([33554433, 128],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1024],"int64"), weight=Tensor([4194305, 1024],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1024],"int64"), weight=Tensor([4194305, 1024],"float16"), padding_idx=None, sparse=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1024],"int64"), weight=Tensor([51200, 83887],"float16"), padding_idx=None, sparse=False, name=None, )
paddle.nn.functional.embedding(Tensor([10, 1],"int64"), weight=Tensor([10, 228170138],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([10, 1],"int64"), weight=Tensor([228170138, 10],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([100],"int64"), weight=Tensor([512, 4456449],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([100],"int64"), weight=Tensor([65024, 66053],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([100],"int64"), weight=Tensor([8388609, 512],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([100],"int64"), weight=Tensor([8912897, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([101],"int64"), weight=Tensor([151936, 28269],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([101],"int64"), weight=Tensor([250880, 17120],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([101],"int64"), weight=Tensor([512, 4456449],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([101],"int64"), weight=Tensor([67108865, 64],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([101],"int64"), weight=Tensor([8912897, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1024, 1],"int64"), weight=Tensor([17825793, 128],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([102],"int64"), weight=Tensor([512, 4456449],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([102],"int64"), weight=Tensor([8912897, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([103],"int64"), weight=Tensor([512, 4456449],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([103],"int64"), weight=Tensor([8912897, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 2, 7],"int64"), weight=Tensor([514, 4439108],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 2, 7],"int64"), weight=Tensor([71303169, 32],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 4, 7],"int32"), weight=Tensor([71303169, 32],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 4, 7],"int32"), weight=Tensor([99, 23047489],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7, 8],"int32"), weight=Tensor([17825793, 128],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 2],"int64"), weight=Tensor([20, 114085069],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 2],"int64"), weight=Tensor([71303169, 32],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 3, 1],"int64"), weight=Tensor([10, 228170138],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 3, 1],"int64"), weight=Tensor([1000, 2281702],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 3, 1],"int64"), weight=Tensor([228170138, 10],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 3, 1],"int64"), weight=Tensor([228170138, 10],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 1],"int64"), weight=Tensor([10, 228170138],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 1],"int64"), weight=Tensor([760567127, 3],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 4],"int64"), Tensor([10, 429496730],"float16"), padding_idx=None, )
paddle.nn.functional.embedding(Tensor([3, 4],"int64"), Tensor([1073741825, 4],"float16"), padding_idx=None, )
paddle.nn.functional.embedding(Tensor([30],"int64"), Tensor([1024, 2228225],"float32"), )
paddle.nn.functional.embedding(Tensor([30],"int64"), Tensor([1024, 4194305],"bfloat16"), )
paddle.nn.functional.embedding(Tensor([30],"int64"), Tensor([4456449, 512],"float32"), )
paddle.nn.functional.embedding(Tensor([30],"int64"), Tensor([511, 4465170],"float32"), )
paddle.nn.functional.embedding(Tensor([30],"int64"), Tensor([511, 8405025],"bfloat16"), )
paddle.nn.functional.embedding(Tensor([30],"int64"), Tensor([8388609, 512],"bfloat16"), )
paddle.nn.functional.embedding(Tensor([32, 16],"int32"), Tensor([128, 17825793],"float32"), )
paddle.nn.functional.embedding(Tensor([32, 16],"int32"), Tensor([128, 33554433],"float16"), )
paddle.nn.functional.embedding(Tensor([32, 16],"int32"), Tensor([2228225, 1024],"float32"), )
paddle.nn.functional.embedding(Tensor([32, 16],"int32"), Tensor([4194305, 1024],"float16"), )
paddle.nn.functional.embedding(Tensor([32, 16],"int64"), Tensor([128, 33554433],"float16"), )
paddle.nn.functional.embedding(Tensor([32, 16],"int64"), Tensor([4194305, 1024],"float16"), )
paddle.nn.functional.embedding(Tensor([32, 4],"int64"), weight=Tensor([10000, 228171],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 4],"int64"), weight=Tensor([4456449, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([4, 3, 1],"int64"), weight=Tensor([10, 228170138],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([4, 3, 1],"int64"), weight=Tensor([1000, 2281702],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([4, 3, 1],"int64"), weight=Tensor([1000, 2281702],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([4, 3, 1],"int64"), weight=Tensor([228170138, 10],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([4, 3, 1],"int64"), weight=Tensor([228170138, 10],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([4, 3],"int64"), weight=Tensor([1000, 2281702],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([4, 3],"int64"), weight=Tensor([228170138, 10],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([4],"int32"), Tensor([10, 429496730],"float16"), padding_idx=None, )
paddle.nn.functional.embedding(Tensor([4],"int32"), Tensor([1073741825, 4],"float16"), padding_idx=None, )
paddle.nn.functional.embedding(Tensor([4],"int64"), Tensor([10, 429496730],"float16"), padding_idx=None, )
paddle.nn.functional.embedding(Tensor([4],"int64"), Tensor([1073741825, 4],"float16"), padding_idx=None, )
paddle.nn.functional.embedding(Tensor([6, 3, 1],"int64"), weight=Tensor([114085069, 20],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([6, 3, 1],"int64"), weight=Tensor([32, 71303169],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 1024],"int64"), weight=Tensor([1048577, 4096],"float16"), padding_idx=None, sparse=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 1024],"int64"), weight=Tensor([2097153, 2048],"float16"), padding_idx=None, sparse=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 1024],"int64"), weight=Tensor([50304, 85381],"float16"), padding_idx=None, sparse=False, name=None, )
paddle.nn.functional.fold(Tensor([15845149, 12, 12],"float32"), output_sizes=list[4,5,], kernel_sizes=2, )
paddle.nn.functional.gelu(Tensor([1, 1, 2281701379],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 1, 2281701379],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 1, 2281701379],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([1, 1, 2281701379],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 1024, 2228225],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 11, 207427399],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 1114113, 2048],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 13, 175515491],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([1, 1485483, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 14, 14, 727584],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 14, 15, 679078],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 14, 16, 636636],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 14, 17, 599187],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 14, 18, 565899],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 14, 19, 536115],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 14, 6632, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 4887, 19, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 5158, 18, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 5462, 17, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 5803, 16, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 6190, 15, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 6632, 14, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 17825793, 128],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 20, 114085069],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 2228225, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 2228225, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 2281701379],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 285212673, 8],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 285212673, 8],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 4456449, 512],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 445645, 5120],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 557057, 4096],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 557057, 4096],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([1, 5585, 14, 19, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 570425345, 4],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 5895, 14, 18, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 61667605, 37],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 61667605, 37],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 6242, 14, 17, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 6632, 14, 16, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 7074, 14, 15, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 71303169, 32],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 742742, 3072],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 7579, 14, 14, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 9, 253522376],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([10, 228170138],"float32"), )
paddle.nn.functional.gelu(Tensor([1004, 2272611],"float32"), )
paddle.nn.functional.gelu(Tensor([1007, 2265841],"float32"), )
paddle.nn.functional.gelu(Tensor([1008, 2263593],"float32"), )
paddle.nn.functional.gelu(Tensor([1011, 2256876],"float32"), )
paddle.nn.functional.gelu(Tensor([11, 207427399],"float32"), False, )
paddle.nn.functional.gelu(Tensor([11, 207427399],"float32"), True, )
paddle.nn.functional.gelu(Tensor([1114113, 1, 2048],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([114085069, 20],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1141, 32, 250, 250],"float32"), )
paddle.nn.functional.gelu(Tensor([124, 1024, 2568, 7],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 1024, 7, 2568],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 12, 12, 127784],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 12, 375, 4096],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 128, 2568, 56],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 128, 56, 2568],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 1280, 1, 14376],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 1280, 14376, 1],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 14, 14, 93882],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 14, 642, 2048],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 14, 856, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 18400818, 1, 1],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 375, 12, 4096],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 375527, 7, 7],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 5868, 56, 56],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 642, 14, 2048],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 856, 14, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([13, 10969719, 16],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([13, 7, 25073642],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([134217729, 17],"float32"), False, )
paddle.nn.functional.gelu(Tensor([134217729, 17],"float32"), True, )
paddle.nn.functional.gelu(Tensor([139265, 64, 16, 16],"float32"), )
paddle.nn.functional.gelu(Tensor([1431655766, 3],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([1431655766, 3],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1485483, 1, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([16, 16, 139265, 64],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 16, 139265, 64],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 16, 262145, 64],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 16, 262145, 64],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 16, 64, 139265],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 16, 64, 139265],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 16, 64, 262145],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 16, 64, 262145],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 256, 16, 34817],"float32"), )
paddle.nn.functional.gelu(Tensor([16, 256, 34817, 16],"float32"), )
paddle.nn.functional.gelu(Tensor([16, 32, 16, 278529],"float32"), )
paddle.nn.functional.gelu(Tensor([16, 32, 278529, 16],"float32"), )
paddle.nn.functional.gelu(Tensor([16, 34817, 64, 64],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 34817, 64, 64],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 557057, 16, 16],"float32"), )
paddle.nn.functional.gelu(Tensor([16, 64, 139265, 16],"float32"), )
paddle.nn.functional.gelu(Tensor([16, 64, 16, 139265],"float32"), )
paddle.nn.functional.gelu(Tensor([16, 65537, 64, 64],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 65537, 64, 64],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16969, 64, 2101],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([17825793, 1, 128],"float32"), )
paddle.nn.functional.gelu(Tensor([178258, 50, 256],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([1782580, 1280, 1, 1],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([190141782, 3, 4],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 1140850690],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 1140850690],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([2, 2147483649],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 2147483649],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([2, 285212673, 4],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 3, 380283564],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 3, 715827883],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 536870913, 4],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([20, 2001, 57015],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([20, 54301, 2101],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([20, 64, 1782580],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([20, 891290, 128],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([20372334, 7, 16],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([2177, 1024, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([2228225, 1, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2281701379],"float32"), )
paddle.nn.functional.gelu(Tensor([256, 128, 69633],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([256, 34817, 256],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([256, 50, 178258],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([25928425, 11, 8],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([278529, 32, 16, 16],"float32"), )
paddle.nn.functional.gelu(Tensor([285212673, 1, 8],"float32"), )
paddle.nn.functional.gelu(Tensor([285212673, 1, 8],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([285213, 200, 40],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([3, 3, 477218589],"float16"), True, None, )
paddle.nn.functional.gelu(Tensor([3, 477218589, 3],"float16"), True, None, )
paddle.nn.functional.gelu(Tensor([3, 760567127],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([30, 1901418, 40],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([30, 200, 380284],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([3083381, 20, 37],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([31690297, 9, 8],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([32, 1141, 250, 250],"float32"), )
paddle.nn.functional.gelu(Tensor([32, 32, 250, 8913],"float32"), )
paddle.nn.functional.gelu(Tensor([32, 32, 8913, 250],"float32"), )
paddle.nn.functional.gelu(Tensor([34817, 16, 64, 64],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([34817, 16, 64, 64],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([34817, 256, 16, 16],"float32"), )
paddle.nn.functional.gelu(Tensor([34817, 32, 32, 64],"float32"), )
paddle.nn.functional.gelu(Tensor([350, 16, 14, 19, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([357913942, 3, 4],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([369, 16, 14, 18, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([3869, 12, 12, 4096],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([391, 16, 14, 17, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([4, 256, 32, 69633],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 256, 34817, 64],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 278529, 32, 64],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 32, 278529, 64],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 32, 32, 557057],"float32"), )
paddle.nn.functional.gelu(Tensor([405132, 11, 512],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([415, 16, 14, 16, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([42851, 13, 4096],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([4353, 256, 32, 64],"float32"), )
paddle.nn.functional.gelu(Tensor([443, 16, 14, 15, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([445645, 1, 5120],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([45474, 1024, 7, 7],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([474, 16, 14, 14, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([477218589, 3, 3],"float16"), True, None, )
paddle.nn.functional.gelu(Tensor([557057, 1, 4096],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([557057, 1, 4096],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([5685, 128, 56, 56],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([5685, 14, 14, 2048],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([570425345, 1, 4],"float32"), )
paddle.nn.functional.gelu(Tensor([61667605, 1, 37],"float32"), )
paddle.nn.functional.gelu(Tensor([61667605, 1, 37],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([61667605, 37],"float32"), )
paddle.nn.functional.gelu(Tensor([65537, 16, 64, 64],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([65537, 16, 64, 64],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([69633, 128, 256],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([71303169, 1, 32],"float32"), )
paddle.nn.functional.gelu(Tensor([71303169, 32],"float32"), )
paddle.nn.functional.gelu(Tensor([742742, 1, 3072],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([7579, 14, 14, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([760567127, 3],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([760567127, 3],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([8909, 2001, 128],"float32"), approximate=False, )
paddle.nn.functional.gelu(x=Tensor([16969, 64, 2101],"float32"), approximate=False, )
paddle.nn.functional.gelu(x=Tensor([20, 54301, 2101],"float32"), approximate=False, )
paddle.nn.functional.gelu(x=Tensor([20, 64, 1782580],"float32"), approximate=False, )
paddle.nn.functional.gelu(x=Tensor([253522376, 3, 3],"float32"), )
paddle.nn.functional.gelu(x=Tensor([3, 253522376, 3],"float32"), )
paddle.nn.functional.gelu(x=Tensor([3, 3, 253522376],"float32"), )
paddle.nn.functional.gelu(x=Tensor([3, 3, 477218589],"float16"), )
paddle.nn.functional.gelu(x=Tensor([3, 3, 477218589],"float16"), approximate=True, )
paddle.nn.functional.gelu(x=Tensor([3, 477218589, 3],"float16"), )
paddle.nn.functional.gelu(x=Tensor([3, 477218589, 3],"float16"), approximate=True, )
paddle.nn.functional.gelu(x=Tensor([477218589, 3, 3],"float16"), )
paddle.nn.functional.gelu(x=Tensor([477218589, 3, 3],"float16"), approximate=True, )
paddle.nn.functional.glu(Tensor([1, 10, 228170138],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 100, 22817014],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 102, 22369622],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 105, 21730490],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 107, 21324312],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 110, 20742740],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 112, 20372334],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 113, 20192048],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 4456449, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([214748365, 20],"float16"), -1, )
paddle.nn.functional.glu(Tensor([214748365, 20],"float16"), -1, None, )
paddle.nn.functional.glu(Tensor([214748365, 20],"float16"), 1, None, )
paddle.nn.functional.glu(Tensor([39092, 114, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([39438, 113, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([39790, 112, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([40149, 111, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([405132, 11, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([40514, 110, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([40885, 109, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([41264, 108, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([41650, 107, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([42042, 106, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([42443, 105, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([42851, 104, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([43267, 103, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([43691, 102, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([44124, 101, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4456449, 1, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([445645, 10, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([44565, 100, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 858993460],"float16"), -1, )
paddle.nn.functional.glu(Tensor([6, 715827883],"float16"), 0, None, )
paddle.nn.functional.glu(x=Tensor([10, 28521268, 8],"float32"), )
paddle.nn.functional.glu(x=Tensor([10, 53687092, 8],"float16"), )
paddle.nn.functional.glu(x=Tensor([1073741825, 4],"float16"), )
paddle.nn.functional.glu(x=Tensor([142606337, 2, 8],"float32"), )
paddle.nn.functional.glu(x=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.glu(x=Tensor([23767723, 6, 2, 8],"float32"), )
paddle.nn.functional.glu(x=Tensor([23767723, 6, 2, 8],"float32"), axis=2, )
paddle.nn.functional.glu(x=Tensor([268435457, 2, 8],"float16"), )
paddle.nn.functional.glu(x=Tensor([4, 35651585, 2, 8],"float32"), )
paddle.nn.functional.glu(x=Tensor([4, 35651585, 2, 8],"float32"), axis=0, )
paddle.nn.functional.glu(x=Tensor([4, 35651585, 2, 8],"float32"), axis=2, )
paddle.nn.functional.glu(x=Tensor([4, 6, 11883862, 8],"float32"), )
paddle.nn.functional.glu(x=Tensor([4, 6, 11883862, 8],"float32"), axis=0, )
paddle.nn.functional.glu(x=Tensor([4, 6, 11883862, 8],"float32"), axis=2, )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 47535446],"float32"), )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 47535446],"float32"), axis=0, )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 47535446],"float32"), axis=2, )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 89478486],"float16"), )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 89478486],"float16"), axis=0, )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 89478486],"float16"), axis=2, )
paddle.nn.functional.glu(x=Tensor([4, 6, 22369622, 8],"float16"), )
paddle.nn.functional.glu(x=Tensor([4, 6, 22369622, 8],"float16"), axis=0, )
paddle.nn.functional.glu(x=Tensor([4, 6, 22369622, 8],"float16"), axis=2, )
paddle.nn.functional.glu(x=Tensor([4, 67108865, 2, 8],"float16"), )
paddle.nn.functional.glu(x=Tensor([4, 67108865, 2, 8],"float16"), axis=0, )
paddle.nn.functional.glu(x=Tensor([4, 67108865, 2, 8],"float16"), axis=2, )
paddle.nn.functional.glu(x=Tensor([44739243, 6, 2, 8],"float16"), )
paddle.nn.functional.glu(x=Tensor([44739243, 6, 2, 8],"float16"), axis=2, )
paddle.nn.functional.glu(x=Tensor([570425345, 4],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1, 1, 11883862, 192],"float32"), Tensor([1, 1, 11883862, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 11883862, 192],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 12400551, 184],"float32"), Tensor([1, 1, 12400551, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 12400551, 184],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 12400551, 184],"float32"), Tensor([1, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 12964213, 176],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 12964213, 176],"float32"), Tensor([1, 1, 12964213, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 12964213, 176],"float32"), Tensor([1, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 176, 12964213],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 176, 12964213],"float32"), Tensor([1, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 176, 176],"float32"), Tensor([1, 1, 1140850690, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 176, 176],"float32"), Tensor([1, 30316, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 176, 176],"float32"), Tensor([1, 90948, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 184, 12400551],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 184, 12400551],"float32"), Tensor([1, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 184, 184],"float32"), Tensor([1, 1, 1140850690, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 184, 184],"float32"), Tensor([1, 30316, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 184, 184],"float32"), Tensor([1, 90948, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 192, 11883862],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 192, 192],"float32"), Tensor([1, 1, 1140850690, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 192, 192],"float32"), Tensor([1, 90948, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 128, 128, 139265],"float32"), Tensor([1, 128, 128, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1, 128, 128, 139265],"float32"), Tensor([1, 256, 256, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1, 128, 139265, 128],"float32"), Tensor([1, 128, 128, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1, 128, 139265, 128],"float32"), Tensor([1, 128, 139265, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1, 128, 139265, 128],"float32"), Tensor([1, 256, 139265, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1, 128, 139265, 128],"float32"), Tensor([1, 256, 256, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1, 139265, 128, 128],"float32"), Tensor([1, 128, 128, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1, 139265, 128, 128],"float32"), Tensor([1, 256, 256, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1, 23283, 280, 350],"float32"), Tensor([1, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 2742430, 32, 26],"float32"), Tensor([1, 32, 26, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 2910334, 28, 28],"float32"), Tensor([1, 28, 28, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 2910334, 28, 28],"float32"), Tensor([1, 34, 34, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 1629787, 350],"float32"), Tensor([1, 280, 1629787, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 1629787, 350],"float32"), Tensor([1, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 20372334, 28],"float32"), Tensor([1, 28, 20372334, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 20372334, 28],"float32"), Tensor([1, 28, 28, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 20372334, 28],"float32"), Tensor([1, 34, 20372334, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 20372334, 28],"float32"), Tensor([1, 34, 34, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 21939437, 26],"float32"), Tensor([1, 32, 21939437, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 21939437, 26],"float32"), Tensor([1, 32, 26, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 28, 20372334],"float32"), Tensor([1, 28, 28, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 28, 20372334],"float32"), Tensor([1, 34, 34, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 28, 28],"float32"), Tensor([1, 28, 40744668, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 28, 28],"float32"), Tensor([1, 33554433, 34, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 28, 28],"float32"), Tensor([1, 34, 33554433, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 28, 28],"float32"), Tensor([1, 40744668, 28, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 2037234],"float32"), Tensor([1, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 280, 4074467, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 3259574, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 32, 17825793],"float32"), Tensor([1, 32, 26, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 32, 26],"float32"), Tensor([1, 32, 35651585, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 32, 26],"float32"), Tensor([1, 43878873, 26, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 64, 64],"float32"), Tensor([1, 15011194, 76, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 64, 64],"float32"), Tensor([1, 17825793, 64, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 64, 64],"float32"), Tensor([1, 64, 17825793, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 64, 64],"float32"), Tensor([1, 76, 15011194, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 64, 8912897],"float32"), Tensor([1, 64, 64, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 64, 8912897],"float32"), Tensor([1, 76, 76, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 8912897, 64],"float32"), Tensor([1, 64, 64, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 8912897, 64],"float32"), Tensor([1, 64, 8912897, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 8912897, 64],"float32"), Tensor([1, 76, 76, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 8912897, 64],"float32"), Tensor([1, 76, 8912897, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 557057, 64, 64],"float32"), Tensor([1, 64, 64, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 557057, 64, 64],"float32"), Tensor([1, 76, 76, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 61896, 192, 192],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 67395, 184, 184],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 67395, 184, 184],"float32"), Tensor([1, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 73661, 176, 176],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 73661, 176, 176],"float32"), Tensor([1, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1089, 128, 128, 128],"float32"), Tensor([1089, 128, 128, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1089, 128, 128, 128],"float32"), Tensor([1089, 256, 256, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([11142, 32, 80, 80],"float32"), Tensor([11142, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([11606, 3, 256, 256],"float32"), Tensor([11606, 256, 256, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([11606, 3, 256, 256],"float32"), Tensor([11606, 256, 256, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([128, 11142, 40, 40],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 2786, 80, 80],"float32"), Tensor([128, 2786, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 2786, 80, 80],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 32, 13927, 40],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 32, 20, 27853],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 32, 27853, 20],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 32, 40, 13927],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 32, 6964, 80],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 32, 6964, 80],"float32"), Tensor([128, 476, 6964, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 32, 80, 6964],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 44565, 20, 20],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([139265, 4, 64, 64],"float32"), Tensor([139265, 64, 64, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([139265, 4, 64, 64],"float32"), Tensor([139265, 76, 76, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 2177, 256, 256],"float32"), Tensor([16, 256, 256, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 2177, 256, 256],"float32"), Tensor([16, 256, 256, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 256, 64, 8705],"float32"), Tensor([16, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 256, 8705, 64],"float32"), Tensor([16, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 256, 8705, 64],"float32"), Tensor([16, 64, 8705, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 185686, 256],"float32"), Tensor([16, 256, 185686, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 185686, 256],"float32"), Tensor([16, 256, 185686, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 185686, 256],"float32"), Tensor([16, 256, 256, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 185686, 256],"float32"), Tensor([16, 256, 256, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 256, 185686],"float32"), Tensor([16, 256, 256, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 256, 185686],"float32"), Tensor([16, 256, 256, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 256, 256],"float32"), Tensor([16, 256, 278529, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 256, 256],"float32"), Tensor([16, 256, 278529, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 256, 256],"float32"), Tensor([16, 278529, 256, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 256, 256],"float32"), Tensor([16, 278529, 256, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 10, 445645],"float32"), Tensor([16, 11645, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 297097, 15],"float32"), Tensor([16, 11645, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 34817, 64, 64],"float32"), Tensor([16, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([17409, 32, 64, 64],"float32"), Tensor([17409, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([176, 3, 64, 64],"float32"), Tensor([176, 101283, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([176, 3, 64, 64],"float32"), Tensor([176, 64, 101283, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([176, 3, 64, 67522],"float32"), Tensor([176, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([176, 3, 67522, 64],"float32"), Tensor([176, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([176, 3, 67522, 64],"float32"), Tensor([176, 64, 67522, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([176, 3166, 64, 64],"float32"), Tensor([176, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([178258, 32, 20, 20],"float32"), Tensor([178258, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([185686, 3, 64, 64],"float32"), Tensor([185686, 64, 64, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([190141782, 3, 2, 2],"float32"), Tensor([190141782, 2, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([2177, 256, 64, 64],"float32"), Tensor([2177, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([2970966, 3, 16, 16],"float32"), Tensor([2970966, 16, 16, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 34817],"float32"), Tensor([4, 128, 128, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 34817],"float32"), Tensor([4, 256, 256, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([4, 128, 34817, 128],"float32"), Tensor([4, 128, 128, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([4, 128, 34817, 128],"float32"), Tensor([4, 128, 34817, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([4, 128, 34817, 128],"float32"), Tensor([4, 256, 256, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([4, 128, 34817, 128],"float32"), Tensor([4, 256, 34817, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([4, 139265, 64, 64],"float32"), Tensor([4, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([4, 32, 278529, 64],"float32"), Tensor([4, 64, 278529, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([4, 32, 278529, 64],"float32"), Tensor([4, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([4, 32, 64, 278529],"float32"), Tensor([4, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([4, 34817, 128, 128],"float32"), Tensor([4, 128, 128, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([4, 34817, 128, 128],"float32"), Tensor([4, 256, 256, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([44565, 32, 40, 40],"float32"), Tensor([44565, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([46422, 3, 64, 256],"float32"), Tensor([46422, 32, 100, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([47535446, 3, 4, 4],"float32"), Tensor([47535446, 4, 4, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([512, 273, 64, 256],"float32"), Tensor([512, 273, 100, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([512, 273, 64, 256],"float32"), Tensor([512, 32, 100, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([512, 3, 5803, 256],"float32"), Tensor([512, 32, 100, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([512, 3, 5803, 256],"float32"), Tensor([512, 32, 5803, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([512, 3, 64, 23211],"float32"), Tensor([512, 32, 100, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([512, 3, 64, 256],"float32"), Tensor([512, 22283, 100, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([512, 3, 64, 256],"float32"), Tensor([512, 32, 69633, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([56, 10186167, 2, 2],"float32"), Tensor([56, 2, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 159159, 16, 16],"float32"), Tensor([56, 16, 16, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 2546542, 4, 4],"float32"), Tensor([56, 4, 4, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 16, 16],"float32"), Tensor([56, 1273271, 16, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 16, 16],"float32"), Tensor([56, 16, 1273271, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 16, 848848],"float32"), Tensor([56, 16, 16, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 2, 2],"float32"), Tensor([56, 10186167, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 2, 2],"float32"), Tensor([56, 2, 10186167, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 2, 6790778],"float32"), Tensor([56, 2, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 212212, 64],"float32"), Tensor([56, 64, 212212, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 212212, 64],"float32"), Tensor([56, 64, 64, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 32, 32],"float32"), Tensor([56, 32, 636636, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 32, 32],"float32"), Tensor([56, 636636, 32, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 32, 424424],"float32"), Tensor([56, 32, 32, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 3395389, 4],"float32"), Tensor([56, 4, 3395389, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 3395389, 4],"float32"), Tensor([56, 4, 4, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 4, 3395389],"float32"), Tensor([56, 4, 4, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 4, 4],"float32"), Tensor([56, 4, 5093084, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 4, 4],"float32"), Tensor([56, 5093084, 4, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 424424, 32],"float32"), Tensor([56, 32, 32, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 424424, 32],"float32"), Tensor([56, 32, 424424, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 64, 212212],"float32"), Tensor([56, 64, 64, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 64, 64],"float32"), Tensor([56, 318318, 64, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 64, 64],"float32"), Tensor([56, 64, 318318, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 6790778, 2],"float32"), Tensor([56, 2, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 6790778, 2],"float32"), Tensor([56, 2, 6790778, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 848848, 16],"float32"), Tensor([56, 16, 16, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 848848, 16],"float32"), Tensor([56, 16, 848848, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 39790, 32, 32],"float32"), Tensor([56, 32, 32, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 9948, 64, 64],"float32"), Tensor([56, 64, 64, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([5821, 4, 280, 350],"float32"), Tensor([5821, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([61896, 1, 192, 192],"float32"), Tensor([61896, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([67395, 1, 184, 184],"float32"), Tensor([67395, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([685608, 4, 32, 26],"float32"), Tensor([685608, 32, 26, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([727584, 4, 28, 28],"float32"), Tensor([727584, 28, 28, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([727584, 4, 28, 28],"float32"), Tensor([727584, 34, 34, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([73661, 1, 176, 176],"float32"), Tensor([73661, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([742742, 3, 32, 32],"float32"), Tensor([742742, 32, 32, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(x=Tensor([16, 64, 80, 94, 311],"float32"), grid=Tensor([16, 280, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(x=Tensor([4, 244, 80, 94, 311],"float32"), grid=Tensor([4, 244, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(x=Tensor([4, 244, 80, 94, 311],"float32"), grid=Tensor([4, 280, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(x=Tensor([4, 64, 305, 94, 311],"float32"), grid=Tensor([4, 280, 305, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(x=Tensor([4, 64, 305, 94, 311],"float32"), grid=Tensor([4, 280, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(x=Tensor([4, 64, 80, 359, 311],"float32"), grid=Tensor([4, 280, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(x=Tensor([4, 64, 80, 94, 1186],"float32"), grid=Tensor([4, 280, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.group_norm(Tensor([1, 1024, 10, 222823],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 12, 185686],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 123791, 18],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 139265, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 159159, 14],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 1114113],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 222823, 10],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 53053, 42],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 55706, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 58638, 38],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 6, 371371],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 61896, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 65537, 34],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 69633, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 79580, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 8, 278529],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 85701, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 92843, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 12, 1485483],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 16, 1114113],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 20, 891290],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 222823, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 234550, 76],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 247581, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 318318, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 342804, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 371371, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 495161, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 557057, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 636636, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 891290, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10316, 1024, 6, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([13264, 1024, 6, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([14284, 1024, 6, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([15474, 1024, 6, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([17141, 128, 20, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([178956971, 4, 3, 2],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([18569, 128, 12, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([19546, 128, 12, 76],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([19895, 1024, 8, 14],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 134217729, 2, 2, 4],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 268435457, 2, 4],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 89478486, 4],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 89478486, 2, 4],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 4, 134217729, 2, 2],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 268435457, 2],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 178956971],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2, 89478486],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 89478486, 2],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 536870913],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NCL", )
paddle.nn.functional.group_norm(Tensor([2, 536870913, 4],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NLC", )
paddle.nn.functional.group_norm(Tensor([20632, 1024, 6, 18],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([20632, 128, 12, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([23211, 1024, 6, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([26527, 1024, 2, 42],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([26527, 128, 12, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([28567, 128, 12, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30948, 1024, 2, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30948, 128, 12, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([32769, 1024, 2, 34],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([34817, 1024, 2, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([357913942, 3, 4],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NLC", )
paddle.nn.functional.group_norm(Tensor([357913942, 4, 3],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NCL", )
paddle.nn.functional.group_norm(Tensor([37138, 1024, 6, 10],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([39790, 128, 16, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([41264, 128, 12, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([46422, 128, 12, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([5803, 1024, 12, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([74275, 128, 12, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([8571, 1024, 10, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([89478486, 3, 2, 2, 4],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([89478486, 4, 3, 2, 2],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([9285, 1024, 6, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([9773, 1024, 6, 38],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.hardshrink(Tensor([2281701379],"float32"), -1, None, )
paddle.nn.functional.hardshrink(Tensor([2281701379],"float32"), 0.5, None, )
paddle.nn.functional.hardshrink(Tensor([4294967297],"float16"), -1, None, )
paddle.nn.functional.hardshrink(Tensor([4294967297],"float16"), 0, None, )
paddle.nn.functional.hardshrink(Tensor([4294967297],"float16"), 0.5, None, )
paddle.nn.functional.hardshrink(x=Tensor([2281701379],"float32"), )
paddle.nn.functional.hardshrink(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.hardshrink(x=Tensor([4294967297],"float16"), threshold=-1, )
paddle.nn.functional.hardshrink(x=Tensor([4294967297],"float16"), threshold=0, )
paddle.nn.functional.hardsigmoid(Tensor([1, 1024, 1, 2228225],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 1024, 2228225, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 120, 1, 19014179],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 120, 19014179, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 144, 1, 15845149],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 144, 15845149, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 16, 1, 142606337],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 16, 142606337, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 192, 1, 11883862],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 192, 1, 11883862],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 192, 11883862, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 192, 11883862, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 2281701379, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 240, 1, 9507090],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 240, 9507090, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 288, 1, 7922575],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 288, 7922575, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 384, 1, 5941931],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 384, 1, 5941931],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 384, 5941931, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 384, 5941931, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 48, 1, 47535446],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 48, 47535446, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 512, 1, 4456449],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 512, 4456449, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 576, 1, 3961288],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 576, 3961288, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 768, 1, 2970966],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 768, 2970966, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 96, 1, 23767723],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 96, 1, 23767723],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 96, 23767723, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 96, 23767723, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1140850690, 2],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([11883862, 192, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([11883862, 192, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 1024, 1, 17409],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 1024, 17409, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 1280, 1, 13927],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 1280, 13927, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 17825793, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 256, 1, 69633],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 256, 69633, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 384, 1, 46422],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 384, 46422, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 512, 1, 34817],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 512, 34817, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 640, 1, 27853],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 640, 27853, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 768, 1, 23211],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 768, 23211, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([142606337, 16, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1431655766, 3],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([15845149, 144, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 142606337, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([16, 142606337, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 192, 1, 742742],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([16, 192, 1, 742742],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 192, 742742, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([16, 192, 742742, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 256, 1, 557057],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 256, 557057, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 384, 1, 371371],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([16, 384, 1, 371371],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 384, 371371, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([16, 384, 371371, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 512, 1, 278529],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 512, 278529, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 768, 1, 185686],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([16, 768, 185686, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([16, 96, 1, 1485483],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([16, 96, 1485483, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1782580, 1280, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([19014179, 120, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([19014179, 120, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 1024, 1, 1114113],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 1024, 1114113, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 1140850690, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2, 1140850690, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 1140850690],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 192, 1, 5941931],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2, 192, 5941931, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2, 2147483649],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 384, 1, 2970966],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2, 384, 2970966, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2, 48, 1, 23767723],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2, 48, 23767723, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2, 768, 1, 1485483],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2, 768, 1485483, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2, 96, 1, 11883862],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2, 96, 11883862, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2147483649, 2],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2228225, 1024, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([23767723, 96, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([23767723, 96, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2376773, 960, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([285213, 200, 40],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2970966, 768, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2970966, 768, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([3, 1431655766],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([30, 1901418, 40],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([30, 200, 380284],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([300, 7605672],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([3565159, 640, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([3961288, 576, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([4, 120, 1, 4753545],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 120, 4753545, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 192, 1, 2970966],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 192, 2970966, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 240, 1, 2376773],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 240, 2376773, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 384, 1, 1485483],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 384, 1485483, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 48, 1, 11883862],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 48, 11883862, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 480, 1, 1188387],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 480, 1188387, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 570425345, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 96, 1, 5941931],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 96, 5941931, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 960, 1, 594194],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 960, 594194, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4456449, 512, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([47535446, 48, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4753545, 480, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([557057, 4096],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([5941931, 384, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([5941931, 384, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([64, 120, 1, 297097],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([64, 120, 297097, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([64, 35651585, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([7922575, 288, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([8912897, 256, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([9507090, 240, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([9507090, 240, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardswish(Tensor([1, 1, 10, 228170138],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 103713700, 22],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 108652447, 21],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 11, 207427399],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 114085069, 20],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 120089547, 19],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 126761188, 18],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 13, 175515491],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 134217729, 17],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 14, 162978670],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 142606337, 16],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 15, 152113426],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 152113426, 15],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 16, 142606337],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 162978670, 14],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 17, 134217729],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 175515491, 13],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 18, 126761188],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 19, 120089547],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 20, 114085069],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 207427399, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 21, 108652447],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 22, 103713700],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 228170138, 10],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 26, 87757746],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 28, 81489335],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 30, 76056713],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 76056713, 30],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 81489335, 28],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 87757746, 26],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 10140896, 15, 15],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1024, 101283, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 106106, 21],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 111412, 20],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 117275, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 123791, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 18, 123791],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 19, 117275],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 20, 111412],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 21, 106106],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 22, 101283],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 110036, 144, 144],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 11641334, 14, 14],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 120, 3802836, 5],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 120, 5, 3802836],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 101283, 176],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 106106, 168],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 111412, 160],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 117275, 152],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 123791, 144],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 144, 123791],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 152, 117275],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 160, 111412],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 168, 106106],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 176, 101283],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 212212, 84],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 222823, 80],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 234550, 76],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 247581, 72],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 72, 247581],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 76, 234550],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 80, 222823],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 84, 212212],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 13501192, 13, 13],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 18857037, 11, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 2281701379],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 22817014, 10, 10],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 2535224, 30, 30],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 2910334, 28, 28],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 323371, 84, 84],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 3375298, 26, 26],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 356516, 80, 80],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 395032, 76, 76],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 440144, 72, 72],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 4714260, 22, 22],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 4714260, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 5173927, 21, 21],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 5173927, 21, 21],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 5704254, 20, 20],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 5704254, 20, 20],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 6320503, 19, 19],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 6320503, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 7042289, 18, 18],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 7042289, 18, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 73661, 176, 176],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 7895161, 17, 17],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 80843, 168, 168],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 8912897, 16, 16],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 89129, 160, 160],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 91268056, 5, 5],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 98758, 152, 152],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([10140896, 1, 15, 15],"float32"), )
paddle.nn.functional.hardswish(Tensor([1073741825, 4],"float16"), None, )
paddle.nn.functional.hardswish(Tensor([11641334, 1, 14, 14],"float32"), )
paddle.nn.functional.hardswish(Tensor([13501192, 1, 13, 13],"float32"), )
paddle.nn.functional.hardswish(Tensor([1782580, 1280],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([18857037, 1, 11, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 1140850690],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 300, 3802836],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 557057, 2048],"float32"), )
paddle.nn.functional.hardswish(Tensor([2228225, 1024],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([22817014, 1, 10, 10],"float32"), )
paddle.nn.functional.hardswish(Tensor([2527, 128, 84, 84],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([253522376, 3, 3],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2535224, 1, 30, 30],"float32"), )
paddle.nn.functional.hardswish(Tensor([2786, 128, 80, 80],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([285213, 200, 40],"float32"), )
paddle.nn.functional.hardswish(Tensor([2910334, 1, 28, 28],"float32"), )
paddle.nn.functional.hardswish(Tensor([3, 1431655766],"float16"), None, )
paddle.nn.functional.hardswish(Tensor([3, 253522376, 3],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([3, 3, 253522376],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([3, 3, 477218589],"float16"), None, )
paddle.nn.functional.hardswish(Tensor([3, 477218589, 3],"float16"), None, )
paddle.nn.functional.hardswish(Tensor([30, 1901418, 40],"float32"), )
paddle.nn.functional.hardswish(Tensor([30, 200, 380284],"float32"), )
paddle.nn.functional.hardswish(Tensor([3087, 128, 76, 76],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([3375298, 1, 26, 26],"float32"), )
paddle.nn.functional.hardswish(Tensor([3439, 128, 72, 72],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([3714, 300, 2048],"float32"), )
paddle.nn.functional.hardswish(Tensor([4604, 1024, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4714260, 1, 22, 22],"float32"), )
paddle.nn.functional.hardswish(Tensor([477218589, 3, 3],"float16"), None, )
paddle.nn.functional.hardswish(Tensor([5053, 1024, 21, 21],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([5173927, 1, 21, 21],"float32"), )
paddle.nn.functional.hardswish(Tensor([5571, 1024, 20, 20],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([5704254, 1, 20, 20],"float32"), )
paddle.nn.functional.hardswish(Tensor([576, 128, 176, 176],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([6173, 1024, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([632, 128, 168, 168],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([6320503, 1, 19, 19],"float32"), )
paddle.nn.functional.hardswish(Tensor([6878, 1024, 18, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([697, 128, 160, 160],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([7042289, 1, 18, 18],"float32"), )
paddle.nn.functional.hardswish(Tensor([760568, 120, 5, 5],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([772, 128, 152, 152],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([7895161, 1, 17, 17],"float32"), )
paddle.nn.functional.hardswish(Tensor([860, 128, 144, 144],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8912897, 1, 16, 16],"float32"), )
paddle.nn.functional.hardswish(x=Tensor([1073741825, 4],"float16"), )
paddle.nn.functional.hardswish(x=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.hardswish(x=Tensor([2, 2147483649],"float16"), )
paddle.nn.functional.hardswish(x=Tensor([4, 2, 536870913],"float16"), )
paddle.nn.functional.hardswish(x=Tensor([4, 268435457, 4],"float16"), )
paddle.nn.functional.hardswish(x=Tensor([536870913, 2, 4],"float16"), )
paddle.nn.functional.hardswish(x=Tensor([570425345, 4],"float32"), )
paddle.nn.functional.hardtanh(Tensor([10, 20, 11408507],"float32"), -1.0, 1.0, )
paddle.nn.functional.hardtanh(Tensor([10, 228170138, 1],"float32"), -1.0, 1.0, )
paddle.nn.functional.hardtanh(Tensor([114085069, 20, 1],"float32"), -1.0, 1.0, )
paddle.nn.functional.hardtanh(Tensor([2281701379],"float32"), -1.0, 1.0, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 477218589],"float16"), -3.2, -3.2, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 477218589],"float16"), -3.4, 0, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 477218589],"float16"), 0, 0, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 477218589],"float16"), 0, 1.3, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 477218589],"float16"), 1, 1, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 477218589],"float16"), 2.3, 3.5, None, )
paddle.nn.functional.hardtanh(Tensor([3, 477218589, 3],"float16"), -3.2, -3.2, None, )
paddle.nn.functional.hardtanh(Tensor([3, 477218589, 3],"float16"), -3.4, 0, None, )
paddle.nn.functional.hardtanh(Tensor([3, 477218589, 3],"float16"), 0, 0, None, )
paddle.nn.functional.hardtanh(Tensor([3, 477218589, 3],"float16"), 0, 1.3, None, )
paddle.nn.functional.hardtanh(Tensor([3, 477218589, 3],"float16"), 1, 1, None, )
paddle.nn.functional.hardtanh(Tensor([3, 477218589, 3],"float16"), 2.3, 3.5, None, )
paddle.nn.functional.hardtanh(Tensor([4294967297],"float16"), -1.0, 1.0, None, )
paddle.nn.functional.hardtanh(Tensor([477218589, 3, 3],"float16"), -3.2, -3.2, None, )
paddle.nn.functional.hardtanh(Tensor([477218589, 3, 3],"float16"), -3.4, 0, None, )
paddle.nn.functional.hardtanh(Tensor([477218589, 3, 3],"float16"), 0, 0, None, )
paddle.nn.functional.hardtanh(Tensor([477218589, 3, 3],"float16"), 0, 1.3, None, )
paddle.nn.functional.hardtanh(Tensor([477218589, 3, 3],"float16"), 1, 1, None, )
paddle.nn.functional.hardtanh(Tensor([477218589, 3, 3],"float16"), 2.3, 3.5, None, )
paddle.nn.functional.hardtanh(x=Tensor([2281701379],"float32"), )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 477218589],"float16"), max=-3.2, min=-3.2, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 477218589],"float16"), max=0, min=-3.4, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 477218589],"float16"), max=0, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 477218589],"float16"), max=1, min=1, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 477218589],"float16"), max=1.3, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 477218589],"float16"), max=3.5, min=2.3, )
paddle.nn.functional.hardtanh(x=Tensor([3, 477218589, 3],"float16"), max=-3.2, min=-3.2, )
paddle.nn.functional.hardtanh(x=Tensor([3, 477218589, 3],"float16"), max=0, min=-3.4, )
paddle.nn.functional.hardtanh(x=Tensor([3, 477218589, 3],"float16"), max=0, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([3, 477218589, 3],"float16"), max=1, min=1, )
paddle.nn.functional.hardtanh(x=Tensor([3, 477218589, 3],"float16"), max=1.3, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([3, 477218589, 3],"float16"), max=3.5, min=2.3, )
paddle.nn.functional.hardtanh(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.hardtanh(x=Tensor([477218589, 3, 3],"float16"), max=-3.2, min=-3.2, )
paddle.nn.functional.hardtanh(x=Tensor([477218589, 3, 3],"float16"), max=0, min=-3.4, )
paddle.nn.functional.hardtanh(x=Tensor([477218589, 3, 3],"float16"), max=0, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([477218589, 3, 3],"float16"), max=1, min=1, )
paddle.nn.functional.hardtanh(x=Tensor([477218589, 3, 3],"float16"), max=1.3, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([477218589, 3, 3],"float16"), max=3.5, min=2.3, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 42949673],"float16"), Tensor([10, 10, 42949673],"float16"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 42949673],"float16"), Tensor([10, 10, 42949673],"float16"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 42949673],"float16"), Tensor([10, 10, 42949673],"float16"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 42949673],"float16"), Tensor([10, 10, 42949673],"float16"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 85899346, 5],"float16"), Tensor([10, 85899346, 5],"float16"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 85899346, 5],"float16"), Tensor([10, 85899346, 5],"float16"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 85899346, 5],"float16"), Tensor([10, 85899346, 5],"float16"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 85899346, 5],"float16"), Tensor([10, 85899346, 5],"float16"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([119304648, 3, 3, 4],"float16"), Tensor([119304648, 3, 3, 4],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([119304648, 3, 3, 4],"float16"), Tensor([119304648, 3, 3, 4],"float16"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), reduction="mean", margin=4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), reduction="mean", margin=4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 119304648],"float16"), Tensor([4, 3, 3, 119304648],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 119304648],"float16"), Tensor([4, 3, 3, 119304648],"float16"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 89478486, 4],"float16"), Tensor([4, 3, 89478486, 4],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 89478486, 4],"float16"), Tensor([4, 3, 89478486, 4],"float16"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 357913942, 3],"float16"), Tensor([4, 357913942, 3],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 89478486, 3, 4],"float16"), Tensor([4, 89478486, 3, 4],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 89478486, 3, 4],"float16"), Tensor([4, 89478486, 3, 4],"float16"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([477218589, 3, 3],"float16"), Tensor([477218589, 3, 3],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([85899346, 10, 5],"float16"), Tensor([85899346, 10, 5],"float16"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([85899346, 10, 5],"float16"), Tensor([85899346, 10, 5],"float16"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([85899346, 10, 5],"float16"), Tensor([85899346, 10, 5],"float16"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([85899346, 10, 5],"float16"), Tensor([85899346, 10, 5],"float16"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.instance_norm(Tensor([1140851, 100, 4, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([1426064, 100, 16],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([1426064, 100, 4, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([1521135, 100, 3, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 11408507],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 2281702, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 3802836],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 7158279],"float16"), None, None, Tensor([100],"float16"), Tensor([100],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 2852127],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 5368710],"float16"), None, None, Tensor([100],"float16"), Tensor([100],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4294968, 5],"float16"), None, None, Tensor([100],"float16"), Tensor([100],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 32, 35651585],"float32"), )
paddle.nn.functional.instance_norm(Tensor([2, 8912897, 128],"float32"), )
paddle.nn.functional.instance_norm(Tensor([2147484, 100, 4, 5],"float16"), None, None, Tensor([100],"float16"), Tensor([100],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2863312, 100, 3, 5],"float16"), None, None, Tensor([100],"float16"), Tensor([100],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([34817, 32, 32, 64],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([4, 100, 1426064, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 1426064],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 5704254],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([557057, 32, 128],"float32"), )
paddle.nn.functional.instance_norm(Tensor([5704254, 100, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([65537, 32, 32, 64],"float16"), None, None, Tensor([32],"float16"), Tensor([32],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([8, 32, 139265, 64],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([8, 32, 262145, 64],"float16"), None, None, Tensor([32],"float16"), Tensor([32],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([8, 32, 32, 278529],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([8, 32, 32, 524289],"float16"), None, None, Tensor([32],"float16"), Tensor([32],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(x=Tensor([1431655766, 1, 3],"float16"), )
paddle.nn.functional.instance_norm(x=Tensor([190141782, 2, 2, 3],"float32"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 1, 2147483649],"float16"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 190141782, 2, 3],"float32"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 190141782, 3],"float32"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 285212673],"float32"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 536870913],"float16"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 536870913],"float16"), weight=None, bias=None, data_format="NCHW", )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 536870913],"float16"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 357913942, 3],"float16"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 357913942, 3],"float16"), weight=None, bias=None, data_format="NCHW", )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 357913942, 3],"float16"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 357913942, 2, 3],"float16"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 357913942, 2, 3],"float16"), weight=None, bias=None, data_format="NCHW", )
paddle.nn.functional.instance_norm(x=Tensor([2, 357913942, 2, 3],"float16"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 715827883, 3],"float16"), )
paddle.nn.functional.instance_norm(x=Tensor([357913942, 2, 2, 3],"float16"), )
paddle.nn.functional.instance_norm(x=Tensor([357913942, 2, 2, 3],"float16"), weight=None, bias=None, data_format="NCHW", )
paddle.nn.functional.instance_norm(x=Tensor([357913942, 2, 2, 3],"float16"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.nn.functional.interpolate(Tensor([1, 1, 128, 17825793],"float32"), list[512,512,], mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 1, 142606337, 16],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 16, 142606337],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 17825793, 128],"float32"), list[512,512,], mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 1, 2228225, 1024],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 276, 8267034],"float32"), size=list[274,47,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 1, 2859275, 798],"float32"), size=list[144,200,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 2859275, 798],"float32"), size=list[18,25,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 2859275, 798],"float32"), size=list[36,50,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 2859275, 798],"float32"), size=list[72,100,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 2859275, 798],"float32"), size=list[9,13,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 2970966, 768],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 3100138, 736],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 3241054, 704],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 3565159, 640],"float32"), tuple(160,160,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 1, 3961288, 576],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 3961288, 576],"float32"), size=list[192,144,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 3961288, 576],"float32"), size=list[23,18,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 3961288, 576],"float32"), size=list[24,18,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 3961288, 576],"float32"), size=list[45,36,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 3961288, 576],"float32"), size=list[48,36,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 3961288, 576],"float32"), size=list[89,72,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 3961288, 576],"float32"), size=list[96,72,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 46565335, 49],"float32"), size=list[274,47,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 1, 4753545, 480],"float32"), size=list[20,15,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 4753545, 480],"float32"), size=list[40,30,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 4753545, 480],"float32"), size=list[80,60,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 3961288],"float32"), size=list[144,200,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 3961288],"float32"), size=list[18,25,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 3961288],"float32"), size=list[72,100,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 3961288],"float32"), size=list[9,13,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 3565159],"float32"), size=list[20,15,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 3565159],"float32"), size=list[40,30,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 3565159],"float32"), size=list[80,60,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 3565159],"float32"), tuple(160,160,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 1, 704, 3241054],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 707, 3227301],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 707, 3227301],"float32"), size=list[23,18,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 707, 3227301],"float32"), size=list[45,36,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 707, 3227301],"float32"), size=list[89,72,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 736, 3100138],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 2970966],"float32"), size=list[24,18,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 2970966],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 2970966],"float32"), size=list[48,36,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 2970966],"float32"), size=list[96,72,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 8912897, 256],"float32"), tuple(1024,1024,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 1, 17825793],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 1, 17825793],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 16, 1114113],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 128, 16, 1114113],"float32"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 128, 17825793, 1],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 17825793, 1],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 193759, 92],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 32, 557057],"float32"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 33554433],"float16"), size=tuple(16,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 128, 557057, 32],"float32"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 557057, 32],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 128, 557057, 32],"float32"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 128, 92, 193759],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1429638, 19, 84],"float32"), size=list[17,82,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 167773, 100, 136],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 167773, 100, 136],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 168715, 276, 49],"float32"), size=list[274,47,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 19, 128, 938200],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 128, 938200],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 19, 256, 469100],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 469100, 256],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 19, 469100, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 64, 1876400],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 938200, 128],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 938200, 128],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 192, 16, 742742],"float32"), size=tuple(24,24,), mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 192, 22369622],"float16"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 742742, 16],"float32"), size=tuple(24,24,), mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 124, 9200409],"float32"), list[496,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 124, 9200409],"float32"), size=list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 1249563, 913],"float32"), size=tuple(Tensor([1],"int64"),Tensor([1],"int64"),), )
paddle.nn.functional.interpolate(Tensor([1, 2, 128, 8912897],"float32"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 128, 8912897],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 13581556, 84],"float32"), size=list[17,82,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 2, 17825793, 64],"float32"), list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 17825793, 64],"float32"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 19, 60044774],"float32"), size=list[17,82,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 2, 2097153, 544],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 256, 4456449],"float32"), list[Tensor([1],"int64"),Tensor([1],"int64"),], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 2, 544, 2097153],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 608, 1876400],"float32"), size=tuple(Tensor([1],"int64"),Tensor([1],"int64"),), )
paddle.nn.functional.interpolate(Tensor([1, 2, 62, 18400818],"float32"), list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 64, 17825793],"float32"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 8912897, 128],"float32"), list[496,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 8912897, 128],"float32"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 8912897, 128],"float32"), size=list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 8912897, 128],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 23283, 280, 350],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 247581, 96, 96],"float32"), size=list[96,96,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 1, 8912897],"float32"), list[62,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 1, 8912897],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 1, 8912897],"float32"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 101283, 88],"float32"), size=list[88,88,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 128, 69633],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 13, 685608],"float32"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 13, 685608],"float32"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 13, 685608],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 139265, 64],"float32"), list[124,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 16, 557057],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 16, 557057],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 19, 469100],"float32"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 200, 44565],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 256, 262145, 64],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 32769, 272],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 256, 445645, 20],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 469100, 19],"float32"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 524289, 17],"float32"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 557057, 16],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 557057, 16],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 62, 143757],"float32"), list[124,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 64, 262145],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 685608, 13],"float32"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 69633, 128],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 69633, 128],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 88, 101283],"float32"), size=list[88,88,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 8912897, 1],"float32"), list[62,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 8912897, 1],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 8912897, 1],"float32"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 258, 100, 88439],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 100, 88439],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 130056, 68],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 25, 353753],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 25, 353753],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 260112, 34],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 260112, 34],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 50, 176877],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 65028, 136],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 65028, 136],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 268435457, 16],"float16"), size=tuple(16,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 268435457, 16],"float16"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 2684355, 25, 34],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 2684355, 25, 34],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 269578, 92, 92],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 29104, 280, 280],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 294642, 88, 88],"float32"), size=list[88,88,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 3, 11883862, 64],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 11883862, 64],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 181, 4202029],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 182, 4178941],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 2173049, 350],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 256, 2970966],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 2716312, 280],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 28, 27163112],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 280, 2716312],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 280, 2716312],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 31690297, 24],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 3728271, 204],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 3802836, 200],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 4724020, 161],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 64, 11883862],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 64, 11883862],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3145, 800, 907],"float32"), size=tuple(25,29,), )
paddle.nn.functional.interpolate(Tensor([1, 32, 1, 71303169],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 2, 35651585],"float32"), size=tuple(2,2,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 32, 35651585, 2],"float32"), size=tuple(2,2,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 32, 71303169, 1],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 3249, 686, 1024],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 34817, 256, 256],"float32"), list[Tensor([1],"int64"),Tensor([1],"int64"),], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 3869, 768, 768],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 4, 628915, 907],"float32"), size=tuple(25,29,), )
paddle.nn.functional.interpolate(Tensor([1, 4, 800, 713032],"float32"), size=tuple(25,29,), )
paddle.nn.functional.interpolate(Tensor([1, 4111, 608, 913],"float32"), size=tuple(Tensor([1],"int64"),Tensor([1],"int64"),), )
paddle.nn.functional.interpolate(Tensor([1, 41944, 200, 272],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 4213, 736, 736],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 4456449, 16, 32],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 44565, 256, 200],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 4604, 704, 704],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 4965, 576, 798],"float32"), size=list[144,200,], )
paddle.nn.functional.interpolate(Tensor([1, 4965, 576, 798],"float32"), size=list[18,25,], )
paddle.nn.functional.interpolate(Tensor([1, 4965, 576, 798],"float32"), size=list[36,50,], )
paddle.nn.functional.interpolate(Tensor([1, 4965, 576, 798],"float32"), size=list[72,100,], )
paddle.nn.functional.interpolate(Tensor([1, 4965, 576, 798],"float32"), size=list[9,13,], )
paddle.nn.functional.interpolate(Tensor([1, 5158, 768, 576],"float32"), size=list[192,144,], )
paddle.nn.functional.interpolate(Tensor([1, 5158, 768, 576],"float32"), size=list[24,18,], )
paddle.nn.functional.interpolate(Tensor([1, 5158, 768, 576],"float32"), size=list[48,36,], )
paddle.nn.functional.interpolate(Tensor([1, 5158, 768, 576],"float32"), size=list[96,72,], )
paddle.nn.functional.interpolate(Tensor([1, 557057, 64, 64],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 557057, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 5571, 640, 640],"float32"), tuple(160,160,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 5603, 707, 576],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([1, 5603, 707, 576],"float32"), size=list[23,18,], )
paddle.nn.functional.interpolate(Tensor([1, 5603, 707, 576],"float32"), size=list[45,36,], )
paddle.nn.functional.interpolate(Tensor([1, 5603, 707, 576],"float32"), size=list[89,72,], )
paddle.nn.functional.interpolate(Tensor([1, 570425345, 2, 2],"float32"), size=tuple(2,2,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 64, 32, 1114113],"float32"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 64, 371371, 96],"float32"), size=list[96,96,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 64, 557057, 64],"float32"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 64, 96, 371371],"float32"), size=list[96,96,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 671089, 50, 68],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 7428, 640, 480],"float32"), size=list[20,15,], )
paddle.nn.functional.interpolate(Tensor([1, 7428, 640, 480],"float32"), size=list[40,30,], )
paddle.nn.functional.interpolate(Tensor([1, 768, 14, 212212],"float32"), size=tuple(28,28,), align_corners=False, mode="bicubic", )
paddle.nn.functional.interpolate(Tensor([1, 768, 212212, 14],"float32"), size=tuple(28,28,), align_corners=False, mode="bicubic", )
paddle.nn.functional.interpolate(Tensor([1, 7711, 544, 544],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 77869, 182, 161],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([10405, 258, 25, 34],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([10405, 258, 25, 34],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([1073742, 10, 10, 10, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([1073742, 10, 10, 10, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1151, 256, 88, 88],"float32"), size=list[88,88,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1398102, 192, 16],"float16"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([14855, 3, 256, 200],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 1426064, 10, 10],"float32"), size=tuple(10,10,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 32, 19, 234550],"float32"), size=tuple(19,19,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 32, 20, 222823],"float32"), size=list[40,40,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 32, 222823, 20],"float32"), size=list[40,40,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 32, 234550, 19],"float32"), size=tuple(19,19,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 395032, 19, 19],"float32"), size=tuple(19,19,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 64, 10, 222823],"float32"), size=list[20,20,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 64, 10, 222823],"float32"), size=tuple(10,10,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 64, 222823, 10],"float32"), size=list[20,20,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 64, 222823, 10],"float32"), size=tuple(10,10,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([164, 256, 200, 272],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([168715, 1, 276, 49],"float32"), size=list[274,47,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([17409, 2, 256, 256],"float32"), list[Tensor([1],"int64"),Tensor([1],"int64"),], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([17817, 64, 2001],"float32"), size=list[2001,], mode="linear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([17825793, 32, 2, 2],"float32"), size=tuple(2,2,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([185686, 3, 64, 64],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([185686, 3, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1857, 3, 640, 640],"float32"), size=tuple(640,640,), mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([197516, 32, 19, 19],"float32"), size=tuple(19,19,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 2147484],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 2147484],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 5368710, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 5368710, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 5368710, 10, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 5368710, 10, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1140851, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1140851, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1140851, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1140851, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 16, 35651585],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 214748365, 5],"float16"), size=list[9,10,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 214748365, 5],"float16"), size=list[9,10,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 35651585, 16],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 35791395, 5, 6],"float16"), size=list[9,10,11,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 268435457],"float16"), size=list[9,10,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 268435457],"float16"), size=list[9,10,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 44739243, 6],"float16"), size=list[9,10,11,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 5, 53687092],"float16"), size=list[9,10,11,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 246724, 68, 68],"float32"), size=list[68,68,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 3, 38028357, 10],"float32"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 4, 4, 44739243],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 4, 44739243, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 44739243, 4, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 119304648],"float16"), size=list[12,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 119304648],"float16"), size=list[256,256,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 119304648],"float16"), size=tuple(12,13,), scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 63380594],"float32"), size=list[12,12,], mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 63380594],"float32"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 63380594, 6],"float32"), size=list[12,12,], mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 3, 71582789, 10],"float16"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 71582789, 10],"float16"), size=list[12,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 71582789, 10],"float16"), size=list[256,256,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 71582789, 10],"float16"), size=tuple(12,13,), scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 33554433, 4, 4, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 35791395, 6, 10],"float16"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2852127],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2852127],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2852127],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2852127],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2852127, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2852127, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2852127, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2852127, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2852127, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2852127, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2852127, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 4, 4, 33554433],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 44739243, 4, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 44739243, 4, 4, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 5368710, 10, 10, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 5368710, 10, 10, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 64, 262145, 68],"float32"), size=list[68,68,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 64, 68, 262145],"float32"), size=list[68,68,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([20, 57015, 2001],"float32"), size=list[2001,], mode="linear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([20, 64, 1782580],"float32"), size=list[2001,], mode="linear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2056, 2, 608, 913],"float32"), size=tuple(Tensor([1],"int64"),Tensor([1],"int64"),), )
paddle.nn.functional.interpolate(Tensor([2097153, 128, 16],"float16"), size=tuple(16,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([2107, 128, 92, 92],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([22369622, 3, 4, 4, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([22369622, 4, 4, 4, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(257,455,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(258,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(259,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(260,461,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(261,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(262,464,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(263,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(264,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(265,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(266,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(267,473,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(268,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(269,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(270,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(271,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(272,482,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(273,484,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(274,485,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(275,487,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(276,489,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(277,491,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(278,493,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(279,494,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(280,496,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(281,498,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(282,500,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(283,501,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(284,503,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(285,505,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(286,507,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(287,508,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(288,510,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(289,512,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(290,514,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(291,516,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(292,517,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(293,519,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(294,521,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(295,523,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(296,524,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(297,526,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(298,528,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(299,530,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(300,532,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(301,533,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(302,535,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(303,537,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(304,539,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(305,540,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(306,542,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(307,544,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(308,546,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(309,547,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(310,549,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(311,551,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(312,553,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(313,555,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(314,556,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(315,558,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(316,560,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(317,562,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(318,563,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(319,565,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2454, 8, 256, 454],"float32"), size=tuple(320,567,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([25957, 3, 182, 161],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2602, 258, 50, 68],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([278529, 2, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(257,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(258,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(259,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(260,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(261,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(262,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(263,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(264,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(265,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(266,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(267,400,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(268,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(269,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(270,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(271,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(272,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(273,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(274,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(275,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(276,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(277,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(278,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(279,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(280,420,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(281,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(282,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(283,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(284,426,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(285,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(286,429,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(287,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(288,432,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(289,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(290,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(291,436,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(292,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(293,439,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(294,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(295,442,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(296,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(297,445,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(298,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(299,448,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(300,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(301,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(302,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(303,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(304,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(305,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(306,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(307,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(308,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(309,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(310,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(311,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(312,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(313,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(314,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(315,472,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(316,474,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(317,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(318,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(319,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(320,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(257,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(258,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(259,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(260,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(261,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(262,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(263,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(264,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(265,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(266,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(267,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(268,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(269,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(270,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(271,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(272,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(273,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(274,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(275,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(276,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(277,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(278,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(279,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(280,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(281,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(282,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(283,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(284,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(285,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(286,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(287,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(288,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(289,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(290,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(291,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(292,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(293,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(294,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(295,428,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(296,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(297,431,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(298,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(299,434,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(300,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(301,437,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(302,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(303,440,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(304,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(305,443,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(306,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(307,446,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(308,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(309,449,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(310,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(311,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(312,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(313,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(314,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(315,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(316,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(317,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(318,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2995, 8, 256, 372],"float32"), size=tuple(320,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 1, 5941931, 128],"float32"), list[256,256,], mode="nearest", )
paddle.nn.functional.interpolate(Tensor([3, 15474, 256, 192],"float32"), size=tuple(341,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15474, 256, 192],"float32"), size=tuple(342,257,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15474, 256, 192],"float32"), size=tuple(344,258,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15474, 256, 192],"float32"), size=tuple(345,259,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15474, 256, 192],"float32"), size=tuple(346,260,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15474, 256, 192],"float32"), size=tuple(348,261,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15474, 256, 192],"float32"), size=tuple(349,262,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15474, 256, 192],"float32"), size=tuple(350,263,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(257,455,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(258,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(259,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(260,461,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(261,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(262,464,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(263,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(264,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(265,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(266,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(268,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(269,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(270,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(271,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(272,482,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(273,484,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(274,485,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(275,487,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(276,489,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(277,491,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(278,493,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(279,494,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(280,496,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(281,498,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(282,500,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(283,501,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(284,503,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(285,505,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(286,507,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(287,508,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(288,510,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(289,512,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(290,514,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(291,516,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(292,517,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(293,519,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(294,521,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(295,523,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(296,524,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(297,526,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(298,528,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(299,530,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(300,532,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(301,533,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(302,535,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(303,537,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(304,539,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(305,540,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(306,542,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(307,544,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(308,546,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(309,547,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(310,549,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(311,551,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(312,553,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(313,555,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(314,556,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(315,558,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(316,560,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(317,562,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(318,563,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(319,565,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(320,567,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(257,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(258,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(259,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(260,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(261,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(262,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(263,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(264,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(265,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(266,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(267,400,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(268,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(269,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(270,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(271,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(272,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(273,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(274,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(275,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(276,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(277,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(278,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(279,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(280,420,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(281,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(282,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(283,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(284,426,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(285,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(286,429,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(287,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(288,432,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(289,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(290,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(291,436,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(292,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(293,439,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(294,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(295,442,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(296,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(297,445,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(298,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(299,448,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(300,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(301,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(302,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(303,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(304,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(305,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(306,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(307,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(308,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(309,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(310,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(311,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(312,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(313,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(314,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(315,472,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(317,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(318,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(319,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7737, 256, 384],"float32"), size=tuple(320,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(257,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(258,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(259,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(260,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(261,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(262,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(263,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(264,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(265,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(266,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(267,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(268,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(269,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(270,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(271,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(272,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(273,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(274,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(275,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(276,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(277,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(278,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(279,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(280,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(282,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(283,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(284,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(285,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(286,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(287,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(288,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(289,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(290,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(291,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(292,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(293,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(294,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(295,428,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(296,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(297,431,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(299,434,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(300,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(301,437,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(302,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(303,440,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(304,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(305,443,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(306,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(307,446,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(308,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(309,449,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(310,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(311,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(312,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(313,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(314,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(315,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(316,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(317,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(318,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(319,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(320,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(257,455,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(258,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(259,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(260,461,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(261,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(262,464,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(263,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(264,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(265,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(266,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(267,473,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(268,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(269,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(271,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(272,482,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(273,484,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(274,485,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(275,487,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(276,489,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(277,491,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(278,493,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(279,494,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(280,496,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(281,498,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(282,500,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(283,501,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(284,503,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(285,505,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(286,507,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(287,508,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(288,510,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(289,512,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(290,514,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(291,516,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(292,517,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(293,519,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(294,521,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(295,523,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(296,524,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(297,526,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(298,528,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(299,530,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(300,532,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(302,535,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(303,537,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(304,539,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(305,540,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(306,542,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(307,544,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(308,546,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(309,547,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(310,549,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(311,551,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(312,553,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(313,555,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(314,556,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(315,558,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(316,560,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(317,562,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(318,563,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(319,565,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 209408, 454],"float32"), size=tuple(320,567,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(257,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(258,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(259,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(260,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(261,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(262,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(263,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(264,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(265,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(266,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(267,400,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(268,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(269,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(270,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(271,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(272,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(273,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(274,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(275,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(276,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(277,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(278,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(279,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(280,420,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(281,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(282,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(283,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(284,426,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(285,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(286,429,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(287,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(288,432,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(289,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(290,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(291,436,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(292,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(293,439,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(294,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(295,442,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(296,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(297,445,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(298,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(299,448,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(300,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(301,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(302,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(303,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(304,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(305,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(306,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(307,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(308,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(309,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(310,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(311,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(312,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(314,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(315,472,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(316,474,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(317,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(318,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(319,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 247581, 384],"float32"), size=tuple(320,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(257,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(258,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(259,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(260,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(261,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(262,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(263,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(264,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(265,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(266,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(267,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(268,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(269,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(270,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(271,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(272,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(273,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(274,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(275,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(276,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(277,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(278,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(279,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(280,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(281,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(282,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(283,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(284,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(285,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(286,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(287,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(288,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(289,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(290,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(291,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(292,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(293,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(294,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(295,428,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(296,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(297,431,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(298,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(299,434,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(300,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(301,437,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(302,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(303,440,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(304,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(305,443,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(306,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(307,446,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(308,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(309,449,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(310,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(311,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(312,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(314,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(315,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(316,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(317,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(318,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(319,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(320,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(257,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(257,341,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(257,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(257,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(257,455,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(258,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(258,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(258,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(258,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(259,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(259,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(259,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(259,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(259,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(260,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(260,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(260,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(260,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(260,461,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(261,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(261,346,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(261,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(261,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(261,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(262,321,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(262,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(262,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(262,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(262,464,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(263,322,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(263,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(263,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(263,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(263,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(264,323,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(264,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(264,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(264,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(264,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(265,325,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(265,351,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(265,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(265,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(265,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(266,326,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(266,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(266,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(266,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(266,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(267,327,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(267,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(267,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(267,473,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(268,328,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(268,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(268,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(268,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(268,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(269,329,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(269,357,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(269,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(269,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(269,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(270,331,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(270,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(270,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(270,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(270,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(271,332,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(271,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(271,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(271,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(271,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(272,333,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(272,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(272,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(272,482,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(273,334,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(273,362,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(273,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(273,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(273,484,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(274,336,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(274,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(274,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(274,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(274,485,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(275,337,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(275,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(275,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(275,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(275,487,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(276,338,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(276,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(276,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(276,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(276,489,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(277,339,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(277,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(277,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(277,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(277,491,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(278,340,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(278,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(278,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(278,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(278,493,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(279,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(279,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(279,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(279,494,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(280,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(280,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(280,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(280,420,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(280,496,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(281,344,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(281,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(281,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(281,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(281,498,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(282,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(282,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(282,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(282,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(282,500,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(283,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(283,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(283,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(283,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(283,501,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(284,348,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(284,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(284,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(284,426,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(284,503,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(285,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(285,378,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(285,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(285,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(285,505,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(286,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(286,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(286,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(286,429,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(286,507,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(287,352,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(287,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(287,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(287,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(287,508,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(288,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(288,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(288,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(288,432,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(288,510,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(289,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(289,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(289,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(289,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(289,512,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(290,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(290,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(290,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(290,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(290,514,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(291,356,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(291,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(291,436,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(291,516,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(292,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(292,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(292,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(292,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(292,517,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(293,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(293,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(293,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(293,439,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(293,519,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(294,360,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(294,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(294,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(294,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(294,521,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(295,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(295,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(295,428,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(295,442,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(295,523,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(296,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(296,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(296,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(296,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(296,524,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(297,364,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(297,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(297,431,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(297,445,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(297,526,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(298,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(298,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(298,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(298,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(298,528,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(299,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(299,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(299,434,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(299,448,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(299,530,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(300,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(300,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(300,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(300,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(300,532,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(301,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(301,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(301,437,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(301,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(301,533,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(302,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(302,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(302,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(302,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(302,535,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(303,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(303,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(303,440,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(303,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(303,537,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(304,372,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(304,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(304,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(304,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(304,539,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(305,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(305,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(305,443,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(305,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(305,540,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(306,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(306,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(306,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(306,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(307,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(307,407,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(307,446,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(307,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(307,544,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(308,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(308,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(308,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(308,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(308,546,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(309,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(309,410,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(309,449,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(309,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(309,547,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(310,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(310,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(310,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(310,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(310,549,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(311,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(311,413,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(311,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(311,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(311,551,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(312,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(312,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(312,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(312,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(312,553,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(313,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(313,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(313,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(313,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(313,555,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(314,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(314,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(314,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(314,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(314,556,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(315,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(315,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(315,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(315,472,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(315,558,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(316,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(316,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(316,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(316,474,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(316,560,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(317,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(317,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(317,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(317,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(317,562,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(318,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(318,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(318,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(318,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(318,563,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(319,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(319,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(319,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(319,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(319,565,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(320,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(320,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(320,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(320,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(320,567,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(341,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(342,257,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(344,258,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(345,259,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(346,260,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(348,261,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(349,262,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(350,263,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(352,264,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(353,265,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(354,266,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(356,267,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(357,268,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(358,269,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(360,270,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(361,271,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(362,272,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(364,273,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(365,274,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(366,275,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(368,276,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(369,277,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(370,278,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(372,279,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(373,280,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(374,281,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(376,282,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(377,283,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(378,284,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(380,285,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(381,286,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(382,287,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(384,288,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(385,289,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(386,290,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(388,291,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(390,293,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(392,294,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(393,295,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(394,296,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(396,297,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(397,298,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(398,299,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(400,300,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(401,301,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(402,302,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(404,303,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(405,304,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(406,305,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(408,306,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(409,307,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(410,308,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(412,309,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(413,310,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(414,311,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(416,312,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(417,313,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(418,314,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(420,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(421,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(422,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(424,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(425,319,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(426,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(257,341,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(258,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(259,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(260,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(261,346,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(262,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(263,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(264,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(265,351,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(266,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(267,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(268,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(269,357,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(270,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(271,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(272,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(273,362,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(274,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(275,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(276,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(277,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(278,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(279,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(280,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(281,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(282,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(283,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(284,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(285,378,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(286,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(287,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(288,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(289,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(290,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(291,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(292,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(293,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(294,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(295,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(296,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(297,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(298,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(299,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(300,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(301,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(302,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(303,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(304,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(305,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(306,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(307,407,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(308,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(309,410,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(310,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(311,413,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(312,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(313,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(314,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(315,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(316,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(317,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(318,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(319,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(320,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(257,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(258,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(259,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(260,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(261,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(262,321,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(263,322,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(264,323,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(265,325,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(266,326,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(267,327,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(268,328,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(270,331,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(271,332,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(272,333,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(273,334,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(274,336,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(275,337,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(276,338,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(277,339,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(278,340,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(279,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(280,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(281,344,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(282,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(284,348,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(285,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(286,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(287,352,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(288,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(289,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(290,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(291,356,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(292,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(293,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(294,360,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(295,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(296,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(297,364,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(298,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(299,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(300,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(301,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(302,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(303,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(304,372,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(305,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(307,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(308,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(309,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(310,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(311,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(312,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(313,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(314,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(315,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(316,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(317,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(318,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(319,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(320,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(341,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(342,257,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(344,258,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(345,259,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(346,260,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(348,261,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(349,262,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(350,263,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(352,264,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(353,265,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(354,266,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(356,267,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(357,268,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(358,269,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(360,270,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(361,271,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(362,272,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(364,273,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(365,274,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(366,275,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(368,276,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(369,277,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(370,278,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(372,279,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(374,281,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(376,282,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(377,283,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(378,284,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(380,285,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(381,286,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(382,287,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(384,288,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(385,289,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(386,290,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(388,291,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(389,292,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(390,293,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(392,294,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(393,295,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(394,296,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(396,297,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(397,298,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(398,299,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(400,300,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(401,301,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(402,302,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(404,303,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(405,304,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(406,305,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(408,306,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(409,307,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(410,308,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(412,309,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(413,310,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(414,311,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(416,312,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(417,313,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(418,314,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(420,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(421,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(422,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(424,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(425,319,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 495161, 192],"float32"), size=tuple(426,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(257,341,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(258,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(259,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(260,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(261,346,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(262,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(263,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(264,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(265,351,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(266,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(268,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(269,357,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(270,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(271,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(272,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(273,362,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(274,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(275,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(277,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(278,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(279,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(280,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(281,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(282,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(283,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(284,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(285,378,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(286,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(287,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(288,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(289,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(290,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(291,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(292,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(294,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(295,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(296,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(297,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(298,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(299,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(300,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(301,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(302,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(303,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(304,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(305,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(306,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(307,407,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(308,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(309,410,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(310,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(311,413,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(312,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(313,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(314,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(315,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(316,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(317,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(318,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(319,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8739, 256, 340],"float32"), size=tuple(320,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(257,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(258,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(259,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(260,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(262,321,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(263,322,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(264,323,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(265,325,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(266,326,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(267,327,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(268,328,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(269,329,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(270,331,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(271,332,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(272,333,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(273,334,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(274,336,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(275,337,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(276,338,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(277,339,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(278,340,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(279,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(280,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(281,344,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(282,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(283,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(284,348,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(285,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(286,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(287,352,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(288,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(289,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(290,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(291,356,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(292,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(293,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(294,360,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(295,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(296,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(297,364,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(298,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(299,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(300,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(301,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(302,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(303,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(304,372,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(305,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(306,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(307,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(308,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(309,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(310,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(311,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(312,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(313,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(314,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(315,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(316,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(317,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(318,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(319,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(320,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3249, 1, 686, 1024],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(257,341,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(258,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(259,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(260,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(261,346,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(262,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(263,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(264,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(265,351,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(266,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(267,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(268,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(269,357,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(270,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(271,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(272,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(273,362,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(274,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(275,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(276,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(277,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(278,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(279,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(280,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(281,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(282,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(283,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(284,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(285,378,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(286,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(287,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(288,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(289,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(290,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(291,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(292,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(293,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(294,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(295,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(297,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(298,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(299,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(300,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(301,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(302,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(303,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(304,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(305,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(306,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(307,407,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(308,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(309,410,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(310,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(311,413,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(312,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(313,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(314,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(315,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(316,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(317,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(318,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(319,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3277, 8, 256, 340],"float32"), size=tuple(320,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([34817, 128, 16, 32],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(257,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(258,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(259,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(260,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(261,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(263,322,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(264,323,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(265,325,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(266,326,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(267,327,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(268,328,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(269,329,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(270,331,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(271,332,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(272,333,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(273,334,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(274,336,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(275,337,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(276,338,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(277,339,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(278,340,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(279,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(280,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(281,344,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(282,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(283,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(284,348,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(285,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(286,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(287,352,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(288,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(289,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(290,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(291,356,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(292,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(293,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(294,360,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(295,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(296,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(297,364,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(298,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(299,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(300,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(301,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(302,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(303,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(304,372,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(305,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(306,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(307,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(308,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(309,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(310,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(311,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(312,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(313,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(314,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(315,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(316,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(317,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(318,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(319,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(320,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([356516, 64, 10, 10],"float32"), size=tuple(10,10,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([3856, 2, 544, 544],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3869, 1, 768, 768],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3869, 64, 96, 96],"float32"), size=list[96,96,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 16, 524289],"float16"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 262145, 32],"float16"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 32, 262145],"float16"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 524289, 16],"float16"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 192, 699051, 8],"float16"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 192, 8, 699051],"float16"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[26,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[26,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 299594],"float16"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 299594],"float16"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 299594],"float16"), size=list[27,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 299594],"float16"), size=list[28,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 279621],"float16"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 279621],"float16"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 279621],"float16"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262145],"float16"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262145],"float16"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262145],"float16"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262145],"float16"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262145],"float16"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262145],"float16"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[33,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[33,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[35,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[37,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,33,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[26,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[35,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[37,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float16"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float16"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float16"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float16"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float16"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float16"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[27,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[42,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[41,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[41,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[42,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[42,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[28,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[33,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[33,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[42,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[26,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[38,33,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[41,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 299594, 14],"float16"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 299594, 14],"float16"), size=list[38,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 322639, 13],"float16"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 322639, 13],"float16"), size=list[41,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 322639, 13],"float16"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4213, 1, 736, 736],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4604, 1, 704, 704],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4965, 1, 576, 798],"float32"), size=list[144,200,], )
paddle.nn.functional.interpolate(Tensor([4965, 1, 576, 798],"float32"), size=list[18,25,], )
paddle.nn.functional.interpolate(Tensor([4965, 1, 576, 798],"float32"), size=list[36,50,], )
paddle.nn.functional.interpolate(Tensor([4965, 1, 576, 798],"float32"), size=list[72,100,], )
paddle.nn.functional.interpolate(Tensor([4965, 1, 576, 798],"float32"), size=list[9,13,], )
paddle.nn.functional.interpolate(Tensor([5158, 1, 768, 576],"float32"), size=list[192,144,], )
paddle.nn.functional.interpolate(Tensor([5158, 1, 768, 576],"float32"), size=list[24,18,], )
paddle.nn.functional.interpolate(Tensor([5158, 1, 768, 576],"float32"), size=list[48,36,], )
paddle.nn.functional.interpolate(Tensor([5158, 1, 768, 576],"float32"), size=list[96,72,], )
paddle.nn.functional.interpolate(Tensor([5571, 1, 640, 640],"float32"), tuple(160,160,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([56, 2, 318318, 64],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([56, 2, 64, 318318],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([56, 9948, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5603, 1, 707, 576],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([5603, 1, 707, 576],"float32"), size=list[23,18,], )
paddle.nn.functional.interpolate(Tensor([5603, 1, 707, 576],"float32"), size=list[45,36,], )
paddle.nn.functional.interpolate(Tensor([5603, 1, 707, 576],"float32"), size=list[89,72,], )
paddle.nn.functional.interpolate(Tensor([570426, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([570426, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([570426, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([570426, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([5803, 8, 256, 192],"float32"), size=tuple(341,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5803, 8, 256, 192],"float32"), size=tuple(342,257,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5803, 8, 256, 192],"float32"), size=tuple(344,258,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5803, 8, 256, 192],"float32"), size=tuple(345,259,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5803, 8, 256, 192],"float32"), size=tuple(346,260,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5803, 8, 256, 192],"float32"), size=tuple(348,261,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5803, 8, 256, 192],"float32"), size=tuple(349,262,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5803, 8, 256, 192],"float32"), size=tuple(350,263,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([651, 258, 100, 136],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([651, 258, 100, 136],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([714819, 2, 19, 84],"float32"), size=list[17,82,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([7428, 1, 640, 480],"float32"), size=list[20,15,], )
paddle.nn.functional.interpolate(Tensor([7428, 1, 640, 480],"float32"), size=list[40,30,], )
paddle.nn.functional.interpolate(Tensor([7428, 1, 640, 480],"float32"), size=list[80,60,], )
paddle.nn.functional.interpolate(Tensor([7711, 64, 68, 68],"float32"), size=list[68,68,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([7761, 3, 280, 350],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([787, 4, 800, 907],"float32"), size=tuple(25,29,), )
paddle.nn.functional.interpolate(Tensor([8, 3, 148549, 640],"float32"), size=tuple(640,640,), mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([8, 3, 640, 148549],"float32"), size=tuple(640,640,), mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([8, 64, 104858, 80],"float16"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 20, 222823],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 20, 419431],"float16"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 209716, 40],"float16"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 222823, 20],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 40, 209716],"float16"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 419431, 20],"float16"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 80, 104858],"float16"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([8, 697, 640, 640],"float32"), size=tuple(640,640,), mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([9702, 3, 280, 280],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 285212673, 4],"float32"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 3, 380283564],"float32"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 63380594],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 63380594, 6],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.l1_loss(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 256],"float32"), Tensor([11606, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 2970966],"float32"), Tensor([1, 3, 256, 2970966],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 2970966, 256],"float32"), Tensor([1, 3, 2970966, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 34817, 256, 256],"float32"), Tensor([1, 34817, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 4],"float32"), Tensor([570425345, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1, 4],"float32"), Tensor([570425345, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 22817014],"float32"), Tensor([10, 10, 22817014],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 22817014],"float32"), Tensor([10, 10, 22817014],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 22817014],"float32"), Tensor([10, 10, 22817014],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 22817014],"float32"), Tensor([10, 10, 22817014],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 22817014],"float32"), Tensor([10, 10, 22817014],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 22817014],"float32"), Tensor([10, 10, 22817014],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 114085069, 2],"float32"), Tensor([10, 114085069, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 45634028, 5],"float32"), Tensor([10, 45634028, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 45634028, 5],"float32"), Tensor([10, 45634028, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 45634028, 5],"float32"), Tensor([10, 45634028, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 45634028, 5],"float32"), Tensor([10, 45634028, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 45634028, 5],"float32"), Tensor([10, 45634028, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 45634028, 5],"float32"), Tensor([10, 45634028, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 499, 457255],"float32"), Tensor([10, 499, 457255],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), )
paddle.nn.functional.l1_loss(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([101, 22591103],"float32"), Tensor([101, 22591103],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1118482, 12, 170, 1],"float32"), Tensor([1118482, 12, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([11606, 3, 256, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([11606, 3, 256, 256],"float32"), Tensor([11606, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([16, 107, 1332770],"float32"), Tensor([16, 107, 1332770],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 139129, 1025],"float32"), Tensor([16, 139129, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 213, 669514],"float32"), Tensor([16, 213, 669514],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 277986, 513],"float32"), Tensor([16, 277986, 513],"float32"), )
paddle.nn.functional.l1_loss(Tensor([187679, 12158],"float32"), Tensor([187679, 12158],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([187679, 12158],"float32"), Tensor([187679, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([187679, 1],"float32"), Tensor([187679, 12158],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([2, 1114113, 32, 32],"float32"), Tensor([2, 1114113, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 2147483649],"float16"), label=Tensor([2, 2147483649],"float16"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 11883862, 32],"float32"), Tensor([2, 3, 11883862, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 11883862],"float32"), Tensor([2, 3, 32, 11883862],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([20, 500, 228171],"float32"), Tensor([20, 500, 228171],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20805, 107, 1025],"float32"), Tensor([20805, 107, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([20882, 213, 513],"float32"), Tensor([20882, 213, 513],"float32"), )
paddle.nn.functional.l1_loss(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2147483649, 2],"float16"), label=Tensor([2147483649, 2],"float16"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([2281702, 500, 2],"float32"), Tensor([2281702, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([28, 12, 170, 1],"float32"), Tensor([28, 12, 170, 39946],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([28, 12, 170, 39946],"float32"), Tensor([28, 12, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([28, 12, 170, 39946],"float32"), Tensor([28, 12, 170, 39946],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([28, 12, 6790778, 1],"float32"), Tensor([28, 12, 6790778, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([28, 479350, 170, 1],"float32"), Tensor([28, 479350, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([3, 760567127],"float32"), Tensor([3, 760567127],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([3548, 12, 170, 1],"float32"), Tensor([3548, 12, 170, 316],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([3548, 12, 170, 316],"float32"), Tensor([3548, 12, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([3548, 12, 170, 316],"float32"), Tensor([3548, 12, 170, 316],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([3548, 12, 53592, 1],"float32"), Tensor([3548, 12, 53592, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([3548, 3783, 170, 1],"float32"), Tensor([3548, 3783, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 1140851],"float32"), Tensor([4, 500, 1140851],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 57042535, 10],"float32"), Tensor([4, 57042535, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 71303169, 8],"float32"), Tensor([4, 71303169, 8],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([456340276, 5],"float32"), Tensor([456340276, 5],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([45634028, 10, 5],"float32"), Tensor([45634028, 10, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([45634028, 10, 5],"float32"), Tensor([45634028, 10, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([45634028, 10, 5],"float32"), Tensor([45634028, 10, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([45634028, 10, 5],"float32"), Tensor([45634028, 10, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([45634028, 10, 5],"float32"), Tensor([45634028, 10, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([45634028, 10, 5],"float32"), Tensor([45634028, 10, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([456341, 500, 10],"float32"), Tensor([456341, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([46422, 3, 128, 128],"float32"), Tensor([46422, 3, 128, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([570425345, 4],"float32"), Tensor([1, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([570425345, 4],"float32"), Tensor([1, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([570426, 500, 8],"float32"), Tensor([570426, 500, 8],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([64, 12, 170, 17477],"float32"), Tensor([64, 12, 170, 17477],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([64, 12, 170, 17477],"float32"), Tensor([64, 12, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([64, 12, 170, 1],"float32"), Tensor([64, 12, 170, 17477],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([64, 12, 2970966, 1],"float32"), Tensor([64, 12, 2970966, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([64, 209716, 170, 1],"float32"), Tensor([64, 209716, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([64, 2177, 128, 128],"float32"), Tensor([64, 2177, 128, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([64, 3, 128, 92843],"float32"), Tensor([64, 3, 128, 92843],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([64, 3, 92843, 128],"float32"), Tensor([64, 3, 92843, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([742742, 3, 32, 32],"float32"), Tensor([742742, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([8, 1, 512, 512],"float16"), Tensor([8, 1089, 512, 512],"float32"), "mean", )
paddle.nn.functional.l1_loss(Tensor([8, 2049, 512, 512],"float16"), Tensor([8, 1, 512, 512],"float32"), "mean", )
paddle.nn.functional.label_smooth(Tensor([1024, 1, 2228225],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([1024, 2229, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([114085069, 2, 2, 5],"float32"), epsilon=0.20326138379662173, )
paddle.nn.functional.label_smooth(Tensor([114085069, 2, 2, 5],"float32"), epsilon=0.7336344401714625, )
paddle.nn.functional.label_smooth(Tensor([1140850690, 1, 2],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([11847, 1, 192612],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([12, 190141782],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([124, 18400818],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 1, 17825793],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 112112, 159],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 174763, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 17825793],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 17826, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 8912897, 2],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 93, 192612],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([1431655766, 3],"float16"), epsilon=0.5986189939413826, )
paddle.nn.functional.label_smooth(Tensor([1431655766, 3],"float16"), epsilon=0.8211263365048883, )
paddle.nn.functional.label_smooth(Tensor([14350324, 1, 159],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([144, 15845149],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([154, 1, 14816243],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([154, 145258, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([154, 14817, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([16, 1, 142606337],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([16, 1398102, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([16, 142606337],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([16, 35651585, 4],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([16, 356516, 400],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([2, 1140850690, 1],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([2, 3, 380283564],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([20, 114085069],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([214748365, 2, 2, 5],"float16"), epsilon=0.18833946207874966, )
paddle.nn.functional.label_smooth(Tensor([214748365, 2, 2, 5],"float16"), epsilon=0.7642113030841614, )
paddle.nn.functional.label_smooth(Tensor([22369622, 1, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([22369622, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([2281701379, 1],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([2281702, 1, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([2281702, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([256, 1, 8912897],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([256, 87382, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([256, 8913, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([3, 143165577, 2, 5],"float16"), epsilon=0.18833946207874966, )
paddle.nn.functional.label_smooth(Tensor([3, 143165577, 2, 5],"float16"), epsilon=0.7642113030841614, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 143165577, 5],"float16"), epsilon=0.18833946207874966, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 143165577, 5],"float16"), epsilon=0.7642113030841614, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 2, 190141782],"float32"), epsilon=0.20326138379662173, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 2, 190141782],"float32"), epsilon=0.7336344401714625, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 2, 357913942],"float16"), epsilon=0.18833946207874966, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 2, 357913942],"float16"), epsilon=0.7642113030841614, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 76056713, 5],"float32"), epsilon=0.20326138379662173, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 76056713, 5],"float32"), epsilon=0.7336344401714625, )
paddle.nn.functional.label_smooth(Tensor([3, 76056713, 2, 5],"float32"), epsilon=0.20326138379662173, )
paddle.nn.functional.label_smooth(Tensor([3, 76056713, 2, 5],"float32"), epsilon=0.7336344401714625, )
paddle.nn.functional.label_smooth(Tensor([32, 1, 71303169],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([32, 699051, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([32, 71303169],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([4, 1073741825],"float16"), epsilon=0.5986189939413826, )
paddle.nn.functional.label_smooth(Tensor([4, 1073741825],"float16"), epsilon=0.8211263365048883, )
paddle.nn.functional.label_smooth(Tensor([4, 570425345],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([4, 570425345],"float32"), epsilon=0.1858912794612338, )
paddle.nn.functional.label_smooth(Tensor([4, 570425345],"float32"), epsilon=0.5436483450993637, )
paddle.nn.functional.label_smooth(Tensor([456340276, 1, 5],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([512, 1, 4456449],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([512, 4457, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([570425345, 1, 4],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([5704254, 1, 400],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([60, 38028357],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([64, 1, 35651585],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([64, 349526, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([64, 35651585],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([64, 35652, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([640, 1, 3565159],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([640, 3566, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([760567127, 3, 1],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([760567127, 3],"float32"), epsilon=0.1858912794612338, )
paddle.nn.functional.label_smooth(Tensor([760567127, 3],"float32"), epsilon=0.5436483450993637, )
paddle.nn.functional.label_smooth(Tensor([77, 1, 29632486],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([77, 290515, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([8, 1, 285212673],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([8, 285212673],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([8, 57042535, 5],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 28, 783552],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 29, 756533],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 30, 731315],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 31, 707724],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 32, 685608],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 33, 664832],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 34, 645278],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 35, 626842],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 36, 609429],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 37, 592958],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 38, 577354],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 39, 562550],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 40, 548486],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 41, 535109],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 42, 522368],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 43, 510220],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 44, 498624],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 45, 487544],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 46, 476945],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 47, 466797],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 48, 457072],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 49, 447744],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 651, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([112, 26, 783552],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([112, 27, 754531],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([112, 28, 727584],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([112, 29, 702495],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([112, 30, 679078],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([112, 31, 657173],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([112, 32, 636636],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([112, 33, 617344],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([112, 34, 599187],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([112, 605, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([128, 17825793],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1382, 49, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1411, 48, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1441, 47, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1472, 46, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1505, 45, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1539, 44, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1575, 43, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1612, 42, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1651, 41, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1693, 40, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1736, 39, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1782, 38, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1830, 37, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1881, 36, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1934, 35, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1991, 34, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([2051, 33, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([2116, 32, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([2184, 31, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([2257, 30, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([228171, 10000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([2334, 29, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([2418, 28, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([2507, 27, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([2604, 26, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.layer_norm(Tensor([126762, 10, 60, 30],"float32"), list[10,60,30,], weight=None, bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([128, 278529, 64],"float32"), list[64,], None, None, )
paddle.nn.functional.layer_norm(Tensor([128, 278529, 64],"float32"), list[64,], Tensor([64],"float32"), Tensor([64],"float32"), )
paddle.nn.functional.layer_norm(Tensor([14260634, 10, 4, 4],"float32"), list[10,4,4,], )
paddle.nn.functional.layer_norm(Tensor([14260634, 10, 4, 4],"float32"), tuple(10,4,4,), )
paddle.nn.functional.layer_norm(Tensor([17687608, 129],"float32"), list[129,], Tensor([129],"float32"), None, )
paddle.nn.functional.layer_norm(Tensor([21126865, 6, 6, 3],"float32"), list[6,6,3,], weight=None, bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([22817014, 100],"float32"), list[100,], weight=Tensor([100],"float32"), bias=Tensor([100],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([278529, 64, 128],"float32"), list[64,128,], None, None, )
paddle.nn.functional.layer_norm(Tensor([2970966, 768],"float32"), list[768,], None, None, )
paddle.nn.functional.layer_norm(Tensor([39768216, 6, 6, 3],"float16"), list[6,6,3,], weight=None, bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([4456449, 512],"float32"), list[512,], None, None, )
paddle.nn.functional.layer_norm(Tensor([54327, 10, 60, 70],"float32"), list[10,60,70,], weight=None, bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([557057, 32, 128],"float32"), list[32,128,], )
paddle.nn.functional.layer_norm(Tensor([557057, 64, 64],"float32"), list[64,], None, None, )
paddle.nn.functional.layer_norm(Tensor([557057, 64, 64],"float32"), list[64,], Tensor([64],"float32"), Tensor([64],"float32"), )
paddle.nn.functional.layer_norm(Tensor([570425345, 4],"float32"), list[4,], None, None, )
paddle.nn.functional.layer_norm(Tensor([570425345, 4],"float32"), list[4,], Tensor([4],"float32"), Tensor([4],"float32"), )
paddle.nn.functional.layer_norm(Tensor([69633, 128, 256],"float32"), list[256,], weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([8, 1114113, 256],"float32"), list[256,], weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([190141782, 2, 2, 3],"float32"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([190141782, 2, 2, 3],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([190141782, 2, 2, 3],"float32"), epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([357913942, 2, 2, 3],"float16"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([357913942, 2, 2, 3],"float16"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([357913942, 2, 2, 3],"float16"), epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([380283564, 2, 3],"float32"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([380283564, 2, 3],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([715827883, 2, 3],"float16"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([715827883, 2, 3],"float16"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([1431655766, 3],"float16"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([1431655766, 3],"float16"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([760567127, 3],"float32"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([760567127, 3],"float32"), epsilon=1e-05, )
paddle.nn.functional.leaky_relu(Tensor([1, 1, 142606337, 16],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 1, 16, 142606337],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 1, 32, 71303169],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 1, 71303169, 32],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 1024, 278529, 8],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 1024, 8, 278529],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 1273271, 1792],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([1, 1273271, 1792],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 128, 139265],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 139265, 128],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 17825793],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 256, 69633],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 278529, 64],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 278529, 64],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 64, 278529],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 64, 278529],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 69633, 256],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 139265, 128, 128],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 139265, 128, 128],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 139265, 128, 128],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 139265, 128, 128],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 142606337, 4, 4],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 142606337, 4, 4],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 142606337, 4, 4],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 2, 16, 71303169],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 2, 71303169, 16],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 20372334, 112],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 2048, 278529, 4],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 2048, 4, 278529],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 2228225, 32, 32],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 2228225, 32, 32],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 2228225, 32, 32],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 2228225, 32, 32],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 2281701379],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 2374300, 31, 31],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 128, 69633],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 139265, 64],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 278529, 32],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 278529, 32],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 32, 278529],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 32, 278529],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 64, 139265],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 69633, 128],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 8912897],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 32, 71303169],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([1, 32, 71303169],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 325957340, 7],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 34817, 256, 256],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 34817, 256, 256],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 35651585, 8, 8],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 35651585, 8, 8],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 35651585, 8, 8],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 35651585, 8, 8],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 4, 71303169, 8],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 4, 8, 71303169],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 5093084, 448],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 1114113, 4],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 1114113, 4],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 139265, 32],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 143757, 31],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 16, 278529],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 16, 278529],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 16, 278529],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 2, 2228225],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 2228225, 2],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 278529, 16],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 278529, 16],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 278529, 16],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 31, 143757],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 32, 139265],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 4, 1114113],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 4, 1114113],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 4456449],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 557057, 8],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 557057, 8],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 64, 69633],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 69633, 64],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 8, 557057],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 8, 557057],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 557057, 64, 64],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 557057, 64, 64],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 557057, 64, 64],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 557057, 64, 64],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 570425345, 2, 2],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 64, 128, 278529],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 64, 128, 278529],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 64, 139265, 256],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 64, 256, 139265],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 64, 278529, 128],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 64, 278529, 128],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 64, 35651585],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 81489335, 28],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 8912897, 16, 16],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 8912897, 16, 16],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 8912897, 16, 16],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 8912897, 16, 16],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([10, 143165577, 3],"float16"), -1, None, )
paddle.nn.functional.leaky_relu(Tensor([10, 20, 11408507],"float32"), 0.01, )
paddle.nn.functional.leaky_relu(Tensor([10, 228170138, 1],"float32"), 0.01, )
paddle.nn.functional.leaky_relu(Tensor([10, 3, 143165577],"float16"), -1, None, )
paddle.nn.functional.leaky_relu(Tensor([108, 32, 608, 1088],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1089, 128, 128, 128],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1089, 32, 256, 256],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([1089, 512, 64, 64],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1114113, 512, 2, 2],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([11369, 1024, 14, 14],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([11369, 256, 28, 28],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([11369, 256, 28, 28],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([114085069, 20, 1],"float32"), 0.01, )
paddle.nn.functional.leaky_relu(Tensor([12, 1024, 19, 9773],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 1024, 5462, 34],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 1150, 304, 544],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 128, 10923, 136],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 128, 152, 9773],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 128, 21846, 68],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 128, 38, 39092],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 128, 5462, 272],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 128, 76, 19546],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 18397, 76, 136],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 256, 10923, 68],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 256, 19, 39092],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 256, 21846, 34],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 256, 38, 19546],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 256, 5462, 136],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 256, 76, 9773],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 288, 608, 1088],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 294338, 19, 34],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 32, 10923, 544],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 32, 304, 19546],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 32, 5462, 1088],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 32, 608, 9773],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 4600, 152, 272],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 512, 10923, 34],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 512, 19, 19546],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 73585, 38, 68],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([128, 1024, 1244, 14],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 1024, 14, 1244],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 128, 2487, 56],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 128, 28, 4974],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 128, 4974, 28],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 128, 56, 2487],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 1422, 112, 112],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 2048, 1244, 7],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 2048, 7, 1244],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 22737, 28, 28],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 256, 1244, 56],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 256, 14, 4974],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 256, 2487, 28],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 256, 28, 2487],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 256, 4974, 14],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 256, 56, 1244],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 32, 112, 4974],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 32, 4974, 112],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 363792, 7, 7],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 512, 1244, 28],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 512, 14, 2487],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 512, 2487, 14],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 512, 28, 1244],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 5685, 56, 56],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 90948, 14, 14],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([13798, 256, 19, 34],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([139265, 64, 16, 16],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([1422, 32, 224, 224],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([159159, 128, 112],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1725, 128, 76, 136],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([17409, 32, 64, 64],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([17409, 512, 16, 16],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([17409, 512, 16, 16],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([17409, 512, 16, 16],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([17477, 64, 170, 12],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([181896, 64, 14, 14],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([187679, 12158],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 10186167, 112],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 8912897],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 162978670, 7],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 4456449],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 300, 3802836],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 32, 35651585],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([2, 32, 35651585],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 40744668, 28],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 2228225],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 557057, 2048],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 636636, 1792],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([2, 636636, 1792],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2177, 256, 64, 64],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([2177, 64, 128, 128],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([2177, 64, 128, 128],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([2177, 64, 128, 128],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([2228225, 1, 32, 32],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([22737, 128, 28, 28],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([22737, 128, 28, 28],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([22737, 2048, 7, 7],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([22737, 512, 14, 14],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([22737, 512, 14, 14],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([2281701379],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([253522376, 3, 3],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([273, 128, 256, 256],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([278529, 512, 4, 4],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([278529, 512, 4, 4],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([28, 39946, 170, 12],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([28, 64, 106106, 12],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([28, 64, 170, 7490],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([2843, 256, 56, 56],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([2843, 64, 112, 112],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([285213, 200, 40],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([3, 253522376, 3],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([3, 3, 253522376],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([3, 3, 477218589],"float16"), 0, None, )
paddle.nn.functional.leaky_relu(Tensor([3, 3, 477218589],"float16"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([3, 477218589, 3],"float16"), 0, None, )
paddle.nn.functional.leaky_relu(Tensor([3, 477218589, 3],"float16"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([30, 1901418, 40],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([30, 200, 380284],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([30422686, 75],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([318318, 256, 28],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([320, 1741, 64, 64],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([320, 27853, 16, 16],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([320, 64, 16, 6964],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([320, 64, 1741, 64],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([320, 64, 32, 3482],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([320, 64, 3482, 32],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([320, 64, 64, 1741],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([320, 64, 6964, 16],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([320, 6964, 32, 32],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([3450, 1024, 19, 34],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([3450, 256, 38, 68],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([34817, 1024, 8, 8],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([34817, 64, 32, 32],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([3714, 300, 2048],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([38028357, 60],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([39790, 32, 1792],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([39790, 32, 1792],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4, 128, 17409, 256],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([4, 128, 256, 17409],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([4, 139265, 64, 64],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 2228225, 16, 16],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([4, 256, 128, 17409],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([4, 256, 17409, 128],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([4, 32, 128, 139265],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 32, 139265, 128],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 32, 256, 69633],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 32, 278529, 64],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 32, 64, 278529],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 32, 69633, 256],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 34817, 128, 128],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 34817, 128, 128],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([4, 512, 16, 69633],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([4, 512, 69633, 16],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([4, 570425345],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([4, 64, 128, 69633],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 64, 139265, 64],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 64, 256, 34817],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 64, 34817, 256],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 64, 64, 139265],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 64, 69633, 128],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 8705, 256, 256],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 8705, 256, 256],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([432, 128, 152, 272],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([432, 32, 304, 544],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4353, 128, 64, 64],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([4353, 128, 64, 64],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([4353, 32, 128, 128],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4353, 512, 32, 32],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([4456449, 16, 32],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4456449, 2, 16, 16],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([4456449, 512],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([45474, 1024, 7, 7],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([45474, 256, 14, 14],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([45474, 256, 14, 14],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([4638, 512, 31, 31],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([477218589, 3, 3],"float16"), -1, None, )
paddle.nn.functional.leaky_relu(Tensor([477218589, 3, 3],"float16"), 0, None, )
paddle.nn.functional.leaky_relu(Tensor([477218589, 3, 3],"float16"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([545, 256, 128, 128],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([545, 64, 256, 256],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([545, 64, 256, 256],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([5685, 128, 56, 56],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([5685, 128, 56, 56],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([5685, 32, 112, 112],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([5685, 512, 28, 28],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([636636, 512, 7],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([64, 2177, 128, 128],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([64, 32, 32, 34817],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([64, 32, 34817, 32],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([64, 34817, 32, 32],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([64, 64, 128, 4353],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([64, 64, 4353, 128],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([6899, 128, 38, 68],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([6899, 512, 19, 34],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([69633, 2048, 4, 4],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([69633, 32, 32, 32],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([69633, 512, 8, 8],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([69633, 512, 8, 8],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([79580, 64, 448],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 1024, 39790, 7],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 1024, 7, 39790],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 28, 79580],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 39790, 56],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 56, 39790],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 79580, 28],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 1455167, 14, 14],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 16, 17825793],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 22737, 112, 112],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 14, 79580],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 28, 39790],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 39790, 28],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 79580, 14],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 285212673],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([8, 32, 224, 39790],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 32, 39790, 224],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 363792, 28, 28],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 14, 39790],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 39790, 14],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 7, 79580],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 79580, 7],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 5685, 224, 224],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 5820667, 7, 7],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 64, 112, 39790],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 64, 14, 318318],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 64, 318318, 14],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 64, 39790, 112],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 8912897, 32],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 90948, 56, 56],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([863, 256, 76, 136],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8705, 256, 32, 32],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([8705, 256, 32, 32],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([8705, 64, 64, 64],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([8912897, 1, 16, 16],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([8912897, 4, 8, 8],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([90948, 512, 7, 7],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(x=Tensor([2281701379],"float32"), )
paddle.nn.functional.leaky_relu(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.leaky_relu(x=Tensor([4294967297],"float16"), negative_slope=-100, )
paddle.nn.functional.leaky_relu(x=Tensor([4294967297],"float16"), negative_slope=0, )
paddle.nn.functional.linear(Tensor([1, 1140850690, 2],"float32"), Tensor([2, 2],"float32"), bias=None, )
paddle.nn.functional.linear(Tensor([1, 1140850690, 2],"float32"), Tensor([2, 4],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([2, 1140850690],"float32"), bias=None, )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 4456449],"float32"), )
paddle.nn.functional.linear(Tensor([10, 64],"float32"), Tensor([64, 35651585],"float32"), None, )
paddle.nn.functional.linear(Tensor([114085069, 20],"float32"), Tensor([20, 20],"float32"), Tensor([20],"float32"), )
paddle.nn.functional.linear(Tensor([134217729, 17],"float32"), Tensor([17],"float32"), )
paddle.nn.functional.linear(Tensor([35651585, 64],"float32"), Tensor([64, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([4456449, 512],"float32"), Tensor([512, 128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.linear(Tensor([4456449, 512],"float32"), Tensor([512, 512],"float32"), )
paddle.nn.functional.linear(Tensor([570425345, 2, 2],"float32"), Tensor([2, 2],"float32"), bias=None, )
paddle.nn.functional.linear(Tensor([570425345, 2, 2],"float32"), Tensor([2, 4],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([69633, 128, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([8, 1114113, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1, 1000],"float32"), weight=Tensor([1000, 2281702],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 10],"float32"), weight=Tensor([10, 228170138],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 15158, 14, 14, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 152113426, 3, 5],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 13264, 14, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 13264, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 768],"float32"), weight=Tensor([768, 2970966],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 6632, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 6632, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 2228225, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 2228225, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 2281702, 1000],"float32"), weight=Tensor([1000, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 3, 152113426, 5],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 3, 3, 5],"float32"), weight=Tensor([5, 456340276],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 7579, 14, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 4974, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 4974, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 711, 7, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 711, 1, 7, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 2, 2742430, 32],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 2, 7, 32],"float32"), weight=Tensor([32, 71303169],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 97944, 32],"float32"), weight=Tensor([32, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 783552, 7, 32],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 97944, 56, 32],"float32"), weight=Tensor([32, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([142606337, 16],"float32"), weight=Tensor([16, 8],"float32"), )
paddle.nn.functional.linear(x=Tensor([142606337, 16],"float32"), weight=Tensor([16, 8],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([14336],"float32"), weight=Tensor([14336, 159159],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2177, 1024, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([2228225, 1, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2228225, 1024],"float32"), weight=Tensor([1024, 1000],"float32"), bias=Tensor([1000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([22737, 56, 56, 32],"float32"), weight=Tensor([32, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([228170138, 10],"float32"), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2281702, 1, 1000],"float32"), weight=Tensor([1000, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([28, 16],"float32"), weight=Tensor([16, 142606337],"float32"), )
paddle.nn.functional.linear(x=Tensor([285212673, 8],"float32"), weight=Tensor([8, 6],"float32"), bias=Tensor([6],"float32"), )
paddle.nn.functional.linear(x=Tensor([474, 16, 14, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([50704476, 3, 3, 5],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5093084, 2, 7, 32],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([90948, 1, 1, 7, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([948, 16, 14, 14, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.log_loss(Tensor([10, 1],"float32"), label=Tensor([10, 228170138],"float32"), epsilon=0.0001, name=None, )
paddle.nn.functional.log_loss(Tensor([10, 228170138],"float32"), label=Tensor([10, 1],"float32"), epsilon=0.0001, name=None, )
paddle.nn.functional.log_loss(Tensor([102400, 1],"float32"), Tensor([102400, 22283],"float32"), epsilon=1e-07, )
paddle.nn.functional.log_loss(Tensor([102400, 22283],"float32"), Tensor([102400, 1],"float32"), epsilon=1e-07, )
paddle.nn.functional.log_loss(Tensor([128, 17825793],"float32"), Tensor([128, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([128, 1],"float32"), Tensor([128, 17825793],"float32"), )
paddle.nn.functional.log_loss(Tensor([25600, 89129],"float32"), Tensor([25600, 1],"float32"), epsilon=1e-07, )
paddle.nn.functional.log_loss(Tensor([400, 1],"float32"), Tensor([400, 5704254],"float32"), )
paddle.nn.functional.log_loss(Tensor([400, 5704254],"float32"), Tensor([400, 1],"float32"), )
paddle.nn.functional.log_sigmoid(Tensor([10, 10, 22817014],"float32"), None, )
paddle.nn.functional.log_sigmoid(Tensor([10, 10, 42949673],"float16"), None, )
paddle.nn.functional.log_sigmoid(Tensor([10, 22817014, 10],"float32"), None, )
paddle.nn.functional.log_sigmoid(Tensor([10, 42949673, 10],"float16"), None, )
paddle.nn.functional.log_sigmoid(Tensor([2281701379],"float32"), )
paddle.nn.functional.log_sigmoid(Tensor([22817014, 10, 10],"float32"), None, )
paddle.nn.functional.log_sigmoid(Tensor([253522376, 3, 3],"float32"), None, )
paddle.nn.functional.log_sigmoid(Tensor([3, 253522376, 3],"float32"), None, )
paddle.nn.functional.log_sigmoid(Tensor([3, 3, 253522376],"float32"), None, )
paddle.nn.functional.log_sigmoid(Tensor([3, 3, 477218589],"float16"), None, )
paddle.nn.functional.log_sigmoid(Tensor([3, 477218589, 3],"float16"), None, )
paddle.nn.functional.log_sigmoid(Tensor([4294967297],"float16"), )
paddle.nn.functional.log_sigmoid(Tensor([42949673, 10, 10],"float16"), None, )
paddle.nn.functional.log_sigmoid(Tensor([477218589, 3, 3],"float16"), None, )
paddle.nn.functional.log_sigmoid(Tensor([5, 858993460],"float16"), )
paddle.nn.functional.log_sigmoid(Tensor([858993460, 5],"float16"), )
paddle.nn.functional.log_sigmoid(x=Tensor([10, 10, 22817014],"float32"), )
paddle.nn.functional.log_sigmoid(x=Tensor([10, 10, 42949673],"float16"), )
paddle.nn.functional.log_sigmoid(x=Tensor([10, 22817014, 10],"float32"), )
paddle.nn.functional.log_sigmoid(x=Tensor([10, 42949673, 10],"float16"), )
paddle.nn.functional.log_sigmoid(x=Tensor([2281701379],"float32"), )
paddle.nn.functional.log_sigmoid(x=Tensor([22817014, 10, 10],"float32"), )
paddle.nn.functional.log_sigmoid(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.log_sigmoid(x=Tensor([42949673, 10, 10],"float16"), )
paddle.nn.functional.log_softmax(Tensor([1, 300, 7605672],"float32"), )
paddle.nn.functional.log_softmax(Tensor([1, 557057, 4096],"float32"), )
paddle.nn.functional.log_softmax(Tensor([100000, 2, 11409],"float32"), )
paddle.nn.functional.log_softmax(Tensor([100000, 22818],"float32"), )
paddle.nn.functional.log_softmax(Tensor([100000, 7606, 3],"float32"), )
paddle.nn.functional.log_softmax(Tensor([1024, 2228225],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([1140850690, 2],"float32"), )
paddle.nn.functional.log_softmax(Tensor([1140850690, 2],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([11847, 192612],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([12, 190141782],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([124, 18400818],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([128, 17825793],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([128, 17825793],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([14350324, 159],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([144, 15845149],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([154, 14816243],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([16, 142606337],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([1857, 300, 4096],"float32"), )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 95070891],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 95070891],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 95070891],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 715827883],"float16"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 715827883],"float16"), 2, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 76056713, 5],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(Tensor([2, 3, 76056713, 5],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 76056713, 5],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([2, 536870913, 4],"float16"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 536870913, 4],"float16"), 2, )
paddle.nn.functional.log_softmax(Tensor([2, 57042535, 4, 5],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(Tensor([2, 57042535, 4, 5],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 57042535, 4, 5],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([20, 114085069],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([2112, 1080352],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([22369622, 102],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([2281702, 1000],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([256, 8912897],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([28, 81489335],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([285212673, 8],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([2944, 775035],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([30, 76056713],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([32, 71303169],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([344200, 6629],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([357913942, 3, 4],"float16"), -1, )
paddle.nn.functional.log_softmax(Tensor([357913942, 3, 4],"float16"), 2, )
paddle.nn.functional.log_softmax(Tensor([38, 60044774],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([380283564, 2, 3],"float32"), )
paddle.nn.functional.log_softmax(Tensor([380283564, 6],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([38028357, 3, 4, 5],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(Tensor([38028357, 3, 4, 5],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([38028357, 3, 4, 5],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([4, 570425345],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([4, 570425345],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([4224, 540176],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([43994, 51865],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.log_softmax(Tensor([456340276, 5],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([5, 456340276],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([5, 456340276],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.log_softmax(Tensor([5, 456340276],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([512, 4456449],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([52, 43878873],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([570425345, 4],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([570425345, 4],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([60, 38028357],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([64, 35651585],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([640, 3565159],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([760567127, 3],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([760567127, 3],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([77, 29632486],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([8, 285212673],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([8, 285212673],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([80, 28521268],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 715827883],"float16"), )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 715827883],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 715827883],"float16"), axis=2, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 715827883],"float16"), axis=2, dtype="float32", )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 715827883],"float16"), axis=2, dtype=type(numpy.float32), )
paddle.nn.functional.log_softmax(x=Tensor([2, 536870913, 4],"float16"), )
paddle.nn.functional.log_softmax(x=Tensor([2, 536870913, 4],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 536870913, 4],"float16"), axis=2, )
paddle.nn.functional.log_softmax(x=Tensor([2, 536870913, 4],"float16"), axis=2, dtype="float32", )
paddle.nn.functional.log_softmax(x=Tensor([2, 536870913, 4],"float16"), axis=2, dtype=type(numpy.float32), )
paddle.nn.functional.log_softmax(x=Tensor([357913942, 3, 4],"float16"), )
paddle.nn.functional.log_softmax(x=Tensor([357913942, 3, 4],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(x=Tensor([357913942, 3, 4],"float16"), axis=2, )
paddle.nn.functional.log_softmax(x=Tensor([357913942, 3, 4],"float16"), axis=2, dtype="float32", )
paddle.nn.functional.log_softmax(x=Tensor([357913942, 3, 4],"float16"), axis=2, dtype=type(numpy.float32), )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108865, 32],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108865, 32],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float16"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float16"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 1114113, 32, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 1114113, 32, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 1114113, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 1114113, 32, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 11883862, 32, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 11883862, 32, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097153, 32, 32],"float16"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097153, 32, 32],"float16"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 11883862, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 11883862, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 11883862, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 11883862, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float16"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float16"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 11883862],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 11883862],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 11883862],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 11883862],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float16"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float16"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 11883862, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 11883862, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 32, 1114113],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 32, 1114113],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([742742, 3, 32, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([742742, 3, 32, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([742742, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([742742, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([742742, 32, 32, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([742742, 32, 32, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2147483649],"float16"), other=Tensor([2, 2147483649],"float16"), label=Tensor([2, 2147483649],"float16"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2147483649, 2],"float16"), other=Tensor([2147483649, 2],"float16"), label=Tensor([2147483649, 2],"float16"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), 0.2, "sum", None, )
paddle.nn.functional.max_pool2d(Tensor([1, 128, 40, 445645],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 128, 445645, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 139265, 128, 128],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 1426064, 40, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 1426064, 40, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 14855, 320, 480],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 15845149, 12, 12],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 10, 14260634],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 11883862, 12],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 12, 11883862],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 14260634, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16506, 320, 432],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 181896, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 19857, 288, 399],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 22817014, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 2376773, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 40, 2376773],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 20, 445645],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 287513, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 297097, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 330108, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 224, 3395389],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 224, 3395389],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 3395389, 224],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 3395389, 224],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([1, 3680164, 20, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 3802836, 20, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 4225373, 20, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 45474, 224, 224],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 45474, 224, 224],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([1, 464422, 17, 289],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 491641, 17, 273],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 522248, 17, 257],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 112, 318318],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 123362, 289],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 128, 278529],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 130592, 273],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 138723, 257],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 17, 2097153],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 278529, 128],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 288, 123791],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 318318, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 320, 111412],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 74275, 480],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 82527, 432],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 89353, 399],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([110036, 64, 18, 18],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([11142, 128, 40, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([123362, 64, 17, 17],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([13, 1, 175515491, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 1, 4, 43878873],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 1, 7, 25073642],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 25073642, 7, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 256, 7, 97944],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([13, 256, 97944, 7],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([13, 3581949, 7, 7],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([13, 43878873, 4, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float16"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float16"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float16"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float16"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1426064, 16, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([14376, 256, 20, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([14855, 256, 20, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([15158, 3, 224, 224],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([15158, 3, 224, 224],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([15158, 3, 224, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([16, 16, 222823, 40],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 16, 40, 222823],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 32, 20, 222823],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 32, 222823, 20],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 356516, 20, 20],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 89129, 40, 40],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16302, 192, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16506, 256, 20, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([178258, 32, 20, 20],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([181896, 256, 7, 7],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([19163, 244, 244, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 1114113, 16, 64],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1114113, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 1114113, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 1114113, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1114113, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 1114113, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1114113, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 1114113, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 11883862, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([2, 128, 162053, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 128, 55, 162053],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1564953, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 17825793, 4, 16],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 114268, 52],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 220072, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 27, 220072],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 52, 114268],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097153, 32, 32],"float16"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097153, 32, 32],"float16"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097153, 32, 32],"float16"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097153, 32, 32],"float16"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 22737, 224, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 2337809, 244, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 244, 2337809, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 244, 244, 19163],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11883862, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11883862, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11883862, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11883862, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11883862, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11883862, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11883862, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 1697695, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float16"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float16"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float16"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float16"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 224, 1697695],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11883862],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11883862],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11883862],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11883862],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11883862],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11883862],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11883862],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float16"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float16"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float16"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float16"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 32, 11883862, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([2, 32, 32, 1114113],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([2, 377141, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3947581, 17, 17],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 421913, 52, 52],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 1048577, 17],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 17, 1048577],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 16, 8912897],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 2228225, 64],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 4, 35651585],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 8912897, 16],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2177, 64, 128, 128],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([233, 64, 320, 480],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([258, 64, 320, 432],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([278529, 8, 16, 64],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2843, 64, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3, 2347430, 18, 18],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3, 64, 18, 660215],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3, 64, 660215, 18],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([311, 64, 288, 399],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([325957340, 1, 7, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([4395, 192, 52, 52],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4456449, 8, 4, 16],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([570425345, 1, 4, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([5893, 128, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([59420, 24, 40, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 16, 40, 55706],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 16, 55706, 40],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 22283, 40, 40],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([7257, 64, 17, 289],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([7682, 64, 17, 273],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([8161, 64, 17, 257],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([89129, 16, 40, 40],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([990322, 16, 12, 12],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(x=Tensor([1398102, 3, 32, 32],"float16"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([1398102, 3, 32, 32],"float16"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([1398102, 3, 32, 32],"float16"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([1398102, 3, 32, 32],"float16"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool2d(x=Tensor([1980644, 2, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1114113, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 17825793, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1980644, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2, 23767723, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2, 24, 23767723],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2097153, 32, 32],"float16"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2097153, 32, 32],"float16"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2097153, 32, 32],"float16"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2097153, 32, 32],"float16"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11883862, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 22369622, 32],"float16"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 22369622, 32],"float16"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 22369622, 32],"float16"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 22369622, 32],"float16"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11883862],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 22369622],"float16"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 22369622],"float16"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 22369622],"float16"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 22369622],"float16"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool2d(x=Tensor([2, 4, 35651585, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 4, 8, 35651585],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([742742, 3, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([8912897, 4, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([1, 15845149, 6, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 6, 25352238, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 6, 8, 9507090],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1485483, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([178, 64, 16, 112, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 10563433, 6, 6, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 2228225, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 371371, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 371371, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 371371, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 371371, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 371371, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 371371, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 371371, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 4, 4, 44739243],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 44739243, 4, 4],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5941931, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 6, 21126865, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 6, 6, 10563433],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5941931],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 32, 32, 34817],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 32, 371371, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 371371, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 33554433, 4, 4, 4],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 371371, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 7, 9, 3018124],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 7, 9054371, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 6036248, 7, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 8, 8, 11184811, 3],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 8, 8, 8, 4194305],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2012083, 6, 7, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([22369622, 3, 4, 4, 4],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([23211, 32, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2347430, 6, 9, 6, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 8, 8, 8, 3],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(Tensor([3169030, 5, 6, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([7042289, 3, 6, 6, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([8, 1422, 16, 112, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([8, 64, 16, 112, 2487],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([8, 64, 16, 2487, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([8, 64, 356, 112, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([8912897, 4, 4, 4, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([8912897, 4, 4, 4, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([1485483, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2228225, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5941931, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5941931],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 8, 8, 8, 4194305],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 8, 8, 8, 3],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([569, 320, 4, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([711, 32, 32, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([711, 64, 4, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([711, 8, 32, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 22737, 4, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 2843, 32, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 2843, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 32, 4974, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 32, 56, 4974],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 320, 285, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 320, 4, 3979, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 320, 4, 56, 3979],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 5685, 4, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 356, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 4, 112, 9948],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 4, 9948, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 711, 32, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 8, 2843, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 8, 32, 112, 9948],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 8, 32, 9948, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_unpool1d(Tensor([1, 285212673, 8],"float32"), Tensor([1, 285212673, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 285212673, 8],"float32"), Tensor([1, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 285212673, 8],"int64"), Tensor([1, 285212673, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 285212673, 8],"int64"), Tensor([1, 285212673, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 285212673, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 285212673, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 760567127],"float32"), Tensor([1, 3, 760567127],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 760567127],"float32"), Tensor([1, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 760567127],"int64"), Tensor([1, 3, 760567127],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 760567127],"int64"), Tensor([1, 3, 760567127],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 760567127],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 760567127],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float32"), Tensor([1, 285212673, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float32"), Tensor([1, 3, 760567127],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float32"), Tensor([95070891, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 285212673, 8],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 285212673, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 285212673, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 3, 760567127],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 3, 760567127],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 3, 760567127],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([95070891, 3, 8],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([95070891, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([95070891, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 285212673, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 285212673, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 3, 760567127],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 3, 760567127],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([95070891, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([95070891, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([95070891, 3, 8],"float32"), Tensor([1, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([95070891, 3, 8],"float32"), Tensor([95070891, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([95070891, 3, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([95070891, 3, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([95070891, 3, 8],"int64"), Tensor([95070891, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([95070891, 3, 8],"int64"), Tensor([95070891, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1140850690, 2],"float32"), Tensor([1, 1, 1140850690, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1140850690, 2],"float32"), Tensor([1, 1, 1140850690, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1140850690, 2],"float32"), Tensor([1, 1, 1140850690, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1140850690, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1140850690, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1140850690, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1140850690, 2],"int64"), Tensor([1, 1, 1140850690, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1140850690, 2],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1140850690],"float32"), Tensor([1, 1, 2, 1140850690],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1140850690],"float32"), Tensor([1, 1, 2, 1140850690],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1140850690],"float32"), Tensor([1, 1, 2, 1140850690],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1140850690],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1140850690],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1140850690],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1140850690],"int64"), Tensor([1, 1, 2, 1140850690],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1140850690],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 1140850690, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 1140850690, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 1140850690, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 1140850690, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 1140850690],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 1140850690],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 1140850690],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 1140850690],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 570425345, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 570425345, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 570425345, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 570425345, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([570425345, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([570425345, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([570425345, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([570425345, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1, 1, 1140850690, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1, 1, 2, 1140850690],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1, 570425345, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([570425345, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 253522376, 3, 3],"float32"), Tensor([1, 253522376, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 253522376, 3, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 253522376, 3],"float32"), Tensor([1, 3, 253522376, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 253522376, 3],"float32"), Tensor([1, 3, 253522376, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 253522376, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 253522376, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 253522376],"float32"), Tensor([1, 3, 3, 253522376],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 253522376],"float32"), Tensor([1, 3, 3, 253522376],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 253522376],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 253522376],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 253522376, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 253522376, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 253522376, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 253522376, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 3, 253522376],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 3, 253522376],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([84507459, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([84507459, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 570425345, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 570425345, 2, 2],"float32"), Tensor([1, 570425345, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 570425345, 2, 2],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 570425345, 2, 2],"int64"), Tensor([1, 570425345, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1426064, 4, 20, 20],"float32"), Tensor([1426064, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1426064, 4, 20, 20],"float32"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([174549, 16, 43, 19],"float32"), Tensor([174549, 16, 43, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([174549, 16, 43, 19],"float32"), Tensor([64, 16, 43, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([1782580, 32, 10, 4],"float32"), Tensor([1782580, 32, 10, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([1782580, 32, 10, 4],"float32"), Tensor([64, 32, 10, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 2852127, 20, 20],"float32"), Tensor([2, 2852127, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 2852127, 20, 20],"float32"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float32"), Tensor([2, 4, 11, 25928425],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float32"), Tensor([2, 4, 25928425, 11],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float32"), Tensor([2, 9428519, 11, 11],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float32"), Tensor([4714260, 4, 11, 11],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float64"), Tensor([2, 4, 11, 25928425],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float64"), Tensor([2, 4, 25928425, 11],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float64"), Tensor([2, 9428519, 11, 11],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float64"), Tensor([4714260, 4, 11, 11],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 14260634, 20],"float32"), Tensor([2, 4, 14260634, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 14260634, 20],"float32"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float32"), Tensor([2, 4, 20, 14260634],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float32"), Tensor([2, 4, 28521268, 10],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float32"), Tensor([2, 5704254, 20, 10],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float32"), Tensor([2852127, 4, 20, 10],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float64"), Tensor([2, 4, 20, 14260634],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float64"), Tensor([2, 4, 28521268, 10],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float64"), Tensor([2, 5704254, 20, 10],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float64"), Tensor([2852127, 4, 20, 10],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 14260634],"float32"), Tensor([2, 4, 20, 14260634],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 14260634],"float32"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([1426064, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([1426064, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 2852127, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 2852127, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 4, 14260634, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 4, 14260634, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 4, 20, 14260634],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 4, 20, 14260634],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([1426064, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([1426064, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([2, 2852127, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([2, 2852127, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([2, 4, 14260634, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([2, 4, 14260634, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([2, 4, 20, 14260634],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([2, 4, 20, 14260634],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float32"), Tensor([1293482, 4, 21, 21],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float32"), Tensor([2, 2586964, 21, 21],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float32"), Tensor([2, 4, 13581556, 21],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float32"), Tensor([2, 4, 21, 13581556],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float64"), Tensor([1293482, 4, 21, 21],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float64"), Tensor([2, 2586964, 21, 21],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float64"), Tensor([2, 4, 13581556, 21],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float64"), Tensor([2, 4, 21, 13581556],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([10186167, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([10186167, 4, 7, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 20372334, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 20372334, 7, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 35651585, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 35651585, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 7, 40744668],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 7, 40744668],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 2, 5, 76056713],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 2, 5, 76056713],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 2, 76056713, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 2, 76056713, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 30422686, 5, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 30422686, 5, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([45634028, 2, 5, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([45634028, 2, 5, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([377266, 32, 21, 9],"float32"), Tensor([377266, 32, 21, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([377266, 32, 21, 9],"float32"), Tensor([64, 32, 21, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([570425345, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([570425345, 1, 2, 2],"float32"), Tensor([570425345, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([570425345, 1, 2, 2],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([570425345, 1, 2, 2],"int64"), Tensor([570425345, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 10630, 86, 39],"float32"), Tensor([64, 10630, 86, 39],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 10630, 86, 39],"float32"), Tensor([64, 8, 86, 39],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 16, 117275, 19],"float32"), Tensor([64, 16, 117275, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 16, 117275, 19],"float32"), Tensor([64, 16, 43, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 16, 43, 19],"float32"), Tensor([174549, 16, 43, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 16, 43, 19],"float32"), Tensor([64, 16, 117275, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 16, 43, 19],"float32"), Tensor([64, 16, 43, 51820],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 16, 43, 19],"float32"), Tensor([64, 43638, 43, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 16, 43, 51820],"float32"), Tensor([64, 16, 43, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 16, 43, 51820],"float32"), Tensor([64, 16, 43, 51820],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 188633, 21, 9],"float32"), Tensor([64, 188633, 21, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 188633, 21, 9],"float32"), Tensor([64, 32, 21, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 10, 111412],"float32"), Tensor([64, 32, 10, 111412],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 10, 111412],"float32"), Tensor([64, 32, 10, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 10, 4],"float32"), Tensor([1782580, 32, 10, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 10, 4],"float32"), Tensor([64, 32, 10, 111412],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 10, 4],"float32"), Tensor([64, 32, 278529, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 10, 4],"float32"), Tensor([64, 891290, 10, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 123791, 9],"float32"), Tensor([64, 32, 123791, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 123791, 9],"float32"), Tensor([64, 32, 21, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 21, 53053],"float32"), Tensor([64, 32, 21, 53053],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 21, 53053],"float32"), Tensor([64, 32, 21, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 21, 9],"float32"), Tensor([377266, 32, 21, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 21, 9],"float32"), Tensor([64, 188633, 21, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 21, 9],"float32"), Tensor([64, 32, 123791, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 21, 9],"float32"), Tensor([64, 32, 21, 53053],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 278529, 4],"float32"), Tensor([64, 32, 10, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 278529, 4],"float32"), Tensor([64, 32, 278529, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 43638, 43, 19],"float32"), Tensor([64, 16, 43, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 43638, 43, 19],"float32"), Tensor([64, 43638, 43, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 8, 114268, 39],"float32"), Tensor([64, 8, 114268, 39],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 8, 114268, 39],"float32"), Tensor([64, 8, 86, 39],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 8, 86, 39],"float32"), Tensor([64, 10630, 86, 39],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 8, 86, 39],"float32"), Tensor([64, 8, 114268, 39],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 8, 86, 39],"float32"), Tensor([64, 8, 86, 51820],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 8, 86, 39],"float32"), Tensor([85037, 8, 86, 39],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 8, 86, 51820],"float32"), Tensor([64, 8, 86, 39],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 8, 86, 51820],"float32"), Tensor([64, 8, 86, 51820],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 891290, 10, 4],"float32"), Tensor([64, 32, 10, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 891290, 10, 4],"float32"), Tensor([64, 891290, 10, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([84507459, 3, 3, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([84507459, 3, 3, 3],"float32"), Tensor([84507459, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([85037, 8, 86, 39],"float32"), Tensor([64, 8, 86, 39],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool2d(Tensor([85037, 8, 86, 39],"float32"), Tensor([85037, 8, 86, 39],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 114085069],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 114085069],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 95070891, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 95070891, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 76056713, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 76056713, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 19014179, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 19014179, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([19014179, 1, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([19014179, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 190141782, 2, 2, 3],"float32"), Tensor([1, 190141782, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 190141782, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 190141782, 2, 2, 3],"int64"), Tensor([1, 190141782, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 190141782, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 126761188, 2, 3],"float32"), Tensor([1, 3, 126761188, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 126761188, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 126761188, 2, 3],"int64"), Tensor([1, 3, 126761188, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 126761188, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 126761188, 3],"float32"), Tensor([1, 3, 2, 126761188, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 126761188, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 126761188, 3],"int64"), Tensor([1, 3, 2, 126761188, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 126761188, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 190141782],"float32"), Tensor([1, 3, 2, 2, 190141782],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 190141782],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 190141782],"int64"), Tensor([1, 3, 2, 2, 190141782],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 190141782],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 190141782, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 126761188, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 126761188, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 190141782],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([63380594, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 190141782, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 190141782, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 190141782, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 126761188, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 126761188, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 126761188, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 126761188, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 126761188, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 126761188, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 190141782],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 190141782],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 190141782],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([63380594, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([63380594, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([63380594, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 190141782, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 126761188, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 126761188, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 190141782],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([63380594, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 19014179, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 19014179, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 19014179, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 19014179, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 25352238, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 25352238, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 25352238, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 25352238, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 31690297, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 31690297, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 31690297, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 31690297, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 38028357],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 38028357],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 38028357],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 38028357],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([6338060, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([6338060, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([6338060, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([6338060, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([63380594, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([63380594, 3, 2, 2, 3],"float32"), Tensor([63380594, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([63380594, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([63380594, 3, 2, 2, 3],"int64"), Tensor([63380594, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.maxout(Tensor([10, 9, 15907287, 3],"float16"), 3, 1, None, )
paddle.nn.functional.maxout(Tensor([10, 9, 3, 15907287],"float16"), 3, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 2535224, 3, 3],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4, 1901418, 3],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4, 3, 1901418],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4, 3, 3579140],"float16"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4, 3579140, 3],"float16"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4772186, 3, 3],"float16"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([119304648, 4, 3, 3],"float16"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([178956971, 2, 2, 6],"float16"), 2, 3, None, )
paddle.nn.functional.maxout(Tensor([2, 107374183, 5, 4],"float16"), 2, -1, )
paddle.nn.functional.maxout(Tensor([2, 6, 5, 71582789],"float16"), 2, 1, )
paddle.nn.functional.maxout(Tensor([2, 6, 5, 71582789],"float16"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([2, 6, 89478486, 4],"float16"), 2, -1, )
paddle.nn.functional.maxout(Tensor([2, 6, 89478486, 4],"float16"), 2, 1, )
paddle.nn.functional.maxout(Tensor([2, 6, 89478486, 4],"float16"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([35791395, 6, 5, 4],"float16"), 2, -1, )
paddle.nn.functional.maxout(Tensor([35791395, 6, 5, 4],"float16"), 2, 1, )
paddle.nn.functional.maxout(Tensor([35791395, 6, 5, 4],"float16"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([53024288, 9, 3, 3],"float16"), 3, 1, None, )
paddle.nn.functional.maxout(Tensor([63380594, 4, 3, 3],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([9, 2, 2, 119304648],"float16"), 2, 3, None, )
paddle.nn.functional.maxout(Tensor([9, 2, 39768216, 6],"float16"), 2, 3, None, )
paddle.nn.functional.maxout(Tensor([9, 39768216, 2, 6],"float16"), 2, 3, None, )
paddle.nn.functional.maxout(x=Tensor([10, 9, 15907287, 3],"float16"), groups=3, )
paddle.nn.functional.maxout(x=Tensor([10, 9, 3, 15907287],"float16"), groups=3, )
paddle.nn.functional.maxout(x=Tensor([100, 2535224, 3, 3],"float32"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 1901418, 3],"float32"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3, 1901418],"float32"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3, 3579140],"float16"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3579140, 3],"float16"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([100, 4772186, 3, 3],"float16"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([119304648, 4, 3, 3],"float16"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([178956971, 2, 2, 6],"float16"), groups=2, axis=3, )
paddle.nn.functional.maxout(x=Tensor([53024288, 9, 3, 3],"float16"), groups=3, )
paddle.nn.functional.maxout(x=Tensor([63380594, 4, 3, 3],"float32"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([9, 2, 2, 119304648],"float16"), groups=2, axis=3, )
paddle.nn.functional.maxout(x=Tensor([9, 2, 39768216, 6],"float16"), groups=2, axis=3, )
paddle.nn.functional.maxout(x=Tensor([9, 39768216, 2, 6],"float16"), groups=2, axis=3, )
paddle.nn.functional.mish(Tensor([11142, 128, 40, 40],"float32"), )
paddle.nn.functional.mish(Tensor([11142, 512, 20, 20],"float32"), )
paddle.nn.functional.mish(Tensor([12, 1024, 10, 18569],"float32"), )
paddle.nn.functional.mish(Tensor([12, 1024, 18569, 10],"float32"), )
paddle.nn.functional.mish(Tensor([12, 118839, 40, 40],"float32"), )
paddle.nn.functional.mish(Tensor([12, 128, 37138, 40],"float32"), )
paddle.nn.functional.mish(Tensor([12, 128, 40, 37138],"float32"), )
paddle.nn.functional.mish(Tensor([12, 1901418, 10, 10],"float32"), )
paddle.nn.functional.mish(Tensor([12, 256, 18569, 40],"float32"), )
paddle.nn.functional.mish(Tensor([12, 256, 20, 37138],"float32"), )
paddle.nn.functional.mish(Tensor([12, 256, 37138, 20],"float32"), )
paddle.nn.functional.mish(Tensor([12, 256, 40, 18569],"float32"), )
paddle.nn.functional.mish(Tensor([12, 475355, 20, 20],"float32"), )
paddle.nn.functional.mish(Tensor([12, 512, 10, 37138],"float32"), )
paddle.nn.functional.mish(Tensor([12, 512, 18569, 20],"float32"), )
paddle.nn.functional.mish(Tensor([12, 512, 20, 18569],"float32"), )
paddle.nn.functional.mish(Tensor([12, 512, 37138, 10],"float32"), )
paddle.nn.functional.mish(Tensor([142606337, 16],"float32"), name="mish", )
paddle.nn.functional.mish(Tensor([2, 1140850690],"float32"), name="mish", )
paddle.nn.functional.mish(Tensor([22283, 1024, 10, 10],"float32"), )
paddle.nn.functional.mish(Tensor([22283, 256, 20, 20],"float32"), )
paddle.nn.functional.mish(Tensor([44565, 512, 10, 10],"float32"), )
paddle.nn.functional.mish(Tensor([5571, 256, 40, 40],"float32"), )
paddle.nn.functional.mse_loss(Tensor([1, 1],"float32"), Tensor([1, 2281701379],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1, 1],"float32"), Tensor([2281701379, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1, 1],"float32"), Tensor([4, 570425345],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([100, 22817014, 1],"float32"), Tensor([100, 22817014, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([100, 376, 1],"float32"), Tensor([100, 376, 60684],"float32"), )
paddle.nn.functional.mse_loss(Tensor([100, 376, 60684],"float32"), Tensor([100, 376, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([100, 376, 60684],"float32"), Tensor([100, 376, 60684],"float32"), )
paddle.nn.functional.mse_loss(Tensor([10000, 1],"float32"), Tensor([10000, 228171],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([10000, 228171],"float32"), Tensor([10000, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([10000, 228171],"float32"), Tensor([10000, 228171],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([101, 1],"float32"), Tensor([101, 22591103],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([101, 22591103],"float32"), Tensor([101, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([101, 22591103],"float32"), Tensor([101, 22591103],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([11661, 195670],"float32"), Tensor([11661, 195670],"float32"), )
paddle.nn.functional.mse_loss(Tensor([11883862, 96, 2],"float32"), Tensor([11883862, 96, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([11883862, 96, 2],"float32"), Tensor([11883862, 96, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([15548, 146753],"float32"), Tensor([15548, 146753],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 142606337, 1],"float32"), Tensor([16, 142606337, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 71303169, 2],"float32"), Tensor([16, 71303169, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 71303169, 2],"float32"), Tensor([16, 71303169, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1485483],"float32"), Tensor([16, 96, 1485483],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1485483],"float32"), Tensor([16, 96, 1485483],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1485483],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1],"float32"), Tensor([16, 96, 1485483],"float32"), )
paddle.nn.functional.mse_loss(Tensor([17825793, 128, 1],"float32"), Tensor([17825793, 128, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.nn.functional.mse_loss(Tensor([1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2, 10, 114085069],"float32"), Tensor([2, 10, 114085069],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 114085069],"float32"), Tensor([2, 10, 114085069],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 114085069],"float32"), Tensor([2, 10, 114085069],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([2, 114085069, 10],"float32"), Tensor([2, 114085069, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([2, 114085069, 10],"float32"), Tensor([2, 114085069, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2, 114085069, 10],"float32"), Tensor([2, 114085069, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([2, 570425345, 2],"float32"), Tensor([2, 570425345, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([2, 96, 11883862],"float32"), Tensor([2, 96, 11883862],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([2147483649, 2],"float16"), label=Tensor([2147483649, 2],"float16"), reduction="mean", name=None, )
paddle.nn.functional.mse_loss(Tensor([2281701379, 1],"float32"), Tensor([1, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.nn.functional.mse_loss(Tensor([228170138, 10],"float32"), Tensor([228170138, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([228170138, 10],"float32"), Tensor([228170138, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([228170138, 10],"float32"), Tensor([228170138, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([22817014, 10, 10],"float32"), Tensor([22817014, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([22817014, 10, 10],"float32"), Tensor([22817014, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([22817014, 10, 10],"float32"), Tensor([22817014, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([23211, 4, 3, 64, 128],"float32"), Tensor([23211, 4, 3, 64, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([23767723, 96, 1],"float32"), Tensor([23767723, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([256, 128, 1],"float32"), Tensor([256, 128, 69633],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([256, 128, 69633],"float32"), Tensor([256, 128, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([256, 128, 69633],"float32"), Tensor([256, 128, 69633],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([256, 15, 594194],"float32"), Tensor([256, 15, 594194],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([256, 2970966, 3],"float32"), Tensor([256, 2970966, 3],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([256, 8912897, 1],"float32"), Tensor([256, 8912897, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([26736, 85342],"float32"), Tensor([26736, 85342],"float32"), )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 25352238],"float32"), Tensor([3, 3, 10, 25352238],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 25352238],"float32"), Tensor([3, 3, 10, 25352238],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 25352238],"float32"), Tensor([3, 3, 10, 25352238],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 25352238, 10],"float32"), Tensor([3, 3, 25352238, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 25352238, 10],"float32"), Tensor([3, 3, 25352238, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 25352238, 10],"float32"), Tensor([3, 3, 25352238, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([3, 7605672, 10, 10],"float32"), Tensor([3, 7605672, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 7605672, 10, 10],"float32"), Tensor([3, 7605672, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 7605672, 10, 10],"float32"), Tensor([3, 7605672, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([30948, 3, 3, 64, 128],"float32"), Tensor([30948, 3, 3, 64, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3548, 12, 170, 1],"float32"), Tensor([3548, 12, 170, 316],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3548, 12, 170, 316],"float32"), Tensor([3548, 12, 170, 1],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3548, 12, 170, 316],"float32"), Tensor([3548, 12, 170, 316],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3548, 12, 53592, 1],"float32"), Tensor([3548, 12, 53592, 1],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3548, 3783, 170, 1],"float32"), Tensor([3548, 3783, 170, 1],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([5, 858993460],"float16"), label=Tensor([5, 858993460],"float16"), reduction="mean", name=None, )
paddle.nn.functional.mse_loss(Tensor([50704476, 15, 3],"float32"), Tensor([50704476, 15, 3],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([6068355, 376, 1],"float32"), Tensor([6068355, 376, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([64, 1451, 3, 64, 128],"float32"), Tensor([64, 1451, 3, 64, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([64, 3, 1451, 64, 128],"float32"), Tensor([64, 3, 1451, 64, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([64, 3, 3, 30948, 128],"float32"), Tensor([64, 3, 3, 30948, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([64, 3, 3, 64, 61896],"float32"), Tensor([64, 3, 3, 64, 61896],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([64, 4, 1089, 64, 128],"float32"), Tensor([64, 4, 1089, 64, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([64, 4, 3, 23211, 128],"float32"), Tensor([64, 4, 3, 23211, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([64, 4, 3, 64, 46422],"float32"), Tensor([64, 4, 3, 64, 46422],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), )
paddle.nn.functional.mse_loss(Tensor([7605672, 3, 10, 10],"float32"), Tensor([7605672, 3, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([7605672, 3, 10, 10],"float32"), Tensor([7605672, 3, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([7605672, 3, 10, 10],"float32"), Tensor([7605672, 3, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([8, 1, 512, 512],"float16"), Tensor([8, 1089, 512, 512],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([8, 2049, 512, 512],"float16"), Tensor([8, 1, 512, 512],"float32"), "mean", )
paddle.nn.functional.mse_loss(input=Tensor([2, 1140850690],"float32"), label=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.mse_loss(input=Tensor([2, 1140850690],"float32"), label=Tensor([2, 1],"float32"), )
paddle.nn.functional.mse_loss(input=Tensor([2, 1],"float32"), label=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.mse_loss(input=Tensor([2281701379, 1],"float32"), label=Tensor([2281701379, 1],"float32"), )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), reduction="mean", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), reduction="none", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), reduction="sum", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), weight=None, reduction="none", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), weight=None, reduction="sum", name=None, )
paddle.nn.functional.nll_loss(Tensor([4, 570425345],"float32"), Tensor([4],"int64"), )
paddle.nn.functional.nll_loss(Tensor([5, 456340276],"float32"), Tensor([5],"int64"), )
paddle.nn.functional.nll_loss(Tensor([5, 57042535, 2, 4],"float32"), Tensor([5, 2, 4],"int64"), )
paddle.nn.functional.normalize(Tensor([1, 128, 32, 557057],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 128, 557057, 32],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 2228225, 32, 32],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 2281701379],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 256, 16, 557057],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 256, 557057, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 557057, 64, 64],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 64, 557057, 64],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 64, 64, 557057],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 8912897, 16, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([10, 228170138],"float32"), )
paddle.nn.functional.normalize(Tensor([10, 228170138],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([10, 228170138],"float32"), p=1.5, )
paddle.nn.functional.normalize(Tensor([1006, 2268093],"float32"), )
paddle.nn.functional.normalize(Tensor([101, 22591103],"float32"), )
paddle.nn.functional.normalize(Tensor([1015, 2247982],"float32"), )
paddle.nn.functional.normalize(Tensor([1018, 2241357],"float32"), )
paddle.nn.functional.normalize(Tensor([102, 22369622],"float32"), )
paddle.nn.functional.normalize(Tensor([1021, 2234772],"float32"), )
paddle.nn.functional.normalize(Tensor([1023, 2230403],"float32"), )
paddle.nn.functional.normalize(Tensor([1025, 2226051],"float32"), )
paddle.nn.functional.normalize(Tensor([1029, 2217397],"float32"), )
paddle.nn.functional.normalize(Tensor([103, 22152441],"float32"), )
paddle.nn.functional.normalize(Tensor([1030, 2215245],"float32"), )
paddle.nn.functional.normalize(Tensor([1031, 2213096],"float32"), )
paddle.nn.functional.normalize(Tensor([104, 21939437],"float32"), )
paddle.nn.functional.normalize(Tensor([1040, 2193944],"float32"), )
paddle.nn.functional.normalize(Tensor([105, 21730490],"float32"), )
paddle.nn.functional.normalize(Tensor([1051, 2170982],"float32"), )
paddle.nn.functional.normalize(Tensor([1052, 2168918],"float32"), )
paddle.nn.functional.normalize(Tensor([1053, 2166858],"float32"), )
paddle.nn.functional.normalize(Tensor([1054, 2164803],"float32"), )
paddle.nn.functional.normalize(Tensor([1056, 2160703],"float32"), )
paddle.nn.functional.normalize(Tensor([106, 21525485],"float32"), )
paddle.nn.functional.normalize(Tensor([1065, 2142443],"float32"), )
paddle.nn.functional.normalize(Tensor([1066, 2140433],"float32"), )
paddle.nn.functional.normalize(Tensor([1079, 2114645],"float32"), )
paddle.nn.functional.normalize(Tensor([1080, 2112687],"float32"), )
paddle.nn.functional.normalize(Tensor([1082, 2108782],"float32"), )
paddle.nn.functional.normalize(Tensor([1084, 2104891],"float32"), )
paddle.nn.functional.normalize(Tensor([1088, 2097153],"float32"), )
paddle.nn.functional.normalize(Tensor([1089, 2095227],"float32"), )
paddle.nn.functional.normalize(Tensor([1090, 2093305],"float32"), )
paddle.nn.functional.normalize(Tensor([1093, 2087559],"float32"), )
paddle.nn.functional.normalize(Tensor([1098, 2078053],"float32"), )
paddle.nn.functional.normalize(Tensor([110, 20742740],"float32"), )
paddle.nn.functional.normalize(Tensor([1104, 2066759],"float32"), )
paddle.nn.functional.normalize(Tensor([1109, 2057441],"float32"), )
paddle.nn.functional.normalize(Tensor([111, 20555869],"float32"), )
paddle.nn.functional.normalize(Tensor([1112, 2051890],"float32"), )
paddle.nn.functional.normalize(Tensor([1118, 2040878],"float32"), )
paddle.nn.functional.normalize(Tensor([1120, 2037234],"float32"), )
paddle.nn.functional.normalize(Tensor([1123, 2031792],"float32"), )
paddle.nn.functional.normalize(Tensor([1128, 2022785],"float32"), )
paddle.nn.functional.normalize(Tensor([1134, 2012083],"float32"), )
paddle.nn.functional.normalize(Tensor([1138, 2005010],"float32"), )
paddle.nn.functional.normalize(Tensor([114085069, 20],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1143, 1996240],"float32"), )
paddle.nn.functional.normalize(Tensor([1158, 1970382],"float32"), )
paddle.nn.functional.normalize(Tensor([1165, 1958542],"float32"), )
paddle.nn.functional.normalize(Tensor([1177, 1938574],"float32"), )
paddle.nn.functional.normalize(Tensor([1179, 1935286],"float32"), )
paddle.nn.functional.normalize(Tensor([1180, 1933646],"float32"), )
paddle.nn.functional.normalize(Tensor([1183, 1928742],"float32"), )
paddle.nn.functional.normalize(Tensor([1186, 1923863],"float32"), )
paddle.nn.functional.normalize(Tensor([1188, 1920625],"float32"), )
paddle.nn.functional.normalize(Tensor([11883862, 192],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1189, 1919009],"float32"), )
paddle.nn.functional.normalize(Tensor([119, 19173962],"float32"), )
paddle.nn.functional.normalize(Tensor([1192, 1914180],"float32"), )
paddle.nn.functional.normalize(Tensor([1199, 1903004],"float32"), )
paddle.nn.functional.normalize(Tensor([12, 190141782],"float32"), )
paddle.nn.functional.normalize(Tensor([12, 190141782],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([1200, 1901418],"float32"), )
paddle.nn.functional.normalize(Tensor([1206, 1891959],"float32"), )
paddle.nn.functional.normalize(Tensor([1213, 1881040],"float32"), )
paddle.nn.functional.normalize(Tensor([1214, 1879491],"float32"), )
paddle.nn.functional.normalize(Tensor([1219, 1871782],"float32"), )
paddle.nn.functional.normalize(Tensor([1221, 1868716],"float32"), )
paddle.nn.functional.normalize(Tensor([1223, 1865660],"float32"), )
paddle.nn.functional.normalize(Tensor([123, 18550418],"float32"), )
paddle.nn.functional.normalize(Tensor([1230, 1855042],"float32"), )
paddle.nn.functional.normalize(Tensor([1232, 1852031],"float32"), )
paddle.nn.functional.normalize(Tensor([1233, 1850529],"float32"), )
paddle.nn.functional.normalize(Tensor([1238, 1843055],"float32"), )
paddle.nn.functional.normalize(Tensor([1243, 1835641],"float32"), )
paddle.nn.functional.normalize(Tensor([1250, 1825362],"float32"), )
paddle.nn.functional.normalize(Tensor([1259, 1812313],"float32"), )
paddle.nn.functional.normalize(Tensor([126, 18108742],"float32"), )
paddle.nn.functional.normalize(Tensor([126761188, 18],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1270, 1796616],"float32"), )
paddle.nn.functional.normalize(Tensor([1277, 1786767],"float32"), )
paddle.nn.functional.normalize(Tensor([128, 17825793],"float32"), )
paddle.nn.functional.normalize(Tensor([128, 17825793],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1281, 1781188],"float32"), )
paddle.nn.functional.normalize(Tensor([1282, 1779799],"float32"), )
paddle.nn.functional.normalize(Tensor([1284, 1777026],"float32"), )
paddle.nn.functional.normalize(Tensor([1287, 1772884],"float32"), )
paddle.nn.functional.normalize(Tensor([1290, 1768761],"float32"), )
paddle.nn.functional.normalize(Tensor([1291, 1767391],"float32"), )
paddle.nn.functional.normalize(Tensor([1292, 1766023],"float32"), )
paddle.nn.functional.normalize(Tensor([1295, 1761932],"float32"), )
paddle.nn.functional.normalize(Tensor([1297, 1759215],"float32"), )
paddle.nn.functional.normalize(Tensor([1304, 1749771],"float32"), )
paddle.nn.functional.normalize(Tensor([1310, 1741757],"float32"), )
paddle.nn.functional.normalize(Tensor([1312, 1739102],"float32"), )
paddle.nn.functional.normalize(Tensor([1315, 1735135],"float32"), )
paddle.nn.functional.normalize(Tensor([1317, 1732500],"float32"), )
paddle.nn.functional.normalize(Tensor([132, 17285617],"float32"), )
paddle.nn.functional.normalize(Tensor([1332, 1712990],"float32"), )
paddle.nn.functional.normalize(Tensor([1333, 1711704],"float32"), )
paddle.nn.functional.normalize(Tensor([1348, 1692657],"float32"), )
paddle.nn.functional.normalize(Tensor([1349, 1691403],"float32"), )
paddle.nn.functional.normalize(Tensor([1352, 1687649],"float32"), )
paddle.nn.functional.normalize(Tensor([136, 16777217],"float32"), )
paddle.nn.functional.normalize(Tensor([1362, 1675258],"float32"), )
paddle.nn.functional.normalize(Tensor([1363, 1674029],"float32"), )
paddle.nn.functional.normalize(Tensor([1367, 1669131],"float32"), )
paddle.nn.functional.normalize(Tensor([137, 16654755],"float32"), )
paddle.nn.functional.normalize(Tensor([1373, 1661837],"float32"), )
paddle.nn.functional.normalize(Tensor([1374, 1660627],"float32"), )
paddle.nn.functional.normalize(Tensor([1378, 1655807],"float32"), )
paddle.nn.functional.normalize(Tensor([1389, 1642694],"float32"), )
paddle.nn.functional.normalize(Tensor([139, 16415118],"float32"), )
paddle.nn.functional.normalize(Tensor([1394, 1636802],"float32"), )
paddle.nn.functional.normalize(Tensor([14, 162978670],"float32"), )
paddle.nn.functional.normalize(Tensor([140, 16297867],"float32"), )
paddle.nn.functional.normalize(Tensor([1401, 1628624],"float32"), )
paddle.nn.functional.normalize(Tensor([1408, 1620527],"float32"), )
paddle.nn.functional.normalize(Tensor([1411, 1617082],"float32"), )
paddle.nn.functional.normalize(Tensor([1413, 1614793],"float32"), )
paddle.nn.functional.normalize(Tensor([1417, 1610234],"float32"), )
paddle.nn.functional.normalize(Tensor([1420, 1606832],"float32"), )
paddle.nn.functional.normalize(Tensor([1421, 1605702],"float32"), )
paddle.nn.functional.normalize(Tensor([1429, 1596712],"float32"), )
paddle.nn.functional.normalize(Tensor([143, 15955954],"float32"), )
paddle.nn.functional.normalize(Tensor([1435, 1590036],"float32"), )
paddle.nn.functional.normalize(Tensor([1438, 1586719],"float32"), )
paddle.nn.functional.normalize(Tensor([1439, 1585616],"float32"), )
paddle.nn.functional.normalize(Tensor([144, 15845149],"float32"), )
paddle.nn.functional.normalize(Tensor([1449, 1574674],"float32"), )
paddle.nn.functional.normalize(Tensor([1453, 1570339],"float32"), )
paddle.nn.functional.normalize(Tensor([1463, 1559605],"float32"), )
paddle.nn.functional.normalize(Tensor([147, 15521779],"float32"), )
paddle.nn.functional.normalize(Tensor([1471, 1551123],"float32"), )
paddle.nn.functional.normalize(Tensor([1472, 1550069],"float32"), )
paddle.nn.functional.normalize(Tensor([1478, 1543777],"float32"), )
paddle.nn.functional.normalize(Tensor([149, 15313433],"float32"), )
paddle.nn.functional.normalize(Tensor([1494, 1527244],"float32"), )
paddle.nn.functional.normalize(Tensor([1497, 1524183],"float32"), )
paddle.nn.functional.normalize(Tensor([1499, 1522150],"float32"), )
paddle.nn.functional.normalize(Tensor([1511, 1510061],"float32"), )
paddle.nn.functional.normalize(Tensor([1512, 1509062],"float32"), )
paddle.nn.functional.normalize(Tensor([1514, 1507069],"float32"), )
paddle.nn.functional.normalize(Tensor([1517, 1504088],"float32"), )
paddle.nn.functional.normalize(Tensor([1523, 1498163],"float32"), )
paddle.nn.functional.normalize(Tensor([1527, 1494238],"float32"), )
paddle.nn.functional.normalize(Tensor([1532, 1489362],"float32"), )
paddle.nn.functional.normalize(Tensor([1536, 1485483],"float32"), )
paddle.nn.functional.normalize(Tensor([1539, 1482587],"float32"), )
paddle.nn.functional.normalize(Tensor([1541, 1480663],"float32"), )
paddle.nn.functional.normalize(Tensor([1542, 1479703],"float32"), )
paddle.nn.functional.normalize(Tensor([1543, 1478744],"float32"), )
paddle.nn.functional.normalize(Tensor([1546, 1475875],"float32"), )
paddle.nn.functional.normalize(Tensor([1549, 1473016],"float32"), )
paddle.nn.functional.normalize(Tensor([1553, 1469222],"float32"), )
paddle.nn.functional.normalize(Tensor([1562, 1460757],"float32"), )
paddle.nn.functional.normalize(Tensor([1563, 1459822],"float32"), )
paddle.nn.functional.normalize(Tensor([1567, 1456096],"float32"), )
paddle.nn.functional.normalize(Tensor([1579, 1445030],"float32"), )
paddle.nn.functional.normalize(Tensor([1588, 1436840],"float32"), )
paddle.nn.functional.normalize(Tensor([1589, 1435936],"float32"), )
paddle.nn.functional.normalize(Tensor([1596, 1429638],"float32"), )
paddle.nn.functional.normalize(Tensor([1603, 1423395],"float32"), )
paddle.nn.functional.normalize(Tensor([1605, 1421621],"float32"), )
paddle.nn.functional.normalize(Tensor([1607, 1419852],"float32"), )
paddle.nn.functional.normalize(Tensor([1623, 1405855],"float32"), )
paddle.nn.functional.normalize(Tensor([1653, 1380340],"float32"), )
paddle.nn.functional.normalize(Tensor([1661, 1373692],"float32"), )
paddle.nn.functional.normalize(Tensor([1671, 1365471],"float32"), )
paddle.nn.functional.normalize(Tensor([1676, 1361398],"float32"), )
paddle.nn.functional.normalize(Tensor([1680, 1358156],"float32"), )
paddle.nn.functional.normalize(Tensor([1686, 1353323],"float32"), )
paddle.nn.functional.normalize(Tensor([1696, 1345343],"float32"), )
paddle.nn.functional.normalize(Tensor([1697, 1344551],"float32"), )
paddle.nn.functional.normalize(Tensor([1704, 1339027],"float32"), )
paddle.nn.functional.normalize(Tensor([1716, 1329663],"float32"), )
paddle.nn.functional.normalize(Tensor([1737, 1313588],"float32"), )
paddle.nn.functional.normalize(Tensor([174, 13113227],"float32"), )
paddle.nn.functional.normalize(Tensor([17409, 128, 32, 32],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1748, 1305322],"float32"), )
paddle.nn.functional.normalize(Tensor([1753, 1301599],"float32"), )
paddle.nn.functional.normalize(Tensor([1755, 1300115],"float32"), )
paddle.nn.functional.normalize(Tensor([1761, 1295686],"float32"), )
paddle.nn.functional.normalize(Tensor([1768, 1290556],"float32"), )
paddle.nn.functional.normalize(Tensor([177, 12890969],"float32"), )
paddle.nn.functional.normalize(Tensor([1774, 1286191],"float32"), )
paddle.nn.functional.normalize(Tensor([1777, 1284019],"float32"), )
paddle.nn.functional.normalize(Tensor([178, 12818548],"float32"), )
paddle.nn.functional.normalize(Tensor([17825793, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1796, 1270436],"float32"), )
paddle.nn.functional.normalize(Tensor([1829, 1247514],"float32"), )
paddle.nn.functional.normalize(Tensor([183, 12468314],"float32"), )
paddle.nn.functional.normalize(Tensor([1836, 1242757],"float32"), )
paddle.nn.functional.normalize(Tensor([1851, 1232686],"float32"), )
paddle.nn.functional.normalize(Tensor([1856, 1229365],"float32"), )
paddle.nn.functional.normalize(Tensor([1878, 1214964],"float32"), )
paddle.nn.functional.normalize(Tensor([1895, 1204065],"float32"), )
paddle.nn.functional.normalize(Tensor([191, 11946081],"float32"), )
paddle.nn.functional.normalize(Tensor([1920, 1188387],"float32"), )
paddle.nn.functional.normalize(Tensor([1928, 1183456],"float32"), )
paddle.nn.functional.normalize(Tensor([1938, 1177349],"float32"), )
paddle.nn.functional.normalize(Tensor([1943, 1174319],"float32"), )
paddle.nn.functional.normalize(Tensor([2, 1140850690],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([2, 16297867, 7, 10],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([2, 8, 14260634, 10],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([2, 8, 7, 20372334],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([20, 114085069],"float32"), )
paddle.nn.functional.normalize(Tensor([2009, 1135740],"float32"), )
paddle.nn.functional.normalize(Tensor([201, 11351749],"float32"), )
paddle.nn.functional.normalize(Tensor([207427399, 11],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([2081, 1096445],"float32"), )
paddle.nn.functional.normalize(Tensor([211, 10813751],"float32"), )
paddle.nn.functional.normalize(Tensor([2112687, 1080],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([22, 103713700],"float32"), )
paddle.nn.functional.normalize(Tensor([220, 10371370],"float32"), )
paddle.nn.functional.normalize(Tensor([224, 10186167],"float32"), )
paddle.nn.functional.normalize(Tensor([2281701379, 1],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([2281701379],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([2281701379],"float32"), axis=0, epsilon=1e-10, )
paddle.nn.functional.normalize(Tensor([2281701379],"float32"), axis=0, epsilon=1e-12, )
paddle.nn.functional.normalize(Tensor([228170138, 10],"float32"), )
paddle.nn.functional.normalize(Tensor([228170138, 10],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([228170138, 10],"float32"), p=1.5, )
paddle.nn.functional.normalize(Tensor([2331, 978851],"float32"), )
paddle.nn.functional.normalize(Tensor([246, 9275209],"float32"), )
paddle.nn.functional.normalize(Tensor([253522376, 9],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([254, 8983077],"float32"), )
paddle.nn.functional.normalize(Tensor([279, 8178142],"float32"), )
paddle.nn.functional.normalize(Tensor([28169153, 81],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([285212673, 8],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([28521268, 80],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([29, 78679358],"float32"), )
paddle.nn.functional.normalize(Tensor([2970966, 768],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([3, 760567127],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([3169030, 720],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([325957340, 7],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([325957340, 7],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([34817, 256, 16, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([35651585, 64],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([35651585, 64],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([380283564, 6],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([4, 570425345],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([4, 570425345],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([4074467, 8, 7, 10],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([4456449, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([45, 50704476],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([456340276, 5],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([456340276, 5],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([5, 456340276],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([50704476, 45],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([570425345, 4],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([5704254, 400],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([6, 380283564],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([60, 38028357],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([64, 35651585],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([71303169, 32],"float32"), )
paddle.nn.functional.normalize(Tensor([720, 3169030],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([760567127, 3],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([760567127, 3],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([80, 28521268],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([80, 28521268],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([84507459, 27],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([8705, 64, 64, 64],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([8912897, 256],"float32"), axis=1, )
paddle.nn.functional.normalize(x=Tensor([1, 2281701379],"float32"), axis=-1, )
paddle.nn.functional.normalize(x=Tensor([1073741825, 4],"float16"), )
paddle.nn.functional.normalize(x=Tensor([143165577, 5, 6],"float16"), )
paddle.nn.functional.normalize(x=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.normalize(x=Tensor([2, 2147483649],"float16"), )
paddle.nn.functional.normalize(x=Tensor([20452226, 5, 6, 7],"float16"), )
paddle.nn.functional.normalize(x=Tensor([20452226, 5, 6, 7],"float16"), p=1, )
paddle.nn.functional.normalize(x=Tensor([20452226, 5, 6, 7],"float16"), p=4, )
paddle.nn.functional.normalize(x=Tensor([20452226, 5, 6, 7],"float16"), p=4, axis=3, )
paddle.nn.functional.normalize(x=Tensor([2147483649, 2],"float16"), p=1.2, )
paddle.nn.functional.normalize(x=Tensor([2970966, 768],"float32"), axis=-1, )
paddle.nn.functional.normalize(x=Tensor([3, 1431655766],"float16"), )
paddle.nn.functional.normalize(x=Tensor([4, 1073741825],"float16"), p=1.2, )
paddle.nn.functional.normalize(x=Tensor([4, 178956971, 6],"float16"), )
paddle.nn.functional.normalize(x=Tensor([4, 25565282, 6, 7],"float16"), )
paddle.nn.functional.normalize(x=Tensor([4, 25565282, 6, 7],"float16"), p=1, )
paddle.nn.functional.normalize(x=Tensor([4, 25565282, 6, 7],"float16"), p=4, )
paddle.nn.functional.normalize(x=Tensor([4, 25565282, 6, 7],"float16"), p=4, axis=3, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 214748365],"float16"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 30678338, 7],"float16"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 30678338, 7],"float16"), p=1, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 30678338, 7],"float16"), p=4, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 30678338, 7],"float16"), p=4, axis=3, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 35791395],"float16"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 35791395],"float16"), p=1, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 35791395],"float16"), p=4, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 35791395],"float16"), p=4, axis=3, )
paddle.nn.functional.normalize(x=Tensor([4294967297],"float16"), axis=0, )
paddle.nn.functional.normalize(x=Tensor([570425345, 4],"float32"), )
paddle.nn.functional.pad(Tensor([1, 1, 10, 228170138],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 100, 22817014],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 108652447, 21],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 17, 134217729],"float32"), pad=list[1,1,1,1,], mode="constant", value=0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 1140850690],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 22817014, 100],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 27825627, 82],"float32"), pad=list[1,1,1,1,], mode="constant", value=0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 10, 429496730],"float16"), pad=list[0,0,0,1,0,0,], )
paddle.nn.functional.pad(Tensor([1, 1072, 32, 224, 297],"float32"), tuple(0,3,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 10865245, 10, 21],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1300, 32, 245, 224],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 1316, 32, 242, 224],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 1332, 32, 239, 224],"float32"), tuple(0,0,0,1,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 1338, 32, 224, 238],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 134217729, 32],"float16"), pad=list[0,0,0,1,0,0,], )
paddle.nn.functional.pad(Tensor([1, 13692, 31, 28, 192],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 1378, 32, 224, 231],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 1431655766, 3],"float16"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NLC", name=None, )
paddle.nn.functional.pad(Tensor([1, 14701, 155208],"float32"), list[1,0,], value=4, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 14, 727584],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 15, 679078],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 15, 679078],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 16, 636636],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 17, 599187],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 18, 565899],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 19, 536115],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 26527, 384],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 26527, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 26527, 384],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 26527, 384],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 26527, 384],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 26527, 384],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 26527, 384],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 14, 679078],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 14, 679078],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 24759, 384],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 24759, 384],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 16, 14, 636636],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 16, 23211, 384],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 18, 14, 565899],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 18, 20632, 384],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 19546, 19, 384],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 20632, 18, 384],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 21846, 17, 384],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 23211, 16, 384],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 24759, 15, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 24759, 15, 384],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 26527, 14, 384],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 26527, 14, 384],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 26527, 14, 384],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 26527, 14, 384],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 26527, 14, 384],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 26527, 28, 192],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 26527, 56, 96],"float32"), tuple(0,0,0,2,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 23960, 192],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 28, 164294],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 61, 24353, 96],"float32"), tuple(0,0,0,2,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 61, 56, 41747],"float32"), tuple(0,0,0,2,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 1636802, 17, 82],"float32"), pad=list[1,1,1,1,], mode="constant", value=0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 17980, 126903],"float32"), list[1,0,], value=3, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 192, 144, 82527],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 192, 61896, 192],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 19780, 115354],"float32"), list[1,0,], value=2, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 2, 1140850690],"float32"), pad=list[1,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 1140850690],"float32"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 1140850690],"float32"), pad=list[2,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 20524, 111173],"float32"), list[1,0,], value=1, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 21955, 103927],"float32"), list[1,0,], value=0, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 22071, 103381],"float32"), list[1,0,], value=7, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 22339, 14, 19, 384],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 228171, 100, 100],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 23580, 14, 18, 384],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 23580, 18, 14, 384],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 24967, 14, 17, 384],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 25757, 88586],"float32"), list[1,0,], value=5, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 26527, 14, 16, 384],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 26527, 16, 14, 384],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 27860, 81899],"float32"), list[1,0,], value=6, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 28295, 14, 15, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 28295, 14, 15, 384],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 28295, 15, 14, 384],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 28295, 15, 14, 384],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 3, 11433, 224, 297],"float32"), tuple(0,3,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 13859, 245, 224],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 140, 10226113],"float16"), pad=list[40,40,0,0,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 14031, 242, 224],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 14207, 239, 224],"float32"), tuple(0,0,0,1,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 14267, 224, 238],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 14699, 224, 231],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 184, 7780738],"float16"), pad=list[52,52,0,0,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 224, 3395389],"float32"), list[0,1,0,0,], )
paddle.nn.functional.pad(Tensor([1, 3, 32, 102891, 231],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 106106, 224],"float32"), tuple(0,0,0,1,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 106106, 224],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 106106, 224],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 224, 106106],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 224, 106106],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 239, 99447],"float32"), tuple(0,0,0,1,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 242, 98214],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 245, 97012],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 80027, 297],"float32"), tuple(0,3,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 99865, 238],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 3395389, 224],"float32"), list[0,1,0,0,], )
paddle.nn.functional.pad(Tensor([1, 3, 5965233, 240],"float16"), pad=list[0,0,40,40,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 742742, 1024],"float32"), tuple(0,0,0,338,), )
paddle.nn.functional.pad(Tensor([1, 30316, 14, 14, 384],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 45474, 224, 224],"float32"), list[0,1,0,0,], )
paddle.nn.functional.pad(Tensor([1, 760567127, 3],"float32"), list[1,0,], value=1, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 760567127, 3],"float32"), list[1,0,], value=2, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([13421773, 10, 32],"float16"), pad=list[0,0,0,1,0,0,], )
paddle.nn.functional.pad(Tensor([16, 64, 16, 139265],"float32"), list[0,3,0,3,], mode="constant", )
paddle.nn.functional.pad(Tensor([1895, 16, 14, 14, 384],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([358, 3, 32, 224, 297],"float32"), tuple(0,3,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([38452, 19780, 3],"float32"), list[1,0,], value=2, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([4, 128, 63664, 70],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 128, 94, 47410],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([421120, 25, 217],"float32"), list[0,1,], "constant", 1.0, data_format="NCL", )
paddle.nn.functional.pad(Tensor([42301, 17980, 3],"float32"), list[1,0,], value=3, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([4294967297],"float16"), list[0,1,], value=1, )
paddle.nn.functional.pad(Tensor([4294967297],"float16"), list[1,0,], value=1, )
paddle.nn.functional.pad(Tensor([4294967297],"float16"), pad=list[106,107,], mode="constant", )
paddle.nn.functional.pad(Tensor([4294967297],"float16"), pad=list[6,7,], mode="constant", )
paddle.nn.functional.pad(Tensor([430, 192, 144, 192],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([434, 3, 32, 245, 224],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([435, 16, 61, 56, 96],"float32"), tuple(0,0,0,2,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([439, 3, 32, 242, 224],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([4422, 24, 84, 256],"float32"), tuple(0,0,0,1,0,1,0,0,), )
paddle.nn.functional.pad(Tensor([444, 3, 32, 239, 224],"float32"), tuple(0,0,0,1,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([446, 3, 32, 224, 238],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([460, 3, 32, 224, 231],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([5, 12380, 48, 768],"float32"), tuple(0,0,0,8,0,8,0,0,), )
paddle.nn.functional.pad(Tensor([5, 48, 12380, 768],"float32"), tuple(0,0,0,8,0,8,0,0,), )
paddle.nn.functional.pad(Tensor([5, 48, 48, 198065],"float32"), tuple(0,0,0,8,0,8,0,0,), )
paddle.nn.functional.pad(Tensor([51736, 14701, 3],"float32"), list[1,0,], value=4, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([6, 380283564],"float32"), list[1,0,1,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([63380594, 6, 6],"float32"), pad=list[2,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([7, 12, 42, 646741],"float32"), tuple(0,0,0,3,0,3,0,0,), )
paddle.nn.functional.pad(Tensor([7, 12, 53053, 512],"float32"), tuple(0,0,0,3,0,3,0,0,), )
paddle.nn.functional.pad(Tensor([7, 15158, 168, 128],"float32"), tuple(0,0,0,2,0,2,0,0,), )
paddle.nn.functional.pad(Tensor([7, 15158, 21, 1024],"float32"), tuple(0,0,0,4,0,4,0,0,), )
paddle.nn.functional.pad(Tensor([7, 15158, 42, 512],"float32"), tuple(0,0,0,3,0,3,0,0,), )
paddle.nn.functional.pad(Tensor([7, 15158, 84, 256],"float32"), tuple(0,0,0,1,0,1,0,0,), )
paddle.nn.functional.pad(Tensor([7, 24, 53053, 256],"float32"), tuple(0,0,0,1,0,1,0,0,), )
paddle.nn.functional.pad(Tensor([7, 24, 84, 161686],"float32"), tuple(0,0,0,1,0,1,0,0,), )
paddle.nn.functional.pad(Tensor([7, 48, 168, 40422],"float32"), tuple(0,0,0,2,0,2,0,0,), )
paddle.nn.functional.pad(Tensor([7, 48, 53053, 128],"float32"), tuple(0,0,0,2,0,2,0,0,), )
paddle.nn.functional.pad(Tensor([7, 6, 21, 2586964],"float32"), tuple(0,0,0,4,0,4,0,0,), )
paddle.nn.functional.pad(Tensor([7, 6, 53053, 1024],"float32"), tuple(0,0,0,4,0,4,0,0,), )
paddle.nn.functional.pad(Tensor([742742, 3, 32, 32],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([742742, 48, 8, 8],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([8, 1, 1203429, 237],"float32"), list[2,2,2,2,], "constant", 0, )
paddle.nn.functional.pad(Tensor([8, 1, 237, 1203429],"float32"), list[2,2,2,2,], "constant", 0, )
paddle.nn.functional.pad(Tensor([8, 5078, 237, 237],"float32"), list[2,2,2,2,], "constant", 0, )
paddle.nn.functional.pad(Tensor([856, 16, 31, 28, 192],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([8843, 12, 42, 512],"float32"), tuple(0,0,0,3,0,3,0,0,), )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 1431655766, 3],"float16"), pad=list[0,0,1,1,0,0,], mode="constant", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([253522376, 3, 3],"float32"), pad=list[1,1,], mode="constant", value=0.0, data_format="NCL", )
paddle.nn.functional.pad(x=Tensor([3, 253522376, 3],"float32"), pad=list[1,1,], mode="constant", value=0.0, data_format="NCL", )
paddle.nn.functional.pad(x=Tensor([3, 3, 253522376],"float32"), pad=list[1,1,], mode="constant", value=0.0, data_format="NCL", )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 1],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([100],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 1],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 22817014],"float32"), y=Tensor([100, 1],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 22817014],"float32"), y=Tensor([100, 22817014],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(x=Tensor([22817014, 100],"float32"), y=Tensor([100],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(x=Tensor([22817014, 100],"float32"), y=Tensor([22817014, 1],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pixel_shuffle(Tensor([1, 1, 17, 134217729],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1, 1, 274, 8327378],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1, 1, 27825627, 82],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1, 1, 48546838, 47],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1, 1636802, 17, 82],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1, 177179, 274, 47],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1089, 128, 128, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([15845149, 9, 4, 4],"float32"), upscale_factor=3, )
paddle.nn.functional.pixel_shuffle(Tensor([1636802, 1, 17, 82],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([177179, 1, 274, 47],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 134217729, 4, 4],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 134217729, 4, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 4, 134217729],"float16"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 4, 134217729],"float16"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 59652324, 9],"float16"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 59652324, 9],"float16"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 59652324, 4, 9],"float16"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 59652324, 4, 9],"float16"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 31690297, 4],"float32"), upscale_factor=3, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 4, 31690297],"float32"), upscale_factor=3, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 4, 59652324],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 4, 59652324],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 59652324, 4],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 59652324, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2177, 256, 64, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([29826162, 4, 4, 9],"float16"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([29826162, 4, 4, 9],"float16"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([29826162, 9, 4, 4],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([29826162, 9, 4, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([3314018, 81, 4, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 128, 34817],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 34817, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 64, 69633],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 69633, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 256, 128, 17409],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 256, 17409, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 256, 34817, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 256, 64, 34817],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 81, 3314018, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 81, 4, 3314018],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 9, 29826162, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 9, 4, 29826162],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4353, 128, 64, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([545, 256, 128, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([64, 256, 1089, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([64, 256, 128, 1089],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([64, 256, 2177, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([64, 256, 64, 2177],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 134217729, 4, 4],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 4, 4, 134217729],"float16"), upscale_factor=3, data_format="NHWC", )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 4, 59652324, 9],"float16"), upscale_factor=3, data_format="NHWC", )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 59652324, 4, 9],"float16"), upscale_factor=3, data_format="NHWC", )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 9, 4, 59652324],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 9, 59652324, 4],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([29826162, 4, 4, 9],"float16"), upscale_factor=3, data_format="NHWC", )
paddle.nn.functional.pixel_shuffle(x=Tensor([29826162, 9, 4, 4],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([3314018, 81, 4, 4],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 81, 3314018, 4],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 81, 4, 3314018],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 9, 29826162, 4],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 9, 4, 29826162],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([15845149, 1, 12, 12],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 12, 95070891],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 95070891, 12],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 12, 12, 14913081],"float16"), 3, "NHWC", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 12, 12, 14913081],"float16"), 3, "NHWC", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 14913081, 12, 12],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 14913081, 12, 12],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 7922575, 12, 12],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([29826162, 1, 12, 12],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([29826162, 1, 12, 12],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([29826162, 12, 12, 1],"float16"), 3, "NHWC", )
paddle.nn.functional.pixel_unshuffle(Tensor([29826162, 12, 12, 1],"float16"), 3, "NHWC", None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", )
paddle.nn.functional.poisson_nll_loss(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.nn.functional.prelu(Tensor([1, 190141782, 3, 4],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 190141782, 3, 4],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 285212673, 4],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 285212673, 4],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 285212673, 4],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 285212673, 4],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 380283564],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 380283564],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 380283564],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 380283564],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 28, 6122],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 3061, 56],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 56, 3061],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 6122, 28],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 256, 12243, 7],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 256, 14, 6122],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 256, 28, 3061],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 256, 3061, 28],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 256, 6122, 14],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 256, 7, 12243],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 512, 14, 3061],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 512, 3061, 14],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 512, 6122, 7],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 512, 7, 6122],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 64, 56, 6122],"float32"), Tensor([64],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 64, 6122, 56],"float32"), Tensor([64],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([11369, 256, 28, 28],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([11369, 64, 56, 56],"float32"), Tensor([64],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1140851, 20, 10, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 128, 2487, 56],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 128, 28, 4974],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 128, 4974, 28],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 128, 56, 2487],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 256, 14, 4974],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 256, 2487, 28],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 256, 28, 2487],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 256, 4974, 14],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 256, 7, 9948],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 256, 9948, 7],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 512, 14, 2487],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 512, 2487, 14],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 512, 4974, 7],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 512, 7, 4974],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 64, 4974, 56],"float32"), Tensor([64],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 64, 56, 4974],"float32"), Tensor([64],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([159072863, 3, 3, 3],"float16"), Tensor([1],"float16"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([181896, 256, 7, 7],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([2, 126761188, 3, 3],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([2, 238609295, 3, 3],"float16"), Tensor([1],"float16"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([2, 3, 126761188, 3],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([2, 3, 238609295, 3],"float16"), Tensor([1],"float16"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([2, 3, 3, 126761188],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([2, 3, 3, 238609295],"float16"), Tensor([1],"float16"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([22737, 128, 28, 28],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([22737, 512, 14, 14],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([45474, 256, 14, 14],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([5, 20, 10, 2281702],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([5, 20, 2281702, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([5, 4563403, 10, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([5685, 128, 56, 56],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([84507459, 3, 3, 3],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([90948, 512, 7, 7],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([95070891, 2, 3, 4],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([95070891, 2, 3, 4],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([95070891, 2, 3, 4],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([95070891, 2, 3, 4],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(x=Tensor([1, 190141782, 3, 4],"float32"), weight=Tensor([1],"float32"), )
paddle.nn.functional.prelu(x=Tensor([1, 2, 285212673, 4],"float32"), weight=Tensor([1],"float32"), )
paddle.nn.functional.prelu(x=Tensor([1, 2, 3, 380283564],"float32"), weight=Tensor([1],"float32"), )
paddle.nn.functional.prelu(x=Tensor([1, 2, 3, 715827883],"float16"), weight=Tensor([1],"float16"), )
paddle.nn.functional.prelu(x=Tensor([1, 2, 536870913, 4],"float16"), weight=Tensor([1],"float16"), )
paddle.nn.functional.prelu(x=Tensor([1, 357913942, 3, 4],"float16"), weight=Tensor([1],"float16"), )
paddle.nn.functional.prelu(x=Tensor([178956971, 2, 3, 4],"float16"), weight=Tensor([1],"float16"), )
paddle.nn.functional.prelu(x=Tensor([95070891, 2, 3, 4],"float32"), weight=Tensor([1],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1, 2281701379],"float32"), )
paddle.nn.functional.relu(Tensor([1, 10, 228170138],"float32"), )
paddle.nn.functional.relu(Tensor([1, 100, 22817014],"float32"), )
paddle.nn.functional.relu(Tensor([1, 10164, 224489],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 10, 222823],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 100, 22283],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 1114113, 2],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 12, 185686],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 123791, 18],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 136, 16385],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 139265, 16],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 14, 159159],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 14, 159159],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 14660, 152],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 148, 15056],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 152, 14660],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 159159, 14],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 159159, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 16, 139265],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 18, 123791],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 2, 1114113],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 22283, 100],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 23211, 96],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 25321, 88],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 35940, 62],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 36, 61896],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 37138, 60],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 40, 55706],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 41264, 54],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 44565, 50],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 61896, 36],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 65537, 34],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 69633, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 85701, 26],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1056344, 40, 54],"float32"), )
paddle.nn.functional.relu(Tensor([1, 11, 207427399],"float32"), )
paddle.nn.functional.relu(Tensor([1, 11, 207427399],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1100, 2074274],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1100, 2074274],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1114113, 2048],"float32"), )
paddle.nn.functional.relu(Tensor([1, 11641334, 14, 14],"float32"), )
paddle.nn.functional.relu(Tensor([1, 11641334, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1267612, 36, 50],"float32"), )
paddle.nn.functional.relu(Tensor([1, 150112, 100, 152],"float32"), )
paddle.nn.functional.relu(Tensor([1, 150112, 152, 100],"float32"), )
paddle.nn.functional.relu(Tensor([1, 160593, 148, 96],"float32"), )
paddle.nn.functional.relu(Tensor([1, 18, 126761188],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 190651, 136, 88],"float32"), )
paddle.nn.functional.relu(Tensor([1, 21, 108652447],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 22, 103713700],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 2281701379],"float32"), )
paddle.nn.functional.relu(Tensor([1, 2281701379],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 285212673, 8],"float32"), )
paddle.nn.functional.relu(Tensor([1, 300, 7605672],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 31690297, 2, 36],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 33554433, 2, 34],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 35651585, 2, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 36828, 61956],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 38367, 59471],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 4456449, 512],"float32"), )
paddle.nn.functional.relu(Tensor([1, 570425345, 2, 2],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 570425345, 4],"float32"), )
paddle.nn.functional.relu(Tensor([1, 5941931, 12, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 61667605, 37],"float32"), )
paddle.nn.functional.relu(Tensor([1, 6380, 357634],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 7042289, 18, 18],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 71303169, 32],"float32"), )
paddle.nn.functional.relu(Tensor([1, 8775775, 10, 26],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 8912897, 16, 16],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 8912897, 256],"float32"), )
paddle.nn.functional.relu(Tensor([1, 8912897, 256],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 920041, 40, 62],"float32"), )
paddle.nn.functional.relu(Tensor([1, 950709, 40, 60],"float32"), )
paddle.nn.functional.relu(Tensor([10, 228170138],"float32"), )
paddle.nn.functional.relu(Tensor([10000, 228171],"float32"), None, )
paddle.nn.functional.relu(Tensor([100000, 22818],"float32"), None, )
paddle.nn.functional.relu(Tensor([101283, 11, 2048],"float32"), )
paddle.nn.functional.relu(Tensor([1013, 1100, 2048],"float32"), )
paddle.nn.functional.relu(Tensor([1032, 1024, 40, 54],"float32"), )
paddle.nn.functional.relu(Tensor([105344, 21660],"float32"), None, )
paddle.nn.functional.relu(Tensor([11369, 1024, 14, 14],"float32"), )
paddle.nn.functional.relu(Tensor([11369, 1024, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([11369, 16, 4, 56, 56],"float32"), )
paddle.nn.functional.relu(Tensor([11369, 512, 2, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([1140850690, 2],"float32"), )
paddle.nn.functional.relu(Tensor([11661, 195670],"float32"), None, )
paddle.nn.functional.relu(Tensor([12, 190141782],"float32"), None, )
paddle.nn.functional.relu(Tensor([1238, 1024, 36, 50],"float32"), )
paddle.nn.functional.relu(Tensor([1398, 6380, 256],"float32"), None, )
paddle.nn.functional.relu(Tensor([1422, 128, 4, 56, 56],"float32"), )
paddle.nn.functional.relu(Tensor([1422, 16, 32, 56, 56],"float32"), )
paddle.nn.functional.relu(Tensor([142606337, 16],"float32"), )
paddle.nn.functional.relu(Tensor([147, 1024, 100, 152],"float32"), )
paddle.nn.functional.relu(Tensor([147, 1024, 152, 100],"float32"), )
paddle.nn.functional.relu(Tensor([157, 1024, 148, 96],"float32"), )
paddle.nn.functional.relu(Tensor([17825793, 128],"float32"), )
paddle.nn.functional.relu(Tensor([17825793, 128],"float32"), None, )
paddle.nn.functional.relu(Tensor([187, 1024, 136, 88],"float32"), )
paddle.nn.functional.relu(Tensor([22737, 2048, 1, 7, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([2281701379, 1],"float32"), )
paddle.nn.functional.relu(Tensor([2281701379],"float32"), )
paddle.nn.functional.relu(Tensor([228170138, 10],"float32"), )
paddle.nn.functional.relu(Tensor([233, 38367, 256],"float32"), None, )
paddle.nn.functional.relu(Tensor([243, 36828, 256],"float32"), None, )
paddle.nn.functional.relu(Tensor([25928425, 11, 8],"float32"), )
paddle.nn.functional.relu(Tensor([2843, 1024, 4, 14, 14],"float32"), )
paddle.nn.functional.relu(Tensor([2843, 128, 32, 14, 14],"float32"), )
paddle.nn.functional.relu(Tensor([2843, 256, 4, 28, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([29710, 300, 256],"float32"), None, )
paddle.nn.functional.relu(Tensor([30948, 1024, 2, 36],"float32"), None, )
paddle.nn.functional.relu(Tensor([32769, 1024, 2, 34],"float32"), None, )
paddle.nn.functional.relu(Tensor([34817, 1024, 2, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([356, 256, 8, 56, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([35651585, 64],"float32"), )
paddle.nn.functional.relu(Tensor([35651585, 64],"float32"), None, )
paddle.nn.functional.relu(Tensor([405132, 11, 512],"float32"), )
paddle.nn.functional.relu(Tensor([405132, 22, 256],"float32"), None, )
paddle.nn.functional.relu(Tensor([424424, 21, 256],"float32"), None, )
paddle.nn.functional.relu(Tensor([446, 512, 1, 100, 100],"float32"), None, )
paddle.nn.functional.relu(Tensor([45474, 1024, 1, 7, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([4664, 39, 14, 14, 64],"float32"), None, )
paddle.nn.functional.relu(Tensor([495161, 18, 256],"float32"), None, )
paddle.nn.functional.relu(Tensor([50, 3638, 14, 14, 64],"float32"), None, )
paddle.nn.functional.relu(Tensor([50, 39, 1306, 14, 64],"float32"), None, )
paddle.nn.functional.relu(Tensor([50, 39, 14, 1306, 64],"float32"), None, )
paddle.nn.functional.relu(Tensor([50, 39, 14, 14, 5970],"float32"), None, )
paddle.nn.functional.relu(Tensor([557057, 1024, 2, 2],"float32"), None, )
paddle.nn.functional.relu(Tensor([557057, 4096],"float32"), None, )
paddle.nn.functional.relu(Tensor([5685, 1024, 2, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([5685, 128, 4, 28, 28],"float32"), )
paddle.nn.functional.relu(Tensor([5685, 16, 32, 28, 28],"float32"), )
paddle.nn.functional.relu(Tensor([5685, 2048, 4, 7, 7],"float32"), )
paddle.nn.functional.relu(Tensor([5685, 256, 32, 7, 7],"float32"), )
paddle.nn.functional.relu(Tensor([570425345, 1, 4],"float32"), )
paddle.nn.functional.relu(Tensor([57042535, 40],"float32"), None, )
paddle.nn.functional.relu(Tensor([5803, 1024, 12, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([61667605, 1, 37],"float32"), )
paddle.nn.functional.relu(Tensor([6166761, 10, 37],"float32"), )
paddle.nn.functional.relu(Tensor([6878, 1024, 18, 18],"float32"), None, )
paddle.nn.functional.relu(Tensor([711, 128, 8, 56, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([71303169, 32],"float32"), )
paddle.nn.functional.relu(Tensor([71303169, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([713032, 100, 32],"float32"), )
paddle.nn.functional.relu(Tensor([760567127, 3],"float32"), )
paddle.nn.functional.relu(Tensor([8, 1024, 1, 39790, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 1024, 1, 7, 39790],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 1024, 1422, 14, 14],"float32"), )
paddle.nn.functional.relu(Tensor([8, 1024, 1422, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 1024, 2, 14, 9948],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 1024, 2, 9948, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 1024, 4, 14, 4974],"float32"), )
paddle.nn.functional.relu(Tensor([8, 1024, 4, 4974, 14],"float32"), )
paddle.nn.functional.relu(Tensor([8, 1024, 5685, 7, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 11369, 32, 28, 28],"float32"), )
paddle.nn.functional.relu(Tensor([8, 11369, 8, 56, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 128, 11369, 14, 14],"float32"), )
paddle.nn.functional.relu(Tensor([8, 128, 2843, 28, 28],"float32"), )
paddle.nn.functional.relu(Tensor([8, 128, 32, 14, 4974],"float32"), )
paddle.nn.functional.relu(Tensor([8, 128, 32, 4974, 14],"float32"), )
paddle.nn.functional.relu(Tensor([8, 128, 4, 19895, 28],"float32"), )
paddle.nn.functional.relu(Tensor([8, 128, 4, 28, 19895],"float32"), )
paddle.nn.functional.relu(Tensor([8, 128, 4, 56, 9948],"float32"), )
paddle.nn.functional.relu(Tensor([8, 128, 4, 9948, 56],"float32"), )
paddle.nn.functional.relu(Tensor([8, 128, 711, 56, 56],"float32"), )
paddle.nn.functional.relu(Tensor([8, 128, 711, 56, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 128, 8, 4974, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 128, 8, 56, 4974],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 1455167, 4, 7, 7],"float32"), )
paddle.nn.functional.relu(Tensor([8, 16, 22737, 28, 28],"float32"), )
paddle.nn.functional.relu(Tensor([8, 16, 32, 19895, 28],"float32"), )
paddle.nn.functional.relu(Tensor([8, 16, 32, 28, 19895],"float32"), )
paddle.nn.functional.relu(Tensor([8, 16, 32, 56, 9948],"float32"), )
paddle.nn.functional.relu(Tensor([8, 16, 32, 9948, 56],"float32"), )
paddle.nn.functional.relu(Tensor([8, 16, 4, 56, 79580],"float32"), )
paddle.nn.functional.relu(Tensor([8, 16, 4, 79580, 56],"float32"), )
paddle.nn.functional.relu(Tensor([8, 16, 5685, 56, 56],"float32"), )
paddle.nn.functional.relu(Tensor([8, 181896, 32, 7, 7],"float32"), )
paddle.nn.functional.relu(Tensor([8, 2048, 1, 19895, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 2048, 1, 7, 19895],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 2048, 2843, 7, 7],"float32"), )
paddle.nn.functional.relu(Tensor([8, 2048, 2843, 7, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 2048, 4, 4974, 7],"float32"), )
paddle.nn.functional.relu(Tensor([8, 2048, 4, 7, 4974],"float32"), )
paddle.nn.functional.relu(Tensor([8, 22737, 4, 56, 56],"float32"), )
paddle.nn.functional.relu(Tensor([8, 256, 1422, 28, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 22737, 7, 7],"float32"), )
paddle.nn.functional.relu(Tensor([8, 256, 32, 4974, 7],"float32"), )
paddle.nn.functional.relu(Tensor([8, 256, 32, 7, 4974],"float32"), )
paddle.nn.functional.relu(Tensor([8, 256, 356, 56, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 4, 28, 9948],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 4, 9948, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 8, 2487, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 8, 56, 2487],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 2843, 32, 56, 56],"float32"), )
paddle.nn.functional.relu(Tensor([8, 28522, 1, 100, 100],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 363792, 4, 14, 14],"float32"), )
paddle.nn.functional.relu(Tensor([8, 45474, 32, 14, 14],"float32"), )
paddle.nn.functional.relu(Tensor([8, 512, 1, 100, 5571],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 512, 1, 5571, 100],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 512, 2, 14, 19895],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 512, 2, 19895, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 512, 2843, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 512, 56, 100, 100],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 5820667, 1, 7, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 727584, 2, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 90948, 4, 28, 28],"float32"), )
paddle.nn.functional.relu(Tensor([8, 90948, 4, 28, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([810264, 11, 256],"float32"), None, )
paddle.nn.functional.relu(Tensor([8103, 1100, 256],"float32"), None, )
paddle.nn.functional.relu(Tensor([8571, 1024, 10, 26],"float32"), None, )
paddle.nn.functional.relu(Tensor([8705, 1024, 16, 16],"float32"), None, )
paddle.nn.functional.relu(Tensor([877, 10164, 256],"float32"), )
paddle.nn.functional.relu(Tensor([899, 1024, 40, 62],"float32"), )
paddle.nn.functional.relu(Tensor([929, 1024, 40, 60],"float32"), )
paddle.nn.functional.relu(x=Tensor([10, 10, 42949673],"float16"), )
paddle.nn.functional.relu(x=Tensor([10, 42949673, 10],"float16"), )
paddle.nn.functional.relu(x=Tensor([100, 128, 3, 59420],"float32"), )
paddle.nn.functional.relu(x=Tensor([100, 128, 59420, 3],"float32"), )
paddle.nn.functional.relu(x=Tensor([100, 178258, 128],"float32"), )
paddle.nn.functional.relu(x=Tensor([100, 2535224, 3, 3],"float32"), )
paddle.nn.functional.relu(x=Tensor([100, 356516, 64],"float32"), )
paddle.nn.functional.relu(x=Tensor([100, 38, 600448],"float32"), )
paddle.nn.functional.relu(x=Tensor([100, 44565, 512],"float32"), )
paddle.nn.functional.relu(x=Tensor([100, 512, 2, 22283],"float32"), )
paddle.nn.functional.relu(x=Tensor([100, 512, 22283, 2],"float32"), )
paddle.nn.functional.relu(x=Tensor([100, 5704254, 2, 2],"float32"), )
paddle.nn.functional.relu(x=Tensor([100, 89129, 256],"float32"), )
paddle.nn.functional.relu(x=Tensor([100, 9, 2535224],"float32"), )
paddle.nn.functional.relu(x=Tensor([1114113, 512, 2, 2],"float32"), )
paddle.nn.functional.relu(x=Tensor([117275, 38, 512],"float32"), )
paddle.nn.functional.relu(x=Tensor([1980644, 128, 3, 3],"float32"), )
paddle.nn.functional.relu(x=Tensor([1980644, 9, 128],"float32"), )
paddle.nn.functional.relu(x=Tensor([227, 1116839, 3, 3],"float32"), )
paddle.nn.functional.relu(x=Tensor([227, 128, 26176, 3],"float32"), )
paddle.nn.functional.relu(x=Tensor([227, 128, 3, 26176],"float32"), )
paddle.nn.functional.relu(x=Tensor([227, 157056, 64],"float32"), )
paddle.nn.functional.relu(x=Tensor([227, 78528, 128],"float32"), )
paddle.nn.functional.relu(x=Tensor([227, 9, 1116839],"float32"), )
paddle.nn.functional.relu(x=Tensor([234550, 38, 256],"float32"), )
paddle.nn.functional.relu(x=Tensor([256, 128, 23211, 3],"float32"), )
paddle.nn.functional.relu(x=Tensor([256, 128, 3, 23211],"float32"), )
paddle.nn.functional.relu(x=Tensor([256, 2228225, 2, 2],"float32"), )
paddle.nn.functional.relu(x=Tensor([256, 34817, 256],"float32"), )
paddle.nn.functional.relu(x=Tensor([256, 38, 234550],"float32"), )
paddle.nn.functional.relu(x=Tensor([256, 512, 2, 8705],"float32"), )
paddle.nn.functional.relu(x=Tensor([256, 512, 8705, 2],"float32"), )
paddle.nn.functional.relu(x=Tensor([256, 990322, 3, 3],"float32"), )
paddle.nn.functional.relu(x=Tensor([32, 15, 18569, 8, 32],"float32"), )
paddle.nn.functional.relu(x=Tensor([32, 15, 8, 18569, 32],"float32"), )
paddle.nn.functional.relu(x=Tensor([32, 15, 8, 8, 74275],"float32"), )
paddle.nn.functional.relu(x=Tensor([32, 34817, 8, 8, 32],"float32"), )
paddle.nn.functional.relu(x=Tensor([3961288, 9, 64],"float32"), )
paddle.nn.functional.relu(x=Tensor([42949673, 10, 10],"float16"), )
paddle.nn.functional.relu(x=Tensor([56, 10186167, 2, 2],"float32"), )
paddle.nn.functional.relu(x=Tensor([56, 512, 2, 39790],"float32"), )
paddle.nn.functional.relu(x=Tensor([56, 512, 39790, 2],"float32"), )
paddle.nn.functional.relu(x=Tensor([74275, 15, 8, 8, 32],"float32"), )
paddle.nn.functional.relu(x=Tensor([82, 128, 3, 72463],"float32"), )
paddle.nn.functional.relu(x=Tensor([82, 128, 72463, 3],"float32"), )
paddle.nn.functional.relu(x=Tensor([82, 3091737, 3, 3],"float32"), )
paddle.nn.functional.relu(x=Tensor([87, 512, 2, 25612],"float32"), )
paddle.nn.functional.relu(x=Tensor([87, 512, 25612, 2],"float32"), )
paddle.nn.functional.relu(x=Tensor([87, 6556614, 2, 2],"float32"), )
paddle.nn.functional.relu(x=Tensor([938200, 38, 64],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 11641334, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 11641334, 14, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 1280, 254655, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 1280, 254655, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 1280, 7, 254655],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 1280, 7, 254655],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 144, 28, 565899],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 144, 28, 565899],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 144, 282950, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 144, 282950, 56],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 144, 56, 282950],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 144, 56, 282950],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 144, 565899, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 144, 565899, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 181896, 112, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 181896, 112, 112],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 192, 14, 848848],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 192, 14, 848848],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 192, 28, 424424],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 192, 28, 424424],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 192, 424424, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 192, 424424, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 192, 848848, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 192, 848848, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 2910334, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 2910334, 28, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 32, 112, 636636],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 32, 112, 636636],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 32, 636636, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 32, 636636, 112],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 384, 14, 424424],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 384, 14, 424424],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 384, 424424, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 384, 424424, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 46565335, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 46565335, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 576, 14, 282950],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 576, 14, 282950],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 576, 282950, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 576, 282950, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 576, 565899, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 576, 565899, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 576, 7, 565899],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 576, 7, 565899],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 727584, 56, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 727584, 56, 56],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 96, 112, 212212],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 96, 112, 212212],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 96, 212212, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 96, 212212, 112],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 96, 424424, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 96, 424424, 56],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 96, 56, 424424],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 96, 56, 424424],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 960, 339539, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 960, 339539, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 960, 7, 339539],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 960, 7, 339539],"float32"), None, )
paddle.nn.functional.relu6(Tensor([10106, 1152, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([11369, 256, 28, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 1024, 2568, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 1024, 7, 2568],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 128, 2568, 56],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 128, 56, 2568],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 1467, 112, 112],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 192, 28, 3423],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 192, 3423, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 23471, 28, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 256, 2568, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 256, 28, 2568],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 32, 112, 5135],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 32, 5135, 112],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 375527, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 384, 14, 3423],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 384, 3423, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 512, 14, 2568],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 512, 2568, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 5868, 56, 56],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 93882, 14, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1264, 144, 112, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 1152, 1106, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 1152, 14, 1106],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 1152, 2211, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 1152, 7, 2211],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 1280, 1990, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 1280, 7, 1990],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 1422, 112, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 144, 1106, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 144, 112, 1106],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 144, 2211, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 144, 28, 4422],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 144, 4422, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 144, 56, 2211],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 1440, 1769, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 1440, 7, 1769],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 22737, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 363792, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 5685, 56, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 90948, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([15158, 192, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([15158, 192, 28, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1895, 96, 112, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([1895, 96, 112, 112],"float32"), None, )
paddle.nn.functional.relu6(Tensor([2, 300, 3802836],"float32"), )
paddle.nn.functional.relu6(Tensor([2, 557057, 2048],"float32"), )
paddle.nn.functional.relu6(Tensor([20211, 144, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([20211, 144, 28, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([20211, 576, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([20211, 576, 14, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([22737, 512, 14, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([2281701379],"float32"), None, )
paddle.nn.functional.relu6(Tensor([3, 3, 477218589],"float16"), None, )
paddle.nn.functional.relu6(Tensor([3, 477218589, 3],"float16"), None, )
paddle.nn.functional.relu6(Tensor([30316, 384, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([30316, 384, 14, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([32338, 1440, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([36380, 1280, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([36380, 1280, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([3714, 300, 2048],"float32"), )
paddle.nn.functional.relu6(Tensor([40422, 1152, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([4294967297],"float16"), None, )
paddle.nn.functional.relu6(Tensor([4456449, 16, 32],"float32"), None, )
paddle.nn.functional.relu6(Tensor([45474, 1024, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([477218589, 3, 3],"float16"), None, )
paddle.nn.functional.relu6(Tensor([48506, 960, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([48506, 960, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([5053, 144, 56, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([5053, 144, 56, 56],"float32"), None, )
paddle.nn.functional.relu6(Tensor([5685, 128, 56, 56],"float32"), None, )
paddle.nn.functional.relu6(Tensor([5685, 32, 112, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([5685, 32, 112, 112],"float32"), None, )
paddle.nn.functional.relu6(Tensor([60632, 192, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([60632, 192, 14, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([7579, 96, 56, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([7579, 96, 56, 56],"float32"), None, )
paddle.nn.functional.relu6(Tensor([8, 16, 17825793],"float32"), None, )
paddle.nn.functional.relu6(Tensor([8, 8912897, 32],"float32"), None, )
paddle.nn.functional.relu6(Tensor([80843, 576, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([80843, 576, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(x=Tensor([2281701379],"float32"), )
paddle.nn.functional.relu6(x=Tensor([3, 3, 477218589],"float16"), )
paddle.nn.functional.relu6(x=Tensor([3, 477218589, 3],"float16"), )
paddle.nn.functional.relu6(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.relu6(x=Tensor([477218589, 3, 3],"float16"), )
paddle.nn.functional.rrelu(Tensor([1, 2, 3, 715827883],"float16"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 2, 3, 715827883],"float16"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 2, 536870913, 4],"float16"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 2, 536870913, 4],"float16"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 357913942, 3, 4],"float16"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 357913942, 3, 4],"float16"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([178956971, 2, 3, 4],"float16"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([178956971, 2, 3, 4],"float16"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 107374183, 4, 5],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 107374183, 4, 5],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 143165577, 5],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 143165577, 5],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 178956971],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 178956971],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 95070891],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 95070891],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 76056713, 5],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 76056713, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 57042535, 4, 5],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 57042535, 4, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([38028357, 3, 4, 5],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([38028357, 3, 4, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([71582789, 3, 4, 5],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([71582789, 3, 4, 5],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.selu(Tensor([1140850690, 2],"float32"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([17179870, 5, 5, 10],"float16"), 1.5, 2.0, )
paddle.nn.functional.selu(Tensor([17179870, 5, 5, 10],"float16"), 1.5, 2.0, None, )
paddle.nn.functional.selu(Tensor([2, 1140850690],"float32"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([2, 2147483649],"float16"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([2147483649, 2],"float16"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([3, 28633116, 5, 10],"float16"), 1.5, 2.0, )
paddle.nn.functional.selu(Tensor([3, 28633116, 5, 10],"float16"), 1.5, 2.0, None, )
paddle.nn.functional.selu(Tensor([3, 3, 477218589],"float16"), 1.0507009873554805, 0, None, )
paddle.nn.functional.selu(Tensor([3, 3, 477218589],"float16"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([3, 477218589, 3],"float16"), 1.0507009873554805, 0, None, )
paddle.nn.functional.selu(Tensor([3, 477218589, 3],"float16"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([3, 5, 28633116, 10],"float16"), 1.5, 2.0, )
paddle.nn.functional.selu(Tensor([3, 5, 28633116, 10],"float16"), 1.5, 2.0, None, )
paddle.nn.functional.selu(Tensor([3, 5, 5, 57266231],"float16"), 1.5, 2.0, )
paddle.nn.functional.selu(Tensor([3, 5, 5, 57266231],"float16"), 1.5, 2.0, None, )
paddle.nn.functional.selu(Tensor([477218589, 3, 3],"float16"), 1.0507009873554805, 0, None, )
paddle.nn.functional.selu(Tensor([477218589, 3, 3],"float16"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(x=Tensor([1140850690, 2],"float32"), )
paddle.nn.functional.selu(x=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.selu(x=Tensor([2, 2147483649],"float16"), )
paddle.nn.functional.selu(x=Tensor([2147483649, 2],"float16"), )
paddle.nn.functional.selu(x=Tensor([3, 3, 477218589],"float16"), )
paddle.nn.functional.selu(x=Tensor([3, 3, 477218589],"float16"), alpha=0, scale=1.0507009873554805, )
paddle.nn.functional.selu(x=Tensor([3, 477218589, 3],"float16"), )
paddle.nn.functional.selu(x=Tensor([3, 477218589, 3],"float16"), alpha=0, scale=1.0507009873554805, )
paddle.nn.functional.selu(x=Tensor([477218589, 3, 3],"float16"), )
paddle.nn.functional.selu(x=Tensor([477218589, 3, 3],"float16"), alpha=0, scale=1.0507009873554805, )
paddle.nn.functional.sequence_mask(Tensor([2, 1140850690],"int64"), maxlen=-1, dtype=VarType(int64), )
paddle.nn.functional.sequence_mask(Tensor([760567127, 3],"int64"), maxlen=-1, dtype=VarType(int64), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 10, 228170138],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 108652447, 21],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 11, 207427399],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 114085069, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 120089547, 19],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 126761188, 18],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 13, 175515491],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 134217729, 17],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 14, 162978670],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 142606337, 16],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 15, 152113426],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 152113426, 15],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 16, 142606337],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 162978670, 14],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 17, 134217729],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 175515491, 13],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 18, 126761188],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 19, 120089547],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 20, 114085069],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 207427399, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 21, 108652447],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 228170138, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 100, 22817014],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10140896, 15, 15],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 11, 207427399],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1100, 2074274],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1140850690, 2],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 11641334, 14, 14],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 13501192, 13, 13],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 18, 126761188],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 18857037, 11, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 192, 11883862],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 196, 11641334],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 200, 11408507],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 207427399, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 21, 108652447],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 22, 103713700],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 226, 10096024],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 2281701379],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 22817014, 10, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 3, 5, 2, 76056713],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 3, 5, 38028357, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 3, 95070891, 2, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 4294967297],"float16"), )
paddle.nn.functional.sigmoid(Tensor([1, 5173927, 21, 21],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 570425345, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 57042535, 5, 2, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 5704254, 20, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 61667605, 37],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 6320503, 19, 19],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 7042289, 18, 18],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 7895161, 17, 17],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 8912897, 16, 16],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10, 228170138],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([10, 499, 457255],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([10, 57042535, 4],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([10140896, 1, 15, 15],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10186167, 224, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([1037137, 200, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1058304, 196, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1080352, 192, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1114113, 2048],"float32"), )
paddle.nn.functional.sigmoid(Tensor([11408507, 100, 2],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1143137, 499, 4],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([11641334, 1, 14, 14],"float32"), )
paddle.nn.functional.sigmoid(Tensor([11883862, 192, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([12, 118839, 40, 40, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 1901418, 10, 10, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 3, 10, 6338060, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 3, 1584515, 40, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 3, 20, 20, 158452],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 3, 20, 3169030, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 3, 3169030, 20, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 3, 40, 1584515, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 3, 6338060, 10, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 475355, 20, 20, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([128, 1024, 1, 17409],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 1024, 17409, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 17825793, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 224, 1, 79580],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 224, 79580, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 256, 1, 69633],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 256, 69633, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 448, 1, 39790],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 448, 39790, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 512, 1, 34817],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 512, 34817, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 768, 1, 23211],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 768, 23211, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([13, 175515491],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([134217729, 32],"float16"), )
paddle.nn.functional.sigmoid(Tensor([13501192, 1, 13, 13],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1426064, 1, 40, 40],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([1431655766, 3],"float16"), )
paddle.nn.functional.sigmoid(Tensor([152113426, 15],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([154, 14816243, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([154, 192, 1, 77168],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([154, 192, 77168, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([154, 256, 1, 57876],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([154, 256, 57876, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([154, 384, 1, 38584],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([154, 384, 38584, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([154, 512, 1, 28938],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([154, 512, 28938, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([15474, 147456],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 1, 3565159, 40],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([16, 1, 40, 3565159],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([16, 142606337],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([16, 89129, 40, 40],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([16849, 135424],"float32"), )
paddle.nn.functional.sigmoid(Tensor([181896, 12544],"float32"), )
paddle.nn.functional.sigmoid(Tensor([18416, 123904],"float32"), )
paddle.nn.functional.sigmoid(Tensor([18857037, 1, 11, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([19014179, 3, 5, 2, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1901418, 3, 20, 20, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 11408507, 10, 10, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 10, 10, 3802836],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 10, 38028357, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 11, 11, 3142840],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 11, 34571234, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 12, 12, 2640859],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 12, 31690297, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 13, 13, 2250199],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 13, 29252582, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 14, 14, 1940223],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 14, 27163112, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 15, 15, 1690150],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 15, 25352238, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 16, 16, 1485483],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 16, 23767723, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 23767723, 16, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 25352238, 15, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 27163112, 14, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 29252582, 13, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 31690297, 12, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 34571234, 11, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 38028357, 10, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 4456449, 16, 16, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 5070448, 15, 15, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 5820667, 14, 14, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 6750596, 13, 13, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 7922575, 12, 12, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 9428519, 11, 11, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2228225, 1024, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([2228225, 1024],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2281701379],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2281701379],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([228170138, 10],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([22817014, 1, 10, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([22817014, 1, 100],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([24, 95070891],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([25928425, 22, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([27163112, 21, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([272866, 226, 37],"float32"), )
paddle.nn.functional.sigmoid(Tensor([285212673, 8],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([2852127, 200, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2970966, 3, 16, 16, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2970966, 768, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([31690297, 18, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([325957340, 7],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([3380299, 3, 15, 15, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([3880445, 3, 14, 14, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 570425345],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([4294967297],"float16"), )
paddle.nn.functional.sigmoid(Tensor([4294967297],"float16"), None, )
paddle.nn.functional.sigmoid(Tensor([4456449, 512, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([4500398, 3, 13, 13, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([475355, 3, 40, 40, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([5093084, 448, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([5173927, 1, 21, 21],"float32"), )
paddle.nn.functional.sigmoid(Tensor([51856850, 11, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([518569, 1100, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([5281717, 3, 12, 12, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([570425345, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([5704254, 1, 20, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([5941931, 384, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([6285679, 3, 11, 11, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([6320503, 1, 19, 19],"float32"), )
paddle.nn.functional.sigmoid(Tensor([7042289, 1, 18, 18],"float32"), )
paddle.nn.functional.sigmoid(Tensor([760567127, 3],"float32"), )
paddle.nn.functional.sigmoid(Tensor([7605672, 3, 10, 10, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([7895161, 1, 17, 17],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 1, 285212673],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([8, 285212673],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([8, 2852127, 100],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([8912897, 1, 16, 16],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8912897, 256, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([8912897, 256],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([100, 18, 3, 422538],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([100, 18, 422538, 3],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([100, 2281702, 10],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([100, 2535224, 3, 3],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([100, 38, 600448],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([100, 4563403, 5],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([100, 5704254, 2, 2],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([100, 722, 15802, 2],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([100, 722, 2, 15802],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([100, 9, 2535224],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([14084577, 18, 3, 3],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([227, 1116839, 3, 3],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([227, 18, 186140, 3],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([227, 18, 3, 186140],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([227, 2010310, 5],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([227, 9, 1116839],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([2281701379],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([256, 1782580, 5],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([256, 18, 165054, 3],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([256, 18, 3, 165054],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([256, 2228225, 2, 2],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([256, 38, 234550],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([256, 722, 2, 6173],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([256, 722, 6173, 2],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([256, 891290, 10],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([256, 9, 990322],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([256, 990322, 3, 3],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.sigmoid(x=Tensor([50704476, 9, 5],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([56, 10186167, 2, 2],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([56, 38, 1072229],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([56, 4074467, 10],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([56, 722, 2, 28217],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([56, 722, 28217, 2],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([6004478, 38, 10],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([790063, 722, 2, 2],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([82, 18, 3, 515290],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([82, 18, 515290, 3],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([82, 3091737, 3, 3],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([82, 5565126, 5],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([82, 9, 3091737],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([87, 2622646, 10],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([87, 38, 690170],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([87, 6556614, 2, 2],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([87, 722, 18163, 2],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([87, 722, 2, 18163],"float32"), )
paddle.nn.functional.silu(Tensor([1, 1, 2281701379],"float32"), )
paddle.nn.functional.silu(Tensor([1, 1078309, 46, 46],"float32"), )
paddle.nn.functional.silu(Tensor([1, 11, 207427399],"float32"), )
paddle.nn.functional.silu(Tensor([1, 1178565, 44, 44],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 185686, 96],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 193759, 92],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 23, 775035],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 24, 742742],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 371371, 48],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 387518, 46],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 46, 387518],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 48, 371371],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 742742, 24],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 775035, 23],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 92, 193759],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 96, 185686],"float32"), )
paddle.nn.functional.silu(Tensor([1, 1426064, 40, 40],"float32"), )
paddle.nn.functional.silu(Tensor([1, 159159, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([1, 166597, 13696],"float32"), )
paddle.nn.functional.silu(Tensor([1, 1760573, 36, 36],"float32"), )
paddle.nn.functional.silu(Tensor([1, 2, 1140850690],"float32"), )
paddle.nn.functional.silu(Tensor([1, 2281701379],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 247581, 96, 96],"float32"), )
paddle.nn.functional.silu(Tensor([1, 256, 193759, 46],"float32"), )
paddle.nn.functional.silu(Tensor([1, 256, 23, 387518],"float32"), )
paddle.nn.functional.silu(Tensor([1, 256, 387518, 23],"float32"), )
paddle.nn.functional.silu(Tensor([1, 256, 46, 193759],"float32"), )
paddle.nn.functional.silu(Tensor([1, 256, 92, 96880],"float32"), )
paddle.nn.functional.silu(Tensor([1, 256, 96880, 92],"float32"), )
paddle.nn.functional.silu(Tensor([1, 257, 8878216],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 269578, 92, 92],"float32"), )
paddle.nn.functional.silu(Tensor([1, 285212673, 8],"float32"), )
paddle.nn.functional.silu(Tensor([1, 310, 7360328],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 356516, 80, 80],"float32"), )
paddle.nn.functional.silu(Tensor([1, 384, 129173, 46],"float32"), )
paddle.nn.functional.silu(Tensor([1, 384, 23, 258345],"float32"), )
paddle.nn.functional.silu(Tensor([1, 384, 258345, 23],"float32"), )
paddle.nn.functional.silu(Tensor([1, 384, 46, 129173],"float32"), )
paddle.nn.functional.silu(Tensor([1, 384, 64587, 92],"float32"), )
paddle.nn.functional.silu(Tensor([1, 384, 92, 64587],"float32"), )
paddle.nn.functional.silu(Tensor([1, 3961288, 24, 24],"float32"), )
paddle.nn.functional.silu(Tensor([1, 4, 570425345],"float32"), )
paddle.nn.functional.silu(Tensor([1, 4313236, 23, 23],"float32"), )
paddle.nn.functional.silu(Tensor([1, 440144, 72, 72],"float32"), )
paddle.nn.functional.silu(Tensor([1, 4456449, 512],"float32"), )
paddle.nn.functional.silu(Tensor([1, 4456449, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 4714260, 22, 22],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 101283, 44],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 111412, 40],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 123791, 36],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 18, 247581],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 20, 222823],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 202566, 22],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 22, 202566],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 222823, 20],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 247581, 18],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 36, 123791],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 40, 111412],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 44, 101283],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 55706, 80],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 61896, 72],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 72, 61896],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 80, 55706],"float32"), )
paddle.nn.functional.silu(Tensor([1, 5704254, 20, 20],"float32"), )
paddle.nn.functional.silu(Tensor([1, 6, 380283564],"float32"), )
paddle.nn.functional.silu(Tensor([1, 7042289, 18, 18],"float32"), )
paddle.nn.functional.silu(Tensor([1, 835789, 2730],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 990322, 48, 48],"float32"), )
paddle.nn.functional.silu(Tensor([10, 2, 114085069],"float32"), )
paddle.nn.functional.silu(Tensor([10, 228170138],"float32"), )
paddle.nn.functional.silu(Tensor([10, 228170138],"float32"), None, )
paddle.nn.functional.silu(Tensor([10, 28521268, 8],"float32"), )
paddle.nn.functional.silu(Tensor([100, 22817014],"float32"), )
paddle.nn.functional.silu(Tensor([1000, 2281702],"float32"), None, )
paddle.nn.functional.silu(Tensor([1024, 2228225],"float32"), None, )
paddle.nn.functional.silu(Tensor([1054, 256, 92, 92],"float32"), )
paddle.nn.functional.silu(Tensor([1089, 128, 128, 128],"float32"), None, )
paddle.nn.functional.silu(Tensor([11, 207427399],"float32"), )
paddle.nn.functional.silu(Tensor([1100, 2074274],"float32"), None, )
paddle.nn.functional.silu(Tensor([11142, 512, 20, 20],"float32"), )
paddle.nn.functional.silu(Tensor([11142, 512, 20, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([11233, 384, 23, 23],"float32"), )
paddle.nn.functional.silu(Tensor([114085069, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([12, 190141782],"float32"), )
paddle.nn.functional.silu(Tensor([1228, 32, 58081],"float32"), )
paddle.nn.functional.silu(Tensor([128, 1089, 128, 128],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 128, 1089, 128],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 128, 128, 1089],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 128, 16, 8705],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 128, 2177, 64],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 128, 64, 2177],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 128, 8705, 16],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 16, 128, 8705],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 16, 8705, 128],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 160, 13927, 8],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 160, 8, 13927],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 17409, 32, 32],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 17825793],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 256, 1089, 64],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 256, 2177, 32],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 256, 32, 2177],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 256, 64, 1089],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 278529, 8, 8],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 34817, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 384, 1451, 32],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 384, 16, 2902],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 384, 2902, 16],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 384, 32, 1451],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 4353, 64, 64],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 512, 16, 2177],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 512, 2177, 16],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 512, 4353, 8],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 512, 8, 4353],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 577, 30894],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 64, 128, 2177],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 64, 2177, 128],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 640, 3482, 8],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 640, 8, 3482],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 69633, 16, 16],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 96, 32, 5803],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 96, 5803, 32],"float32"), None, )
paddle.nn.functional.silu(Tensor([13, 4743662, 37],"float32"), )
paddle.nn.functional.silu(Tensor([13, 7, 25073642],"float32"), )
paddle.nn.functional.silu(Tensor([13, 868889, 202],"float32"), )
paddle.nn.functional.silu(Tensor([13, 9, 19501722],"float32"), )
paddle.nn.functional.silu(Tensor([1300, 1755155],"float32"), None, )
paddle.nn.functional.silu(Tensor([13755, 512, 18, 18],"float32"), )
paddle.nn.functional.silu(Tensor([1393, 256, 80, 80],"float32"), None, )
paddle.nn.functional.silu(Tensor([14, 23282668, 7],"float32"), )
paddle.nn.functional.silu(Tensor([14, 64, 2546542],"float32"), )
paddle.nn.functional.silu(Tensor([142606337, 2, 8],"float32"), )
paddle.nn.functional.silu(Tensor([14376, 310, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([159159, 1, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([159159, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([15916, 10, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([16, 1024, 20, 6964],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 1024, 6964, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 128, 13927, 80],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 128, 160, 6964],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 128, 6964, 160],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 128, 80, 13927],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 22283, 80, 80],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 256, 13927, 40],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 256, 40, 13927],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 256, 6964, 80],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 256, 80, 6964],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 356516, 20, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 512, 13927, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 512, 20, 13927],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 5571, 160, 160],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 89129, 40, 40],"float32"), None, )
paddle.nn.functional.silu(Tensor([1613651, 7, 202],"float32"), )
paddle.nn.functional.silu(Tensor([166597, 1, 13696],"float32"), )
paddle.nn.functional.silu(Tensor([16849, 256, 23, 23],"float32"), )
paddle.nn.functional.silu(Tensor([17341, 257, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([17409, 512, 16, 16],"float32"), None, )
paddle.nn.functional.silu(Tensor([1935, 128, 96, 96],"float32"), )
paddle.nn.functional.silu(Tensor([2, 1, 1140850690],"float32"), )
paddle.nn.functional.silu(Tensor([2, 10, 114085069],"float32"), )
paddle.nn.functional.silu(Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.silu(Tensor([2, 2228225, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([2, 257, 4439108],"float32"), None, )
paddle.nn.functional.silu(Tensor([2, 300, 3802836],"float32"), )
paddle.nn.functional.silu(Tensor([2, 5, 228170138],"float32"), )
paddle.nn.functional.silu(Tensor([2, 557057, 2048],"float32"), )
paddle.nn.functional.silu(Tensor([2, 6, 190141782],"float32"), )
paddle.nn.functional.silu(Tensor([2, 79580, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([20, 1, 114085069],"float32"), )
paddle.nn.functional.silu(Tensor([20, 8330, 13696],"float32"), )
paddle.nn.functional.silu(Tensor([2000, 1140851],"float32"), None, )
paddle.nn.functional.silu(Tensor([2048, 1114113],"float32"), None, )
paddle.nn.functional.silu(Tensor([2107, 128, 92, 92],"float32"), )
paddle.nn.functional.silu(Tensor([2177, 256, 64, 64],"float32"), None, )
paddle.nn.functional.silu(Tensor([2177, 64, 128, 128],"float32"), None, )
paddle.nn.functional.silu(Tensor([222823, 160, 8, 8],"float32"), None, )
paddle.nn.functional.silu(Tensor([22591103, 101],"float32"), )
paddle.nn.functional.silu(Tensor([2281701379],"float32"), )
paddle.nn.functional.silu(Tensor([228170138, 10],"float32"), None, )
paddle.nn.functional.silu(Tensor([22817014, 100],"float32"), )
paddle.nn.functional.silu(Tensor([2302, 512, 44, 44],"float32"), )
paddle.nn.functional.silu(Tensor([23211, 384, 16, 16],"float32"), None, )
paddle.nn.functional.silu(Tensor([23211, 96, 32, 32],"float32"), None, )
paddle.nn.functional.silu(Tensor([25, 91268056],"float32"), None, )
paddle.nn.functional.silu(Tensor([256, 8912897],"float32"), None, )
paddle.nn.functional.silu(Tensor([26527, 6, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([2786, 128, 80, 80],"float32"), None, )
paddle.nn.functional.silu(Tensor([2786, 512, 40, 40],"float32"), )
paddle.nn.functional.silu(Tensor([2809, 384, 46, 46],"float32"), )
paddle.nn.functional.silu(Tensor([297097, 16, 480],"float32"), None, )
paddle.nn.functional.silu(Tensor([3, 760567127],"float32"), )
paddle.nn.functional.silu(Tensor([30948, 128, 24, 24],"float32"), )
paddle.nn.functional.silu(Tensor([30948, 256, 288],"float32"), None, )
paddle.nn.functional.silu(Tensor([31832, 5, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([32, 1228, 58081],"float32"), )
paddle.nn.functional.silu(Tensor([32, 32, 2228225],"float32"), )
paddle.nn.functional.silu(Tensor([32, 71303169],"float32"), None, )
paddle.nn.functional.silu(Tensor([3253, 257, 2730],"float32"), None, )
paddle.nn.functional.silu(Tensor([33554433, 128],"float16"), )
paddle.nn.functional.silu(Tensor([33698, 128, 23, 23],"float32"), )
paddle.nn.functional.silu(Tensor([3439, 512, 36, 36],"float32"), )
paddle.nn.functional.silu(Tensor([3714, 300, 2048],"float32"), )
paddle.nn.functional.silu(Tensor([39992, 57054],"float32"), None, )
paddle.nn.functional.silu(Tensor([4, 1, 570425345],"float32"), )
paddle.nn.functional.silu(Tensor([4, 1073741825],"float16"), )
paddle.nn.functional.silu(Tensor([4, 39790, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([4, 5, 114085069],"float32"), )
paddle.nn.functional.silu(Tensor([4, 570425345],"float32"), )
paddle.nn.functional.silu(Tensor([405132, 11, 512],"float32"), )
paddle.nn.functional.silu(Tensor([4096, 557057],"float32"), None, )
paddle.nn.functional.silu(Tensor([4213, 256, 46, 46],"float32"), )
paddle.nn.functional.silu(Tensor([42524429, 101],"float16"), )
paddle.nn.functional.silu(Tensor([42949673, 100],"float16"), )
paddle.nn.functional.silu(Tensor([4353, 128, 64, 64],"float32"), None, )
paddle.nn.functional.silu(Tensor([4456449, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([47535446, 6, 8],"float32"), )
paddle.nn.functional.silu(Tensor([5, 456340276],"float32"), )
paddle.nn.functional.silu(Tensor([50, 45634028],"float32"), None, )
paddle.nn.functional.silu(Tensor([5093084, 64, 7],"float32"), )
paddle.nn.functional.silu(Tensor([512, 11606, 384],"float32"), None, )
paddle.nn.functional.silu(Tensor([512, 15474, 288],"float32"), None, )
paddle.nn.functional.silu(Tensor([512, 16, 278529],"float32"), None, )
paddle.nn.functional.silu(Tensor([512, 256, 17409],"float32"), None, )
paddle.nn.functional.silu(Tensor([512, 64, 69633],"float32"), None, )
paddle.nn.functional.silu(Tensor([512, 9285, 480],"float32"), None, )
paddle.nn.functional.silu(Tensor([5200, 438789],"float32"), None, )
paddle.nn.functional.silu(Tensor([544, 4194305],"float32"), None, )
paddle.nn.functional.silu(Tensor([55706, 640, 8, 8],"float32"), None, )
paddle.nn.functional.silu(Tensor([5571, 1024, 20, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([5571, 256, 40, 40],"float32"), None, )
paddle.nn.functional.silu(Tensor([5803, 384, 32, 32],"float32"), None, )
paddle.nn.functional.silu(Tensor([6, 380283564],"float32"), )
paddle.nn.functional.silu(Tensor([67108865, 64],"float16"), )
paddle.nn.functional.silu(Tensor([6851957, 9, 37],"float32"), )
paddle.nn.functional.silu(Tensor([69633, 128, 16, 16],"float32"), None, )
paddle.nn.functional.silu(Tensor([69633, 512, 8, 8],"float32"), None, )
paddle.nn.functional.silu(Tensor([697, 128, 160, 160],"float32"), None, )
paddle.nn.functional.silu(Tensor([697, 512, 80, 80],"float32"), )
paddle.nn.functional.silu(Tensor([7, 325957340],"float32"), )
paddle.nn.functional.silu(Tensor([703, 384, 92, 92],"float32"), )
paddle.nn.functional.silu(Tensor([71303169, 4, 8],"float32"), )
paddle.nn.functional.silu(Tensor([7724, 577, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([7737, 128, 48, 48],"float32"), )
paddle.nn.functional.silu(Tensor([8, 285212673],"float32"), )
paddle.nn.functional.silu(Tensor([8, 536870913],"float16"), )
paddle.nn.functional.silu(Tensor([80, 55706, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([80, 577, 49431],"float32"), None, )
paddle.nn.functional.silu(Tensor([8425, 128, 46, 46],"float32"), )
paddle.nn.functional.silu(Tensor([860, 512, 72, 72],"float32"), )
paddle.nn.functional.silu(Tensor([8705, 16, 128, 128],"float32"), None, )
paddle.nn.functional.silu(Tensor([8705, 256, 32, 32],"float32"), None, )
paddle.nn.functional.silu(Tensor([8809658, 7, 37],"float32"), )
paddle.nn.functional.silu(Tensor([9, 253522376],"float32"), )
paddle.nn.functional.silu(Tensor([9208, 512, 22, 22],"float32"), )
paddle.nn.functional.silu(Tensor([92843, 64, 384],"float32"), None, )
paddle.nn.functional.silu(x=Tensor([25352238, 10, 3, 3],"float32"), )
paddle.nn.functional.silu(x=Tensor([3, 10, 25352238, 3],"float32"), )
paddle.nn.functional.silu(x=Tensor([3, 10, 3, 25352238],"float32"), )
paddle.nn.functional.silu(x=Tensor([3, 10, 3, 47721859],"float16"), )
paddle.nn.functional.silu(x=Tensor([3, 10, 47721859, 3],"float16"), )
paddle.nn.functional.silu(x=Tensor([3, 159072863, 3, 3],"float16"), )
paddle.nn.functional.silu(x=Tensor([3, 84507459, 3, 3],"float32"), )
paddle.nn.functional.silu(x=Tensor([4, 1, 3, 357913942],"float16"), )
paddle.nn.functional.silu(x=Tensor([4, 1, 357913942, 3],"float16"), )
paddle.nn.functional.silu(x=Tensor([4, 119304648, 3, 3],"float16"), )
paddle.nn.functional.silu(x=Tensor([477218589, 1, 3, 3],"float16"), )
paddle.nn.functional.silu(x=Tensor([47721859, 10, 3, 3],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), reduction="none", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1014, 2250199],"float32"), Tensor([1014, 2250199],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1024, 2228225],"float32"), Tensor([1024, 2228225],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1025, 2226051],"float32"), Tensor([1025, 2226051],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1028, 2219554],"float32"), Tensor([1028, 2219554],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([11408507, 200],"float32"), Tensor([11408507, 200],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([11408507, 200],"float32"), Tensor([11408507, 200],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([11408507, 200],"float32"), Tensor([11408507, 200],"float32"), reduction="none", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([11408507, 200],"float32"), Tensor([11408507, 200],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1525202, 187, 8],"float32"), Tensor([1525202, 187, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1805144, 158, 8],"float32"), Tensor([1805144, 158, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1914, 1192112],"float32"), Tensor([1914, 1192112],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([200, 11408507],"float32"), Tensor([200, 11408507],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([2147483649, 2],"float16"), label=Tensor([2147483649, 2],"float16"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 11883862, 8],"float32"), Tensor([24, 11883862, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 158, 601715],"float32"), Tensor([24, 158, 601715],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2640859, 108, 8],"float32"), Tensor([2640859, 108, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2716312, 105, 8],"float32"), Tensor([2716312, 105, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2769056, 103, 8],"float32"), Tensor([2769056, 103, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2796203, 102, 8],"float32"), Tensor([2796203, 102, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([45634028, 50],"float32"), Tensor([45634028, 50],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([45635, 50000],"float32"), Tensor([45635, 50000],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 858993460],"float16"), label=Tensor([5, 858993460],"float16"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 187, 190651],"float32"), Tensor([64, 187, 190651],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 4456449, 8],"float32"), Tensor([64, 4456449, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([7, 325957340],"float32"), Tensor([7, 325957340],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 102, 2796203],"float32"), Tensor([8, 102, 2796203],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 103, 2769056],"float32"), Tensor([8, 103, 2769056],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 105, 2716312],"float32"), Tensor([8, 105, 2716312],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 108, 2640859],"float32"), Tensor([8, 108, 2640859],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 35651585, 8],"float32"), Tensor([8, 35651585, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 7, 8148934],"float32"), Tensor([8, 5, 7, 8148934],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 8148934, 7],"float32"), Tensor([8, 5, 8148934, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5820667, 7, 7],"float32"), Tensor([8, 5820667, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([9313067, 5, 7, 7],"float32"), Tensor([9313067, 5, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.softmax(Tensor([10, 15375, 153, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 16757, 153, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 228170138],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 228170138],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([10, 8, 153, 186414],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 186414, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 294034, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 320464, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 9748, 153, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([100, 15802, 38, 38],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([100, 22817014],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([100, 281692, 9, 9],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([100, 4, 150112, 38],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([100, 4, 38, 150112],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([100, 4, 633806, 9],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([100, 4, 9, 633806],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([1008, 323371, 7],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([1008, 7, 323371],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10186167, 4, 8, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([1024, 108, 144, 144],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 4, 11369, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 4, 49, 11369],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 6, 49, 7579],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 6, 7579, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 8, 144, 1935],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 8, 1935, 144],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 929, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([104, 16, 18, 76179],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 16, 21, 65296],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 16, 22, 62328],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 16, 62328, 22],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 16, 65296, 21],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 16, 76179, 18],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 45330, 22, 22],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 49750, 21, 21],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 67715, 18, 18],"float32"), )
paddle.nn.functional.softmax(Tensor([109750, 165, 126],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([11, 4, 7, 7408122],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([11, 4, 7408122, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([11, 4233213, 7, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([112, 123469, 165],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([112, 161686, 126],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([112, 165, 123469],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([11641334, 4, 7, 7],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([11641334, 4, 7, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([12184, 8, 153, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([128, 1, 16, 22737, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 1, 16, 49, 22737],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 1, 7425, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 16, 4, 49, 5685],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 16, 4, 5685, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 16, 465, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 17825793],"float32"), )
paddle.nn.functional.softmax(Tensor([128, 1857, 4, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 4, 1857, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 4, 8, 11369, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 4, 8, 49, 11369],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 465, 16, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 929, 8, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([13, 174, 1007, 1007],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 1755155, 10, 10],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 1772884, 99],"float32"), )
paddle.nn.functional.softmax(Tensor([13, 3581949, 7, 7],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([13, 4, 10, 4387888],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 1007, 43574],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 2, 21939437],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 21939437, 2],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 43574, 1007],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 4387888, 10],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 5, 1, 8775775],"float32"), )
paddle.nn.functional.softmax(Tensor([13, 4, 5, 1253683, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([13, 4, 6268411, 1, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([13, 4, 6268411, 7],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([13, 4, 7, 6268411],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([13, 43878873, 2, 2],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 5014729, 5, 1, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([13, 7, 25073642],"float32"), )
paddle.nn.functional.softmax(Tensor([134217729, 17],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([13755, 8, 144, 144],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([14, 2910334, 8, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([14, 3326096, 7, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([14, 4, 5820667, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([14, 4, 7, 5820667],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([14, 4, 8, 5093084],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([142606337, 16],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([142606337, 4, 2, 2],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([14849, 16, 4, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([15211343, 3, 2, 5, 5],"float32"), )
paddle.nn.functional.softmax(Tensor([158386, 6, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([16, 10, 14260634],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([16, 11, 202566, 64],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([16, 11, 64, 202566],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([16, 16, 16777217],"float16"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([16, 16, 16777217],"float16"), 1, )
paddle.nn.functional.softmax(Tensor([16, 16, 16777217],"float16"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([16, 16, 16777217],"float16"), 2, )
paddle.nn.functional.softmax(Tensor([16, 16, 16777217],"float16"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([16, 2097153, 128],"float16"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([16, 2097153, 128],"float16"), 1, )
paddle.nn.functional.softmax(Tensor([16, 2097153, 128],"float16"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([16, 2097153, 128],"float16"), 2, )
paddle.nn.functional.softmax(Tensor([16, 2097153, 128],"float16"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([16, 268435457],"float16"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([16, 268435457],"float16"), 1, )
paddle.nn.functional.softmax(Tensor([16, 268435457],"float16"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([16, 34817, 64, 64],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([16, 42392, 3364],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([16297867, 4, 5, 1, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([178956971, 6, 4],"float16"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([182, 12536821, 1],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([182, 12536821],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([182, 3, 4178941],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([190141782, 3, 4],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([190141782, 3, 4],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([190141782, 3, 4],"float32"), axis=-1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([190141782, 3, 4],"float32"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([190141782, 3, 4],"float32"), axis=0, dtype="float32", )
paddle.nn.functional.softmax(Tensor([190141782, 3, 4],"float32"), axis=0, dtype="float64", )
paddle.nn.functional.softmax(Tensor([190141782, 3, 4],"float32"), axis=1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([190141782, 3, 4],"float32"), axis=1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([19218, 8, 153, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 1, 1140850690],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([2, 107374183, 5, 4],"float16"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 11184811, 102],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([2, 11295552, 101],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 1140850690],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 1140850690],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 1140850690],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 1140850690],"float32"), axis=-1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 1140850690],"float32"), axis=1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 1140850690],"float32"), axis=1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 11408507, 100],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([2, 142606337, 8],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 16, 1, 71303169],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 16, 10186167, 7],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 16, 11883862, 6],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 162978670, 1, 7],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 190141782, 1, 6],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 22817014, 2, 5, 5],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 285212673, 4],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 285212673, 4],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 285212673, 4],"float32"), axis=-1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 285212673, 4],"float32"), axis=1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 285212673, 4],"float32"), axis=1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 3, 15211343, 5, 5],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 3, 2, 38028357, 5],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 3, 2, 5, 38028357],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 3, 380283564],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 380283564],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 3, 380283564],"float32"), axis=-1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 3, 380283564],"float32"), axis=1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 3, 380283564],"float32"), axis=1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 3, 4, 95070891],"float32"), dtype=type(numpy.float64), )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float16"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float16"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float16"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 76056713, 5],"float32"), dtype=type(numpy.float64), )
paddle.nn.functional.softmax(Tensor([2, 536870913, 4],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 536870913, 4],"float16"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([2, 536870913, 4],"float16"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 536870913, 4],"float16"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([2, 536870913, 4],"float16"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 57042535, 4, 5],"float32"), dtype=type(numpy.float64), )
paddle.nn.functional.softmax(Tensor([2, 6, 357913942],"float16"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 6, 5, 71582789],"float16"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 6, 89478486, 4],"float16"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 8, 142606337],"float32"), )
paddle.nn.functional.softmax(Tensor([20372334, 16, 1, 7],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([20946, 8, 153, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2097153, 16, 128],"float16"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([2097153, 16, 128],"float16"), 1, )
paddle.nn.functional.softmax(Tensor([2097153, 16, 128],"float16"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([2097153, 16, 128],"float16"), 2, )
paddle.nn.functional.softmax(Tensor([2097153, 16, 128],"float16"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([22369622, 1, 102],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([22591103, 1, 101],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([228170138, 10],"float32"), )
paddle.nn.functional.softmax(Tensor([228170138, 10],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([228170138, 10],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([22817014, 1, 100],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([22817014, 100],"float32"), )
paddle.nn.functional.softmax(Tensor([237579, 4, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([23767723, 16, 1, 6],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([24, 256, 371371],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([24, 95070891, 1],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([256, 16777217],"float16"), 1, )
paddle.nn.functional.softmax(Tensor([285212673, 8],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([285213, 8000],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([294642, 16, 22, 22],"float32"), )
paddle.nn.functional.softmax(Tensor([29698, 4, 8, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([32, 256, 278529],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([32, 71303169, 1],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([323371, 16, 21, 21],"float32"), )
paddle.nn.functional.softmax(Tensor([3292499, 7, 99],"float32"), )
paddle.nn.functional.softmax(Tensor([333096, 137, 50],"float32"), )
paddle.nn.functional.softmax(Tensor([33554433, 128],"float16"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([33554433, 128],"float16"), 1, )
paddle.nn.functional.softmax(Tensor([33554433, 128],"float16"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([35651585, 4, 16],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([35651585, 8, 8],"float32"), )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float16"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float16"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float16"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([35791395, 6, 5, 4],"float16"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([3714, 300, 2048],"float32"), axis=0, )
paddle.nn.functional.softmax(Tensor([38028357, 3, 4, 5],"float32"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([38028357, 3, 4, 5],"float32"), axis=0, )
paddle.nn.functional.softmax(Tensor([38028357, 3, 4, 5],"float32"), dtype=type(numpy.float64), )
paddle.nn.functional.softmax(Tensor([3842, 81, 7332],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([395032, 4, 38, 38],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([4, 1, 19513, 94, 311],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4, 1, 81, 22645, 311],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4, 1, 81, 94, 74918],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4, 11408507, 50],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 137, 4163689],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 241, 81, 94, 311],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4, 35651585, 16],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([4, 4, 142606337],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([4, 77800, 7332],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4, 81, 7042289],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4294967297],"float16"), axis=-1, )
paddle.nn.functional.softmax(Tensor([43994, 51865],"float32"), axis=-1, dtype=VarType(float32), )
paddle.nn.functional.softmax(Tensor([440144, 16, 18, 18],"float32"), )
paddle.nn.functional.softmax(Tensor([46565335, 7, 7],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 456340276],"float32"), axis=-1, dtype=VarType(float32), )
paddle.nn.functional.softmax(Tensor([50642, 11, 64, 64],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([52, 1253683, 5, 1, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([52, 4, 1567103, 1, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([52, 4, 5, 1, 2193944],"float32"), )
paddle.nn.functional.softmax(Tensor([52, 4, 5, 313421, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([563, 4, 1007, 1007],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([5704254, 4, 10, 10],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([59395, 1, 16, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([67828, 10, 3364],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([7042289, 4, 9, 9],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([760567127, 3, 1],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([760567127, 3],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([760567127, 3],"float32"), axis=-1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([760567127, 3],"float32"), axis=0, dtype="float32", )
paddle.nn.functional.softmax(Tensor([760567127, 3],"float32"), axis=0, dtype="float64", )
paddle.nn.functional.softmax(Tensor([760567127, 3],"float32"), axis=1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([760567127, 3],"float32"), axis=1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([83810, 165, 165],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8912897, 256, 1],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([964, 1, 81, 94, 311],"float32"), axis=2, )
paddle.nn.functional.softmax(x=Tensor([13, 1218858, 12, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([13, 4, 12, 3656573],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([13, 4, 3656573, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([16, 4, 12, 2970966],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([16, 4, 2970966, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([16, 990322, 12, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([190141782, 3, 4],"float32"), )
paddle.nn.functional.softmax(x=Tensor([2, 285212673, 4],"float32"), )
paddle.nn.functional.softmax(x=Tensor([2, 3, 380283564],"float32"), )
paddle.nn.functional.softmax(x=Tensor([2, 3, 715827883],"float16"), )
paddle.nn.functional.softmax(x=Tensor([2, 3, 715827883],"float16"), axis=0, )
paddle.nn.functional.softmax(x=Tensor([2, 3, 715827883],"float16"), axis=1, )
paddle.nn.functional.softmax(x=Tensor([2, 3, 715827883],"float16"), axis=2, )
paddle.nn.functional.softmax(x=Tensor([2, 536870913, 4],"float16"), )
paddle.nn.functional.softmax(x=Tensor([2, 536870913, 4],"float16"), axis=0, )
paddle.nn.functional.softmax(x=Tensor([2, 536870913, 4],"float16"), axis=1, )
paddle.nn.functional.softmax(x=Tensor([2, 536870913, 4],"float16"), axis=2, )
paddle.nn.functional.softmax(x=Tensor([3, 4, 12, 15845149],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([3, 4, 15845149, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([3, 5281717, 12, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([357913942, 3, 4],"float16"), )
paddle.nn.functional.softmax(x=Tensor([357913942, 3, 4],"float16"), axis=0, )
paddle.nn.functional.softmax(x=Tensor([357913942, 3, 4],"float16"), axis=1, )
paddle.nn.functional.softmax(x=Tensor([357913942, 3, 4],"float16"), axis=2, )
paddle.nn.functional.softmax(x=Tensor([3961288, 4, 12, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([100, 22817014],"float32"), Tensor([100, 1],"int64"), )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([142606337, 16],"float32"), Tensor([142606337, 1],"int64"), )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([142606337, 16],"float32"), Tensor([142606337, 1],"int64"), return_softmax=True, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 1140850690],"float32"), Tensor([2, 1],"int64"), )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 1140850690],"float32"), Tensor([2, 1],"int64"), return_softmax=True, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 1114113, 64],"float32"), Tensor([2, 16, 1, 64],"int64"), axis=2, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 1114113, 64],"float32"), Tensor([2, 16, 1114113, 1],"int64"), axis=-1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 1114113, 64],"float32"), Tensor([2, 16, 1114113, 1],"int64"), axis=3, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 32, 2228225],"float32"), Tensor([2, 16, 1, 2228225],"int64"), axis=2, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 32, 2228225],"float32"), Tensor([2, 16, 32, 1],"int64"), axis=-1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 32, 2228225],"float32"), Tensor([2, 16, 32, 1],"int64"), axis=3, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 557057, 32, 64],"float32"), Tensor([2, 557057, 1, 64],"int64"), axis=2, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 557057, 32, 64],"float32"), Tensor([2, 557057, 32, 1],"int64"), axis=-1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 557057, 32, 64],"float32"), Tensor([2, 557057, 32, 1],"int64"), axis=3, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([228170138, 10],"float32"), Tensor([228170138, 1],"int64"), )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([5, 456340276],"float32"), label=Tensor([5, 1],"int64"), soft_label=False, ignore_index=-100, numeric_stable_mode=True, return_softmax=False, axis=-1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([69633, 16, 32, 64],"float32"), Tensor([69633, 16, 1, 64],"int64"), axis=2, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([69633, 16, 32, 64],"float32"), Tensor([69633, 16, 32, 1],"int64"), axis=-1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([69633, 16, 32, 64],"float32"), Tensor([69633, 16, 32, 1],"int64"), axis=3, )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([12, 190141782],"float32"), label=Tensor([12, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([12, 357913942],"float16"), label=Tensor([12, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([16, 142606337],"float32"), label=Tensor([16, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([17825793, 128],"float32"), label=Tensor([17825793, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([228170138, 10],"float32"), label=Tensor([228170138, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([2281702, 1000],"float32"), label=Tensor([2281702, 1],"int64"), soft_label=False, )
paddle.nn.functional.softplus(Tensor([1, 1431655766, 3],"float16"), )
paddle.nn.functional.softplus(Tensor([1, 2, 1140850690],"float32"), )
paddle.nn.functional.softplus(Tensor([1, 2, 2147483649],"float16"), )
paddle.nn.functional.softplus(Tensor([1, 760567127, 3],"float32"), )
paddle.nn.functional.softplus(Tensor([13, 10, 17551550],"float32"), )
paddle.nn.functional.softplus(Tensor([13, 2742430, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([13, 3, 58505164],"float32"), )
paddle.nn.functional.softplus(Tensor([13, 7, 25073642],"float32"), )
paddle.nn.functional.softplus(Tensor([14, 2546542, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([14, 7, 23282668],"float32"), )
paddle.nn.functional.softplus(Tensor([1431655766, 3],"float16"), )
paddle.nn.functional.softplus(Tensor([2, 1073741825, 2],"float16"), )
paddle.nn.functional.softplus(Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.softplus(Tensor([2, 2147483649],"float16"), )
paddle.nn.functional.softplus(Tensor([2, 3, 715827883],"float16"), )
paddle.nn.functional.softplus(Tensor([2281701379, 1],"float32"), )
paddle.nn.functional.softplus(Tensor([2281701379],"float32"), )
paddle.nn.functional.softplus(Tensor([2281701379],"float32"), 1, 15, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 477218589],"float16"), -1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 477218589],"float16"), -3, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 477218589],"float16"), 1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 477218589],"float16"), 2, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 477218589],"float16"), 3, -5, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 477218589],"float16"), 3, 5, None, )
paddle.nn.functional.softplus(Tensor([3, 477218589, 3],"float16"), -1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 477218589, 3],"float16"), -3, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 477218589, 3],"float16"), 1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 477218589, 3],"float16"), 2, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 477218589, 3],"float16"), 3, -5, None, )
paddle.nn.functional.softplus(Tensor([3, 477218589, 3],"float16"), 3, 5, None, )
paddle.nn.functional.softplus(Tensor([35404, 1007, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([3565159, 10, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([380283564, 2, 3],"float32"), )
paddle.nn.functional.softplus(Tensor([4294967297],"float16"), )
paddle.nn.functional.softplus(Tensor([4294967297],"float16"), 1, 15, None, )
paddle.nn.functional.softplus(Tensor([477218589, 3, 3],"float16"), -1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([477218589, 3, 3],"float16"), -3, 20, None, )
paddle.nn.functional.softplus(Tensor([477218589, 3, 3],"float16"), 1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([477218589, 3, 3],"float16"), 2, 20, None, )
paddle.nn.functional.softplus(Tensor([477218589, 3, 3],"float16"), 3, -5, None, )
paddle.nn.functional.softplus(Tensor([477218589, 3, 3],"float16"), 3, 5, None, )
paddle.nn.functional.softplus(Tensor([5093084, 7, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([715827883, 2, 3],"float16"), )
paddle.nn.functional.softplus(Tensor([715827883, 3, 2],"float16"), )
paddle.nn.functional.softplus(Tensor([760567127, 3],"float32"), )
paddle.nn.functional.softplus(Tensor([8, 285212673],"float32"), )
paddle.nn.functional.softplus(x=Tensor([2281701379],"float32"), beta=1, threshold=15, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 477218589],"float16"), beta=-1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 477218589],"float16"), beta=-3, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 477218589],"float16"), beta=1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 477218589],"float16"), beta=2, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 477218589],"float16"), beta=3, threshold=-5, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 477218589],"float16"), beta=3, threshold=5, )
paddle.nn.functional.softplus(x=Tensor([3, 477218589, 3],"float16"), beta=-1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 477218589, 3],"float16"), beta=-3, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 477218589, 3],"float16"), beta=1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 477218589, 3],"float16"), beta=2, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 477218589, 3],"float16"), beta=3, threshold=-5, )
paddle.nn.functional.softplus(x=Tensor([3, 477218589, 3],"float16"), beta=3, threshold=5, )
paddle.nn.functional.softplus(x=Tensor([4294967297],"float16"), beta=1, threshold=15, )
paddle.nn.functional.softplus(x=Tensor([477218589, 3, 3],"float16"), beta=-1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([477218589, 3, 3],"float16"), beta=-3, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([477218589, 3, 3],"float16"), beta=1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([477218589, 3, 3],"float16"), beta=2, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([477218589, 3, 3],"float16"), beta=3, threshold=-5, )
paddle.nn.functional.softplus(x=Tensor([477218589, 3, 3],"float16"), beta=3, threshold=5, )
paddle.nn.functional.softshrink(Tensor([2281701379],"float32"), 0.5, None, )
paddle.nn.functional.softshrink(Tensor([3, 3, 477218589],"float16"), 0, None, )
paddle.nn.functional.softshrink(Tensor([3, 3, 477218589],"float16"), 5, None, )
paddle.nn.functional.softshrink(Tensor([3, 477218589, 3],"float16"), 0, None, )
paddle.nn.functional.softshrink(Tensor([3, 477218589, 3],"float16"), 5, None, )
paddle.nn.functional.softshrink(Tensor([32, 15, 8, 8, 32, 2322],"float32"), threshold=0.01, )
paddle.nn.functional.softshrink(Tensor([32, 15, 8, 8, 37138, 2],"float32"), threshold=0.01, )
paddle.nn.functional.softshrink(Tensor([32, 15, 8, 9285, 32, 2],"float32"), threshold=0.01, )
paddle.nn.functional.softshrink(Tensor([32, 15, 9285, 8, 32, 2],"float32"), threshold=0.01, )
paddle.nn.functional.softshrink(Tensor([32, 17409, 8, 8, 32, 2],"float32"), threshold=0.01, )
paddle.nn.functional.softshrink(Tensor([37138, 15, 8, 8, 32, 2],"float32"), threshold=0.01, )
paddle.nn.functional.softshrink(Tensor([4294967297],"float16"), 0.5, None, )
paddle.nn.functional.softshrink(Tensor([477218589, 3, 3],"float16"), 0, None, )
paddle.nn.functional.softshrink(Tensor([477218589, 3, 3],"float16"), 5, None, )
paddle.nn.functional.softshrink(x=Tensor([2281701379],"float32"), threshold=0.5, )
paddle.nn.functional.softshrink(x=Tensor([3, 3, 477218589],"float16"), threshold=0, )
paddle.nn.functional.softshrink(x=Tensor([3, 3, 477218589],"float16"), threshold=5, )
paddle.nn.functional.softshrink(x=Tensor([3, 477218589, 3],"float16"), threshold=0, )
paddle.nn.functional.softshrink(x=Tensor([3, 477218589, 3],"float16"), threshold=5, )
paddle.nn.functional.softshrink(x=Tensor([4294967297],"float16"), threshold=0.5, )
paddle.nn.functional.softshrink(x=Tensor([477218589, 3, 3],"float16"), threshold=0, )
paddle.nn.functional.softshrink(x=Tensor([477218589, 3, 3],"float16"), threshold=5, )
paddle.nn.functional.softsign(Tensor([17825793, 128],"float32"), )
paddle.nn.functional.softsign(Tensor([2281701379],"float32"), None, )
paddle.nn.functional.softsign(Tensor([3, 3, 477218589],"float16"), None, )
paddle.nn.functional.softsign(Tensor([3, 477218589, 3],"float16"), None, )
paddle.nn.functional.softsign(Tensor([300, 7605672],"float32"), )
paddle.nn.functional.softsign(Tensor([32, 71303169],"float32"), )
paddle.nn.functional.softsign(Tensor([4294967297],"float16"), None, )
paddle.nn.functional.softsign(Tensor([477218589, 3, 3],"float16"), None, )
paddle.nn.functional.softsign(Tensor([557057, 4096],"float32"), )
paddle.nn.functional.softsign(x=Tensor([2281701379],"float32"), )
paddle.nn.functional.softsign(x=Tensor([3, 3, 477218589],"float16"), )
paddle.nn.functional.softsign(x=Tensor([3, 477218589, 3],"float16"), )
paddle.nn.functional.softsign(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.softsign(x=Tensor([477218589, 3, 3],"float16"), )
paddle.nn.functional.square_error_cost(Tensor([1073741825, 2, 1, 2],"float16"), label=Tensor([1073741825, 2, 1, 2],"float16"), )
paddle.nn.functional.square_error_cost(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([228171, 100, 100],"float32"), Tensor([228171, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 1, 2],"float16"), label=Tensor([3, 2, 357913942, 2],"float16"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 1, 715827883],"float16"), label=Tensor([3, 2, 1, 715827883],"float16"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 357913942, 2],"float16"), label=Tensor([3, 2, 1, 2],"float16"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 357913942, 2],"float16"), label=Tensor([3, 2, 357913942, 2],"float16"), )
paddle.nn.functional.square_error_cost(Tensor([3, 715827883, 1, 2],"float16"), label=Tensor([3, 715827883, 1, 2],"float16"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 2852127],"float32"), Tensor([8, 100, 2852127],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 2852127, 100],"float32"), Tensor([8, 2852127, 100],"float32"), )
paddle.nn.functional.square_error_cost(input=Tensor([2, 1140850690],"float32"), label=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.square_error_cost(input=Tensor([2, 1140850690],"float32"), label=Tensor([2, 1],"float32"), )
paddle.nn.functional.square_error_cost(input=Tensor([2, 1],"float32"), label=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.square_error_cost(input=Tensor([2281701379, 1],"float32"), label=Tensor([2281701379, 1],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 32, 69633],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 34, 65537],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 36, 61896],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 37138, 60],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 38, 58638],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 38418, 58],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 39790, 56],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 40, 55706],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 41264, 54],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 42, 53053],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 42851, 52],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 44, 50642],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 44565, 50],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 46, 48440],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 46422, 48],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 48, 46422],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 48440, 46],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 50, 44565],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 50642, 44],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 52, 42851],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 53053, 42],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 54, 41264],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 55706, 40],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 56, 39790],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 58, 38418],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 58638, 38],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 60, 37138],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 61896, 36],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 65537, 34],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 69633, 32],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1078309, 46, 46],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1178565, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 256, 69633],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 272, 65537],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 288, 61896],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 304, 58638],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 320, 55706],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 336, 53053],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 352, 50642],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 50642, 352],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 53053, 336],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 55706, 320],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 58638, 304],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 61896, 288],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 65537, 272],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 69633, 256],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1293482, 42, 42],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1426064, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1580126, 38, 38],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1760573, 36, 36],"float32"), )
paddle.nn.functional.swish(Tensor([1, 18416, 352, 352],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1973791, 34, 34],"float32"), )
paddle.nn.functional.swish(Tensor([1, 20211, 336, 336],"float32"), )
paddle.nn.functional.swish(Tensor([1, 2228225, 32, 32],"float32"), )
paddle.nn.functional.swish(Tensor([1, 22283, 320, 320],"float32"), )
paddle.nn.functional.swish(Tensor([1, 24690, 304, 304],"float32"), )
paddle.nn.functional.swish(Tensor([1, 27509, 288, 288],"float32"), )
paddle.nn.functional.swish(Tensor([1, 30841, 272, 272],"float32"), )
paddle.nn.functional.swish(Tensor([1, 34817, 256, 256],"float32"), )
paddle.nn.functional.swish(Tensor([1, 633806, 60, 60],"float32"), )
paddle.nn.functional.swish(Tensor([1, 678271, 58, 58],"float32"), )
paddle.nn.functional.swish(Tensor([1, 727584, 56, 56],"float32"), )
paddle.nn.functional.swish(Tensor([1, 782477, 54, 54],"float32"), )
paddle.nn.functional.swish(Tensor([1, 843825, 52, 52],"float32"), )
paddle.nn.functional.swish(Tensor([1, 912681, 50, 50],"float32"), )
paddle.nn.functional.swish(Tensor([1, 990322, 48, 48],"float32"), )
paddle.nn.functional.swish(Tensor([100357, 116, 14, 14],"float32"), None, )
paddle.nn.functional.swish(Tensor([1054, 1024, 46, 46],"float32"), )
paddle.nn.functional.swish(Tensor([111412, 40, 512],"float32"), None, )
paddle.nn.functional.swish(Tensor([1151, 1024, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([1188387, 48, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([118839, 480, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([12545, 58, 56, 56],"float32"), None, )
paddle.nn.functional.swish(Tensor([1264, 1024, 42, 42],"float32"), )
paddle.nn.functional.swish(Tensor([128, 1024, 1, 17409],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 1024, 436, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 120, 1, 148549],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 120, 3714, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 128, 1, 139265],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 128, 3482, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 40, 445645],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 445645, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 74275, 240],"float32"), None, )
paddle.nn.functional.swish(Tensor([1393, 1024, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([144, 128, 352, 352],"float32"), )
paddle.nn.functional.swish(Tensor([148549, 384, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([1544, 1024, 38, 38],"float32"), )
paddle.nn.functional.swish(Tensor([158, 128, 336, 336],"float32"), )
paddle.nn.functional.swish(Tensor([1720, 1024, 36, 36],"float32"), )
paddle.nn.functional.swish(Tensor([175, 128, 320, 320],"float32"), )
paddle.nn.functional.swish(Tensor([1928, 1024, 34, 34],"float32"), )
paddle.nn.functional.swish(Tensor([193, 128, 304, 304],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 159159, 7],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 1024, 7, 159159],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 116, 14, 702495],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 116, 28, 351248],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 116, 351248, 28],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 116, 702495, 14],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 1455167, 28, 28],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 232, 14, 351248],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 232, 351248, 14],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 232, 7, 702495],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 232, 702495, 7],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 23282668, 7, 7],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 24, 112, 424424],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 24, 424424, 112],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 300, 3802836],"float32"), )
paddle.nn.functional.swish(Tensor([2, 363792, 56, 56],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 557057, 2048],"float32"), )
paddle.nn.functional.swish(Tensor([2, 58, 28, 702495],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 58, 351248, 56],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 58, 56, 351248],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 58, 702495, 28],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 5820667, 14, 14],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 90948, 112, 112],"float32"), None, )
paddle.nn.functional.swish(Tensor([200713, 232, 7, 7],"float32"), None, )
paddle.nn.functional.swish(Tensor([215, 128, 288, 288],"float32"), )
paddle.nn.functional.swish(Tensor([2177, 1024, 32, 32],"float32"), )
paddle.nn.functional.swish(Tensor([222823, 256, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([237678, 40, 240],"float32"), None, )
paddle.nn.functional.swish(Tensor([241, 128, 272, 272],"float32"), )
paddle.nn.functional.swish(Tensor([25090, 116, 28, 28],"float32"), None, )
paddle.nn.functional.swish(Tensor([25352238, 10, 3, 3],"float32"), None, )
paddle.nn.functional.swish(Tensor([273, 128, 256, 256],"float32"), )
paddle.nn.functional.swish(Tensor([3, 10, 25352238, 3],"float32"), None, )
paddle.nn.functional.swish(Tensor([3, 10, 3, 25352238],"float32"), None, )
paddle.nn.functional.swish(Tensor([3, 10, 3, 47721859],"float16"), None, )
paddle.nn.functional.swish(Tensor([3, 10, 47721859, 3],"float16"), None, )
paddle.nn.functional.swish(Tensor([3, 159072863, 3, 3],"float16"), None, )
paddle.nn.functional.swish(Tensor([3, 84507459, 3, 3],"float32"), None, )
paddle.nn.functional.swish(Tensor([3714, 300, 2048],"float32"), )
paddle.nn.functional.swish(Tensor([4, 1, 3, 357913942],"float16"), None, )
paddle.nn.functional.swish(Tensor([4, 1, 357913942, 3],"float16"), None, )
paddle.nn.functional.swish(Tensor([4, 1024, 1, 557057],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 1024, 13927, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 1114113, 512],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 119304648, 3, 3],"float16"), None, )
paddle.nn.functional.swish(Tensor([4, 120, 1, 4753545],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 120, 118839, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 128, 1, 4456449],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 128, 111412, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 14260634, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 2376773, 240],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 256, 1, 2228225],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 256, 55706, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 384, 1, 1485483],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 384, 37138, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 40, 14260634],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 48, 1, 11883862],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 48, 297097, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 480, 1, 1188387],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 480, 29710, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 60, 1, 9507090],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 60, 237678, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([445645, 128, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([45474, 1024, 7, 7],"float32"), None, )
paddle.nn.functional.swish(Tensor([475355, 120, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([477218589, 1, 3, 3],"float16"), None, )
paddle.nn.functional.swish(Tensor([47721859, 10, 3, 3],"float16"), None, )
paddle.nn.functional.swish(Tensor([50179, 232, 14, 14],"float32"), None, )
paddle.nn.functional.swish(Tensor([50179, 58, 28, 28],"float32"), None, )
paddle.nn.functional.swish(Tensor([55706, 1024, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([619, 1024, 60, 60],"float32"), )
paddle.nn.functional.swish(Tensor([64, 148549, 240],"float32"), None, )
paddle.nn.functional.swish(Tensor([64, 40, 891290],"float32"), None, )
paddle.nn.functional.swish(Tensor([663, 1024, 58, 58],"float32"), )
paddle.nn.functional.swish(Tensor([711, 1024, 56, 56],"float32"), )
paddle.nn.functional.swish(Tensor([7579, 24, 112, 112],"float32"), None, )
paddle.nn.functional.swish(Tensor([765, 1024, 54, 54],"float32"), )
paddle.nn.functional.swish(Tensor([8, 1188387, 240],"float32"), None, )
paddle.nn.functional.swish(Tensor([8, 40, 7130317],"float32"), None, )
paddle.nn.functional.swish(Tensor([825, 1024, 52, 52],"float32"), )
paddle.nn.functional.swish(Tensor([892, 1024, 50, 50],"float32"), )
paddle.nn.functional.swish(Tensor([950709, 60, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([96, 40, 594194],"float32"), None, )
paddle.nn.functional.swish(Tensor([96, 99033, 240],"float32"), None, )
paddle.nn.functional.swish(Tensor([968, 1024, 48, 48],"float32"), )
paddle.nn.functional.swish(x=Tensor([25352238, 10, 3, 3],"float32"), )
paddle.nn.functional.swish(x=Tensor([3, 10, 25352238, 3],"float32"), )
paddle.nn.functional.swish(x=Tensor([3, 10, 3, 25352238],"float32"), )
paddle.nn.functional.swish(x=Tensor([3, 10, 3, 47721859],"float16"), )
paddle.nn.functional.swish(x=Tensor([3, 10, 47721859, 3],"float16"), )
paddle.nn.functional.swish(x=Tensor([3, 159072863, 3, 3],"float16"), )
paddle.nn.functional.swish(x=Tensor([3, 84507459, 3, 3],"float32"), )
paddle.nn.functional.swish(x=Tensor([4, 1, 3, 357913942],"float16"), )
paddle.nn.functional.swish(x=Tensor([4, 1, 357913942, 3],"float16"), )
paddle.nn.functional.swish(x=Tensor([4, 119304648, 3, 3],"float16"), )
paddle.nn.functional.swish(x=Tensor([477218589, 1, 3, 3],"float16"), )
paddle.nn.functional.swish(x=Tensor([47721859, 10, 3, 3],"float16"), )
paddle.nn.functional.tanh(Tensor([1, 2281701379],"float32"), )
paddle.nn.functional.tanh(Tensor([1, 2281701379],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1, 3, 256, 2970966],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1, 3, 2970966, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1, 34817, 256, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([10, 228170138],"float32"), None, )
paddle.nn.functional.tanh(Tensor([100, 22817014],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1000, 2281702],"float32"), None, )
paddle.nn.functional.tanh(Tensor([10000, 228171],"float32"), None, )
paddle.nn.functional.tanh(Tensor([101, 22591103],"float32"), None, )
paddle.nn.functional.tanh(Tensor([10201, 223675],"float32"), None, )
paddle.nn.functional.tanh(Tensor([10240, 222823],"float32"), None, )
paddle.nn.functional.tanh(Tensor([11, 207427399],"float32"), None, )
paddle.nn.functional.tanh(Tensor([114085069, 20],"float32"), )
paddle.nn.functional.tanh(Tensor([114085069, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([11606, 3, 256, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1168, 1953512],"float32"), None, )
paddle.nn.functional.tanh(Tensor([12, 190141782],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1209, 1887264],"float32"), None, )
paddle.nn.functional.tanh(Tensor([125, 18253612],"float32"), None, )
paddle.nn.functional.tanh(Tensor([128, 17825793],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 175515491],"float32"), )
paddle.nn.functional.tanh(Tensor([13, 175515491],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 256, 685608],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 85701, 2048],"float32"), None, )
paddle.nn.functional.tanh(Tensor([14, 162978670],"float32"), None, )
paddle.nn.functional.tanh(Tensor([142606337, 16],"float32"), )
paddle.nn.functional.tanh(Tensor([142606337, 16],"float32"), None, )
paddle.nn.functional.tanh(Tensor([147015, 15521],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1485, 1536500],"float32"), None, )
paddle.nn.functional.tanh(Tensor([15, 152113426],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1515, 1506074],"float32"), None, )
paddle.nn.functional.tanh(Tensor([16, 142606337],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1609, 1418087],"float32"), )
paddle.nn.functional.tanh(Tensor([1609, 1418087],"float32"), None, )
paddle.nn.functional.tanh(Tensor([16800, 135816],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1820, 1253683],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2, 1140850690],"float32"), None, )
paddle.nn.functional.tanh(Tensor([20000, 114086],"float32"), None, )
paddle.nn.functional.tanh(Tensor([20600, 110763],"float32"), None, )
paddle.nn.functional.tanh(Tensor([22120, 103152],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2228225, 1024],"float32"), None, )
paddle.nn.functional.tanh(Tensor([228595, 9982],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2419, 943242],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2430, 938972],"float32"), None, )
paddle.nn.functional.tanh(Tensor([25, 91268056],"float32"), )
paddle.nn.functional.tanh(Tensor([25, 91268056],"float32"), None, )
paddle.nn.functional.tanh(Tensor([25352238, 90],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2601, 877241],"float32"), None, )
paddle.nn.functional.tanh(Tensor([28, 81489335],"float32"), None, )
paddle.nn.functional.tanh(Tensor([282600, 8074],"float32"), None, )
paddle.nn.functional.tanh(Tensor([285212673, 8],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2970966, 768],"float32"), None, )
paddle.nn.functional.tanh(Tensor([32, 71303169],"float32"), None, )
paddle.nn.functional.tanh(Tensor([3488, 654158],"float32"), None, )
paddle.nn.functional.tanh(Tensor([35651585, 64],"float32"), )
paddle.nn.functional.tanh(Tensor([35651585, 64],"float32"), None, )
paddle.nn.functional.tanh(Tensor([36, 63380594],"float32"), None, )
paddle.nn.functional.tanh(Tensor([38028357, 60],"float32"), None, )
paddle.nn.functional.tanh(Tensor([39, 58505164],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4, 570425345],"float32"), None, )
paddle.nn.functional.tanh(Tensor([40, 57042535],"float32"), None, )
paddle.nn.functional.tanh(Tensor([400, 5704254],"float32"), )
paddle.nn.functional.tanh(Tensor([400, 5704254],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4096, 557057],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4353, 256, 2048],"float32"), None, )
paddle.nn.functional.tanh(Tensor([45634028, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([47535446, 48],"float32"), None, )
paddle.nn.functional.tanh(Tensor([48, 47535446],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4800, 475355],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4830, 472402],"float32"), None, )
paddle.nn.functional.tanh(Tensor([5, 456340276],"float32"), None, )
paddle.nn.functional.tanh(Tensor([512, 4456449],"float32"), None, )
paddle.nn.functional.tanh(Tensor([52, 43878873],"float32"), None, )
paddle.nn.functional.tanh(Tensor([56, 40744668],"float32"), None, )
paddle.nn.functional.tanh(Tensor([570425345, 4],"float32"), None, )
paddle.nn.functional.tanh(Tensor([6, 380283564],"float32"), None, )
paddle.nn.functional.tanh(Tensor([600, 3802836],"float32"), None, )
paddle.nn.functional.tanh(Tensor([63380594, 36],"float32"), None, )
paddle.nn.functional.tanh(Tensor([64, 35651585],"float32"), )
paddle.nn.functional.tanh(Tensor([64, 35651585],"float32"), None, )
paddle.nn.functional.tanh(Tensor([69278, 32936],"float32"), None, )
paddle.nn.functional.tanh(Tensor([7, 325957340],"float32"), None, )
paddle.nn.functional.tanh(Tensor([71303169, 32],"float32"), )
paddle.nn.functional.tanh(Tensor([71303169, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([76056713, 30],"float32"), None, )
paddle.nn.functional.tanh(Tensor([8000, 285213],"float32"), None, )
paddle.nn.functional.tanh(Tensor([8192, 278529],"float32"), )
paddle.nn.functional.tanh(Tensor([8192, 278529],"float32"), None, )
paddle.nn.functional.tanh(Tensor([8490, 268752],"float32"), None, )
paddle.nn.functional.tanh(Tensor([8912897, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([9330, 244556],"float32"), None, )
paddle.nn.functional.tanh(Tensor([93401, 24430],"float32"), None, )
paddle.nn.functional.tanh(Tensor([9420, 242219],"float32"), None, )
paddle.nn.functional.tanh(Tensor([95070891, 24],"float32"), )
paddle.nn.functional.tanh(Tensor([95070891, 24],"float32"), None, )
paddle.nn.functional.tanh(Tensor([96, 23767723],"float32"), None, )
paddle.nn.functional.tanh(Tensor([9801, 232803],"float32"), )
paddle.nn.functional.tanh(Tensor([9801, 232803],"float32"), None, )
paddle.nn.functional.tanh(Tensor([99, 23047489],"float32"), None, )
paddle.nn.functional.tanhshrink(Tensor([2281701379],"float32"), None, )
paddle.nn.functional.tanhshrink(Tensor([3, 3, 477218589],"float16"), None, )
paddle.nn.functional.tanhshrink(Tensor([3, 477218589, 3],"float16"), None, )
paddle.nn.functional.tanhshrink(Tensor([4294967297],"float16"), None, )
paddle.nn.functional.tanhshrink(Tensor([477218589, 3, 3],"float16"), None, )
paddle.nn.functional.tanhshrink(x=Tensor([2281701379],"float32"), )
paddle.nn.functional.tanhshrink(x=Tensor([3, 3, 477218589],"float16"), )
paddle.nn.functional.tanhshrink(x=Tensor([3, 477218589, 3],"float16"), )
paddle.nn.functional.tanhshrink(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.tanhshrink(x=Tensor([477218589, 3, 3],"float16"), )
paddle.nn.functional.temporal_shift(Tensor([128, 1024, 1244, 14],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 1024, 14, 1244],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 2048, 1244, 7],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 2048, 7, 1244],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 22737, 28, 28],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([128, 22737, 28, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 1244, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 2487, 28],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 28, 2487],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 56, 1244],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 363792, 7, 7],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 512, 1244, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 512, 28, 1244],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 5685, 56, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 64, 4974, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 64, 56, 4974],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 90948, 14, 14],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 1024, 14, 9948],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 1024, 9948, 14],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 181896, 28, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 2048, 7, 9948],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 2048, 9948, 7],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 256, 19895, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 256, 28, 19895],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 256, 56, 9948],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 256, 9948, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 2910334, 7, 7],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 45474, 56, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 512, 28, 9948],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 512, 9948, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 64, 39790, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 64, 56, 39790],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 727584, 14, 14],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 1024, 14, 664],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 1024, 664, 14],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 12127, 28, 28],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 194023, 7, 7],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 2048, 664, 7],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 2048, 7, 664],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 256, 56, 664],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 256, 664, 56],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 3032, 56, 56],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 48506, 14, 14],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 512, 28, 664],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 512, 664, 28],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 64, 2653, 56],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 64, 56, 2653],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([32, 256, 28, 9948],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([32, 256, 9948, 28],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([32, 90948, 28, 28],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([64, 1024, 14, 2487],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 1024, 2487, 14],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 11369, 56, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 181896, 14, 14],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 2048, 2487, 7],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 2048, 7, 2487],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 256, 2487, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 256, 28, 4974],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 256, 4974, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 256, 56, 2487],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 45474, 28, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 512, 2487, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 512, 28, 2487],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 64, 56, 9948],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 64, 9948, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 727584, 7, 7],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(x=Tensor([119304648, 4, 3, 3],"float16"), seg_num=4, )
paddle.nn.functional.temporal_shift(x=Tensor([4, 119304648, 3, 3],"float16"), seg_num=4, )
paddle.nn.functional.temporal_shift(x=Tensor([4, 4, 3, 89478486],"float16"), seg_num=4, )
paddle.nn.functional.temporal_shift(x=Tensor([4, 4, 89478486, 3],"float16"), seg_num=4, )
paddle.nn.functional.thresholded_relu(Tensor([10, 1, 143165577, 3],"float16"), -1, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 1, 143165577, 3],"float16"), 0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 1, 4, 107374183],"float16"), -1, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 1, 4, 107374183],"float16"), 0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 35791395, 4, 3],"float16"), -1, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 35791395, 4, 3],"float16"), 0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 2535224, 3, 3],"float32"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 1901418, 3],"float32"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 3, 1901418],"float32"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 3, 3579140],"float16"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 3579140, 3],"float16"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4772186, 3, 3],"float16"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([119304648, 4, 3, 3],"float16"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([357913942, 1, 4, 3],"float16"), -1, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([357913942, 1, 4, 3],"float16"), 0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([63380594, 4, 3, 3],"float32"), 1.0, 0.0, None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), margin=0.3, swap=False, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), margin=0.3, swap=False, reduction="none", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), margin=0.3, swap=False, reduction="sum", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), margin=0.3, swap=True, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), margin=0.3, swap=False, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), margin=0.3, swap=False, reduction="sum", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 858993460],"float16"), positive=Tensor([5, 858993460],"float16"), negative=Tensor([5, 858993460],"float16"), distance_function=None, margin=0.3, swap=False, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 858993460],"float16"), positive=Tensor([5, 858993460],"float16"), negative=Tensor([5, 858993460],"float16"), distance_function=None, margin=0.3, swap=False, reduction="none", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 858993460],"float16"), positive=Tensor([5, 858993460],"float16"), negative=Tensor([5, 858993460],"float16"), distance_function=None, margin=0.3, swap=False, reduction="sum", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 858993460],"float16"), positive=Tensor([5, 858993460],"float16"), negative=Tensor([5, 858993460],"float16"), distance_function=None, margin=0.3, swap=True, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([858993460, 5],"float16"), positive=Tensor([858993460, 5],"float16"), negative=Tensor([858993460, 5],"float16"), distance_function=None, margin=0.3, swap=False, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([858993460, 5],"float16"), positive=Tensor([858993460, 5],"float16"), negative=Tensor([858993460, 5],"float16"), distance_function=None, margin=0.3, swap=False, reduction="sum", )
paddle.nn.functional.unfold(Tensor([14316558, 3, 10, 10],"float16"), kernel_sizes=3, strides=1, paddings=0, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([14316558, 3, 10, 10],"float16"), kernel_sizes=list[2,4,], strides=2, paddings=1, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([14316558, 3, 10, 10],"float16"), kernel_sizes=list[3,3,], strides=1, paddings=0, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([15158, 3, 224, 224],"float32"), 16, 16, )
paddle.nn.functional.unfold(Tensor([64, 3, 224, 53053],"float32"), 16, 16, )
paddle.nn.functional.unfold(Tensor([64, 3, 53053, 224],"float32"), 16, 16, )
paddle.nn.functional.unfold(Tensor([64, 711, 224, 224],"float32"), 16, 16, )
paddle.nn.functional.unfold(Tensor([7605672, 3, 10, 10],"float32"), kernel_sizes=3, strides=1, paddings=0, dilations=1, name=None, )
paddle.nn.functional.unfold(x=Tensor([14316558, 3, 10, 10],"float16"), kernel_sizes=3, )
paddle.nn.functional.unfold(x=Tensor([14316558, 3, 10, 10],"float16"), kernel_sizes=list[2,4,], paddings=1, strides=2, )
paddle.nn.functional.unfold(x=Tensor([14316558, 3, 10, 10],"float16"), kernel_sizes=list[3,3,], )
paddle.nn.functional.unfold(x=Tensor([7605672, 3, 10, 10],"float32"), kernel_sizes=3, )
paddle.nn.functional.zeropad2d(Tensor([15158, 3, 224, 224],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([15158, 3, 224, 224],"int32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 11369, 224, 224],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 11369, 224, 224],"int32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 848848],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 848848],"int32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 848848, 224],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 848848, 224],"int32"), list[2,2,2,2,], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([10, 15],"float32"),Tensor([15],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([10, 3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([2, 2],"float32"),Tensor([2],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([3, 2, 4, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([3, 2, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([3, 2, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nonzero(Tensor([1, 2, 28, 40744668],"float32"), )
paddle.nonzero(Tensor([1, 2, 40744668, 28],"float32"), )
paddle.nonzero(Tensor([1, 2281701379],"float32"), )
paddle.nonzero(Tensor([1, 2281701379],"int32"), )
paddle.nonzero(Tensor([1, 2910334, 28, 28],"float32"), )
paddle.nonzero(Tensor([10, 2, 28, 4074467],"float32"), )
paddle.nonzero(Tensor([10, 2, 4074467, 28],"float32"), )
paddle.nonzero(Tensor([10, 228170138],"bool"), )
paddle.nonzero(Tensor([10, 228170138],"float32"), as_tuple=False, )
paddle.nonzero(Tensor([10, 228170138],"int32"), )
paddle.nonzero(Tensor([10, 291034, 28, 28],"float32"), )
paddle.nonzero(Tensor([1048576, 2177],"bool"), )
paddle.nonzero(Tensor([106, 80, 28, 9610],"float32"), )
paddle.nonzero(Tensor([106, 80, 9610, 28],"float32"), )
paddle.nonzero(Tensor([11, 2, 14, 7408122],"float32"), )
paddle.nonzero(Tensor([11, 2, 28, 3704061],"float32"), )
paddle.nonzero(Tensor([11, 2, 7408122, 14],"float32"), )
paddle.nonzero(Tensor([11, 207427399],"int32"), )
paddle.nonzero(Tensor([11, 264576, 28, 28],"float32"), )
paddle.nonzero(Tensor([110, 80, 28, 9261],"float32"), )
paddle.nonzero(Tensor([112, 80, 14, 18190],"float32"), )
paddle.nonzero(Tensor([114, 80, 14, 17871],"float32"), )
paddle.nonzero(Tensor([114, 80, 17871, 14],"float32"), )
paddle.nonzero(Tensor([11408507, 200],"float32"), )
paddle.nonzero(Tensor([116, 100357, 14, 14],"float32"), )
paddle.nonzero(Tensor([116, 25090, 28, 28],"float32"), )
paddle.nonzero(Tensor([116, 80, 14, 17563],"float32"), )
paddle.nonzero(Tensor([116, 80, 8782, 28],"float32"), )
paddle.nonzero(Tensor([11641334, 196],"float32"), )
paddle.nonzero(Tensor([117, 24875, 28, 28],"float32"), )
paddle.nonzero(Tensor([117, 80, 28, 8707],"float32"), )
paddle.nonzero(Tensor([117, 80, 8707, 28],"float32"), )
paddle.nonzero(Tensor([11883862, 192],"float32"), )
paddle.nonzero(Tensor([119, 80, 28, 8560],"float32"), )
paddle.nonzero(Tensor([119, 80, 8560, 28],"float32"), )
paddle.nonzero(Tensor([12, 190141782],"float32"), )
paddle.nonzero(Tensor([12, 190141782],"int32"), )
paddle.nonzero(Tensor([12, 2, 28, 3395389],"float32"), )
paddle.nonzero(Tensor([12, 2, 6790778, 14],"float32"), )
paddle.nonzero(Tensor([120, 80, 14, 16977],"float32"), )
paddle.nonzero(Tensor([123, 80, 8282, 28],"float32"), )
paddle.nonzero(Tensor([124, 23471, 28, 28],"float32"), )
paddle.nonzero(Tensor([124, 80, 16430, 14],"float32"), )
paddle.nonzero(Tensor([124, 93882, 14, 14],"float32"), )
paddle.nonzero(Tensor([126, 23098, 28, 28],"float32"), )
paddle.nonzero(Tensor([126, 80, 28, 8085],"float32"), )
paddle.nonzero(Tensor([127, 22917, 28, 28],"float32"), )
paddle.nonzero(Tensor([127, 80, 8021, 28],"float32"), )
paddle.nonzero(Tensor([128, 80, 28, 7958],"float32"), )
paddle.nonzero(Tensor([129, 22561, 28, 28],"float32"), )
paddle.nonzero(Tensor([13, 2, 28, 3134206],"float32"), )
paddle.nonzero(Tensor([13, 2, 3134206, 28],"float32"), )
paddle.nonzero(Tensor([13, 223872, 28, 28],"float32"), )
paddle.nonzero(Tensor([130, 22388, 28, 28],"float32"), )
paddle.nonzero(Tensor([130, 80, 28, 7836],"float32"), )
paddle.nonzero(Tensor([130, 80, 7836, 28],"float32"), )
paddle.nonzero(Tensor([131, 80, 14, 15552],"float32"), )
paddle.nonzero(Tensor([131, 80, 15552, 14],"float32"), )
paddle.nonzero(Tensor([131, 88866, 14, 14],"float32"), )
paddle.nonzero(Tensor([1455167, 2, 28, 28],"float32"), )
paddle.nonzero(Tensor([145517, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([175515491, 13],"float32"), )
paddle.nonzero(Tensor([2281701379, 1],"bool"), )
paddle.nonzero(Tensor([2281701379, 1],"int32"), )
paddle.nonzero(Tensor([2281701379],"bool"), )
paddle.nonzero(Tensor([2281701379],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([2281701379],"float32"), )
paddle.nonzero(Tensor([2281701379],"int32"), True, )
paddle.nonzero(Tensor([228170138, 10],"bool"), )
paddle.nonzero(Tensor([228170138, 10],"float32"), )
paddle.nonzero(Tensor([228170138, 10],"float32"), as_tuple=False, )
paddle.nonzero(Tensor([22817014, 100],"float32"), )
paddle.nonzero(Tensor([3, 760567127],"float32"), True, )
paddle.nonzero(Tensor([36380, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([51856850, 44],"float32"), )
paddle.nonzero(Tensor([53062823, 43],"float32"), )
paddle.nonzero(Tensor([54326224, 42],"float32"), )
paddle.nonzero(Tensor([55651254, 41],"float32"), )
paddle.nonzero(Tensor([57042535, 40],"float32"), )
paddle.nonzero(Tensor([5820667, 2, 14, 14],"float32"), )
paddle.nonzero(Tensor([63380594, 36],"float32"), )
paddle.nonzero(Tensor([65191468, 35],"float32"), )
paddle.nonzero(Tensor([67108865, 34],"float32"), )
paddle.nonzero(Tensor([69142467, 33],"float32"), )
paddle.nonzero(Tensor([71303169, 32],"float32"), )
paddle.nonzero(Tensor([73603271, 31],"float32"), )
paddle.nonzero(Tensor([760567127, 3],"float32"), True, )
paddle.nonzero(Tensor([76056713, 30],"float32"), )
paddle.nonzero(Tensor([78679358, 29],"float32"), )
paddle.nonzero(Tensor([81489335, 28],"float32"), )
paddle.nonzero(Tensor([87757746, 26],"float32"), )
paddle.nonzero(Tensor([91268056, 25],"float32"), )
paddle.nonzero(Tensor([95070891, 24],"float32"), )
paddle.nonzero(Tensor([99204408, 23],"float32"), )
paddle.nonzero(x=Tensor([114085069, 10, 2],"float32"), )
paddle.nonzero(x=Tensor([1431655766, 3],"float16"), as_tuple=False, )
paddle.nonzero(x=Tensor([2, 10, 114085069],"float32"), )
paddle.nonzero(x=Tensor([2, 570425345, 2],"float32"), )
paddle.nonzero(x=Tensor([3, 108652447, 7],"float32"), )
paddle.nonzero(x=Tensor([3, 1431655766],"float16"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 4, 190141782],"float32"), )
paddle.nonzero(x=Tensor([3, 760567127],"float32"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 760567127],"int32"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 760567127],"int64"), as_tuple=False, )
paddle.nonzero(x=Tensor([4294967297],"float16"), as_tuple=False, )
paddle.nonzero(x=Tensor([536870913, 8],"float16"), )
paddle.nonzero(x=Tensor([760567127, 3],"float32"), as_tuple=False, )
paddle.nonzero(x=Tensor([760567127, 3],"int32"), as_tuple=False, )
paddle.nonzero(x=Tensor([760567127, 3],"int64"), as_tuple=False, )
paddle.nonzero(x=Tensor([8, 536870913],"float16"), )
paddle.nonzero(x=Tensor([81489335, 4, 7],"float32"), )
paddle.not_equal(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.not_equal(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.not_equal(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.not_equal(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.not_equal(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.not_equal(Tensor([13, 175515491],"int64"), Tensor([13, 175515491],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 4, 1371215],"int64"), Tensor([13, 2, 16, 1, 1371215],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 5484860],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 5484860, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.not_equal(Tensor([14, 162978670],"int32"), Tensor([14, 162978670],"int32"), )
paddle.not_equal(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.not_equal(Tensor([325957340, 7],"int32"), Tensor([325957340, 7],"int32"), )
paddle.not_equal(Tensor([325957340, 7],"int64"), Tensor([325957340, 7],"int64"), )
paddle.not_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.not_equal(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.not_equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 1431655766, 3],"float16"), y=Tensor([1, 1, 1, 1, 1431655766, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 1431655766],"float16"), y=Tensor([1, 1, 1, 1, 3, 1431655766],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float16"), y=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float16"), y=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float16"), y=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float16"), y=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), y=Tensor([1, 1, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), y=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), y=Tensor([3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), y=Tensor([1, 1, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), y=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), y=Tensor([3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1431655766, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 2, 1, 3],"float16"), y=Tensor([1, 1431655766, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.not_equal(x=Tensor([1, 3],"float16"), y=Tensor([1, 1, 1, 1431655766, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 3],"float16"), y=Tensor([1, 1, 477218589, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 3],"float16"), y=Tensor([1, 477218589, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 3],"float16"), y=Tensor([477218589, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), y=Tensor([1, 1, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), y=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), y=Tensor([3, 3],"float16"), )
paddle.not_equal(x=Tensor([1431655766, 3],"float16"), y=Tensor([1, 3],"float16"), )
paddle.not_equal(x=Tensor([1431655766, 3],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.not_equal(x=Tensor([1431655766, 3],"float16"), y=Tensor([3],"float16"), )
paddle.not_equal(x=Tensor([1],"float16"), y=Tensor([4294967297],"float16"), )
paddle.not_equal(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.not_equal(x=Tensor([3, 1431655766],"float16"), y=Tensor([1, 1431655766],"float16"), )
paddle.not_equal(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.not_equal(x=Tensor([3, 760567127],"float32"), y=Tensor([3, 760567127],"float32"), )
paddle.not_equal(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.not_equal(x=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), y=Tensor([1, 1, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), y=Tensor([3, 3],"float16"), )
paddle.not_equal(x=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), y=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([715827883, 2, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.not_equal(x=Tensor([760567127, 3],"float32"), y=Tensor([760567127, 3],"float32"), )
paddle.numel(Tensor([1, 1, 2281701379],"float32"), )
paddle.numel(Tensor([1, 1, 4294967297],"float16"), )
paddle.numel(Tensor([1, 10, 228170138],"float32"), )
paddle.numel(Tensor([1, 107374183, 4, 10],"float16"), )
paddle.numel(Tensor([1, 11, 207427399],"float32"), )
paddle.numel(Tensor([1, 12, 190141782],"float32"), )
paddle.numel(Tensor([1, 13, 175515491],"float32"), )
paddle.numel(Tensor([1, 14, 162978670],"float32"), )
paddle.numel(Tensor([1, 1431655766, 3],"float16"), )
paddle.numel(Tensor([1, 16, 142606337],"float32"), )
paddle.numel(Tensor([1, 2, 1140850690],"float32"), )
paddle.numel(Tensor([1, 2281701379, 1],"float32"), )
paddle.numel(Tensor([1, 2281701379],"float32"), )
paddle.numel(Tensor([1, 3, 1431655766],"float16"), )
paddle.numel(Tensor([1, 3, 143165577, 10],"float16"), )
paddle.numel(Tensor([1, 3, 4, 190141782],"float32"), )
paddle.numel(Tensor([1, 3, 4, 357913942],"float16"), )
paddle.numel(Tensor([1, 3, 760567127],"float32"), )
paddle.numel(Tensor([1, 3, 76056713, 10],"float32"), )
paddle.numel(Tensor([1, 4, 570425345],"float32"), )
paddle.numel(Tensor([1, 4, 570425345],"int32"), )
paddle.numel(Tensor([1, 42253730, 54],"float32"), )
paddle.numel(Tensor([1, 4294967297],"float16"), )
paddle.numel(Tensor([1, 429496730, 10],"float16"), )
paddle.numel(Tensor([1, 456340276, 5],"int32"), )
paddle.numel(Tensor([1, 5, 456340276],"float32"), )
paddle.numel(Tensor([1, 50704476, 45],"float32"), )
paddle.numel(Tensor([1, 57042535, 4, 10],"float32"), )
paddle.numel(Tensor([1, 63380594, 36],"float32"), )
paddle.numel(Tensor([1000, 2281702],"float32"), )
paddle.numel(Tensor([100000, 42950],"float16"), )
paddle.numel(Tensor([1000000, 4295],"float16"), )
paddle.numel(Tensor([10563433, 24, 3, 3],"float32"), )
paddle.numel(Tensor([1073741825, 4],"float16"), )
paddle.numel(Tensor([114085069, 1, 4, 5],"int32"), )
paddle.numel(Tensor([114085069, 4, 5],"int32"), )
paddle.numel(Tensor([1140850690, 2, 1],"float32"), )
paddle.numel(Tensor([1140850690, 2],"float32"), )
paddle.numel(Tensor([11883862, 192, 1, 1],"float32"), )
paddle.numel(Tensor([139265, 2, 1, 512, 4, 4],"float32"), )
paddle.numel(Tensor([142606337, 16, 1, 1],"float32"), )
paddle.numel(Tensor([142606337, 16, 1],"float32"), )
paddle.numel(Tensor([1431655766, 1, 3],"float16"), )
paddle.numel(Tensor([1431655766, 3],"float16"), )
paddle.numel(Tensor([143165577, 3, 10],"float16"), )
paddle.numel(Tensor([1444, 1580126],"float32"), )
paddle.numel(Tensor([15845149, 16, 3, 3],"float32"), )
paddle.numel(Tensor([15845149, 4, 36],"float32"), )
paddle.numel(Tensor([16, 1, 1, 142606337],"float32"), )
paddle.numel(Tensor([16, 1, 142606337, 1],"float32"), )
paddle.numel(Tensor([16, 142606337, 1, 1],"float32"), )
paddle.numel(Tensor([16, 142606337],"float32"), )
paddle.numel(Tensor([16, 15845149, 3, 3],"float32"), )
paddle.numel(Tensor([16, 16, 2970966, 3],"float32"), )
paddle.numel(Tensor([16, 16, 3, 2970966],"float32"), )
paddle.numel(Tensor([16, 268435457],"float16"), )
paddle.numel(Tensor([16, 32, 1, 4456449],"float32"), )
paddle.numel(Tensor([16, 32, 4456449, 1],"float32"), )
paddle.numel(Tensor([16, 8, 1, 17825793],"float32"), )
paddle.numel(Tensor([16, 8, 17825793, 1],"float32"), )
paddle.numel(Tensor([162978670, 14, 1],"float32"), )
paddle.numel(Tensor([16777217, 256],"float16"), )
paddle.numel(Tensor([175515491, 13, 1],"float32"), )
paddle.numel(Tensor([190141782, 12, 1],"float32"), )
paddle.numel(Tensor([19014179, 3, 4, 10],"float32"), )
paddle.numel(Tensor([192, 1, 1, 11883862],"float32"), )
paddle.numel(Tensor([192, 1, 11883862, 1],"float32"), )
paddle.numel(Tensor([192, 11883862, 1, 1],"float32"), )
paddle.numel(Tensor([192, 48, 1, 247581],"float32"), )
paddle.numel(Tensor([192, 48, 247581, 1],"float32"), )
paddle.numel(Tensor([192, 96, 1, 123791],"float32"), )
paddle.numel(Tensor([192, 96, 123791, 1],"float32"), )
paddle.numel(Tensor([2, 1, 228170138, 5],"int32"), )
paddle.numel(Tensor([2, 1, 4, 285212673],"int32"), )
paddle.numel(Tensor([2, 1, 512, 4, 557057],"float32"), )
paddle.numel(Tensor([2, 1, 512, 557057, 4],"float32"), )
paddle.numel(Tensor([2, 1, 71303169, 4, 4],"float32"), )
paddle.numel(Tensor([2, 1140850690],"bool"), )
paddle.numel(Tensor([2, 1140850690],"float32"), )
paddle.numel(Tensor([2, 139265, 512, 4, 4],"float32"), )
paddle.numel(Tensor([2, 2147483649],"float16"), )
paddle.numel(Tensor([2, 57042535, 4, 5],"int32"), )
paddle.numel(Tensor([207427399, 11, 1],"float32"), )
paddle.numel(Tensor([21126865, 3, 36],"float32"), )
paddle.numel(Tensor([2228225, 1024],"float32"), )
paddle.numel(Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.numel(Tensor([2281701379, 1, 1],"float32"), )
paddle.numel(Tensor([2281701379, 1],"float32"), )
paddle.numel(Tensor([2281701379],"bool"), )
paddle.numel(Tensor([2281701379],"float32"), )
paddle.numel(Tensor([228170138, 10, 1],"float32"), )
paddle.numel(Tensor([23767723, 96, 1, 1],"float32"), )
paddle.numel(Tensor([24, 1, 1, 95070891],"float32"), )
paddle.numel(Tensor([24, 1, 95070891, 1],"float32"), )
paddle.numel(Tensor([24, 10563433, 3, 3],"float32"), )
paddle.numel(Tensor([24, 24, 1320430, 3],"float32"), )
paddle.numel(Tensor([24, 24, 3, 1320430],"float32"), )
paddle.numel(Tensor([24, 64, 1, 1485483],"float32"), )
paddle.numel(Tensor([24, 64, 1485483, 1],"float32"), )
paddle.numel(Tensor([24, 95070891, 1, 1],"float32"), )
paddle.numel(Tensor([24, 96, 1, 990322],"float32"), )
paddle.numel(Tensor([24, 96, 990322, 1],"float32"), )
paddle.numel(Tensor([278529, 1, 512, 4, 4],"float32"), )
paddle.numel(Tensor([285212673, 8, 1, 1],"float32"), )
paddle.numel(Tensor([2910334, 784],"float32"), )
paddle.numel(Tensor([3, 1431655766],"float16"), )
paddle.numel(Tensor([3, 760567127],"float32"), )
paddle.numel(Tensor([31690297, 2, 36],"float32"), )
paddle.numel(Tensor([32, 1, 1, 71303169],"float32"), )
paddle.numel(Tensor([32, 1, 71303169, 1],"float32"), )
paddle.numel(Tensor([32, 16, 1, 4456449],"float32"), )
paddle.numel(Tensor([32, 16, 4456449, 1],"float32"), )
paddle.numel(Tensor([32, 71303169, 1, 1],"float32"), )
paddle.numel(Tensor([32, 71303169],"float32"), )
paddle.numel(Tensor([32, 8, 1, 8912897],"float32"), )
paddle.numel(Tensor([32, 8, 8912897, 1],"float32"), )
paddle.numel(Tensor([35651585, 64, 1, 1],"float32"), )
paddle.numel(Tensor([35791395, 3, 4, 10],"float16"), )
paddle.numel(Tensor([36, 63380594],"float32"), )
paddle.numel(Tensor([38, 60044774],"float32"), )
paddle.numel(Tensor([384, 1, 1, 5941931],"float32"), )
paddle.numel(Tensor([384, 1, 5941931, 1],"float32"), )
paddle.numel(Tensor([384, 192, 1, 30948],"float32"), )
paddle.numel(Tensor([384, 192, 30948, 1],"float32"), )
paddle.numel(Tensor([384, 5941931, 1, 1],"float32"), )
paddle.numel(Tensor([384, 96, 1, 61896],"float32"), )
paddle.numel(Tensor([384, 96, 61896, 1],"float32"), )
paddle.numel(Tensor([3961288, 16, 36],"float32"), )
paddle.numel(Tensor([4, 2, 1, 17825793, 4, 4],"float32"), )
paddle.numel(Tensor([4, 2, 1, 512, 139265, 4],"float32"), )
paddle.numel(Tensor([4, 2, 1, 512, 4, 139265],"float32"), )
paddle.numel(Tensor([4, 2, 34817, 512, 4, 4],"float32"), )
paddle.numel(Tensor([4, 570425345],"float32"), )
paddle.numel(Tensor([4, 69633, 1, 512, 4, 4],"float32"), )
paddle.numel(Tensor([42253730, 1, 54],"float32"), )
paddle.numel(Tensor([4294967297, 1],"float16"), )
paddle.numel(Tensor([4294967297],"float16"), )
paddle.numel(Tensor([429496730, 10],"float16"), )
paddle.numel(Tensor([4527186, 14, 36],"float32"), )
paddle.numel(Tensor([456340276, 5, 1],"float32"), )
paddle.numel(Tensor([456340276, 5],"float32"), )
paddle.numel(Tensor([47535446, 48, 1, 1],"float32"), )
paddle.numel(Tensor([48, 1, 1, 47535446],"float32"), )
paddle.numel(Tensor([48, 1, 47535446, 1],"float32"), )
paddle.numel(Tensor([48, 192, 1, 247581],"float32"), )
paddle.numel(Tensor([48, 192, 247581, 1],"float32"), )
paddle.numel(Tensor([48, 47535446, 1, 1],"float32"), )
paddle.numel(Tensor([48, 48, 3, 330108],"float32"), )
paddle.numel(Tensor([48, 48, 330108, 3],"float32"), )
paddle.numel(Tensor([48, 5281717, 3, 3],"float32"), )
paddle.numel(Tensor([48, 96, 1, 495161],"float32"), )
paddle.numel(Tensor([48, 96, 495161, 1],"float32"), )
paddle.numel(Tensor([4875431, 13, 36],"float32"), )
paddle.numel(Tensor([5000, 456341],"float32"), )
paddle.numel(Tensor([5000, 858994],"float16"), )
paddle.numel(Tensor([50000, 45635],"float32"), )
paddle.numel(Tensor([50704476, 1, 45],"float32"), )
paddle.numel(Tensor([5281717, 12, 36],"float32"), )
paddle.numel(Tensor([5281717, 48, 3, 3],"float32"), )
paddle.numel(Tensor([570425345, 4, 1],"float32"), )
paddle.numel(Tensor([570425345, 4],"float32"), )
paddle.numel(Tensor([5761873, 11, 36],"float32"), )
paddle.numel(Tensor([63380594, 1, 36],"float32"), )
paddle.numel(Tensor([6338060, 10, 36],"float32"), )
paddle.numel(Tensor([64, 1, 1, 35651585],"float32"), )
paddle.numel(Tensor([64, 1, 35651585, 1],"float32"), )
paddle.numel(Tensor([64, 16, 1, 2228225],"float32"), )
paddle.numel(Tensor([64, 16, 2228225, 1],"float32"), )
paddle.numel(Tensor([64, 35651585, 1, 1],"float32"), )
paddle.numel(Tensor([71303169, 32, 1, 1],"float32"), )
paddle.numel(Tensor([71303169, 32],"float32"), )
paddle.numel(Tensor([760567127, 3, 1],"float32"), )
paddle.numel(Tensor([760567127, 3],"bool"), )
paddle.numel(Tensor([760567127, 3],"float32"), )
paddle.numel(Tensor([8912897, 256],"float32"), )
paddle.numel(Tensor([891290, 2560],"float32"), )
paddle.numel(Tensor([990322, 2304],"float32"), )
paddle.numel(x=Tensor([4, 1073741825],"float16"), )
paddle.numel(x=Tensor([4, 570425345],"float32"), )
paddle.numel(x=Tensor([4, 570425345],"int32"), )
paddle.numel(x=Tensor([4, 570425345],"int64"), )
paddle.numel(x=Tensor([456340276, 5],"float32"), )
paddle.numel(x=Tensor([456340276, 5],"int32"), )
paddle.numel(x=Tensor([456340276, 5],"int64"), )
paddle.numel(x=Tensor([858993460, 5],"float16"), )
paddle.ones_like(Tensor([1, 1, 2281701379],"int32"), dtype=VarType(float32), )
paddle.ones_like(Tensor([1, 10, 114085069, 2],"float32"), )
paddle.ones_like(Tensor([1, 10, 8, 28521268],"float32"), )
paddle.ones_like(Tensor([1, 1024, 2228225],"float32"), )
paddle.ones_like(Tensor([1, 12, 9, 21126865],"float32"), )
paddle.ones_like(Tensor([1, 12, 95070891, 2],"float32"), )
paddle.ones_like(Tensor([1, 126761188, 9, 2],"float32"), )
paddle.ones_like(Tensor([1, 128, 1114113, 16],"float32"), )
paddle.ones_like(Tensor([1, 128, 17825793],"float32"), )
paddle.ones_like(Tensor([1, 128, 8, 2228225],"float32"), )
paddle.ones_like(Tensor([1, 142606337, 8, 2],"float32"), )
paddle.ones_like(Tensor([1, 144, 200, 79226],"float32"), )
paddle.ones_like(Tensor([1, 144, 7922575, 2],"float32"), )
paddle.ones_like(Tensor([1, 15, 15, 10140896],"float32"), )
paddle.ones_like(Tensor([1, 15, 76056713, 2],"float32"), )
paddle.ones_like(Tensor([1, 16, 16, 8912897],"float32"), )
paddle.ones_like(Tensor([1, 16, 71303169, 2],"float32"), )
paddle.ones_like(Tensor([1, 17, 17, 7895161],"float32"), )
paddle.ones_like(Tensor([1, 17, 67108865, 2],"float32"), )
paddle.ones_like(Tensor([1, 17825793, 128],"float32"), )
paddle.ones_like(Tensor([1, 17825793, 8, 16],"float32"), )
paddle.ones_like(Tensor([1, 18, 18, 7042289],"float32"), )
paddle.ones_like(Tensor([1, 18, 25, 5070448],"float32"), )
paddle.ones_like(Tensor([1, 18, 63380594, 2],"float32"), )
paddle.ones_like(Tensor([1, 192, 144, 82527],"float32"), )
paddle.ones_like(Tensor([1, 192, 5941931, 2],"float32"), )
paddle.ones_like(Tensor([1, 20, 15, 7605672],"float32"), )
paddle.ones_like(Tensor([1, 20, 20, 5704254],"float32"), )
paddle.ones_like(Tensor([1, 20, 57042535, 2],"float32"), )
paddle.ones_like(Tensor([1, 2147483649, 2],"float16"), dtype="float64", )
paddle.ones_like(Tensor([1, 2281701379, 1],"float32"), )
paddle.ones_like(Tensor([1, 2281701379, 1],"int32"), dtype=VarType(float32), )
paddle.ones_like(Tensor([1, 2281701379],"int32"), )
paddle.ones_like(Tensor([1, 2281701379],"int64"), dtype="bool", )
paddle.ones_like(Tensor([1, 2281701379],"int64"), dtype="int64", )
paddle.ones_like(Tensor([1, 2281701379],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([1, 285212673, 2, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([1, 3, 1431655766],"float16"), dtype="float64", )
paddle.ones_like(Tensor([1, 3, 190141782, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([1, 3, 2, 380283564],"float32"), dtype="float32", )
paddle.ones_like(Tensor([1, 4096, 557057],"float32"), )
paddle.ones_like(Tensor([1, 45634028, 25, 2],"float32"), )
paddle.ones_like(Tensor([1, 57042535, 20, 2],"float32"), )
paddle.ones_like(Tensor([1, 5704254, 200, 2],"float32"), )
paddle.ones_like(Tensor([1, 58, 39339679],"float32"), )
paddle.ones_like(Tensor([1, 63380594, 18, 2],"float32"), )
paddle.ones_like(Tensor([1, 67108865, 17, 2],"float32"), )
paddle.ones_like(Tensor([1, 71303169, 16, 2],"float32"), )
paddle.ones_like(Tensor([1, 76056713, 15, 2],"float32"), )
paddle.ones_like(Tensor([1, 7922575, 144, 2],"float32"), )
paddle.ones_like(Tensor([1, 8912897, 256],"float32"), )
paddle.ones_like(Tensor([10563433, 12, 9, 2],"float32"), )
paddle.ones_like(Tensor([1073741825, 2, 2],"float16"), dtype="float16", )
paddle.ones_like(Tensor([1073741825, 2, 2],"float16"), dtype="float64", )
paddle.ones_like(Tensor([108, 431161, 49],"float32"), )
paddle.ones_like(Tensor([108, 49, 431161],"float32"), )
paddle.ones_like(Tensor([110036, 144, 144],"float32"), )
paddle.ones_like(Tensor([114085069, 20],"int64"), dtype="int64", )
paddle.ones_like(Tensor([114085069, 20],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([12, 1320430, 144],"float32"), )
paddle.ones_like(Tensor([12, 144, 1320430],"float32"), )
paddle.ones_like(Tensor([12, 190141782],"int32"), dtype="int64", )
paddle.ones_like(Tensor([12, 3880445, 49],"float32"), )
paddle.ones_like(Tensor([12, 392, 485056],"float32"), )
paddle.ones_like(Tensor([12, 485056, 392],"float32"), )
paddle.ones_like(Tensor([12, 49, 3880445],"float32"), )
paddle.ones_like(Tensor([128, 17825793],"int64"), dtype="int64", )
paddle.ones_like(Tensor([128, 392, 45474],"float32"), )
paddle.ones_like(Tensor([128, 45474, 392],"float32"), )
paddle.ones_like(Tensor([13, 175515491, 1],"float32"), )
paddle.ones_like(Tensor([13, 175515491],"int32"), dtype="int64", )
paddle.ones_like(Tensor([13, 175515491],"int32"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([13, 175515491],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([13, 7, 25073642],"float32"), )
paddle.ones_like(Tensor([134217729, 32],"bfloat16"), dtype="bool", )
paddle.ones_like(Tensor([139265, 128, 128],"float32"), )
paddle.ones_like(Tensor([139265, 128, 8, 16],"float32"), )
paddle.ones_like(Tensor([14, 162978670],"int64"), dtype="int64", )
paddle.ones_like(Tensor([14, 162978670],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([14260634, 10, 8, 2],"float32"), )
paddle.ones_like(Tensor([1431655766, 3],"bfloat16"), dtype="bool", )
paddle.ones_like(Tensor([1431655766, 3],"float16"), dtype="bool", )
paddle.ones_like(Tensor([1431655766, 3],"float16"), dtype="float16", )
paddle.ones_like(Tensor([1431655766, 3],"float16"), dtype="float64", )
paddle.ones_like(Tensor([144, 392, 40422],"float32"), )
paddle.ones_like(Tensor([144, 40422, 392],"float32"), )
paddle.ones_like(Tensor([14849, 392, 392],"float32"), )
paddle.ones_like(Tensor([152113426, 3, 5],"float32"), dtype="float32", )
paddle.ones_like(Tensor([17825793, 128],"int64"), dtype="int64", )
paddle.ones_like(Tensor([190141782, 3, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 1, 5, 228170138],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 1, 570425345, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 1073741825, 2],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 1073741825, 2],"float16"), dtype="float64", )
paddle.ones_like(Tensor([2, 107374183, 5, 4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 107374183, 5, 4],"float16"), dtype="float64", )
paddle.ones_like(Tensor([2, 114085069, 5, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 1140850690],"bool"), dtype="bool", )
paddle.ones_like(Tensor([2, 1140850690],"float32"), dtype="bool", )
paddle.ones_like(Tensor([2, 1140850690],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 1140850690],"int32"), dtype="bool", )
paddle.ones_like(Tensor([2, 1140850690],"int64"), dtype="bool", )
paddle.ones_like(Tensor([2, 1140850690],"int64"), dtype="int64", )
paddle.ones_like(Tensor([2, 1140850690],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([2, 2, 1073741825],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 2, 1073741825],"float16"), dtype="float64", )
paddle.ones_like(Tensor([2, 2, 570425345],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 2147483649],"bfloat16"), dtype="bool", )
paddle.ones_like(Tensor([2, 2147483649],"float16"), dtype="bool", )
paddle.ones_like(Tensor([2, 2147483649],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 2147483649],"float16"), dtype="float64", )
paddle.ones_like(Tensor([2, 228170138, 5],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 285212673, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 178956971, 4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3, 178956971, 4],"float16"), dtype="float64", )
paddle.ones_like(Tensor([2, 3, 380283564],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 5, 143165577],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3, 5, 143165577],"float16"), dtype="float64", )
paddle.ones_like(Tensor([2, 3, 5, 76056713],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 715827883],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3, 715827883],"float16"), dtype="float64", )
paddle.ones_like(Tensor([2, 3, 95070891, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 380283564, 3],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 4, 536870913],"float16"), dtype="float64", )
paddle.ones_like(Tensor([2, 429496730, 5],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 429496730, 5],"float16"), dtype="float64", )
paddle.ones_like(Tensor([2, 5, 429496730],"float16"), dtype="float64", )
paddle.ones_like(Tensor([2, 536870913, 4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 536870913, 4],"float16"), dtype="float64", )
paddle.ones_like(Tensor([2, 570425345, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 57042535, 5, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 715827883, 3],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 715827883, 3],"float16"), dtype="float64", )
paddle.ones_like(Tensor([214748365, 5, 4],"float16"), dtype="float64", )
paddle.ones_like(Tensor([2228225, 1024, 1],"float32"), )
paddle.ones_like(Tensor([2254646, 1012],"int32"), )
paddle.ones_like(Tensor([2256876, 1011],"int32"), )
paddle.ones_like(Tensor([2259111, 1010],"int32"), )
paddle.ones_like(Tensor([2261350, 1009],"int32"), )
paddle.ones_like(Tensor([2263593, 1008],"int32"), )
paddle.ones_like(Tensor([286331154, 3, 5],"float16"), dtype="float16", )
paddle.ones_like(Tensor([286331154, 3, 5],"float16"), dtype="float64", )
paddle.ones_like(Tensor([325957340, 7, 1],"float32"), )
paddle.ones_like(Tensor([325957340, 7],"int32"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([325957340, 7],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([3521145, 18, 18, 2],"float32"), )
paddle.ones_like(Tensor([357913942, 3, 4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([357913942, 3, 4],"float16"), dtype="float64", )
paddle.ones_like(Tensor([357913942, 4, 3],"float16"), dtype="float64", )
paddle.ones_like(Tensor([380283564, 2, 3],"float32"), dtype="float32", )
paddle.ones_like(Tensor([380283564, 3, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([38028357, 3, 5, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([3802836, 20, 15, 2],"float32"), )
paddle.ones_like(Tensor([4294967297],"float16"), dtype="float16", )
paddle.ones_like(Tensor([4294967297],"float16"), dtype="float64", )
paddle.ones_like(Tensor([4456449, 16, 16, 2],"float32"), )
paddle.ones_like(Tensor([456340276, 5],"int64"), dtype="bool", )
paddle.ones_like(Tensor([5070448, 15, 15, 2],"float32"), )
paddle.ones_like(Tensor([557057, 4096, 1],"float32"), )
paddle.ones_like(x=Tensor([3, 3, 253522376],"bool"), )
paddle.polygamma(Tensor([2281701379],"float32"), 1, )
paddle.polygamma(Tensor([2281701379],"float32"), 3, )
paddle.positive(Tensor([10, 228170138],"float32"), )
paddle.positive(Tensor([2, 107374183, 4, 5],"float16"), )
paddle.positive(Tensor([2, 3, 143165577, 5],"float16"), )
paddle.positive(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.positive(Tensor([71582789, 3, 4, 5],"float16"), )
paddle.pow(Tensor([1, 107374183, 4, 10],"float16"), 2, )
paddle.pow(Tensor([1, 17825793, 128],"float32"), 3.0, )
paddle.pow(Tensor([1, 3, 143165577, 10],"float16"), 2, )
paddle.pow(Tensor([1, 3, 4, 357913942],"float16"), 2, )
paddle.pow(Tensor([1, 3, 76056713, 10],"float32"), 2, )
paddle.pow(Tensor([2147483649, 2],"float16"), 1, )
paddle.pow(Tensor([2228225, 1024],"float32"), 2, )
paddle.pow(Tensor([35791395, 3, 4, 10],"float16"), 2, )
paddle.pow(Tensor([4294967297],"float16"), 3, )
paddle.pow(Tensor([4294967297],"float16"), 8.902181874411676, )
paddle.pow(Tensor([5, 858993460],"float16"), 1, )
paddle.pow(Tensor([50704476, 1, 45],"float32"), 2, )
paddle.pow(x=Tensor([1073741825, 2, 2],"float16"), y=0, )
paddle.pow(x=Tensor([2, 1073741825, 2],"float16"), y=0, )
paddle.pow(x=Tensor([2, 2, 1073741825],"float16"), y=0, )
paddle.prod(Tensor([10, 10, 22817014],"float32"), )
paddle.prod(Tensor([10, 10, 22817014],"float32"), axis=1, )
paddle.prod(Tensor([71582789, 6, 10],"float16"), list[0,], False, )
paddle.put_along_axis(Tensor([2281701379],"float32"), Tensor([1],"int64"), Tensor([1],"float32"), 0, "assign", )
paddle.put_along_axis(Tensor([4294967297],"float16"), Tensor([1],"int64"), Tensor([1],"float16"), 0, "assign", )
paddle.put_along_axis(Tensor([456340276, 5],"float32"), Tensor([1, 4],"int64"), Tensor([2, 5],"float32"), 0, "add", True, False, )
paddle.put_along_axis(Tensor([456340276, 5],"float32"), Tensor([1, 4],"int64"), Tensor([2, 5],"float32"), 0, "assign", True, False, )
paddle.put_along_axis(Tensor([456340276, 5],"float32"), Tensor([1, 4],"int64"), Tensor([2, 5],"float32"), 0, "mul", True, False, )
paddle.put_along_axis(Tensor([456340276, 5],"float32"), Tensor([2, 3],"int64"), Tensor([2, 5],"float32"), 1, "add", True, False, )
paddle.put_along_axis(Tensor([456340276, 5],"float32"), Tensor([2, 3],"int64"), Tensor([2, 5],"float32"), 1, "mul", True, False, )
paddle.put_along_axis(Tensor([4],"float16"), Tensor([1],"int64"), Tensor([4294967297],"float16"), 0, "assign", )
paddle.put_along_axis(Tensor([4],"float32"), Tensor([1],"int64"), Tensor([2281701379],"float32"), 0, "assign", )
paddle.remainder(Tensor([1, 2, 3, 143165577, 5],"float16"), Tensor([1, 2, 3, 143165577, 5],"float16"), )
paddle.remainder(Tensor([1, 3, 286331154, 5],"float16"), Tensor([2, 1, 286331154, 1],"float16"), )
paddle.remainder(Tensor([2, 3, 143165577, 5],"float16"), Tensor([1, 1, 5],"float16"), )
paddle.roll(x=Tensor([1431655766, 3],"float16"), shifts=1, axis=None, )
paddle.row_stack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.rsqrt(Tensor([1, 7, 325957340],"float32"), )
paddle.rsqrt(Tensor([10, 228170138, 1],"float32"), )
paddle.rsqrt(Tensor([10000, 143166, 3],"float16"), )
paddle.rsqrt(Tensor([10000, 2, 114086],"float32"), )
paddle.rsqrt(Tensor([10000, 2, 214749],"float16"), )
paddle.rsqrt(Tensor([10000, 76057, 3],"float32"), )
paddle.rsqrt(Tensor([1114113, 2048, 1],"float32"), )
paddle.rsqrt(Tensor([114085069, 20, 1],"float32"), )
paddle.rsqrt(Tensor([1140850690, 2, 1],"float32"), )
paddle.rsqrt(Tensor([12, 17, 11184811],"float32"), )
paddle.rsqrt(Tensor([12, 190141782, 1],"float32"), )
paddle.rsqrt(Tensor([12, 24, 7922575],"float32"), )
paddle.rsqrt(Tensor([12, 9, 21126865],"float32"), )
paddle.rsqrt(Tensor([13, 1, 175515491],"float32"), )
paddle.rsqrt(Tensor([13, 10, 17551550],"float32"), )
paddle.rsqrt(Tensor([13, 1007, 174296],"float32"), )
paddle.rsqrt(Tensor([13, 175515491, 1],"float32"), )
paddle.rsqrt(Tensor([13, 2, 16, 4, 1371215],"float32"), )
paddle.rsqrt(Tensor([13, 2, 16, 5484860, 1],"float32"), )
paddle.rsqrt(Tensor([13, 2, 21939437, 4, 1],"float32"), )
paddle.rsqrt(Tensor([13, 2742430, 16, 4, 1],"float32"), )
paddle.rsqrt(Tensor([13, 3, 58505164],"float32"), )
paddle.rsqrt(Tensor([13, 7, 25073642],"float32"), )
paddle.rsqrt(Tensor([13, 8, 21939437],"float32"), )
paddle.rsqrt(Tensor([13, 9, 19501722],"float32"), )
paddle.rsqrt(Tensor([134, 17027623, 1],"float32"), )
paddle.rsqrt(Tensor([134, 4, 4256906],"float32"), )
paddle.rsqrt(Tensor([134217729, 17, 1],"float32"), )
paddle.rsqrt(Tensor([14, 162978670, 1],"float32"), )
paddle.rsqrt(Tensor([14, 7, 23282668],"float32"), )
paddle.rsqrt(Tensor([1431655766, 3],"float16"), )
paddle.rsqrt(Tensor([16, 142606337],"float32"), )
paddle.rsqrt(Tensor([16, 268435457],"float16"), )
paddle.rsqrt(Tensor([17825793, 128],"float32"), )
paddle.rsqrt(Tensor([17825793, 2, 16, 4, 1],"float32"), )
paddle.rsqrt(Tensor([2, 1140850690],"float32"), )
paddle.rsqrt(Tensor([2, 2147483649],"float16"), )
paddle.rsqrt(Tensor([207427399, 11, 1],"float32"), )
paddle.rsqrt(Tensor([2228225, 1024, 1],"float32"), )
paddle.rsqrt(Tensor([2265841, 1007, 1],"float32"), )
paddle.rsqrt(Tensor([2281701379, 1, 1],"float32"), )
paddle.rsqrt(Tensor([2281701379, 1],"float32"), )
paddle.rsqrt(Tensor([2281701379],"float32"), )
paddle.rsqrt(Tensor([228170138, 10, 1],"float32"), )
paddle.rsqrt(Tensor([253522376, 9, 1],"float32"), )
paddle.rsqrt(Tensor([285212673, 8, 1],"float32"), )
paddle.rsqrt(Tensor([32, 71303169],"float32"), )
paddle.rsqrt(Tensor([325957340, 7, 1],"float32"), )
paddle.rsqrt(Tensor([380283564, 2, 3],"float32"), )
paddle.rsqrt(Tensor([380283564, 6, 1],"float32"), )
paddle.rsqrt(Tensor([39339679, 58, 1],"float32"), )
paddle.rsqrt(Tensor([4, 570425345],"float32"), )
paddle.rsqrt(Tensor([4294967297, 1],"float16"), )
paddle.rsqrt(Tensor([4456449, 512],"float32"), )
paddle.rsqrt(Tensor([456340276, 5, 1],"float32"), )
paddle.rsqrt(Tensor([557057, 1, 4096],"float32"), )
paddle.rsqrt(Tensor([557057, 4096, 1],"float32"), )
paddle.rsqrt(Tensor([570425345, 4, 1],"float32"), )
paddle.rsqrt(Tensor([715827883, 2, 3],"float16"), )
paddle.rsqrt(Tensor([760567127, 3, 1],"float32"), )
paddle.rsqrt(Tensor([760567127, 3],"float32"), )
paddle.rsqrt(Tensor([7605672, 300, 1],"float32"), )
paddle.rsqrt(Tensor([8, 285212673],"float32"), )
paddle.rsqrt(Tensor([8912897, 256],"float32"), )
paddle.rsqrt(Tensor([95070891, 24, 1],"float32"), )
paddle.rsqrt(x=Tensor([2, 1073741825, 2],"float16"), )
paddle.rsqrt(x=Tensor([2, 3, 380283564],"float32"), )
paddle.rsqrt(x=Tensor([2, 3, 715827883],"float16"), )
paddle.rsqrt(x=Tensor([2, 570425345, 2],"float32"), )
paddle.rsqrt(x=Tensor([2, 715827883, 3],"float16"), )
paddle.rsqrt(x=Tensor([380283564, 3, 2],"float32"), )
paddle.rsqrt(x=Tensor([477218589, 3, 3],"float16"), )
paddle.rsqrt(x=Tensor([715827883, 3, 2],"float16"), )
paddle.scale(Tensor([1, 128, 1048577, 32],"float16"), 0.08838834764831843, )
paddle.scale(Tensor([1, 128, 32, 1048577],"float16"), 0.08838834764831843, )
paddle.scale(Tensor([1, 128, 32, 557057],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([1, 128, 32, 557057],"float32"), 0.17677669529663687, )
paddle.scale(Tensor([1, 128, 557057, 32],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([1, 128, 557057, 32],"float32"), 0.17677669529663687, )
paddle.scale(Tensor([1, 139265, 128, 128],"float32"), 0.25, )
paddle.scale(Tensor([1, 16, 32, 4456449],"float32"), 0.25, )
paddle.scale(Tensor([1, 16, 4456449, 32],"float32"), 0.25, )
paddle.scale(Tensor([1, 2228225, 32, 32],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([1, 2228225, 32, 32],"float32"), 0.17677669529663687, )
paddle.scale(Tensor([1, 2228225, 32, 32],"float32"), 0.25, )
paddle.scale(Tensor([1, 2228225, 32, 32],"float32"), 0.35355339059327373, )
paddle.scale(Tensor([1, 4194305, 32, 32],"float16"), 0.08838834764831843, )
paddle.scale(Tensor([1, 8, 128, 2228225],"float32"), 0.25, )
paddle.scale(Tensor([1, 8, 2228225, 128],"float32"), 0.25, )
paddle.scale(Tensor([1, 8, 32, 8912897],"float32"), 0.35355339059327373, )
paddle.scale(Tensor([1, 8, 8912897, 32],"float32"), 0.35355339059327373, )
paddle.scale(Tensor([107374183, 40],"bfloat16"), scale=-1.7580993408473766, )
paddle.scale(Tensor([107374183, 40],"bfloat16"), scale=0.0, )
paddle.scale(Tensor([107374183, 40],"bfloat16"), scale=1.0, )
paddle.scale(Tensor([1105476, 16, 1, 129],"float32"), scale=0.125, )
paddle.scale(Tensor([1140850690, 2],"float32"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([13, 1371215, 4, 32],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([13, 8, 4, 5484860],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([13, 8, 685608, 32],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([137, 256, 256, 256],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([139265, 16, 32, 32],"float32"), 0.25, )
paddle.scale(Tensor([1426064, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([158452, 3, 3, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([158452, 3, 40, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([16, 128, 32, 34817],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([16, 128, 34817, 32],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([16, 139265, 32, 32],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([16, 32, 20, 222823],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([16, 32, 222823, 20],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([16, 356516, 20, 20],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([16385, 16, 128, 128],"float16"), scale=0.125, )
paddle.scale(Tensor([17409, 128, 32, 32],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([17409, 128, 32, 32],"float32"), 0.17677669529663687, )
paddle.scale(Tensor([17409, 8, 128, 128],"float32"), 0.25, )
paddle.scale(Tensor([17825793, 8, 4, 4],"float32"), scale=0.04419417382415922, )
paddle.scale(Tensor([178258, 32, 20, 20],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([182, 768, 128, 128],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 1, 1, 2, 1073741825],"float16"), scale=2.0, )
paddle.scale(Tensor([2, 1, 1, 2, 570425345],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 1, 1, 380283564, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 1, 1, 715827883, 3],"float16"), scale=2.0, )
paddle.scale(Tensor([2, 1, 190141782, 2, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 1, 2, 1073741825],"float16"), scale=2.0, )
paddle.scale(Tensor([2, 1, 2, 570425345],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 1, 357913942, 2, 3],"float16"), scale=2.0, )
paddle.scale(Tensor([2, 1, 380283564, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 1, 715827883, 3],"float16"), scale=2.0, )
paddle.scale(Tensor([2, 1140850690],"float32"), 2.0, 3.0, )
paddle.scale(Tensor([2, 1140850690],"float32"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([2, 1140850690],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([2, 1140850690],"float32"), scale=0.0, )
paddle.scale(Tensor([2, 1140850690],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([2, 1140850690],"float32"), scale=1.0, )
paddle.scale(Tensor([2, 1140850690],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 142606337, 8],"float32"), scale=0.25, )
paddle.scale(Tensor([2, 17409, 256, 256],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 190141782, 1, 2, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 190141782, 2, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 256, 128, 34817],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 256, 16, 278529],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 256, 17409, 256],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 256, 256, 17409],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 256, 278529, 16],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 256, 34817, 128],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 357913942, 1, 2, 3],"float16"), scale=2.0, )
paddle.scale(Tensor([2, 357913942, 2, 3],"float16"), scale=2.0, )
paddle.scale(Tensor([2, 4456449, 16, 16],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 69633, 128, 128],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 768, 11606, 128],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 768, 128, 11606],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 8, 142606337],"float32"), scale=0.25, )
paddle.scale(Tensor([2228225, 8, 4, 32],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2281701379, 1],"float32"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([2281701379],"float32"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([278529, 8, 32, 32],"float32"), 0.35355339059327373, )
paddle.scale(Tensor([3, 158452, 3, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 158452, 40, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 19014179, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 158452, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 2112687, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 3, 2112687, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 3, 40, 2112687],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 40, 2112687, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 40, 40, 158452],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 40, 6338060],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 6338060, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 40, 19014179],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 40, 40, 475355],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 40, 6338060, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 475355, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 6338060, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 760567127],"float32"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([32, 4456449, 4, 4],"float32"), scale=0.04419417382415922, )
paddle.scale(Tensor([32, 8, 2228225, 4],"float32"), scale=0.04419417382415922, )
paddle.scale(Tensor([32, 8, 4, 2228225],"float32"), scale=0.04419417382415922, )
paddle.scale(Tensor([32769, 128, 32, 32],"float16"), 0.08838834764831843, )
paddle.scale(Tensor([34817, 256, 16, 16],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([35651585, 8, 8],"float32"), scale=0.25, )
paddle.scale(Tensor([380283564, 1, 1, 2, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([380283564, 1, 2, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([40, 107374183],"bfloat16"), scale=-1.7580993408473766, )
paddle.scale(Tensor([40, 107374183],"bfloat16"), scale=0.0, )
paddle.scale(Tensor([40, 107374183],"bfloat16"), scale=1.0, )
paddle.scale(Tensor([40, 57042535],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([40, 57042535],"float32"), scale=0.0, )
paddle.scale(Tensor([40, 57042535],"float32"), scale=1.0, )
paddle.scale(Tensor([4294967297],"float16"), 0.125, )
paddle.scale(Tensor([4294967297],"float16"), 0.25, )
paddle.scale(Tensor([4294967297],"float16"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([475355, 3, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([475355, 40, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([5, 10, 15, 3042269],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([5, 10, 15, 3042269],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([5, 10, 2281702, 20],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([5, 10, 2281702, 20],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([5, 1521135, 15, 20],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([5, 1521135, 15, 20],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([545, 256, 128, 128],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([57042535, 40],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([57042535, 40],"float32"), scale=0.0, )
paddle.scale(Tensor([57042535, 40],"float32"), scale=1.0, )
paddle.scale(Tensor([58, 2, 140, 140499],"float32"), scale=0.7071067811865476, )
paddle.scale(Tensor([58, 2, 140499, 140],"float32"), scale=0.7071067811865476, )
paddle.scale(Tensor([58, 2008, 140, 140],"float32"), scale=0.7071067811865476, )
paddle.scale(Tensor([58207, 2, 140, 140],"float32"), scale=0.7071067811865476, )
paddle.scale(Tensor([715827883, 1, 1, 2, 3],"float16"), scale=2.0, )
paddle.scale(Tensor([715827883, 1, 2, 3],"float16"), scale=2.0, )
paddle.scale(Tensor([760567127, 3],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([760567127, 3],"float32"), scale=0.0, )
paddle.scale(Tensor([760567127, 3],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([760567127, 3],"float32"), scale=1.0, )
paddle.scale(Tensor([760567127, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([760568, 10, 15, 20],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([760568, 10, 15, 20],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([8, 16, 1, 17825793],"float32"), scale=0.125, )
paddle.scale(Tensor([8, 16, 128, 139265],"float32"), scale=0.125, )
paddle.scale(Tensor([8, 16, 128, 262145],"float16"), scale=0.125, )
paddle.scale(Tensor([8, 16, 138185, 129],"float32"), scale=0.125, )
paddle.scale(Tensor([8, 16, 139265, 128],"float32"), scale=0.125, )
paddle.scale(Tensor([8, 16, 262145, 128],"float16"), scale=0.125, )
paddle.scale(Tensor([8, 17409, 128, 128],"float32"), scale=0.125, )
paddle.scale(Tensor([8, 2210951, 1, 129],"float32"), scale=0.125, )
paddle.scale(Tensor([8, 32769, 128, 128],"float16"), scale=0.125, )
paddle.scale(Tensor([8705, 16, 128, 128],"float32"), scale=0.125, )
paddle.scale(Tensor([91268056, 25],"float32"), 2.0, 3.0, )
paddle.scale(x=Tensor([1114113, 4, 512],"float32"), scale=22.627416997969522, )
paddle.scale(x=Tensor([116414, 140, 140],"float32"), scale=10000.0, bias=-1.0, bias_after_scale=False, )
paddle.scale(x=Tensor([253522376, 3, 3],"float32"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 253522376, 3],"float32"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 3, 253522376],"float32"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 3, 477218589],"float16"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 3, 477218589],"float16"), scale=2.0, bias=4.0, bias_after_scale=False, act=None, )
paddle.scale(x=Tensor([3, 3, 477218589],"float16"), scale=2.0, bias=4.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 477218589, 3],"float16"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 477218589, 3],"float16"), scale=2.0, bias=4.0, bias_after_scale=False, act=None, )
paddle.scale(x=Tensor([3, 477218589, 3],"float16"), scale=2.0, bias=4.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([32, 139265, 512],"float32"), scale=22.627416997969522, )
paddle.scale(x=Tensor([32, 4, 17825793],"float32"), scale=22.627416997969522, )
paddle.scale(x=Tensor([477218589, 3, 3],"float16"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([477218589, 3, 3],"float16"), scale=2.0, bias=4.0, bias_after_scale=False, act=None, )
paddle.scale(x=Tensor([477218589, 3, 3],"float16"), scale=2.0, bias=4.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([58, 140, 280998],"float32"), scale=10000.0, bias=-1.0, bias_after_scale=False, )
paddle.scale(x=Tensor([58, 280998, 140],"float32"), scale=10000.0, bias=-1.0, bias_after_scale=False, )
paddle.scatter(Tensor([100, 1],"float32"), Tensor([100],"int64"), Tensor([2281701379, 1],"float32"), )
paddle.scatter(Tensor([100, 1],"int64"), Tensor([100],"int64"), Tensor([2281701379, 1],"int64"), )
paddle.scatter(Tensor([100, 22817014],"float32"), Tensor([100],"int64"), Tensor([100, 1],"float32"), )
paddle.scatter(Tensor([1024000],"float32"), Tensor([20],"int64"), Tensor([2281701379],"float32"), )
paddle.scatter(Tensor([1024000],"float32"), Tensor([24],"int64"), Tensor([2281701379],"float32"), )
paddle.scatter(Tensor([1024000],"float32"), Tensor([28],"int64"), Tensor([2281701379],"float32"), )
paddle.scatter(Tensor([1024],"float32"), Tensor([1024],"int64"), Tensor([2281701379],"float32"), )
paddle.scatter(Tensor([11661, 128],"float32"), Tensor([58584],"int64"), Tensor([17825793, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([1200, 1901418],"float32"), Tensor([4],"int64"), Tensor([4, 1],"float32"), )
paddle.scatter(Tensor([1200, 1],"float32"), Tensor([4],"int64"), Tensor([2281701379, 1],"float32"), )
paddle.scatter(Tensor([1200, 1],"int64"), Tensor([4],"int64"), Tensor([2281701379, 1],"int64"), )
paddle.scatter(Tensor([1358, 128],"float32"), Tensor([4936],"int64"), Tensor([17825793, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([15548, 128],"float32"), Tensor([78112],"int64"), Tensor([17825793, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([1664],"int64"), Tensor([1664],"int64"), Tensor([2281701379],"int64"), overwrite=True, )
paddle.scatter(Tensor([17825793, 128],"float32"), Tensor([105344],"int64"), Tensor([105344, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([17825793, 128],"float32"), Tensor([4936],"int64"), Tensor([4936, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([17825793, 128],"float32"), Tensor([58584],"int64"), Tensor([58584, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([17825793, 128],"float32"), Tensor([78112],"int64"), Tensor([78112, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([214272, 64],"float32"), Tensor([5551],"int32"), Tensor([35651585, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([214272, 64],"float32"), Tensor([5633],"int32"), Tensor([35651585, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([214272, 64],"float32"), Tensor([7355],"int32"), Tensor([35651585, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([214272, 64],"float32"), Tensor([7485],"int32"), Tensor([35651585, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([2281701379, 1],"float32"), Tensor([100],"int64"), Tensor([100, 1],"float32"), )
paddle.scatter(Tensor([2281701379, 1],"float32"), Tensor([4],"int64"), Tensor([4, 1],"float32"), )
paddle.scatter(Tensor([2281701379],"float32"), Tensor([1024],"int64"), Tensor([1024],"float32"), )
paddle.scatter(Tensor([2281701379],"float32"), Tensor([20],"int64"), Tensor([20],"float32"), )
paddle.scatter(Tensor([2281701379],"float32"), Tensor([24],"int64"), Tensor([24],"float32"), )
paddle.scatter(Tensor([2281701379],"float32"), Tensor([28],"int64"), Tensor([28],"float32"), )
paddle.scatter(Tensor([2281701379],"int32"), Tensor([10],"int64"), Tensor([10],"int32"), overwrite=True, )
paddle.scatter(Tensor([2281701379],"int32"), Tensor([12],"int64"), Tensor([12],"int32"), overwrite=True, )
paddle.scatter(Tensor([2281701379],"int32"), Tensor([13],"int64"), Tensor([13],"int32"), overwrite=True, )
paddle.scatter(Tensor([2281701379],"int32"), index=Tensor([52367],"int32"), updates=Tensor([52367],"int32"), )
paddle.scatter(Tensor([2281701379],"int32"), index=Tensor([52376],"int32"), updates=Tensor([52376],"int32"), )
paddle.scatter(Tensor([2281701379],"int32"), index=Tensor([52388],"int32"), updates=Tensor([52388],"int32"), )
paddle.scatter(Tensor([2281701379],"int32"), index=Tensor([52397],"int32"), updates=Tensor([52397],"int32"), )
paddle.scatter(Tensor([26736, 128],"float32"), Tensor([105344],"int64"), Tensor([17825793, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([3, 3],"float32"), index=Tensor([2],"int32"), updates=Tensor([760567127, 3],"float32"), )
paddle.scatter(Tensor([31, 64],"float32"), Tensor([16, 1],"int64"), Tensor([35651585, 64],"float32"), )
paddle.scatter(Tensor([35651585, 64],"float32"), Tensor([16, 1],"int64"), Tensor([16, 64],"float32"), )
paddle.scatter(Tensor([35651585, 64],"float32"), Tensor([35651585, 1],"int64"), Tensor([35651585, 64],"float32"), )
paddle.scatter(Tensor([35651585, 64],"float32"), Tensor([5551],"int32"), Tensor([5551, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([35651585, 64],"float32"), Tensor([5633],"int32"), Tensor([5633, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([35651585, 64],"float32"), Tensor([7355],"int32"), Tensor([7355, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([35651585, 64],"float32"), Tensor([7485],"int32"), Tensor([7485, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52367],"int32"), updates=Tensor([2281701379],"int32"), )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52376],"int32"), updates=Tensor([2281701379],"int32"), )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52388],"int32"), updates=Tensor([2281701379],"int32"), )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52397],"int32"), updates=Tensor([2281701379],"int32"), )
paddle.scatter(Tensor([64],"int32"), Tensor([10],"int64"), Tensor([2281701379],"int32"), overwrite=True, )
paddle.scatter(Tensor([64],"int32"), Tensor([12],"int64"), Tensor([2281701379],"int32"), overwrite=True, )
paddle.scatter(Tensor([64],"int32"), Tensor([13],"int64"), Tensor([2281701379],"int32"), overwrite=True, )
paddle.scatter(Tensor([760567127, 3],"float32"), index=Tensor([2],"int32"), updates=Tensor([2, 3],"float32"), )
paddle.scatter(x=Tensor([100, 3],"float32"), index=Tensor([3],"int64"), updates=Tensor([760567127, 3],"float32"), overwrite=False, )
paddle.scatter(x=Tensor([760567127, 3],"float32"), index=Tensor([3],"int64"), updates=Tensor([3, 3],"float32"), overwrite=False, )
paddle.scatter_nd_add(Tensor([1, 1140850690, 2],"float32"), Tensor([1, 3],"int64"), Tensor([1],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"int32"), values=Tensor([2281701379],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"int32"), values=Tensor([4, 570425345],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"int32"), values=Tensor([760567127, 3],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"int64"), values=Tensor([1140850690, 2],"int64"), )
paddle.searchsorted(sorted_sequence=Tensor([7],"int32"), values=Tensor([2, 2, 570425345],"int32"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"int32"), values=Tensor([2, 570425345, 2],"int32"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"int32"), values=Tensor([570425345, 2, 2],"int32"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"int64"), values=Tensor([2, 2, 570425345],"int64"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"int64"), values=Tensor([2, 570425345, 2],"int64"), right=True, )
paddle.select_scatter(Tensor([2, 3, 12676119, 5, 6],"int32"), Tensor([2, 3, 5, 6],"int32"), 2, 1, )
paddle.shape(Tensor([1, 2281701379],"int64"), )
paddle.shape(Tensor([10, 228170138],"int32"), )
paddle.shape(Tensor([190141782, 12],"int32"), )
paddle.shape(Tensor([190141782, 12],"int64"), )
paddle.shard_index(input=Tensor([1140850690, 2, 1],"int64"), index_num=20, nshards=4, shard_id=1, )
paddle.sign(Tensor([11, 17, 12201612],"int32"), )
paddle.sign(Tensor([11, 207427399],"float32"), )
paddle.sign(Tensor([11, 20742740, 10],"int32"), )
paddle.sign(Tensor([12, 20, 9507090],"int32"), )
paddle.sign(Tensor([12, 95070891, 2],"float32"), )
paddle.sign(Tensor([12, 95070891, 2],"int32"), )
paddle.sign(Tensor([134217729, 17],"float32"), )
paddle.sign(Tensor([57042535, 20, 2],"int32"), )
paddle.slice(Tensor([2281701379],"int32"), axes=list[0,], starts=list[0,], ends=list[384,], )
paddle.slice_scatter(Tensor([380283564, 6],"int32"), Tensor([380283564, 2],"int32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 9, 59652324],"float16"), Tensor([1, 9, 1],"float16"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.split(Tensor([1, 1, 2281701379],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 1, 2281701379],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([1, 1, 4, 570425345],"float32"), 3, axis=-1, )
paddle.split(Tensor([1, 1, 95070891, 24],"float32"), 3, axis=-1, )
paddle.split(Tensor([1, 100, 22817014],"float32"), 2, -1, )
paddle.split(Tensor([1, 11, 207427399],"float32"), 2, axis=2, )
paddle.split(Tensor([1, 11, 2160703, 96],"float32"), num_or_sections=list[32,32,32,], axis=-1, )
paddle.split(Tensor([1, 1140850690, 2],"float32"), num_or_sections=2, axis=-1, )
paddle.split(Tensor([1, 138723, 257, 64],"float32"), list[1,256,], axis=2, )
paddle.split(Tensor([1, 1485483, 16, 96],"float32"), num_or_sections=list[32,32,32,], axis=-1, )
paddle.split(Tensor([1, 16, 257, 554889],"float32"), list[1,256,], axis=2, )
paddle.split(Tensor([1, 20, 114085069],"float32"), num_or_sections=2, axis=-1, )
paddle.split(Tensor([1, 221848, 10285],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.split(Tensor([1, 2281701379],"float32"), 2, axis=-1, )
paddle.split(Tensor([1, 2281701379],"float32"), 3, axis=-1, )
paddle.split(Tensor([1, 2281701379],"float32"), 7, axis=-1, )
paddle.split(Tensor([1, 2281701379],"float32"), num_or_sections=3, axis=1, )
paddle.split(Tensor([1, 23767723, 4, 24],"float32"), 3, axis=-1, )
paddle.split(Tensor([1, 23767723, 96],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 24, 10, 9507090],"float32"), num_or_sections=list[12,12,], axis=1, )
paddle.split(Tensor([1, 24, 9507090, 10],"float32"), num_or_sections=list[12,12,], axis=1, )
paddle.split(Tensor([1, 243200, 9382],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([1, 25, 91268056],"float32"), 5, axis=-1, )
paddle.split(Tensor([1, 265933, 8580],"float32"), list[6408,1620,414,108,30,], axis=-1, )
paddle.split(Tensor([1, 268436, 8500],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([1, 297058, 7681],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([1, 3, 192, 3961288],"float32"), num_or_sections=list[2,1,], axis=1, )
paddle.split(Tensor([1, 3, 2640859, 288],"float32"), num_or_sections=list[2,1,], axis=1, )
paddle.split(Tensor([1, 310, 7360328],"float32"), 4, axis=-1, )
paddle.split(Tensor([1, 331402, 6885],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([1, 356516, 6400],"float32"), list[4800,1200,300,80,20,], axis=-1, )
paddle.split(Tensor([1, 371009, 6150],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([1, 400, 176, 32411],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 400, 32411, 176],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 400, 5704254],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 419431, 5440],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([1, 4456449, 512],"float32"), 2, axis=2, )
paddle.split(Tensor([1, 456340276, 5],"float32"), 5, axis=-1, )
paddle.split(Tensor([1, 476447, 4789],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([1, 48, 5, 9507090],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([1, 48, 9507090, 5],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([1, 547828, 4165],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([1, 570425345, 4],"float32"), 2, -1, )
paddle.split(Tensor([1, 570425345, 4],"float32"), 2, axis=-1, )
paddle.split(Tensor([1, 570425345, 4],"float32"), 4, axis=-1, )
paddle.split(Tensor([1, 570425345, 4],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([1, 59417, 38402],"float32"), list[28800,7200,1800,450,117,35,], axis=-1, )
paddle.split(Tensor([1, 61906, 36858],"float32"), list[27648,6912,1728,432,108,30,], axis=-1, )
paddle.split(Tensor([1, 634159, 3598],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([1, 742742, 16, 192],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 96, 3, 7922575],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([1, 96, 7922575, 3],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([10, 429496730],"bfloat16"), 2, axis=0, )
paddle.split(Tensor([1000, 1, 32, 71304],"float32"), list[1,], axis=1, )
paddle.split(Tensor([1000, 1, 71304, 32],"float32"), list[1,], axis=1, )
paddle.split(Tensor([10000, 228171],"float32"), 3, axis=1, )
paddle.split(Tensor([10000, 228171],"float32"), 4, axis=-1, )
paddle.split(Tensor([1024, 2228225],"float32"), 6, axis=-1, )
paddle.split(Tensor([10700, 32, 112, 112],"float16"), list[16,16,], axis=1, )
paddle.split(Tensor([107374183, 8, 5],"float16"), num_or_sections=2, axis=Tensor([1],"int64"), )
paddle.split(Tensor([111849, 15, 1360],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([114085069, 20],"float32"), num_or_sections=list[10,10,], axis=1, )
paddle.split(Tensor([1140850690, 2],"int64"), 2, axis=1, )
paddle.split(Tensor([11408507, 10, 20],"float32"), 2, axis=1, )
paddle.split(Tensor([11414, 120, 56, 56],"float16"), list[60,60,], axis=1, )
paddle.split(Tensor([12, 27, 10, 1325608],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([12, 27, 1325608, 10],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([12993, 224, 28, 28],"float32"), num_or_sections=list[112,112,], axis=1, )
paddle.split(Tensor([13, 4, 2, 21939437],"float32"), 2, -1, )
paddle.split(Tensor([13, 4, 21939437, 2],"float32"), 2, -1, )
paddle.split(Tensor([13, 43878873, 2, 2],"float32"), 2, -1, )
paddle.split(Tensor([13, 5162221, 34],"float32"), list[2,16,16,], axis=-1, )
paddle.split(Tensor([13, 868889, 202],"float32"), list[37,37,128,], axis=-1, )
paddle.split(Tensor([13169, 104, 56, 56],"float16"), 4, 1, )
paddle.split(Tensor([135044, 11, 16, 96],"float32"), num_or_sections=list[32,32,32,], axis=-1, )
paddle.split(Tensor([136957, 160, 14, 14],"float16"), list[80,80,], axis=1, )
paddle.split(Tensor([136957, 640, 7, 7],"float16"), num_or_sections=list[512,128,], axis=1, )
paddle.split(Tensor([13755, 3, 192, 288],"float32"), num_or_sections=list[2,1,], axis=1, )
paddle.split(Tensor([14, 1697695, 96],"float32"), 3, axis=-1, )
paddle.split(Tensor([14, 7, 23282668],"float32"), 3, axis=-1, )
paddle.split(Tensor([142606337, 4, 2, 2],"float32"), 2, -1, )
paddle.split(Tensor([148529, 2, 7681],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([1485483, 1536],"float32"), 48, axis=-1, )
paddle.split(Tensor([152175, 576, 7, 7],"float16"), num_or_sections=list[512,64,], axis=1, )
paddle.split(Tensor([15474, 9, 128, 128],"float32"), num_or_sections=9, axis=1, )
paddle.split(Tensor([1590729, 27, 10, 10],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([16, 11790, 12096],"float32"), list[576,2304,9216,], axis=-1, )
paddle.split(Tensor([16, 12838, 11109],"float32"), list[529,2116,8464,], axis=-1, )
paddle.split(Tensor([16, 14031, 10164],"float32"), list[484,1936,7744,], axis=-1, )
paddle.split(Tensor([16, 142606337],"float32"), 8, )
paddle.split(Tensor([16, 15399, 9261],"float32"), list[441,1764,7056,], axis=-1, )
paddle.split(Tensor([16, 16977, 8400],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([16, 18812, 7581],"float32"), list[361,1444,5776,], axis=-1, )
paddle.split(Tensor([16, 20960, 6804],"float32"), list[324,1296,5184,], axis=-1, )
paddle.split(Tensor([16, 23498, 6069],"float32"), list[289,1156,4624,], axis=-1, )
paddle.split(Tensor([16, 26527, 5376],"float32"), list[256,1024,4096,], axis=-1, )
paddle.split(Tensor([16, 30182, 4725],"float32"), list[225,900,3600,], axis=-1, )
paddle.split(Tensor([16, 34647, 4116],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([16, 40183, 3549],"float32"), list[169,676,2704,], axis=-1, )
paddle.split(Tensor([16, 46604, 3060],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([16, 47159, 3024],"float32"), list[144,576,2304,], axis=-1, )
paddle.split(Tensor([16, 56123, 2541],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([16, 67109, 2125],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([16, 67908, 2100],"float32"), list[100,400,1600,], axis=-1, )
paddle.split(Tensor([1613651, 7, 202],"float32"), list[37,37,128,], axis=-1, )
paddle.split(Tensor([16305, 336, 28, 28],"float16"), list[112,112,112,], axis=1, )
paddle.split(Tensor([16305, 336, 28, 28],"float16"), list[168,168,], axis=1, )
paddle.split(Tensor([16385, 2, 32, 32, 128],"float16"), 2, axis=0, )
paddle.split(Tensor([16536, 176, 28, 28],"float32"), num_or_sections=list[88,88,], axis=1, )
paddle.split(Tensor([168367, 112, 11, 11],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([17120, 80, 56, 56],"float16"), num_or_sections=list[64,16,], axis=1, )
paddle.split(Tensor([17409, 8, 128, 128],"float32"), num_or_sections=8, axis=1, )
paddle.split(Tensor([1784, 192, 112, 112],"float16"), list[64,64,64,], axis=1, )
paddle.split(Tensor([181896, 64, 14, 14],"float32"), num_or_sections=list[32,32,], axis=1, )
paddle.split(Tensor([18253612, 25, 5],"float32"), 5, axis=-1, )
paddle.split(Tensor([1840082, 310, 4],"float32"), 4, axis=-1, )
paddle.split(Tensor([185, 1, 400, 176, 176],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([185, 400, 176, 176],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([18864, 10, 12096],"float32"), list[576,2304,9216,], axis=-1, )
paddle.split(Tensor([188907, 464, 7, 7],"float16"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([190141782, 12],"float32"), num_or_sections=3, axis=1, )
paddle.split(Tensor([1901418, 48, 5, 5],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([2, 10, 114085069],"float32"), 2, )
paddle.split(Tensor([2, 128, 1273271, 7],"float32"), num_or_sections=list[64,64,], axis=1, )
paddle.split(Tensor([2, 128, 7, 1273271],"float32"), num_or_sections=list[64,64,], axis=1, )
paddle.split(Tensor([2, 16385, 32, 32, 128],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 176, 231504, 28],"float32"), num_or_sections=list[88,88,], axis=1, )
paddle.split(Tensor([2, 176, 28, 231504],"float32"), num_or_sections=list[88,88,], axis=1, )
paddle.split(Tensor([2, 192, 7, 848848],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([2, 192, 848848, 7],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([2, 2, 1, 8, 128, 1048577],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 2, 1, 87382, 128, 96],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 2, 32, 32, 1048577],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 21846, 1, 8, 128, 96],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 224, 181896, 28],"float32"), num_or_sections=list[112,112,], axis=1, )
paddle.split(Tensor([2, 224, 28, 181896],"float32"), num_or_sections=list[112,112,], axis=1, )
paddle.split(Tensor([2, 228170138, 5],"float32"), 2, )
paddle.split(Tensor([2, 32, 1273271, 28],"float32"), num_or_sections=list[16,16,], axis=1, )
paddle.split(Tensor([2, 32, 28, 1273271],"float32"), num_or_sections=list[16,16,], axis=1, )
paddle.split(Tensor([2, 33, 10, 3457124],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 33, 3457124, 10],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 352, 14, 231504],"float32"), num_or_sections=list[176,176,], axis=1, )
paddle.split(Tensor([2, 352, 231504, 14],"float32"), num_or_sections=list[176,176,], axis=1, )
paddle.split(Tensor([2, 488, 14, 166987],"float32"), num_or_sections=list[244,244,], axis=1, )
paddle.split(Tensor([2, 488, 166987, 14],"float32"), num_or_sections=list[244,244,], axis=1, )
paddle.split(Tensor([2, 5, 15, 15211343],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 5, 15211343, 15],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 5592406, 3, 128],"float16"), 3, axis=2, )
paddle.split(Tensor([2, 64, 1273271, 14],"float32"), num_or_sections=list[32,32,], axis=1, )
paddle.split(Tensor([2, 64, 14, 1273271],"float32"), num_or_sections=list[32,32,], axis=1, )
paddle.split(Tensor([2, 704, 231504, 7],"float32"), num_or_sections=list[352,352,], axis=1, )
paddle.split(Tensor([2, 704, 7, 231504],"float32"), num_or_sections=list[352,352,], axis=1, )
paddle.split(Tensor([2, 8, 16, 128, 69633],"float32"), 2, )
paddle.split(Tensor([2, 8, 16, 139265, 64],"float32"), 2, )
paddle.split(Tensor([2, 8, 17409, 128, 64],"float32"), 2, )
paddle.split(Tensor([2, 8705, 16, 128, 64],"float32"), 2, )
paddle.split(Tensor([2, 976, 166987, 7],"float32"), num_or_sections=list[488,488,], axis=1, )
paddle.split(Tensor([2, 976, 7, 166987],"float32"), num_or_sections=list[488,488,], axis=1, )
paddle.split(Tensor([20000, 114086],"float32"), 5, axis=-1, )
paddle.split(Tensor([20267, 12, 9382],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([2028180, 5, 15, 15],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([20409, 11, 10164],"float32"), list[484,1936,7744,], axis=-1, )
paddle.split(Tensor([20540, 10, 11109],"float32"), list[529,2116,8464,], axis=-1, )
paddle.split(Tensor([210703, 104, 14, 14],"float16"), list[52,52,], axis=1, )
paddle.split(Tensor([2177, 8, 16, 128, 64],"float32"), 2, )
paddle.split(Tensor([21846, 2, 1, 8, 128, 96],"float16"), 2, axis=0, )
paddle.split(Tensor([221848, 1, 10285],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.split(Tensor([2228225, 1, 32, 32],"float32"), list[1,], axis=1, )
paddle.split(Tensor([2228225, 1024],"float32"), 8, )
paddle.split(Tensor([2281701379],"float32"), 100, )
paddle.split(Tensor([2281701379],"float32"), 16, axis=-1, )
paddle.split(Tensor([2281701379],"float32"), 48, axis=-1, )
paddle.split(Tensor([2281701379],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([22827, 960, 14, 14],"float16"), list[240,240,240,240,], axis=1, )
paddle.split(Tensor([2290865, 2, 498, 1],"float32"), list[198,300,], axis=2, )
paddle.split(Tensor([23767723, 1, 4, 24],"float32"), 3, axis=-1, )
paddle.split(Tensor([23767723, 1, 96],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([23856, 488, 14, 14],"float32"), num_or_sections=list[244,244,], axis=1, )
paddle.split(Tensor([24, 10923, 128, 128],"float16"), 2, axis=1, )
paddle.split(Tensor([24, 34, 128, 41121],"float16"), 2, axis=1, )
paddle.split(Tensor([24, 34, 41121, 128],"float16"), 2, axis=1, )
paddle.split(Tensor([24, 43, 100, 22110],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 43, 29092, 76],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([242528, 192, 7, 7],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([24638, 10, 9261],"float32"), list[441,1764,7056,], axis=-1, )
paddle.split(Tensor([259285, 2, 1100, 4],"float32"), list[200,900,], axis=2, )
paddle.split(Tensor([2640859, 96, 3, 3],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([265933, 1, 8580],"float32"), list[6408,1620,414,108,30,], axis=-1, )
paddle.split(Tensor([268436, 1, 8500],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([27164, 10, 8400],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([2852127, 1, 400, 2],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([2852127, 400, 2],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([285213, 4, 500, 4],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([28533, 192, 28, 28],"float16"), num_or_sections=list[128,64,], axis=1, )
paddle.split(Tensor([3, 286331154, 5],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([3, 286331154, 5],"float16"), num_or_sections=2, axis=Tensor([1],"int64"), )
paddle.split(Tensor([3, 380284, 500, 4],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([3, 4, 500, 380284],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([3, 8, 178956971],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([3, 8, 178956971],"float16"), num_or_sections=2, axis=Tensor([1],"int64"), )
paddle.split(Tensor([30098, 10, 7581],"float32"), list[361,1444,5776,], axis=-1, )
paddle.split(Tensor([32, 112, 11, 57876],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 112, 57876, 11],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([325957340, 7],"float32"), 7, axis=-1, )
paddle.split(Tensor([33072, 352, 14, 14],"float32"), num_or_sections=list[176,176,], axis=1, )
paddle.split(Tensor([331402, 1, 6885],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([33535, 10, 6804],"float32"), list[324,1296,5184,], axis=-1, )
paddle.split(Tensor([33554433, 128],"float16"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([3395389, 7, 96],"float32"), 3, axis=-1, )
paddle.split(Tensor([34240, 160, 28, 28],"float16"), num_or_sections=list[128,32,], axis=1, )
paddle.split(Tensor([34240, 40, 56, 56],"float16"), list[20,20,], axis=1, )
paddle.split(Tensor([349526, 32, 3, 128],"float16"), 3, axis=2, )
paddle.split(Tensor([35118, 624, 14, 14],"float16"), list[156,156,156,156,], axis=1, )
paddle.split(Tensor([35118, 624, 14, 14],"float16"), list[312,312,], axis=1, )
paddle.split(Tensor([356516, 1, 6400],"float32"), list[4800,1200,300,80,20,], axis=-1, )
paddle.split(Tensor([363792, 128, 7, 7],"float32"), num_or_sections=list[64,64,], axis=1, )
paddle.split(Tensor([371009, 1, 6150],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([372828, 2, 3060],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([37597, 10, 6069],"float32"), list[289,1156,4624,], axis=-1, )
paddle.split(Tensor([380283564, 6],"float32"), 6, axis=-1, )
paddle.split(Tensor([39285, 1, 241, 241],"float32"), num_or_sections=list[1,], axis=1, )
paddle.split(Tensor([4, 10, 57042535],"float32"), 2, axis=1, )
paddle.split(Tensor([4, 221353, 2577],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([4, 28521268, 20],"float32"), 2, axis=1, )
paddle.split(Tensor([4, 6, 6],"int32"), num_or_sections=list[2,2,2,], axis=Tensor([2281701379],"int32"), )
paddle.split(Tensor([4, 6, 95070891],"int32"), list[2,2,2,], axis=1, )
paddle.split(Tensor([4, 6, 95070891],"int32"), list[6,], axis=1, )
paddle.split(Tensor([405132, 11, 512],"float32"), 2, axis=2, )
paddle.split(Tensor([418201, 1, 496, 11],"float32"), list[196,300,], axis=2, )
paddle.split(Tensor([4194305, 1024, 1, 1],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([419431, 1, 5440],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([421601, 1, 492, 11],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([42443, 10, 5376],"float32"), list[256,1024,4096,], axis=-1, )
paddle.split(Tensor([4294968, 1000],"bfloat16"), 2, axis=0, )
paddle.split(Tensor([43314, 11, 4789],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([4456449, 512],"float32"), 16, axis=-1, )
paddle.split(Tensor([456340276, 5],"float32"), 5, axis=-1, )
paddle.split(Tensor([456340276, 5],"float32"), list[2,2,1,], axis=-1, )
paddle.split(Tensor([45634028, 10, 5],"float32"), 2, )
paddle.split(Tensor([45653, 120, 28, 28],"float16"), num_or_sections=list[60,60,], axis=1, )
paddle.split(Tensor([45653, 480, 14, 14],"float16"), list[120,120,120,120,], axis=1, )
paddle.split(Tensor([45653, 480, 14, 14],"float16"), list[240,240,], axis=1, )
paddle.split(Tensor([47227, 116, 28, 28],"float16"), num_or_sections=list[58,58,], axis=1, )
paddle.split(Tensor([47711, 976, 7, 7],"float32"), num_or_sections=list[488,488,], axis=1, )
paddle.split(Tensor([48290, 10, 4725],"float32"), list[225,900,3600,], axis=-1, )
paddle.split(Tensor([50396, 11, 4116],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([512, 120, 2497, 28],"float16"), num_or_sections=list[60,60,], axis=1, )
paddle.split(Tensor([512, 120, 28, 2497],"float16"), num_or_sections=list[60,60,], axis=1, )
paddle.split(Tensor([512, 4456449],"float32"), 16, axis=-1, )
paddle.split(Tensor([512, 4456449],"float32"), 48, axis=-1, )
paddle.split(Tensor([536871, 2, 2125],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([53896, 14, 3024],"float32"), list[144,576,2304,], axis=-1, )
paddle.split(Tensor([547828, 1, 4165],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([55337, 1584, 7, 7],"float16"), list[396,396,396,396,], axis=1, )
paddle.split(Tensor([55337, 1584, 7, 7],"float16"), list[792,792,], axis=1, )
paddle.split(Tensor([570425345, 1, 4],"float32"), 2, axis=-1, )
paddle.split(Tensor([570425345, 1, 4],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([570425345, 4],"float32"), 2, axis=-1, )
paddle.split(Tensor([570425345, 4],"float32"), 4, axis=-1, )
paddle.split(Tensor([570425345, 4],"float32"), list[1,1,1,1,], axis=-1, )
paddle.split(Tensor([570425345, 4],"float32"), tuple(1,1,1,1,), axis=-1, )
paddle.split(Tensor([57042535, 20, 2],"float32"), num_or_sections=2, axis=-1, )
paddle.split(Tensor([5704254, 100, 4],"float32"), 2, -1, )
paddle.split(Tensor([5707, 240, 56, 56],"float16"), list[60,60,60,60,], axis=1, )
paddle.split(Tensor([58447, 11, 3549],"float32"), list[169,676,2704,], axis=-1, )
paddle.split(Tensor([59417, 1, 38402],"float32"), list[28800,7200,1800,450,117,35,], axis=-1, )
paddle.split(Tensor([6, 1, 400, 176, 5402],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 400, 5402, 176],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 400, 950709],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 492, 772935],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 1, 496, 766701],"float32"), list[196,300,], axis=2, )
paddle.split(Tensor([6, 16, 476, 49933],"float32"), list[176,300,], axis=2, )
paddle.split(Tensor([6, 199729, 476, 4],"float32"), list[176,300,], axis=2, )
paddle.split(Tensor([6, 2, 1100, 172857],"float32"), list[200,900,], axis=2, )
paddle.split(Tensor([6, 2, 498, 381811],"float32"), list[198,300,], axis=2, )
paddle.split(Tensor([6, 31, 400, 176, 176],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 475355, 400, 2],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 54, 100, 132561],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 54, 132561, 100],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 69701, 496, 11],"float32"), list[196,300,], axis=2, )
paddle.split(Tensor([6, 70267, 492, 11],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 715827883],"float16"), 3, )
paddle.split(Tensor([6, 763622, 498, 1],"float32"), list[198,300,], axis=2, )
paddle.split(Tensor([6, 86429, 1100, 4],"float32"), list[200,900,], axis=2, )
paddle.split(Tensor([61906, 1, 36858],"float32"), list[27648,6912,1728,432,108,30,], axis=-1, )
paddle.split(Tensor([634159, 1, 3598],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([64, 1024, 1, 65537],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 1024, 65537, 1],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 104, 11523, 56],"float16"), 4, 1, )
paddle.split(Tensor([64, 104, 14, 46092],"float16"), list[52,52,], axis=1, )
paddle.split(Tensor([64, 104, 46092, 14],"float16"), list[52,52,], axis=1, )
paddle.split(Tensor([64, 104, 56, 11523],"float16"), 4, 1, )
paddle.split(Tensor([64, 120, 56, 9987],"float16"), list[60,60,], axis=1, )
paddle.split(Tensor([64, 120, 9987, 56],"float16"), list[60,60,], axis=1, )
paddle.split(Tensor([64, 1584, 6053, 7],"float16"), list[396,396,396,396,], axis=1, )
paddle.split(Tensor([64, 1584, 6053, 7],"float16"), list[792,792,], axis=1, )
paddle.split(Tensor([64, 1584, 7, 6053],"float16"), list[396,396,396,396,], axis=1, )
paddle.split(Tensor([64, 1584, 7, 6053],"float16"), list[792,792,], axis=1, )
paddle.split(Tensor([64, 160, 14, 29960],"float16"), list[80,80,], axis=1, )
paddle.split(Tensor([64, 160, 14980, 28],"float16"), num_or_sections=list[128,32,], axis=1, )
paddle.split(Tensor([64, 160, 28, 14980],"float16"), num_or_sections=list[128,32,], axis=1, )
paddle.split(Tensor([64, 160, 29960, 14],"float16"), list[80,80,], axis=1, )
paddle.split(Tensor([64, 192, 112, 3121],"float16"), list[64,64,64,], axis=1, )
paddle.split(Tensor([64, 192, 12484, 28],"float16"), num_or_sections=list[128,64,], axis=1, )
paddle.split(Tensor([64, 192, 28, 12484],"float16"), num_or_sections=list[128,64,], axis=1, )
paddle.split(Tensor([64, 192, 3121, 112],"float16"), list[64,64,64,], axis=1, )
paddle.split(Tensor([64, 192, 56, 6242],"float16"), list[96,96,], axis=1, )
paddle.split(Tensor([64, 192, 6242, 56],"float16"), list[96,96,], axis=1, )
paddle.split(Tensor([64, 20656, 1726],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([64, 21400, 56, 56],"float16"), 4, 1, )
paddle.split(Tensor([64, 240, 4994, 56],"float16"), list[60,60,60,60,], axis=1, )
paddle.split(Tensor([64, 240, 56, 4994],"float16"), list[60,60,60,60,], axis=1, )
paddle.split(Tensor([64, 26215, 1360],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([64, 288, 14, 16645],"float16"), num_or_sections=list[256,32,], axis=1, )
paddle.split(Tensor([64, 288, 16645, 14],"float16"), num_or_sections=list[256,32,], axis=1, )
paddle.split(Tensor([64, 32, 112, 18725],"float16"), list[16,16,], axis=1, )
paddle.split(Tensor([64, 32, 18725, 112],"float16"), list[16,16,], axis=1, )
paddle.split(Tensor([64, 320, 14, 14980],"float16"), num_or_sections=list[256,64,], axis=1, )
paddle.split(Tensor([64, 320, 14980, 14],"float16"), num_or_sections=list[256,64,], axis=1, )
paddle.split(Tensor([64, 336, 28, 7134],"float16"), list[112,112,112,], axis=1, )
paddle.split(Tensor([64, 336, 28, 7134],"float16"), list[168,168,], axis=1, )
paddle.split(Tensor([64, 336, 7134, 28],"float16"), list[112,112,112,], axis=1, )
paddle.split(Tensor([64, 336, 7134, 28],"float16"), list[168,168,], axis=1, )
paddle.split(Tensor([64, 384, 10, 17477],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 384, 17477, 10],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 40, 29960, 56],"float16"), list[20,20,], axis=1, )
paddle.split(Tensor([64, 40, 56, 29960],"float16"), list[20,20,], axis=1, )
paddle.split(Tensor([64, 480, 14, 9987],"float16"), list[120,120,120,120,], axis=1, )
paddle.split(Tensor([64, 480, 14, 9987],"float16"), list[240,240,], axis=1, )
paddle.split(Tensor([64, 480, 9987, 14],"float16"), list[120,120,120,120,], axis=1, )
paddle.split(Tensor([64, 480, 9987, 14],"float16"), list[240,240,], axis=1, )
paddle.split(Tensor([64, 56, 28, 42800],"float16"), list[28,28,], axis=1, )
paddle.split(Tensor([64, 56, 42800, 28],"float16"), list[28,28,], axis=1, )
paddle.split(Tensor([64, 576, 16645, 7],"float16"), num_or_sections=list[512,64,], axis=1, )
paddle.split(Tensor([64, 576, 7, 16645],"float16"), num_or_sections=list[512,64,], axis=1, )
paddle.split(Tensor([64, 624, 14, 7682],"float16"), list[156,156,156,156,], axis=1, )
paddle.split(Tensor([64, 624, 14, 7682],"float16"), list[312,312,], axis=1, )
paddle.split(Tensor([64, 624, 7682, 14],"float16"), list[156,156,156,156,], axis=1, )
paddle.split(Tensor([64, 624, 7682, 14],"float16"), list[312,312,], axis=1, )
paddle.split(Tensor([64, 640, 14980, 7],"float16"), num_or_sections=list[512,128,], axis=1, )
paddle.split(Tensor([64, 640, 7, 14980],"float16"), num_or_sections=list[512,128,], axis=1, )
paddle.split(Tensor([64, 67108865, 1, 1],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 80, 14980, 56],"float16"), num_or_sections=list[64,16,], axis=1, )
paddle.split(Tensor([64, 80, 56, 14980],"float16"), num_or_sections=list[64,16,], axis=1, )
paddle.split(Tensor([64, 96, 12484, 56],"float16"), num_or_sections=list[64,32,], axis=1, )
paddle.split(Tensor([64, 96, 56, 12484],"float16"), num_or_sections=list[64,32,], axis=1, )
paddle.split(Tensor([64, 960, 14, 4994],"float16"), list[240,240,240,240,], axis=1, )
paddle.split(Tensor([64, 960, 4994, 14],"float16"), list[240,240,240,240,], axis=1, )
paddle.split(Tensor([66144, 704, 7, 7],"float32"), num_or_sections=list[352,352,], axis=1, )
paddle.split(Tensor([6710887, 10, 34],"float32"), list[2,16,16,], axis=-1, )
paddle.split(Tensor([68479, 320, 14, 14],"float16"), num_or_sections=list[256,64,], axis=1, )
paddle.split(Tensor([691425, 33, 10, 10],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([6982, 43, 100, 76],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([7134, 192, 56, 56],"float16"), list[96,96,], axis=1, )
paddle.split(Tensor([742742, 1, 16, 192],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([74899, 16, 476, 4],"float32"), list[176,300,], axis=2, )
paddle.split(Tensor([760567127, 3],"float32"), 3, axis=-1, )
paddle.split(Tensor([760567127, 3],"float32"), 3, axis=1, )
paddle.split(Tensor([76088, 288, 14, 14],"float16"), num_or_sections=list[256,32,], axis=1, )
paddle.split(Tensor([7711, 34, 128, 128],"float16"), 2, axis=1, )
paddle.split(Tensor([7954, 54, 100, 100],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([8, 1, 1183456, 241],"float32"), num_or_sections=list[1,], axis=1, )
paddle.split(Tensor([8, 1, 241, 1183456],"float32"), num_or_sections=list[1,], axis=1, )
paddle.split(Tensor([8, 17409, 128, 128],"float32"), num_or_sections=8, axis=1, )
paddle.split(Tensor([8, 17409, 128, 128],"float32"), num_or_sections=9, axis=1, )
paddle.split(Tensor([8, 47535446, 6],"float32"), num_or_sections=list[5,0,3,], )
paddle.split(Tensor([8, 6, 47535446],"float32"), num_or_sections=list[5,0,3,], )
paddle.split(Tensor([8, 8, 128, 278529],"float32"), num_or_sections=8, axis=1, )
paddle.split(Tensor([8, 8, 278529, 128],"float32"), num_or_sections=8, axis=1, )
paddle.split(Tensor([8, 9, 128, 247581],"float32"), num_or_sections=9, axis=1, )
paddle.split(Tensor([8, 9, 247581, 128],"float32"), num_or_sections=9, axis=1, )
paddle.split(Tensor([8671, 16, 257, 64],"float32"), list[1,256,], axis=2, )
paddle.split(Tensor([88131, 15, 1726],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([885410, 1, 2577],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([89796, 10, 2541],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([90948, 32, 28, 28],"float32"), num_or_sections=list[16,16,], axis=1, )
paddle.split(Tensor([94454, 232, 14, 14],"float16"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([950709, 24, 10, 10],"float32"), num_or_sections=list[12,12,], axis=1, )
paddle.split(Tensor([97827, 56, 28, 28],"float16"), list[28,28,], axis=1, )
paddle.split(Tensor([98775, 11, 2100],"float32"), list[100,400,1600,], axis=-1, )
paddle.split(x=Tensor([1, 2281701379],"float32"), axis=1, num_or_sections=3, )
paddle.split(x=Tensor([10106, 288, 28, 28],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([11369, 64, 56, 56],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([124, 1024, 2568, 7],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([124, 1024, 7, 2568],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([124, 128, 28, 5135],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([124, 128, 5135, 28],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([124, 160, 14, 8215],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([124, 160, 8215, 14],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([124, 192, 28, 3423],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([124, 192, 3423, 28],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([124, 256, 14, 5135],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([124, 256, 5135, 14],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([124, 320, 7, 8215],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([124, 320, 8215, 7],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([124, 384, 14, 3423],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([124, 384, 3423, 14],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([124, 40, 56, 8215],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([124, 40, 8215, 56],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([124, 512, 14, 2568],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([124, 512, 2568, 14],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([124, 64, 5135, 56],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([124, 64, 56, 5135],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([124, 768, 3423, 7],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([124, 768, 7, 3423],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([124, 80, 28, 8215],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([124, 80, 8215, 28],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([124, 96, 3423, 56],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([124, 96, 56, 3423],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([1431655766, 3],"float16"), num_or_sections=2, )
paddle.split(x=Tensor([1431655766, 3],"float16"), num_or_sections=list[2,-1,], axis=-1, )
paddle.split(x=Tensor([1431655766, 3],"float16"), num_or_sections=tuple(2,1,), axis=1, )
paddle.split(x=Tensor([145517, 320, 7, 7],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([15158, 192, 28, 28],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([18190, 40, 56, 56],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([2, 2147483649],"float16"), num_or_sections=2, )
paddle.split(x=Tensor([2, 2147483649],"float16"), num_or_sections=list[2,-1,], axis=-1, )
paddle.split(x=Tensor([20211, 576, 14, 14],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([22737, 128, 28, 28],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([22737, 512, 14, 14],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([30316, 1536, 7, 7],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([30316, 384, 14, 14],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([36380, 80, 28, 28],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([380283564, 6],"float32"), axis=1, num_or_sections=3, )
paddle.split(x=Tensor([4, 1152, 7, 70738],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([4, 1152, 70738, 7],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([4, 144, 56, 70738],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.split(x=Tensor([4, 144, 70738, 56],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.split(x=Tensor([4, 1536, 53053, 7],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([4, 1536, 7, 53053],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([4, 288, 28, 70738],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([4, 288, 70738, 28],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([4, 576, 14, 70738],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([4, 576, 70738, 14],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([40422, 1152, 7, 7],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([45474, 1024, 7, 7],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([45474, 256, 14, 14],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([5053, 144, 56, 56],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.split(x=Tensor([60632, 768, 7, 7],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([72759, 160, 14, 14],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([7579, 96, 56, 56],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([760567127, 3],"int32"), num_or_sections=3, axis=Tensor([1],"int32"), )
paddle.sqrt(Tensor([1, 1, 2281701379],"float32"), )
paddle.sqrt(Tensor([1, 1, 4294967297],"float16"), )
paddle.sqrt(Tensor([1, 10, 228170138],"float32"), )
paddle.sqrt(Tensor([1, 11, 207427399],"float32"), )
paddle.sqrt(Tensor([1, 1140850690, 2],"float32"), )
paddle.sqrt(Tensor([1, 12, 190141782],"float32"), )
paddle.sqrt(Tensor([1, 13, 175515491],"float32"), )
paddle.sqrt(Tensor([1, 14, 162978670],"float32"), )
paddle.sqrt(Tensor([1, 1431655766, 3],"float16"), )
paddle.sqrt(Tensor([1, 16, 142606337],"float32"), )
paddle.sqrt(Tensor([1, 2, 1140850690],"float32"), )
paddle.sqrt(Tensor([1, 20, 114085069],"float32"), )
paddle.sqrt(Tensor([1, 2281701379, 1],"float32"), )
paddle.sqrt(Tensor([1, 2281701379],"float32"), )
paddle.sqrt(Tensor([1, 3, 1431655766],"float16"), )
paddle.sqrt(Tensor([1, 3, 760567127],"float32"), )
paddle.sqrt(Tensor([1, 4, 570425345],"float32"), )
paddle.sqrt(Tensor([1, 4294967297],"float16"), )
paddle.sqrt(Tensor([1, 429496730, 10],"float16"), )
paddle.sqrt(Tensor([1, 5, 456340276],"float32"), )
paddle.sqrt(Tensor([10, 228170138],"float32"), )
paddle.sqrt(Tensor([100, 22817014],"float32"), )
paddle.sqrt(Tensor([103, 22152441],"float32"), )
paddle.sqrt(Tensor([104, 21939437],"float32"), )
paddle.sqrt(Tensor([1073741825, 4],"float16"), )
paddle.sqrt(Tensor([108, 21126865],"float32"), )
paddle.sqrt(Tensor([11, 207427399],"float32"), )
paddle.sqrt(Tensor([111, 20555869],"float32"), )
paddle.sqrt(Tensor([114085069, 20, 1],"float32"), )
paddle.sqrt(Tensor([1140850690, 2, 1],"float32"), )
paddle.sqrt(Tensor([11641334, 1, 14, 14],"float32"), )
paddle.sqrt(Tensor([124, 1, 1314345, 14],"float32"), )
paddle.sqrt(Tensor([124, 1, 14, 1314345],"float32"), )
paddle.sqrt(Tensor([124, 1, 191676, 96],"float32"), )
paddle.sqrt(Tensor([124, 1, 24, 766701],"float32"), )
paddle.sqrt(Tensor([124, 1, 28, 657173],"float32"), )
paddle.sqrt(Tensor([124, 1, 328587, 56],"float32"), )
paddle.sqrt(Tensor([124, 1, 383351, 48],"float32"), )
paddle.sqrt(Tensor([124, 1, 48, 383351],"float32"), )
paddle.sqrt(Tensor([124, 1, 56, 328587],"float32"), )
paddle.sqrt(Tensor([124, 1, 657173, 28],"float32"), )
paddle.sqrt(Tensor([124, 1, 766701, 24],"float32"), )
paddle.sqrt(Tensor([124, 1, 96, 191676],"float32"), )
paddle.sqrt(Tensor([124, 1997, 96, 96],"float32"), )
paddle.sqrt(Tensor([124, 23471, 28, 28],"float32"), )
paddle.sqrt(Tensor([124, 31946, 24, 24],"float32"), )
paddle.sqrt(Tensor([124, 5868, 56, 56],"float32"), )
paddle.sqrt(Tensor([124, 7987, 48, 48],"float32"), )
paddle.sqrt(Tensor([124, 93882, 14, 14],"float32"), )
paddle.sqrt(Tensor([128, 1, 1273271, 14],"float32"), )
paddle.sqrt(Tensor([128, 1, 14, 1273271],"float32"), )
paddle.sqrt(Tensor([128, 1, 185686, 96],"float32"), )
paddle.sqrt(Tensor([128, 1, 24, 742742],"float32"), )
paddle.sqrt(Tensor([128, 1, 28, 636636],"float32"), )
paddle.sqrt(Tensor([128, 1, 318318, 56],"float32"), )
paddle.sqrt(Tensor([128, 1, 371371, 48],"float32"), )
paddle.sqrt(Tensor([128, 1, 48, 371371],"float32"), )
paddle.sqrt(Tensor([128, 1, 56, 318318],"float32"), )
paddle.sqrt(Tensor([128, 1, 636636, 28],"float32"), )
paddle.sqrt(Tensor([128, 1, 742742, 24],"float32"), )
paddle.sqrt(Tensor([128, 1, 96, 185686],"float32"), )
paddle.sqrt(Tensor([128, 1935, 96, 96],"float32"), )
paddle.sqrt(Tensor([128, 22737, 28, 28],"float32"), )
paddle.sqrt(Tensor([128, 30948, 24, 24],"float32"), )
paddle.sqrt(Tensor([128, 5685, 56, 56],"float32"), )
paddle.sqrt(Tensor([128, 7737, 48, 48],"float32"), )
paddle.sqrt(Tensor([128, 90948, 14, 14],"float32"), )
paddle.sqrt(Tensor([142606337, 16, 1],"float32"), )
paddle.sqrt(Tensor([1431655766, 1, 3],"float16"), )
paddle.sqrt(Tensor([143165577, 3, 10],"float16"), )
paddle.sqrt(Tensor([14350324, 159],"float32"), )
paddle.sqrt(Tensor([16, 1, 1, 142606337],"float32"), )
paddle.sqrt(Tensor([16, 1, 10186167, 14],"float32"), )
paddle.sqrt(Tensor([16, 1, 14, 10186167],"float32"), )
paddle.sqrt(Tensor([16, 1, 142606337, 1],"float32"), )
paddle.sqrt(Tensor([16, 1, 24, 5941931],"float32"), )
paddle.sqrt(Tensor([16, 1, 5941931, 24],"float32"), )
paddle.sqrt(Tensor([16, 142606337, 1, 1],"float32"), )
paddle.sqrt(Tensor([16, 247581, 24, 24],"float32"), )
paddle.sqrt(Tensor([16, 727584, 14, 14],"float32"), )
paddle.sqrt(Tensor([162978670, 14, 1],"float32"), )
paddle.sqrt(Tensor([175515491, 13, 1],"float32"), )
paddle.sqrt(Tensor([190141782, 12, 1],"float32"), )
paddle.sqrt(Tensor([2, 1, 512, 4, 557057],"float32"), )
paddle.sqrt(Tensor([2, 1, 512, 557057, 4],"float32"), )
paddle.sqrt(Tensor([2, 1, 71303169, 4, 4],"float32"), )
paddle.sqrt(Tensor([2, 139265, 512, 4, 4],"float32"), )
paddle.sqrt(Tensor([207427399, 11, 1],"float32"), )
paddle.sqrt(Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.sqrt(Tensor([2281701379, 1, 1],"float32"), )
paddle.sqrt(Tensor([2281701379, 1],"float32"), )
paddle.sqrt(Tensor([2281701379],"float32"), )
paddle.sqrt(Tensor([228170138, 10, 1],"float32"), )
paddle.sqrt(Tensor([2293168, 995],"float32"), )
paddle.sqrt(Tensor([24422, 93431],"float32"), )
paddle.sqrt(Tensor([247581, 1, 96, 96],"float32"), )
paddle.sqrt(Tensor([278529, 1, 512, 4, 4],"float32"), )
paddle.sqrt(Tensor([2910334, 1, 28, 28],"float32"), )
paddle.sqrt(Tensor([3961288, 1, 24, 24],"float32"), )
paddle.sqrt(Tensor([4, 15, 3, 256, 49517],"float32"), )
paddle.sqrt(Tensor([4, 15, 3, 49517, 256],"float32"), )
paddle.sqrt(Tensor([4, 15, 581, 256, 256],"float32"), )
paddle.sqrt(Tensor([4, 2902, 3, 256, 256],"float32"), )
paddle.sqrt(Tensor([4294967297],"float16"), )
paddle.sqrt(Tensor([429496730, 10],"float16"), )
paddle.sqrt(Tensor([456340276, 5, 1],"float32"), )
paddle.sqrt(Tensor([570425345, 2, 2],"float32"), )
paddle.sqrt(Tensor([570425345, 4, 1],"float32"), )
paddle.sqrt(Tensor([570425345, 4],"float32"), )
paddle.sqrt(Tensor([727584, 1, 56, 56],"float32"), )
paddle.sqrt(Tensor([760567127, 3, 1],"float32"), )
paddle.sqrt(Tensor([774, 15, 3, 256, 256],"float32"), )
paddle.sqrt(Tensor([990322, 1, 48, 48],"float32"), )
paddle.sqrt(x=Tensor([1140850690, 1, 2],"float32"), )
paddle.sqrt(x=Tensor([13, 1, 175515491],"float32"), )
paddle.sqrt(x=Tensor([13, 175515491, 1],"float32"), )
paddle.sqrt(x=Tensor([1431655766, 3],"float16"), )
paddle.sqrt(x=Tensor([16, 1, 142606337],"float32"), )
paddle.sqrt(x=Tensor([16, 142606337, 1],"float32"), )
paddle.sqrt(x=Tensor([16, 71303169, 2],"float32"), )
paddle.sqrt(x=Tensor([2, 1, 1140850690],"float32"), )
paddle.sqrt(x=Tensor([2, 570425345, 2],"float32"), )
paddle.sqrt(x=Tensor([2281701379, 1, 1],"float32"), )
paddle.sqrt(x=Tensor([3, 1, 760567127],"float32"), )
paddle.sqrt(x=Tensor([3, 1431655766],"float16"), )
paddle.sqrt(x=Tensor([3, 760567127, 1],"float32"), )
paddle.sqrt(x=Tensor([4294967297],"float16"), )
paddle.sqrt(x=Tensor([4294967297],"float16"), name=None, )
paddle.square(Tensor([1, 1, 2281701379],"float32"), )
paddle.square(Tensor([1, 2281701379, 1],"float32"), )
paddle.square(Tensor([1, 2281701379],"float32"), )
paddle.square(Tensor([1, 2281701379],"float32"), name=None, )
paddle.square(Tensor([1, 64, 64, 1048577],"float16"), name=None, )
paddle.square(Tensor([1, 64, 67108865, 1],"float16"), name=None, )
paddle.square(Tensor([1, 67108865, 64, 1],"float16"), name=None, )
paddle.square(Tensor([10, 2, 114085069],"float32"), )
paddle.square(Tensor([10, 228170138],"float32"), )
paddle.square(Tensor([10, 228170138],"float32"), name=None, )
paddle.square(Tensor([10, 429496730],"float16"), )
paddle.square(Tensor([10, 76056713, 3],"float32"), )
paddle.square(Tensor([100, 22817014, 1],"float32"), )
paddle.square(Tensor([100, 22817014],"float32"), )
paddle.square(Tensor([100, 22817014],"float32"), name=None, )
paddle.square(Tensor([100, 376, 60684],"float32"), )
paddle.square(Tensor([1000, 2281702],"float32"), )
paddle.square(Tensor([1000, 2281702],"float32"), name=None, )
paddle.square(Tensor([10000, 228171],"float32"), )
paddle.square(Tensor([10000, 228171],"float32"), name=None, )
paddle.square(Tensor([100000, 22818],"float32"), name=None, )
paddle.square(Tensor([101, 22591103],"float32"), )
paddle.square(Tensor([101, 22591103],"float32"), name=None, )
paddle.square(Tensor([10186167, 7, 32],"float32"), )
paddle.square(Tensor([10201, 223675],"float32"), name=None, )
paddle.square(Tensor([1024, 2228225],"float32"), )
paddle.square(Tensor([1024, 2228225],"float32"), name=None, )
paddle.square(Tensor([10240, 222823],"float32"), name=None, )
paddle.square(Tensor([104, 21939437],"float32"), )
paddle.square(Tensor([1048577, 64, 64, 1],"float16"), name=None, )
paddle.square(Tensor([1100, 2074274],"float32"), name=None, )
paddle.square(Tensor([1118482, 12, 170, 1],"float32"), )
paddle.square(Tensor([1138574, 501, 4],"float32"), )
paddle.square(Tensor([1140850690, 2],"float32"), )
paddle.square(Tensor([11606, 196608],"float32"), )
paddle.square(Tensor([11661, 195670],"float32"), )
paddle.square(Tensor([1168, 1953512],"float32"), name=None, )
paddle.square(Tensor([11883862, 96, 2],"float32"), )
paddle.square(Tensor([11883862, 96, 2],"float32"), name=None, )
paddle.square(Tensor([1200, 1901418],"float32"), )
paddle.square(Tensor([1209, 1887264],"float32"), name=None, )
paddle.square(Tensor([125, 18253612],"float32"), name=None, )
paddle.square(Tensor([126761188, 2, 3, 3],"float32"), )
paddle.square(Tensor([128, 17825793],"float32"), )
paddle.square(Tensor([128, 17825793],"float32"), name=None, )
paddle.square(Tensor([128512, 17755],"float32"), )
paddle.square(Tensor([128512, 17755],"float32"), name=None, )
paddle.square(Tensor([1291, 1767391],"float32"), )
paddle.square(Tensor([13, 5484860, 32],"float32"), )
paddle.square(Tensor([13, 7, 25073642],"float32"), )
paddle.square(Tensor([1300, 1755155],"float32"), name=None, )
paddle.square(Tensor([14350324, 159],"float32"), )
paddle.square(Tensor([147015, 15521],"float32"), name=None, )
paddle.square(Tensor([1485, 1536500],"float32"), name=None, )
paddle.square(Tensor([15, 152113426],"float32"), name=None, )
paddle.square(Tensor([1515, 1506074],"float32"), name=None, )
paddle.square(Tensor([1520121, 1501, 1],"float32"), )
paddle.square(Tensor([15548, 146753],"float32"), )
paddle.square(Tensor([156816, 14551],"float32"), name=None, )
paddle.square(Tensor([16, 142606337, 1],"float32"), )
paddle.square(Tensor([16, 142606337],"float32"), )
paddle.square(Tensor([16, 71303169, 2],"float32"), )
paddle.square(Tensor([16, 71303169, 2],"float32"), name=None, )
paddle.square(Tensor([16, 96, 1485483],"float32"), )
paddle.square(Tensor([16, 96, 1485483],"float32"), name=None, )
paddle.square(Tensor([1609, 1418087],"float32"), name=None, )
paddle.square(Tensor([17, 134217729, 1],"float32"), )
paddle.square(Tensor([17, 376, 356963],"float32"), )
paddle.square(Tensor([17152, 133029],"float32"), )
paddle.square(Tensor([17152, 133029],"float32"), name=None, )
paddle.square(Tensor([17825793, 128, 1],"float32"), name=None, )
paddle.square(Tensor([17825793, 128],"float32"), )
paddle.square(Tensor([1820, 1253683],"float32"), name=None, )
paddle.square(Tensor([2, 10, 114085069],"float32"), )
paddle.square(Tensor([2, 10, 114085069],"float32"), name=None, )
paddle.square(Tensor([2, 114085069, 10],"float32"), )
paddle.square(Tensor([2, 114085069, 10],"float32"), name=None, )
paddle.square(Tensor([2, 1140850690, 1],"float32"), )
paddle.square(Tensor([2, 1501, 760061],"float32"), )
paddle.square(Tensor([2, 570425345, 2],"float32"), )
paddle.square(Tensor([2, 570425345, 2],"float32"), name=None, )
paddle.square(Tensor([2, 96, 11883862],"float32"), )
paddle.square(Tensor([2, 96, 11883862],"float32"), name=None, )
paddle.square(Tensor([20, 114085069],"float32"), name=None, )
paddle.square(Tensor([2147483649, 2],"float16"), )
paddle.square(Tensor([2228225, 1024],"float32"), )
paddle.square(Tensor([2281701379, 1, 1],"float32"), )
paddle.square(Tensor([2281701379, 1],"float32"), )
paddle.square(Tensor([2281701379, 1],"float32"), name=None, )
paddle.square(Tensor([2281701379],"float32"), )
paddle.square(Tensor([228170138, 10],"float32"), )
paddle.square(Tensor([228170138, 10],"float32"), name=None, )
paddle.square(Tensor([22817014, 10, 10],"float32"), )
paddle.square(Tensor([22817014, 10, 10],"float32"), name=None, )
paddle.square(Tensor([22817014, 100],"float32"), name=None, )
paddle.square(Tensor([2281702, 1000],"float32"), )
paddle.square(Tensor([23211, 4, 3, 64, 128],"float32"), name=None, )
paddle.square(Tensor([23767723, 96, 1],"float32"), )
paddle.square(Tensor([24422, 93431],"float32"), )
paddle.square(Tensor([256, 128, 69633],"float32"), name=None, )
paddle.square(Tensor([256, 15, 594194],"float32"), name=None, )
paddle.square(Tensor([256, 16, 557057],"float32"), name=None, )
paddle.square(Tensor([256, 2970966, 3],"float32"), name=None, )
paddle.square(Tensor([256, 8912897, 1],"float32"), name=None, )
paddle.square(Tensor([26, 2742430, 32],"float32"), )
paddle.square(Tensor([26, 7, 12536821],"float32"), )
paddle.square(Tensor([3, 2, 126761188, 3],"float32"), )
paddle.square(Tensor([3, 2, 3, 126761188],"float32"), )
paddle.square(Tensor([3, 3, 10, 25352238],"float32"), )
paddle.square(Tensor([3, 3, 10, 25352238],"float32"), name=None, )
paddle.square(Tensor([3, 3, 25352238, 10],"float32"), )
paddle.square(Tensor([3, 3, 25352238, 10],"float32"), name=None, )
paddle.square(Tensor([3, 760567127, 1],"float32"), )
paddle.square(Tensor([3, 7605672, 10, 10],"float32"), )
paddle.square(Tensor([3, 7605672, 10, 10],"float32"), name=None, )
paddle.square(Tensor([3, 84507459, 3, 3],"float32"), )
paddle.square(Tensor([3, 96, 7922575],"float32"), )
paddle.square(Tensor([30948, 3, 3, 64, 128],"float32"), name=None, )
paddle.square(Tensor([32, 17825793, 4],"float32"), )
paddle.square(Tensor([32, 501, 142322],"float32"), )
paddle.square(Tensor([3548, 12, 170, 316],"float32"), )
paddle.square(Tensor([3548, 12, 53592, 1],"float32"), )
paddle.square(Tensor([3548, 3783, 170, 1],"float32"), )
paddle.square(Tensor([380283564, 2, 3],"float32"), )
paddle.square(Tensor([4, 3, 357913942],"float16"), )
paddle.square(Tensor([4, 536870913, 2],"float16"), )
paddle.square(Tensor([4294967297],"float16"), )
paddle.square(Tensor([4456449, 16, 32],"float32"), )
paddle.square(Tensor([4456449, 512],"float32"), )
paddle.square(Tensor([47535446, 16, 3],"float32"), name=None, )
paddle.square(Tensor([50, 1501, 30403],"float32"), )
paddle.square(Tensor([50, 45634028, 1],"float32"), )
paddle.square(Tensor([50704476, 15, 3],"float32"), name=None, )
paddle.square(Tensor([512, 1485483, 3],"float32"), name=None, )
paddle.square(Tensor([512, 15, 297097],"float32"), name=None, )
paddle.square(Tensor([512, 16, 278529],"float32"), name=None, )
paddle.square(Tensor([52, 1371215, 32],"float32"), )
paddle.square(Tensor([52, 7, 6268411],"float32"), )
paddle.square(Tensor([557057, 64, 64, 1],"float32"), name=None, )
paddle.square(Tensor([6068355, 376, 1],"float32"), )
paddle.square(Tensor([64, 1, 64, 1048577],"float16"), name=None, )
paddle.square(Tensor([64, 1, 67108865, 1],"float16"), name=None, )
paddle.square(Tensor([64, 1048577, 64, 1],"float16"), name=None, )
paddle.square(Tensor([64, 1451, 3, 64, 128],"float32"), name=None, )
paddle.square(Tensor([64, 3, 1451, 64, 128],"float32"), name=None, )
paddle.square(Tensor([64, 3, 3, 30948, 128],"float32"), name=None, )
paddle.square(Tensor([64, 3, 3, 64, 61896],"float32"), name=None, )
paddle.square(Tensor([64, 4, 1089, 64, 128],"float32"), name=None, )
paddle.square(Tensor([64, 4, 3, 23211, 128],"float32"), name=None, )
paddle.square(Tensor([64, 4, 3, 64, 46422],"float32"), name=None, )
paddle.square(Tensor([64, 557057, 64, 1],"float32"), name=None, )
paddle.square(Tensor([64, 64, 1, 1048577],"float16"), name=None, )
paddle.square(Tensor([64, 64, 1048577, 1],"float16"), name=None, )
paddle.square(Tensor([64, 64, 557057, 1],"float32"), name=None, )
paddle.square(Tensor([64, 64, 64, 8705],"float32"), name=None, )
paddle.square(Tensor([64, 67108865, 1, 1],"float16"), name=None, )
paddle.square(Tensor([67108865, 1, 64, 1],"float16"), name=None, )
paddle.square(Tensor([67108865, 64, 1, 1],"float16"), name=None, )
paddle.square(Tensor([68, 33554433, 1],"float32"), )
paddle.square(Tensor([68, 376, 89241],"float32"), )
paddle.square(Tensor([715827883, 3, 2],"float16"), )
paddle.square(Tensor([742742, 3072],"float32"), )
paddle.square(Tensor([760567127, 3],"float32"), )
paddle.square(Tensor([7605672, 3, 10, 10],"float32"), )
paddle.square(Tensor([7605672, 3, 10, 10],"float32"), name=None, )
paddle.square(Tensor([8, 1, 512, 557057],"float32"), )
paddle.square(Tensor([8, 1, 557057, 512],"float32"), )
paddle.square(Tensor([8, 1089, 512, 512],"float32"), )
paddle.square(Tensor([8, 1501, 190016],"float32"), )
paddle.square(Tensor([8, 16, 17825793],"float32"), )
paddle.square(Tensor([8, 16, 33554433],"float16"), )
paddle.square(Tensor([8, 16777217, 32],"float16"), )
paddle.square(Tensor([8, 285212673, 1],"float32"), )
paddle.square(Tensor([8, 8912897, 32],"float32"), )
paddle.square(Tensor([8388609, 16, 32],"float16"), )
paddle.square(Tensor([8705, 1, 512, 512],"float32"), )
paddle.square(x=Tensor([2281701379],"float32"), )
paddle.square(x=Tensor([4294967297],"float16"), )
paddle.squeeze(Tensor([1, 1, 4294967297],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([1, 1, 4456449, 512],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1073741825, 4],"float16"), axis=0, )
paddle.squeeze(Tensor([1, 134217729, 32],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([1, 1431655766, 3],"float16"), axis=0, )
paddle.squeeze(Tensor([1, 17409, 16, 128, 64],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 175515491, 13],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 187679, 12158],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 2, 1, 1140850690],"float32"), )
paddle.squeeze(Tensor([1, 2, 1, 1140850690],"float32"), axis=Tensor([2],"int64"), )
paddle.squeeze(Tensor([1, 2, 19669840, 58],"float32"), )
paddle.squeeze(Tensor([1, 2, 380283564, 3],"float32"), axis=Tensor([2],"int64"), )
paddle.squeeze(Tensor([1, 2177, 1024, 1024],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 2281701379, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 2281701379],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 2281701379],"float32"), axis=list[0,], )
paddle.squeeze(Tensor([1, 2281701379],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([1, 2281701379],"int64"), )
paddle.squeeze(Tensor([1, 3, 1431655766],"float16"), axis=0, )
paddle.squeeze(Tensor([1, 3, 760567127],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 39339679, 1, 58],"float32"), )
paddle.squeeze(Tensor([1, 4, 570425345],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 4294967297],"float16"), axis=0, )
paddle.squeeze(Tensor([1, 570425345, 4],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 760567127, 1, 3],"float32"), axis=Tensor([2],"int64"), )
paddle.squeeze(Tensor([1, 760567127, 3],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 8, 16, 128, 139265],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 8, 16, 278529, 64],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 8, 34817, 128, 64],"float32"), axis=0, )
paddle.squeeze(Tensor([10, 10, 42949673],"float16"), )
paddle.squeeze(Tensor([10, 10, 42949673],"float16"), axis=-1, )
paddle.squeeze(Tensor([10, 20, 11408507],"float32"), )
paddle.squeeze(Tensor([10, 228170138, 1],"float32"), )
paddle.squeeze(Tensor([10, 228170138, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([10, 228170138],"int32"), axis=-1, )
paddle.squeeze(Tensor([10, 4, 57042535],"float32"), axis=-1, )
paddle.squeeze(Tensor([10, 42949673, 10],"float16"), )
paddle.squeeze(Tensor([10, 42949673, 10],"float16"), axis=-1, )
paddle.squeeze(Tensor([100, 22817014, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([100, 22817014],"float32"), axis=-1, )
paddle.squeeze(Tensor([100, 4, 10737419],"float16"), axis=-1, )
paddle.squeeze(Tensor([100, 4, 5704254],"float32"), axis=-1, )
paddle.squeeze(Tensor([100, 42949673, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([100, 42949673],"float16"), -1, )
paddle.squeeze(Tensor([100, 42949673],"float16"), 1, )
paddle.squeeze(Tensor([100, 42949673],"float16"), axis=-1, )
paddle.squeeze(Tensor([1000, 2281702],"float32"), axis=-1, )
paddle.squeeze(Tensor([1000, 4294968],"float16"), axis=-1, )
paddle.squeeze(Tensor([10008, 227988],"float32"), axis=-1, )
paddle.squeeze(Tensor([10008, 429154],"float16"), axis=-1, )
paddle.squeeze(Tensor([101, 22591103, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([101, 4, 10631108],"float16"), axis=-1, )
paddle.squeeze(Tensor([101, 4, 5647776],"float32"), axis=-1, )
paddle.squeeze(Tensor([101, 42524429, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([102, 22369622, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([102, 4, 10526881],"float16"), axis=-1, )
paddle.squeeze(Tensor([102, 4, 5592406],"float32"), axis=-1, )
paddle.squeeze(Tensor([102, 42107523, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1024, 2048, 1, 1089],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1024, 2048, 1089, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1024, 2228225, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([103, 22152441, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([103, 4, 10424678],"float16"), axis=-1, )
paddle.squeeze(Tensor([103, 4, 5538111],"float32"), axis=-1, )
paddle.squeeze(Tensor([103, 41698712, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([104, 1, 21939437],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([104, 235, 93431],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([104, 28, 783552],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([104, 36, 609429],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([105344, 21660],"float32"), )
paddle.squeeze(Tensor([1073741825, 1, 2, 2],"float16"), 1, )
paddle.squeeze(Tensor([1073741825, 2, 2, 1],"float16"), -1, )
paddle.squeeze(Tensor([1073741825, 2, 2, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1073741825, 4, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1114113, 2048, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([114085069, 20, 1],"float32"), )
paddle.squeeze(Tensor([1140850690, 2, 1],"float32"), axis=2, )
paddle.squeeze(Tensor([1140850690, 2],"float32"), )
paddle.squeeze(Tensor([1140850690, 2],"float32"), axis=-1, )
paddle.squeeze(Tensor([11930465, 6, 3, 4, 1, 5],"float16"), axis=4, )
paddle.squeeze(Tensor([128, 1, 17825793],"float32"), )
paddle.squeeze(Tensor([128, 1, 17825793],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([128, 1280, 1, 13927],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([128, 1280, 1, 26215],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([128, 1280, 13927, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([128, 1280, 26215, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([128, 17825793, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([128, 17825793],"float32"), axis=1, )
paddle.squeeze(Tensor([128, 17825793],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([128, 17825793],"float32"), list[-1,], )
paddle.squeeze(Tensor([128, 1783, 10000],"float32"), )
paddle.squeeze(Tensor([128, 191, 93431],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([128, 33554433, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([128, 33554433],"float16"), axis=1, )
paddle.squeeze(Tensor([13, 175515491, 1],"float32"), -1, )
paddle.squeeze(Tensor([13, 7, 25073642],"float32"), -1, )
paddle.squeeze(Tensor([134217729, 1, 32],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([14260634, 10, 8, 1, 2],"float32"), axis=-1, )
paddle.squeeze(Tensor([1431655766, 3],"float16"), axis=0, )
paddle.squeeze(Tensor([143165577, 3, 2, 5],"float16"), axis=-1, )
paddle.squeeze(Tensor([1431656, 3, 10, 10, 10],"float16"), axis=-1, )
paddle.squeeze(Tensor([14350324, 1, 159],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([158452, 1, 3, 1600, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([158452, 1, 3, 3, 1600],"float32"), axis=1, )
paddle.squeeze(Tensor([16, 1, 142606337],"float32"), axis=1, )
paddle.squeeze(Tensor([16, 1, 142606337],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([16, 356516, 400],"float32"), axis=1, )
paddle.squeeze(Tensor([16, 896896, 159],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([16385, 512, 512, 1],"float16"), -1, )
paddle.squeeze(Tensor([1680193, 1358],"int64"), )
paddle.squeeze(Tensor([17825793, 128],"float32"), )
paddle.squeeze(Tensor([1782580, 1280, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1914, 2048, 1, 1096],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1914, 2048, 1096, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1914, 2243975, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1917, 2048, 1, 1094],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1917, 2048, 1094, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1917, 2240463, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([192, 11883862],"float32"), list[-1,], )
paddle.squeeze(Tensor([1921, 2048, 1, 1092],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1921, 2048, 1092, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1921, 2235798, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1929, 2048, 1, 1088],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1929, 2048, 1088, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1929, 2226526, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1934, 2048, 1, 1085],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1934, 2048, 1085, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1934, 2220770, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1947, 2048, 1, 1078],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1947, 2048, 1078, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1947, 2205942, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1950, 1170104, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1950, 2048, 1, 1076],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1950, 2048, 1, 572],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1950, 2048, 1076, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1950, 2048, 572, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1950, 2202548, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([19528, 116843],"float32"), )
paddle.squeeze(Tensor([19669840, 2, 1, 58],"float32"), )
paddle.squeeze(Tensor([2, 1, 1073741825, 2],"float16"), 1, )
paddle.squeeze(Tensor([2, 1, 2, 1073741825],"float16"), 1, )
paddle.squeeze(Tensor([2, 1024, 1024, 1089],"float32"), axis=-1, )
paddle.squeeze(Tensor([2, 1024, 1114113, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2, 1073741825, 2, 1],"float16"), -1, )
paddle.squeeze(Tensor([2, 1073741825, 2, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([2, 1114113, 1024, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2, 1140850690, 1],"float32"), )
paddle.squeeze(Tensor([2, 1140850690],"float32"), )
paddle.squeeze(Tensor([2, 1140850690],"float32"), axis=1, )
paddle.squeeze(Tensor([2, 1140850690],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([2, 2, 1073741825, 1],"float16"), -1, )
paddle.squeeze(Tensor([2, 2, 1073741825, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([2, 2, 2, 536870913],"float16"), -1, )
paddle.squeeze(Tensor([2, 2, 2, 536870913],"float16"), axis=-1, )
paddle.squeeze(Tensor([2, 2147483649],"float16"), )
paddle.squeeze(Tensor([2, 2147483649],"float16"), 1, )
paddle.squeeze(Tensor([2, 2147483649],"float16"), list[-1,], )
paddle.squeeze(Tensor([2, 214748365, 2, 5],"float16"), axis=-1, )
paddle.squeeze(Tensor([2, 2147484, 10, 10, 10],"float16"), axis=-1, )
paddle.squeeze(Tensor([2, 2228225, 512, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2, 3, 10, 10, 7158279],"float16"), axis=-1, )
paddle.squeeze(Tensor([2, 3, 10, 7158279, 10],"float16"), axis=-1, )
paddle.squeeze(Tensor([2, 3, 143165577, 5],"float16"), axis=-1, )
paddle.squeeze(Tensor([2, 3, 2, 357913942],"float16"), axis=-1, )
paddle.squeeze(Tensor([2, 3, 380283564],"float32"), )
paddle.squeeze(Tensor([2, 3, 7158279, 10, 10],"float16"), axis=-1, )
paddle.squeeze(Tensor([2, 512, 1024, 2177],"float32"), axis=-1, )
paddle.squeeze(Tensor([2, 512, 2228225, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2, 512, 512, 4353],"float32"), axis=-1, )
paddle.squeeze(Tensor([2, 536870913, 2, 2],"float16"), 1, )
paddle.squeeze(Tensor([2097153, 2048, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([2177, 1024, 1024, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2177, 8, 16, 128, 64],"float32"), axis=0, )
paddle.squeeze(Tensor([22737, 2048, 1, 7, 7],"float32"), axis=2, )
paddle.squeeze(Tensor([2281701379, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2281701379, 1],"float32"), axis=1, )
paddle.squeeze(Tensor([2281701379, 1],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([2281701379, 1],"float32"), list[-1,], )
paddle.squeeze(Tensor([2281701379],"float32"), )
paddle.squeeze(Tensor([2281701379],"float32"), axis=-1, )
paddle.squeeze(Tensor([2281701379],"float32"), axis=0, )
paddle.squeeze(Tensor([228170138, 1, 10],"float32"), axis=1, )
paddle.squeeze(Tensor([22817014, 1, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([22817014, 100, 1],"float32"), -1, )
paddle.squeeze(Tensor([228171, 1, 100, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([228171, 1, 10000],"float32"), )
paddle.squeeze(Tensor([2293168, 1, 995],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([23767723, 1, 96],"float32"), axis=1, )
paddle.squeeze(Tensor([23860930, 6, 3, 1, 2, 5],"float16"), axis=3, )
paddle.squeeze(Tensor([24, 1, 95070891],"float32"), axis=1, )
paddle.squeeze(Tensor([24, 990322, 96],"float32"), axis=1, )
paddle.squeeze(Tensor([24422, 1, 93431],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([253522376, 3, 3],"float32"), axis=0, )
paddle.squeeze(Tensor([256, 8912897],"float32"), list[-1,], )
paddle.squeeze(Tensor([26336, 86639],"float32"), )
paddle.squeeze(Tensor([2659, 1, 800, 1073],"int32"), axis=1, )
paddle.squeeze(Tensor([274878, 125, 125, 1],"float16"), -1, )
paddle.squeeze(Tensor([285212673, 1, 8],"float32"), list[1,], )
paddle.squeeze(Tensor([29826162, 6, 3, 4, 2, 1],"float16"), axis=5, )
paddle.squeeze(Tensor([3, 1, 158452, 1600, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 158452, 3, 1600],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 3, 158452, 1600],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 3, 1600, 158452],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 3, 3, 84507459],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 3, 40, 6338060],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 3, 6338060, 40],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 3, 84507459, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 40, 40, 475355],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 40, 6338060, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 475355, 40, 40],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 6338060, 40, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 158452, 3, 40, 40],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 158452, 40, 40, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 2, 380283564],"float32"), axis=2, )
paddle.squeeze(Tensor([3, 23860930, 3, 4, 1, 5],"float16"), axis=4, )
paddle.squeeze(Tensor([3, 47721859, 3, 1, 2, 5],"float16"), axis=3, )
paddle.squeeze(Tensor([3, 52818, 3, 1600, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 52818, 3, 3, 1600],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 59652324, 3, 4, 2, 1],"float16"), axis=5, )
paddle.squeeze(Tensor([3, 6, 11930465, 4, 1, 5],"float16"), axis=4, )
paddle.squeeze(Tensor([3, 6, 23860930, 1, 2, 5],"float16"), axis=3, )
paddle.squeeze(Tensor([3, 6, 29826162, 4, 2, 1],"float16"), axis=5, )
paddle.squeeze(Tensor([3, 6, 3, 1, 15907287, 5],"float16"), axis=3, )
paddle.squeeze(Tensor([3, 6, 3, 1, 2, 39768216],"float16"), axis=3, )
paddle.squeeze(Tensor([3, 6, 3, 15907287, 1, 5],"float16"), axis=4, )
paddle.squeeze(Tensor([3, 6, 3, 39768216, 2, 1],"float16"), axis=5, )
paddle.squeeze(Tensor([3, 6, 3, 4, 1, 19884108],"float16"), axis=4, )
paddle.squeeze(Tensor([3, 6, 3, 4, 19884108, 1],"float16"), axis=5, )
paddle.squeeze(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), axis=5, )
paddle.squeeze(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), axis=4, )
paddle.squeeze(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), axis=3, )
paddle.squeeze(Tensor([3, 760567127, 1],"float32"), axis=2, )
paddle.squeeze(Tensor([3, 760567127],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([3, 760567127],"float32"), list[-1,], )
paddle.squeeze(Tensor([3040, 187679, 4],"float32"), axis=0, )
paddle.squeeze(Tensor([32, 1, 71303169],"float32"), axis=1, )
paddle.squeeze(Tensor([32, 1, 71303169],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([32, 123791, 576],"float32"), axis=1, )
paddle.squeeze(Tensor([32, 448448, 159],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([325957340, 7, 1],"float32"), -1, )
paddle.squeeze(Tensor([325957340, 7],"float32"), axis=list[0,], )
paddle.squeeze(Tensor([3355444, 1280, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([357913942, 3, 4],"float16"), axis=0, )
paddle.squeeze(Tensor([380283564, 2, 1, 3],"float32"), axis=Tensor([2],"int64"), )
paddle.squeeze(Tensor([380283564, 6],"float32"), axis=list[0,], )
paddle.squeeze(Tensor([3961288, 1, 576],"float32"), axis=1, )
paddle.squeeze(Tensor([4, 1, 1073741825],"float16"), axis=1, )
paddle.squeeze(Tensor([4, 1, 570425345],"float32"), axis=1, )
paddle.squeeze(Tensor([4, 100, 5704254],"float32"), -1, )
paddle.squeeze(Tensor([4, 1024, 1024, 545],"float32"), axis=-1, )
paddle.squeeze(Tensor([4, 1024, 557057, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([4, 1073741825, 1],"float16"), axis=2, )
paddle.squeeze(Tensor([4, 1073741825],"float16"), axis=1, )
paddle.squeeze(Tensor([4, 1114113, 512, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([4, 1114113, 512],"float32"), axis=1, )
paddle.squeeze(Tensor([4, 125, 125, 68720],"float16"), -1, )
paddle.squeeze(Tensor([4, 125, 8589935, 1],"float16"), -1, )
paddle.squeeze(Tensor([4, 178956971, 6],"float16"), axis=1, )
paddle.squeeze(Tensor([4, 2097153, 512, 1],"float16"), -1, )
paddle.squeeze(Tensor([4, 512, 1024, 1089],"float32"), axis=-1, )
paddle.squeeze(Tensor([4, 512, 1114113, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([4, 512, 2097153, 1],"float16"), -1, )
paddle.squeeze(Tensor([4, 512, 512, 2177],"float32"), axis=-1, )
paddle.squeeze(Tensor([4, 512, 512, 4097],"float16"), -1, )
paddle.squeeze(Tensor([4, 557057, 1024, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([4, 570425345, 1],"float32"), -1, )
paddle.squeeze(Tensor([4, 570425345],"float32"), axis=1, )
paddle.squeeze(Tensor([4, 570425345],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([4, 570425345],"float32"), list[-1,], )
paddle.squeeze(Tensor([4, 7, 153391690],"float16"), axis=2, )
paddle.squeeze(Tensor([4, 8589935, 125, 1],"float16"), -1, )
paddle.squeeze(Tensor([40, 1, 57042535],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([40, 57330, 995],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([4053, 187679, 3],"float32"), axis=0, )
paddle.squeeze(Tensor([4294967297, 1],"float16"), -1, )
paddle.squeeze(Tensor([4294967297, 1],"float16"), 1, )
paddle.squeeze(Tensor([4294967297, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([4294967297, 1],"float16"), axis=1, )
paddle.squeeze(Tensor([4294967297, 1],"float16"), list[-1,], )
paddle.squeeze(Tensor([4294967297],"float16"), axis=0, )
paddle.squeeze(Tensor([42949673, 1, 100],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([42949673, 10, 10],"float16"), )
paddle.squeeze(Tensor([42949673, 10, 10],"float16"), axis=-1, )
paddle.squeeze(Tensor([429497, 1, 100, 100],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([4353, 512, 1024, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([4456449, 1, 512],"float32"), axis=1, )
paddle.squeeze(Tensor([446, 512, 1, 100, 100],"float32"), axis=list[2,], )
paddle.squeeze(Tensor([44739243, 1, 96],"float16"), axis=1, )
paddle.squeeze(Tensor([456340276, 1, 5],"float32"), axis=1, )
paddle.squeeze(Tensor([475355, 1, 3, 40, 40],"float32"), axis=1, )
paddle.squeeze(Tensor([475355, 1, 40, 40, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([477218589, 3, 3],"float16"), axis=0, )
paddle.squeeze(Tensor([5, 1, 456340276],"float32"), axis=1, )
paddle.squeeze(Tensor([5, 1, 858993460],"float16"), axis=1, )
paddle.squeeze(Tensor([5, 10, 22817014, 1, 2],"float32"), axis=-1, )
paddle.squeeze(Tensor([5, 10, 8, 1, 5704254],"float32"), axis=-1, )
paddle.squeeze(Tensor([5, 10, 8, 2852127, 2],"float32"), axis=-1, )
paddle.squeeze(Tensor([5, 214748365, 4],"float16"), axis=1, )
paddle.squeeze(Tensor([5, 28521268, 8, 1, 2],"float32"), axis=-1, )
paddle.squeeze(Tensor([5, 456340276],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([5, 45634028, 10],"float32"), axis=1, )
paddle.squeeze(Tensor([5, 858993460],"float16"), -1, )
paddle.squeeze(Tensor([5, 858993460],"float16"), axis=1, )
paddle.squeeze(Tensor([512, 4456449],"float32"), list[-1,], )
paddle.squeeze(Tensor([5168, 441506],"float32"), )
paddle.squeeze(Tensor([570425345, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([570425345, 4],"float32"), axis=list[0,], )
paddle.squeeze(Tensor([5704254, 1, 400],"float32"), axis=1, )
paddle.squeeze(Tensor([58584, 38948],"float32"), )
paddle.squeeze(Tensor([6, 380283564],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([60044774, 38, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([613566757, 7, 1],"float16"), axis=2, )
paddle.squeeze(Tensor([64, 1, 35651585],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([64, 1, 67108865],"float16"), axis=1, )
paddle.squeeze(Tensor([64, 35651585],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([64, 35651585],"float32"), list[-1,], )
paddle.squeeze(Tensor([64, 35831, 995],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([64, 699051, 96],"float16"), axis=1, )
paddle.squeeze(Tensor([65191468, 35, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([67108865, 34, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([69142467, 33, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([7, 613566757],"float16"), axis=1, )
paddle.squeeze(Tensor([71303169, 32, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([715827883, 1, 6],"float16"), axis=1, )
paddle.squeeze(Tensor([73603271, 31, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([753286, 3029],"int64"), )
paddle.squeeze(Tensor([760567127, 3, 1],"float32"), )
paddle.squeeze(Tensor([760567127, 3],"float32"), )
paddle.squeeze(Tensor([760567127, 3],"float32"), axis=list[0,], )
paddle.squeeze(Tensor([76056713, 30, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([78679358, 29, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([8, 1, 100, 2852127],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([8, 1, 100, 5368710],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([8, 1, 285212673],"float32"), axis=1, )
paddle.squeeze(Tensor([8, 1, 285212673],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([8, 1, 285212673],"float32"), list[1,], )
paddle.squeeze(Tensor([8, 1, 2852127, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([8, 1, 536870913],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([8, 1, 5368710, 100],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([8, 2048, 1, 19895, 7],"float32"), axis=2, )
paddle.squeeze(Tensor([8, 2048, 1, 7, 19895],"float32"), axis=2, )
paddle.squeeze(Tensor([8, 2048, 2843, 7, 7],"float32"), axis=2, )
paddle.squeeze(Tensor([8, 285212673],"float32"), list[-1,], )
paddle.squeeze(Tensor([8, 2852127, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([8, 28522, 1, 100, 100],"float32"), axis=list[2,], )
paddle.squeeze(Tensor([8, 28522, 100, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([8, 35651585, 8],"float32"), list[1,], )
paddle.squeeze(Tensor([8, 512, 1, 100, 5571],"float32"), axis=list[2,], )
paddle.squeeze(Tensor([8, 512, 1, 5571, 100],"float32"), axis=list[2,], )
paddle.squeeze(Tensor([8, 512, 56, 100, 100],"float32"), axis=list[2,], )
paddle.squeeze(Tensor([8, 5368710, 100],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([8, 53688, 100, 100],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([8, 557057, 512],"float32"), axis=1, )
paddle.squeeze(Tensor([8, 57042535, 5],"float32"), axis=1, )
paddle.squeeze(Tensor([8, 5820667, 1, 7, 7],"float32"), axis=2, )
paddle.squeeze(Tensor([80, 28521268],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([81489335, 28, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([858993460, 5],"float16"), )
paddle.squeeze(Tensor([8705, 1, 512, 512],"int32"), axis=1, )
paddle.squeeze(Tensor([8705, 1, 512, 512],"int64"), axis=1, )
paddle.squeeze(Tensor([8705, 512, 512, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([8985, 1, 496, 512],"int32"), axis=1, )
paddle.squeeze(Tensor([8985, 1, 496, 512],"int64"), axis=1, )
paddle.squeeze(Tensor([936, 187679, 13],"float32"), axis=0, )
paddle.squeeze(Tensor([96, 23767723],"float32"), list[-1,], )
paddle.squeeze(x=Tensor([1, 1431655766, 1, 3],"float16"), )
paddle.squeeze(x=Tensor([1, 1431655766, 1, 3],"float16"), axis=-4, )
paddle.squeeze(x=Tensor([1, 1431655766, 1, 3],"float16"), axis=Tensor([2],"int64"), )
paddle.squeeze(x=Tensor([1, 1431655766, 1, 3],"float16"), axis=list[2,3,], )
paddle.squeeze(x=Tensor([1, 1431655766, 1, 3],"float16"), axis=tuple(-4,-3,), )
paddle.squeeze(x=Tensor([1, 1431655766, 1, 3],"int8"), )
paddle.squeeze(x=Tensor([1, 2, 1, 1140850690],"float32"), )
paddle.squeeze(x=Tensor([1, 2, 1, 1140850690],"int32"), )
paddle.squeeze(x=Tensor([1, 2, 1, 1140850690],"int64"), )
paddle.squeeze(x=Tensor([1, 2, 1, 2147483649],"float16"), )
paddle.squeeze(x=Tensor([1, 2, 1, 2147483649],"float16"), axis=-4, )
paddle.squeeze(x=Tensor([1, 2, 1, 2147483649],"float16"), axis=Tensor([2],"int64"), )
paddle.squeeze(x=Tensor([1, 2, 1, 2147483649],"float16"), axis=list[2,3,], )
paddle.squeeze(x=Tensor([1, 2, 1, 2147483649],"float16"), axis=tuple(-4,-3,), )
paddle.squeeze(x=Tensor([1, 2, 1, 2147483649],"int8"), )
paddle.squeeze(x=Tensor([1, 2, 380283564, 3],"float32"), )
paddle.squeeze(x=Tensor([1, 2, 380283564, 3],"int32"), )
paddle.squeeze(x=Tensor([1, 2, 380283564, 3],"int64"), )
paddle.squeeze(x=Tensor([1, 2, 715827883, 3],"float16"), )
paddle.squeeze(x=Tensor([1, 2, 715827883, 3],"float16"), axis=-4, )
paddle.squeeze(x=Tensor([1, 2, 715827883, 3],"float16"), axis=Tensor([2],"int64"), )
paddle.squeeze(x=Tensor([1, 2, 715827883, 3],"float16"), axis=list[2,3,], )
paddle.squeeze(x=Tensor([1, 2, 715827883, 3],"float16"), axis=tuple(-4,-3,), )
paddle.squeeze(x=Tensor([1, 2, 715827883, 3],"int8"), )
paddle.squeeze(x=Tensor([1, 760567127, 1, 3],"float32"), )
paddle.squeeze(x=Tensor([1, 760567127, 1, 3],"int32"), )
paddle.squeeze(x=Tensor([1, 760567127, 1, 3],"int64"), )
paddle.squeeze(x=Tensor([380283564, 2, 1, 3],"float32"), )
paddle.squeeze(x=Tensor([380283564, 2, 1, 3],"int32"), )
paddle.squeeze(x=Tensor([380283564, 2, 1, 3],"int64"), )
paddle.squeeze(x=Tensor([715827883, 2, 1, 3],"float16"), )
paddle.squeeze(x=Tensor([715827883, 2, 1, 3],"float16"), axis=-4, )
paddle.squeeze(x=Tensor([715827883, 2, 1, 3],"float16"), axis=Tensor([2],"int64"), )
paddle.squeeze(x=Tensor([715827883, 2, 1, 3],"float16"), axis=list[2,3,], )
paddle.squeeze(x=Tensor([715827883, 2, 1, 3],"float16"), axis=tuple(-4,-3,), )
paddle.squeeze(x=Tensor([715827883, 2, 1, 3],"int8"), )
paddle.stack(list[Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1140850690, 2],"float32"),Tensor([1, 1, 1140850690, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 134217729, 32],"float16"),Tensor([1, 1, 134217729, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 2, 1140850690],"float32"),Tensor([1, 1, 2, 1140850690],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 2281701379],"float32"),Tensor([1, 1, 2281701379],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1140850690, 2],"float32"),Tensor([1, 1140850690, 2],"float32"),], axis=-2, )
paddle.stack(list[Tensor([1, 128, 17825793],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 134217729, 1, 32],"float16"),Tensor([1, 134217729, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 142606337, 16],"float32"),Tensor([1, 142606337, 16],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 16, 142606337],"float32"),Tensor([1, 16, 142606337],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 2281701379, 1],"float32"),Tensor([1, 2281701379, 1],"float32"),Tensor([1, 2281701379, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 2281701379],"float32"),Tensor([1, 2281701379],"float32"),], -1, )
paddle.stack(list[Tensor([1, 2281701379],"float32"),], )
paddle.stack(list[Tensor([1, 2281701379],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 2281701379],"int32"),Tensor([1, 2281701379],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 25, 91268056],"float32"),Tensor([1, 25, 91268056],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 25, 91268056],"float32"),Tensor([1, 25, 91268056],"float32"),], axis=-2, )
paddle.stack(list[Tensor([1, 3565159, 640],"float32"),], )
paddle.stack(list[Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),], axis=0, )
paddle.stack(list[Tensor([1, 570425345, 2, 2],"float32"),Tensor([1, 570425345, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 570425345, 4],"float32"),Tensor([1, 570425345, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 640, 3565159],"float32"),], )
paddle.stack(list[Tensor([1, 71303169, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10, 10, 42949673],"float16"),Tensor([10, 10, 42949673],"float16"),], -1, )
paddle.stack(list[Tensor([10, 2, 1, 114085069],"float32"),Tensor([10, 2, 1, 114085069],"float32"),], axis=0, )
paddle.stack(list[Tensor([10, 2, 28521268, 4],"float32"),Tensor([10, 2, 28521268, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([10, 42949673, 10],"float16"),Tensor([10, 42949673, 10],"float16"),], -1, )
paddle.stack(list[Tensor([10, 57042535, 1, 4],"float32"),Tensor([10, 57042535, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([106106, 21504],"float32"),], axis=0, )
paddle.stack(list[Tensor([1073741825, 4],"float16"),Tensor([1073741825, 4],"float16"),], 0, )
paddle.stack(list[Tensor([1140851, 500, 4],"float32"),Tensor([1140851, 500, 4],"float32"),Tensor([1140851, 500, 4],"float32"),], )
paddle.stack(list[Tensor([117, 3840, 5120],"float32"),Tensor([117, 3840, 5120],"float32"),], )
paddle.stack(list[Tensor([128, 32, 139265, 4],"float32"),Tensor([128, 32, 139265, 4],"float32"),Tensor([128, 32, 139265, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 32, 476, 1171],"float32"),Tensor([128, 32, 476, 1171],"float32"),Tensor([128, 32, 476, 1171],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 33554433],"float16"),Tensor([128, 33554433],"float16"),Tensor([128, 33554433],"float16"),], axis=1, )
paddle.stack(list[Tensor([128, 9363, 476, 4],"float32"),Tensor([128, 9363, 476, 4],"float32"),Tensor([128, 9363, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([13, 175515491],"float32"),Tensor([13, 175515491],"float32"),Tensor([13, 175515491],"float32"),], axis=-1, )
paddle.stack(list[Tensor([134217729, 1, 1, 32],"float16"),Tensor([134217729, 1, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([134217729, 32],"float16"),Tensor([134217729, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([190141782, 3, 4],"float32"),Tensor([190141782, 3, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([2, 10, 2, 1, 57042535],"float32"),Tensor([2, 10, 2, 1, 57042535],"float32"),], axis=0, )
paddle.stack(list[Tensor([2, 10, 2, 14260634, 4],"float32"),Tensor([2, 10, 2, 14260634, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([2, 10, 28521268, 1, 4],"float32"),Tensor([2, 10, 28521268, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([2, 142606337, 2, 1, 4],"float32"),Tensor([2, 142606337, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([2, 142606337, 8],"float32"),Tensor([2, 142606337, 8],"float32"),Tensor([2, 142606337, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([2, 17825793, 8, 8],"float32"),Tensor([2, 17825793, 8, 8],"float32"),Tensor([2, 17825793, 8, 8],"float32"),], axis=-4, )
paddle.stack(list[Tensor([2, 285212673, 4],"float32"),Tensor([2, 285212673, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([2, 3, 380283564],"float32"),Tensor([2, 3, 380283564],"float32"),], axis=1, )
paddle.stack(list[Tensor([2, 6, 23767723, 8],"float32"),Tensor([2, 6, 23767723, 8],"float32"),Tensor([2, 6, 23767723, 8],"float32"),], axis=-4, )
paddle.stack(list[Tensor([2, 6, 8, 23767723],"float32"),Tensor([2, 6, 8, 23767723],"float32"),Tensor([2, 6, 8, 23767723],"float32"),], axis=-4, )
paddle.stack(list[Tensor([2, 8, 142606337],"float32"),Tensor([2, 8, 142606337],"float32"),Tensor([2, 8, 142606337],"float32"),], axis=-3, )
paddle.stack(list[Tensor([22591103, 101],"int32"),Tensor([22591103, 101],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2281701379, 1, 1],"float32"),Tensor([2281701379, 1, 1],"float32"),Tensor([2281701379, 1, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),], -1, )
paddle.stack(list[Tensor([2281701379, 1],"float32"),], )
paddle.stack(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], )
paddle.stack(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], axis=1, )
paddle.stack(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], 0, )
paddle.stack(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], 1, )
paddle.stack(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], axis=1, )
paddle.stack(list[Tensor([2281701379],"float32"),], )
paddle.stack(list[Tensor([2281701379],"float32"),], 0, )
paddle.stack(list[Tensor([2281701379],"int32"),], 1, )
paddle.stack(list[Tensor([22817014, 25, 4],"float32"),Tensor([22817014, 25, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([23860930, 6, 3, 2, 5],"float16"),Tensor([23860930, 6, 3, 2, 5],"float16"),Tensor([23860930, 6, 3, 2, 5],"float16"),], 0, )
paddle.stack(list[Tensor([25, 91268056],"float32"),], axis=0, )
paddle.stack(list[Tensor([28, 81489335],"float32"),Tensor([28, 81489335],"float32"),Tensor([28, 81489335],"float32"),], axis=-3, )
paddle.stack(list[Tensor([28, 81489335],"int32"),Tensor([28, 81489335],"int32"),Tensor([28, 81489335],"int32"),], )
paddle.stack(list[Tensor([285212673, 2, 1, 4],"float32"),Tensor([285212673, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([28521268, 10, 2, 1, 4],"float32"),Tensor([28521268, 10, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([2910334, 28, 28],"float32"),Tensor([2910334, 28, 28],"float32"),Tensor([2910334, 28, 28],"float32"),], axis=-4, )
paddle.stack(list[Tensor([3, 148549, 5120],"float32"),Tensor([3, 148549, 5120],"float32"),], )
paddle.stack(list[Tensor([3, 3840, 198065],"float32"),Tensor([3, 3840, 198065],"float32"),], )
paddle.stack(list[Tensor([3, 47721859, 3, 2, 5],"float16"),Tensor([3, 47721859, 3, 2, 5],"float16"),Tensor([3, 47721859, 3, 2, 5],"float16"),], 0, )
paddle.stack(list[Tensor([3, 6, 23860930, 2, 5],"float16"),Tensor([3, 6, 23860930, 2, 5],"float16"),Tensor([3, 6, 23860930, 2, 5],"float16"),], 0, )
paddle.stack(list[Tensor([3, 6, 3, 15907287, 5],"float16"),Tensor([3, 6, 3, 15907287, 5],"float16"),Tensor([3, 6, 3, 15907287, 5],"float16"),], 0, )
paddle.stack(list[Tensor([3, 6, 3, 2, 39768216],"float16"),Tensor([3, 6, 3, 2, 39768216],"float16"),Tensor([3, 6, 3, 2, 39768216],"float16"),], 0, )
paddle.stack(list[Tensor([32, 15, 18569, 8, 32],"float32"),Tensor([32, 15, 18569, 8, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([32, 15, 8, 18569, 32],"float32"),Tensor([32, 15, 8, 18569, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([32, 15, 8, 8, 74275],"float32"),Tensor([32, 15, 8, 8, 74275],"float32"),], axis=-1, )
paddle.stack(list[Tensor([32, 34817, 8, 8, 32],"float32"),Tensor([32, 34817, 8, 8, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([35651585, 64],"float32"),Tensor([35651585, 64],"float32"),Tensor([35651585, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([35651585, 8, 8],"float32"),Tensor([35651585, 8, 8],"float32"),Tensor([35651585, 8, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([36858, 61906],"float32"),], 0, )
paddle.stack(list[Tensor([37450, 32, 476, 4],"float32"),Tensor([37450, 32, 476, 4],"float32"),Tensor([37450, 32, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([4, 142606337, 4],"float32"),Tensor([4, 142606337, 4],"float32"),Tensor([4, 142606337, 4],"float32"),], )
paddle.stack(list[Tensor([4, 500, 1140851],"float32"),Tensor([4, 500, 1140851],"float32"),Tensor([4, 500, 1140851],"float32"),], )
paddle.stack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], 0, )
paddle.stack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], 0, )
paddle.stack(list[Tensor([42949673, 10, 10],"float16"),Tensor([42949673, 10, 10],"float16"),], -1, )
paddle.stack(list[Tensor([45634028, 25, 2],"float32"),Tensor([45634028, 25, 2],"float32"),], axis=-2, )
paddle.stack(list[Tensor([5, 1, 858993460],"float16"),Tensor([5, 1, 858993460],"float16"),Tensor([5, 1, 858993460],"float16"),], 0, )
paddle.stack(list[Tensor([5, 1, 858993460],"float16"),Tensor([5, 1, 858993460],"float16"),], 0, )
paddle.stack(list[Tensor([5, 858993460, 1],"float16"),Tensor([5, 858993460, 1],"float16"),Tensor([5, 858993460, 1],"float16"),], 0, )
paddle.stack(list[Tensor([5, 858993460, 1],"float16"),Tensor([5, 858993460, 1],"float16"),], 0, )
paddle.stack(list[Tensor([5, 858993460],"float16"),Tensor([5, 858993460],"float16"),], 0, )
paddle.stack(list[Tensor([557057, 128, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([5571, 640, 640],"float32"),], )
paddle.stack(list[Tensor([570425345, 1, 2, 2],"float32"),Tensor([570425345, 1, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([570425345, 4],"float32"),], 0, )
paddle.stack(list[Tensor([5941931, 6, 8, 8],"float32"),Tensor([5941931, 6, 8, 8],"float32"),Tensor([5941931, 6, 8, 8],"float32"),], axis=-4, )
paddle.stack(list[Tensor([6, 13581556, 28],"float32"),Tensor([6, 13581556, 28],"float32"),Tensor([6, 13581556, 28],"float32"),], axis=-4, )
paddle.stack(list[Tensor([6, 28, 13581556],"float32"),Tensor([6, 28, 13581556],"float32"),Tensor([6, 28, 13581556],"float32"),], axis=-4, )
paddle.stack(list[Tensor([74275, 15, 8, 8, 32],"float32"),Tensor([74275, 15, 8, 8, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([760567127, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([81489335, 28],"float32"),Tensor([81489335, 28],"float32"),Tensor([81489335, 28],"float32"),], axis=-3, )
paddle.stack(list[Tensor([81489335, 28],"int32"),Tensor([81489335, 28],"int32"),Tensor([81489335, 28],"int32"),], )
paddle.stack(list[Tensor([8388609, 512],"float16"),Tensor([8388609, 512],"float16"),Tensor([8388609, 512],"float16"),], axis=1, )
paddle.stack(list[Tensor([8912897, 16, 16],"float32"),Tensor([8912897, 16, 16],"float32"),], axis=0, )
paddle.stack(tuple(Tensor([1, 1, 1140850690, 2],"float32"),Tensor([1, 1, 1140850690, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 1, 4, 570425345],"float32"),Tensor([1, 1, 4, 570425345],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 10, 3565159, 64],"float32"),Tensor([1, 10, 3565159, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 10, 8, 28521268],"float32"),Tensor([1, 10, 8, 28521268],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 1100, 2074274],"float32"),Tensor([1, 1100, 2074274],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([1, 2281701379],"float32"),Tensor([1, 2281701379],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 285212673, 4, 2],"float32"),Tensor([1, 285212673, 4, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 35651585, 64],"float32"),Tensor([1, 35651585, 64],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([1, 4456449, 8, 64],"float32"),Tensor([1, 4456449, 8, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([12136710, 188, 1],"float32"),Tensor([12136710, 188, 1],"float32"),Tensor([12136710, 188, 1],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([139265, 32, 32, 16],"float32"),Tensor([139265, 32, 32, 16],"float32"),), -1, )
paddle.stack(tuple(Tensor([140, 16297867, 1],"float32"),Tensor([140, 16297867, 1],"float32"),Tensor([140, 16297867, 1],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([140, 188, 86691],"float32"),Tensor([140, 188, 86691],"float32"),Tensor([140, 188, 86691],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1426064, 40, 40],"float32"),Tensor([1426064, 40, 40],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16, 3565159, 40],"float32"),Tensor([16, 3565159, 40],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16, 40, 3565159],"float32"),Tensor([16, 40, 3565159],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([21126865, 108],"float32"),Tensor([21126865, 108],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),), axis=0, )
paddle.stack(tuple(Tensor([285212673, 1, 4, 2],"float32"),Tensor([285212673, 1, 4, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([3, 224, 3395389],"float32"),Tensor([3, 224, 3395389],"float32"),), axis=0, )
paddle.stack(tuple(Tensor([3, 3395389, 224],"float32"),Tensor([3, 3395389, 224],"float32"),), axis=0, )
paddle.stack(tuple(Tensor([32411, 1100, 64],"float32"),Tensor([32411, 1100, 64],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([4, 1114113, 32, 16],"float32"),Tensor([4, 1114113, 32, 16],"float32"),), -1, )
paddle.stack(tuple(Tensor([4, 32, 1114113, 16],"float32"),Tensor([4, 32, 1114113, 16],"float32"),), -1, )
paddle.stack(tuple(Tensor([4, 32, 32, 557057],"float32"),Tensor([4, 32, 32, 557057],"float32"),), -1, )
paddle.stack(tuple(Tensor([445645, 10, 8, 64],"float32"),Tensor([445645, 10, 8, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([45474, 224, 224],"float32"),Tensor([45474, 224, 224],"float32"),), axis=0, )
paddle.stack(x=list[Tensor([100, 22817014],"float32"),Tensor([100, 22817014],"float32"),], axis=-1, )
paddle.stack(x=list[Tensor([1140281, 2001],"float32"),Tensor([1140281, 2001],"float32"),], axis=-1, )
paddle.stack(x=list[Tensor([116414, 140, 140],"float32"),Tensor([116414, 140, 140],"float32"),], axis=1, )
paddle.stack(x=list[Tensor([58, 140, 280998],"float32"),Tensor([58, 140, 280998],"float32"),], axis=1, )
paddle.stack(x=list[Tensor([58, 280998, 140],"float32"),Tensor([58, 280998, 140],"float32"),], axis=1, )
paddle.stack(x=tuple(Tensor([1, 16, 256, 557057],"float32"),Tensor([1, 16, 256, 557057],"float32"),), axis=-1, )
paddle.stack(x=tuple(Tensor([1, 16, 4456449, 32],"float32"),Tensor([1, 16, 4456449, 32],"float32"),), axis=-1, )
paddle.stack(x=tuple(Tensor([1, 278529, 256, 32],"float32"),Tensor([1, 278529, 256, 32],"float32"),), axis=-1, )
paddle.stack(x=tuple(Tensor([17409, 16, 256, 32],"float32"),Tensor([17409, 16, 256, 32],"float32"),), axis=-1, )
paddle.stanh(x=Tensor([1, 2281701379],"float32"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([1, 2281701379],"float32"), scale_a=1.43, scale_b=4.56, )
paddle.stanh(x=Tensor([1, 4294967297],"float16"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([1, 4294967297],"float16"), scale_a=1.43, scale_b=4.56, )
paddle.stanh(x=Tensor([1140850690, 2],"float32"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([1140850690, 2],"float32"), scale_a=1.43, scale_b=4.56, )
paddle.stanh(x=Tensor([1140850690, 2],"float32"), scale_a=6.42, scale_b=3.58, )
paddle.stanh(x=Tensor([2, 1140850690],"float32"), scale_a=6.42, scale_b=3.58, )
paddle.stanh(x=Tensor([2, 2147483649],"float16"), scale_a=6.42, scale_b=3.58, )
paddle.stanh(x=Tensor([2, 3, 2, 357913942],"float16"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([2, 3, 357913942, 2],"float16"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([2, 536870913, 2, 2],"float16"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([2147483649, 2],"float16"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([2147483649, 2],"float16"), scale_a=1.43, scale_b=4.56, )
paddle.stanh(x=Tensor([2147483649, 2],"float16"), scale_a=6.42, scale_b=3.58, )
paddle.stanh(x=Tensor([2281701379],"float32"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([357913942, 3, 2, 2],"float16"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([4294967297],"float16"), scale_a=0.67, scale_b=1.72, )
paddle.std(Tensor([1, 107374183, 4, 10],"float16"), 2, True, False, )
paddle.std(Tensor([1, 107374183, 4, 10],"float16"), list[1,2,], True, False, )
paddle.std(Tensor([1, 107374183, 4, 10],"float16"), list[1,3,], False, False, )
paddle.std(Tensor([1, 107374183, 4, 10],"float16"), list[1,3,], True, False, )
paddle.std(Tensor([1, 107374183, 4, 10],"float16"), tuple(1,3,), True, False, )
paddle.std(Tensor([1, 3, 143165577, 10],"float16"), 2, True, False, )
paddle.std(Tensor([1, 3, 143165577, 10],"float16"), list[1,2,], True, False, )
paddle.std(Tensor([1, 3, 143165577, 10],"float16"), list[1,3,], False, False, )
paddle.std(Tensor([1, 3, 143165577, 10],"float16"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 143165577, 10],"float16"), tuple(1,3,), True, False, )
paddle.std(Tensor([1, 3, 4, 190141782],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 4, 357913942],"float16"), 2, True, False, )
paddle.std(Tensor([1, 3, 4, 357913942],"float16"), list[1,2,], True, False, )
paddle.std(Tensor([1, 3, 4, 357913942],"float16"), list[1,3,], False, False, )
paddle.std(Tensor([1, 3, 4, 357913942],"float16"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 4, 357913942],"float16"), tuple(1,3,), True, False, )
paddle.std(Tensor([1, 3, 76056713, 10],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([1, 57042535, 4, 10],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([19014179, 3, 4, 10],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([2281701379],"float32"), )
paddle.std(Tensor([253522376, 9],"float32"), axis=1, )
paddle.std(Tensor([3, 760567127],"float32"), )
paddle.std(Tensor([32, 71303169],"float32"), )
paddle.std(Tensor([35791395, 3, 4, 10],"float16"), 2, True, False, )
paddle.std(Tensor([35791395, 3, 4, 10],"float16"), list[1,2,], True, False, )
paddle.std(Tensor([35791395, 3, 4, 10],"float16"), list[1,3,], False, False, )
paddle.std(Tensor([35791395, 3, 4, 10],"float16"), list[1,3,], True, False, )
paddle.std(Tensor([35791395, 3, 4, 10],"float16"), tuple(1,3,), True, False, )
paddle.std(Tensor([456340276, 5],"float32"), )
paddle.std(Tensor([6, 380283564],"float32"), axis=1, )
paddle.std(Tensor([71303169, 32],"float32"), )
paddle.std(x=Tensor([1431655766, 3],"float16"), )
paddle.std(x=Tensor([2, 1140850690],"float32"), )
paddle.std(x=Tensor([2, 2147483649],"float16"), )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), axis=0, )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), axis=0, unbiased=False, )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), axis=list[0,1,], )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), axis=tuple(0,1,), )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), axis=tuple(0,1,), keepdim=True, )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), axis=0, )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), axis=0, unbiased=False, )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), axis=list[0,1,], )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), axis=tuple(0,1,), )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), axis=tuple(0,1,), keepdim=True, )
paddle.std(x=Tensor([477218589, 3, 3],"float16"), )
paddle.std(x=Tensor([477218589, 3, 3],"float16"), axis=0, )
paddle.std(x=Tensor([477218589, 3, 3],"float16"), axis=0, unbiased=False, )
paddle.std(x=Tensor([477218589, 3, 3],"float16"), axis=list[0,1,], )
paddle.std(x=Tensor([477218589, 3, 3],"float16"), axis=tuple(0,1,), )
paddle.std(x=Tensor([477218589, 3, 3],"float16"), axis=tuple(0,1,), keepdim=True, )
paddle.std(x=Tensor([760567127, 3],"float32"), )
paddle.strided_slice(Tensor([2281701379],"int64"), axes=list[0,], starts=list[3,], ends=list[1,], strides=list[-2,], )
paddle.strided_slice(x=Tensor([19014179, 4, 5, 6],"float32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([19014179, 4, 5, 6],"int32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([19014179, 4, 5, 6],"int64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([2281701379],"float32"), axes=list[0,], starts=list[3,], ends=list[1,], strides=list[-2,], )
paddle.strided_slice(x=Tensor([3, 4, 31690297, 6],"float32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 31690297, 6],"int32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 31690297, 6],"int64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 5, 38028357],"float32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 5, 38028357],"int32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 5, 38028357],"int64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 5, 71582789],"float16"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 59652324, 6],"float16"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([35791395, 4, 5, 6],"float16"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([380283564, 6],"float32"), axes=list[0,1,], starts=list[3,4,], ends=list[5,2,], strides=list[1,-2,], )
paddle.strided_slice(x=Tensor([380283564, 6],"float32"), axes=list[0,1,], starts=list[3,4,], ends=list[5,2,], strides=list[4,-2,], )
paddle.strided_slice(x=Tensor([6, 380283564],"float32"), axes=list[0,1,], starts=list[3,4,], ends=list[5,2,], strides=list[1,-2,], )
paddle.strided_slice(x=Tensor([6, 380283564],"float32"), axes=list[0,1,], starts=list[3,4,], ends=list[5,2,], strides=list[4,-2,], )
paddle.subtract(Tensor([1, 1, 30, 30],"float32"), Tensor([1, 2535224, 30, 30],"float32"), )
paddle.subtract(Tensor([1, 1, 30, 30],"float32"), Tensor([2535224, 1, 30, 30],"float32"), )
paddle.subtract(Tensor([1, 1, 30, 76056713],"float32"), Tensor([1, 1, 30, 76056713],"float32"), )
paddle.subtract(Tensor([1, 1, 76056713, 30],"float32"), Tensor([1, 1, 76056713, 30],"float32"), )
paddle.subtract(Tensor([1, 1],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.subtract(Tensor([1, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.subtract(Tensor([1, 1],"float32"), Tensor([4, 570425345],"float32"), )
paddle.subtract(Tensor([1, 2228225, 32, 32],"float32"), Tensor([1, 2228225, 32, 32],"float32"), )
paddle.subtract(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.subtract(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.subtract(Tensor([1, 2281701379],"float32"), Tensor([4, 1],"float32"), )
paddle.subtract(Tensor([1, 2535224, 30, 30],"float32"), Tensor([1, 1, 30, 30],"float32"), )
paddle.subtract(Tensor([1, 2535224, 30, 30],"float32"), Tensor([1, 2535224, 30, 30],"float32"), )
paddle.subtract(Tensor([1, 3, 23767723, 32],"float32"), Tensor([1, 3, 23767723, 32],"float32"), )
paddle.subtract(Tensor([1, 3, 256, 256],"float32"), Tensor([11606, 3, 256, 256],"float32"), )
paddle.subtract(Tensor([1, 3, 256, 2970966],"float32"), Tensor([1, 3, 256, 2970966],"float32"), )
paddle.subtract(Tensor([1, 3, 2970966, 256],"float32"), Tensor([1, 3, 2970966, 256],"float32"), )
paddle.subtract(Tensor([1, 3, 32, 23767723],"float32"), Tensor([1, 3, 32, 23767723],"float32"), )
paddle.subtract(Tensor([1, 3, 32, 32],"float32"), Tensor([742742, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([1, 34817, 256, 256],"float32"), Tensor([1, 34817, 256, 256],"float32"), )
paddle.subtract(Tensor([1, 64, 64, 1],"float32"), Tensor([1, 64, 64, 1048577],"float16"), )
paddle.subtract(Tensor([1, 64, 64, 1],"float32"), Tensor([1048577, 64, 64, 1],"float16"), )
paddle.subtract(Tensor([1, 64, 64, 557057],"float32"), Tensor([1, 64, 64, 1],"float64"), )
paddle.subtract(Tensor([10, 1],"float32"), Tensor([10, 228170138],"float32"), )
paddle.subtract(Tensor([10, 228170138],"float32"), Tensor([10, 1],"float32"), )
paddle.subtract(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.subtract(Tensor([100, 22817014, 1],"float32"), Tensor([100, 22817014, 1],"float32"), )
paddle.subtract(Tensor([100, 376, 1],"float32"), Tensor([100, 376, 60684],"float32"), )
paddle.subtract(Tensor([100, 376, 60684],"float32"), Tensor([100, 376, 1],"float32"), )
paddle.subtract(Tensor([100, 376, 60684],"float32"), Tensor([100, 376, 60684],"float32"), )
paddle.subtract(Tensor([11606, 3, 256, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), )
paddle.subtract(Tensor([11606, 3, 256, 256],"float32"), Tensor([11606, 3, 256, 256],"float32"), )
paddle.subtract(Tensor([11883862, 96, 2],"float32"), Tensor([11883862, 96, 2],"float32"), )
paddle.subtract(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), name="Normal_log_prob", )
paddle.subtract(Tensor([152113426, 15],"float32"), Tensor([152113426, 15],"float32"), )
paddle.subtract(Tensor([152113426, 15],"float32"), Tensor([15],"float32"), )
paddle.subtract(Tensor([16, 142606337, 1],"float32"), Tensor([16, 142606337, 1],"float32"), )
paddle.subtract(Tensor([16, 71303169, 2],"float32"), Tensor([16, 71303169, 2],"float32"), )
paddle.subtract(Tensor([16, 96, 1485483],"float32"), Tensor([16, 96, 1485483],"float32"), )
paddle.subtract(Tensor([16, 96, 1485483],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.subtract(Tensor([16, 96, 1],"float32"), Tensor([16, 96, 1485483],"float32"), )
paddle.subtract(Tensor([17, 134217729, 1],"float32"), Tensor([17, 134217729, 1],"float32"), )
paddle.subtract(Tensor([17, 376, 1],"float32"), Tensor([17, 376, 356963],"float32"), )
paddle.subtract(Tensor([17, 376, 356963],"float32"), Tensor([17, 376, 1],"float32"), )
paddle.subtract(Tensor([17, 376, 356963],"float32"), Tensor([17, 376, 356963],"float32"), )
paddle.subtract(Tensor([1],"float16"), Tensor([4294967297],"float16"), )
paddle.subtract(Tensor([1],"float16"), Tensor([4294967297],"float16"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([1],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.subtract(Tensor([1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.subtract(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.subtract(Tensor([1],"float32"), Tensor([2281701379],"float32"), name="Cauchy_kl_divergence", )
paddle.subtract(Tensor([1],"float32"), Tensor([2281701379],"float32"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([2, 10, 114085069],"float32"), Tensor([2, 10, 114085069],"float32"), )
paddle.subtract(Tensor([2, 114085069, 10],"float32"), Tensor([2, 114085069, 10],"float32"), )
paddle.subtract(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), name="Normal_log_prob", )
paddle.subtract(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), name="Normal_log_prob", )
paddle.subtract(Tensor([2, 3, 3, 126761188],"float32"), Tensor([2, 3, 1, 126761188],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 126761188],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.subtract(Tensor([2, 3, 95070891, 4],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.subtract(Tensor([2, 3, 95070891, 4],"float32"), Tensor([2, 3, 95070891, 1],"float32"), )
paddle.subtract(Tensor([2, 3, 95070891, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.subtract(Tensor([2, 95070891, 3, 4],"float32"), Tensor([2, 95070891, 1, 1],"float32"), )
paddle.subtract(Tensor([2281701379, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.subtract(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.subtract(Tensor([2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.subtract(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.subtract(Tensor([2281701379],"float32"), Tensor([1],"float32"), name="Cauchy_kl_divergence", )
paddle.subtract(Tensor([2281701379],"float32"), Tensor([1],"float32"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.subtract(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), name="Cauchy_kl_divergence", )
paddle.subtract(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([2281701379],"float32"), Tensor([4, 1],"float32"), )
paddle.subtract(Tensor([228170138, 10],"float32"), Tensor([228170138, 10],"float32"), )
paddle.subtract(Tensor([22817014, 10, 10],"float32"), Tensor([22817014, 10, 10],"float32"), )
paddle.subtract(Tensor([23211, 4, 3, 64, 128],"float32"), Tensor([23211, 4, 3, 64, 128],"float32"), )
paddle.subtract(Tensor([23767723, 96, 1],"float32"), Tensor([23767723, 96, 1],"float32"), )
paddle.subtract(Tensor([2535224, 1, 30, 30],"float32"), Tensor([1, 1, 30, 30],"float32"), )
paddle.subtract(Tensor([2535224, 1, 30, 30],"float32"), Tensor([2535224, 1, 30, 30],"float32"), )
paddle.subtract(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), name="Normal_log_prob", )
paddle.subtract(Tensor([30948, 3, 3, 64, 128],"float32"), Tensor([30948, 3, 3, 64, 128],"float32"), )
paddle.subtract(Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.subtract(Tensor([4294967297],"float16"), Tensor([1],"float16"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.subtract(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), name="Normal_log_prob", )
paddle.subtract(Tensor([4],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.subtract(Tensor([557057, 64, 64, 1],"float32"), Tensor([1, 64, 64, 1],"float64"), )
paddle.subtract(Tensor([6068355, 376, 1],"float32"), Tensor([6068355, 376, 1],"float32"), )
paddle.subtract(Tensor([63380594, 3, 3, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.subtract(Tensor([63380594, 3, 3, 4],"float32"), Tensor([63380594, 3, 1, 1],"float32"), )
paddle.subtract(Tensor([64, 1451, 3, 64, 128],"float32"), Tensor([64, 1451, 3, 64, 128],"float32"), )
paddle.subtract(Tensor([64, 3, 1451, 64, 128],"float32"), Tensor([64, 3, 1451, 64, 128],"float32"), )
paddle.subtract(Tensor([64, 3, 3, 30948, 128],"float32"), Tensor([64, 3, 3, 30948, 128],"float32"), )
paddle.subtract(Tensor([64, 3, 3, 64, 61896],"float32"), Tensor([64, 3, 3, 64, 61896],"float32"), )
paddle.subtract(Tensor([64, 4, 1089, 64, 128],"float32"), Tensor([64, 4, 1089, 64, 128],"float32"), )
paddle.subtract(Tensor([64, 4, 3, 23211, 128],"float32"), Tensor([64, 4, 3, 23211, 128],"float32"), )
paddle.subtract(Tensor([64, 4, 3, 64, 46422],"float32"), Tensor([64, 4, 3, 64, 46422],"float32"), )
paddle.subtract(Tensor([742742, 3, 32, 32],"float32"), Tensor([1, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([742742, 3, 32, 32],"float32"), Tensor([742742, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), name="Normal_log_prob", )
paddle.subtract(x=Tensor([1140850690, 2],"float32"), y=Tensor([1140850690, 2],"float32"), )
paddle.subtract(x=Tensor([1140850690, 2],"int32"), y=Tensor([1140850690, 2],"int32"), )
paddle.subtract(x=Tensor([2, 1140850690],"float32"), y=Tensor([2, 1140850690],"float32"), )
paddle.subtract(x=Tensor([2, 1140850690],"int32"), y=Tensor([2, 1140850690],"int32"), )
paddle.subtract(x=Tensor([2, 2147483649],"float16"), y=Tensor([2, 2147483649],"float16"), )
paddle.subtract(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.subtract(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.sum(Tensor([1, 1, 2281701379],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([1, 1, 2281701379],"float32"), 1, )
paddle.sum(Tensor([1, 10, 228170138],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([1, 1024, 2228225],"float32"), )
paddle.sum(Tensor([1, 1024, 2228225],"int64"), )
paddle.sum(Tensor([1, 107374183, 4, 10],"float16"), 2, keepdim=False, name=None, )
paddle.sum(Tensor([1, 107374183, 4, 10],"float16"), list[1,2,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 107374183, 4, 10],"float16"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 107374183, 4, 10],"float16"), tuple(1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([1, 11, 207427399],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([1, 1140850690, 1, 2],"float32"), axis=-1, )
paddle.sum(Tensor([1, 1140850690, 2],"float32"), axis=-1, )
paddle.sum(Tensor([1, 128, 32, 557057],"float32"), 1, )
paddle.sum(Tensor([1, 128, 32, 557057],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([1, 128, 557057, 32],"float32"), 1, )
paddle.sum(Tensor([1, 128, 557057, 32],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([1, 14, 11641334, 14],"int64"), axis=list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 14, 11641334, 14],"int64"), axis=list[1,3,], keepdim=True, name=None, )
paddle.sum(Tensor([1, 14, 5, 32595734],"int64"), axis=list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 14, 5, 32595734],"int64"), axis=list[1,3,], keepdim=True, name=None, )
paddle.sum(Tensor([1, 152113426, 3, 5],"float32"), )
paddle.sum(Tensor([1, 2, 1140850690],"float32"), axis=-1, )
paddle.sum(Tensor([1, 2228225, 1024],"int64"), )
paddle.sum(Tensor([1, 2228225, 32, 32],"float32"), 1, )
paddle.sum(Tensor([1, 2228225, 32, 32],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([1, 2281701379, 1],"float32"), )
paddle.sum(Tensor([1, 2281701379, 1],"float32"), 1, )
paddle.sum(Tensor([1, 2281701379],"float32"), )
paddle.sum(Tensor([1, 2281701379],"float32"), 1, )
paddle.sum(Tensor([1, 2281701379],"float32"), axis=-1, )
paddle.sum(Tensor([1, 2281701379],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([1, 2281701379],"float32"), axis=0, )
paddle.sum(Tensor([1, 2281701379],"float32"), axis=1, )
paddle.sum(Tensor([1, 2281701379],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([1, 2281701379],"int32"), )
paddle.sum(Tensor([1, 2281701379],"int64"), )
paddle.sum(Tensor([1, 2281701379],"int64"), axis=1, )
paddle.sum(Tensor([1, 25, 1, 91268056],"float32"), axis=-1, )
paddle.sum(Tensor([1, 25, 21504, 4245],"float32"), axis=-1, )
paddle.sum(Tensor([1, 25, 45634028, 2],"float32"), axis=-1, )
paddle.sum(Tensor([1, 256, 16, 557057],"float32"), 1, )
paddle.sum(Tensor([1, 256, 16, 557057],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([1, 256, 557057, 16],"float32"), 1, )
paddle.sum(Tensor([1, 256, 557057, 16],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([1, 3, 143165577, 10],"float16"), 2, keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 143165577, 10],"float16"), list[1,2,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 143165577, 10],"float16"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 143165577, 10],"float16"), tuple(1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 152113426, 5],"float32"), )
paddle.sum(Tensor([1, 3, 3, 253522376],"float32"), )
paddle.sum(Tensor([1, 3, 4, 190141782],"float32"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 4, 357913942],"float16"), 2, keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 4, 357913942],"float16"), list[1,2,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 4, 357913942],"float16"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 4, 357913942],"float16"), tuple(1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 76056713, 10],"float32"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 32595734, 5, 14],"int64"), axis=list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 32595734, 5, 14],"int64"), axis=list[1,3,], keepdim=True, name=None, )
paddle.sum(Tensor([1, 4096, 557057],"float32"), )
paddle.sum(Tensor([1, 42253730, 54],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([1, 4294967297],"float16"), axis=list[1,], )
paddle.sum(Tensor([1, 4456449, 512],"int64"), )
paddle.sum(Tensor([1, 496, 4600205],"int64"), )
paddle.sum(Tensor([1, 50704476, 45],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([1, 512, 4456449],"int64"), )
paddle.sum(Tensor([1, 53053, 21504, 2],"float32"), axis=-1, )
paddle.sum(Tensor([1, 557057, 64, 64],"float32"), 1, )
paddle.sum(Tensor([1, 557057, 64, 64],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([1, 57042535, 4, 10],"float32"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 63380594, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([1, 64, 557057, 64],"float32"), 1, )
paddle.sum(Tensor([1, 64, 557057, 64],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([1, 64, 64, 557057],"float32"), 1, )
paddle.sum(Tensor([1, 64, 64, 557057],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([1, 8912897, 16, 16],"float32"), 1, )
paddle.sum(Tensor([1, 8912897, 16, 16],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([10, 10, 42949673],"float16"), name=None, )
paddle.sum(Tensor([10, 114085069, 2],"float32"), axis=-1, )
paddle.sum(Tensor([10, 20, 11408507],"float32"), axis=-1, )
paddle.sum(Tensor([10, 20, 21474837],"float16"), axis=-1, )
paddle.sum(Tensor([10, 214748365, 2],"float16"), axis=-1, )
paddle.sum(Tensor([10, 228170138],"float32"), )
paddle.sum(Tensor([10, 228170138],"float32"), axis=list[], keepdim=False, )
paddle.sum(Tensor([10, 228170138],"float32"), name=None, )
paddle.sum(Tensor([10, 228170138],"int64"), axis=0, )
paddle.sum(Tensor([10, 429496730],"float16"), axis=-1, )
paddle.sum(Tensor([10, 429496730],"float16"), axis=-1, keepdim=True, )
paddle.sum(Tensor([10, 5, 9, 9544372],"float16"), Tensor([2],"int64"), )
paddle.sum(Tensor([10, 5, 9544372, 9],"float16"), Tensor([2],"int64"), )
paddle.sum(Tensor([10, 5302429, 9, 9],"float16"), Tensor([2],"int64"), )
paddle.sum(Tensor([10, 85899346, 5],"float16"), name=None, )
paddle.sum(Tensor([100, 1, 22817014],"float32"), None, None, False, None, )
paddle.sum(Tensor([100, 1, 42949673],"float16"), None, None, False, None, )
paddle.sum(Tensor([100, 200, 114086],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([100, 208, 109698],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([100, 22817014, 1],"float32"), None, None, False, None, )
paddle.sum(Tensor([100, 22817014],"float32"), axis=1, )
paddle.sum(Tensor([100, 42949673, 1],"float16"), None, None, False, None, )
paddle.sum(Tensor([100, 67908, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([100, 73132, 312],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([100, 75056, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([1000, 2281702],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([1000, 2281702],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([10000, 143166, 3],"float16"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([10000, 2, 114086],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([10000, 2, 214749],"float16"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([10000, 228171],"float32"), name=None, )
paddle.sum(Tensor([10000, 76057, 3],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([100000, 42950],"float16"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([1000000, 4295],"float16"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([101, 22591103],"float32"), name=None, )
paddle.sum(Tensor([1024, 1024, 2177],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([1024, 1024, 4097],"float16"), None, keepdim=False, name=None, )
paddle.sum(Tensor([1024, 2228225],"float32"), axis=-1, )
paddle.sum(Tensor([1024, 278529, 8],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([1024, 524289, 8],"float16"), None, keepdim=False, name=None, )
paddle.sum(Tensor([103713700, 22],"int64"), axis=1, )
paddle.sum(Tensor([104, 21939437],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([10604858, 5, 9, 9],"float16"), Tensor([2],"int64"), )
paddle.sum(Tensor([1073741825, 4],"float16"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([1073741825, 4],"float16"), axis=0, keepdim=True, )
paddle.sum(Tensor([107374183, 20, 2],"float16"), axis=-1, )
paddle.sum(Tensor([1089, 2097152],"float32"), axis=0, )
paddle.sum(Tensor([1114113, 2, 4, 16, 16],"float32"), axis=2, )
paddle.sum(Tensor([1114113, 32, 64],"float32"), axis=0, )
paddle.sum(Tensor([1140850690, 1, 2],"float32"), axis=-1, )
paddle.sum(Tensor([1140850690, 1, 2],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([1140850690, 2],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([1140850690, 2],"float32"), axis=-1, )
paddle.sum(Tensor([1140850690, 2],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([1140850690, 2],"float32"), axis=list[1,], )
paddle.sum(Tensor([1140850690, 2],"float32"), name=None, )
paddle.sum(Tensor([11606, 196608],"float32"), axis=1, )
paddle.sum(Tensor([11883862, 96, 2],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([119304648, 3, 3, 4],"float16"), name=None, )
paddle.sum(Tensor([12, 10, 19014179],"float32"), axis=2, )
paddle.sum(Tensor([12, 13, 14626291],"float32"), axis=2, )
paddle.sum(Tensor([12, 18, 10563433],"float32"), axis=2, )
paddle.sum(Tensor([12, 190141782],"float32"), axis=-1, )
paddle.sum(Tensor([12, 23, 8267034],"float32"), axis=2, )
paddle.sum(Tensor([12, 24, 7922575],"float32"), axis=2, )
paddle.sum(Tensor([12, 47535446, 4],"float32"), axis=2, )
paddle.sum(Tensor([126761188, 18],"float32"), 0, )
paddle.sum(Tensor([126761188, 2, 3, 3],"float32"), )
paddle.sum(Tensor([128, 17825793],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([128, 17825793],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([128, 32, 557057],"float32"), axis=0, )
paddle.sum(Tensor([128, 557057, 32],"float32"), axis=0, )
paddle.sum(Tensor([128512, 17755],"float32"), name=None, )
paddle.sum(Tensor([12988, 32, 5490],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([12988, 58560, 3],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([13, 171402, 4, 16, 16],"float32"), axis=2, )
paddle.sum(Tensor([13, 175515491, 1],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([13, 175515491],"int32"), axis=1, dtype="int64", )
paddle.sum(Tensor([13, 2, 2742430, 32],"float32"), axis=-2, )
paddle.sum(Tensor([13, 2, 342804, 16, 16],"float32"), axis=2, )
paddle.sum(Tensor([13, 2, 4, 1371215, 16],"float32"), axis=2, )
paddle.sum(Tensor([13, 2, 4, 16, 1371215],"float32"), axis=2, )
paddle.sum(Tensor([13, 2, 7, 12536821],"float32"), axis=-2, )
paddle.sum(Tensor([13, 3, 58505164],"float32"), 2, )
paddle.sum(Tensor([13, 4, 2, 21939437],"float32"), axis=-2, )
paddle.sum(Tensor([13, 4, 21939437, 2],"float32"), axis=-2, )
paddle.sum(Tensor([13, 43878873, 2, 2],"float32"), axis=-2, )
paddle.sum(Tensor([13, 58505164, 3],"float32"), 2, )
paddle.sum(Tensor([13, 783552, 7, 32],"float32"), axis=-2, )
paddle.sum(Tensor([13, 96, 1828287],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([139265, 2, 1, 512, 4, 4],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([142606337, 16],"float32"), axis=0, )
paddle.sum(Tensor([142606337, 16],"int64"), axis=0, )
paddle.sum(Tensor([142606337, 4, 2, 2],"float32"), axis=-2, )
paddle.sum(Tensor([142606337, 4, 4],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([1431655766, 3],"float16"), None, keepdim=False, name=None, )
paddle.sum(Tensor([1431655766, 3],"float16"), axis=list[1,], )
paddle.sum(Tensor([1444, 1580126],"float32"), 1, keepdim=False, name=None, )
paddle.sum(Tensor([1455167, 8, 14, 14],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([15845149, 144],"float32"), 1, )
paddle.sum(Tensor([15845149, 16, 3, 3],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 1114113, 128],"float32"), axis=0, )
paddle.sum(Tensor([16, 142606337, 1, 1],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 142606337, 1],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([16, 142606337],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([16, 142606337],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([16, 15845149, 3, 3],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 16, 2970966, 3],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 16, 3, 2970966],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 2228225, 64],"float32"), axis=0, )
paddle.sum(Tensor([16, 268435457],"float16"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([16, 32, 1, 4456449],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 32, 4456449, 1],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 32, 4456449],"float32"), axis=0, )
paddle.sum(Tensor([16, 71303169, 2],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([16, 8, 1, 17825793],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 8, 17825793, 1],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 96, 1485483],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([16777217, 256],"float16"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([170628, 20, 669],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([170628, 4458, 3],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([17409, 128, 32, 32],"float32"), 1, )
paddle.sum(Tensor([17409, 128, 32, 32],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([175515491, 13],"float32"), 1, )
paddle.sum(Tensor([17825793, 128],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([17825793, 8, 16],"float32"), axis=1, )
paddle.sum(Tensor([1782580, 1280],"float32"), 1, keepdim=False, name=None, )
paddle.sum(Tensor([18, 126761188],"float32"), 0, )
paddle.sum(Tensor([182, 12536821],"float32"), axis=0, )
paddle.sum(Tensor([182, 2, 6268411],"float32"), axis=0, )
paddle.sum(Tensor([182, 783552, 16],"float32"), axis=0, )
paddle.sum(Tensor([19, 120089547],"float32"), axis=0, )
paddle.sum(Tensor([190141782, 12],"float32"), 1, )
paddle.sum(Tensor([190141782, 3, 4, 1, 1, 1],"int64"), )
paddle.sum(Tensor([190141782, 3, 4],"int32"), axis=0, )
paddle.sum(Tensor([190141782, 3, 4],"int32"), axis=tuple(0,1,), )
paddle.sum(Tensor([190141782, 3, 4],"int32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([19014179, 3, 4, 10],"float32"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1901418, 3, 20, 20],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([192, 11883862, 1, 1],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([192, 48, 1, 247581],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([192, 48, 247581, 1],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([192, 96, 1, 123791],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([192, 96, 123791, 1],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([2, 1, 1140850690],"float32"), axis=-1, )
paddle.sum(Tensor([2, 1, 1140850690],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([2, 10, 114085069],"float32"), name=None, )
paddle.sum(Tensor([2, 114085069, 10],"float32"), name=None, )
paddle.sum(Tensor([2, 1140850690],"bool"), axis=-1, keepdim=False, )
paddle.sum(Tensor([2, 1140850690],"bool"), axis=0, keepdim=True, )
paddle.sum(Tensor([2, 1140850690],"bool"), axis=1, keepdim=False, )
paddle.sum(Tensor([2, 1140850690],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([2, 1140850690],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([2, 1140850690],"bool"), axis=list[-1,], keepdim=False, )
paddle.sum(Tensor([2, 1140850690],"bool"), axis=list[0,], keepdim=True, )
paddle.sum(Tensor([2, 1140850690],"bool"), axis=list[1,], keepdim=False, )
paddle.sum(Tensor([2, 1140850690],"bool"), axis=tuple(0,1,), keepdim=False, )
paddle.sum(Tensor([2, 1140850690],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 1140850690],"float32"), 0, keepdim=True, dtype="float32", )
paddle.sum(Tensor([2, 1140850690],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 1140850690],"float32"), None, keepdim=False, dtype="float32", )
paddle.sum(Tensor([2, 1140850690],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([2, 1140850690],"float32"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([2, 2, 570425345],"float32"), axis=-1, )
paddle.sum(Tensor([2, 2147483649],"float16"), -1, keepdim=True, dtype="float32", )
paddle.sum(Tensor([2, 2147483649],"float16"), -1, keepdim=True, dtype=None, )
paddle.sum(Tensor([2, 2147483649],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 2147483649],"float16"), 0, keepdim=True, dtype="float32", )
paddle.sum(Tensor([2, 2147483649],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 2147483649],"float16"), None, keepdim=False, dtype="float32", )
paddle.sum(Tensor([2, 2147483649],"float16"), None, keepdim=False, name=None, )
paddle.sum(Tensor([2, 2147483649],"float16"), None, keepdim=True, dtype="float32", )
paddle.sum(Tensor([2, 2147483649],"float16"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([2, 2147483649],"float16"), axis=Tensor([2],"int64"), )
paddle.sum(Tensor([2, 285212673, 4],"int32"), axis=0, )
paddle.sum(Tensor([2, 285212673, 4],"int32"), axis=tuple(0,1,), )
paddle.sum(Tensor([2, 285212673, 4],"int32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([2, 3, 1242757, 2, 3, 4, 2, 3, 4],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 1242757, 2, 3, 4, 2, 3, 4],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 1242757, 2, 3, 4, 2, 3, 4],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 1242757, 2, 3, 4, 2, 3, 4],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 1242757, 2, 3, 4, 2, 3, 4],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 1242757, 2, 3, 4, 2, 3, 4],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 3, 238609295],"float16"), )
paddle.sum(Tensor([2, 3, 357913942, 2],"float16"), )
paddle.sum(Tensor([2, 3, 380283564],"int32"), axis=0, )
paddle.sum(Tensor([2, 3, 380283564],"int32"), axis=tuple(0,1,), )
paddle.sum(Tensor([2, 3, 380283564],"int32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 1242757, 2, 3, 4],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 1242757, 2, 3, 4],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 1242757, 2, 3, 4],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 1242757, 2, 3, 4],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 1242757, 2, 3, 4],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 1242757, 2, 3, 4],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 1242757],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 1242757],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 1242757],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 1242757],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 1242757],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 1242757],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 660215],"float32"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 660215],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 660215],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 660215],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 660215],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 660215],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 660215],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 660215],"int64"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 495161, 4],"float32"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 495161, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 495161, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 495161, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 495161, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 495161, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 495161, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 495161, 4],"int64"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 932068, 4],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 932068, 4],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 932068, 4],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 932068, 4],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 932068, 4],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 932068, 4],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 330108, 3, 4],"float32"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 330108, 3, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 330108, 3, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 330108, 3, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 330108, 3, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 330108, 3, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 330108, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 330108, 3, 4],"int64"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 621379, 3, 4],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 621379, 3, 4],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 621379, 3, 4],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 621379, 3, 4],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 621379, 3, 4],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 621379, 3, 4],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 660215, 2, 3, 4],"float32"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 660215, 2, 3, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 660215, 2, 3, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 660215, 2, 3, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 660215, 2, 3, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 660215, 2, 3, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 660215, 2, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 660215, 2, 3, 4],"int64"), )
paddle.sum(Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"float32"), )
paddle.sum(Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"int64"), )
paddle.sum(Tensor([2, 3, 4, 2, 932068, 4, 2, 3, 4],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 932068, 4, 2, 3, 4],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 932068, 4, 2, 3, 4],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 932068, 4, 2, 3, 4],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 932068, 4, 2, 3, 4],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 932068, 4, 2, 3, 4],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 330108, 3, 4, 2, 3, 4],"float32"), )
paddle.sum(Tensor([2, 3, 4, 330108, 3, 4, 2, 3, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 330108, 3, 4, 2, 3, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 330108, 3, 4, 2, 3, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 330108, 3, 4, 2, 3, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 330108, 3, 4, 2, 3, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 330108, 3, 4, 2, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 330108, 3, 4, 2, 3, 4],"int64"), )
paddle.sum(Tensor([2, 3, 4, 621379, 3, 4, 2, 3, 4],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 621379, 3, 4, 2, 3, 4],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 621379, 3, 4, 2, 3, 4],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 621379, 3, 4, 2, 3, 4],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 621379, 3, 4, 2, 3, 4],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 621379, 3, 4, 2, 3, 4],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 95070891],"bool"), axis=-1, keepdim=False, )
paddle.sum(Tensor([2, 3, 4, 95070891],"bool"), axis=2, keepdim=True, )
paddle.sum(Tensor([2, 3, 4, 95070891],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([2, 3, 4, 95070891],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([2, 3, 4, 95070891],"bool"), axis=list[-1,], keepdim=False, )
paddle.sum(Tensor([2, 3, 4, 95070891],"bool"), axis=list[0,1,2,3,], keepdim=False, )
paddle.sum(Tensor([2, 3, 4, 95070891],"bool"), axis=list[0,2,], keepdim=False, )
paddle.sum(Tensor([2, 3, 4, 95070891],"bool"), axis=list[2,], keepdim=True, )
paddle.sum(Tensor([2, 3, 4, 95070891],"bool"), axis=list[], keepdim=False, )
paddle.sum(Tensor([2, 3, 4, 95070891],"bool"), axis=tuple(0,2,), keepdim=False, )
paddle.sum(Tensor([2, 3, 4, 95070891],"int64"), axis=None, keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 4, 95070891],"int64"), axis=None, keepdim=True, name=None, )
paddle.sum(Tensor([2, 3, 4, 95070891],"int64"), axis=list[-1,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 4, 95070891],"int64"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 4, 95070891],"int64"), axis=list[0,2,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 4, 95070891],"int64"), axis=list[2,], keepdim=True, name=None, )
paddle.sum(Tensor([2, 3, 4, 95070891],"int64"), axis=tuple(0,1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 4, 95070891],"int64"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 660215, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.sum(Tensor([2, 3, 660215, 2, 3, 4, 2, 3, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 660215, 2, 3, 4, 2, 3, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 660215, 2, 3, 4, 2, 3, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 660215, 2, 3, 4, 2, 3, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 660215, 2, 3, 4, 2, 3, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 660215, 2, 3, 4, 2, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 660215, 2, 3, 4, 2, 3, 4],"int64"), )
paddle.sum(Tensor([2, 3, 76056713, 5],"bool"), axis=-1, keepdim=False, )
paddle.sum(Tensor([2, 3, 76056713, 5],"bool"), axis=2, keepdim=True, )
paddle.sum(Tensor([2, 3, 76056713, 5],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([2, 3, 76056713, 5],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([2, 3, 76056713, 5],"bool"), axis=list[-1,], keepdim=False, )
paddle.sum(Tensor([2, 3, 76056713, 5],"bool"), axis=list[0,1,2,3,], keepdim=False, )
paddle.sum(Tensor([2, 3, 76056713, 5],"bool"), axis=list[0,2,], keepdim=False, )
paddle.sum(Tensor([2, 3, 76056713, 5],"bool"), axis=list[2,], keepdim=True, )
paddle.sum(Tensor([2, 3, 76056713, 5],"bool"), axis=list[], keepdim=False, )
paddle.sum(Tensor([2, 3, 76056713, 5],"bool"), axis=tuple(0,2,), keepdim=False, )
paddle.sum(Tensor([2, 3, 76056713, 5],"int64"), axis=None, keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 76056713, 5],"int64"), axis=None, keepdim=True, name=None, )
paddle.sum(Tensor([2, 3, 76056713, 5],"int64"), axis=list[-1,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 76056713, 5],"int64"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 76056713, 5],"int64"), axis=list[0,2,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 76056713, 5],"int64"), axis=list[2,], keepdim=True, name=None, )
paddle.sum(Tensor([2, 3, 76056713, 5],"int64"), axis=tuple(0,1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 76056713, 5],"int64"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.sum(Tensor([2, 357913942, 3, 2],"float16"), )
paddle.sum(Tensor([2, 495161, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.sum(Tensor([2, 495161, 4, 2, 3, 4, 2, 3, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 495161, 4, 2, 3, 4, 2, 3, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 495161, 4, 2, 3, 4, 2, 3, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 495161, 4, 2, 3, 4, 2, 3, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 495161, 4, 2, 3, 4, 2, 3, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 495161, 4, 2, 3, 4, 2, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 495161, 4, 2, 3, 4, 2, 3, 4],"int64"), )
paddle.sum(Tensor([2, 570425345, 2],"float32"), axis=-1, )
paddle.sum(Tensor([2, 570425345, 2],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([2, 570425345, 2],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([2, 57042535, 4, 5],"bool"), axis=-1, keepdim=False, )
paddle.sum(Tensor([2, 57042535, 4, 5],"bool"), axis=2, keepdim=True, )
paddle.sum(Tensor([2, 57042535, 4, 5],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([2, 57042535, 4, 5],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([2, 57042535, 4, 5],"bool"), axis=list[-1,], keepdim=False, )
paddle.sum(Tensor([2, 57042535, 4, 5],"bool"), axis=list[0,1,2,3,], keepdim=False, )
paddle.sum(Tensor([2, 57042535, 4, 5],"bool"), axis=list[0,2,], keepdim=False, )
paddle.sum(Tensor([2, 57042535, 4, 5],"bool"), axis=list[2,], keepdim=True, )
paddle.sum(Tensor([2, 57042535, 4, 5],"bool"), axis=list[], keepdim=False, )
paddle.sum(Tensor([2, 57042535, 4, 5],"bool"), axis=tuple(0,2,), keepdim=False, )
paddle.sum(Tensor([2, 57042535, 4, 5],"int64"), axis=None, keepdim=False, name=None, )
paddle.sum(Tensor([2, 57042535, 4, 5],"int64"), axis=None, keepdim=True, name=None, )
paddle.sum(Tensor([2, 57042535, 4, 5],"int64"), axis=list[-1,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 57042535, 4, 5],"int64"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 57042535, 4, 5],"int64"), axis=list[0,2,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 57042535, 4, 5],"int64"), axis=list[2,], keepdim=True, name=None, )
paddle.sum(Tensor([2, 57042535, 4, 5],"int64"), axis=tuple(0,1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([2, 57042535, 4, 5],"int64"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.sum(Tensor([2, 71303169, 16],"float32"), axis=1, )
paddle.sum(Tensor([2, 8, 142606337],"float32"), axis=1, )
paddle.sum(Tensor([2, 932068, 4, 2, 3, 4, 2, 3, 4],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 932068, 4, 2, 3, 4, 2, 3, 4],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 932068, 4, 2, 3, 4, 2, 3, 4],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 932068, 4, 2, 3, 4, 2, 3, 4],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 932068, 4, 2, 3, 4, 2, 3, 4],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 932068, 4, 2, 3, 4, 2, 3, 4],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 96, 11883862],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([20, 1, 152, 750560],"float32"), )
paddle.sum(Tensor([20, 1, 419431, 272],"float32"), )
paddle.sum(Tensor([20, 2760, 152, 272],"float32"), )
paddle.sum(Tensor([2123, 25, 21504, 2],"float32"), axis=-1, )
paddle.sum(Tensor([2147483649, 2],"float16"), axis=Tensor([2],"int64"), )
paddle.sum(Tensor([2147483649, 2],"float16"), axis=list[1,], )
paddle.sum(Tensor([214748365, 2, 10],"float16"), None, "float64", False, None, )
paddle.sum(Tensor([214748365, 20],"float16"), axis=-1, )
paddle.sum(Tensor([214748365, 20],"float16"), axis=-1, keepdim=True, )
paddle.sum(Tensor([2177, 1024, 1024],"int64"), )
paddle.sum(Tensor([2228225, 1024, 1],"float32"), )
paddle.sum(Tensor([2228225, 1024],"float32"), 1, keepdim=False, name=None, )
paddle.sum(Tensor([2228225, 32, 32],"float32"), axis=0, )
paddle.sum(Tensor([22339, 102144],"float32"), axis=1, )
paddle.sum(Tensor([22369622, 102],"float32"), axis=-1, )
paddle.sum(Tensor([2281701379, 1, 1],"float32"), 1, )
paddle.sum(Tensor([2281701379, 1, 1],"float32"), None, None, False, None, )
paddle.sum(Tensor([2281701379, 1],"float32"), )
paddle.sum(Tensor([2281701379, 1],"float32"), axis=-1, )
paddle.sum(Tensor([2281701379, 1],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([2281701379, 1],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([2281701379, 1],"float32"), name=None, )
paddle.sum(Tensor([2281701379, 1],"int32"), )
paddle.sum(Tensor([2281701379, 1],"int64"), )
paddle.sum(Tensor([2281701379],"bool"), axis=list[0,], keepdim=False, )
paddle.sum(Tensor([2281701379],"float32"), )
paddle.sum(Tensor([2281701379],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2281701379],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([2281701379],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([2281701379],"float32"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([2281701379],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([2281701379],"float32"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([2281701379],"float32"), axis=-1, )
paddle.sum(Tensor([2281701379],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([2281701379],"float32"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([2281701379],"float32"), axis=0, )
paddle.sum(Tensor([2281701379],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([2281701379],"float32"), name=None, )
paddle.sum(Tensor([2281701379],"int64"), axis=list[0,], keepdim=False, name=None, )
paddle.sum(Tensor([228170138, 10],"float32"), )
paddle.sum(Tensor([228170138, 10],"float32"), 1, )
paddle.sum(Tensor([228170138, 10],"float32"), axis=list[], keepdim=False, )
paddle.sum(Tensor([228170138, 10],"float32"), name=None, )
paddle.sum(Tensor([228170138, 2, 5],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([228170138, 2, 5],"float32"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([228170138, 2, 5],"float32"), axis=list[-2,-1,], keepdim=True, )
paddle.sum(Tensor([22817014, 10, 10],"float32"), name=None, )
paddle.sum(Tensor([22817014, 100],"float32"), 1, )
paddle.sum(Tensor([22817014, 100],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([2281702, 1000],"float32"), axis=-1, )
paddle.sum(Tensor([2281702, 1000],"float32"), axis=1, )
paddle.sum(Tensor([2328267, 14, 5, 14],"int64"), axis=list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([2328267, 14, 5, 14],"int64"), axis=list[1,3,], keepdim=True, name=None, )
paddle.sum(Tensor([23767723, 24, 4],"float32"), axis=2, )
paddle.sum(Tensor([23767723, 32, 3],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([23767723, 96, 1, 1],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([23767723, 96, 1],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([238609295, 3, 3, 2],"float16"), )
paddle.sum(Tensor([24422, 93431],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([246, 186, 50000],"float32"), axis=1, )
paddle.sum(Tensor([24801102, 23, 4],"float32"), axis=2, )
paddle.sum(Tensor([253522376, 3, 3],"float32"), 2, )
paddle.sum(Tensor([253522376, 9],"float32"), 1, keepdim=False, name=None, )
paddle.sum(Tensor([256, 28, 28, 11369],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([256, 28, 3979, 80],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([256, 3979, 28, 80],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([277, 165, 50000],"float32"), axis=1, )
paddle.sum(Tensor([278529, 1024, 8],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([28169153, 3, 3, 3, 3],"float32"), )
paddle.sum(Tensor([285212673, 2, 4],"float32"), axis=1, )
paddle.sum(Tensor([285212673, 4, 2],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([285212673, 4, 2],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([285212673, 4, 2],"float32"), axis=2, keepdim=True, )
paddle.sum(Tensor([285212673, 4, 2],"int32"), axis=0, keepdim=True, )
paddle.sum(Tensor([285212673, 4, 2],"int32"), axis=2, keepdim=True, )
paddle.sum(Tensor([285212673, 4, 2],"int64"), axis=0, keepdim=True, )
paddle.sum(Tensor([285212673, 4, 2],"int64"), axis=2, keepdim=True, )
paddle.sum(Tensor([285212673, 8, 1, 1],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([285213, 200, 40],"float32"), axis=1, keepdim=False, )
paddle.sum(Tensor([2910334, 784],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([29151, 100, 783],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([29151, 26091, 3],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([3, 1431655766],"float16"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([3, 1431655766],"float16"), axis=0, keepdim=True, )
paddle.sum(Tensor([3, 152113426, 5],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([3, 152113426, 5],"float32"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([3, 152113426, 5],"float32"), axis=list[-2,-1,], keepdim=True, )
paddle.sum(Tensor([3, 190141782, 4],"float32"), axis=1, )
paddle.sum(Tensor([3, 2, 126761188, 3],"float32"), )
paddle.sum(Tensor([3, 2, 3, 126761188],"float32"), )
paddle.sum(Tensor([3, 2, 380283564],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([3, 2, 380283564],"float32"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([3, 2, 380283564],"float32"), axis=1, )
paddle.sum(Tensor([3, 2, 380283564],"float32"), axis=list[-2,-1,], keepdim=True, )
paddle.sum(Tensor([3, 28169153, 3, 3, 3],"float32"), )
paddle.sum(Tensor([3, 3, 10, 25352238],"float32"), )
paddle.sum(Tensor([3, 3, 10, 25352238],"float32"), name=None, )
paddle.sum(Tensor([3, 3, 25352238, 10],"float32"), )
paddle.sum(Tensor([3, 3, 25352238, 10],"float32"), name=None, )
paddle.sum(Tensor([3, 3, 28169153, 3, 3],"float32"), )
paddle.sum(Tensor([3, 3, 3, 28169153, 3],"float32"), )
paddle.sum(Tensor([3, 3, 3, 3, 28169153],"float32"), )
paddle.sum(Tensor([3, 3, 477218589],"float16"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([3, 3, 477218589],"float16"), None, keepdim=False, name=None, )
paddle.sum(Tensor([3, 3, 477218589],"float16"), list[0,1,], keepdim=False, name=None, )
paddle.sum(Tensor([3, 3, 477218589],"float16"), tuple(0,1,), keepdim=False, name=None, )
paddle.sum(Tensor([3, 3, 477218589],"float16"), tuple(0,1,), keepdim=True, name=None, )
paddle.sum(Tensor([3, 380283564, 2],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([3, 380283564, 2],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([3, 380283564, 2],"float32"), axis=2, keepdim=True, )
paddle.sum(Tensor([3, 380283564, 2],"int32"), axis=0, keepdim=True, )
paddle.sum(Tensor([3, 380283564, 2],"int32"), axis=2, keepdim=True, )
paddle.sum(Tensor([3, 380283564, 2],"int64"), axis=0, keepdim=True, )
paddle.sum(Tensor([3, 380283564, 2],"int64"), axis=2, keepdim=True, )
paddle.sum(Tensor([3, 4, 190141782],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([3, 4, 190141782],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([3, 4, 190141782],"float32"), axis=2, keepdim=True, )
paddle.sum(Tensor([3, 4, 190141782],"int32"), axis=0, keepdim=True, )
paddle.sum(Tensor([3, 4, 190141782],"int32"), axis=2, keepdim=True, )
paddle.sum(Tensor([3, 4, 190141782],"int64"), axis=0, keepdim=True, )
paddle.sum(Tensor([3, 4, 190141782],"int64"), axis=2, keepdim=True, )
paddle.sum(Tensor([3, 4, 357913942],"float16"), axis=0, keepdim=True, )
paddle.sum(Tensor([3, 4, 357913942],"float16"), axis=1, keepdim=True, )
paddle.sum(Tensor([3, 4, 357913942],"float16"), axis=2, keepdim=True, )
paddle.sum(Tensor([3, 4, 4, 5, 9507090],"int64"), )
paddle.sum(Tensor([3, 4, 4, 6790778, 7],"int64"), )
paddle.sum(Tensor([3, 4, 5432623, 5, 7],"int64"), )
paddle.sum(Tensor([3, 477218589, 3],"float16"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([3, 477218589, 3],"float16"), None, keepdim=False, name=None, )
paddle.sum(Tensor([3, 477218589, 3],"float16"), list[0,1,], keepdim=False, name=None, )
paddle.sum(Tensor([3, 477218589, 3],"float16"), tuple(0,1,), keepdim=False, name=None, )
paddle.sum(Tensor([3, 477218589, 3],"float16"), tuple(0,1,), keepdim=True, name=None, )
paddle.sum(Tensor([3, 5432623, 4, 5, 7],"int64"), )
paddle.sum(Tensor([3, 715827883, 2],"float16"), axis=0, keepdim=True, )
paddle.sum(Tensor([3, 715827883, 2],"float16"), axis=1, keepdim=True, )
paddle.sum(Tensor([3, 715827883, 2],"float16"), axis=2, keepdim=True, )
paddle.sum(Tensor([3, 760567127, 1],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([3, 760567127],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([3, 760567127],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([3, 760567127],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([3, 760567127],"float32"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([3, 760567127],"float32"), axis=None, )
paddle.sum(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.sum(Tensor([3, 760567127],"int64"), axis=None, keepdim=False, name=None, )
paddle.sum(Tensor([3, 760567127],"int64"), axis=None, keepdim=True, name=None, )
paddle.sum(Tensor([3, 7605672, 10, 10],"float32"), )
paddle.sum(Tensor([3, 7605672, 10, 10],"float32"), name=None, )
paddle.sum(Tensor([3, 84507459, 3, 3],"float32"), )
paddle.sum(Tensor([3, 96, 7922575],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([30, 1901418, 40],"float32"), axis=1, keepdim=False, )
paddle.sum(Tensor([30, 200, 380284],"float32"), axis=1, keepdim=False, )
paddle.sum(Tensor([31690297, 18, 4],"float32"), axis=2, )
paddle.sum(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), )
paddle.sum(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([3169030, 3, 4, 4, 5, 3],"int64"), )
paddle.sum(Tensor([32, 32, 2228225],"float32"), axis=1, )
paddle.sum(Tensor([32, 557057, 128],"float32"), axis=1, )
paddle.sum(Tensor([32, 71303169],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([325957340, 7],"int32"), axis=1, dtype="int64", )
paddle.sum(Tensor([32648, 208, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([330108, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.sum(Tensor([330108, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([330108, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([330108, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([330108, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([330108, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([330108, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([330108, 3, 4, 2, 3, 4, 2, 3, 4],"int64"), )
paddle.sum(Tensor([33954, 200, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([34817, 256, 16, 16],"float32"), 1, )
paddle.sum(Tensor([34817, 256, 16, 16],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([35791395, 3, 4, 10],"float16"), 2, keepdim=False, name=None, )
paddle.sum(Tensor([35791395, 3, 4, 10],"float16"), list[1,2,], keepdim=False, name=None, )
paddle.sum(Tensor([35791395, 3, 4, 10],"float16"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([35791395, 3, 4, 10],"float16"), tuple(1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([36, 63380594],"float32"), 1, keepdim=False, name=None, )
paddle.sum(Tensor([36085, 208, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([36380, 28, 28, 80],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([36566, 200, 312],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([37528, 200, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([38, 60044774],"float32"), 1, keepdim=False, name=None, )
paddle.sum(Tensor([380283564, 2, 3],"float32"), -2, keepdim=False, dtype=None, )
paddle.sum(Tensor([380283564, 2, 3],"float32"), -2, keepdim=True, dtype=None, )
paddle.sum(Tensor([380283564, 2, 3],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([380283564, 2, 3],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([380283564, 2, 3],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([380283564, 2, 3],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([380283564, 2, 3],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([380283564, 2, 3],"float32"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([380283564, 2, 3],"float32"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([380283564, 3, 2],"float32"), axis=1, keepdim=False, )
paddle.sum(Tensor([38028357, 20, 3],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([38028357, 3, 4, 5],"bool"), axis=-1, keepdim=False, )
paddle.sum(Tensor([38028357, 3, 4, 5],"bool"), axis=2, keepdim=True, )
paddle.sum(Tensor([38028357, 3, 4, 5],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([38028357, 3, 4, 5],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([38028357, 3, 4, 5],"bool"), axis=list[-1,], keepdim=False, )
paddle.sum(Tensor([38028357, 3, 4, 5],"bool"), axis=list[0,1,2,3,], keepdim=False, )
paddle.sum(Tensor([38028357, 3, 4, 5],"bool"), axis=list[0,2,], keepdim=False, )
paddle.sum(Tensor([38028357, 3, 4, 5],"bool"), axis=list[2,], keepdim=True, )
paddle.sum(Tensor([38028357, 3, 4, 5],"bool"), axis=list[], keepdim=False, )
paddle.sum(Tensor([38028357, 3, 4, 5],"bool"), axis=tuple(0,2,), keepdim=False, )
paddle.sum(Tensor([38028357, 3, 4, 5],"int64"), axis=None, keepdim=False, name=None, )
paddle.sum(Tensor([38028357, 3, 4, 5],"int64"), axis=None, keepdim=True, name=None, )
paddle.sum(Tensor([38028357, 3, 4, 5],"int64"), axis=list[-1,], keepdim=False, name=None, )
paddle.sum(Tensor([38028357, 3, 4, 5],"int64"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.sum(Tensor([38028357, 3, 4, 5],"int64"), axis=list[0,2,], keepdim=False, name=None, )
paddle.sum(Tensor([38028357, 3, 4, 5],"int64"), axis=list[2,], keepdim=True, name=None, )
paddle.sum(Tensor([38028357, 3, 4, 5],"int64"), axis=tuple(0,1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([38028357, 3, 4, 5],"int64"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.sum(Tensor([38028357, 60],"int64"), axis=0, )
paddle.sum(Tensor([38029, 300, 20, 10],"float32"), axis=tuple(0,1,), )
paddle.sum(Tensor([4, 1073741825],"float16"), axis=list[1,], )
paddle.sum(Tensor([4, 142606337, 4],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([4, 19513, 94, 311],"float32"), axis=1, )
paddle.sum(Tensor([4, 2, 1, 17825793, 4, 4],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([4, 2, 1, 512, 139265, 4],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([4, 2, 1, 512, 4, 139265],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([4, 2, 34817, 512, 4, 4],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([4, 285212673, 2],"float32"), axis=1, keepdim=False, )
paddle.sum(Tensor([4, 3, 190141782],"float32"), axis=1, keepdim=False, )
paddle.sum(Tensor([4, 3, 2, 95070891],"float32"), axis=list[1,3,], keepdim=False, )
paddle.sum(Tensor([4, 3, 2, 95070891],"float32"), axis=list[1,3,], keepdim=True, )
paddle.sum(Tensor([4, 3, 3, 119304648],"float16"), name=None, )
paddle.sum(Tensor([4, 3, 38028357, 5],"float32"), axis=list[1,3,], keepdim=False, )
paddle.sum(Tensor([4, 3, 38028357, 5],"float32"), axis=list[1,3,], keepdim=True, )
paddle.sum(Tensor([4, 3, 89478486, 4],"float16"), name=None, )
paddle.sum(Tensor([4, 4, 142606337],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([4, 57042535, 2, 5],"float32"), axis=list[1,3,], keepdim=False, )
paddle.sum(Tensor([4, 57042535, 2, 5],"float32"), axis=list[1,3,], keepdim=True, )
paddle.sum(Tensor([4, 69633, 1, 512, 4, 4],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([4, 81, 22645, 311],"float32"), axis=1, )
paddle.sum(Tensor([4, 81, 94, 74918],"float32"), axis=1, )
paddle.sum(Tensor([4, 89478486, 3, 4],"float16"), name=None, )
paddle.sum(Tensor([400, 28522, 20, 10],"float32"), axis=tuple(0,1,), )
paddle.sum(Tensor([400, 300, 1902, 10],"float32"), axis=tuple(0,1,), )
paddle.sum(Tensor([400, 300, 20, 951],"float32"), axis=tuple(0,1,), )
paddle.sum(Tensor([4074467, 4, 4, 5, 7],"int64"), )
paddle.sum(Tensor([4097, 64, 128, 128],"float16"), name=None, )
paddle.sum(Tensor([42253730, 1, 54],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([4286, 26, 512, 1, 40],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([4294967297, 1, 1],"float16"), None, None, False, None, )
paddle.sum(Tensor([4294967297, 1],"float16"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([4294967297],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([4294967297],"float16"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([4294967297],"float16"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([4294967297],"float16"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([4294967297],"float16"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([4294967297],"float16"), axis=-1, )
paddle.sum(Tensor([4294967297],"float16"), axis=-1, keepdim=True, )
paddle.sum(Tensor([4294967297],"float16"), axis=0, keepdim=True, )
paddle.sum(Tensor([4294967297],"float16"), name=None, )
paddle.sum(Tensor([43878873, 13, 4],"float32"), axis=2, )
paddle.sum(Tensor([456340276, 5],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([456340276, 5],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([456340276, 5],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([456340276, 5],"float32"), 0, keepdim=True, dtype="float32", )
paddle.sum(Tensor([456340276, 5],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([456340276, 5],"float32"), None, keepdim=False, dtype="float32", )
paddle.sum(Tensor([456340276, 5],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([456340276, 5],"float32"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([456340276, 5],"float32"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([456340276, 5],"float32"), axis=None, )
paddle.sum(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.sum(Tensor([456340276, 5],"int64"), axis=None, keepdim=False, name=None, )
paddle.sum(Tensor([456340276, 5],"int64"), axis=None, keepdim=True, name=None, )
paddle.sum(Tensor([45634028, 25, 1, 2],"float32"), axis=-1, )
paddle.sum(Tensor([47535446, 48, 1, 1],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([477218589, 3, 3],"float16"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([477218589, 3, 3],"float16"), None, keepdim=False, name=None, )
paddle.sum(Tensor([477218589, 3, 3],"float16"), list[0,1,], keepdim=False, name=None, )
paddle.sum(Tensor([477218589, 3, 3],"float16"), tuple(0,1,), keepdim=False, name=None, )
paddle.sum(Tensor([477218589, 3, 3],"float16"), tuple(0,1,), keepdim=True, name=None, )
paddle.sum(Tensor([5, 456340276],"float32"), axis=list[1,], )
paddle.sum(Tensor([5, 858993460],"float16"), axis=list[1,], )
paddle.sum(Tensor([500, 11409, 20, 20],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([500, 3, 20, 76057],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([500, 3, 76057, 20],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([5000, 456341],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([5000, 858994],"float16"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([50000, 2, 42950],"float16"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([50000, 28634, 3],"float16"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([50704476, 1, 45],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([50704476, 3, 3, 5],"float32"), )
paddle.sum(Tensor([5093084, 2, 7, 32],"float32"), axis=-2, )
paddle.sum(Tensor([512, 22737, 14, 14],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([512, 8, 14, 39790],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([512, 8, 39790, 14],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([524289, 1024, 8],"float16"), None, keepdim=False, name=None, )
paddle.sum(Tensor([536870913, 4, 2],"float16"), axis=0, keepdim=True, )
paddle.sum(Tensor([536870913, 4, 2],"float16"), axis=1, keepdim=True, )
paddle.sum(Tensor([536870913, 4, 2],"float16"), axis=2, keepdim=True, )
paddle.sum(Tensor([55189, 1, 152, 272],"float32"), )
paddle.sum(Tensor([557057, 32, 128],"float32"), axis=0, )
paddle.sum(Tensor([557057, 32, 128],"float32"), axis=1, )
paddle.sum(Tensor([557057, 4096, 1],"float32"), )
paddle.sum(Tensor([570425345, 2, 2],"float32"), axis=-1, )
paddle.sum(Tensor([57042535, 10, 4],"float32"), axis=2, )
paddle.sum(Tensor([57042535, 20, 2],"float32"), axis=-1, )
paddle.sum(Tensor([5704254, 400],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([5761873, 11, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([5965233, 3, 4, 4, 5, 3],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([5965233, 3, 4, 4, 5, 3],"float16"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([5965233, 3, 4, 4, 5, 3],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([5965233, 3, 4, 4, 5, 3],"float16"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([5965233, 3, 4, 4, 5, 3],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([5965233, 3, 4, 4, 5, 3],"float16"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([5965233, 3, 4, 4, 5, 3],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([5965233, 3, 4, 4, 5, 3],"float16"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([5965233, 3, 4, 4, 5, 3],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([5965233, 3, 4, 4, 5, 3],"float16"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([5965233, 3, 4, 4, 5, 3],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([5965233, 3, 4, 4, 5, 3],"float16"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 126761188, 3],"float32"), -2, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 126761188, 3],"float32"), -2, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 126761188, 3],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 126761188, 3],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 126761188, 3],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 126761188, 3],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 126761188, 3],"float32"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 126761188, 3],"float32"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 190141782],"float32"), -2, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 190141782],"float32"), -2, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 190141782],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 190141782],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 190141782],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 190141782],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 190141782],"float32"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 190141782],"float32"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 357913942],"float16"), -1, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 357913942],"float16"), -2, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 357913942],"float16"), -2, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 357913942],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 357913942],"float16"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 357913942],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 357913942],"float16"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 357913942],"float16"), None, "float64", False, None, )
paddle.sum(Tensor([6, 2, 357913942],"float16"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 357913942],"float16"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 238609295, 3],"float16"), -1, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 238609295, 3],"float16"), -2, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 238609295, 3],"float16"), -2, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 238609295, 3],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 238609295, 3],"float16"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 238609295, 3],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 238609295, 3],"float16"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 238609295, 3],"float16"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 238609295, 3],"float16"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 380283564],"float32"), 1, keepdim=False, name=None, )
paddle.sum(Tensor([6, 71582789, 10],"float16"), None, "float64", False, None, )
paddle.sum(Tensor([621379, 3, 4, 2, 3, 4, 2, 3, 4],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([621379, 3, 4, 2, 3, 4, 2, 3, 4],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([621379, 3, 4, 2, 3, 4, 2, 3, 4],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([621379, 3, 4, 2, 3, 4, 2, 3, 4],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([621379, 3, 4, 2, 3, 4, 2, 3, 4],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([621379, 3, 4, 2, 3, 4, 2, 3, 4],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([63380594, 1, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([6338060, 10, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([64, 11369, 56, 56],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([64, 1741, 512, 1, 40],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([64, 26, 34281, 1, 40],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([64, 26, 512, 1, 2679],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([64, 26, 512, 67, 40],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([64, 8, 56, 79580],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([64, 8, 79580, 56],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([7, 165, 1975500],"float32"), axis=1, )
paddle.sum(Tensor([7, 186, 1752459],"float32"), axis=1, )
paddle.sum(Tensor([7, 6520, 50000],"float32"), axis=1, )
paddle.sum(Tensor([71303169, 2, 16],"float32"), axis=0, )
paddle.sum(Tensor([71303169, 32, 1, 1],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([71303169, 32],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([715827883, 2, 3],"float16"), -1, keepdim=True, dtype=None, )
paddle.sum(Tensor([715827883, 2, 3],"float16"), -2, keepdim=False, dtype=None, )
paddle.sum(Tensor([715827883, 2, 3],"float16"), -2, keepdim=True, dtype=None, )
paddle.sum(Tensor([715827883, 2, 3],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([715827883, 2, 3],"float16"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([715827883, 2, 3],"float16"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([715827883, 2, 3],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([715827883, 2, 3],"float16"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([715827883, 2, 3],"float16"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([715827883, 2, 3],"float16"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([742742, 3072],"float32"), axis=1, )
paddle.sum(Tensor([760567127, 3],"bool"), axis=-1, keepdim=False, )
paddle.sum(Tensor([760567127, 3],"bool"), axis=0, keepdim=True, )
paddle.sum(Tensor([760567127, 3],"bool"), axis=1, keepdim=False, )
paddle.sum(Tensor([760567127, 3],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([760567127, 3],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([760567127, 3],"bool"), axis=list[-1,], keepdim=False, )
paddle.sum(Tensor([760567127, 3],"bool"), axis=list[0,], keepdim=True, )
paddle.sum(Tensor([760567127, 3],"bool"), axis=list[1,], keepdim=False, )
paddle.sum(Tensor([760567127, 3],"bool"), axis=tuple(0,1,), keepdim=False, )
paddle.sum(Tensor([760567127, 3],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([760567127, 3],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([760567127, 3],"float32"), axis=0, )
paddle.sum(Tensor([760567127, 3],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([76056713, 3, 2, 5],"float32"), axis=list[1,3,], keepdim=False, )
paddle.sum(Tensor([76056713, 3, 2, 5],"float32"), axis=list[1,3,], keepdim=True, )
paddle.sum(Tensor([7605672, 100, 3],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([7605672, 3, 10, 10],"float32"), )
paddle.sum(Tensor([7605672, 3, 10, 10],"float32"), name=None, )
paddle.sum(Tensor([76057, 15, 20, 100],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), )
paddle.sum(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 1188387, 4, 4, 5, 3],"int64"), )
paddle.sum(Tensor([8, 13927, 512, 1, 40],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([8, 2236963, 4, 4, 5, 3],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 2236963, 4, 4, 5, 3],"float16"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 2236963, 4, 4, 5, 3],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 2236963, 4, 4, 5, 3],"float16"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 2236963, 4, 4, 5, 3],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 2236963, 4, 4, 5, 3],"float16"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 2236963, 4, 4, 5, 3],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 2236963, 4, 4, 5, 3],"float16"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 2236963, 4, 4, 5, 3],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 2236963, 4, 4, 5, 3],"float16"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 2236963, 4, 4, 5, 3],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 2236963, 4, 4, 5, 3],"float16"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 26, 274243, 1, 40],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([8, 26, 512, 1, 21426],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([8, 26, 512, 536, 40],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), )
paddle.sum(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 1584515, 4, 5, 3],"int64"), )
paddle.sum(Tensor([8, 3, 2982617, 4, 5, 3],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 2982617, 4, 5, 3],"float16"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 2982617, 4, 5, 3],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 2982617, 4, 5, 3],"float16"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 2982617, 4, 5, 3],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 2982617, 4, 5, 3],"float16"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 2982617, 4, 5, 3],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 2982617, 4, 5, 3],"float16"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 2982617, 4, 5, 3],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 2982617, 4, 5, 3],"float16"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 2982617, 4, 5, 3],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 2982617, 4, 5, 3],"float16"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 1, 1, 23767723],"int64"), )
paddle.sum(Tensor([8, 3, 4, 1, 23767723, 1],"int64"), )
paddle.sum(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), )
paddle.sum(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 1584515, 5, 3],"int64"), )
paddle.sum(Tensor([8, 3, 4, 23767723, 1, 1],"int64"), )
paddle.sum(Tensor([8, 3, 4, 2982617, 5, 3],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 2982617, 5, 3],"float16"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 2982617, 5, 3],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 2982617, 5, 3],"float16"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 2982617, 5, 3],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 2982617, 5, 3],"float16"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 2982617, 5, 3],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 2982617, 5, 3],"float16"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 2982617, 5, 3],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 2982617, 5, 3],"float16"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 2982617, 5, 3],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 2982617, 5, 3],"float16"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"int64"), )
paddle.sum(Tensor([8, 3, 4, 4, 3728271, 3],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 3728271, 3],"float16"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 3728271, 3],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 3728271, 3],"float16"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 3728271, 3],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 3728271, 3],"float16"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 3728271, 3],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 3728271, 3],"float16"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 3728271, 3],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 3728271, 3],"float16"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 3728271, 3],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 3728271, 3],"float16"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), )
paddle.sum(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 1188387],"int64"), )
paddle.sum(Tensor([8, 3, 4, 4, 5, 2236963],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 2236963],"float16"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 2236963],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 2236963],"float16"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 2236963],"float16"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 2236963],"float16"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 2236963],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 2236963],"float16"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 2236963],"float16"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 2236963],"float16"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 2236963],"float16"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 2236963],"float16"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 95070891, 1, 1, 1],"int64"), )
paddle.sum(Tensor([8, 32769, 128, 128],"float16"), name=None, )
paddle.sum(Tensor([8, 64, 128, 65537],"float16"), name=None, )
paddle.sum(Tensor([8, 64, 65537, 128],"float16"), name=None, )
paddle.sum(Tensor([8, 71303169, 4, 1, 1, 1],"int64"), )
paddle.sum(Tensor([85899346, 10, 5],"float16"), name=None, )
paddle.sum(Tensor([858993460, 5],"float16"), -1, keepdim=True, dtype="float32", )
paddle.sum(Tensor([858993460, 5],"float16"), -1, keepdim=True, dtype=None, )
paddle.sum(Tensor([858993460, 5],"float16"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([858993460, 5],"float16"), 0, keepdim=True, dtype="float32", )
paddle.sum(Tensor([858993460, 5],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([858993460, 5],"float16"), None, keepdim=False, dtype="float32", )
paddle.sum(Tensor([858993460, 5],"float16"), None, keepdim=True, dtype="float32", )
paddle.sum(Tensor([858993460, 5],"float16"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([858993460, 5],"float16"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([8705, 512, 512],"int64"), )
paddle.sum(Tensor([8705, 64, 64, 64],"float32"), 1, )
paddle.sum(Tensor([8705, 64, 64, 64],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([8912897, 256],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([891290, 2560],"float32"), 1, keepdim=False, name=None, )
paddle.sum(Tensor([8985, 496, 512],"int64"), )
paddle.sum(Tensor([9, 253522376],"float32"), 1, keepdim=False, name=None, )
paddle.sum(Tensor([90948, 8, 56, 56],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([96, 11884, 20, 100],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([96, 15, 15846, 100],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([96, 15, 20, 79226],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([964, 81, 94, 311],"float32"), axis=1, )
paddle.sum(Tensor([990322, 2304],"float32"), 1, keepdim=False, name=None, )
paddle.sum(x=Tensor([1, 1444, 1, 1580126],"float32"), )
paddle.sum(x=Tensor([1, 1444, 1580126, 1],"float32"), )
paddle.sum(x=Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.sum(x=Tensor([1, 2281701379, 1],"float32"), )
paddle.sum(x=Tensor([1, 36, 1, 63380594],"float32"), )
paddle.sum(x=Tensor([1, 36, 63380594, 1],"float32"), )
paddle.sum(x=Tensor([1, 38, 60044774],"float32"), )
paddle.sum(x=Tensor([1, 9, 253522376],"float32"), )
paddle.sum(x=Tensor([100, 22817014],"float32"), axis=1, )
paddle.sum(x=Tensor([1140850690, 2],"float32"), )
paddle.sum(x=Tensor([1140850690, 2],"float32"), axis=0, keepdim=True, )
paddle.sum(x=Tensor([1140850690, 2],"float32"), dtype="float64", )
paddle.sum(x=Tensor([1140850690, 2],"int32"), )
paddle.sum(x=Tensor([14084577, 162],"float32"), axis=1, )
paddle.sum(x=Tensor([1580126, 1444, 1, 1],"float32"), )
paddle.sum(x=Tensor([2, 107374183, 4, 5],"float16"), keepdim=True, )
paddle.sum(x=Tensor([2, 1140850690],"float32"), )
paddle.sum(x=Tensor([2, 1140850690],"float32"), axis=0, keepdim=True, )
paddle.sum(x=Tensor([2, 1140850690],"float32"), dtype="float64", )
paddle.sum(x=Tensor([2, 1140850690],"int32"), )
paddle.sum(x=Tensor([2, 2147483649],"float16"), )
paddle.sum(x=Tensor([2, 2147483649],"float16"), axis=-1, )
paddle.sum(x=Tensor([2, 2147483649],"float16"), axis=0, keepdim=True, )
paddle.sum(x=Tensor([2, 2147483649],"float16"), axis=1, )
paddle.sum(x=Tensor([2, 2147483649],"float16"), axis=Tensor([1],"int64"), )
paddle.sum(x=Tensor([2, 2147483649],"float16"), axis=list[0,1,], )
paddle.sum(x=Tensor([2, 2147483649],"float16"), dtype="float64", )
paddle.sum(x=Tensor([2, 3, 143165577, 5],"float16"), keepdim=True, )
paddle.sum(x=Tensor([2, 3, 4, 178956971],"float16"), keepdim=True, )
paddle.sum(x=Tensor([2147483649, 2],"float16"), )
paddle.sum(x=Tensor([2147483649, 2],"float16"), axis=-1, )
paddle.sum(x=Tensor([2147483649, 2],"float16"), axis=0, keepdim=True, )
paddle.sum(x=Tensor([2147483649, 2],"float16"), axis=1, )
paddle.sum(x=Tensor([2147483649, 2],"float16"), axis=Tensor([1],"int64"), )
paddle.sum(x=Tensor([2147483649, 2],"float16"), axis=list[0,1,], )
paddle.sum(x=Tensor([2147483649, 2],"float16"), dtype="float64", )
paddle.sum(x=Tensor([2281701379],"float32"), )
paddle.sum(x=Tensor([253522376, 9, 1],"float32"), )
paddle.sum(x=Tensor([50704476, 45],"float32"), axis=1, )
paddle.sum(x=Tensor([60044774, 38, 1],"float32"), )
paddle.sum(x=Tensor([6004478, 380],"float32"), axis=1, )
paddle.sum(x=Tensor([63380594, 36, 1, 1],"float32"), )
paddle.sum(x=Tensor([71582789, 3, 4, 5],"float16"), keepdim=True, )
paddle.sum(x=Tensor([790063, 2888],"float32"), axis=1, )
paddle.t(Tensor([1, 4294967297],"float16"), )
paddle.t(Tensor([10, 228170138],"float32"), )
paddle.t(Tensor([10, 429496730],"float16"), )
paddle.t(Tensor([114085069, 20],"float32"), )
paddle.t(Tensor([20, 114085069],"float32"), )
paddle.t(Tensor([228170138, 10],"float32"), )
paddle.t(Tensor([4294967297],"float16"), )
paddle.t(Tensor([4456449, 512],"int64"), )
paddle.t(Tensor([512, 4456449],"int64"), )
paddle.t(Tensor([858993460, 5],"float16"), )
paddle.take(Tensor([1073741825, 4],"float16"), Tensor([5, 8],"int64"), mode="clip", )
paddle.take(Tensor([1073741825, 4],"float16"), Tensor([5, 8],"int64"), mode="wrap", )
paddle.take(Tensor([3, 1431655766],"float16"), Tensor([5, 8],"int64"), mode="clip", )
paddle.take(Tensor([3, 1431655766],"float16"), Tensor([5, 8],"int64"), mode="wrap", )
paddle.take_along_axis(Tensor([1, 36828, 4],"float32"), Tensor([1, 570425345, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([1, 36828, 61956],"float32"), Tensor([1, 900, 61956],"int64"), 1, )
paddle.take_along_axis(Tensor([1, 38367, 4],"float32"), Tensor([1, 570425345, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([1, 38367, 59471],"float32"), Tensor([1, 900, 59471],"int64"), 1, )
paddle.take_along_axis(Tensor([1, 570425345, 4],"float32"), Tensor([1, 300, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([1, 570425345, 4],"float32"), Tensor([1, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([1, 6380, 357634],"float32"), Tensor([1, 300, 357634],"int64"), axis=1, )
paddle.take_along_axis(Tensor([1, 6380, 4],"float32"), Tensor([1, 570425345, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([1, 8550, 266866],"float32"), Tensor([1, 300, 266866],"int64"), axis=1, )
paddle.take_along_axis(Tensor([1, 8550, 4],"float32"), Tensor([1, 570425345, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([1024],"float32"), Tensor([2281701379],"int32"), axis=0, )
paddle.take_along_axis(Tensor([1073741825, 4],"float16"), Tensor([1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([1073741825, 4],"float16"), Tensor([570425345, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([1140850690, 2],"float32"), Tensor([4, 2],"float32"), 0, )
paddle.take_along_axis(Tensor([1140850690, 2],"float32"), Tensor([4, 2],"int64"), 0, )
paddle.take_along_axis(Tensor([1184],"float32"), Tensor([2281701379],"int32"), axis=0, )
paddle.take_along_axis(Tensor([128, 17825793],"float32"), Tensor([128, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([128, 8],"float32"), Tensor([128, 17825793],"int64"), axis=1, )
paddle.take_along_axis(Tensor([13, 1790975, 7, 14],"float32"), axis=-1, indices=Tensor([13, 1790975, 7, 7],"int64"), )
paddle.take_along_axis(Tensor([13, 4, 3134206, 14],"float32"), axis=-1, indices=Tensor([13, 4, 3134206, 7],"int64"), )
paddle.take_along_axis(Tensor([13, 4, 7, 14],"float32"), axis=-1, indices=Tensor([13, 4, 7, 6268411],"int64"), )
paddle.take_along_axis(Tensor([13, 4, 7, 6268411],"float32"), axis=-1, indices=Tensor([13, 4, 7, 7],"int64"), )
paddle.take_along_axis(Tensor([134217729, 4, 4, 2],"float16"), Tensor([1, 1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([134217729, 4, 4, 2],"float16"), Tensor([71303169, 1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([1431655766, 3],"float16"), Tensor([1, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([14868, 38367, 4],"float32"), Tensor([1, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([14868, 38367, 4],"float32"), Tensor([14868, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([15489, 36828, 4],"float32"), Tensor([1, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([15489, 36828, 4],"float32"), Tensor([15489, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([16384],"float32"), Tensor([2281701379],"int32"), axis=0, )
paddle.take_along_axis(Tensor([1],"float32"), Tensor([2281701379],"int32"), axis=0, )
paddle.take_along_axis(Tensor([2, 1140850690],"float32"), Tensor([2, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([2, 2],"float32"), Tensor([1140850690, 2],"float32"), 0, )
paddle.take_along_axis(Tensor([2, 2],"float32"), Tensor([1140850690, 2],"int64"), 0, )
paddle.take_along_axis(Tensor([2, 3],"float32"), Tensor([2, 1140850690],"int32"), axis=1, )
paddle.take_along_axis(Tensor([2147483649, 2],"float16"), Tensor([1, 1],"int64"), 1, )
paddle.take_along_axis(Tensor([2281701379],"float32"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([2281701379],"float32"), Tensor([1],"int64"), 0, )
paddle.take_along_axis(Tensor([2281701379],"float32"), Tensor([2281701379],"int32"), axis=0, )
paddle.take_along_axis(Tensor([228170138, 2, 5],"float32"), Tensor([1, 1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([228170138, 2, 5],"float32"), Tensor([228170138, 1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([253522376, 3, 3],"float32"), Tensor([1, 3, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([268435457, 4, 4],"float16"), Tensor([1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([268435457, 4, 4],"float16"), Tensor([142606337, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([28, 5],"float32"), Tensor([28, 81489335],"int64"), axis=1, )
paddle.take_along_axis(Tensor([28, 81489335],"float32"), Tensor([28, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([285212673, 8],"float32"), Tensor([285212673, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([3, 1431655766],"float16"), Tensor([1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 1431655766],"float16"), Tensor([1, 760567127],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 152113426, 5],"float32"), Tensor([1, 1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 152113426, 5],"float32"), Tensor([1, 152113426, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 2, 380283564],"float32"), Tensor([1, 1, 380283564],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 2, 380283564],"float32"), Tensor([1, 1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 253522376, 3],"float32"), Tensor([1, 253522376, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([3, 3, 253522376],"float32"), Tensor([1, 3, 253522376],"int32"), axis=0, )
paddle.take_along_axis(Tensor([3, 3, 3],"float32"), Tensor([253522376, 3, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([3, 3],"float32"), Tensor([760567127, 3],"float32"), 0, )
paddle.take_along_axis(Tensor([3, 3],"float32"), Tensor([760567127, 3],"int64"), 0, )
paddle.take_along_axis(Tensor([3, 3],"float32"), Tensor([760567127, 3],"int64"), 0, False, )
paddle.take_along_axis(Tensor([3, 5],"float32"), Tensor([3, 760567127],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), Tensor([3, 6, 3, 4, 2, 1],"int32"), axis=5, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), Tensor([3, 6, 3, 4, 1, 5],"int32"), axis=4, )
paddle.take_along_axis(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), Tensor([3, 6, 3, 1, 2, 5],"int32"), axis=3, )
paddle.take_along_axis(Tensor([3, 760567127],"float32"), Tensor([1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 760567127],"float32"), Tensor([1, 760567127],"float32"), 0, )
paddle.take_along_axis(Tensor([3, 760567127],"float32"), Tensor([1, 760567127],"int64"), 0, )
paddle.take_along_axis(Tensor([3, 760567127],"float32"), Tensor([1, 760567127],"int64"), 0, False, )
paddle.take_along_axis(Tensor([3, 760567127],"float32"), Tensor([3, 2],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([30, 5],"float32"), Tensor([30, 76056713],"int64"), axis=1, )
paddle.take_along_axis(Tensor([30, 76056713],"float32"), Tensor([30, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([357913942, 3, 4],"float16"), Tensor([1, 3, 4],"int32"), axis=0, )
paddle.take_along_axis(Tensor([38, 5],"float32"), Tensor([38, 60044774],"int64"), axis=1, )
paddle.take_along_axis(Tensor([38, 60044774],"float32"), Tensor([38, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([380283564, 3, 2],"float32"), Tensor([1, 3, 2],"int64"), axis=1, )
paddle.take_along_axis(Tensor([4, 1073741825],"float16"), Tensor([1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([4, 1073741825],"float16"), Tensor([1, 1],"int64"), 1, )
paddle.take_along_axis(Tensor([4, 1073741825],"float16"), Tensor([1, 570425345],"int64"), 1, )
paddle.take_along_axis(Tensor([4, 134217729, 4, 2],"float16"), Tensor([1, 1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([4, 178956971, 6],"float16"), Tensor([4, 1, 6],"int32"), axis=1, )
paddle.take_along_axis(Tensor([4, 268435457, 4],"float16"), Tensor([1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([4, 285212673, 2],"float32"), Tensor([1, 285212673, 2],"int64"), axis=1, )
paddle.take_along_axis(Tensor([4, 285212673, 2],"float32"), Tensor([1, 3, 2],"int64"), axis=1, )
paddle.take_along_axis(Tensor([4, 3, 190141782],"float32"), Tensor([1, 3, 190141782],"int64"), axis=1, )
paddle.take_along_axis(Tensor([4, 4, 134217729, 2],"float16"), Tensor([1, 1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([4, 4, 268435457],"float16"), Tensor([1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([4, 4, 4, 67108865],"float16"), Tensor([1, 1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([4, 7, 153391690],"float16"), Tensor([4, 7, 1],"int32"), axis=2, )
paddle.take_along_axis(Tensor([4294967297],"float16"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([4294967297],"float16"), Tensor([1],"int64"), 0, )
paddle.take_along_axis(Tensor([4294967297],"float16"), Tensor([2281701379],"int32"), axis=0, )
paddle.take_along_axis(Tensor([456340276, 5],"float32"), Tensor([1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([456340276, 5],"float32"), Tensor([456340276, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([456340276, 5],"float32"), Tensor([456340276, 2],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([456340276, 5],"float32"), Tensor([456340276, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([47159, 63, 768],"float32"), axis=1, indices=Tensor([47159, 7, 768],"int64"), )
paddle.take_along_axis(Tensor([477218589, 3, 3],"float16"), Tensor([1, 3, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([4],"float32"), Tensor([2281701379],"int64"), 0, )
paddle.take_along_axis(Tensor([5, 214748365, 4],"float16"), Tensor([5, 1, 4],"int32"), axis=1, )
paddle.take_along_axis(Tensor([52, 4, 7, 14],"float32"), axis=-1, indices=Tensor([52, 4, 7, 1567103],"int64"), )
paddle.take_along_axis(Tensor([52, 4, 7, 1567103],"float32"), axis=-1, indices=Tensor([52, 4, 7, 7],"int64"), )
paddle.take_along_axis(Tensor([52, 4, 783552, 14],"float32"), axis=-1, indices=Tensor([52, 4, 783552, 7],"int64"), )
paddle.take_along_axis(Tensor([52, 447744, 7, 14],"float32"), axis=-1, indices=Tensor([52, 447744, 7, 7],"int64"), )
paddle.take_along_axis(Tensor([5820667, 4, 7, 14],"float32"), axis=-1, indices=Tensor([5820667, 4, 7, 7],"int64"), )
paddle.take_along_axis(Tensor([66717, 8550, 4],"float32"), Tensor([1, 300, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([66717, 8550, 4],"float32"), Tensor([66717, 300, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([760567127, 3],"float32"), Tensor([1, 3],"float32"), 0, )
paddle.take_along_axis(Tensor([760567127, 3],"float32"), Tensor([1, 3],"int64"), 0, )
paddle.take_along_axis(Tensor([760567127, 3],"float32"), Tensor([1, 3],"int64"), 0, False, )
paddle.take_along_axis(Tensor([760567127, 3],"float32"), Tensor([760567127, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"int64"), 0, False, )
paddle.take_along_axis(Tensor([8, 371371, 768],"float32"), axis=1, indices=Tensor([8, 7, 768],"int64"), )
paddle.take_along_axis(Tensor([8, 63, 4527186],"float32"), axis=1, indices=Tensor([8, 7, 4527186],"int64"), )
paddle.take_along_axis(Tensor([8, 63, 768],"float32"), axis=1, indices=Tensor([8, 371371, 768],"int64"), )
paddle.take_along_axis(Tensor([858993460, 5],"float16"), Tensor([1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([89409, 6380, 4],"float32"), Tensor([1, 300, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([89409, 6380, 4],"float32"), Tensor([89409, 300, 4],"int64"), axis=1, )
paddle.tan(Tensor([10, 20, 11408507],"float32"), )
paddle.tan(Tensor([10, 228170138, 1],"float32"), )
paddle.tan(Tensor([100, 1, 11408507, 2],"float32"), )
paddle.tan(Tensor([100, 1, 2, 11408507],"float32"), )
paddle.tan(Tensor([100, 1, 22817014],"float32"), )
paddle.tan(Tensor([100, 11408507, 2],"float32"), )
paddle.tan(Tensor([100, 2, 11408507, 1],"float32"), )
paddle.tan(Tensor([100, 2, 11408507],"float32"), )
paddle.tan(Tensor([100, 2, 3, 3802836],"float32"), )
paddle.tan(Tensor([100, 22817014, 1],"float32"), )
paddle.tan(Tensor([100, 22817014],"float32"), )
paddle.tan(Tensor([100, 42949673],"float16"), )
paddle.tan(Tensor([100, 5704254, 2, 2],"float32"), )
paddle.tan(Tensor([100, 7605672, 3, 1],"float32"), )
paddle.tan(Tensor([100, 7605672, 3],"float32"), )
paddle.tan(Tensor([114085069, 20, 1],"float32"), )
paddle.tan(Tensor([1140850690, 1, 2],"float32"), )
paddle.tan(Tensor([1140850690, 2, 1],"float32"), )
paddle.tan(Tensor([1140850690, 2],"float32"), )
paddle.tan(Tensor([2281701379, 1],"float32"), )
paddle.tan(Tensor([2281701379],"float32"), )
paddle.tan(Tensor([380283564, 2, 3, 1],"float32"), )
paddle.tan(Tensor([380283564, 2, 3],"float32"), )
paddle.tan(Tensor([4294967297, 1],"float16"), )
paddle.tan(Tensor([4456449, 16, 32],"float32"), )
paddle.tan(Tensor([570425345, 1, 2, 2],"float32"), )
paddle.tan(Tensor([8, 16, 17825793],"float32"), )
paddle.tan(Tensor([8, 16, 33554433],"float16"), )
paddle.tan(Tensor([8, 16777217, 32],"float16"), )
paddle.tan(Tensor([8, 8912897, 32],"float32"), )
paddle.tan(Tensor([8388609, 16, 32],"float16"), )
paddle.tan(x=Tensor([253522376, 3, 3],"float32"), )
paddle.tan(x=Tensor([3, 253522376, 3],"float32"), )
paddle.tan(x=Tensor([3, 3, 253522376],"float32"), )
paddle.tan(x=Tensor([3, 3, 477218589],"float16"), )
paddle.tan(x=Tensor([3, 477218589, 3],"float16"), )
paddle.tan(x=Tensor([477218589, 3, 3],"float16"), )
paddle.tanh(Tensor([1, 1, 2281701379],"float32"), )
paddle.tanh(Tensor([1, 1273271, 1792],"float32"), )
paddle.tanh(Tensor([1, 17825793, 128],"float32"), )
paddle.tanh(Tensor([1, 20, 114085069],"float32"), )
paddle.tanh(Tensor([1, 2228225, 32, 32],"float32"), )
paddle.tanh(Tensor([1, 2281701379],"float32"), )
paddle.tanh(Tensor([1, 3, 23767723, 32],"float32"), )
paddle.tanh(Tensor([1, 3, 256, 2970966],"float32"), )
paddle.tanh(Tensor([1, 3, 2970966, 256],"float32"), )
paddle.tanh(Tensor([1, 3, 32, 23767723],"float32"), )
paddle.tanh(Tensor([1, 34817, 256, 256],"float32"), )
paddle.tanh(Tensor([1, 35651585, 64],"float32"), )
paddle.tanh(Tensor([1, 4294967297],"float16"), )
paddle.tanh(Tensor([1, 58, 39339679],"float32"), )
paddle.tanh(Tensor([1, 61667605, 37],"float32"), )
paddle.tanh(Tensor([1, 7, 325957340],"float32"), )
paddle.tanh(Tensor([10, 20, 11408507],"float32"), )
paddle.tanh(Tensor([10, 228170138, 1],"float32"), )
paddle.tanh(Tensor([10, 228170138],"float32"), )
paddle.tanh(Tensor([100, 22817014],"float32"), )
paddle.tanh(Tensor([10186167, 7, 32],"float32"), )
paddle.tanh(Tensor([114085069, 20, 1],"float32"), )
paddle.tanh(Tensor([1140850690, 2],"float32"), )
paddle.tanh(Tensor([11606, 3, 256, 256],"float32"), )
paddle.tanh(Tensor([12, 190141782],"float32"), )
paddle.tanh(Tensor([1228, 32, 241, 241],"float32"), )
paddle.tanh(Tensor([1242, 1837119],"float32"), )
paddle.tanh(Tensor([1273271, 1, 1792],"float32"), )
paddle.tanh(Tensor([13, 1, 175515491],"float32"), )
paddle.tanh(Tensor([13, 10, 17551550],"float32"), )
paddle.tanh(Tensor([13, 175515491],"float32"), )
paddle.tanh(Tensor([13, 2, 87757746],"float32"), )
paddle.tanh(Tensor([13, 2742430, 64],"float32"), )
paddle.tanh(Tensor([13, 3, 58505164],"float32"), )
paddle.tanh(Tensor([13, 4, 43878873],"float32"), )
paddle.tanh(Tensor([13, 4743662, 37],"float32"), )
paddle.tanh(Tensor([13, 5484860, 32],"float32"), )
paddle.tanh(Tensor([13, 7, 25073642],"float32"), )
paddle.tanh(Tensor([13, 8, 21939437],"float32"), )
paddle.tanh(Tensor([13, 9, 19501722],"float32"), )
paddle.tanh(Tensor([134217729, 32],"float16"), )
paddle.tanh(Tensor([14, 1, 162978670],"float32"), )
paddle.tanh(Tensor([14, 10, 16297867],"float32"), )
paddle.tanh(Tensor([14, 1273271, 128],"float32"), )
paddle.tanh(Tensor([142606337, 16],"float32"), )
paddle.tanh(Tensor([1431655766, 3],"float16"), )
paddle.tanh(Tensor([15, 152113426],"float32"), )
paddle.tanh(Tensor([16, 142606337],"float32"), )
paddle.tanh(Tensor([17825793, 1, 128],"float32"), )
paddle.tanh(Tensor([17825793, 4, 32],"float32"), )
paddle.tanh(Tensor([1782580, 10, 128],"float32"), )
paddle.tanh(Tensor([18211, 125293],"float32"), )
paddle.tanh(Tensor([2, 1114113, 32, 32],"float32"), )
paddle.tanh(Tensor([2, 1140850690],"float32"), )
paddle.tanh(Tensor([2, 17825793, 8, 8],"float32"), )
paddle.tanh(Tensor([2, 3, 11883862, 32],"float32"), )
paddle.tanh(Tensor([2, 3, 3, 126761188],"float32"), )
paddle.tanh(Tensor([2, 3, 32, 11883862],"float32"), )
paddle.tanh(Tensor([2, 3, 95070891, 4],"float32"), )
paddle.tanh(Tensor([2, 4, 35651585, 8],"float32"), )
paddle.tanh(Tensor([2, 4, 8, 35651585],"float32"), )
paddle.tanh(Tensor([2, 95070891, 3, 4],"float32"), )
paddle.tanh(Tensor([20555869, 3, 37],"float32"), )
paddle.tanh(Tensor([2281701379, 1],"float32"), )
paddle.tanh(Tensor([2281701379],"float32"), )
paddle.tanh(Tensor([228170138, 10],"float32"), )
paddle.tanh(Tensor([325957340, 7],"float32"), )
paddle.tanh(Tensor([35651585, 2, 32],"float32"), )
paddle.tanh(Tensor([3869, 144, 64, 64],"float32"), )
paddle.tanh(Tensor([4, 139265, 64, 64],"float32"), )
paddle.tanh(Tensor([4, 144, 61896, 64],"float32"), )
paddle.tanh(Tensor([4, 144, 64, 61896],"float32"), )
paddle.tanh(Tensor([4, 72, 123791, 64],"float32"), )
paddle.tanh(Tensor([4, 72, 64, 123791],"float32"), )
paddle.tanh(Tensor([4286, 26, 512, 1, 40],"float32"), )
paddle.tanh(Tensor([4294967297],"float16"), )
paddle.tanh(Tensor([5093084, 7, 64],"float32"), )
paddle.tanh(Tensor([570425345, 4],"float32"), )
paddle.tanh(Tensor([613566757, 7],"float16"), )
paddle.tanh(Tensor([614683, 58, 64],"float32"), )
paddle.tanh(Tensor([61667605, 1, 37],"float32"), )
paddle.tanh(Tensor([6166761, 10, 37],"float32"), )
paddle.tanh(Tensor([63380594, 3, 3, 4],"float32"), )
paddle.tanh(Tensor([64, 1741, 512, 1, 40],"float32"), )
paddle.tanh(Tensor([64, 26, 34281, 1, 40],"float32"), )
paddle.tanh(Tensor([64, 26, 512, 1, 2679],"float32"), )
paddle.tanh(Tensor([64, 26, 512, 67, 40],"float32"), )
paddle.tanh(Tensor([6851957, 9, 37],"float32"), )
paddle.tanh(Tensor([71303169, 32],"float32"), )
paddle.tanh(Tensor([742742, 3, 32, 32],"float32"), )
paddle.tanh(Tensor([760567127, 3],"float32"), )
paddle.tanh(Tensor([76056713, 30],"float32"), )
paddle.tanh(Tensor([7708451, 8, 37],"float32"), )
paddle.tanh(Tensor([7737, 72, 64, 64],"float32"), )
paddle.tanh(Tensor([8, 13927, 512, 1, 40],"float32"), )
paddle.tanh(Tensor([8, 26, 274243, 1, 40],"float32"), )
paddle.tanh(Tensor([8, 26, 512, 1, 21426],"float32"), )
paddle.tanh(Tensor([8, 26, 512, 536, 40],"float32"), )
paddle.tanh(Tensor([8, 32, 241, 36983],"float32"), )
paddle.tanh(Tensor([8, 32, 36983, 241],"float32"), )
paddle.tanh(Tensor([8, 4911, 241, 241],"float32"), )
paddle.tanh(Tensor([8809658, 7, 37],"float32"), )
paddle.tanh(Tensor([8912897, 4, 8, 8],"float32"), )
paddle.tanh(Tensor([8912897, 8, 32],"float32"), )
paddle.tanh(Tensor([891290, 20, 128],"float32"), )
paddle.tanh(x=Tensor([2, 142606337, 8],"float32"), )
paddle.tanh(x=Tensor([2, 3, 715827883],"float16"), )
paddle.tanh(x=Tensor([2, 3, 715827883],"float16"), name="test name", )
paddle.tanh(x=Tensor([2, 536870913, 4],"float16"), )
paddle.tanh(x=Tensor([2, 536870913, 4],"float16"), name="test name", )
paddle.tanh(x=Tensor([2, 8, 142606337],"float32"), )
paddle.tanh(x=Tensor([2281701379],"float32"), )
paddle.tanh(x=Tensor([3, 1431655766],"float16"), )
paddle.tanh(x=Tensor([3, 3, 477218589],"float16"), )
paddle.tanh(x=Tensor([3, 477218589, 3],"float16"), )
paddle.tanh(x=Tensor([35651585, 8, 8],"float32"), )
paddle.tanh(x=Tensor([357913942, 3, 4],"float16"), )
paddle.tanh(x=Tensor([357913942, 3, 4],"float16"), name="test name", )
paddle.tanh(x=Tensor([4294967297],"float16"), )
paddle.tanh(x=Tensor([477218589, 3, 3],"float16"), )
paddle.tanh(x=Tensor([858993460, 5],"float16"), )
paddle.tensor_split(Tensor([190141782, 4, 3],"int64"), list[2,3,], )
paddle.tensor_split(Tensor([190141782, 4, 3],"int64"), list[2,4,6,], )
paddle.tensor_split(Tensor([190141782, 4, 3],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([190141782, 4, 3],"int64"), tuple(2,6,), )
paddle.tensor_split(Tensor([20372334, 4, 4, 7],"int64"), list[2,3,], axis=3, )
paddle.tensor_split(Tensor([20372334, 4, 4, 7],"int64"), list[2,4,6,], axis=3, )
paddle.tensor_split(Tensor([20372334, 4, 4, 7],"int64"), tuple(2,6,), axis=3, )
paddle.tensor_split(Tensor([20372334, 4, 7, 4],"int64"), list[2,3,], axis=-2, )
paddle.tensor_split(Tensor([20372334, 4, 7, 4],"int64"), list[2,4,6,], axis=-2, )
paddle.tensor_split(Tensor([20372334, 4, 7, 4],"int64"), tuple(2,6,), axis=-2, )
paddle.tensor_split(Tensor([2281701379],"int64"), list[2,1,3,], axis=0, )
paddle.tensor_split(Tensor([2281701379],"int64"), list[2,3,16,], axis=0, )
paddle.tensor_split(Tensor([2281701379],"int64"), list[2,3,], )
paddle.tensor_split(Tensor([2281701379],"int64"), list[2,3,], axis=0, )
paddle.tensor_split(Tensor([2281701379],"int64"), list[2,4,5,], )
paddle.tensor_split(Tensor([2281701379],"int64"), list[2,4,6,], )
paddle.tensor_split(Tensor([2281701379],"int64"), list[2,4,6,], axis=0, )
paddle.tensor_split(Tensor([2281701379],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([2281701379],"int64"), list[3,-1,16,], axis=0, )
paddle.tensor_split(Tensor([2281701379],"int64"), list[3,-1,5,2,16,], axis=0, )
paddle.tensor_split(Tensor([2281701379],"int64"), tuple(2,5,), )
paddle.tensor_split(Tensor([2281701379],"int64"), tuple(2,6,), )
paddle.tensor_split(Tensor([2281701379],"int64"), tuple(2,6,), axis=0, )
paddle.tensor_split(Tensor([325957340, 7],"int64"), list[2,3,], axis=1, )
paddle.tensor_split(Tensor([325957340, 7],"int64"), list[2,4,6,], axis=1, )
paddle.tensor_split(Tensor([325957340, 7],"int64"), tuple(2,6,), axis=1, )
paddle.tensor_split(Tensor([4, 20372334, 4, 7],"int64"), list[2,3,], axis=3, )
paddle.tensor_split(Tensor([4, 20372334, 4, 7],"int64"), list[2,4,6,], axis=3, )
paddle.tensor_split(Tensor([4, 20372334, 4, 7],"int64"), tuple(2,6,), axis=3, )
paddle.tensor_split(Tensor([4, 20372334, 7, 4],"int64"), list[2,3,], axis=-2, )
paddle.tensor_split(Tensor([4, 20372334, 7, 4],"int64"), list[2,4,6,], axis=-2, )
paddle.tensor_split(Tensor([4, 20372334, 7, 4],"int64"), tuple(2,6,), axis=-2, )
paddle.tensor_split(Tensor([4, 4, 142606337],"int64"), list[2,3,], axis=2, )
paddle.tensor_split(Tensor([4, 4, 142606337],"int64"), list[2,4,6,], axis=2, )
paddle.tensor_split(Tensor([4, 4, 142606337],"int64"), tuple(2,6,), axis=2, )
paddle.tensor_split(Tensor([4, 4, 20372334, 7],"int64"), list[2,3,], axis=3, )
paddle.tensor_split(Tensor([4, 4, 20372334, 7],"int64"), list[2,4,6,], axis=3, )
paddle.tensor_split(Tensor([4, 4, 20372334, 7],"int64"), tuple(2,6,), axis=3, )
paddle.tensor_split(Tensor([4, 4, 35651585, 4],"int64"), list[2,3,], axis=-2, )
paddle.tensor_split(Tensor([4, 4, 35651585, 4],"int64"), list[2,4,6,], axis=-2, )
paddle.tensor_split(Tensor([4, 4, 35651585, 4],"int64"), tuple(2,6,), axis=-2, )
paddle.tensor_split(Tensor([4, 4, 4, 35651585],"int64"), list[2,3,], axis=3, )
paddle.tensor_split(Tensor([4, 4, 4, 35651585],"int64"), list[2,4,6,], axis=3, )
paddle.tensor_split(Tensor([4, 4, 4, 35651585],"int64"), tuple(2,6,), axis=3, )
paddle.tensor_split(Tensor([4, 4, 7, 20372334],"int64"), list[2,3,], axis=-2, )
paddle.tensor_split(Tensor([4, 4, 7, 20372334],"int64"), list[2,4,6,], axis=-2, )
paddle.tensor_split(Tensor([4, 4, 7, 20372334],"int64"), tuple(2,6,), axis=-2, )
paddle.tensor_split(Tensor([4, 570425345],"int64"), list[2,3,], axis=1, )
paddle.tensor_split(Tensor([4, 570425345],"int64"), list[2,4,6,], axis=1, )
paddle.tensor_split(Tensor([4, 570425345],"int64"), tuple(2,6,), axis=1, )
paddle.tensor_split(Tensor([4, 81489335, 7],"int64"), list[2,3,], axis=2, )
paddle.tensor_split(Tensor([4, 81489335, 7],"int64"), list[2,4,6,], axis=2, )
paddle.tensor_split(Tensor([4, 81489335, 7],"int64"), tuple(2,6,), axis=2, )
paddle.tensor_split(Tensor([570425345, 4],"int64"), list[2,3,], )
paddle.tensor_split(Tensor([570425345, 4],"int64"), list[2,4,6,], )
paddle.tensor_split(Tensor([570425345, 4],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([570425345, 4],"int64"), tuple(2,6,), )
paddle.tensor_split(Tensor([7, 108652447, 3],"int64"), list[2,3,], )
paddle.tensor_split(Tensor([7, 108652447, 3],"int64"), list[2,4,6,], )
paddle.tensor_split(Tensor([7, 108652447, 3],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([7, 108652447, 3],"int64"), tuple(2,6,), )
paddle.tensor_split(Tensor([7, 325957340],"int64"), list[2,3,], )
paddle.tensor_split(Tensor([7, 325957340],"int64"), list[2,4,6,], )
paddle.tensor_split(Tensor([7, 325957340],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([7, 325957340],"int64"), tuple(2,6,), )
paddle.tensor_split(Tensor([7, 4, 81489335],"int64"), list[2,3,], )
paddle.tensor_split(Tensor([7, 4, 81489335],"int64"), list[2,4,6,], )
paddle.tensor_split(Tensor([7, 4, 81489335],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([7, 4, 81489335],"int64"), tuple(2,6,), )
paddle.tensor_split(Tensor([81489335, 4, 7],"int64"), list[2,3,], axis=2, )
paddle.tensor_split(Tensor([81489335, 4, 7],"int64"), list[2,4,6,], axis=2, )
paddle.tensor_split(Tensor([81489335, 4, 7],"int64"), tuple(2,6,), axis=2, )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[3,0,], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[0,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[3,0,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[3,0,], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[3,0,], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), 1, )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), 2, )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([2, 2],"int64"), )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), list[1,], )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), list[list[1,2,],list[0,1,],], )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(1,), )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(Tensor([2],"int64"),Tensor([2],"int64"),), )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(list[1,2,],list[0,1,],), )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(list[1,],), )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(tuple(1,),), )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(tuple(1,2,),tuple(0,1,),), )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(tuple(2,1,),tuple(0,),), )
paddle.tensordot(Tensor([3, 190141782, 4],"float32"), Tensor([4, 190141782, 5],"float32"), list[1,], )
paddle.tensordot(Tensor([3, 190141782, 4],"float32"), Tensor([4, 190141782, 5],"float32"), tuple(1,), )
paddle.tensordot(Tensor([3, 190141782, 4],"float32"), Tensor([4, 190141782, 5],"float32"), tuple(list[1,],), )
paddle.tensordot(Tensor([3, 190141782, 4],"float32"), Tensor([4, 190141782, 5],"float32"), tuple(tuple(1,),), )
paddle.tensordot(Tensor([3, 190141782, 4],"float32"), Tensor([4, 190141782, 5],"float32"), tuple(tuple(2,1,),tuple(0,),), )
paddle.tensordot(Tensor([3, 190141782, 4],"float32"), Tensor([4, 4, 5],"float32"), 1, )
paddle.tensordot(Tensor([3, 4, 190141782],"float32"), Tensor([4, 4, 5],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 190141782],"float32"), Tensor([4, 4, 5],"float32"), list[1,], )
paddle.tensordot(Tensor([3, 4, 190141782],"float32"), Tensor([4, 4, 5],"float32"), tuple(1,), )
paddle.tensordot(Tensor([3, 4, 190141782],"float32"), Tensor([4, 4, 5],"float32"), tuple(list[1,],), )
paddle.tensordot(Tensor([3, 4, 190141782],"float32"), Tensor([4, 4, 5],"float32"), tuple(tuple(1,),), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([114085069, 4, 5],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([114085069, 4, 5],"float32"), list[1,], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([114085069, 4, 5],"float32"), tuple(1,), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([114085069, 4, 5],"float32"), tuple(list[1,],), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([114085069, 4, 5],"float32"), tuple(tuple(1,),), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 114085069, 5],"float32"), 1, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), 1, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), 2, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), Tensor([2, 2],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), list[1,], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), list[list[1,2,],list[0,1,],], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), tuple(1,), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), tuple(Tensor([2],"int64"),Tensor([2],"int64"),), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), tuple(list[1,2,],list[0,1,],), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), tuple(list[1,],), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), tuple(tuple(1,),), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), tuple(tuple(1,2,),tuple(0,1,),), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), tuple(tuple(2,1,),tuple(0,),), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([1140850690, 2],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([2281701379],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(Tensor([2],"int64"),Tensor([2281701379],"int64"),), )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[0,], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[3,0,], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[3,1,2,], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,],list[],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,],list[],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[],list[0,3,1,],], )
paddle.tensordot(x=Tensor([119304648, 3, 3, 4],"float16"), y=Tensor([3, 4, 3, 4],"float16"), )
paddle.tensordot(x=Tensor([178956971, 3, 4, 2],"float16"), y=Tensor([8, 7, 4, 2],"float16"), axes=list[2,3,], )
paddle.tensordot(x=Tensor([2, 143165577, 3, 5],"float16"), y=Tensor([2, 4, 1, 5],"float16"), axes=list[0,2,], )
paddle.tensordot(x=Tensor([2, 178956971, 3, 4],"float16"), y=Tensor([3, 4, 3, 4],"float16"), )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float16"), y=Tensor([3, 4, 3, 119304648],"float16"), )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float16"), y=Tensor([3, 4, 89478486, 4],"float16"), )
paddle.tensordot(x=Tensor([2, 3, 4, 2],"float16"), y=Tensor([2, 3, 102261127, 7],"float16"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([2, 3, 4, 2],"float16"), y=Tensor([2, 3, 8, 89478486],"float16"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([2, 3, 4, 2],"float16"), y=Tensor([76695845, 7, 4, 2],"float16"), axes=list[2,3,], )
paddle.tensordot(x=Tensor([2, 3, 4, 2],"float16"), y=Tensor([8, 67108865, 4, 2],"float16"), axes=list[2,3,], )
paddle.tensordot(x=Tensor([2, 4, 107374183, 5],"float16"), y=Tensor([2, 4, 1, 5],"float16"), axes=list[0,2,], )
paddle.tensordot(x=Tensor([2, 4, 107374183, 5],"float16"), y=Tensor([2, 4, 107374183, 5],"float16"), axes=list[0,2,], )
paddle.tensordot(x=Tensor([2, 4, 3, 178956971],"float16"), y=Tensor([2, 4, 1, 5],"float16"), axes=list[0,2,], )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float16"), y=Tensor([7, 76695845, 4, 2],"float16"), axes=list[tuple(1,2,3,),tuple(0,2,3,),], )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float16"), y=Tensor([7, 76695845, 4, 2],"float16"), axes=tuple(list[1,2,3,],list[0,2,3,],), )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float16"), y=Tensor([7, 76695845, 4, 2],"float16"), axes=tuple(list[1,2,3,],list[0,2,3,],list[4,5,6,],), )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float16"), y=Tensor([76695845, 7, 4, 2],"float16"), axes=list[tuple(1,2,3,),], )
paddle.tensordot(x=Tensor([286331154, 3, 5],"float16"), y=Tensor([286331154, 1, 8],"float16"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([4, 2, 3, 5, 35791395],"float16"), y=Tensor([2, 4, 3, 5, 8],"float16"), axes=list[list[0,1,2,3,],list[1,0,],], )
paddle.tensordot(x=Tensor([4, 2, 3, 5, 4],"float16"), y=Tensor([2, 4, 3, 5, 35791395],"float16"), axes=list[list[0,1,2,3,],list[1,0,],], )
paddle.tensordot(x=Tensor([4, 214748365, 5],"float16"), y=Tensor([4, 1, 8],"float16"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([4, 3, 357913942],"float16"), y=Tensor([4, 1, 8],"float16"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([4, 3, 5],"float16"), y=Tensor([4, 1, 1073741825],"float16"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([71582789, 4, 3, 5],"float16"), y=Tensor([71582789, 4, 1, 5],"float16"), axes=list[0,2,], )
paddle.tensordot(x=Tensor([76695845, 7, 4, 2],"float16"), y=Tensor([7, 7, 4, 2],"float16"), axes=list[tuple(1,2,3,),tuple(0,2,3,),], )
paddle.tensordot(x=Tensor([76695845, 7, 4, 2],"float16"), y=Tensor([7, 7, 4, 2],"float16"), axes=tuple(list[1,2,3,],list[0,2,3,],), )
paddle.tensordot(x=Tensor([76695845, 7, 4, 2],"float16"), y=Tensor([7, 7, 4, 2],"float16"), axes=tuple(list[1,2,3,],list[0,2,3,],list[4,5,6,],), )
paddle.tensordot(x=Tensor([76695845, 7, 4, 2],"float16"), y=Tensor([8, 7, 4, 2],"float16"), axes=list[tuple(1,2,3,),], )
paddle.tile(Tensor([1, 1, 13, 175515491],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1, 175515491, 13],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1, 2281701379],"int64"), list[1,1,1,], )
paddle.tile(Tensor([1, 1, 29, 78679358],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1, 456340276, 5],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1, 5, 456340276],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1, 78679358, 29],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1140850690, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([1, 13501192, 13, 13],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 192, 11883862],"float32"), list[1,1,2,], )
paddle.tile(Tensor([1, 196, 11641334],"float32"), list[1,1,2,], )
paddle.tile(Tensor([1, 200, 11408507],"float32"), list[1,1,2,], )
paddle.tile(Tensor([1, 2281701379, 1],"int64"), list[1,1,1,], )
paddle.tile(Tensor([1, 2713082, 29, 29],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 91268056, 5, 5],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([101862, 22400, 1],"bool"), list[1,1,4,], )
paddle.tile(Tensor([13, 1, 175515491],"float32"), list[1,1,4,], )
paddle.tile(Tensor([13, 5484860, 32],"float32"), list[1,1,4,], )
paddle.tile(Tensor([13501192, 1, 13, 13],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([16, 176, 810264],"float32"), list[1,1,2,], )
paddle.tile(Tensor([16, 71303169, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([162978670, 14, 1],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([1960, 1164134],"bool"), list[1,24,], )
paddle.tile(Tensor([2, 1140850690],"int64"), list[1,2,], )
paddle.tile(Tensor([2, 192, 5941931],"float32"), list[1,1,2,], )
paddle.tile(Tensor([2, 198, 5761873],"float32"), list[1,1,2,], )
paddle.tile(Tensor([2, 200, 5704254],"float32"), list[1,1,2,], )
paddle.tile(Tensor([2, 570425345, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([216, 248, 1, 1, 42595],"float32"), list[1,1,1,1,1,], )
paddle.tile(Tensor([216, 248, 1, 21298, 2],"float32"), list[1,1,1,1,1,], )
paddle.tile(Tensor([216, 248, 21298, 1, 2],"float32"), list[1,1,1,1,1,], )
paddle.tile(Tensor([216, 5281717, 1, 1, 2],"float32"), list[1,1,1,1,1,], )
paddle.tile(Tensor([2281701379, 1, 1],"int64"), list[1,1,1,], )
paddle.tile(Tensor([2281701379],"int64"), repeat_times=list[1,1,], )
paddle.tile(Tensor([2713082, 1, 29, 29],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([325957340, 7, 1],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([364, 6268411, 1],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([364, 7, 895488],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([4, 200, 2852127],"float32"), list[1,1,2,], )
paddle.tile(Tensor([4, 22400, 25466],"bool"), list[1,1,4,], )
paddle.tile(Tensor([4, 285212673, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([4, 570425345, 1],"bool"), list[1,1,4,], )
paddle.tile(Tensor([4, 570425345],"float32"), repeat_times=list[1,4,], )
paddle.tile(Tensor([4600205, 248, 1, 1, 2],"float32"), list[1,1,1,1,1,], )
paddle.tile(Tensor([5, 456340276],"float32"), list[1,5,], )
paddle.tile(Tensor([5704254, 200, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([5761873, 198, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([5820667, 196, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([5941931, 192, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([6482107, 176, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([71303169, 1, 32],"float32"), list[1,1,4,], )
paddle.tile(Tensor([728, 14, 223872],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([728, 3134206, 1],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([8, 142606337, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([8, 200, 1426064],"float32"), list[1,1,2,], )
paddle.tile(Tensor([91268056, 1, 5, 5],"float32"), list[3,1,1,1,], )
paddle.tolist(Tensor([2, 1140850690],"float32"), )
paddle.tolist(Tensor([2, 1140850690],"int64"), )
paddle.topk(Tensor([1, 1, 2281701379],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 1, 2281701379],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 19501722, 117],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 1973791, 1156],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 21126865, 108],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 2281701379],"float32"), 300, axis=1, )
paddle.topk(Tensor([1, 2281701379],"float32"), 4, axis=1, )
paddle.topk(Tensor([1, 2281701379],"float32"), 799, )
paddle.topk(Tensor([1, 2281701379],"float32"), 8, axis=1, )
paddle.topk(Tensor([1, 2281701379],"float32"), 900, axis=1, )
paddle.topk(Tensor([1, 2281701379],"float32"), 9408, axis=1, )
paddle.topk(Tensor([1, 2281701379],"float32"), k=1, )
paddle.topk(Tensor([1, 2281701379],"float32"), k=5, )
paddle.topk(Tensor([1, 2281701379],"float32"), k=50, )
paddle.topk(Tensor([1, 22817014, 100],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 4294967297],"float16"), k=5, )
paddle.topk(Tensor([1, 61595, 37044],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 67908, 33600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 75245, 30324],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 83837, 27216],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 93991, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([10, 228170138],"float32"), 2, axis=-1, )
paddle.topk(Tensor([10, 228170138],"float32"), 799, )
paddle.topk(Tensor([10, 228170138],"float32"), k=4, axis=-1, sorted=True, )
paddle.topk(Tensor([100, 22817014],"float32"), 10, axis=0, )
paddle.topk(Tensor([1000, 2281702],"float32"), 10, axis=0, )
paddle.topk(Tensor([1073741825, 4],"float16"), 2, axis=0, largest=False, )
paddle.topk(Tensor([1073741825, 4],"float16"), 3, axis=0, largest=False, )
paddle.topk(Tensor([1073741825, 4],"float16"), k=1, axis=-1, )
paddle.topk(Tensor([10737419, 400],"float16"), k=1, )
paddle.topk(Tensor([10737419, 400],"float16"), k=5, )
paddle.topk(Tensor([1140850690, 2],"float32"), 10, axis=0, )
paddle.topk(Tensor([11408507, 200],"float32"), 4, axis=1, )
paddle.topk(Tensor([11523745, 198],"float32"), 4, axis=1, )
paddle.topk(Tensor([11661, 195670],"float32"), k=3, largest=True, )
paddle.topk(Tensor([124, 18400818],"float32"), k=1, )
paddle.topk(Tensor([124, 18400818],"float32"), k=5, )
paddle.topk(Tensor([128, 17825793],"float32"), k=1, )
paddle.topk(Tensor([128, 17825793],"float32"), k=5, )
paddle.topk(Tensor([128, 33554433],"float16"), k=1, )
paddle.topk(Tensor([130, 17551550],"float32"), 2, axis=-1, )
paddle.topk(Tensor([13091, 174296],"float32"), 2, axis=-1, )
paddle.topk(Tensor([142606337, 16],"float32"), 10, axis=0, )
paddle.topk(Tensor([142606337, 16],"float32"), 2, axis=-1, )
paddle.topk(Tensor([142606337, 4, 4],"float32"), 3, axis=0, largest=False, )
paddle.topk(Tensor([1680193, 1358],"float32"), k=3, largest=True, )
paddle.topk(Tensor([17826, 128000],"float32"), 8, axis=1, )
paddle.topk(Tensor([182, 12536821],"float32"), 2, axis=-1, )
paddle.topk(Tensor([18550418, 123],"float32"), 2, axis=1, )
paddle.topk(Tensor([188633, 12096],"float32"), 300, axis=1, )
paddle.topk(Tensor([190141782, 12],"float32"), 10, axis=0, )
paddle.topk(Tensor([19501722, 1, 117],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([195939, 11645],"float32"), 900, axis=1, )
paddle.topk(Tensor([1973791, 1, 1156],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 1140850690],"float32"), 2, axis=-1, )
paddle.topk(Tensor([2, 1140850690],"float32"), 2, axis=1, )
paddle.topk(Tensor([2, 1140850690],"float32"), 300, axis=-1, )
paddle.topk(Tensor([2, 1140850690],"float32"), 4, axis=1, )
paddle.topk(Tensor([2, 1140850690],"float32"), 51, axis=1, largest=False, )
paddle.topk(Tensor([2, 1140850690],"float32"), 799, )
paddle.topk(Tensor([2, 1140850690],"float32"), 900, axis=1, )
paddle.topk(Tensor([2, 1140850690],"float32"), k=1, axis=-1, )
paddle.topk(Tensor([2, 1140850690],"float32"), k=4, axis=-1, sorted=True, )
paddle.topk(Tensor([2, 1140850690],"int32"), k=1, axis=-1, )
paddle.topk(Tensor([2, 1140850690],"int64"), k=1, axis=-1, )
paddle.topk(Tensor([2, 2, 570425345],"int32"), k=1, axis=-1, )
paddle.topk(Tensor([2, 2, 570425345],"int64"), k=1, axis=2, )
paddle.topk(Tensor([2, 2147483649],"float16"), k=1, axis=-1, )
paddle.topk(Tensor([2, 285212673, 4],"int32"), k=1, axis=-1, )
paddle.topk(Tensor([2, 285212673, 4],"int64"), k=1, axis=2, )
paddle.topk(Tensor([20, 114085069],"float32"), k=4, axis=-1, sorted=True, )
paddle.topk(Tensor([205393, 11109],"float32"), 300, axis=1, )
paddle.topk(Tensor([21126865, 1, 108],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2206675, 1034],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2213096, 1031],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2228225, 1, 1024],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([22369622, 102],"float32"), k=1, )
paddle.topk(Tensor([22369622, 102],"float32"), k=5, )
paddle.topk(Tensor([224489, 10164],"float32"), 300, axis=1, )
paddle.topk(Tensor([2272611, 1004],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2277148, 1002],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2279422, 1001],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2281701379, 1],"float32"), 10, axis=0, )
paddle.topk(Tensor([2281701379],"float32"), 1, axis=0, largest=False, )
paddle.topk(Tensor([2281701379],"float32"), 10, )
paddle.topk(Tensor([2281701379],"float32"), 100, )
paddle.topk(Tensor([2281701379],"float32"), 1000, )
paddle.topk(Tensor([2281701379],"float32"), 11, axis=0, largest=False, )
paddle.topk(Tensor([2281701379],"float32"), 13, axis=0, largest=False, )
paddle.topk(Tensor([2281701379],"float32"), 20, )
paddle.topk(Tensor([2281701379],"float32"), 2000, )
paddle.topk(Tensor([2281701379],"float32"), 21, axis=0, largest=False, )
paddle.topk(Tensor([2281701379],"float32"), 3, axis=0, largest=False, )
paddle.topk(Tensor([2281701379],"float32"), 600, )
paddle.topk(Tensor([2281701379],"float32"), 7, axis=0, largest=False, )
paddle.topk(Tensor([2281701379],"float32"), 8, axis=0, largest=False, )
paddle.topk(Tensor([2281701379],"float32"), k=1, )
paddle.topk(Tensor([2281701379],"float32"), k=6, )
paddle.topk(Tensor([2281701379],"int32"), 13, axis=0, largest=False, )
paddle.topk(Tensor([2281701379],"int32"), 21, axis=0, largest=False, )
paddle.topk(Tensor([2281701379],"int64"), 13, axis=0, largest=False, )
paddle.topk(Tensor([2281701379],"int64"), 21, axis=0, largest=False, )
paddle.topk(Tensor([228170138, 10],"float32"), 10, axis=0, )
paddle.topk(Tensor([228170138, 10],"float32"), 6, axis=1, largest=False, )
paddle.topk(Tensor([22817014, 1, 100],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([22817014, 100],"float32"), 2, axis=1, )
paddle.topk(Tensor([22817014, 100],"float32"), 51, axis=1, largest=False, )
paddle.topk(Tensor([2281702, 1000],"float32"), k=1, )
paddle.topk(Tensor([2281702, 1000],"float32"), k=5, )
paddle.topk(Tensor([285212673, 2, 4],"int32"), k=1, axis=-1, )
paddle.topk(Tensor([285212673, 2, 4],"int64"), k=1, axis=2, )
paddle.topk(Tensor([285212673, 4, 2],"float32"), 2, axis=0, largest=False, )
paddle.topk(Tensor([285212673, 4, 2],"int32"), 2, axis=0, largest=False, )
paddle.topk(Tensor([285212673, 4, 2],"int64"), 2, axis=0, largest=False, )
paddle.topk(Tensor([285212673, 8],"float32"), 2, axis=-1, )
paddle.topk(Tensor([285213, 8000],"float32"), 799, )
paddle.topk(Tensor([3, 1431655766],"float16"), 3, axis=1, largest=False, )
paddle.topk(Tensor([3, 380283564, 2],"float32"), 3, axis=1, largest=False, )
paddle.topk(Tensor([3, 380283564, 2],"int32"), 3, axis=1, largest=False, )
paddle.topk(Tensor([3, 380283564, 2],"int64"), 3, axis=1, largest=False, )
paddle.topk(Tensor([3, 4, 190141782],"float32"), 2, axis=2, largest=False, )
paddle.topk(Tensor([3, 4, 190141782],"int32"), 2, axis=2, largest=False, )
paddle.topk(Tensor([3, 4, 190141782],"int64"), 2, axis=2, largest=False, )
paddle.topk(Tensor([3, 4, 357913942],"float16"), 2, axis=2, largest=False, )
paddle.topk(Tensor([3, 715827883, 2],"float16"), 3, axis=1, largest=False, )
paddle.topk(Tensor([3, 760567127],"float32"), 3, axis=1, largest=False, )
paddle.topk(Tensor([3, 760567127],"float32"), 6, axis=1, largest=False, )
paddle.topk(Tensor([3, 760567127],"float32"), 799, )
paddle.topk(Tensor([30, 76056713],"float32"), k=4, axis=-1, sorted=True, )
paddle.topk(Tensor([3029, 753286],"float32"), k=3, largest=True, )
paddle.topk(Tensor([335348, 6804],"float32"), 300, axis=1, )
paddle.topk(Tensor([35652, 64000],"float32"), 4, axis=1, )
paddle.topk(Tensor([357634, 6380],"float32"), 300, axis=1, )
paddle.topk(Tensor([38028357, 60],"float32"), k=4, axis=-1, sorted=True, )
paddle.topk(Tensor([3887, 587009],"float32"), k=3, largest=True, )
paddle.topk(Tensor([390451573, 11],"float16"), k=Tensor([1],"int64"), )
paddle.topk(Tensor([4, 142606337, 4],"float32"), 3, axis=1, largest=False, )
paddle.topk(Tensor([4, 570425345],"float32"), 300, axis=-1, )
paddle.topk(Tensor([4, 570425345],"float32"), 799, )
paddle.topk(Tensor([4, 570425345],"float32"), k=4, axis=-1, sorted=True, )
paddle.topk(Tensor([4169872, 1030],"float16"), k=1, axis=-1, )
paddle.topk(Tensor([4294967297],"float16"), 11, axis=0, largest=False, )
paddle.topk(Tensor([4294967297],"float16"), 21, axis=0, largest=False, )
paddle.topk(Tensor([4294968, 1000],"float16"), k=1, )
paddle.topk(Tensor([4456449, 512],"float32"), 4, axis=1, )
paddle.topk(Tensor([45359, 50304],"float32"), k=50, )
paddle.topk(Tensor([4981881, 458],"float32"), k=3, largest=True, )
paddle.topk(Tensor([5, 456340276],"float32"), 3, axis=1, largest=False, )
paddle.topk(Tensor([5, 858993460],"float16"), 3, axis=1, largest=False, )
paddle.topk(Tensor([536870913, 4, 2],"float16"), 2, axis=0, largest=False, )
paddle.topk(Tensor([570425345, 4],"float32"), 2, axis=0, largest=False, )
paddle.topk(Tensor([570425345, 4],"float32"), 3, axis=0, largest=False, )
paddle.topk(Tensor([570425345, 4],"float32"), 3, axis=1, largest=False, )
paddle.topk(Tensor([570425345, 4],"float32"), k=1, axis=-1, )
paddle.topk(Tensor([570425345, 4],"float32"), k=2, axis=0, )
paddle.topk(Tensor([570425345, 4],"int32"), k=1, axis=-1, )
paddle.topk(Tensor([570425345, 4],"int64"), k=1, axis=-1, )
paddle.topk(Tensor([5704254, 400],"float32"), k=1, )
paddle.topk(Tensor([5704254, 400],"float32"), k=5, )
paddle.topk(Tensor([5761873, 396],"float32"), 8, axis=1, )
paddle.topk(Tensor([59471, 38367],"float32"), 900, axis=1, )
paddle.topk(Tensor([6, 7, 102261127],"float16"), k=2, )
paddle.topk(Tensor([6, 7, 102261127],"float16"), k=2, axis=-1, largest=False, )
paddle.topk(Tensor([6, 7, 102261127],"float16"), k=2, axis=1, )
paddle.topk(Tensor([6, 7, 102261127],"float16"), k=2, axis=1, largest=False, )
paddle.topk(Tensor([6, 7, 102261127],"float16"), k=2, axis=1, sorted=False, )
paddle.topk(Tensor([6, 89478486, 8],"float16"), k=2, )
paddle.topk(Tensor([6, 89478486, 8],"float16"), k=2, axis=-1, largest=False, )
paddle.topk(Tensor([6, 89478486, 8],"float16"), k=2, axis=1, )
paddle.topk(Tensor([6, 89478486, 8],"float16"), k=2, axis=1, largest=False, )
paddle.topk(Tensor([6, 89478486, 8],"float16"), k=2, axis=1, sorted=False, )
paddle.topk(Tensor([6, 89478486, 8],"float16"), k=Tensor([1],"int64"), axis=1, )
paddle.topk(Tensor([61595, 1, 37044],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([67908, 1, 33600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([71304, 32000],"float32"), 2, axis=1, )
paddle.topk(Tensor([75245, 1, 30324],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([76695845, 7, 8],"float16"), k=2, )
paddle.topk(Tensor([76695845, 7, 8],"float16"), k=2, axis=-1, largest=False, )
paddle.topk(Tensor([76695845, 7, 8],"float16"), k=2, axis=1, )
paddle.topk(Tensor([76695845, 7, 8],"float16"), k=2, axis=1, largest=False, )
paddle.topk(Tensor([76695845, 7, 8],"float16"), k=2, axis=1, sorted=False, )
paddle.topk(Tensor([83837, 1, 27216],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8912897, 256],"float32"), 2, axis=1, )
paddle.topk(Tensor([8913, 256000],"float32"), 2, axis=1, )
paddle.topk(Tensor([9275209, 246],"float32"), 4, axis=1, )
paddle.topk(Tensor([93991, 1, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.topk(x=Tensor([10737419, 400],"float16"), k=4, )
paddle.topk(x=Tensor([17825793, 128],"float32"), k=4, )
paddle.topk(x=Tensor([35651585, 64],"float32"), k=4, )
paddle.topk(x=Tensor([4, 570425345],"float32"), k=4, )
paddle.topk(x=Tensor([4, 570425345],"float32"), k=8, )
paddle.topk(x=Tensor([8, 536870913],"float16"), k=4, )
paddle.topk(x=Tensor([8912897, 256],"float32"), k=8, )
paddle.trace(Tensor([1140850690, 2],"float32"), )
paddle.trace(Tensor([2, 1140850690],"float32"), )
paddle.trace(x=Tensor([1073741825, 4],"float16"), offset=0, axis1=0, axis2=1, )
paddle.trace(x=Tensor([3, 1431655766],"float16"), offset=0, axis1=0, axis2=1, )
paddle.transpose(Tensor([1, 1, 1, 2281701379],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 12, 190141782],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1, 12, 190141782],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1, 16, 142606337],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1, 16, 142606337],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1, 20, 114085069],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1, 20, 114085069],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1, 2281701379],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([1, 1, 285212673, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 285212673, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 35651585, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1, 35651585, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1, 4, 570425345],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 4, 570425345],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 44739243, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 536870913, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 6, 380283564],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1, 6, 380283564],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1, 71303169, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 8, 285212673],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 8, 285212673],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1, 8, 285212673],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1, 8, 536870913],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 10, 429496730],"float16"), list[1,0,2,], )
paddle.transpose(Tensor([1, 100, 42949673],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([1, 1024, 2228225],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1, 1048577, 32, 128],"float16"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 1073741825, 4],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([1, 107374183, 2, 5, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 107374183, 40],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([1, 107374183, 5, 2, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 1114113, 128, 16],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 1140850690, 2],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([1, 1140850690, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([1, 12, 10, 19014179],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 100, 1901418],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 11883862, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 1218858, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 1250933, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 12676119, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 13581556, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 128, 139265, 128],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 128, 262145, 128],"float16"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 128, 32, 1048577],"float16"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 128, 32, 557057],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 128, 557057, 32],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 1280, 1782580],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1, 134217729, 32],"float16"), list[1,0,2,], )
paddle.transpose(Tensor([1, 13581556, 14, 12],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([1, 14, 162978670],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([1, 14, 20372334, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 14, 4, 40744668],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 14260634, 10, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 1426064, 40, 40],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 146263, 100, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 150112, 100, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 15211343, 10, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 1521135, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1, 15845149, 12, 12],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 16, 32, 4456449],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 16, 8912897, 16],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 16297867, 10, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 16385, 2048, 128],"bfloat16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 16385, 2048, 128],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1760573, 36, 36],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 1782580, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1782580, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1901418, 12, 10, 10],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 11408507, 10, 10],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 12, 10, 9507090],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 12, 95070891],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 12, 9507090, 10],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 126761188, 3, 3],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 16, 71303169],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 16777217, 128],"bfloat16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 2, 16777217, 128],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 2, 2, 1, 570425345],"float32"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([1, 2, 2, 17825793, 32],"float32"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([1, 2, 2, 2, 285212673],"float32"), perm=list[2,1,0,3,4,], )
paddle.transpose(Tensor([1, 2, 2, 71303169, 8],"float32"), perm=list[2,1,0,3,4,], )
paddle.transpose(Tensor([1, 2, 2048, 1048577],"bfloat16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 2, 2048, 1048577],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 2, 24, 47535446],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 24, 5, 9507090],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 24, 9507090, 5],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 28521268, 40],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 31690297, 36],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 35651585, 1, 32],"float32"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([1, 2, 36, 31690297],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 40, 28521268],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 45634028, 5, 5],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 47535446, 24],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 48, 3, 7922575],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 48, 7922575, 3],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 71303169, 16],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 71303169, 2, 8],"float32"), perm=list[2,1,0,3,4,], )
paddle.transpose(Tensor([1, 2, 95070891, 12],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 20, 114085069],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([1, 20, 4, 28521268],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 20, 4753545, 24],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 2147483649, 2],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([1, 22, 103713700],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([1, 2228225, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 2228225, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 2228225, 32, 32],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 23767723, 4, 24],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 2970966, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 2970966, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 3, 178956971, 2, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 2, 178956971, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 2, 380283564],"bool"), list[1,0,2,3,], )
paddle.transpose(Tensor([1, 3, 2, 5, 143165577],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 2, 5, 76056713],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 2, 95070891, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 380283564, 2],"bool"), list[1,0,2,3,], )
paddle.transpose(Tensor([1, 3, 38028357, 5, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 4, 2, 95070891],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 4, 47535446, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 5, 2, 143165577],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 5, 2, 76056713],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 5, 38028357, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 5, 71582789, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 71582789, 5, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 95070891, 2, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 35651585, 2, 1, 32],"float32"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([1, 35651585, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 357913942, 12],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([1, 3802836, 24, 5, 5],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 384, 5941931],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1, 3961288, 24, 24],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 4294967297],"float16"), list[1,0,], )
paddle.transpose(Tensor([1, 4456449, 32, 16],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 4456449, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 4456449, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 5000, 456341],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([1, 512, 4456449],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1, 5281717, 48, 3, 3],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 557057, 32, 128],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 5592406, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 570425345, 2, 2],"bool"), list[1,0,2,3,], )
paddle.transpose(Tensor([1, 570425345, 4],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([1, 57042535, 2, 5, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 57042535, 5, 2, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 5941931, 384],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([1, 5941931, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 5941931, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 67108865, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 71303169, 1, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 71303169, 2, 2, 8],"float32"), perm=list[2,1,0,3,4,], )
paddle.transpose(Tensor([1, 71303169, 32],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([1, 71303169, 4, 2, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 71303169, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 71303169, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 715827883, 6],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([1, 768, 2970966],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1, 8, 128, 2228225],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 8, 14, 20372334],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([1, 8, 17825793, 16],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 8, 23767723, 12],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([1, 8, 285212673],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([1, 8912897, 16, 16],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([10, 15, 15211343],"bool"), list[1,0,2,], )
paddle.transpose(Tensor([10, 228170138],"int32"), perm=list[1,0,], )
paddle.transpose(Tensor([10, 22817014, 10],"bool"), list[1,0,2,], )
paddle.transpose(Tensor([10, 429496730],"float16"), list[1,0,], )
paddle.transpose(Tensor([1000, 2281702],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([1000, 4294968],"float16"), perm=list[1,0,], )
paddle.transpose(Tensor([10186167, 7, 8, 4],"float32"), tuple(0,3,1,2,), )
paddle.transpose(Tensor([1024, 4194305],"float16"), perm=list[1,0,], )
paddle.transpose(Tensor([1073741825, 4],"float16"), list[1,0,], )
paddle.transpose(Tensor([107374183, 40],"float16"), list[0,1,], )
paddle.transpose(Tensor([10737419, 100, 4],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([1073742, 100, 40],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([10923, 128, 4, 8, 96],"float16"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([11, 207427399],"int32"), perm=list[1,0,], )
paddle.transpose(Tensor([114, 4, 1, 9418788],"float16"), list[1,0,2,3,], )
paddle.transpose(Tensor([114, 4, 147169, 64],"float16"), list[1,0,2,3,], )
paddle.transpose(Tensor([1140850690, 1, 2],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([1164134, 1960],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([11883862, 2, 96],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([11883862, 96, 2],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([1188387, 12, 10, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1188387, 20, 4, 24],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1189, 1280, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1189, 5000, 384],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([12189, 12, 100, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([12510, 12, 100, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([126761188, 2, 3, 3],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([1267612, 12, 10, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([12993, 2, 112, 28, 28],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([13, 165191050, 2],"float16"), perm=list[2,0,1,], )
paddle.transpose(Tensor([13, 5484860, 8, 4],"float32"), tuple(0,3,1,2,), )
paddle.transpose(Tensor([13, 7, 25073642],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([13, 7, 47197443],"float16"), perm=list[2,0,1,], )
paddle.transpose(Tensor([13, 7, 6268411, 4],"float32"), tuple(0,3,1,2,), )
paddle.transpose(Tensor([13, 7, 8, 3134206],"float32"), tuple(0,3,1,2,), )
paddle.transpose(Tensor([13, 8, 21939437],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([13, 87757746, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([13421773, 10, 32],"float16"), list[1,0,2,], )
paddle.transpose(Tensor([1358156, 12, 10, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([139265, 8, 128, 16],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([14, 1, 1, 162978670],"int64"), perm=list[0,1,3,2,], )
paddle.transpose(Tensor([14, 1, 23282668, 7],"int64"), perm=list[0,1,3,2,], )
paddle.transpose(Tensor([14, 23282668, 1, 7],"int64"), perm=list[0,1,3,2,], )
paddle.transpose(Tensor([142606337, 8, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([1455167, 7, 56, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([1486, 1024, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([15211343, 15, 10],"bool"), list[1,0,2,], )
paddle.transpose(Tensor([16, 1024, 262145],"float16"), perm=list[1,0,2,], )
paddle.transpose(Tensor([16, 1485483, 96],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([16, 17409, 64, 128],"float32"), list[2,0,1,3,], )
paddle.transpose(Tensor([16, 2, 71303169],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([16, 262145, 1024],"float16"), perm=list[1,0,2,], )
paddle.transpose(Tensor([16, 32, 34817, 128],"float32"), list[2,0,1,3,], )
paddle.transpose(Tensor([16, 32, 64, 69633],"float32"), list[2,0,1,3,], )
paddle.transpose(Tensor([16, 71303169, 2],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([16, 96, 1485483],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([162978670, 7, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([16777217, 4, 1, 64],"float16"), list[1,0,2,3,], )
paddle.transpose(Tensor([1697695, 8, 14, 12],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([17409, 128, 32, 32],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([17817, 2001, 64],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([17825793, 2, 2, 1, 32],"float32"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([1782580, 1, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1782580, 1, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1782580, 1280],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([190141782, 3, 2, 2],"bool"), list[1,0,2,3,], )
paddle.transpose(Tensor([190141782, 3, 4],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([190141782, 3, 4],"float32"), perm=tuple(2,1,0,), )
paddle.transpose(Tensor([19014179, 3, 2, 5, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([19014179, 3, 5, 2, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1901418, 2, 24, 5, 5],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1980644, 2, 24, 24],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1981, 768, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([2, 1, 3, 4, 2, 1, 47535446],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([2, 1, 3, 4, 2, 23767723, 2],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([2, 1, 3, 4, 47535446, 1, 2],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([2, 1, 3, 95070891, 2, 1, 2],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([2, 1, 71303169, 4, 2, 1, 2],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([2, 1024, 2097153],"float16"), perm=list[1,0,2,], )
paddle.transpose(Tensor([2, 1140850690],"float32"), list[0,1,], )
paddle.transpose(Tensor([2, 11883862, 96],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([2, 126761188, 3, 3],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([2, 128, 21846, 8, 96],"float16"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([2, 128, 4, 43691, 96],"float16"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([2, 128, 4, 8, 524289],"float16"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([2, 12993, 112, 28, 28],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 13, 1567103, 7, 8],"float32"), tuple(1,0,3,2,4,), )
paddle.transpose(Tensor([2, 13, 2742430, 8, 4],"float32"), tuple(0,1,4,2,3,), )
paddle.transpose(Tensor([2, 13, 4, 1567103, 14],"float32"), tuple(1,0,2,3,4,), )
paddle.transpose(Tensor([2, 13, 4, 2742430, 8],"float32"), tuple(1,0,3,2,4,), )
paddle.transpose(Tensor([2, 13, 4, 7, 3134206],"float32"), tuple(1,0,2,3,4,), )
paddle.transpose(Tensor([2, 13, 4, 7, 3134206],"float32"), tuple(1,0,3,2,4,), )
paddle.transpose(Tensor([2, 13, 7, 3134206, 4],"float32"), tuple(0,1,4,2,3,), )
paddle.transpose(Tensor([2, 13, 7, 8, 1567103],"float32"), tuple(0,1,4,2,3,), )
paddle.transpose(Tensor([2, 13, 895488, 7, 14],"float32"), tuple(1,0,2,3,4,), )
paddle.transpose(Tensor([2, 14913081, 6, 6, 4],"float16"), list[0,4,1,2,3,], )
paddle.transpose(Tensor([2, 16, 2, 35651585],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([2, 16, 8912897, 8],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([2, 2, 1, 1, 570425345],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 2, 1, 17825793, 32],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 2, 1, 2, 285212673],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 2, 1, 71303169, 8],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 2, 112, 181896, 28],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 112, 28, 181896],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 116, 14, 351248],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 116, 351248, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 17825793, 1, 32],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 2, 2910334, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 35651585, 2, 8],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 2, 570425345],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([2, 2, 727584, 28, 28],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2097153, 1024],"float16"), perm=list[1,0,2,], )
paddle.transpose(Tensor([2, 23767723, 3, 4, 2, 1, 2],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([2, 285212673, 4],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([2, 285212673, 4],"float32"), perm=tuple(2,1,0,), )
paddle.transpose(Tensor([2, 2910334, 4, 7, 14],"float32"), tuple(1,0,2,3,4,), )
paddle.transpose(Tensor([2, 3, 126761188, 3],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([2, 3, 12676119, 5, 6, 1],"float32"), list[4,2,3,1,0,5,], )
paddle.transpose(Tensor([2, 3, 12676119, 5, 6],"float32"), list[4,2,3,1,0,], )
paddle.transpose(Tensor([2, 3, 3, 126761188],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([2, 3, 380283564],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([2, 3, 380283564],"float32"), perm=tuple(2,1,0,), )
paddle.transpose(Tensor([2, 3, 4, 15845149, 6, 1],"float32"), list[4,2,3,1,0,5,], )
paddle.transpose(Tensor([2, 3, 4, 15845149, 6],"float32"), list[4,2,3,1,0,], )
paddle.transpose(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 660215],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 2, 3, 4, 2, 495161, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 2, 3, 4, 330108, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 2, 3, 660215, 2, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 330108, 3, 4, 2, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 5, 19014179, 1],"float32"), list[4,2,3,1,0,5,], )
paddle.transpose(Tensor([2, 3, 4, 5, 19014179],"float32"), list[4,2,3,1,0,], )
paddle.transpose(Tensor([2, 3, 4, 5, 6, 3169030],"float32"), list[4,2,3,1,0,5,], )
paddle.transpose(Tensor([2, 3, 660215, 2, 3, 4, 2, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 35651585, 1, 1, 32],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 4, 14913081, 6, 6],"float16"), list[0,2,3,4,1,], )
paddle.transpose(Tensor([2, 4, 6, 14913081, 6],"float16"), list[0,2,3,4,1,], )
paddle.transpose(Tensor([2, 4, 6, 6, 14913081],"float16"), list[0,2,3,4,1,], )
paddle.transpose(Tensor([2, 495161, 4, 2, 3, 4, 2, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 50179, 116, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 5093084, 4, 7, 8],"float32"), tuple(1,0,3,2,4,), )
paddle.transpose(Tensor([2, 5093084, 7, 8, 4],"float32"), tuple(0,1,4,2,3,), )
paddle.transpose(Tensor([2, 570425345, 2],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([2, 6, 14913081, 6, 4],"float16"), list[0,4,1,2,3,], )
paddle.transpose(Tensor([2, 6, 6, 14913081, 4],"float16"), list[0,4,1,2,3,], )
paddle.transpose(Tensor([2, 6, 6, 59652324],"float16"), list[0,3,1,2,], )
paddle.transpose(Tensor([2, 6, 6, 6, 9942054],"float16"), list[0,4,1,2,3,], )
paddle.transpose(Tensor([2, 6, 89478486, 4],"float16"), list[0,3,1,2,], )
paddle.transpose(Tensor([2, 699051, 4, 8, 96],"float16"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([2, 71303169, 1, 2, 8],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 71303169, 2, 8],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([2, 89478486, 6, 4],"float16"), list[0,3,1,2,], )
paddle.transpose(Tensor([2, 9507090, 4, 5, 6, 1],"float32"), list[4,2,3,1,0,5,], )
paddle.transpose(Tensor([2, 9507090, 4, 5, 6],"float32"), list[4,2,3,1,0,], )
paddle.transpose(Tensor([2, 96, 11883862],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([2, 9942054, 6, 6, 6],"float16"), list[0,2,3,4,1,], )
paddle.transpose(Tensor([20, 1782580, 64],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([20, 2001, 57015],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([20, 214748365],"float16"), list[0,1,], )
paddle.transpose(Tensor([2112687, 5, 6, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([21474837, 100, 2],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([216, 248, 1, 1, 2, 21298],"float32"), list[2,1,0,3,4,5,], )
paddle.transpose(Tensor([216, 248, 1, 1, 6085, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.transpose(Tensor([216, 248, 1, 3043, 2, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.transpose(Tensor([216, 248, 3043, 1, 2, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.transpose(Tensor([216, 754531, 1, 1, 2, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.transpose(Tensor([2193944, 26, 1, 40, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([2228225, 1, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([2228225, 1, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([2228225, 1024],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([2281701379],"float32"), list[0,], )
paddle.transpose(Tensor([2281701379],"int64"), list[0,], )
paddle.transpose(Tensor([228170138, 10],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([23767723, 3, 4, 2, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([2640859, 2, 48, 3, 3],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2640859, 4, 6, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([2640859, 4, 6, 6, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([2640859, 4, 6, 6, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([278529, 16, 32, 16],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([28521268, 80],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([2970966, 1, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([2970966, 1, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([2971, 512, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([29826162, 6, 6, 4],"float16"), list[0,3,1,2,], )
paddle.transpose(Tensor([3, 100, 14316558],"float16"), list[1,2,0,], )
paddle.transpose(Tensor([3, 11930465, 120],"float16"), list[1,2,0,], )
paddle.transpose(Tensor([3, 2, 126761188, 3],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([3, 2, 3, 126761188],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([3, 3, 5, 50704476],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([3, 3, 84507459, 3],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([3, 5, 3, 50704476],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([3, 5, 50704476, 3],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([3, 50704476, 5, 3],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([3, 84507459, 3, 3],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([3000, 760568],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([306783379, 7, 2],"float16"), perm=list[2,0,1,], )
paddle.transpose(Tensor([3169030, 3, 4, 4, 5, 3],"float32"), list[5,3,4,1,0,2,], )
paddle.transpose(Tensor([3169030, 4, 5, 6, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([3169030, 4, 6, 5, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([325957340, 1, 1, 7],"int64"), perm=list[0,1,3,2,], )
paddle.transpose(Tensor([325957340, 7],"int32"), perm=list[1,0,], )
paddle.transpose(Tensor([330108, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([34817, 16, 32, 128],"float32"), list[3,1,0,2,], )
paddle.transpose(Tensor([35651585, 1, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([35651585, 2, 1, 1, 32],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([35651585, 2, 2, 2, 8],"float32"), perm=list[2,1,0,3,4,], )
paddle.transpose(Tensor([35791395, 3, 2, 5, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([35791395, 3, 5, 2, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([357914, 100, 120],"float16"), list[1,2,0,], )
paddle.transpose(Tensor([3579140, 100, 12],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([37312, 39, 14, 14, 8],"float32"), perm=list[0,4,1,2,3,], )
paddle.transpose(Tensor([37312, 8, 39, 14, 14],"float32"), perm=list[0,2,3,4,1,], )
paddle.transpose(Tensor([380283564, 2, 3],"float32"), list[0,1,2,], )
paddle.transpose(Tensor([380283564, 2, 3],"float32"), list[1,2,0,], )
paddle.transpose(Tensor([380283564, 2, 3],"float32"), list[2,0,1,], )
paddle.transpose(Tensor([380283564, 2, 3],"float32"), list[2,1,0,], )
paddle.transpose(Tensor([3962, 384, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([4, 2640859, 6, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([4, 5, 3169030, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([4, 5, 6, 3169030, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([4, 5, 6, 6, 3169030],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([4, 570425345],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([4097, 1024, 1024],"float16"), perm=list[1,0,2,], )
paddle.transpose(Tensor([4286, 26, 512, 1, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([429496730, 10],"float16"), list[1,0,], )
paddle.transpose(Tensor([429496730, 10],"float16"), perm=list[1,0,], )
paddle.transpose(Tensor([4353, 128, 32, 128],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([4456449, 1, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([4456449, 1, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([4456449, 2, 16, 16],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([447744, 13, 4, 7, 14],"float32"), tuple(1,0,2,3,4,), )
paddle.transpose(Tensor([456340276, 5],"float32"), list[0,1,], )
paddle.transpose(Tensor([47535446, 1, 3, 4, 2, 1, 2],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([4971027, 4, 6, 6, 6],"float16"), list[0,2,3,4,1,], )
paddle.transpose(Tensor([4971027, 6, 6, 6, 4],"float16"), list[0,4,1,2,3,], )
paddle.transpose(Tensor([5, 2112687, 6, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([5, 2112687, 6, 6, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([5, 2112687, 6, 6, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([5, 3, 3, 50704476],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([5, 3, 50704476, 3],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([5, 4, 3169030, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([5, 4, 3169030, 6, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([5, 4, 3169030, 6, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([5, 4, 6, 3169030, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([5, 4, 6, 3169030, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([5, 4, 6, 3169030, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([5, 4, 6, 6, 3169030],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([5, 4, 6, 6, 3169030],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([5, 4, 6, 6, 3169030],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([5, 50704476, 3, 3],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([50, 29104, 14, 14, 8],"float32"), perm=list[0,4,1,2,3,], )
paddle.transpose(Tensor([50, 39, 10448, 14, 8],"float32"), perm=list[0,4,1,2,3,], )
paddle.transpose(Tensor([50, 39, 14, 10448, 8],"float32"), perm=list[0,4,1,2,3,], )
paddle.transpose(Tensor([50, 39, 14, 14, 5970],"float32"), perm=list[0,4,1,2,3,], )
paddle.transpose(Tensor([50, 5970, 39, 14, 14],"float32"), perm=list[0,2,3,4,1,], )
paddle.transpose(Tensor([50, 8, 29104, 14, 14],"float32"), perm=list[0,2,3,4,1,], )
paddle.transpose(Tensor([50, 8, 39, 10448, 14],"float32"), perm=list[0,2,3,4,1,], )
paddle.transpose(Tensor([50, 8, 39, 14, 10448],"float32"), perm=list[0,2,3,4,1,], )
paddle.transpose(Tensor([50179, 2, 116, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([50704476, 3, 5, 3],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([50704476, 5, 3, 3],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([5093084, 14, 32],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([5093084, 14, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([51856850, 22, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([51865, 43994],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([5592406, 1, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([57042535, 20, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([5820667, 7, 14, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([5941931, 1, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5941931, 1, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5941931, 384],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([6, 126761188, 3],"float32"), list[0,1,2,], )
paddle.transpose(Tensor([6, 126761188, 3],"float32"), list[1,2,0,], )
paddle.transpose(Tensor([6, 126761188, 3],"float32"), list[2,0,1,], )
paddle.transpose(Tensor([6, 126761188, 3],"float32"), list[2,1,0,], )
paddle.transpose(Tensor([6, 2, 190141782],"float32"), list[0,1,2,], )
paddle.transpose(Tensor([6, 2, 190141782],"float32"), list[1,2,0,], )
paddle.transpose(Tensor([6, 2, 190141782],"float32"), list[2,0,1,], )
paddle.transpose(Tensor([6, 2, 190141782],"float32"), list[2,1,0,], )
paddle.transpose(Tensor([6, 2112687, 5, 6, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([6, 2112687, 6, 5, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([6, 4, 2640859, 6, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([6, 4, 3169030, 5, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([6, 4, 5, 3169030, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([6, 4, 5, 6, 3169030],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([6, 4, 6, 2640859, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([6, 4, 6, 5, 3169030],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([6338060, 3, 4, 5, 6, 1],"float32"), list[4,2,3,1,0,5,], )
paddle.transpose(Tensor([6338060, 3, 4, 5, 6],"float32"), list[4,2,3,1,0,], )
paddle.transpose(Tensor([64, 16, 17409, 128],"float32"), list[3,1,0,2,], )
paddle.transpose(Tensor([64, 16, 32, 69633],"float32"), list[3,1,0,2,], )
paddle.transpose(Tensor([64, 1741, 512, 1, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 26, 1, 1371215, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 26, 1, 2581111, 1],"float16"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 26, 1, 40, 34281],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 26, 1, 40, 64528],"float16"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 26, 34281, 1, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 26, 34281, 40, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 26, 512, 1, 2679],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 26, 512, 1, 5042],"float16"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 26, 512, 67, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 26, 64528, 1, 40],"float16"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 26, 64528, 40, 1],"float16"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 8705, 32, 128],"float32"), list[3,1,0,2,], )
paddle.transpose(Tensor([64, 891290, 1, 40, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([657173, 248, 1, 1, 2, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.transpose(Tensor([7, 10, 32595734],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([7, 10186167, 32],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([7, 1455167, 56, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([7, 5820667, 14, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([7, 7, 11641334, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([7, 7, 14, 3326096],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([7, 7, 56, 831524],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([71303169, 1, 1, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([71303169, 1, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([71303169, 1, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([71303169, 2, 1, 2, 8],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([71303169, 8, 4],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([7130317, 10, 32],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([713032, 2, 40, 40],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([7158279, 100, 6],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([783552, 13, 4, 7, 8],"float32"), tuple(1,0,3,2,4,), )
paddle.transpose(Tensor([783552, 13, 7, 8, 4],"float32"), tuple(0,1,4,2,3,), )
paddle.transpose(Tensor([7922575, 2, 12, 12],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1188387, 4, 4, 5, 3],"float32"), list[5,3,4,1,0,2,], )
paddle.transpose(Tensor([8, 13927, 512, 1, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([8, 26, 1, 10969719, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([8, 26, 1, 40, 274243],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([8, 26, 274243, 1, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([8, 26, 274243, 40, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([8, 26, 512, 1, 21426],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([8, 26, 512, 536, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([8, 3, 1584515, 4, 5, 3],"float32"), list[5,3,4,1,0,2,], )
paddle.transpose(Tensor([8, 3, 4, 1584515, 5, 3],"float32"), list[5,3,4,1,0,2,], )
paddle.transpose(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), list[5,3,4,1,0,2,], )
paddle.transpose(Tensor([8, 3, 4, 4, 5, 1188387],"float32"), list[5,3,4,1,0,2,], )
paddle.transpose(Tensor([8, 5093084, 14, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([8, 7, 10186167, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([8, 7, 14, 2910334],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([8, 7130317, 1, 40, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([8193, 128, 32, 128],"float16"), list[0,1,3,2,], )
paddle.transpose(Tensor([8193, 2, 2048, 128],"bfloat16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([8193, 2, 2048, 128],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([8388609, 512],"float16"), perm=list[1,0,], )
paddle.transpose(Tensor([84507459, 3, 3, 3],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([84507459, 3, 3, 3],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([85899346, 50],"float16"), list[1,0,], )
paddle.transpose(Tensor([8705, 32, 64, 128],"float32"), list[2,0,1,3,], )
paddle.transpose(Tensor([880287, 2, 36, 36],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([8912897, 16, 2, 8],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([950709, 2, 12, 10, 10],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1, 1, 285212673, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 1, 4, 570425345],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 11, 16, 12964213],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 11, 6482107, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 142606337, 4, 4],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 16777217, 2, 128],"bfloat16"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 2, 142606337, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 2, 2, 1073741825],"float16"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 2, 570425345],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 2, 570425345],"int32"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 2, 570425345],"int64"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 380283564, 3],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 380283564, 3],"int32"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 380283564, 3],"int64"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 715827883, 3],"float16"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 8, 142606337],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 20, 28521268, 4],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 20, 4, 28521268],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 2048, 16385, 128],"bfloat16"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 2048, 2, 1048577],"bfloat16"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 35651585, 8, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 380283564, 2, 3],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 380283564, 2, 3],"int32"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 380283564, 2, 3],"int64"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 4456449, 16, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 71303169, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 715827883, 2, 3],"float16"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([100357, 2, 232, 7, 7],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1073741825, 1, 2, 2],"float16"), perm=list[1,0,2,3,], )
paddle.transpose(x=Tensor([1536, 123, 116, 14, 14],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 131, 232, 7, 7],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 116, 14, 458],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 116, 14, 861],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 116, 458, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 116, 861, 14],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 15158, 7, 7],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 1784, 28, 28],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 232, 458, 7],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 232, 7, 458],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 232, 7, 861],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 232, 861, 7],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 28533, 7, 7],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 3790, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 58, 28, 861],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 58, 861, 28],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 7134, 14, 14],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 246, 232, 7, 7],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 66, 116, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([17825793, 2, 8, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([188907, 2, 232, 7, 7],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([190141782, 2, 2, 3],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([190141782, 2, 2, 3],"int32"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([190141782, 2, 2, 3],"int64"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([228170138, 1, 10],"float32"), perm=list[1,0,2,], )
paddle.transpose(x=Tensor([3, 1, 2, 715827883],"float16"), perm=list[1,0,2,3,], )
paddle.transpose(x=Tensor([3, 1, 715827883, 2],"float16"), perm=list[1,0,2,3,], )
paddle.transpose(x=Tensor([3, 357913942, 2, 2],"float16"), perm=list[1,0,2,3,], )
paddle.transpose(x=Tensor([3, 4, 190141782],"float32"), perm=list[1,0,2,], )
paddle.transpose(x=Tensor([3, 76056713, 10],"float32"), perm=list[1,0,2,], )
paddle.transpose(x=Tensor([32, 15, 15, 16, 16, 1238],"float32"), perm=tuple(0,5,1,3,2,4,), )
paddle.transpose(x=Tensor([32, 15, 15, 16, 19807, 1],"float32"), perm=tuple(0,5,1,3,2,4,), )
paddle.transpose(x=Tensor([32, 15, 15, 19807, 16, 1],"float32"), perm=tuple(0,5,1,3,2,4,), )
paddle.transpose(x=Tensor([32, 15, 18569, 16, 16, 1],"float32"), perm=tuple(0,5,1,3,2,4,), )
paddle.transpose(x=Tensor([32, 18569, 15, 16, 16, 1],"float32"), perm=tuple(0,5,1,3,2,4,), )
paddle.transpose(x=Tensor([357913942, 2, 2, 3],"float16"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([39613, 15, 15, 16, 16, 1],"float32"), perm=tuple(0,5,1,3,2,4,), )
paddle.transpose(x=Tensor([4, 1, 570425345],"float32"), perm=list[1,0,2,], )
paddle.transpose(x=Tensor([4, 57042535, 10],"float32"), perm=list[1,0,2,], )
paddle.transpose(x=Tensor([405132, 11, 16, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([47227, 2, 58, 28, 28],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([50179, 2, 116, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([57042535, 4, 10],"float32"), perm=list[1,0,2,], )
paddle.transpose(x=Tensor([71303169, 1, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([7130317, 20, 4, 4],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([8, 2304, 1, 1, 123791],"float32"), perm=tuple(0,2,3,4,1,), )
paddle.transpose(x=Tensor([8, 2304, 1, 123791, 1],"float32"), perm=tuple(0,2,3,4,1,), )
paddle.transpose(x=Tensor([8, 2304, 123791, 1, 1],"float32"), perm=tuple(0,2,3,4,1,), )
paddle.transpose(x=Tensor([8, 285212673, 1, 1, 1],"float32"), perm=tuple(0,2,3,4,1,), )
paddle.transpose(x=Tensor([8193, 2048, 2, 128],"bfloat16"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([94454, 2, 116, 14, 14],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([990322, 2304, 1, 1, 1],"float32"), perm=tuple(0,2,3,4,1,), )
paddle.trapezoid(Tensor([2281701379],"float32"), dx=2.0, )
paddle.tril(Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.tril(Tensor([1, 1, 1114113, 2048],"bool"), )
paddle.tril(Tensor([1, 1, 1114113, 2048],"float32"), )
paddle.tril(Tensor([1, 1, 114085069, 20],"float32"), )
paddle.tril(Tensor([1, 1, 20, 114085069],"float32"), )
paddle.tril(Tensor([1, 1, 2048, 1114113],"bool"), )
paddle.tril(Tensor([1, 1, 2048, 1114113],"float32"), )
paddle.tril(Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.tril(Tensor([1, 1, 39339679, 58],"bool"), )
paddle.tril(Tensor([1, 1, 39339679, 58],"float32"), )
paddle.tril(Tensor([1, 1, 58, 39339679],"bool"), )
paddle.tril(Tensor([1, 1, 58, 39339679],"float32"), )
paddle.tril(Tensor([1, 114085069, 20],"float32"), )
paddle.tril(Tensor([1, 20, 114085069],"float32"), )
paddle.tril(Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.tril(Tensor([1, 2281701379],"float32"), diagonal=0, )
paddle.tril(Tensor([1, 545, 2048, 2048],"bool"), )
paddle.tril(Tensor([1, 545, 2048, 2048],"float32"), )
paddle.tril(Tensor([1, 5704254, 20, 20],"float32"), )
paddle.tril(Tensor([1, 678271, 58, 58],"bool"), )
paddle.tril(Tensor([1, 678271, 58, 58],"float32"), )
paddle.tril(Tensor([10, 20, 11408507],"float32"), 0, )
paddle.tril(Tensor([10, 228170138, 1],"float32"), 0, )
paddle.tril(Tensor([10, 228170138],"bool"), )
paddle.tril(Tensor([10, 228170138],"float32"), diagonal=0, )
paddle.tril(Tensor([1007, 2265841],"bool"), )
paddle.tril(Tensor([107, 21324312],"bool"), )
paddle.tril(Tensor([107, 40139882],"float16"), )
paddle.tril(Tensor([109, 20933041],"bool"), )
paddle.tril(Tensor([109, 39403370],"float16"), )
paddle.tril(Tensor([11, 390451573],"float16"), )
paddle.tril(Tensor([110, 20742740],"bool"), )
paddle.tril(Tensor([110, 39045158],"float16"), )
paddle.tril(Tensor([111, 20555869],"bool"), )
paddle.tril(Tensor([111, 38693400],"float16"), )
paddle.tril(Tensor([1114113, 2048],"bool"), )
paddle.tril(Tensor([112, 20372334],"bool"), )
paddle.tril(Tensor([112, 38347923],"float16"), )
paddle.tril(Tensor([1126767, 1, 45, 45],"bool"), )
paddle.tril(Tensor([114, 20014925],"bool"), )
paddle.tril(Tensor([114085069, 20, 1],"float32"), 0, )
paddle.tril(Tensor([115, 19840882],"bool"), )
paddle.tril(Tensor([11523745, 198],"bool"), )
paddle.tril(Tensor([127, 17966153],"bool"), )
paddle.tril(Tensor([127072, 1, 134, 134],"float32"), )
paddle.tril(Tensor([13, 175515491],"float32"), )
paddle.tril(Tensor([130952, 1, 132, 132],"bool"), )
paddle.tril(Tensor([1321936, 1, 57, 57],"float16"), )
paddle.tril(Tensor([13265706, 172],"bool"), )
paddle.tril(Tensor([13912814, 164],"bool"), )
paddle.tril(Tensor([143165577, 30],"float16"), )
paddle.tril(Tensor([147, 15521779],"bool"), )
paddle.tril(Tensor([1472897, 1, 54, 54],"float16"), )
paddle.tril(Tensor([148, 15416902],"bool"), )
paddle.tril(Tensor([148102321, 29],"float16"), )
paddle.tril(Tensor([1500133, 1, 39, 39],"bool"), )
paddle.tril(Tensor([15011194, 152],"bool"), )
paddle.tril(Tensor([152, 15011194],"bool"), )
paddle.tril(Tensor([1529003, 1, 53, 53],"float16"), )
paddle.tril(Tensor([153391690, 28],"float16"), )
paddle.tril(Tensor([15416902, 148],"bool"), )
paddle.tril(Tensor([15521779, 147],"bool"), )
paddle.tril(Tensor([1580126, 1, 38, 38],"bool"), )
paddle.tril(Tensor([164, 13912814],"bool"), )
paddle.tril(Tensor([1651276, 1, 51, 51],"float16"), )
paddle.tril(Tensor([165191050, 26],"float16"), )
paddle.tril(Tensor([1666693, 1, 37, 37],"bool"), )
paddle.tril(Tensor([172, 13265706],"bool"), )
paddle.tril(Tensor([17966153, 127],"bool"), )
paddle.tril(Tensor([18512791, 232],"float16"), )
paddle.tril(Tensor([1862614, 1, 35, 35],"bool"), )
paddle.tril(Tensor([186737709, 23],"float16"), )
paddle.tril(Tensor([1944304, 1, 47, 47],"float16"), )
paddle.tril(Tensor([198, 11523745],"bool"), )
paddle.tril(Tensor([19840882, 115],"bool"), )
paddle.tril(Tensor([2, 1, 1, 1140850690],"bool"), )
paddle.tril(Tensor([2, 1, 1, 1140850690],"float32"), )
paddle.tril(Tensor([2, 1, 1, 2147483649],"float16"), )
paddle.tril(Tensor([2, 1, 10, 114085069],"float32"), )
paddle.tril(Tensor([2, 1, 114085069, 10],"float32"), )
paddle.tril(Tensor([2, 1, 1140850690, 1],"bool"), )
paddle.tril(Tensor([2, 1, 1140850690, 1],"float32"), )
paddle.tril(Tensor([2, 1, 20014925, 57],"bool"), )
paddle.tril(Tensor([2, 1, 2147483649, 1],"float16"), )
paddle.tril(Tensor([2, 1, 21939437, 52],"bool"), )
paddle.tril(Tensor([2, 1, 22369622, 51],"bool"), )
paddle.tril(Tensor([2, 1, 228170138, 5],"float32"), )
paddle.tril(Tensor([2, 1, 22817014, 50],"bool"), )
paddle.tril(Tensor([2, 1, 25352238, 45],"bool"), )
paddle.tril(Tensor([2, 1, 29252582, 39],"bool"), )
paddle.tril(Tensor([2, 1, 30022387, 38],"bool"), )
paddle.tril(Tensor([2, 1, 30833803, 37],"bool"), )
paddle.tril(Tensor([2, 1, 32595734, 35],"bool"), )
paddle.tril(Tensor([2, 1, 35, 32595734],"bool"), )
paddle.tril(Tensor([2, 1, 37, 30833803],"bool"), )
paddle.tril(Tensor([2, 1, 37675152, 57],"float16"), )
paddle.tril(Tensor([2, 1, 38, 30022387],"bool"), )
paddle.tril(Tensor([2, 1, 38, 56512728],"float16"), )
paddle.tril(Tensor([2, 1, 39, 29252582],"bool"), )
paddle.tril(Tensor([2, 1, 39, 55063684],"float16"), )
paddle.tril(Tensor([2, 1, 39768216, 54],"float16"), )
paddle.tril(Tensor([2, 1, 40, 53687092],"float16"), )
paddle.tril(Tensor([2, 1, 40518560, 53],"float16"), )
paddle.tril(Tensor([2, 1, 41, 52377650],"float16"), )
paddle.tril(Tensor([2, 1, 42107523, 51],"float16"), )
paddle.tril(Tensor([2, 1, 45, 25352238],"bool"), )
paddle.tril(Tensor([2, 1, 45691142, 47],"float16"), )
paddle.tril(Tensor([2, 1, 47, 45691142],"float16"), )
paddle.tril(Tensor([2, 1, 5, 228170138],"float32"), )
paddle.tril(Tensor([2, 1, 50, 22817014],"bool"), )
paddle.tril(Tensor([2, 1, 51, 22369622],"bool"), )
paddle.tril(Tensor([2, 1, 51, 42107523],"float16"), )
paddle.tril(Tensor([2, 1, 52, 21939437],"bool"), )
paddle.tril(Tensor([2, 1, 52377650, 41],"float16"), )
paddle.tril(Tensor([2, 1, 53, 40518560],"float16"), )
paddle.tril(Tensor([2, 1, 53687092, 40],"float16"), )
paddle.tril(Tensor([2, 1, 54, 39768216],"float16"), )
paddle.tril(Tensor([2, 1, 55063684, 39],"float16"), )
paddle.tril(Tensor([2, 1, 56512728, 38],"float16"), )
paddle.tril(Tensor([2, 1, 57, 20014925],"bool"), )
paddle.tril(Tensor([2, 1, 57, 37675152],"float16"), )
paddle.tril(Tensor([2, 10, 114085069],"int32"), )
paddle.tril(Tensor([2, 114085069, 10],"int32"), )
paddle.tril(Tensor([2, 1140850690, 1, 1],"bool"), )
paddle.tril(Tensor([2, 1140850690, 1, 1],"float32"), )
paddle.tril(Tensor([2, 11408507, 10, 10],"float32"), )
paddle.tril(Tensor([2, 1277504, 41, 41],"float16"), )
paddle.tril(Tensor([2, 1342178, 40, 40],"float16"), )
paddle.tril(Tensor([2, 1411890, 39, 39],"float16"), )
paddle.tril(Tensor([2, 1487178, 38, 38],"float16"), )
paddle.tril(Tensor([2, 20, 57042535],"int32"), )
paddle.tril(Tensor([2, 2147483649, 1, 1],"float16"), )
paddle.tril(Tensor([2, 351140, 57, 57],"bool"), )
paddle.tril(Tensor([2, 421913, 52, 52],"bool"), )
paddle.tril(Tensor([2, 438621, 51, 51],"bool"), )
paddle.tril(Tensor([2, 45634028, 5, 5],"float32"), )
paddle.tril(Tensor([2, 456341, 50, 50],"bool"), )
paddle.tril(Tensor([2, 563384, 45, 45],"bool"), )
paddle.tril(Tensor([2, 57042535, 20],"int32"), )
paddle.tril(Tensor([2, 660968, 57, 57],"float16"), )
paddle.tril(Tensor([2, 736449, 54, 54],"float16"), )
paddle.tril(Tensor([2, 750067, 39, 39],"bool"), )
paddle.tril(Tensor([2, 764502, 53, 53],"float16"), )
paddle.tril(Tensor([2, 790063, 38, 38],"bool"), )
paddle.tril(Tensor([2, 825638, 51, 51],"float16"), )
paddle.tril(Tensor([2, 833347, 37, 37],"bool"), )
paddle.tril(Tensor([2, 931307, 35, 35],"bool"), )
paddle.tril(Tensor([2, 972152, 47, 47],"float16"), )
paddle.tril(Tensor([20014925, 114],"bool"), )
paddle.tril(Tensor([20372334, 112],"bool"), )
paddle.tril(Tensor([204522253, 21],"float16"), )
paddle.tril(Tensor([2048, 1114113],"bool"), )
paddle.tril(Tensor([20555869, 111],"bool"), )
paddle.tril(Tensor([20742740, 110],"bool"), )
paddle.tril(Tensor([20933041, 109],"bool"), )
paddle.tril(Tensor([21, 204522253],"float16"), )
paddle.tril(Tensor([21324312, 107],"bool"), )
paddle.tril(Tensor([2265841, 1007],"bool"), )
paddle.tril(Tensor([2281701379, 1, 1, 1],"bool"), )
paddle.tril(Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.tril(Tensor([2281701379, 1],"float32"), diagonal=0, )
paddle.tril(Tensor([228170138, 10],"bool"), )
paddle.tril(Tensor([228170138, 10],"float32"), diagonal=0, )
paddle.tril(Tensor([22817014, 1, 10, 10],"float32"), )
paddle.tril(Tensor([22817014, 10, 10],"int32"), )
paddle.tril(Tensor([23, 186737709],"float16"), )
paddle.tril(Tensor([232, 18512791],"float16"), )
paddle.tril(Tensor([253522376, 9],"float32"), )
paddle.tril(Tensor([2555008, 1, 41, 41],"float16"), )
paddle.tril(Tensor([26, 165191050],"float16"), )
paddle.tril(Tensor([2684355, 1, 40, 40],"float16"), )
paddle.tril(Tensor([28, 153391690],"float16"), )
paddle.tril(Tensor([2823779, 1, 39, 39],"float16"), )
paddle.tril(Tensor([288, 7922575],"bool"), )
paddle.tril(Tensor([29, 148102321],"float16"), )
paddle.tril(Tensor([2974355, 1, 38, 38],"float16"), )
paddle.tril(Tensor([3, 760567127],"bool"), )
paddle.tril(Tensor([30, 143165577],"float16"), )
paddle.tril(Tensor([302, 7555303],"bool"), )
paddle.tril(Tensor([32, 71303169],"float32"), -1, )
paddle.tril(Tensor([380283564, 6],"float32"), diagonal=0, )
paddle.tril(Tensor([38347923, 112],"float16"), )
paddle.tril(Tensor([38693400, 111],"float16"), )
paddle.tril(Tensor([390451573, 11],"float16"), )
paddle.tril(Tensor([39045158, 110],"float16"), )
paddle.tril(Tensor([39403370, 109],"float16"), )
paddle.tril(Tensor([4, 1, 1, 570425345],"float32"), )
paddle.tril(Tensor([4, 1, 132, 4321405],"bool"), )
paddle.tril(Tensor([4, 1, 134, 4256906],"float32"), )
paddle.tril(Tensor([4, 1, 4256906, 134],"float32"), )
paddle.tril(Tensor([4, 1, 4321405, 132],"bool"), )
paddle.tril(Tensor([4, 1, 570425345, 1],"float32"), )
paddle.tril(Tensor([4, 31768, 134, 134],"float32"), )
paddle.tril(Tensor([4, 32738, 132, 132],"bool"), )
paddle.tril(Tensor([4, 570425345, 1, 1],"float32"), )
paddle.tril(Tensor([40139882, 107],"float16"), )
paddle.tril(Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.tril(Tensor([456340276, 5],"float32"), diagonal=0, )
paddle.tril(Tensor([5, 456340276],"float32"), diagonal=0, )
paddle.tril(Tensor([545, 1, 2048, 2048],"bool"), )
paddle.tril(Tensor([545, 1, 2048, 2048],"float32"), )
paddle.tril(Tensor([5704254, 1, 20, 20],"float32"), )
paddle.tril(Tensor([5704254, 20, 20],"float32"), )
paddle.tril(Tensor([5704254, 20, 20],"int32"), )
paddle.tril(Tensor([6, 380283564],"float32"), diagonal=0, )
paddle.tril(Tensor([678271, 1, 58, 58],"bool"), )
paddle.tril(Tensor([678271, 1, 58, 58],"float32"), )
paddle.tril(Tensor([702279, 1, 57, 57],"bool"), )
paddle.tril(Tensor([71303169, 32],"float32"), -1, )
paddle.tril(Tensor([7555303, 302],"bool"), )
paddle.tril(Tensor([760567127, 3],"bool"), )
paddle.tril(Tensor([7922575, 288],"bool"), )
paddle.tril(Tensor([843825, 1, 52, 52],"bool"), )
paddle.tril(Tensor([877241, 1, 51, 51],"bool"), )
paddle.tril(Tensor([91268056, 1, 5, 5],"float32"), )
paddle.tril(Tensor([912681, 1, 50, 50],"bool"), )
paddle.tril(x=Tensor([1073741825, 2, 2],"float16"), diagonal=-1, )
paddle.tril(x=Tensor([1073741825, 2, 2],"float16"), diagonal=-5, )
paddle.tril(x=Tensor([1073741825, 2, 2],"float16"), diagonal=0, )
paddle.tril(x=Tensor([1073741825, 2, 2],"float16"), diagonal=1, )
paddle.tril(x=Tensor([1073741825, 2, 2],"float16"), diagonal=5, )
paddle.tril(x=Tensor([3, 2, 380283564],"float32"), diagonal=0, )
paddle.tril(x=Tensor([3, 2, 380283564],"int32"), diagonal=0, )
paddle.tril(x=Tensor([3, 2, 715827883],"float16"), diagonal=-1, )
paddle.tril(x=Tensor([3, 2, 715827883],"float16"), diagonal=-5, )
paddle.tril(x=Tensor([3, 2, 715827883],"float16"), diagonal=0, )
paddle.tril(x=Tensor([3, 2, 715827883],"float16"), diagonal=1, )
paddle.tril(x=Tensor([3, 2, 715827883],"float16"), diagonal=5, )
paddle.tril(x=Tensor([3, 380283564, 2],"float32"), diagonal=0, )
paddle.tril(x=Tensor([3, 380283564, 2],"int32"), diagonal=0, )
paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=-1, )
paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=-5, )
paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=0, )
paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=1, )
paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=5, )
paddle.tril(x=Tensor([570425345, 2, 2],"float32"), diagonal=0, )
paddle.tril(x=Tensor([570425345, 2, 2],"int32"), diagonal=0, )
paddle.triu(Tensor([1, 1, 1, 2281701379],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 4294967297],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 10, 228170138],"float32"), )
paddle.triu(Tensor([1, 1, 103713700, 22],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 108652447, 21],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 114085069, 20],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1140850690, 2],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 120089547, 19],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 126761188, 18],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 142606337, 16],"float32"), )
paddle.triu(Tensor([1, 1, 162978670, 14],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 175515491, 13],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 190141782, 12],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 2048, 2097153],"float16"), )
paddle.triu(Tensor([1, 1, 207427399, 11],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 2097153, 2048],"float16"), )
paddle.triu(Tensor([1, 1, 2281701379, 1],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 228170138, 10],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 286331154, 15],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 306783379, 14],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 330382100, 13],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 357913942, 12],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 390451573, 11],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 429496730, 10],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 76056713, 30],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 78679358, 29],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 81489335, 28],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 84507459, 27],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 87757746, 26],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 91268056, 25],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 95070891, 24],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 99204408, 23],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1025, 2048, 2048],"float16"), )
paddle.triu(Tensor([1, 103713700, 1, 22],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 108652447, 1, 21],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 114085069, 1, 20],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1140850690, 1, 2],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 120089547, 1, 19],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 126761188, 1, 18],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 14260634, 10, 16],"bool"), )
paddle.triu(Tensor([1, 14260634, 10, 16],"float32"), )
paddle.triu(Tensor([1, 162978670, 1, 14],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 175515491, 1, 13],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 190141782, 1, 12],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 2, 10, 114085069],"bool"), )
paddle.triu(Tensor([1, 2, 71303169, 16],"bool"), )
paddle.triu(Tensor([1, 207427399, 1, 11],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 2281701379, 1, 1],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 228170138, 1, 10],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 286331154, 1, 15],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 306783379, 1, 14],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 330382100, 1, 13],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 357913942, 1, 12],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 390451573, 1, 11],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 429496730, 1, 10],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 76056713, 1, 30],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 78679358, 1, 29],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 81489335, 1, 28],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 84507459, 1, 27],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 87757746, 1, 26],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 91268056, 1, 25],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 95070891, 1, 24],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 99204408, 1, 23],"float32"), diagonal=1, )
paddle.triu(Tensor([10, 20, 11408507],"float32"), 0, )
paddle.triu(Tensor([10, 228170138, 1],"float32"), 0, )
paddle.triu(Tensor([1025, 1, 2048, 2048],"float16"), )
paddle.triu(Tensor([103713700, 1, 1, 22],"float32"), diagonal=1, )
paddle.triu(Tensor([103713700, 22],"float32"), diagonal=1, )
paddle.triu(Tensor([108652447, 1, 1, 21],"float32"), diagonal=1, )
paddle.triu(Tensor([11, 207427399],"float32"), diagonal=1, )
paddle.triu(Tensor([114085069, 1, 1, 20],"float32"), diagonal=1, )
paddle.triu(Tensor([114085069, 20, 1],"float32"), 0, )
paddle.triu(Tensor([1140850690, 1, 1, 2],"float32"), diagonal=1, )
paddle.triu(Tensor([12, 27163112, 7],"float32"), diagonal=1, )
paddle.triu(Tensor([12, 7, 27163112],"float32"), diagonal=1, )
paddle.triu(Tensor([120089547, 1, 1, 19],"float32"), diagonal=1, )
paddle.triu(Tensor([126761188, 1, 1, 18],"float32"), diagonal=1, )
paddle.triu(Tensor([128, 17825793],"float32"), 1, )
paddle.triu(Tensor([128, 17825793],"float32"), diagonal=0, )
paddle.triu(Tensor([128, 17825793],"float32"), diagonal=1, )
paddle.triu(Tensor([13, 175515491],"float32"), diagonal=1, )
paddle.triu(Tensor([142606337, 16],"float32"), diagonal=1, )
paddle.triu(Tensor([14260634, 1, 10, 16],"float32"), )
paddle.triu(Tensor([162978670, 1, 1, 14],"float32"), diagonal=1, )
paddle.triu(Tensor([175515491, 1, 1, 13],"float32"), diagonal=1, )
paddle.triu(Tensor([175515491, 13],"float32"), diagonal=1, )
paddle.triu(Tensor([17825793, 128],"float32"), 1, )
paddle.triu(Tensor([17825793, 128],"float32"), diagonal=0, )
paddle.triu(Tensor([17825793, 128],"float32"), diagonal=1, )
paddle.triu(Tensor([1782580, 1280],"float32"), diagonal=1, )
paddle.triu(Tensor([190141782, 1, 1, 12],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 1, 2147483649],"float16"), )
paddle.triu(Tensor([2, 1, 17602325, 122],"float16"), )
paddle.triu(Tensor([2, 1, 17747799, 121],"float16"), )
paddle.triu(Tensor([2, 1, 17895698, 120],"float16"), )
paddle.triu(Tensor([2, 1, 18046082, 119],"float16"), )
paddle.triu(Tensor([2, 1, 18199014, 118],"float16"), )
paddle.triu(Tensor([2, 1, 18354562, 117],"float16"), )
paddle.triu(Tensor([2, 1, 18512791, 116],"float16"), )
paddle.triu(Tensor([2, 1, 18673771, 115],"float16"), )
paddle.triu(Tensor([2, 1, 18837576, 114],"float16"), )
paddle.triu(Tensor([2, 1, 19004281, 113],"float16"), )
paddle.triu(Tensor([2, 1, 19173962, 112],"float16"), )
paddle.triu(Tensor([2, 1, 19346700, 111],"float16"), )
paddle.triu(Tensor([2, 1, 19522579, 110],"float16"), )
paddle.triu(Tensor([2, 1, 19701685, 109],"float16"), )
paddle.triu(Tensor([2, 1, 19884108, 108],"float16"), )
paddle.triu(Tensor([2, 1, 20069941, 107],"float16"), )
paddle.triu(Tensor([2, 1, 20259280, 106],"float16"), )
paddle.triu(Tensor([2, 1, 20452226, 105],"float16"), )
paddle.triu(Tensor([2, 1, 20648882, 104],"float16"), )
paddle.triu(Tensor([2, 1, 20849356, 103],"float16"), )
paddle.triu(Tensor([2, 1, 21053762, 102],"float16"), )
paddle.triu(Tensor([2, 1, 21262215, 101],"float16"), )
paddle.triu(Tensor([2, 1, 21474837, 100],"float16"), )
paddle.triu(Tensor([2, 17602325, 1, 122],"float16"), )
paddle.triu(Tensor([2, 17747799, 1, 121],"float16"), )
paddle.triu(Tensor([2, 17895698, 1, 120],"float16"), )
paddle.triu(Tensor([2, 18046082, 1, 119],"float16"), )
paddle.triu(Tensor([2, 18199014, 1, 118],"float16"), )
paddle.triu(Tensor([2, 18354562, 1, 117],"float16"), )
paddle.triu(Tensor([2, 18512791, 1, 116],"float16"), )
paddle.triu(Tensor([2, 18673771, 1, 115],"float16"), )
paddle.triu(Tensor([2, 18837576, 1, 114],"float16"), )
paddle.triu(Tensor([2, 19004281, 1, 113],"float16"), )
paddle.triu(Tensor([2, 19173962, 1, 112],"float16"), )
paddle.triu(Tensor([2, 19346700, 1, 111],"float16"), )
paddle.triu(Tensor([2, 19522579, 1, 110],"float16"), )
paddle.triu(Tensor([2, 19701685, 1, 109],"float16"), )
paddle.triu(Tensor([2, 19884108, 1, 108],"float16"), )
paddle.triu(Tensor([2, 20069941, 1, 107],"float16"), )
paddle.triu(Tensor([2, 20259280, 1, 106],"float16"), )
paddle.triu(Tensor([2, 20452226, 1, 105],"float16"), )
paddle.triu(Tensor([2, 20648882, 1, 104],"float16"), )
paddle.triu(Tensor([2, 20849356, 1, 103],"float16"), )
paddle.triu(Tensor([2, 21053762, 1, 102],"float16"), )
paddle.triu(Tensor([2, 21262215, 1, 101],"float16"), )
paddle.triu(Tensor([2, 21474837, 1, 100],"float16"), )
paddle.triu(Tensor([207427399, 1, 1, 11],"float32"), diagonal=1, )
paddle.triu(Tensor([22, 103713700],"float32"), diagonal=1, )
paddle.triu(Tensor([2228225, 1024],"float32"), diagonal=1, )
paddle.triu(Tensor([2281701379, 1, 1, 1],"float32"), diagonal=1, )
paddle.triu(Tensor([228170138, 1, 1, 10],"float32"), diagonal=1, )
paddle.triu(Tensor([23, 99204408],"float32"), diagonal=1, )
paddle.triu(Tensor([286331154, 1, 1, 15],"float16"), diagonal=1, )
paddle.triu(Tensor([29632486, 77],"float32"), 1, )
paddle.triu(Tensor([2970966, 768],"float32"), diagonal=1, )
paddle.triu(Tensor([30, 76056713],"float32"), diagonal=1, )
paddle.triu(Tensor([306783379, 1, 1, 14],"float16"), diagonal=1, )
paddle.triu(Tensor([325957340, 7],"float32"), 1, )
paddle.triu(Tensor([325957340, 7],"float32"), diagonal=1, )
paddle.triu(Tensor([330382100, 1, 1, 13],"float16"), diagonal=1, )
paddle.triu(Tensor([35204650, 1, 1, 122],"float16"), )
paddle.triu(Tensor([35495598, 1, 1, 121],"float16"), )
paddle.triu(Tensor([357913942, 1, 1, 12],"float16"), diagonal=1, )
paddle.triu(Tensor([35791395, 1, 1, 120],"float16"), )
paddle.triu(Tensor([36092163, 1, 1, 119],"float16"), )
paddle.triu(Tensor([36398028, 1, 1, 118],"float16"), )
paddle.triu(Tensor([36709123, 1, 1, 117],"float16"), )
paddle.triu(Tensor([37025581, 1, 1, 116],"float16"), )
paddle.triu(Tensor([37347542, 1, 1, 115],"float16"), )
paddle.triu(Tensor([37675152, 1, 1, 114],"float16"), )
paddle.triu(Tensor([38008561, 1, 1, 113],"float16"), )
paddle.triu(Tensor([38347923, 1, 1, 112],"float16"), )
paddle.triu(Tensor([38693400, 1, 1, 111],"float16"), )
paddle.triu(Tensor([390451573, 1, 1, 11],"float16"), diagonal=1, )
paddle.triu(Tensor([39045158, 1, 1, 110],"float16"), )
paddle.triu(Tensor([39403370, 1, 1, 109],"float16"), )
paddle.triu(Tensor([39768216, 1, 1, 108],"float16"), )
paddle.triu(Tensor([4, 570425345],"float32"), diagonal=1, )
paddle.triu(Tensor([40139882, 1, 1, 107],"float16"), )
paddle.triu(Tensor([40518560, 1, 1, 106],"float16"), )
paddle.triu(Tensor([40904451, 1, 1, 105],"float16"), )
paddle.triu(Tensor([41297763, 1, 1, 104],"float16"), )
paddle.triu(Tensor([41698712, 1, 1, 103],"float16"), )
paddle.triu(Tensor([42107523, 1, 1, 102],"float16"), )
paddle.triu(Tensor([42524429, 1, 1, 101],"float16"), )
paddle.triu(Tensor([42949673, 1, 1, 100],"float16"), )
paddle.triu(Tensor([429496730, 1, 1, 10],"float16"), diagonal=1, )
paddle.triu(Tensor([4456449, 512],"float32"), diagonal=1, )
paddle.triu(Tensor([448, 5093084],"float32"), diagonal=1, )
paddle.triu(Tensor([456340276, 5],"float32"), diagonal=1, )
paddle.triu(Tensor([46565335, 7, 7],"float32"), diagonal=1, )
paddle.triu(Tensor([5, 456340276],"float32"), diagonal=1, )
paddle.triu(Tensor([570425345, 4],"float32"), diagonal=1, )
paddle.triu(Tensor([5941931, 384],"float32"), diagonal=1, )
paddle.triu(Tensor([6, 380283564],"float32"), diagonal=1, )
paddle.triu(Tensor([7, 325957340],"float32"), 1, )
paddle.triu(Tensor([7130317, 2, 10, 16],"bool"), )
paddle.triu(Tensor([76056713, 1, 1, 30],"float32"), diagonal=1, )
paddle.triu(Tensor([76056713, 30],"float32"), diagonal=1, )
paddle.triu(Tensor([77, 29632486],"float32"), 1, )
paddle.triu(Tensor([78679358, 1, 1, 29],"float32"), diagonal=1, )
paddle.triu(Tensor([81489335, 1, 1, 28],"float32"), diagonal=1, )
paddle.triu(Tensor([84507459, 1, 1, 27],"float32"), diagonal=1, )
paddle.triu(Tensor([87757746, 1, 1, 26],"float32"), diagonal=1, )
paddle.triu(Tensor([91268056, 1, 1, 25],"float32"), diagonal=1, )
paddle.triu(Tensor([95070891, 1, 1, 24],"float32"), diagonal=1, )
paddle.triu(Tensor([99204408, 1, 1, 23],"float32"), diagonal=1, )
paddle.triu(Tensor([99204408, 23],"float32"), diagonal=1, )
paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=-1, )
paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=-5, )
paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=0, )
paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=1, )
paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=5, )
paddle.triu(x=Tensor([3, 2, 380283564],"float32"), diagonal=0, )
paddle.triu(x=Tensor([3, 2, 380283564],"int32"), diagonal=0, )
paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=-1, )
paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=-5, )
paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=0, )
paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=1, )
paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=5, )
paddle.triu(x=Tensor([3, 380283564, 2],"float32"), diagonal=0, )
paddle.triu(x=Tensor([3, 380283564, 2],"int32"), diagonal=0, )
paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=-1, )
paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=-5, )
paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=0, )
paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=1, )
paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=5, )
paddle.triu(x=Tensor([570425345, 2, 2],"float32"), diagonal=0, )
paddle.triu(x=Tensor([570425345, 2, 2],"int32"), diagonal=0, )
paddle.trunc(Tensor([10, 20, 11408507],"float32"), )
paddle.trunc(Tensor([10, 228170138, 1],"float32"), )
paddle.trunc(Tensor([114085069, 20, 1],"float32"), )
paddle.trunc(Tensor([114085069, 20],"float32"), )
paddle.trunc(Tensor([20, 114085069],"float32"), )
paddle.trunc(input=Tensor([119304648, 6, 6],"float16"), )
paddle.trunc(input=Tensor([19884108, 6, 6, 6],"float16"), )
paddle.trunc(input=Tensor([3, 6, 6, 6, 6628036],"float16"), )
paddle.trunc(input=Tensor([3, 6, 6, 6628036, 6],"float16"), )
paddle.trunc(input=Tensor([3, 6, 6628036, 6, 6],"float16"), )
paddle.trunc(input=Tensor([3, 6628036, 6, 6, 6],"float16"), )
paddle.trunc(input=Tensor([3314018, 6, 6, 6, 6],"float16"), )
paddle.trunc(input=Tensor([380283564, 6],"int32"), )
paddle.trunc(input=Tensor([6, 119304648, 6],"float16"), )
paddle.trunc(input=Tensor([6, 19884108, 6, 6],"float16"), )
paddle.trunc(input=Tensor([6, 380283564],"int32"), )
paddle.trunc(input=Tensor([6, 6, 119304648],"float16"), )
paddle.trunc(input=Tensor([6, 6, 19884108, 6],"float16"), )
paddle.trunc(input=Tensor([6, 6, 6, 19884108],"float16"), )
paddle.unbind(Tensor([2, 1140850690],"bool"), axis=0, )
paddle.unbind(Tensor([2, 1140850690],"float32"), 0, )
paddle.unbind(Tensor([2, 17825793, 8, 8],"float32"), axis=0, )
paddle.unbind(Tensor([2, 3, 47535446, 8],"float32"), axis=0, )
paddle.unbind(Tensor([2, 3, 8, 47535446],"float32"), axis=0, )
paddle.unbind(Tensor([3, 152113426, 5],"float32"), axis=0, )
paddle.unbind(Tensor([3, 2, 380283564],"int32"), axis=0, )
paddle.unbind(Tensor([3, 380283564, 2],"int32"), axis=0, )
paddle.unbind(Tensor([3, 9, 84507459],"float32"), axis=0, )
paddle.unbind(Tensor([357913942, 3, 2, 2],"float16"), axis=1, )
paddle.unbind(Tensor([380283564, 2, 3],"float32"), axis=-1, )
paddle.unbind(Tensor([380283564, 2, 3],"float32"), axis=2, )
paddle.unbind(Tensor([4, 190141782, 3],"float32"), axis=-1, )
paddle.unbind(Tensor([4, 190141782, 3],"float32"), axis=2, )
paddle.unbind(Tensor([4, 2, 285212673],"float32"), axis=-1, )
paddle.unbind(Tensor([4, 2, 285212673],"float32"), axis=2, )
paddle.unbind(Tensor([4, 3, 178956971, 2],"float16"), axis=1, )
paddle.unbind(Tensor([4, 3, 2, 178956971],"float16"), axis=1, )
paddle.unflatten(x=Tensor([4, 6, 178956971],"float16"), axis=0, shape=tuple(2,2,), )
paddle.unflatten(x=Tensor([4, 67108865, 16],"float16"), axis=0, shape=tuple(2,2,), )
paddle.unfold(Tensor([4294967297],"float16"), -1, 2, 5, )
paddle.unfold(Tensor([5, 858993460],"float16"), 0, 5, 1, )
paddle.unique_consecutive(x=Tensor([570425345, 4],"float32"), return_inverse=True, return_counts=True, axis=0, )
paddle.unique_consecutive(x=Tensor([6, 380283564],"float32"), return_inverse=True, return_counts=True, axis=0, )
paddle.unsqueeze(Tensor([1, 128, 17825793],"float32"), 2, )
paddle.unsqueeze(Tensor([1, 162978670, 14],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([1, 162978670, 14],"int32"), axis=-1, )
paddle.unsqueeze(Tensor([1, 2281701379],"float32"), 1, )
paddle.unsqueeze(Tensor([1, 2281701379],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([1, 2281701379],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1, 2281701379],"int64"), axis=1, )
paddle.unsqueeze(Tensor([1, 2281701379],"int64"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([1, 4294967297],"float16"), axis=2, )
paddle.unsqueeze(Tensor([1, 4294967297],"float16"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([1, 7, 325957340],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([1, 7, 325957340],"int32"), axis=-1, )
paddle.unsqueeze(Tensor([1, 71303169, 32],"float32"), 2, )
paddle.unsqueeze(Tensor([10, 20, 11408507],"float32"), -1, )
paddle.unsqueeze(Tensor([10, 228170138, 1],"float32"), -1, )
paddle.unsqueeze(Tensor([10, 228170138],"float32"), -1, )
paddle.unsqueeze(Tensor([10, 228170138],"float32"), 1, )
paddle.unsqueeze(Tensor([10, 228170138],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([100, 22817014],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([100, 22817014],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([101, 22591103],"float32"), 1, )
paddle.unsqueeze(Tensor([101, 22591103],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([102, 22369622],"float32"), 1, )
paddle.unsqueeze(Tensor([102, 22369622],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([103, 22152441],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([104, 21939437],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([104, 21939437],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1042, 2189733],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([105, 21730490],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([106, 21525485],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1060, 2152549],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1065, 2142443],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1069, 2134426],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([107, 21324312],"float32"), 1, )
paddle.unsqueeze(Tensor([107, 21324312],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1073741825, 4],"float16"), -1, )
paddle.unsqueeze(Tensor([1073741825, 4],"float16"), list[2,], )
paddle.unsqueeze(Tensor([108, 21126865],"float32"), 1, )
paddle.unsqueeze(Tensor([108, 21126865],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([11, 207427399],"float32"), 1, )
paddle.unsqueeze(Tensor([110, 20742740],"float32"), 1, )
paddle.unsqueeze(Tensor([114085069, 20, 1],"float32"), -1, )
paddle.unsqueeze(Tensor([114085069, 20],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([114085069, 20],"int64"), axis=2, )
paddle.unsqueeze(Tensor([1140850690, 2],"float32"), -1, )
paddle.unsqueeze(Tensor([115, 19840882],"float32"), 1, )
paddle.unsqueeze(Tensor([118, 19336453],"float32"), 1, )
paddle.unsqueeze(Tensor([12, 190141782],"float32"), 1, )
paddle.unsqueeze(Tensor([12, 190141782],"int32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([12, 357913942],"float16"), -1, )
paddle.unsqueeze(Tensor([124, 18400818],"float32"), 1, )
paddle.unsqueeze(Tensor([126, 18108742],"float32"), 1, )
paddle.unsqueeze(Tensor([13, 12536821, 14],"int32"), axis=0, )
paddle.unsqueeze(Tensor([13, 175515491, 1],"float32"), 1, )
paddle.unsqueeze(Tensor([13, 175515491],"float32"), 1, )
paddle.unsqueeze(Tensor([13, 175515491],"float32"), axis=list[1,3,], )
paddle.unsqueeze(Tensor([13, 175515491],"int32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([13, 21939437, 1, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 3, 58505164],"float32"), 1, )
paddle.unsqueeze(Tensor([13, 35103099, 1, 5],"float32"), 1, )
paddle.unsqueeze(Tensor([13, 4, 1, 1, 43878873],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 4, 1, 5484860, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 4, 3, 1, 14626291],"float32"), axis=3, )
paddle.unsqueeze(Tensor([13, 4, 3, 1828287, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([13, 4, 5, 1, 8775775],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 4, 5, 1096972, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 4, 5484860, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 4, 5484860, 1, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([13, 4387888, 5, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 5, 1, 35103099],"float32"), 1, )
paddle.unsqueeze(Tensor([13, 5, 35103099],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 5, 7020620, 5],"float32"), 1, )
paddle.unsqueeze(Tensor([13, 58505164, 3],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 7, 25073642],"float32"), 1, )
paddle.unsqueeze(Tensor([13, 7, 25073642],"int32"), axis=0, )
paddle.unsqueeze(Tensor([13, 7313146, 3, 1, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([133, 17155650],"float32"), 1, )
paddle.unsqueeze(Tensor([134217729, 17],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([134217729, 32],"float16"), list[1,], )
paddle.unsqueeze(Tensor([13581556, 168],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([13912814, 164],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([14, 162978670],"float32"), axis=0, )
paddle.unsqueeze(Tensor([14, 162978670],"float32"), axis=1, )
paddle.unsqueeze(Tensor([142606337, 16],"float32"), axis=0, )
paddle.unsqueeze(Tensor([142606337, 16],"float32"), list[1,], )
paddle.unsqueeze(Tensor([14260634, 160],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([14260634, 4, 5, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([1426064, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([1431655766, 3],"float16"), axis=2, )
paddle.unsqueeze(Tensor([146029, 125, 125],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([14626291, 156],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([14626291, 156],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([15011194, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([152113426, 15],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([152113426, 5, 3],"float32"), axis=2, )
paddle.unsqueeze(Tensor([15416902, 148],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([15845149, 144],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([158452, 3, 3, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([158452, 3, 40, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([16, 142606337],"float32"), axis=1, )
paddle.unsqueeze(Tensor([16297867, 140],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([162978670, 14],"float32"), axis=0, )
paddle.unsqueeze(Tensor([162978670, 14],"int32"), axis=0, )
paddle.unsqueeze(Tensor([162978670, 14],"int32"), axis=1, )
paddle.unsqueeze(Tensor([16777217, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([16777217, 256],"float16"), axis=1, )
paddle.unsqueeze(Tensor([171402, 26, 512],"float32"), axis=list[3,4,], )
paddle.unsqueeze(Tensor([175515491, 13],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([17825793, 128],"int32"), axis=2, )
paddle.unsqueeze(Tensor([17825793, 128],"int64"), 2, )
paddle.unsqueeze(Tensor([17825793, 128],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([17825793, 128],"int64"), axis=1, )
paddle.unsqueeze(Tensor([178258, 50, 256],"float32"), axis=2, )
paddle.unsqueeze(Tensor([1828287, 1248],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([1901418, 30, 40],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([2, 1024, 1114113],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2, 1114113, 1024],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2, 1140850690],"float32"), -1, )
paddle.unsqueeze(Tensor([2, 1140850690],"float32"), axis=0, )
paddle.unsqueeze(Tensor([2, 2, 570425345],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2, 2, 570425345],"int64"), axis=1, )
paddle.unsqueeze(Tensor([2, 2147483649],"float16"), axis=2, )
paddle.unsqueeze(Tensor([2, 2228225, 512],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2, 32, 35651585],"int32"), axis=-1, )
paddle.unsqueeze(Tensor([2, 32, 35651585],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2, 35651585, 32],"int32"), axis=-1, )
paddle.unsqueeze(Tensor([2, 35651585, 32],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2, 512, 2228225],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2, 570425345, 2],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2, 570425345, 2],"int64"), axis=1, )
paddle.unsqueeze(Tensor([20, 114085069],"int32"), axis=2, )
paddle.unsqueeze(Tensor([20, 114085069],"int64"), 2, )
paddle.unsqueeze(Tensor([20, 1782580, 64],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([20, 2852127, 40],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([20, 30, 3802836],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([20, 64, 1782580],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([20372334, 14, 8],"float32"), axis=0, )
paddle.unsqueeze(Tensor([207427399, 11],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([20742740, 110],"float32"), axis=0, )
paddle.unsqueeze(Tensor([2147483649, 2],"float16"), axis=2, )
paddle.unsqueeze(Tensor([2177, 1024, 1024],"int64"), 1, )
paddle.unsqueeze(Tensor([2177, 1024, 1024],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2228225, 32, 32],"int32"), axis=-1, )
paddle.unsqueeze(Tensor([2228225, 32, 32],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2281701379, 1],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([2281701379, 1],"int64"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([2281701379],"float32"), 1, )
paddle.unsqueeze(Tensor([2281701379],"float32"), axis=0, )
paddle.unsqueeze(Tensor([2281701379],"float32"), axis=list[0,2,], )
paddle.unsqueeze(Tensor([2281701379],"int64"), -1, )
paddle.unsqueeze(Tensor([2281701379],"int64"), 0, )
paddle.unsqueeze(Tensor([2281701379],"int64"), 1, )
paddle.unsqueeze(Tensor([2281701379],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2281701379],"int64"), axis=1, )
paddle.unsqueeze(Tensor([2281701379],"int64"), list[1,], )
paddle.unsqueeze(Tensor([228170138, 10],"float32"), Tensor([2],"int64"), )
paddle.unsqueeze(Tensor([228170138, 10],"float32"), axis=0, )
paddle.unsqueeze(Tensor([228170138, 10],"int32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([23282668, 7, 14],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([23282668, 7, 14],"int32"), axis=-1, )
paddle.unsqueeze(Tensor([23282668, 7, 14],"int32"), axis=0, )
paddle.unsqueeze(Tensor([23767723, 4, 3, 1, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([24, 95070891],"float32"), axis=1, )
paddle.unsqueeze(Tensor([24801102, 92],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([2616631, 872],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([27531842, 156],"float16"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([285212673, 8],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([285212673, 8],"float32"), list[1,], )
paddle.unsqueeze(Tensor([285212673, 8],"float32"), list[2,], )
paddle.unsqueeze(Tensor([28521268, 80],"float32"), 0, )
paddle.unsqueeze(Tensor([3, 1431655766],"float16"), axis=2, )
paddle.unsqueeze(Tensor([3, 158452, 3, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 158452, 40, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 19014179, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 2, 380283564],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3, 256, 2970966],"float32"), 0, )
paddle.unsqueeze(Tensor([3, 2970966, 256],"float32"), 0, )
paddle.unsqueeze(Tensor([3, 3, 158452, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 2112687, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 3, 2112687, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 3, 40, 2112687],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 40, 2112687, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 40, 40, 158452],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 40, 6338060],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 6338060, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 380283564, 2],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3, 40, 19014179],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 40, 40, 475355],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 40, 6338060, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 475355, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 6338060, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 760567127],"float32"), axis=0, )
paddle.unsqueeze(Tensor([32, 71303169],"float32"), axis=1, )
paddle.unsqueeze(Tensor([322639, 26, 512],"float16"), axis=list[3,4,], )
paddle.unsqueeze(Tensor([325957340, 7, 1],"float32"), 1, )
paddle.unsqueeze(Tensor([325957340, 7],"float32"), axis=list[1,3,], )
paddle.unsqueeze(Tensor([325957340, 7],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([325957340, 7],"int32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([3441481, 1248],"float16"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([34817, 256, 256],"float32"), 0, )
paddle.unsqueeze(Tensor([357913942, 12],"float16"), -1, )
paddle.unsqueeze(Tensor([36, 63380594],"float32"), axis=0, )
paddle.unsqueeze(Tensor([3656573, 624],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([39285, 241, 241],"float32"), axis=1, )
paddle.unsqueeze(Tensor([4, 1024, 557057],"int64"), 1, )
paddle.unsqueeze(Tensor([4, 1024, 557057],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4, 1073741825],"float16"), -1, )
paddle.unsqueeze(Tensor([4, 1073741825],"float16"), list[2,], )
paddle.unsqueeze(Tensor([4, 1114113, 512],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4, 125, 4563403],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4, 4563403, 125],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4, 512, 1114113],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([4, 512, 1114113],"int64"), 1, )
paddle.unsqueeze(Tensor([4, 512, 1114113],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4, 557057, 1024],"int64"), 1, )
paddle.unsqueeze(Tensor([4, 557057, 1024],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4, 570425345],"float32"), axis=1, )
paddle.unsqueeze(Tensor([4, 570425345],"float32"), list[1,], )
paddle.unsqueeze(Tensor([4, 570425345],"float32"), list[2,], )
paddle.unsqueeze(Tensor([4, 570425345],"int32"), axis=2, )
paddle.unsqueeze(Tensor([4, 570425345],"int64"), 2, )
paddle.unsqueeze(Tensor([4, 7042289, 81],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([416, 21426, 256],"float32"), axis=2, )
paddle.unsqueeze(Tensor([416, 50, 109698],"float32"), axis=2, )
paddle.unsqueeze(Tensor([4294967297, 1],"float16"), axis=2, )
paddle.unsqueeze(Tensor([4294967297, 1],"float16"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([4294967297],"float16"), axis=0, )
paddle.unsqueeze(Tensor([4294967297],"float16"), axis=list[0,2,], )
paddle.unsqueeze(Tensor([429496730, 10],"float16"), list[2,], )
paddle.unsqueeze(Tensor([4353, 512, 1024],"int64"), 1, )
paddle.unsqueeze(Tensor([4353, 512, 1024],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4456449, 512],"float32"), axis=1, )
paddle.unsqueeze(Tensor([456340276, 5],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([4563403, 500],"int32"), axis=2, )
paddle.unsqueeze(Tensor([4563403, 500],"int64"), 2, )
paddle.unsqueeze(Tensor([46684428, 92],"float16"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([475355, 3, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([475355, 40, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([4925422, 872],"float16"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([49602204, 46],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([498, 4581730],"float32"), 0, )
paddle.unsqueeze(Tensor([5, 456340276],"float32"), Tensor([2],"int64"), )
paddle.unsqueeze(Tensor([5, 456340276],"float32"), axis=0, )
paddle.unsqueeze(Tensor([5, 456340276],"int64"), axis=2, )
paddle.unsqueeze(Tensor([50, 45634028],"float32"), 0, )
paddle.unsqueeze(Tensor([5000, 456341],"float32"), 0, )
paddle.unsqueeze(Tensor([50704476, 45],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([512, 17409, 256],"float32"), axis=2, )
paddle.unsqueeze(Tensor([512, 4456449],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([512, 50, 89129],"float32"), axis=2, )
paddle.unsqueeze(Tensor([512, 8388609],"float16"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([51856850, 44],"float32"), axis=0, )
paddle.unsqueeze(Tensor([51856850, 44],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([52, 1096972, 5, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([52, 14, 3134206],"float32"), axis=0, )
paddle.unsqueeze(Tensor([52, 14626291, 3],"float32"), axis=2, )
paddle.unsqueeze(Tensor([52, 171402, 256],"float32"), axis=2, )
paddle.unsqueeze(Tensor([52, 1828287, 3, 1, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([52, 3, 14626291],"float32"), 1, )
paddle.unsqueeze(Tensor([52, 4, 1, 1, 10969719],"float32"), axis=2, )
paddle.unsqueeze(Tensor([52, 4, 1, 1371215, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([52, 4, 1371215, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([52, 4, 1371215, 1, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([52, 4, 3, 1, 3656573],"float32"), axis=3, )
paddle.unsqueeze(Tensor([52, 4, 3, 457072, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([52, 4, 5, 1, 2193944],"float32"), axis=2, )
paddle.unsqueeze(Tensor([52, 4, 5, 274243, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([52, 43878873, 1],"float32"), 1, )
paddle.unsqueeze(Tensor([52, 43878873],"float32"), axis=list[1,3,], )
paddle.unsqueeze(Tensor([52, 5, 1, 8775775],"float32"), 1, )
paddle.unsqueeze(Tensor([52, 5, 1755155, 5],"float32"), 1, )
paddle.unsqueeze(Tensor([52, 5, 8775775],"float32"), axis=2, )
paddle.unsqueeze(Tensor([52, 50, 877578],"float32"), axis=2, )
paddle.unsqueeze(Tensor([52, 5484860, 1, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([52, 5484860, 8],"float32"), axis=0, )
paddle.unsqueeze(Tensor([52, 7, 6268411],"float32"), 1, )
paddle.unsqueeze(Tensor([52, 8775775, 1, 5],"float32"), 1, )
paddle.unsqueeze(Tensor([55018, 512, 81],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([557057, 128, 32],"float32"), 2, )
paddle.unsqueeze(Tensor([557057, 64, 64],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([570425345, 2, 2],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([570425345, 2, 2],"int64"), axis=1, )
paddle.unsqueeze(Tensor([570425345, 4],"float32"), 1, )
paddle.unsqueeze(Tensor([570425345, 4],"float32"), list[2,], )
paddle.unsqueeze(Tensor([570425345, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([5941931, 384],"float32"), 0, )
paddle.unsqueeze(Tensor([64, 131073, 512],"float16"), axis=list[3,4,], )
paddle.unsqueeze(Tensor([64, 26, 1371215],"float32"), axis=list[3,4,], )
paddle.unsqueeze(Tensor([64, 26, 2581111],"float16"), axis=list[3,4,], )
paddle.unsqueeze(Tensor([64, 67108865],"float16"), axis=1, )
paddle.unsqueeze(Tensor([64, 69633, 512],"float32"), axis=list[3,4,], )
paddle.unsqueeze(Tensor([6882961, 624],"float16"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([7, 325957340],"float32"), axis=0, )
paddle.unsqueeze(Tensor([7, 325957340],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([7, 325957340],"int32"), axis=0, )
paddle.unsqueeze(Tensor([7, 325957340],"int32"), axis=1, )
paddle.unsqueeze(Tensor([71303169, 32],"float32"), axis=0, )
paddle.unsqueeze(Tensor([71303169, 32],"float32"), axis=1, )
paddle.unsqueeze(Tensor([71303169, 32],"float32"), list[1,], )
paddle.unsqueeze(Tensor([71303169, 4, 1, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([7456541, 306],"float32"), axis=0, )
paddle.unsqueeze(Tensor([760567127, 3, 1],"float32"), 1, )
paddle.unsqueeze(Tensor([760567127, 3],"float32"), -1, )
paddle.unsqueeze(Tensor([760567127, 3],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([8, 1183456, 241],"float32"), axis=1, )
paddle.unsqueeze(Tensor([8, 241, 1183456],"float32"), axis=1, )
paddle.unsqueeze(Tensor([8, 26, 10969719],"float32"), axis=list[3,4,], )
paddle.unsqueeze(Tensor([8, 285212673],"float32"), axis=1, )
paddle.unsqueeze(Tensor([8, 285212673],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([8, 285212673],"float32"), list[1,], )
paddle.unsqueeze(Tensor([8, 536870913],"float16"), list[1,], )
paddle.unsqueeze(Tensor([8, 536870913],"float16"), list[2,], )
paddle.unsqueeze(Tensor([8, 557057, 512],"float32"), axis=list[3,4,], )
paddle.unsqueeze(Tensor([81489335, 28],"float32"), axis=0, )
paddle.unsqueeze(Tensor([8705, 512, 512],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8912897, 256],"float32"), 0, )
paddle.unsqueeze(Tensor([8912897, 256],"float32"), axis=1, )
paddle.unsqueeze(Tensor([8912897, 256],"int64"), axis=1, )
paddle.unsqueeze(Tensor([91268056, 5, 1, 5],"float32"), 1, )
paddle.unsqueeze(x=Tensor([1431655766, 3],"float16"), axis=-1, )
paddle.unsqueeze(x=Tensor([1431655766, 3],"float16"), axis=1, )
paddle.unsqueeze(x=Tensor([1431655766, 3],"float16"), axis=Tensor([3],"int64"), )
paddle.unsqueeze(x=Tensor([1431655766, 3],"float16"), axis=list[0,1,], )
paddle.unsqueeze(x=Tensor([1431655766, 3],"float16"), axis=tuple(0,1,), )
paddle.unsqueeze(x=Tensor([1431655766, 3],"int8"), axis=1, )
paddle.unsqueeze(x=Tensor([2, 1140850690],"float32"), axis=1, )
paddle.unsqueeze(x=Tensor([2, 1140850690],"int32"), axis=1, )
paddle.unsqueeze(x=Tensor([2, 1140850690],"int64"), axis=1, )
paddle.unsqueeze(x=Tensor([2, 2147483649],"float16"), axis=-1, )
paddle.unsqueeze(x=Tensor([2, 2147483649],"float16"), axis=1, )
paddle.unsqueeze(x=Tensor([2, 2147483649],"float16"), axis=Tensor([3],"int64"), )
paddle.unsqueeze(x=Tensor([2, 2147483649],"float16"), axis=list[0,1,], )
paddle.unsqueeze(x=Tensor([2, 2147483649],"float16"), axis=tuple(0,1,), )
paddle.unsqueeze(x=Tensor([2, 2147483649],"int8"), axis=1, )
paddle.unsqueeze(x=Tensor([760567127, 3],"float32"), axis=1, )
paddle.unsqueeze(x=Tensor([760567127, 3],"int32"), axis=1, )
paddle.unsqueeze(x=Tensor([760567127, 3],"int64"), axis=1, )
paddle.unstack(Tensor([1, 4294967297],"float16"), 0, )
paddle.unstack(Tensor([1140850690, 2],"float32"), 1, )
paddle.unstack(Tensor([13, 87757746, 2],"float32"), axis=-1, )
paddle.unstack(Tensor([134217729, 4, 8],"float16"), )
paddle.unstack(Tensor([15211343, 10, 15],"float32"), axis=-1, )
paddle.unstack(Tensor([15211343, 10, 15],"float32"), axis=-2, )
paddle.unstack(Tensor([15211343, 10, 15],"float32"), axis=1, )
paddle.unstack(Tensor([15211343, 10, 15],"float32"), axis=2, )
paddle.unstack(Tensor([162978670, 7, 2],"float32"), axis=-1, )
paddle.unstack(Tensor([2147483649, 2],"float16"), 1, )
paddle.unstack(Tensor([3, 2, 380283564],"int32"), axis=0, )
paddle.unstack(Tensor([3, 380283564, 2],"int32"), axis=0, )
paddle.unstack(Tensor([3, 760567127],"float32"), 1, )
paddle.unstack(Tensor([380283564, 2, 3],"float32"), axis=-1, )
paddle.unstack(Tensor([380283564, 2, 3],"float32"), axis=2, )
paddle.unstack(Tensor([4, 190141782, 3],"float32"), axis=-1, )
paddle.unstack(Tensor([4, 190141782, 3],"float32"), axis=2, )
paddle.unstack(Tensor([5, 10, 45634028],"float32"), axis=-2, )
paddle.unstack(Tensor([5, 10, 45634028],"float32"), axis=-3, )
paddle.unstack(Tensor([5, 10, 45634028],"float32"), axis=0, )
paddle.unstack(Tensor([5, 10, 45634028],"float32"), axis=1, )
paddle.unstack(Tensor([5, 30422686, 15],"float32"), axis=-1, )
paddle.unstack(Tensor([5, 30422686, 15],"float32"), axis=-3, )
paddle.unstack(Tensor([5, 30422686, 15],"float32"), axis=0, )
paddle.unstack(Tensor([5, 30422686, 15],"float32"), axis=2, )
paddle.unstack(x=Tensor([13, 87757746, 2],"float32"), axis=-1, )
paddle.unstack(x=Tensor([139265, 32, 512],"float32"), axis=0, )
paddle.unstack(x=Tensor([162978670, 7, 2],"float32"), axis=-1, )
paddle.unstack(x=Tensor([2, 1, 1140850690],"float32"), axis=0, )
paddle.unstack(x=Tensor([2, 13, 87757746],"float32"), axis=0, )
paddle.unstack(x=Tensor([2, 14, 81489335],"float32"), axis=0, )
paddle.unstack(x=Tensor([2, 142606337, 8],"float32"), axis=0, )
paddle.unstack(x=Tensor([2, 162978670, 7],"float32"), axis=0, )
paddle.unstack(x=Tensor([2, 2, 570425345],"float32"), axis=0, )
paddle.unstack(x=Tensor([2, 2228225, 512],"float32"), axis=0, )
paddle.unstack(x=Tensor([2, 32, 35651585],"float32"), axis=0, )
paddle.unstack(x=Tensor([2, 51856850, 22],"float32"), axis=0, )
paddle.unstack(x=Tensor([2, 570425345, 2],"float32"), axis=-1, )
paddle.unstack(x=Tensor([2, 57042535, 20],"float32"), axis=0, )
paddle.vander(Tensor([2281701379],"float32"), 0, False, )
paddle.vander(Tensor([2281701379],"float32"), 0, True, )
paddle.vander(Tensor([2281701379],"float32"), 1, False, )
paddle.vander(Tensor([2281701379],"float32"), 1, True, )
paddle.vander(Tensor([2281701379],"float32"), 2, True, )
paddle.var(Tensor([1, 107374183, 4, 10],"float16"), 2, True, False, )
paddle.var(Tensor([1, 107374183, 4, 10],"float16"), list[1,2,], True, False, )
paddle.var(Tensor([1, 107374183, 4, 10],"float16"), list[1,3,], False, False, )
paddle.var(Tensor([1, 107374183, 4, 10],"float16"), list[1,3,], True, False, )
paddle.var(Tensor([1, 107374183, 4, 10],"float16"), tuple(1,3,), True, False, )
paddle.var(Tensor([1, 3, 143165577, 10],"float16"), 2, True, False, )
paddle.var(Tensor([1, 3, 143165577, 10],"float16"), list[1,2,], True, False, )
paddle.var(Tensor([1, 3, 143165577, 10],"float16"), list[1,3,], False, False, )
paddle.var(Tensor([1, 3, 143165577, 10],"float16"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 143165577, 10],"float16"), tuple(1,3,), True, False, )
paddle.var(Tensor([1, 3, 4, 190141782],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 4, 357913942],"float16"), 2, True, False, )
paddle.var(Tensor([1, 3, 4, 357913942],"float16"), list[1,2,], True, False, )
paddle.var(Tensor([1, 3, 4, 357913942],"float16"), list[1,3,], False, False, )
paddle.var(Tensor([1, 3, 4, 357913942],"float16"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 4, 357913942],"float16"), tuple(1,3,), True, False, )
paddle.var(Tensor([1, 3, 76056713, 10],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([1, 57042535, 4, 10],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([10563433, 24, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([11883862, 192, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([142606337, 16, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([15845149, 16, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 142606337, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 142606337],"float32"), axis=-1, keepdim=True, )
paddle.var(Tensor([16, 15845149, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 16, 2970966, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 16, 3, 2970966],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 268435457],"float16"), axis=-1, keepdim=True, )
paddle.var(Tensor([16, 32, 1, 4456449],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 32, 4456449, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 8, 1, 17825793],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 8, 17825793, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16777217, 256],"float16"), axis=-1, keepdim=True, )
paddle.var(Tensor([19014179, 3, 4, 10],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([192, 11883862, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([192, 48, 1, 247581],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([192, 48, 247581, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([192, 96, 1, 123791],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([192, 96, 123791, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([2281701379],"float32"), )
paddle.var(Tensor([23767723, 96, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 10563433, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 24, 1320430, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 24, 3, 1320430],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 64, 1, 1485483],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 64, 1485483, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 95070891, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 96, 1, 990322],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 96, 990322, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([285212673, 8, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([32, 16, 1, 4456449],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([32, 16, 4456449, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([32, 71303169, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([32, 8, 1, 8912897],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([32, 8, 8912897, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([35651585, 64, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([35791395, 3, 4, 10],"float16"), 2, True, False, )
paddle.var(Tensor([35791395, 3, 4, 10],"float16"), list[1,2,], True, False, )
paddle.var(Tensor([35791395, 3, 4, 10],"float16"), list[1,3,], False, False, )
paddle.var(Tensor([35791395, 3, 4, 10],"float16"), list[1,3,], True, False, )
paddle.var(Tensor([35791395, 3, 4, 10],"float16"), tuple(1,3,), True, False, )
paddle.var(Tensor([384, 192, 1, 30948],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([384, 192, 30948, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([384, 5941931, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([384, 96, 1, 61896],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([384, 96, 61896, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([47535446, 48, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([48, 192, 1, 247581],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([48, 192, 247581, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([48, 47535446, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([71303169, 32, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([8912897, 256],"float32"), axis=-1, keepdim=True, )
paddle.var(x=Tensor([11883862, 96, 2],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([13, 175515491, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([13, 96, 1828287],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([1431655766, 3],"float16"), )
paddle.var(x=Tensor([16, 142606337, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([16, 71303169, 2],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([16, 96, 1485483],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([2, 1140850690],"float32"), )
paddle.var(x=Tensor([2, 2147483649],"float16"), )
paddle.var(x=Tensor([2, 570425345, 2],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([2, 96, 11883862],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([23767723, 96, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([3, 3, 477218589],"float16"), )
paddle.var(x=Tensor([3, 3, 477218589],"float16"), axis=0, )
paddle.var(x=Tensor([3, 3, 477218589],"float16"), axis=0, unbiased=False, )
paddle.var(x=Tensor([3, 3, 477218589],"float16"), axis=list[0,1,], )
paddle.var(x=Tensor([3, 3, 477218589],"float16"), axis=tuple(0,1,), )
paddle.var(x=Tensor([3, 3, 477218589],"float16"), axis=tuple(0,1,), keepdim=True, )
paddle.var(x=Tensor([3, 477218589, 3],"float16"), )
paddle.var(x=Tensor([3, 477218589, 3],"float16"), axis=0, )
paddle.var(x=Tensor([3, 477218589, 3],"float16"), axis=0, unbiased=False, )
paddle.var(x=Tensor([3, 477218589, 3],"float16"), axis=list[0,1,], )
paddle.var(x=Tensor([3, 477218589, 3],"float16"), axis=tuple(0,1,), )
paddle.var(x=Tensor([3, 477218589, 3],"float16"), axis=tuple(0,1,), keepdim=True, )
paddle.var(x=Tensor([3, 760567127, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([3, 96, 7922575],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([477218589, 3, 3],"float16"), )
paddle.var(x=Tensor([477218589, 3, 3],"float16"), axis=0, )
paddle.var(x=Tensor([477218589, 3, 3],"float16"), axis=0, unbiased=False, )
paddle.var(x=Tensor([477218589, 3, 3],"float16"), axis=list[0,1,], )
paddle.var(x=Tensor([477218589, 3, 3],"float16"), axis=tuple(0,1,), )
paddle.var(x=Tensor([477218589, 3, 3],"float16"), axis=tuple(0,1,), keepdim=True, )
paddle.var(x=Tensor([760567127, 3],"float32"), )
paddle.vecdot(Tensor([1073741825, 4],"float16"), Tensor([1073741825, 4],"float16"), axis=-1, )
paddle.vecdot(Tensor([1140850690, 2],"float32"), Tensor([2],"float32"), axis=-1, )
paddle.vecdot(Tensor([2, 3, 715827883],"float16"), Tensor([2, 3, 715827883],"float16"), axis=-1, )
paddle.vecdot(Tensor([2, 536870913, 4],"float16"), Tensor([2, 536870913, 4],"float16"), axis=-1, )
paddle.vecdot(Tensor([214748365, 4, 5],"float16"), Tensor([214748365, 4, 5],"float16"), axis=1, )
paddle.vecdot(Tensor([2],"float32"), Tensor([1140850690, 2],"float32"), axis=-1, )
paddle.vecdot(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), axis=-1, )
paddle.vecdot(Tensor([3, 286331154, 5],"float16"), Tensor([3, 286331154, 5],"float16"), axis=1, )
paddle.vecdot(Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 357913942],"float16"), axis=1, )
paddle.vecdot(Tensor([3, 760567127],"float32"), Tensor([3, 760567127],"float32"), axis=-1, )
paddle.vecdot(Tensor([357913942, 3, 4],"float16"), Tensor([357913942, 3, 4],"float16"), axis=-1, )
paddle.vecdot(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), axis=-1, )
paddle.view(Tensor([10, 10, 10, 2281702],"float32"), list[-1,], )
paddle.view(Tensor([10, 10, 10, 2281702],"float32"), list[10,100,-1,], )
paddle.view(Tensor([10, 10, 10, 2281702],"float32"), list[1000,-1,], )
paddle.view(Tensor([10, 10, 1140851, 20],"float32"), list[-1,], )
paddle.view(Tensor([10, 10, 1140851, 20],"float32"), list[10,100,-1,], )
paddle.view(Tensor([10, 10, 1140851, 20],"float32"), list[1000,-1,], )
paddle.view(Tensor([10, 1140851, 10, 20],"float32"), list[-1,], )
paddle.view(Tensor([10, 1140851, 10, 20],"float32"), list[10,100,-1,], )
paddle.view(Tensor([10, 1140851, 10, 20],"float32"), list[1000,-1,], )
paddle.view(Tensor([1140851, 10, 10, 20],"float32"), list[-1,], )
paddle.view(Tensor([1140851, 10, 10, 20],"float32"), list[10,100,-1,], )
paddle.view(Tensor([1140851, 10, 10, 20],"float32"), list[1000,-1,], )
paddle.vision.ops.deform_conv2d(Tensor([2, 3, 5, 5],"float32"), Tensor([2, 18, 5, 5],"float32"), Tensor([84507459, 3, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 1, Tensor([2, 9, 5, 5],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([2, 3, 5, 5],"float32"), Tensor([2, 18, 5, 5],"float32"), Tensor([84507459, 3, 3, 3],"float32"), None, list[2,2,], list[3,3,], list[1,1,], 1, 1, None, )
paddle.vision.ops.deform_conv2d(Tensor([2, 4, 4, 4],"float32"), Tensor([2, 18, 4, 4],"float32"), Tensor([63380594, 4, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 1, None, )
paddle.vision.ops.deform_conv2d(Tensor([2, 45634028, 5, 5],"float32"), Tensor([2, 45634028, 5, 5],"float32"), Tensor([40, 45634028, 1, 1],"float32"), None, list[1,1,], list[0,0,], list[1,1,], 1, 1, None, )
paddle.vision.ops.deform_conv2d(Tensor([2, 8, 4, 4],"float32"), Tensor([2, 18, 4, 4],"float32"), Tensor([63380594, 4, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 2, None, )
paddle.vision.ops.deform_conv2d(Tensor([2, 8, 4, 4],"float32"), Tensor([2, 18, 4, 4],"float32"), Tensor([63380594, 4, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 2, Tensor([2, 9, 4, 4],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([4, 3, 4, 4],"float32"), Tensor([4, 18, 4, 4],"float32"), Tensor([84507459, 3, 3, 3],"float32"), None, list[1,1,], list[2,2,], list[2,2,], 1, 1, Tensor([4, 9, 4, 4],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([12, 512, 10, 10],"float32"), offset=Tensor([12, 18, 10, 10],"float32"), weight=Tensor([495161, 512, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([12, 9, 10, 10],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([12, 512, 20, 20],"float32"), offset=Tensor([12, 18, 10, 10],"float32"), weight=Tensor([495161, 512, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([12, 9, 10, 10],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 2, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), weight=Tensor([126761188, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 2, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), weight=Tensor([126761188, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 2, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), weight=Tensor([126761188, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 3, 3],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([446, 128, 200, 200],"float32"), offset=Tensor([446, 36, 100, 100],"float32"), weight=Tensor([446, 128, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([446, 18, 100, 100],"float32"), )
paddle.vision.ops.roi_align(x=Tensor([1, 1, 4, 570425345],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=1, spatial_scale=1.0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 1, 570425345, 4],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=1, spatial_scale=1.0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 1901418, 40, 30],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 21126865, 12, 9],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.015625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 89129],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 89129],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 89129],"float32"), boxes=Tensor([159, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 12, 742742],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.015625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 148549, 60],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 148549, 60],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 148549, 60],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 165054, 54],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 178258, 50],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 445645],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 445645],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 445645],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 445645],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 445645],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 445645],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 445645],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 445645],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 445645],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 278529, 32],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(4,3,), spatial_scale=1.0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 297097, 30],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 297097, 30],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 297097, 30],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 297097, 30],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 297097, 30],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 297097, 30],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 32, 278529],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(4,3,), spatial_scale=1.0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 330108, 27],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 330108, 27],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 330108, 27],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 36, 247581],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 222823],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 222823],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 222823],"float32"), boxes=Tensor([119, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 222823],"float32"), boxes=Tensor([142, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 222823],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 222823],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 594194, 15],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 990322, 9],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.015625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 3802836, 20, 30],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 3802836, 20, 30],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 4225373, 20, 27],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 4225373, 20, 27],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 7605672, 20, 15],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 950709, 40, 60],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 950709, 40, 60],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([142606337, 1, 4, 4],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=1, spatial_scale=1.0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([14855, 256, 20, 30],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([14855, 256, 20, 30],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([14855, 256, 20, 30],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([14855, 256, 20, 30],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([14855, 256, 20, 30],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([16506, 256, 20, 27],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([16506, 256, 20, 27],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([16506, 256, 20, 27],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([233, 256, 160, 240],"float32"), boxes=Tensor([113, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([233, 256, 160, 240],"float32"), boxes=Tensor([145, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([258, 256, 160, 216],"float32"), boxes=Tensor([200, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([258, 256, 160, 216],"float32"), boxes=Tensor([208, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([29710, 256, 20, 15],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([310, 256, 144, 200],"float32"), boxes=Tensor([462, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([3714, 256, 40, 60],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([3714, 256, 40, 60],"float32"), boxes=Tensor([142, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([3714, 256, 40, 60],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([3714, 256, 40, 60],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4127, 256, 40, 54],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4127, 256, 40, 54],"float32"), boxes=Tensor([119, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4952, 256, 36, 50],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([587, 256, 100, 152],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([587, 256, 100, 152],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([587, 256, 100, 152],"float32"), boxes=Tensor([124, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([587, 256, 100, 152],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([587, 256, 100, 152],"float32"), boxes=Tensor([159, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([734, 1024, 44, 69],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([7428, 256, 40, 30],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([768, 1024, 44, 66],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([82527, 256, 12, 9],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.015625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([843, 1024, 42, 63],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([859, 1024, 44, 59],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8705, 256, 32, 32],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(4,3,), spatial_scale=1.0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([929, 1024, 40, 60],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_pool(Tensor([1, 256, 278529, 32],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=3, )
paddle.vision.ops.roi_pool(Tensor([1, 256, 278529, 32],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(3,4,), )
paddle.vision.ops.roi_pool(Tensor([1, 256, 32, 278529],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=3, )
paddle.vision.ops.roi_pool(Tensor([1, 256, 32, 278529],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(3,4,), )
paddle.vision.ops.roi_pool(Tensor([8705, 256, 32, 32],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=3, )
paddle.vision.ops.roi_pool(Tensor([8705, 256, 32, 32],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(3,4,), )
paddle.vision.ops.roi_pool(x=Tensor([1, 1, 4, 570425345],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=1, spatial_scale=1.0, )
paddle.vision.ops.roi_pool(x=Tensor([1, 1, 570425345, 4],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=1, spatial_scale=1.0, )
paddle.vision.ops.roi_pool(x=Tensor([1, 256, 278529, 32],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(4,3,), spatial_scale=1.0, )
paddle.vision.ops.roi_pool(x=Tensor([1, 256, 32, 278529],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(4,3,), spatial_scale=1.0, )
paddle.vision.ops.roi_pool(x=Tensor([142606337, 1, 4, 4],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=1, spatial_scale=1.0, )
paddle.vision.ops.roi_pool(x=Tensor([8705, 256, 32, 32],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(4,3,), spatial_scale=1.0, )
paddle.vsplit(Tensor([190141782, 4, 3],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([190141782, 4, 3],"int64"), list[-1,], )
paddle.vsplit(Tensor([190141782, 4, 3],"int64"), list[2,4,], )
paddle.vsplit(Tensor([190141782, 4, 3],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([570425345, 4],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([570425345, 4],"int64"), list[-1,], )
paddle.vsplit(Tensor([570425345, 4],"int64"), list[2,4,], )
paddle.vsplit(Tensor([570425345, 4],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([6, 126761188, 3],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([6, 126761188, 3],"int64"), list[-1,], )
paddle.vsplit(Tensor([6, 126761188, 3],"int64"), list[2,4,], )
paddle.vsplit(Tensor([6, 126761188, 3],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([6, 380283564],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([6, 380283564],"int64"), list[-1,], )
paddle.vsplit(Tensor([6, 380283564],"int64"), list[2,4,], )
paddle.vsplit(Tensor([6, 380283564],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([6, 4, 95070891],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([6, 4, 95070891],"int64"), list[-1,], )
paddle.vsplit(Tensor([6, 4, 95070891],"int64"), list[2,4,], )
paddle.vsplit(Tensor([6, 4, 95070891],"int64"), tuple(2,1,3,), )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 4294967297],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 1, 4294967297],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 4294967297, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 4294967297, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 4294967297],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 4294967297],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),Tensor([4294967297, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),Tensor([4294967297, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([1, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 4294967297, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 4294967297, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 4294967297, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 4294967297, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),], )
paddle.vstack(list[Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 4294967297],"float16"),], )
paddle.vstack(list[Tensor([1, 4294967297],"float16"),], name=None, )
paddle.vstack(list[Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.vstack(list[Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([107374183, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], )
paddle.vstack(list[Tensor([107374183, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.vstack(list[Tensor([107374183, 4, 2, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),], )
paddle.vstack(list[Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([2147483649, 2],"float16"),Tensor([3, 2],"float16"),Tensor([3, 2],"float16"),], )
paddle.vstack(list[Tensor([2147483649, 2],"float16"),Tensor([3, 2],"float16"),Tensor([3, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([2147483649, 2],"float16"),], )
paddle.vstack(list[Tensor([2147483649, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([2],"float16"),Tensor([2147483649, 2],"float16"),], )
paddle.vstack(list[Tensor([2],"float16"),Tensor([2147483649, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),], )
paddle.vstack(list[Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 1431655766],"float16"),], )
paddle.vstack(list[Tensor([3, 1431655766],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),], )
paddle.vstack(list[Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 143165577, 2, 5],"float16"),], )
paddle.vstack(list[Tensor([3, 143165577, 2, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 2],"float16"),Tensor([2147483649, 2],"float16"),Tensor([3, 2],"float16"),], )
paddle.vstack(list[Tensor([3, 2],"float16"),Tensor([2147483649, 2],"float16"),Tensor([3, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 2],"float16"),Tensor([3, 2],"float16"),Tensor([2147483649, 2],"float16"),], )
paddle.vstack(list[Tensor([3, 2],"float16"),Tensor([3, 2],"float16"),Tensor([2147483649, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 178956971],"float16"),Tensor([3, 4, 2, 178956971],"float16"),Tensor([3, 4, 2, 178956971],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 2, 178956971],"float16"),Tensor([3, 4, 2, 178956971],"float16"),Tensor([3, 4, 2, 178956971],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 178956971],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 2, 178956971],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 357913942],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 357913942],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 71582789, 5],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 71582789, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),], )
paddle.vstack(list[Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 715827883, 2],"float16"),], )
paddle.vstack(list[Tensor([3, 715827883, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1],"float16"),Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1],"float16"),Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),], )
paddle.vstack(list[Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297],"float16"),], )
paddle.vstack(list[Tensor([4294967297],"float16"),], name=None, )
paddle.vstack(list[Tensor([536870913, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),], )
paddle.vstack(list[Tensor([536870913, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),], )
paddle.vstack(list[Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([536870913, 4, 2],"float16"),], )
paddle.vstack(list[Tensor([536870913, 4, 2],"float16"),], name=None, )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 1, 2281701379],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 2281701379, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 2281701379, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([2281701379, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([1, 1, 1, 2281701379],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([1, 1, 1, 2281701379],"bool"), Tensor([1, 1, 1, 2281701379],"float32"), Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.where(Tensor([1, 1, 1, 23],"bool"), Tensor([1, 1, 1, 23],"float32"), Tensor([1, 1, 99204408, 23],"float32"), )
paddle.where(Tensor([1, 1, 1, 23],"bool"), Tensor([1, 1, 1, 23],"float32"), Tensor([1, 99204408, 1, 23],"float32"), )
paddle.where(Tensor([1, 1, 1, 23],"bool"), Tensor([1, 1, 1, 23],"float32"), Tensor([99204408, 1, 1, 23],"float32"), )
paddle.where(Tensor([1, 1, 1, 23],"bool"), Tensor([1, 1, 99204408, 23],"float32"), Tensor([1, 1, 1, 23],"float32"), )
paddle.where(Tensor([1, 1, 1, 23],"bool"), Tensor([1, 99204408, 1, 23],"float32"), Tensor([1, 1, 1, 23],"float32"), )
paddle.where(Tensor([1, 1, 1, 23],"bool"), Tensor([99204408, 1, 1, 23],"float32"), Tensor([1, 1, 1, 23],"float32"), )
paddle.where(Tensor([1, 1, 1, 24],"bool"), Tensor([1, 1, 1, 24],"float32"), Tensor([1, 1, 95070891, 24],"float32"), )
paddle.where(Tensor([1, 1, 1, 24],"bool"), Tensor([1, 1, 1, 24],"float32"), Tensor([1, 95070891, 1, 24],"float32"), )
paddle.where(Tensor([1, 1, 1, 24],"bool"), Tensor([1, 1, 1, 24],"float32"), Tensor([95070891, 1, 1, 24],"float32"), )
paddle.where(Tensor([1, 1, 1, 24],"bool"), Tensor([1, 1, 95070891, 24],"float32"), Tensor([1, 1, 1, 24],"float32"), )
paddle.where(Tensor([1, 1, 1, 24],"bool"), Tensor([1, 95070891, 1, 24],"float32"), Tensor([1, 1, 1, 24],"float32"), )
paddle.where(Tensor([1, 1, 1, 24],"bool"), Tensor([95070891, 1, 1, 24],"float32"), Tensor([1, 1, 1, 24],"float32"), )
paddle.where(Tensor([1, 1, 10285],"bool"), Tensor([1, 1, 10285],"float32"), Tensor([1, 221848, 10285],"float32"), )
paddle.where(Tensor([1, 1, 10285],"bool"), Tensor([1, 1, 10285],"float32"), Tensor([221848, 1, 10285],"float32"), )
paddle.where(Tensor([1, 1, 10285],"bool"), Tensor([1, 221848, 10285],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.where(Tensor([1, 1, 10285],"bool"), Tensor([221848, 1, 10285],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 1, 24276],"float32"), Tensor([1, 93991, 24276],"float32"), )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 1, 24276],"float32"), Tensor([93991, 1, 24276],"float32"), )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 1, 27216],"float32"), Tensor([1, 83837, 27216],"float32"), )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 1, 27216],"float32"), Tensor([83837, 1, 27216],"float32"), )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 83837, 27216],"float32"), Tensor([1, 1, 27216],"float32"), )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 93991, 24276],"float32"), Tensor([1, 1, 24276],"float32"), )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([83837, 1, 27216],"float32"), Tensor([1, 1, 27216],"float32"), )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([93991, 1, 24276],"float32"), Tensor([1, 1, 24276],"float32"), )
paddle.where(Tensor([1, 1, 2281701379, 1],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([1, 1, 2281701379, 1],"bool"), Tensor([1, 1, 2281701379, 1],"float32"), Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.where(Tensor([1, 1, 2281701379],"bool"), Tensor([1, 1, 2281701379],"float32"), Tensor([1, 1, 2281701379],"float32"), )
paddle.where(Tensor([1, 1, 95070891, 24],"bool"), Tensor([1, 1, 1, 24],"float32"), Tensor([1, 1, 1, 24],"float32"), )
paddle.where(Tensor([1, 1, 95070891, 24],"bool"), Tensor([1, 1, 95070891, 24],"float32"), Tensor([1, 1, 95070891, 24],"float32"), )
paddle.where(Tensor([1, 1, 99204408, 23],"bool"), Tensor([1, 1, 1, 23],"float32"), Tensor([1, 1, 1, 23],"float32"), )
paddle.where(Tensor([1, 1, 99204408, 23],"bool"), Tensor([1, 1, 99204408, 23],"float32"), Tensor([1, 1, 99204408, 23],"float32"), )
paddle.where(Tensor([1, 1001],"bool"), Tensor([1, 1001],"float32"), Tensor([2279422, 1001],"float32"), )
paddle.where(Tensor([1, 1001],"bool"), Tensor([1, 1001],"int32"), Tensor([2279422, 1001],"int32"), )
paddle.where(Tensor([1, 1001],"bool"), Tensor([2279422, 1001],"float32"), Tensor([1, 1001],"float32"), )
paddle.where(Tensor([1, 1001],"bool"), Tensor([2279422, 1001],"int32"), Tensor([1, 1001],"int32"), )
paddle.where(Tensor([1, 1002],"bool"), Tensor([1, 1002],"float32"), Tensor([2277148, 1002],"float32"), )
paddle.where(Tensor([1, 1002],"bool"), Tensor([2277148, 1002],"float32"), Tensor([1, 1002],"float32"), )
paddle.where(Tensor([1, 221848, 10285],"bool"), Tensor([1, 1, 10285],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.where(Tensor([1, 221848, 10285],"bool"), Tensor([1, 221848, 10285],"float32"), Tensor([1, 221848, 10285],"float32"), )
paddle.where(Tensor([1, 2281701379, 1, 1],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([1, 2281701379, 1, 1],"bool"), Tensor([1, 2281701379, 1, 1],"float32"), Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.where(Tensor([1, 2281701379],"bool"), Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.where(Tensor([1, 2281701379],"bool"), Tensor([1, 2281701379],"int32"), Tensor([1, 2281701379],"int32"), )
paddle.where(Tensor([1, 3],"bool"), Tensor([760567127, 3],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([1, 95070891, 1, 24],"bool"), Tensor([1, 1, 1, 24],"float32"), Tensor([1, 1, 1, 24],"float32"), )
paddle.where(Tensor([1, 95070891, 1, 24],"bool"), Tensor([1, 95070891, 1, 24],"float32"), Tensor([1, 95070891, 1, 24],"float32"), )
paddle.where(Tensor([1, 99204408, 1, 23],"bool"), Tensor([1, 1, 1, 23],"float32"), Tensor([1, 1, 1, 23],"float32"), )
paddle.where(Tensor([1, 99204408, 1, 23],"bool"), Tensor([1, 99204408, 1, 23],"float32"), Tensor([1, 99204408, 1, 23],"float32"), )
paddle.where(Tensor([142606337, 2, 2, 4],"bool"), Tensor([2, 2, 1],"float32"), Tensor([2, 2, 1],"float32"), )
paddle.where(Tensor([142606337, 2, 2, 4],"bool"), Tensor([2, 2, 4],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.where(Tensor([19014179, 120],"bool"), Tensor([120],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([221848, 1, 10285],"bool"), Tensor([1, 1, 10285],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.where(Tensor([221848, 1, 10285],"bool"), Tensor([221848, 1, 10285],"float32"), Tensor([221848, 1, 10285],"float32"), )
paddle.where(Tensor([2277148, 1002],"bool"), Tensor([1, 1002],"float32"), Tensor([1, 1002],"float32"), )
paddle.where(Tensor([2277148, 1002],"bool"), Tensor([2277148, 1002],"float32"), Tensor([2277148, 1002],"float32"), )
paddle.where(Tensor([2279422, 1001],"bool"), Tensor([1, 1001],"float32"), Tensor([1, 1001],"float32"), )
paddle.where(Tensor([2279422, 1001],"bool"), Tensor([1, 1001],"int32"), Tensor([1, 1001],"int32"), )
paddle.where(Tensor([2279422, 1001],"bool"), Tensor([2279422, 1001],"float32"), Tensor([2279422, 1001],"float32"), )
paddle.where(Tensor([2279422, 1001],"bool"), Tensor([2279422, 1001],"int32"), Tensor([2279422, 1001],"int32"), )
paddle.where(Tensor([2281701379, 1, 1, 1],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([2281701379, 1, 1, 1],"bool"), Tensor([2281701379, 1, 1, 1],"float32"), Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.where(Tensor([2281701379],"bool"), )
paddle.where(Tensor([2281701379],"bool"), Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.where(Tensor([289, 280, 376, 25, 3],"bool"), Tensor([289, 280, 376, 25, 3],"float32"), Tensor([289, 280, 376, 25, 3],"float32"), )
paddle.where(Tensor([3, 1],"bool"), Tensor([3, 760567127],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([3, 2, 2, 190141782],"bool"), Tensor([2, 2, 1],"float32"), Tensor([2, 2, 1],"float32"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 2],"bool"), Tensor([3, 2, 3, 4, 5, 1, 2],"float16"), Tensor([3, 2, 3, 4, 5, 5965233, 2],"float16"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 2],"bool"), Tensor([3, 2, 3, 4, 5, 5965233, 2],"float16"), Tensor([3, 2, 3, 4, 5, 1, 2],"float16"), )
paddle.where(Tensor([3, 6, 3, 1, 2, 5],"bool"), Tensor([3, 6, 3, 1, 2, 5],"float16"), Tensor([3, 6, 3, 7953644, 2, 5],"float16"), )
paddle.where(Tensor([3, 6, 3, 1, 2, 5],"bool"), Tensor([3, 6, 3, 7953644, 2, 5],"float16"), Tensor([3, 6, 3, 1, 2, 5],"float16"), )
paddle.where(Tensor([3, 6, 3, 4, 1, 5],"bool"), Tensor([3, 6, 3, 4, 1, 5],"float16"), Tensor([3, 6, 3, 4, 3976822, 5],"float16"), )
paddle.where(Tensor([3, 6, 3, 4, 1, 5],"bool"), Tensor([3, 6, 3, 4, 3976822, 5],"float16"), Tensor([3, 6, 3, 4, 1, 5],"float16"), )
paddle.where(Tensor([3, 6, 3, 4, 2, 1],"bool"), Tensor([3, 6, 3, 4, 2, 1],"float16"), Tensor([3, 6, 3, 4, 2, 9942054],"float16"), )
paddle.where(Tensor([3, 6, 3, 4, 2, 1],"bool"), Tensor([3, 6, 3, 4, 2, 9942054],"float16"), Tensor([3, 6, 3, 4, 2, 1],"float16"), )
paddle.where(Tensor([4, 20228, 376, 25, 3],"bool"), Tensor([4, 20228, 376, 25, 3],"float32"), Tensor([4, 20228, 376, 25, 3],"float32"), )
paddle.where(Tensor([4, 280, 27164, 25, 3],"bool"), Tensor([4, 280, 27164, 25, 3],"float32"), Tensor([4, 280, 27164, 25, 3],"float32"), )
paddle.where(Tensor([4, 280, 376, 1807, 3],"bool"), Tensor([4, 280, 376, 1807, 3],"float32"), Tensor([4, 280, 376, 1807, 3],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 1],"bool"), Tensor([4, 280, 376, 25, 1],"float32"), Tensor([4, 280, 376, 25, 217],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 1],"bool"), Tensor([4, 280, 376, 25, 217],"float32"), Tensor([4, 280, 376, 25, 1],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 217],"bool"), Tensor([4, 280, 376, 25, 1],"float32"), Tensor([4, 280, 376, 25, 1],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 217],"bool"), Tensor([4, 280, 376, 25, 217],"float32"), Tensor([4, 280, 376, 25, 217],"float32"), )
paddle.where(Tensor([4, 280, 376, 5419, 1],"bool"), Tensor([4, 280, 376, 5419, 1],"float32"), Tensor([4, 280, 376, 5419, 1],"float32"), )
paddle.where(Tensor([4, 280, 81490, 25, 1],"bool"), Tensor([4, 280, 81490, 25, 1],"float32"), Tensor([4, 280, 81490, 25, 1],"float32"), )
paddle.where(Tensor([4, 60684, 376, 25, 1],"bool"), Tensor([4, 60684, 376, 25, 1],"float32"), Tensor([4, 60684, 376, 25, 1],"float32"), )
paddle.where(Tensor([40],"bool"), Tensor([57042535, 40],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([867, 280, 376, 25, 1],"bool"), Tensor([867, 280, 376, 25, 1],"float32"), Tensor([867, 280, 376, 25, 1],"float32"), )
paddle.where(Tensor([95070891, 1, 1, 24],"bool"), Tensor([1, 1, 1, 24],"float32"), Tensor([1, 1, 1, 24],"float32"), )
paddle.where(Tensor([95070891, 1, 1, 24],"bool"), Tensor([95070891, 1, 1, 24],"float32"), Tensor([95070891, 1, 1, 24],"float32"), )
paddle.where(Tensor([99204408, 1, 1, 23],"bool"), Tensor([1, 1, 1, 23],"float32"), Tensor([1, 1, 1, 23],"float32"), )
paddle.where(Tensor([99204408, 1, 1, 23],"bool"), Tensor([99204408, 1, 1, 23],"float32"), Tensor([99204408, 1, 1, 23],"float32"), )
paddle.where(condition=Tensor([416, 1, 30, 30],"bool"), x=Tensor([1],"float32"), y=Tensor([416, 6095, 30, 30],"float32"), )
paddle.where(condition=Tensor([512, 1, 30, 30],"bool"), x=Tensor([1],"float32"), y=Tensor([512, 4952, 30, 30],"float32"), )
paddle.where(condition=Tensor([52, 1, 30, 30],"bool"), x=Tensor([1],"float32"), y=Tensor([52, 48755, 30, 30],"float32"), )
paddle.zeros_like(Tensor([1, 1, 1, 2281701379],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 1, 1, 4294967297],"float16"), dtype="float32", )
paddle.zeros_like(Tensor([1, 1, 2281701379, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 1, 2281701379],"float32"), )
paddle.zeros_like(Tensor([1, 1, 4294967297, 1],"float16"), dtype="float32", )
paddle.zeros_like(Tensor([1, 10, 228170138],"float32"), )
paddle.zeros_like(Tensor([1, 128, 5, 3565159],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 160, 2852127, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 160, 5, 2852127],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 192, 3, 3961288],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 192, 3961288, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 221848, 10285],"float32"), )
paddle.zeros_like(Tensor([1, 2281701379, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 2281701379],"float32"), )
paddle.zeros_like(Tensor([1, 2281701379],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 2281701379],"int32"), )
paddle.zeros_like(Tensor([1, 2281701379],"int64"), dtype="float16", )
paddle.zeros_like(Tensor([1, 2281701379],"int64"), dtype="float32", )
paddle.zeros_like(Tensor([1, 253522376, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 256, 2970966, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 256, 3, 2970966],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 265933, 8580],"float32"), )
paddle.zeros_like(Tensor([1, 268436, 8500],"float32"), )
paddle.zeros_like(Tensor([1, 331402, 6885],"float32"), )
paddle.zeros_like(Tensor([1, 356516, 6400],"float32"), )
paddle.zeros_like(Tensor([1, 371009, 6150],"float32"), )
paddle.zeros_like(Tensor([1, 384, 1980644, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 384, 3, 1980644],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 419431, 5440],"float32"), )
paddle.zeros_like(Tensor([1, 547828, 4165],"float32"), )
paddle.zeros_like(Tensor([1, 59417, 38402],"float32"), )
paddle.zeros_like(Tensor([1, 61906, 36858],"float32"), )
paddle.zeros_like(Tensor([1, 634159, 3598],"float32"), )
paddle.zeros_like(Tensor([1, 768, 3, 990322],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 768, 990322, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 91, 1, 25073642],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 91, 25073642, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 91268056, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 96, 3, 7922575],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 96, 4753545, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 96, 5, 4753545],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 96, 5, 8947849],"float16"), dtype="float32", )
paddle.zeros_like(Tensor([1, 96, 7922575, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 96, 8947849, 5],"float16"), dtype="float32", )
paddle.zeros_like(Tensor([100, 22817014],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 1024, 1, 2177],"float32"), )
paddle.zeros_like(Tensor([1024, 1024, 1, 4097],"float16"), )
paddle.zeros_like(Tensor([1024, 1024, 2177, 1],"float32"), )
paddle.zeros_like(Tensor([1024, 1024, 4097, 1],"float16"), )
paddle.zeros_like(Tensor([1024, 2048, 1, 1089],"float32"), )
paddle.zeros_like(Tensor([1024, 2048, 1, 2049],"float16"), )
paddle.zeros_like(Tensor([1024, 2048, 1089, 1],"float32"), )
paddle.zeros_like(Tensor([1024, 2048, 2049, 1],"float16"), )
paddle.zeros_like(Tensor([1024, 2228225, 1, 1],"float32"), )
paddle.zeros_like(Tensor([1024, 2228225],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 247581, 3, 3],"float32"), )
paddle.zeros_like(Tensor([1024, 4194305, 1, 1],"float16"), )
paddle.zeros_like(Tensor([1024, 466034, 3, 3],"float16"), )
paddle.zeros_like(Tensor([1024, 512, 1, 4353],"float32"), )
paddle.zeros_like(Tensor([1024, 512, 1, 8193],"float16"), )
paddle.zeros_like(Tensor([1024, 512, 1451, 3],"float32"), )
paddle.zeros_like(Tensor([1024, 512, 2731, 3],"float16"), )
paddle.zeros_like(Tensor([1024, 512, 3, 1451],"float32"), )
paddle.zeros_like(Tensor([1024, 512, 3, 2731],"float16"), )
paddle.zeros_like(Tensor([1024, 512, 4353, 1],"float32"), )
paddle.zeros_like(Tensor([1024, 512, 8193, 1],"float16"), )
paddle.zeros_like(Tensor([1073741825, 4],"float16"), type(numpy.bool_), )
paddle.zeros_like(Tensor([1073741825, 4],"float16"), type(numpy.float32), )
paddle.zeros_like(Tensor([1073741825, 4],"float16"), type(numpy.float64), )
paddle.zeros_like(Tensor([1073741825, 4],"float16"), type(numpy.int32), )
paddle.zeros_like(Tensor([1073741825, 4],"float16"), type(numpy.int64), )
paddle.zeros_like(Tensor([107374183, 40],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([1114113, 2048, 1, 1],"float32"), )
paddle.zeros_like(Tensor([1114113, 2048],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([11883862, 3, 8, 8],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([12, 190141782],"int32"), dtype="int64", )
paddle.zeros_like(Tensor([128, 128, 1, 139265],"float32"), )
paddle.zeros_like(Tensor([128, 128, 1, 262145],"float16"), )
paddle.zeros_like(Tensor([128, 128, 139265, 1],"float32"), )
paddle.zeros_like(Tensor([128, 128, 262145, 1],"float16"), )
paddle.zeros_like(Tensor([128, 128, 3, 46422],"float32"), )
paddle.zeros_like(Tensor([128, 128, 3, 87382],"float16"), )
paddle.zeros_like(Tensor([128, 128, 46422, 3],"float32"), )
paddle.zeros_like(Tensor([128, 128, 87382, 3],"float16"), )
paddle.zeros_like(Tensor([128, 17825793, 1, 1],"float32"), )
paddle.zeros_like(Tensor([128, 1980644, 3, 3],"float32"), )
paddle.zeros_like(Tensor([128, 3728271, 3, 3],"float16"), )
paddle.zeros_like(Tensor([142606337, 16],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1760573, 8, 9, 18],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([17825793, 128, 1, 1],"float32"), )
paddle.zeros_like(Tensor([17895698, 2, 3, 4, 5, 1, 2],"float16"), )
paddle.zeros_like(Tensor([1789570, 96, 5, 5],"float16"), dtype="float32", )
paddle.zeros_like(Tensor([1980644, 128, 3, 3],"float32"), )
paddle.zeros_like(Tensor([2, 17825793, 8, 8],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([2, 3, 47535446, 8],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([2, 3, 8, 47535446],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([2097153, 2048, 1, 1],"float16"), )
paddle.zeros_like(Tensor([221848, 1, 10285],"float32"), )
paddle.zeros_like(Tensor([2228225, 1024, 1, 1],"float32"), )
paddle.zeros_like(Tensor([2228225, 1024],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2261350, 1009],"int32"), )
paddle.zeros_like(Tensor([2263593, 1008],"int32"), )
paddle.zeros_like(Tensor([2265841, 1007],"int32"), )
paddle.zeros_like(Tensor([2268093, 1006],"int32"), )
paddle.zeros_like(Tensor([2270350, 1005],"int32"), )
paddle.zeros_like(Tensor([2272611, 1004],"float32"), )
paddle.zeros_like(Tensor([2272611, 1004],"int32"), )
paddle.zeros_like(Tensor([2274877, 1003],"int32"), )
paddle.zeros_like(Tensor([2277148, 1002],"float32"), )
paddle.zeros_like(Tensor([2277148, 1002],"int32"), )
paddle.zeros_like(Tensor([2279422, 1001],"float32"), )
paddle.zeros_like(Tensor([2279422, 1001],"int32"), )
paddle.zeros_like(Tensor([2281701379, 1, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2281701379, 1],"int32"), dtype="int64", )
paddle.zeros_like(Tensor([2281701379, 1],"int64"), dtype="float16", )
paddle.zeros_like(Tensor([2281701379, 1],"int64"), dtype="float32", )
paddle.zeros_like(Tensor([2281701379, 1],"int64"), dtype="int64", )
paddle.zeros_like(Tensor([2281701379],"float32"), )
paddle.zeros_like(Tensor([2281701379],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2281701379],"float32"), dtype="int32", )
paddle.zeros_like(Tensor([2281701379],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([2281701379],"int32"), )
paddle.zeros_like(Tensor([2281701379],"int32"), dtype=VarType(float32), )
paddle.zeros_like(Tensor([2281701379],"int64"), "int64", )
paddle.zeros_like(Tensor([2281701379],"int64"), dtype="float32", )
paddle.zeros_like(Tensor([2281701379],"int64"), dtype=VarType(float32), )
paddle.zeros_like(Tensor([228170138, 10],"int32"), dtype="int64", )
paddle.zeros_like(Tensor([25073642, 91, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2640859, 96, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([265933, 1, 8580],"float32"), )
paddle.zeros_like(Tensor([268436, 1, 8500],"float32"), )
paddle.zeros_like(Tensor([2910334, 28, 28],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([3, 11930465, 3, 4, 5, 1, 2],"float16"), )
paddle.zeros_like(Tensor([3, 1431655766],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([3, 1431655766],"float16"), type(numpy.bool_), )
paddle.zeros_like(Tensor([3, 1431655766],"float16"), type(numpy.float32), )
paddle.zeros_like(Tensor([3, 1431655766],"float16"), type(numpy.float64), )
paddle.zeros_like(Tensor([3, 1431655766],"float16"), type(numpy.int32), )
paddle.zeros_like(Tensor([3, 1431655766],"float16"), type(numpy.int64), )
paddle.zeros_like(Tensor([3, 2, 17895698, 4, 5, 1, 2],"float16"), )
paddle.zeros_like(Tensor([3, 2, 3, 23860930, 5, 1, 2],"float16"), )
paddle.zeros_like(Tensor([3, 2, 3, 4, 29826162, 1, 2],"float16"), )
paddle.zeros_like(Tensor([3, 2, 3, 4, 5, 1, 11930465],"float16"), )
paddle.zeros_like(Tensor([3, 2, 3, 4, 5, 5965233, 2],"float16"), )
paddle.zeros_like(Tensor([3, 27163112, 28],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([3, 28, 27163112],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([3, 760567127],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([3, 8, 95070891],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([3, 95070891, 8],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([30, 76056713],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([300, 14316558],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([300, 7605672],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([325957340, 7],"int32"), dtype="int64", )
paddle.zeros_like(Tensor([325957340, 7],"int64"), dtype=Dtype(float32), )
paddle.zeros_like(Tensor([330108, 768, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([3314018, 8, 9, 18],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([331402, 1, 6885],"float32"), )
paddle.zeros_like(Tensor([33141, 10, 6885],"float32"), )
paddle.zeros_like(Tensor([33554433, 128, 1, 1],"float16"), )
paddle.zeros_like(Tensor([35651585, 8, 8],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([356516, 1, 6400],"float32"), )
paddle.zeros_like(Tensor([371009, 1, 6150],"float32"), )
paddle.zeros_like(Tensor([3728271, 128, 3, 3],"float16"), )
paddle.zeros_like(Tensor([4194305, 1024, 1, 1],"float16"), )
paddle.zeros_like(Tensor([419431, 1, 5440],"float32"), )
paddle.zeros_like(Tensor([4294967297, 1, 1, 1],"float16"), dtype="float32", )
paddle.zeros_like(Tensor([4294967297, 1],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([4294967297],"bfloat16"), )
paddle.zeros_like(Tensor([4294967297],"float16"), )
paddle.zeros_like(Tensor([4294967297],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([4456449, 512, 1, 1],"float32"), )
paddle.zeros_like(Tensor([456340276, 5],"int64"), dtype="int64", )
paddle.zeros_like(Tensor([495161, 512, 3, 3],"float32"), )
paddle.zeros_like(Tensor([50, 45634028],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([547828, 1, 4165],"float32"), )
paddle.zeros_like(Tensor([57042535, 40],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([570426, 160, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([59417, 1, 38402],"float32"), )
paddle.zeros_like(Tensor([6, 2347430, 9, 18],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([6, 4418691, 9, 18],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([6, 8, 2640859, 18],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([6, 8, 4971027, 18],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([6, 8, 9, 5281717],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([6, 8, 9, 9942054],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([61906, 1, 36858],"float32"), )
paddle.zeros_like(Tensor([634159, 1, 3598],"float32"), )
paddle.zeros_like(Tensor([660215, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([713032, 128, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([760567127, 3],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([760567127, 3],"int32"), dtype="int64", )
paddle.zeros_like(Tensor([760567127, 3],"int64"), dtype="float32", )
paddle.zeros_like(Tensor([760567127, 3],"int64"), dtype="int64", )
paddle.zeros_like(Tensor([8388609, 512, 1, 1],"float16"), )
paddle.zeros_like(Tensor([8912897, 256],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([932068, 512, 3, 3],"float16"), )
paddle.zeros_like(Tensor([950709, 96, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([990322, 256, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(x=Tensor([17674763, 3, 3, 3, 3, 3],"float16"), )
paddle.zeros_like(x=Tensor([253522376, 3, 3],"bool"), )
paddle.zeros_like(x=Tensor([253522376, 3, 3],"float32"), )
paddle.zeros_like(x=Tensor([253522376, 3, 3],"int32"), )
paddle.zeros_like(x=Tensor([253522376, 3, 3],"int64"), )
paddle.zeros_like(x=Tensor([3, 17674763, 3, 3, 3, 3],"float16"), )
paddle.zeros_like(x=Tensor([3, 253522376, 3],"bool"), )
paddle.zeros_like(x=Tensor([3, 253522376, 3],"float32"), )
paddle.zeros_like(x=Tensor([3, 253522376, 3],"int32"), )
paddle.zeros_like(x=Tensor([3, 253522376, 3],"int64"), )
paddle.zeros_like(x=Tensor([3, 3, 17674763, 3, 3, 3],"float16"), )
paddle.zeros_like(x=Tensor([3, 3, 253522376],"bool"), )
paddle.zeros_like(x=Tensor([3, 3, 253522376],"float32"), )
paddle.zeros_like(x=Tensor([3, 3, 253522376],"int32"), )
paddle.zeros_like(x=Tensor([3, 3, 253522376],"int64"), )
paddle.zeros_like(x=Tensor([3, 3, 3, 17674763, 3, 3],"float16"), )
paddle.zeros_like(x=Tensor([3, 3, 3, 3, 17674763, 3],"float16"), )
paddle.zeros_like(x=Tensor([3, 3, 3, 3, 3, 17674763],"float16"), )
paddle.zeros_like(x=Tensor([3, 3, 477218589],"float16"), )
paddle.zeros_like(x=Tensor([3, 477218589, 3],"float16"), )
paddle.zeros_like(x=Tensor([477218589, 3, 3],"float16"), )
