paddle.Tensor.reshape(Tensor([0],"float32"), list[2620,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2620,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2620,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2620,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2621,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2621,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2621,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2622,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2622,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2622,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2622,35,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2622,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2623,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2623,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2623,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2623,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2624,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2624,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2624,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2624,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2624,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2625,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2625,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2625,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2626,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2626,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2626,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2626,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2626,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2627,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2627,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2627,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2627,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2627,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2628,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2628,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2628,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2628,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2629,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2629,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2629,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2629,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[263,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[263,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[263,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[263,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2630,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2630,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2630,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2630,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2631,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2631,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2631,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2631,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2631,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2631,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2631,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2632,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2632,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2633,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2633,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2633,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2633,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2633,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2633,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2634,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2634,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2634,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2634,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2634,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2635,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2635,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2635,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2635,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2635,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2636,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2636,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2636,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2636,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2636,54,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2636,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2637,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2637,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2637,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2638,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2638,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2638,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2638,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2639,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2639,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2639,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2639,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2639,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[264,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[264,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[264,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[264,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2640,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2640,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2640,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2641,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2641,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2642,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2642,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2643,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2643,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2643,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2643,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2643,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2643,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2643,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2644,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2644,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2644,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2644,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2644,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2645,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2645,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2645,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2646,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2646,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2646,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2646,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2646,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2647,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2647,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2647,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2648,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2648,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2648,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2649,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2649,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2649,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2649,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2649,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2649,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2649,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[265,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[265,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[265,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[265,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[265,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[265,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[265,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2650,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2650,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2650,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2651,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2651,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2652,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2652,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2652,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2652,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2653,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2653,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2653,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2654,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2654,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2654,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2655,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2655,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2655,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2656,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2656,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2656,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2657,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2657,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2657,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2658,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2658,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2658,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2658,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2658,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2659,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2659,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2659,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2659,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[266,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[266,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[266,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[266,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[266,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[266,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[266,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[266,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2660,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2660,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2661,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2661,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2661,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2661,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2661,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2662,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2662,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2662,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2662,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2662,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2663,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2663,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2663,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2664,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2664,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2664,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2664,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2664,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2665,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2665,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2665,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2665,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2666,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2666,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2666,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2666,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2667,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2668,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2668,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2668,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2668,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2668,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2668,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2669,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2669,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2669,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2669,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2669,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2669,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[267,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[267,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[267,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[267,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2670,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2670,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2670,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2670,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2670,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2670,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2670,48,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2670,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2670,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2671,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2671,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2671,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2671,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2671,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2671,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2671,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2671,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2672,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2672,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2672,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2672,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2672,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2672,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2673,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2673,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2673,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2673,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2673,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2673,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2673,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2673,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2674,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2674,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2674,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2675,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2675,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2675,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2675,52,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2675,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2675,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2675,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2676,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2676,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2676,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2676,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2676,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2676,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2677,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2677,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2677,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2677,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2677,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2677,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2677,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2677,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2677,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2678,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2678,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2678,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2678,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2678,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2678,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2679,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2679,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2679,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2679,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[268,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[268,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[268,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[268,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2680,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2680,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2680,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2681,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2681,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2681,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2681,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2681,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2681,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2682,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2682,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2682,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2682,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2682,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2682,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2683,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2683,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2683,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2684,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2684,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2684,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2684,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2684,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2685,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2685,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2685,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2685,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2685,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2685,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2686,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2686,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2686,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2686,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2686,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2686,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2687,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2687,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2687,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2688,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2688,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2688,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2688,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2688,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2689,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2689,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2689,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2689,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[269,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[269,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[269,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[269,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[269,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2690,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2690,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2690,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2690,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2690,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2690,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2690,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2691,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2691,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2692,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2692,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2692,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2692,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2692,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2693,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2693,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2693,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2693,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2693,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2693,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2694,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2694,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2694,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2695,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2695,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2695,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2696,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2696,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2696,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2697,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2697,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2697,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2697,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2697,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2698,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2698,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2698,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2698,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2698,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2698,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2699,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2699,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2699,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2699,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2699,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2699,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2699,31,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[270,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[270,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[270,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[270,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[270,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2700,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2700,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2700,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2700,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2701,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2701,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2701,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2701,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2701,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2702,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2702,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2702,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2702,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2702,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2702,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2702,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2703,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2703,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2703,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2703,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2703,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2704,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2704,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2704,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2704,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2705,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2705,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2705,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2705,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2705,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2705,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2706,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2706,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2707,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2707,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2707,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2707,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2708,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2708,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2708,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2709,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2709,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2709,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2709,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[271,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[271,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[271,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[271,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[271,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[271,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2710,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2710,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2710,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2710,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2711,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2711,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2711,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2711,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2711,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2712,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2712,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2712,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2712,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2712,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2713,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2713,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2713,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2713,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2713,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2713,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2713,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2714,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2714,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2714,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2714,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2715,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2715,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2715,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2715,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2716,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2716,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2716,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2716,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2716,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2717,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2717,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2717,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2717,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2718,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2718,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2718,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2719,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2719,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2719,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2719,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[272,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2720,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2720,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2720,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2721,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2721,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2721,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2722,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2722,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2722,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2722,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2723,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2723,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2723,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2724,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2724,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2724,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2724,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2724,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2724,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2725,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2725,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2725,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2725,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2726,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2726,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2726,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2726,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2726,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2726,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2727,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2727,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2728,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2728,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2728,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2728,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2728,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2728,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2729,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2729,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2729,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2729,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2729,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[273,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[273,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[273,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[273,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[273,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[273,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2730,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2730,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2730,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2730,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2730,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2730,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2730,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2730,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2730,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2730,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2731,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2731,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2731,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2731,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2731,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2731,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2732,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2732,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2732,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2732,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2733,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2733,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2733,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2734,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2734,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2734,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2734,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2734,46,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2734,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2735,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2735,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2735,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2736,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2736,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2736,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2736,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2736,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2736,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2737,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2737,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2737,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2737,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2737,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2738,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2738,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2738,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2738,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2738,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2739,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2739,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2739,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2739,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2739,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[274,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[274,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[274,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[274,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2740,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2740,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2740,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2740,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2741,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2741,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2741,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2741,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2741,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2741,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2742,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2742,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2742,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2742,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2742,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2742,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2743,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2743,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2743,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2743,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2743,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2743,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2743,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2743,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2743,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2744,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2744,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2744,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2744,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2745,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2745,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2745,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2745,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2746,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2746,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2746,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2746,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2746,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2746,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2747,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2747,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2747,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2748,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2748,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2748,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2749,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2749,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2749,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[275,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[275,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[275,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[275,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2750,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2750,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2750,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2751,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2751,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2751,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2751,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2751,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2751,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2752,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2752,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2752,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2753,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2753,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2753,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2753,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2753,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2754,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2754,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2754,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2754,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2754,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2754,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2754,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2755,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2755,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2755,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2755,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2755,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2756,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2756,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2756,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2756,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2756,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2757,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2757,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2757,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2757,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2757,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2757,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2758,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2758,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2758,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2758,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2758,80,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2759,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2759,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2759,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2759,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2759,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[276,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[276,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[276,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[276,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[276,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[276,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[276,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[276,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[276,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2760,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2760,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2760,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2760,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2760,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2760,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2760,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2760,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2761,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2761,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2761,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2761,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2761,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2762,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2762,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2762,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2762,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2762,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2762,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2763,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2763,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2763,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2764,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2764,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2764,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2764,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2764,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2764,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2764,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2765,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2765,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2765,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2765,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2765,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2765,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2766,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2766,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2766,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2766,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2766,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2766,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2767,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2767,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2767,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2767,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2767,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2768,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2768,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2768,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2768,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2768,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2769,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2769,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2769,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2769,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2769,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2769,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[277,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[277,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[277,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[277,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[277,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2770,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2770,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2770,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2771,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2771,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2771,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2771,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2771,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2772,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2772,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2772,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2772,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2772,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2773,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2773,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2773,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2774,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2774,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2774,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2774,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2775,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2775,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2775,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2775,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2776,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2776,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2776,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2776,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2777,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2777,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2777,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2777,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2777,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2777,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2778,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2778,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2778,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2778,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2779,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2779,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2779,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2779,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2779,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2779,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[278,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[278,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[278,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[278,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[278,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2780,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2780,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2780,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2781,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2781,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2781,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2781,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2781,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2781,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2782,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2782,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2782,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2782,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2782,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2783,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2783,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2783,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2783,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2784,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2784,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2784,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2784,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2785,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2785,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2785,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2786,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2786,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2786,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2786,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2787,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2787,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2787,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2788,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2788,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2788,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2789,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2789,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2789,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2789,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[279,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[279,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[279,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2790,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2790,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2790,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2791,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2791,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2791,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2791,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2791,31,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2791,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2792,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2792,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2792,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2792,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2792,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2793,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2793,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2793,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2794,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2794,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2794,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2794,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2794,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2794,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2794,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2794,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2795,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2795,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2795,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2795,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2795,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2796,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2796,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2796,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2796,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2796,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2796,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2796,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2797,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2797,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2797,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2798,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2798,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2798,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2798,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2798,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2799,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2799,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2799,35,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2799,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2799,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[280,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[280,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[280,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[280,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[280,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[280,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2800,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2800,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2800,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2800,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2800,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2800,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2801,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2801,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2801,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2801,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2801,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2801,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2802,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2802,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2802,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2802,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2802,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2802,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2802,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2803,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2803,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2803,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2803,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2803,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2804,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2804,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2804,33,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2804,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2804,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2805,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2805,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2805,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2805,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2805,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2806,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2806,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2806,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2806,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2806,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2807,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2807,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2807,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2807,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2807,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2808,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2808,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2808,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2808,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2808,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2808,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2809,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2809,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2809,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2809,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2809,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2809,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2809,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[281,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[281,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[281,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[281,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[281,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[281,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2810,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2810,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2810,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2810,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2810,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2810,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2811,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2811,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2811,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2812,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2812,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2812,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2812,56,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2812,97,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2813,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2813,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2813,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2813,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2813,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2813,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2814,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2814,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2814,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2815,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2815,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2815,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2815,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2815,64,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2816,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2816,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2816,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2816,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2817,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2817,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2817,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2818,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2818,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2818,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2818,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2818,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2818,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2818,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2819,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2819,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2819,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2819,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[282,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[282,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[282,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[282,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[282,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[282,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[282,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2820,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2820,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2820,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2820,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2820,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2820,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2821,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2821,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2821,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2821,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2821,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2821,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2822,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2822,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2822,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2823,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2823,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2823,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2823,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2823,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2823,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2824,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2824,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2824,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2824,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2824,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2825,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2825,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2825,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2825,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2825,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2826,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2826,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2826,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2826,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2826,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2826,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2827,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2827,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2827,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2827,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2827,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2828,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2828,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2828,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2828,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2829,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2829,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2829,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2829,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[283,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[283,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[283,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2830,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2830,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2830,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2831,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2831,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2831,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2831,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2832,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2832,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2832,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2832,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2833,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2833,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2833,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2833,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2834,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2834,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2834,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2834,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2835,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2835,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2835,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2835,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2836,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2836,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2836,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2836,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2836,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2836,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2837,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2837,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2837,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2838,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2838,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2838,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2838,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2838,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2839,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2839,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2839,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2839,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[284,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[284,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[284,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[284,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2840,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2840,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2840,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2841,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2841,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2841,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2841,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2841,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2842,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2842,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2842,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2843,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2843,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2843,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2844,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2844,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2844,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2844,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2844,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2844,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2845,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2845,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2845,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2845,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2845,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2846,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2846,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2846,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2846,77,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2847,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2847,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2847,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2847,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2847,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2848,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2848,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2848,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2849,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2849,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2849,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2849,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2849,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2849,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[285,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[285,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[285,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[285,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[285,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2850,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2850,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2850,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2850,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2850,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2851,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2851,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2851,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2851,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2851,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2852,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2852,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2852,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2852,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2852,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2852,36,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2852,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2853,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2853,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2853,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2853,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2854,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2854,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2854,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2854,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2855,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2855,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2855,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2855,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2856,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2856,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2856,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2856,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2856,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2856,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2857,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2857,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2857,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2857,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2857,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2857,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2858,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2858,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2858,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2858,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2858,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2859,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2859,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2859,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2859,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[286,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[286,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[286,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[286,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2860,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2860,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2860,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2861,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2861,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2861,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2861,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2862,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2862,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2862,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2862,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2862,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2863,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2863,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2863,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2863,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2864,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2864,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2864,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2865,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2865,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2865,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2865,31,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2865,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2865,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2866,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2866,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2866,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2866,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2866,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2866,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2867,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2867,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2867,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2867,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2867,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2867,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2868,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2868,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2868,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2868,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2869,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2869,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2869,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2869,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[287,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[287,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[287,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[287,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[287,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[287,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2870,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2870,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2870,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2870,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2870,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2871,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2871,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2872,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2872,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2873,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2873,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2873,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2873,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2874,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2874,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2874,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2874,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2875,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2875,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2876,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2876,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2876,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2876,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2876,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2877,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2877,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2877,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2877,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2877,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2878,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2878,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2878,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2879,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2879,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2879,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2879,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2879,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2879,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[288,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[288,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[288,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[288,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[288,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2880,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2880,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2880,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2880,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2881,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2881,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2881,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2881,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2881,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2881,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2882,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2882,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2882,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2883,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2883,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2883,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2883,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2883,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2884,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2884,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2884,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2884,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2884,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2885,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2885,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2885,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2885,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2885,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2885,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2885,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2886,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2886,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2887,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2887,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2887,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2887,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2887,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2888,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2888,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2889,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2889,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2889,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2889,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[289,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[289,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[289,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[289,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[289,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[289,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2890,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2890,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2890,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2890,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2890,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2890,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2891,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2891,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2891,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2891,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2891,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2891,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2892,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2892,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2892,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2892,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2892,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2893,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2893,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2893,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2893,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2893,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2894,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2894,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2894,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2894,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2894,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2894,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2894,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2895,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2895,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2896,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2896,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2898,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2898,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2898,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2899,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2899,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2899,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2899,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2899,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[290,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[290,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[290,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[290,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[290,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[290,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[290,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[290,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2900,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2900,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2900,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2900,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2900,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2900,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2901,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2901,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2901,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2901,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2901,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2902,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2902,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2902,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2902,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2902,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2903,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2903,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2904,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2904,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2905,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2905,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2905,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2905,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2905,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2905,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2906,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2906,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2906,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2906,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2906,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2906,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2906,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2907,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2907,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2907,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2907,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2908,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2908,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2908,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2908,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2908,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2908,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2909,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2909,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2909,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2909,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2909,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[291,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[291,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[291,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[291,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[291,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2910,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2910,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2910,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2910,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2910,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2911,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2911,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2911,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2912,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2912,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2912,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2912,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2912,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2913,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2913,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2913,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2914,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2914,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2914,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2914,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2915,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2915,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2915,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2915,42,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2916,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2916,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2916,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2916,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2916,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2916,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2917,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2917,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2917,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2917,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2918,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2918,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2918,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2918,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2918,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2918,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2919,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2919,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2919,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2919,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2919,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2919,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[292,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[292,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[292,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[292,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2920,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2920,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2920,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2920,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2920,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2921,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2921,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2921,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2922,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2922,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2922,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2922,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2922,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2922,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2923,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2923,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2923,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2923,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2923,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2923,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2924,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2924,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2924,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2924,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2924,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2924,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2924,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2925,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2925,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2925,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2925,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2926,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2926,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2926,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2926,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2927,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2927,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2927,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2928,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2928,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2928,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2928,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2928,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2928,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2928,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2929,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2929,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2929,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2929,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2929,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[293,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[293,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[293,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[293,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[293,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2930,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2930,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2930,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2930,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2931,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2931,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2931,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2932,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2932,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2932,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2932,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2932,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2932,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2933,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2933,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2933,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2933,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2934,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2934,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2934,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2934,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2935,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2935,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2935,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2935,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2935,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2935,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2936,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2936,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2936,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2936,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2936,31,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2937,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2937,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2938,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2938,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2938,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2938,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2939,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2939,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2939,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2939,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2939,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2939,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[294,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[294,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[294,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[294,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[294,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[294,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[294,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2940,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2940,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2940,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2940,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2940,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2940,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2940,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2940,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2940,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2941,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2941,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2941,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2941,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2941,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2942,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2942,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2942,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2942,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2943,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2943,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2943,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2943,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2943,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2944,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2944,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2944,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2945,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2945,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2945,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2946,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2947,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2947,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2947,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2947,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2948,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2948,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2948,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2948,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2948,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2948,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2948,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2949,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2949,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2949,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2949,54,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[295,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[295,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[295,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[295,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2950,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2950,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2950,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2950,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2951,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2951,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2951,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2951,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2951,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2951,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2952,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2952,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2952,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2952,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2953,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2953,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2953,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2954,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2954,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2955,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2955,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2955,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2956,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2956,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2956,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2956,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2956,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2957,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2957,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2958,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2958,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2958,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2958,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2958,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2959,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2959,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2959,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2959,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[296,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[296,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[296,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[296,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[296,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2960,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2960,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2960,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2960,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2960,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2960,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2960,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2961,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2961,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2961,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2962,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2962,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2962,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2962,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2962,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2962,35,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2962,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2962,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2963,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2963,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2963,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2963,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2963,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2964,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2964,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2964,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2964,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2964,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2964,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2965,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2965,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2965,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2965,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2965,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2965,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2965,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2966,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2966,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2966,35,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2966,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2966,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2967,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2967,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2967,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2967,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2968,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2968,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2968,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2968,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2969,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2969,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2969,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2969,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2969,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[297,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[297,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[297,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[297,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[297,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[297,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[297,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[297,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2970,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2970,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2970,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2970,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2971,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2971,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2972,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2972,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2972,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2972,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2973,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2973,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2973,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2973,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2973,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2974,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2974,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2975,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2975,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2975,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2975,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2975,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2975,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2976,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2976,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2976,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2977,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2977,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2977,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2978,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2978,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2978,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2978,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2978,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2979,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2979,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2979,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2979,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[298,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[298,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[298,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[298,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[298,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[298,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2980,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2980,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2980,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2981,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2981,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2981,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2981,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2981,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2982,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2982,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2982,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2982,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2982,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2982,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2982,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2982,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2982,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2983,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2983,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2983,39,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2983,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2983,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2983,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2984,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2984,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2984,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2984,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2984,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2984,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2985,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2985,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2985,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2985,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2985,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2986,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2986,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2986,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2987,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2987,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2987,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2987,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2987,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2987,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2988,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2988,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2988,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2988,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2988,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2988,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2988,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2988,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2988,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2989,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2989,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2989,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2989,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[299,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[299,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[299,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[299,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[299,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[299,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[299,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[299,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[299,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2990,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2990,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2990,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2991,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2991,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2991,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2991,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2991,38,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2992,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2992,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2993,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2993,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2993,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2993,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2993,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2994,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2994,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2994,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2994,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2995,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2995,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2995,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2995,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2995,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2996,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2996,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2996,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2996,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2996,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2996,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2997,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2997,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2997,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2997,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2997,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2997,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2998,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2998,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2998,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2998,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2998,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2998,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2999,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2999,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[2999,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3,], name="Categorical_probs", )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3,1,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3,40,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[30,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[300,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[300,120,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[300,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[300,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[300,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[300,40,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[300,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3000,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3000,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3000,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3000,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3000,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3001,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3001,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3001,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3002,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3002,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3002,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3002,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3002,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3002,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3003,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3003,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3003,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3003,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3003,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3003,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3004,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3004,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3004,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3004,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3005,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3005,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3005,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3005,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3005,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3006,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3006,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3006,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3006,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3006,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3006,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3007,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3007,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3007,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3007,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3008,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3008,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3008,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3008,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3008,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3008,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3009,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3009,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3009,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3009,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3009,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3009,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3009,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3009,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[301,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[301,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[301,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[301,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[301,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[301,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[301,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[301,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3010,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3010,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3010,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3010,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3010,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3011,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3011,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3011,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3011,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3012,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3012,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3012,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3012,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3012,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3012,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3012,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3012,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3012,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3012,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3012,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3012,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3012,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3012,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3013,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3013,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3013,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3013,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3013,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3014,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3014,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3014,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3014,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3014,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3015,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3015,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3015,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3015,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3015,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3016,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3016,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3016,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3017,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3017,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3017,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3017,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3018,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3018,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3018,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3018,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3018,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3018,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3019,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3019,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3019,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3019,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[302,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[302,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[302,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[302,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[302,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[302,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[302,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3020,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3020,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3020,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3021,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3021,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3021,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3022,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3022,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3022,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3022,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3022,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3022,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3022,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3022,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3022,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3023,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3023,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3023,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3023,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3024,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3024,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3024,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3025,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3025,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3025,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3025,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3026,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3026,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3026,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3026,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3026,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3026,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3026,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3027,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3027,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3027,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3027,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3027,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3028,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3028,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3028,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3028,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3028,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3028,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3029,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3029,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3029,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3029,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[303,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[303,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[303,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[303,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[303,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[303,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3030,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3030,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3030,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3030,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3031,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3031,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3031,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3031,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3031,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3031,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3032,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3032,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3032,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3032,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3032,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3032,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3033,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3033,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3033,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3033,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3033,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3034,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3034,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3034,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3034,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3034,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3035,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3035,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3035,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3035,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3035,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3035,35,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3035,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3035,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3036,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3036,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3036,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3036,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3036,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3036,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3036,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3037,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3037,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3037,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3038,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3038,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3038,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3038,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3038,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3038,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3039,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3039,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3039,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3039,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[304,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[304,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[304,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[304,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[304,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[304,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[304,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3040,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3040,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3040,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3040,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3040,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3041,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3041,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3041,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3041,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3041,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3042,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3042,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3042,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3042,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3042,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3042,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3043,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3043,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3043,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3043,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3044,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3044,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3044,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3045,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3045,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3045,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3045,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3045,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3046,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3046,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3046,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3046,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3046,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3046,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3047,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3047,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3047,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3047,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3047,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3047,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3047,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3047,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3048,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3048,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3048,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3048,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3048,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3049,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3049,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[305,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[305,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[305,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[305,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[305,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3050,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3050,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3050,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3051,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3051,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3051,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3052,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3052,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3052,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3052,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3052,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3052,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3053,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3053,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3053,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3053,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3054,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3054,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3054,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3054,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3055,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3055,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3055,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3055,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3056,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3056,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3056,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3056,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3057,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3057,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3057,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3058,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3058,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3058,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3059,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3059,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3059,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3059,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3059,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3059,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[306,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[306,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[306,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[306,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[306,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[306,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[306,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,39,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,43,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3060,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3061,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3061,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3061,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3062,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3062,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3063,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3063,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3063,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3063,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3064,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3064,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3064,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3065,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3065,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3065,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3066,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3066,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3066,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3066,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3067,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3067,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3067,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3067,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3068,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3068,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3068,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3069,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3069,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3069,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[307,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[307,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[307,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[307,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[307,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3070,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3070,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3070,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3071,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3071,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3072,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3072,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3072,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3072,42,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3072,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3072,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3073,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3073,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3074,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3074,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3074,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3075,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3075,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3076,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3076,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3077,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3077,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3077,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3077,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3078,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3078,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3078,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3079,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3079,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3079,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[308,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[308,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[308,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[308,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[308,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3080,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3080,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3080,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3080,35,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3081,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3081,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3082,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3082,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3082,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3083,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3083,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3083,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3083,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3083,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3083,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3084,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3084,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3084,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3085,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3085,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3086,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3086,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3087,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3087,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3087,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3088,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3088,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3088,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3089,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3089,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3089,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3089,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[309,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[309,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[309,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[309,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[309,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[309,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[309,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[309,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3090,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3090,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3091,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3091,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3092,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3092,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3093,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3093,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3093,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3094,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3094,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3094,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3094,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3095,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3095,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3095,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3096,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3096,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3097,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3097,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3098,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3098,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3098,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3099,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3099,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3099,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3099,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[310,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[310,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[310,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[310,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[310,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3100,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3100,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3100,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3100,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3101,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3101,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3102,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3102,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3102,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3103,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3103,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3103,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3104,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3105,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3105,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3105,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3105,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3105,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3106,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3106,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3106,31,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3107,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3107,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3108,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3108,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3108,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3108,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3108,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3108,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3108,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3109,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3109,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[311,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[311,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[311,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[311,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[311,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3110,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3110,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3111,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3111,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3111,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3111,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3112,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3112,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3112,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3113,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3113,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3113,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3114,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3114,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3114,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3115,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3115,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3115,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3115,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3116,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3116,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3116,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3117,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3117,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3117,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3117,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3118,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3118,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3118,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3118,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3119,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3119,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3119,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3119,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[312,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[312,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[312,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[312,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[312,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[312,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[312,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3120,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3120,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3120,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3121,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3121,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3121,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3121,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3122,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3122,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3122,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3122,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3123,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3123,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3123,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3123,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3124,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3124,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3124,58,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3124,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3124,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3125,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3126,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3126,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3126,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3127,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3127,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3127,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3127,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3127,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3128,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3128,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3128,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3128,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3129,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3129,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3129,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3129,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[313,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[313,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[313,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[313,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[313,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[313,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3130,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3130,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3130,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3130,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3130,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3131,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3131,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3131,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3132,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3133,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3133,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3133,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3134,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3134,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3134,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3134,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3134,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3134,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3135,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3135,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3135,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3135,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3136,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3136,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3137,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3137,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3138,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3138,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3138,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3138,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3138,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3139,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3139,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3139,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3139,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[314,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[314,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[314,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[314,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[314,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[314,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[314,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[314,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3140,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3140,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3140,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3140,98,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3141,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3141,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3141,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3142,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3142,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3143,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3143,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3143,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3143,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3144,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3144,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3144,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3145,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3145,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3145,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3145,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3145,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3146,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3146,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3146,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3146,36,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3146,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3146,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3147,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3147,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3147,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3147,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3147,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3148,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3148,36,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3148,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3149,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3149,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3149,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3149,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[315,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[315,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[315,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[315,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[315,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[315,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[315,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[315,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[315,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3150,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3150,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3150,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3150,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3150,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3151,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3151,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3152,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3152,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3152,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3152,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3152,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3153,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3153,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3153,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3153,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3154,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3154,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3154,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3154,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3154,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3155,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3155,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3156,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3156,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3156,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3157,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3157,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3157,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3157,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3157,55,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3157,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3159,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3159,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3159,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[316,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[316,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[316,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[316,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[316,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[316,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3160,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3160,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3160,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3160,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3160,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3161,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3161,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3161,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3162,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3162,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3162,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3162,77,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3162,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3163,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3163,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3163,88,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3164,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3164,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3164,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3164,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3165,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3165,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3165,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3166,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3166,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3166,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3166,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3167,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3167,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3168,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3168,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3168,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3169,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3169,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3169,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[317,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[317,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[317,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[317,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[317,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[317,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[317,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3170,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3170,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3170,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3172,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3172,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3173,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3173,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3173,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3175,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3175,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3175,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3175,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3176,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3176,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3176,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3177,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3177,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3177,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3177,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3178,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3178,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3179,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3179,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[318,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[318,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[318,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[318,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[318,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3180,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3180,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3180,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3180,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3181,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3181,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3181,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3181,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3181,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3182,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3182,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3182,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3183,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3183,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3183,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3184,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3184,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3184,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3184,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3184,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3185,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3185,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3185,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3185,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3185,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3186,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3186,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3186,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3186,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3186,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3187,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3187,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3187,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3188,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3188,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3188,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3188,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3189,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3189,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3189,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3189,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3189,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3189,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3189,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[319,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[319,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[319,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[319,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[319,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[319,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[319,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3190,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3190,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3191,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3191,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3191,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3191,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3192,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3192,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3192,34,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3192,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3193,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3193,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3194,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3194,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3195,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3195,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3195,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3195,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3196,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3196,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3196,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3196,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3196,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3196,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3196,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3197,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3197,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3197,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3197,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3198,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3198,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3198,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3198,55,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3198,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3198,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3199,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3199,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3199,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[32,32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[32,37,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[320,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[320,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[320,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[320,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[320,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[320,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[320,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3200,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3200,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3200,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3200,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3201,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3201,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3201,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3201,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3203,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3203,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3203,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3203,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3204,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3204,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3204,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3204,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3205,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3205,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3205,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3206,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3206,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3206,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3207,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3207,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3207,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3207,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3207,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[321,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[321,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[321,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[321,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3210,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3210,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3210,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3210,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3211,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3211,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3211,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3212,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3212,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3212,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3212,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3213,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3213,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3213,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3213,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3213,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3213,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3214,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3214,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3214,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3214,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3214,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3215,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3215,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3215,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3216,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3216,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3216,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3216,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3217,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3217,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3217,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3217,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3217,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3217,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3217,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3218,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3218,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3218,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3219,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3219,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[322,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[322,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[322,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[322,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[322,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[322,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3220,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3220,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3220,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3221,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3221,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3221,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3221,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3222,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3222,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3222,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3223,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3223,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3223,49,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3224,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3224,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3224,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3224,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3225,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3225,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3226,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3226,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3228,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3228,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3228,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3229,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3229,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3229,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[323,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[323,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[323,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[323,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[323,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[323,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[323,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[323,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[323,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3230,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3230,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3230,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3231,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3231,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3232,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3232,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3233,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3233,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3233,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3233,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3233,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3234,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3234,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3234,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3235,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3235,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3235,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3235,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3236,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3236,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3236,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3237,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3237,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3237,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3238,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3238,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3239,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3239,32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3239,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[324,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[324,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[324,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[324,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[324,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3240,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3240,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3240,92,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3241,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3241,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3241,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3242,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3242,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3242,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3242,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3243,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3243,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3244,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3244,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3244,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3244,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3244,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3245,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3245,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3245,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3245,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3245,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3246,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3246,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3246,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3246,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3247,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3247,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3247,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3247,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3247,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3248,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3248,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3248,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3249,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[325,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[325,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[325,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[325,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[325,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[325,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3250,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3250,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3250,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3251,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3251,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3252,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3252,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3252,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3252,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3252,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3253,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3253,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3253,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3253,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3253,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3254,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3254,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3254,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3254,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3254,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3254,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3254,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3255,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3255,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3255,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3256,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3256,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3256,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3257,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3257,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3257,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3257,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3258,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3258,32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3258,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3259,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3259,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3259,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3259,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3259,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3259,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3259,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[326,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[326,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[326,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[326,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3260,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3260,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3260,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3260,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3261,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3261,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3262,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3262,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3262,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3262,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3263,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3263,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3263,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3264,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3264,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3264,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3265,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3265,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3265,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3266,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3266,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3266,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3267,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3267,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3268,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3268,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3268,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3269,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3269,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3269,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3269,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3269,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3269,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3269,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[327,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[327,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[327,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[327,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[327,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[327,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[327,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[327,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[327,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3270,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3270,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3270,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3270,53,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3270,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3271,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3271,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3271,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3271,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3272,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3272,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3272,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3272,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3273,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3273,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3274,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3274,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3274,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3274,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3275,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3275,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3275,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3276,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3276,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3276,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3276,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3276,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3276,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3277,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3277,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3277,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3277,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3277,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3277,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3279,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3279,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3279,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[328,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[328,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[328,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[328,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[328,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[328,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[328,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3280,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3280,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3280,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3280,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3280,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3281,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3281,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3281,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3281,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3281,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3281,33,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3281,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3282,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3282,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3283,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3283,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3283,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3283,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3284,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3284,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3284,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3285,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3285,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3285,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3286,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3286,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3286,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3287,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3287,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3287,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3287,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3287,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3288,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3288,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3288,36,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3288,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3289,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3289,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3289,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3289,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3289,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[329,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[329,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[329,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[329,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[329,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[329,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[329,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[329,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[329,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3290,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3290,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3290,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3291,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3291,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3291,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3291,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3292,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3292,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3292,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3292,31,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3292,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3293,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3293,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3294,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3294,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3294,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3294,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3294,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3294,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3294,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3295,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3295,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3296,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3296,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3297,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3297,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3297,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3297,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3298,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3298,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3298,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3299,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3299,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3299,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[330,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[330,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[330,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[330,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3300,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3300,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3301,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3301,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3301,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3302,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3302,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3302,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3302,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3303,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3303,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3303,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3303,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3304,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3304,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3304,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3304,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3304,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3305,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3305,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3306,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3306,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3306,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3306,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3307,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3307,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3307,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3308,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3308,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3308,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3309,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3309,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3309,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3309,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3309,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[331,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[331,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[331,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[331,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[331,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[331,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[331,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[331,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3310,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3310,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3310,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3311,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3311,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3311,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3311,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3312,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3312,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3313,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3313,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3314,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3314,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3315,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3315,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3315,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3316,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3316,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3316,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3317,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3317,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3317,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3317,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3317,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3318,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3318,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3318,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3318,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3319,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3319,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3319,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3319,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3319,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[332,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[332,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[332,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[332,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[332,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[332,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3320,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3320,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3320,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3321,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3321,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3321,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3321,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3321,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3321,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3322,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3322,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3322,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3323,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3323,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3323,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3324,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3324,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3324,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3325,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3325,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3325,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3326,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3326,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3326,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3326,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3327,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3327,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3327,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3327,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3328,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3328,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3328,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3328,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3329,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3329,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3329,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3329,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3329,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3329,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[333,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[333,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[333,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[333,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[333,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[333,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3330,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3330,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3330,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3331,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3331,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3331,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3332,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3332,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3332,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3332,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3333,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3333,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3333,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3334,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3334,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3334,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3334,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3334,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3335,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3335,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3335,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3336,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3336,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3336,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3336,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3336,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3337,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3337,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3337,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3337,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3338,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3338,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3338,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3338,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3339,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3339,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3339,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[334,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[334,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[334,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[334,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[334,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[334,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[334,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3340,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3340,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3340,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3341,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3341,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3342,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3342,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3342,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3343,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3343,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3343,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3344,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3344,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3344,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3344,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3344,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3345,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3345,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3345,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3345,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3346,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3346,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3347,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3347,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3347,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3348,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3348,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3348,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3349,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3349,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3349,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[335,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[335,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[335,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[335,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[335,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3350,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3350,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3350,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3350,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3350,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3351,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3351,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3351,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3351,67,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3352,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3352,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3352,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3352,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3353,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3353,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3354,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3354,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3354,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3354,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3354,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3354,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3354,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3356,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3356,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3356,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3356,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3357,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3357,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3357,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3357,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3357,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3358,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3358,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3358,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3358,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3358,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3359,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3359,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3359,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3359,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3359,54,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[336,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[336,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[336,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[336,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[336,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[336,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[336,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[336,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3360,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3360,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3360,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3360,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3361,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3361,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3362,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3362,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3363,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3363,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3363,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3363,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3364,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3364,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3364,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3364,39,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3364,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3365,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3365,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3365,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3366,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3366,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3366,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3367,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3367,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3368,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3368,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3368,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3368,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3368,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3369,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3369,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3369,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3369,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3369,52,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[337,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[337,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[337,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[337,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[337,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[337,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[337,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[337,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3370,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3370,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3370,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3370,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3370,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3371,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3371,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3371,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3371,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3371,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3372,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3372,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3372,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3373,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3373,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3373,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3373,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3373,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3374,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3374,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3375,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3375,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3375,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3377,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3377,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3377,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3377,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3378,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3378,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3378,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3379,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3379,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3379,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3379,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3379,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[338,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[338,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[338,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[338,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[338,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[338,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[338,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3380,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3380,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3380,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3380,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3381,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3381,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3382,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3382,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3382,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3383,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3383,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3383,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3384,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3384,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3384,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3384,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3384,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3385,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3385,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3386,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3386,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3386,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3386,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3387,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3387,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3387,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3388,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3388,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3389,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3389,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3389,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3389,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[339,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[339,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[339,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[339,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[339,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[339,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[339,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[339,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3390,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3390,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3390,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3391,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3391,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3392,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3392,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3392,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3392,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3393,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3393,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3393,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3394,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3394,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3394,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3395,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3395,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3395,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3395,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3395,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3395,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3396,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3396,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3396,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3396,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3397,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3397,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3397,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3397,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3398,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3398,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3398,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3398,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3398,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3398,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3399,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3399,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3399,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[340,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[340,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[340,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[340,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[340,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3400,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3400,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3400,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3400,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3400,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3401,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3401,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3401,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3402,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3402,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3402,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3402,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3402,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3403,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3403,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3404,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3404,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3404,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3405,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3405,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3405,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3405,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3405,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3405,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3406,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3406,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3406,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3406,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3407,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3407,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3407,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3407,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3408,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3408,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3408,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3408,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3409,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3409,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[341,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[341,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[341,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[341,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[341,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[341,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3410,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3410,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3410,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3410,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3411,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3411,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3411,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3411,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3412,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3412,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3412,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3412,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3413,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3413,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3413,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3413,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3414,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3414,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3414,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3415,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3415,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3415,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3415,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3415,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3416,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3416,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3416,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3416,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3416,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3416,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3417,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3417,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3417,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3418,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3418,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3418,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3418,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3418,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3419,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3419,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3419,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[342,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[342,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[342,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[342,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[342,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[342,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[342,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[342,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3421,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3421,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3421,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3421,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3421,50,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3421,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3421,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3422,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3422,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3422,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3422,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3422,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3423,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3423,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3423,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3423,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3423,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3424,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3424,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3424,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3425,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3425,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3425,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3425,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3425,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3425,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3425,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3426,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3426,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3426,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3426,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3427,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3427,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3427,78,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3428,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3428,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3428,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3429,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3429,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[343,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[343,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[343,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[343,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[343,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[343,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3430,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3430,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3430,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3430,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3430,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3430,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3430,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3430,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3431,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3431,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3432,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3433,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3433,65,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3433,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3433,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3434,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3434,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3434,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3435,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3435,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3435,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3435,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3435,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3436,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3436,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3436,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3436,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3437,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3437,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3437,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3438,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3438,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3438,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3439,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3439,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3439,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3439,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[344,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[344,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[344,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[344,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[344,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[344,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[344,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[344,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3440,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3441,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3441,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3441,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3441,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3442,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3442,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3443,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3443,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3444,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3444,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3444,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3445,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3445,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3445,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3446,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3446,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3446,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3446,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3447,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3447,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3448,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3448,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3448,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3449,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3449,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3449,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[345,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[345,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[345,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[345,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[345,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[345,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[345,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3450,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3450,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3451,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3451,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3451,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3451,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3451,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3451,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3452,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3452,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3452,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3452,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3453,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3453,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3453,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3453,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3453,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3453,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3453,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3453,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3454,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3454,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3455,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3455,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3455,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3455,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3455,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3455,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3455,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3456,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3456,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3457,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3457,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3457,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3457,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3458,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3458,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3458,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3459,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3459,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3459,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[346,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[346,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[346,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[346,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[346,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[346,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[346,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[346,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3460,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3460,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3460,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3460,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3461,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3461,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3461,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3462,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3462,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3463,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3463,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3463,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3463,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3463,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3463,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3464,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3464,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3464,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3464,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3464,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3465,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3465,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3466,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3466,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3466,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3466,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3467,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3467,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3467,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3468,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3468,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3468,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3469,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3469,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3469,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[347,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[347,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[347,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[347,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[347,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[347,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[347,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3470,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3470,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3472,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3472,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3472,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3473,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3473,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3473,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3474,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3474,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3475,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3475,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3475,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3476,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3476,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3476,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3476,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3477,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3477,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3477,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3478,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3478,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3478,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3478,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3479,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3479,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[348,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[348,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[348,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[348,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[348,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[348,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[348,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3480,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3480,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3480,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3481,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3481,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3482,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3482,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3482,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3482,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3483,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3483,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3484,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3484,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3484,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3485,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3485,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3485,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3485,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3485,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3485,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3486,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3486,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3487,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3487,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3487,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3488,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3488,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3488,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3489,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3489,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[349,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[349,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[349,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[349,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3490,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3490,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3490,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3490,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3491,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3491,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3491,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3491,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3491,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3492,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3492,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3492,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3492,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3493,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3493,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3494,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3494,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3495,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3495,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3495,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3495,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3496,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3496,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3496,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3497,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3497,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3498,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3498,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3498,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3498,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3498,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3499,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3499,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3499,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[350,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[350,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[350,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[350,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[350,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[350,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[350,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[350,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3500,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3500,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3500,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3500,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3501,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3501,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3502,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3502,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3502,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3502,73,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3503,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3503,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3503,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3504,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3504,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3505,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3505,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3505,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3506,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3506,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3506,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3506,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3507,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3507,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3507,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3507,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3508,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3508,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3508,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3509,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3509,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3509,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3509,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[351,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[351,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[351,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[351,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3510,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3510,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3510,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3511,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3511,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3511,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3512,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3512,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3512,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3512,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3512,35,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3512,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3512,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3513,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3513,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3513,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3513,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3513,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3513,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3513,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3513,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3514,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3514,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3514,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3514,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3514,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3515,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3515,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3515,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3515,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3516,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3516,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3516,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3516,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3516,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3517,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3517,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3517,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3518,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3518,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3518,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3518,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[352,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[352,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[352,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[352,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[352,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[352,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[352,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[352,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[352,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3520,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3520,53,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3520,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3521,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3521,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3521,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3522,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3522,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3522,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3522,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3522,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3523,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3523,31,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3523,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3523,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3524,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3524,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3525,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3525,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3526,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3526,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3527,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3527,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3527,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3528,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3528,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3528,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3528,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3529,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3529,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3529,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3529,36,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3529,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[353,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[353,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[353,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[353,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[353,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[353,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[353,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[353,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[353,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[353,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3530,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3530,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3530,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3530,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3530,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3530,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3530,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3531,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3531,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3531,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3532,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3532,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3532,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3533,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3533,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3533,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3533,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3534,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3534,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3534,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3534,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3535,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3535,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3535,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3535,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3536,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3536,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3536,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3536,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3536,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3537,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3537,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3537,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3538,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3538,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3538,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3538,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3538,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3538,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3538,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3538,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3538,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3538,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3539,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3539,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3539,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3539,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3539,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[354,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[354,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[354,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[354,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[354,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[354,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[354,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[354,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3540,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3540,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3540,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3540,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3541,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3541,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3541,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3541,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3541,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3541,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3542,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3542,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3542,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3542,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3543,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3543,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3543,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3543,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3543,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3543,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3544,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3544,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3544,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3544,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3545,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3545,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3545,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3546,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3546,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3546,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3546,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3546,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3546,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3547,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3547,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3547,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3547,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3548,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3548,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3549,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3549,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3549,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[355,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[355,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[355,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[355,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[355,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[355,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[355,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[355,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3550,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3550,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3550,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3551,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3551,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3551,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3552,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3552,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3552,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3552,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3552,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3553,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3553,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3553,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3553,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3555,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3555,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3555,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3555,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3555,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3555,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3556,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3556,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3556,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3556,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3557,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3557,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3557,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3557,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3557,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3558,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3558,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3559,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3559,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3559,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[356,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[356,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[356,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[356,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3560,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3560,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3560,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3560,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3560,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3561,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3561,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3561,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3561,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3562,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3562,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3562,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3562,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3563,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3563,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3563,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3563,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3563,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3564,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3564,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3564,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3565,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3565,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3565,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3565,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3565,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3565,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3566,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3566,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3566,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3566,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3566,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3567,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3567,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3568,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3568,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3568,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3568,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3568,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3569,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3569,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3569,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[357,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[357,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[357,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[357,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[357,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3570,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3570,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3571,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3571,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3572,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3572,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3573,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3573,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3574,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3574,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3574,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3575,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3575,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3575,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3575,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3575,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3575,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3576,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3576,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3576,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3576,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3576,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3577,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3577,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3577,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3577,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3577,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3578,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3578,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3578,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3579,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3579,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3579,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3579,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[358,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[358,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[358,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[358,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[358,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3580,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3580,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3580,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3580,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3581,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3581,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3581,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3582,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3582,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3582,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3583,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3583,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3583,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3584,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3584,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3584,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3584,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3584,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3584,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3585,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3585,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3585,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3585,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3585,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3585,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3585,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3585,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3586,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3586,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3586,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3586,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3587,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3587,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3587,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3588,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3588,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3588,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3588,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3588,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3588,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3588,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3589,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3589,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3589,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3589,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3589,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3589,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3589,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3589,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[359,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[359,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[359,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[359,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[359,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[359,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[359,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[359,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3590,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3590,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3590,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3590,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3590,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3590,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3590,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3590,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3590,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3590,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3590,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3591,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3591,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3591,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3591,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3591,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3591,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3591,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3592,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3592,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3592,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3592,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3593,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3593,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3593,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3593,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3593,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3593,58,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3594,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3594,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3594,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3594,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3594,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3594,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3594,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3594,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3594,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3594,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3594,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3594,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3595,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3595,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3595,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3595,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3595,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3595,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3595,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3595,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3595,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3595,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3596,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3596,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3596,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3596,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3596,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3596,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3596,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3596,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3597,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3597,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3597,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3597,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3597,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3597,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3597,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3597,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3598,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3598,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3598,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3598,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3598,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3598,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3598,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3598,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3598,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3598,43,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3598,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3598,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3598,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3598,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3599,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3599,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[360,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[360,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[360,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[360,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[360,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3600,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3600,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3600,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3601,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3601,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3601,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3601,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3601,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3602,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3602,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3603,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3603,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3603,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3603,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3605,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3605,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3605,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3606,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3606,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3608,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3608,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3608,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3609,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3609,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3609,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3609,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[361,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[361,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[361,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[361,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[361,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[361,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[361,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[361,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3610,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3610,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3611,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3611,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3613,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3613,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3615,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3615,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3615,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3615,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3616,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3616,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3618,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3618,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3618,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3619,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3619,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[362,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[362,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[362,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[362,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[362,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[362,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3620,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3620,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3621,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3621,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3622,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3622,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3622,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3622,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3622,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3623,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3623,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3623,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3624,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3624,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3624,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3626,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3626,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3626,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3626,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3627,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3627,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3627,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3628,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3628,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[363,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[363,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[363,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[363,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[363,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[363,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[363,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3630,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3630,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3631,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3631,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3631,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3633,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3633,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3635,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3635,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3635,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3635,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3635,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3635,95,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3636,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3636,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3637,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3637,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3637,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3638,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3638,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3639,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3639,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3639,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[364,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[364,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[364,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[364,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[364,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[364,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[364,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[364,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3641,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3641,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3641,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3642,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3642,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3642,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3643,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3643,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3643,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3644,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3644,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3646,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3646,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3646,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3647,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3647,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3647,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3649,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3649,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3649,48,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[365,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[365,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[365,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[365,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[365,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[365,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[365,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3650,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3650,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3650,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3650,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3651,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3651,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3652,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3652,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3653,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3653,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3653,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3653,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3654,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3654,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3654,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3656,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3656,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3656,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3657,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3657,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3658,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3658,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3659,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3659,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[366,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[366,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[366,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[366,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[366,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[366,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[366,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[366,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3660,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3660,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3660,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3660,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3661,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3661,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3661,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3661,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3662,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3662,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3662,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3662,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3663,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3664,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3664,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3665,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3665,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3665,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3666,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3666,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3667,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3667,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3668,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3668,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3668,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3669,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3669,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[367,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[367,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[367,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[367,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3670,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3670,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3672,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3672,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3672,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3672,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3673,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3673,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3673,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3674,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3674,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3674,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3674,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3675,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3675,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3676,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3676,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3676,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3678,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3678,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3679,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3679,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3679,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3679,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[368,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[368,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[368,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[368,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3681,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3681,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3682,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3682,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3683,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3683,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3685,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3685,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3685,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3686,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3686,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3687,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3687,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3687,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3688,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3688,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3688,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3688,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[369,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[369,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[369,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[369,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[369,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[369,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[369,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3690,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3690,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3690,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3691,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3691,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3691,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3691,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3691,92,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3692,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3692,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3693,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3693,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3693,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3696,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3696,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3697,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3697,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3698,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3698,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3698,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[37,32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[370,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[370,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[370,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[370,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[370,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[370,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[370,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3701,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3701,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3701,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3701,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3701,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3701,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3701,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3702,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3702,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3702,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3702,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3703,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3703,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3704,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3704,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3704,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3705,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3705,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3706,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3706,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3706,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3706,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3708,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3708,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3708,38,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3708,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3709,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3709,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[371,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[371,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[371,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[371,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[371,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3710,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3710,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3710,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3712,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3712,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3712,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3716,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3716,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3716,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3717,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3718,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3718,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[372,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[372,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[372,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[372,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[372,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[372,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[372,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[372,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3720,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3720,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3720,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3721,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3721,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3722,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3722,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3722,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3723,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3723,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3723,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3724,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3724,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3724,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3724,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3724,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3724,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3725,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3725,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3725,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3727,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3727,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3728,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3728,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3729,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3729,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3729,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3729,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[373,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[373,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[373,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[373,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[373,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3730,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3730,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3731,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3732,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3732,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3732,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3733,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3733,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3733,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3733,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3733,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3734,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3734,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3734,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3735,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3735,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3735,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3735,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3735,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3736,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3736,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3737,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3737,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3737,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3738,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3738,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3738,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3738,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3739,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3739,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3739,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3739,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3739,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3739,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3739,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[374,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[374,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[374,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[374,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[374,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[374,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[374,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3741,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3742,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3742,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3743,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3743,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3744,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3744,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3745,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3745,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3745,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3745,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3746,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3746,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3747,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3747,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3747,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3747,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3748,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3749,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3749,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[375,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[375,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[375,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[375,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[375,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[375,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[375,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3750,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3750,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3750,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3751,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3751,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3752,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3752,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3753,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3753,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3755,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3755,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3756,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3756,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3756,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3756,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3757,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3757,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3759,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3759,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[376,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[376,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[376,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[376,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[376,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[376,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[376,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[376,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3760,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3760,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3760,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3760,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3760,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3761,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3761,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3761,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3762,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3762,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3762,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3763,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3763,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3763,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3764,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3764,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3766,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3766,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3766,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3767,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3767,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3767,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3769,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3769,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[377,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[377,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[377,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[377,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[377,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[377,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3770,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3770,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3770,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3771,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3771,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3771,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3772,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3772,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3773,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3773,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3773,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3774,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3774,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3774,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3774,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3775,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3775,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3775,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3776,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3776,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3776,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3776,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3776,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3778,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3778,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3779,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3779,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[378,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[378,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[378,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[378,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[378,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[378,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[378,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[378,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3780,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3780,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3780,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3780,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3781,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3781,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3782,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3782,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3782,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3783,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3783,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3784,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3784,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3785,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3785,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3785,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3786,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3787,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3787,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3788,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3788,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3789,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3789,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[379,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[379,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[379,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[379,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[379,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[379,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[379,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[379,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[379,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3790,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3790,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3790,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3790,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3791,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3791,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3791,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3792,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3792,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3792,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3793,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3793,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3793,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3793,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3793,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3793,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3794,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3794,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3795,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3796,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3796,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3796,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3797,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3797,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3797,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3798,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3798,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3798,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[380,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[380,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[380,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[380,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[380,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[380,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[380,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3800,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3800,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3800,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3801,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3802,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3802,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3802,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3803,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3803,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3803,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3803,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3805,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3805,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3805,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3805,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3806,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3807,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3807,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3808,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3808,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3808,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3808,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3808,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3808,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3808,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[381,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[381,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[381,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[381,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[381,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[381,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[381,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3810,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3810,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3810,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3810,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3811,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3811,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3811,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3811,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3812,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3812,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3812,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3813,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3813,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3813,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3813,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3815,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3815,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3815,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3815,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3816,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3816,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3817,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3817,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3818,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3818,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3819,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3819,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[382,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[382,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[382,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[382,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[382,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[382,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[382,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[382,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3821,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3821,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3821,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3821,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3822,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3822,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3822,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3822,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3823,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3823,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3823,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3823,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3823,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3824,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3824,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3825,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3825,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3826,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3826,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3826,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3826,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3826,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3827,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3827,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3827,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3828,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3828,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3829,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3829,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[383,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[383,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[383,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[383,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[383,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[383,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[383,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[383,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[383,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3830,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3830,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3830,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3831,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3831,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3831,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3831,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3831,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3832,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3832,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3833,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3833,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3833,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3835,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3835,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3836,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3836,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3836,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3836,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3837,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3837,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3837,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3837,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3838,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3838,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[384,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[384,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[384,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[384,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[384,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[384,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[384,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3841,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3841,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3841,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3842,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3842,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3843,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3843,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3844,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3844,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3845,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3845,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3846,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3846,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3847,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3847,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3847,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3848,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3848,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3849,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3849,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3849,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3849,38,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3849,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[385,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[385,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[385,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[385,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[385,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[385,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[385,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[385,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[385,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[385,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3850,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3850,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3850,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3850,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3851,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3851,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3851,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3851,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3852,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3852,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3853,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3853,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3855,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3855,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3855,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3855,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3855,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3856,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3856,39,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3857,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3857,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3858,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3858,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3859,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3859,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[386,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[386,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[386,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[386,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[386,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[386,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3860,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3860,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3860,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3860,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3862,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3862,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3863,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3863,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3864,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3864,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3864,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3864,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3865,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3865,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3866,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3866,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3867,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3867,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3867,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3867,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3868,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3868,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3869,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3869,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[387,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[387,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[387,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[387,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[387,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[387,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[387,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3870,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3870,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3870,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3871,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3871,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3871,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3871,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3871,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3872,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3872,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3872,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3872,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3872,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3873,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3873,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3874,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3874,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3874,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3874,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3875,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3875,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3875,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3875,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3876,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3876,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3878,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3878,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[388,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[388,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[388,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[388,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[388,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3880,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3880,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3881,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3881,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3881,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3882,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3882,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3882,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3882,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3883,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3883,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3883,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3885,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3885,31,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3886,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3886,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3887,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3887,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3888,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3888,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3888,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3889,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3889,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[389,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[389,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[389,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[389,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[389,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[389,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[389,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[389,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[389,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[389,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[389,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[389,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[389,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3890,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3890,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3890,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3891,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3891,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3891,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3891,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3891,71,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3892,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3892,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3893,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3893,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3893,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3893,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3894,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3894,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3894,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3895,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3895,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3896,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3896,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3896,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3897,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3897,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3897,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3898,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3898,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3898,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3899,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3899,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3899,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3899,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3899,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[39,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[390,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[390,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[390,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[390,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[390,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[390,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[390,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[390,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3900,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3900,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3901,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3901,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3902,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3902,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3902,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3902,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3903,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3903,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3903,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3904,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3904,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3904,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3905,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3905,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3905,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3907,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3907,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3907,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3908,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3908,89,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3909,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3909,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[391,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[391,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[391,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[391,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[391,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[391,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3910,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3910,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3910,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3911,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3911,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3912,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3912,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3912,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3912,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3915,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3915,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3915,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3916,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3916,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3916,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3916,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3917,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3917,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3917,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3917,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3917,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3918,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3918,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3918,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3918,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3918,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3918,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3919,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3919,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3919,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[392,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[392,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[392,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[392,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[392,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[392,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[392,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3920,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3920,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3921,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3921,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3921,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3922,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3923,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3923,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3923,39,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3923,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3925,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3925,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3926,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3926,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3926,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3927,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3927,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3927,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3927,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3927,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3927,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[393,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[393,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[393,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[393,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[393,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[393,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3930,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3930,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3930,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3931,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3931,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3933,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3933,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3934,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3934,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3934,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3934,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3935,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3935,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3935,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3935,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3937,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3937,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3937,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3938,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3938,121,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3938,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3938,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3938,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3939,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3939,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3939,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[394,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[394,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[394,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[394,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[394,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[394,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[394,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[394,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[394,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[394,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[394,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3940,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3940,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3940,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3941,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3941,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3941,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3941,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3941,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3942,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3942,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3942,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3943,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3943,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3944,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3944,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3945,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3945,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3945,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3946,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3946,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3946,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3946,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3947,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3947,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3947,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3948,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3948,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3948,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3949,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3949,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[395,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[395,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[395,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[395,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[395,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[395,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[395,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[395,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3950,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3950,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3950,37,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3952,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3952,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3953,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3953,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3955,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3955,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3955,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3955,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3955,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3955,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3956,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3956,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3957,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3957,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3958,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3958,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3959,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3959,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3959,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[396,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[396,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[396,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[396,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[396,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[396,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[396,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3960,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3960,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3960,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3961,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3961,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3961,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3961,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3961,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3962,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3962,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3963,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3963,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3963,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3964,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3964,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3964,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3965,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3965,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3965,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3968,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3968,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3969,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3969,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3969,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[397,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[397,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[397,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[397,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[397,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[397,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[397,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3971,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3971,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3971,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3972,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3972,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3973,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3973,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3974,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3974,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3975,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3975,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3977,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3977,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3977,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3977,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3978,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3978,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3979,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3979,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3979,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[398,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[398,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[398,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[398,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[398,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[398,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[398,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[398,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3980,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3980,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3980,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3981,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3981,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3983,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3983,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3983,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3983,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3984,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3984,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3984,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3986,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3986,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3987,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3987,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3987,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3988,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3988,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[399,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[399,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[399,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[399,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[399,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[399,32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[399,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[399,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3990,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3990,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3991,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3991,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3992,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3992,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3993,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3993,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3994,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3995,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3995,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3995,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3996,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3996,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3996,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3996,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3997,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3997,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3998,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3998,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3998,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3998,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3998,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3998,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[3999,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4,100,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4,123,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4,2,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4,256,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4,256000,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4,32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4,32000,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4,99,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[400,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[400,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[400,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[400,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[400,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[400,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[400,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[400,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[400,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4000,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4000,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4000,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4000,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4000,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4001,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4001,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4003,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4004,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4004,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4004,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4005,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4005,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4005,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4005,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4006,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4006,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4006,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4007,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4007,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4007,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4008,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4008,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4008,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[401,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[401,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[401,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[401,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[401,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4010,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4010,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4011,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4011,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4011,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4011,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4012,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4012,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4013,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4013,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4014,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4014,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4014,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4015,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4015,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4015,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4016,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4016,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4016,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4016,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4017,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4017,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4017,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4018,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4018,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4019,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4019,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4019,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4019,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[402,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[402,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[402,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[402,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[402,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[402,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[402,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[402,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4020,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4020,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4020,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4021,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4021,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4021,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4022,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4022,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4022,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4022,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4025,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4025,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4025,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4025,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4025,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4025,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4025,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4025,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4026,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4026,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4026,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4028,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4028,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4029,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4029,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4029,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4029,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[403,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[403,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[403,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[403,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[403,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[403,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[403,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[403,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4030,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4030,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4030,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4031,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4031,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4031,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4031,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4031,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4032,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4032,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4033,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4033,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4034,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4034,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4035,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4035,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4035,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4038,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[404,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[404,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[404,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[404,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[404,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[404,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[404,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[404,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[404,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4040,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4040,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4041,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4041,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4043,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4043,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4045,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4045,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4046,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4046,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4046,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4047,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4047,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4047,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4047,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4048,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4048,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4048,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4048,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4049,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4049,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4049,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[405,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[405,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[405,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[405,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4051,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4051,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4051,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4052,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4052,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4052,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4053,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4053,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4054,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4055,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4055,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4055,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4056,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4056,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4057,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4057,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4058,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4058,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4059,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4059,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4059,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[406,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[406,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[406,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[406,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[406,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4061,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4061,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4062,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4062,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4062,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4062,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4062,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4063,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4063,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4063,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4064,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4064,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4064,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4065,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4065,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4065,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4066,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4066,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4067,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4067,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4068,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4068,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4069,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4069,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[407,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[407,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[407,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[407,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[407,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[407,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[407,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4071,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4071,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4071,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4072,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4074,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4075,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4075,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4075,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4075,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4076,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4076,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4077,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4077,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4077,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4079,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4079,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4079,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4079,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[408,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[408,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[408,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[408,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[408,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[408,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4080,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4080,34,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4080,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4080,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4081,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4081,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4081,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4081,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4081,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4081,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4081,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4081,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4082,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4082,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4083,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4083,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4084,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4085,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4085,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4085,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4086,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4086,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4088,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4088,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4088,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4089,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4089,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[409,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[409,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[409,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[409,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[409,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[409,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[409,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[409,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4090,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4090,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4090,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4090,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4091,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4091,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4092,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4092,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4092,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4092,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4093,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4093,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4093,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4093,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4094,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4094,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4094,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4095,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4095,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4096,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4096,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4096,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4097,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4097,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4098,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4098,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4098,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4098,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4099,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4099,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4099,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[410,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[410,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[410,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[410,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[410,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4100,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4100,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4101,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4102,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4104,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4104,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4105,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4105,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4105,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4106,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4106,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4106,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4108,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4108,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4108,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4109,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4109,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4109,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4109,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4109,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4109,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4109,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4109,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4109,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4109,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[411,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[411,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[411,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[411,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[411,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[411,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[411,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[411,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[411,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[411,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4110,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4110,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4110,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4110,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4113,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4113,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4113,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4114,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4114,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4114,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4115,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4115,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4115,143,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4116,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4116,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4116,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4117,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4117,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4117,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4118,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4118,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4119,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4119,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4119,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4119,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[412,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[412,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[412,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[412,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[412,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[412,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4120,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4120,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4120,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4121,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4121,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4123,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4123,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4125,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4125,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4126,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4126,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4126,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4127,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4127,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4127,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4128,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4128,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4128,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4128,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4129,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4129,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4129,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4129,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[413,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[413,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[413,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[413,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[413,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[413,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[413,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4130,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4130,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4131,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4131,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4131,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4132,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4132,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4132,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4132,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4133,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4133,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4133,34,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4134,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4134,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4134,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4134,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4137,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4137,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4137,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4138,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4138,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4138,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4139,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4139,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[414,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[414,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[414,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[414,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[414,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4140,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4140,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4140,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4140,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4140,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4141,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4141,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4142,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4142,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4142,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4143,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4143,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4143,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4144,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4144,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4144,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4145,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4145,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4145,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4146,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4146,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4146,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4147,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4147,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4147,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4148,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4148,34,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4148,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4148,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4149,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4149,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4149,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4149,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4149,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[415,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[415,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[415,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[415,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[415,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[415,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[415,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4150,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4150,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4150,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4150,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4150,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4150,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4151,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4151,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4151,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4153,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4153,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4153,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4153,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4153,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4154,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4154,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4154,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4154,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4154,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4155,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4155,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4155,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4156,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4156,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4157,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4157,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4157,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4157,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4158,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4158,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4158,81,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4159,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4159,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4159,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[416,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[416,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[416,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[416,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[416,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4160,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4160,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4160,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4160,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4161,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4161,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4163,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4163,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4163,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4163,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4164,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4164,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4164,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4165,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4166,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4166,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4166,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4167,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[417,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[417,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[417,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[417,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[417,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[417,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[417,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[417,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[417,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[417,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4170,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4170,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4171,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4171,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4174,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4175,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4175,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4176,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4176,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4176,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4178,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4178,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4179,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4179,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[418,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[418,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[418,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[418,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[418,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[418,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[418,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4181,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4181,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4183,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4183,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4183,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4184,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4184,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4184,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4187,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4187,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4189,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4189,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[419,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[419,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[419,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[419,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[419,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[419,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[419,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[419,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[419,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4190,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4190,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4190,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4191,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4191,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4191,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4195,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4196,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4196,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4197,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4197,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4198,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4198,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4199,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4199,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4199,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[420,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[420,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[420,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[420,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4201,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4201,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4201,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4203,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4203,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4204,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4204,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4205,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4205,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4205,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4206,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4206,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[421,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[421,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[421,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[421,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[421,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[421,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[421,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[421,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[421,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[421,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4210,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4210,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4211,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4211,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4213,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4213,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4215,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4215,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4216,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4216,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4217,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4217,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4217,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4219,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4219,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[422,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[422,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[422,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[422,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[422,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[422,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[422,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[422,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[422,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4220,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4220,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4221,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4221,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4224,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4224,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4225,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4225,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4227,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4227,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4227,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4228,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4228,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4228,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4228,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4229,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4229,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[423,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[423,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[423,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[423,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[423,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4230,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4230,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4233,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4233,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4233,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4234,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4234,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4234,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4234,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4234,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4237,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4237,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4237,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4238,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4238,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[424,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[424,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[424,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[424,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[424,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[424,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[424,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[424,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[424,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[424,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[424,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4241,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4241,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4242,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4243,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4243,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4244,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4244,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4247,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4247,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4247,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4247,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4248,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4248,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4248,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4249,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4249,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[425,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[425,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[425,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4250,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4250,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4251,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4251,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4251,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4253,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4253,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4253,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4253,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4256,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4256,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4258,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4258,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4259,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4259,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4259,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[426,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[426,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[426,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[426,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[426,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[426,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[426,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[426,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4261,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4261,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4263,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4263,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4264,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4264,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4265,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4265,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4266,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4266,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4268,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4268,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4268,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4269,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4269,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[427,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[427,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[427,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[427,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[427,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[427,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[427,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[427,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[427,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4270,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4270,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4272,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4272,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4273,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4273,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4273,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4275,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4275,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4275,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4276,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4276,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4277,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4277,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4279,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4279,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4279,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[428,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[428,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[428,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[428,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[428,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[428,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4280,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4280,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4280,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4281,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4281,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4281,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4283,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4283,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4284,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4284,38,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4286,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4286,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4287,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4288,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4288,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[429,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[429,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[429,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[429,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[429,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[429,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[429,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[429,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4290,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4290,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4290,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4291,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4291,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4292,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4292,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4293,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4293,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4294,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4295,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4295,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4295,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4296,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4296,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4299,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4299,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4299,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[430,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[430,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[430,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[430,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[430,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[430,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[430,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[430,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[430,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[430,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[430,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4301,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4301,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4302,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4302,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4302,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4302,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4304,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4304,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4304,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4304,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4306,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4306,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4308,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4308,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4309,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4309,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[431,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[431,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[431,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[431,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[431,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4310,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4310,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4310,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4311,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4311,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4313,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4313,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4315,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4315,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4316,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4316,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4316,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[432,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[432,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[432,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[432,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[432,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[432,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[432,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4320,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4322,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4322,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4324,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4324,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4325,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4325,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4325,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4327,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4327,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4327,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4328,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4328,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4329,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4329,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[433,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[433,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[433,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[433,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[433,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4330,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4330,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4330,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4333,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4333,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4336,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4336,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4336,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4337,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4337,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4338,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4338,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4338,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4338,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[434,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[434,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[434,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[434,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[434,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[434,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[434,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[434,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[434,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[434,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4342,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4342,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4342,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4345,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4345,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4345,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4346,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4346,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4346,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4347,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4347,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4349,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4349,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4349,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[435,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[435,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[435,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[435,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[435,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[435,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[435,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4352,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4352,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4352,38,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4352,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4354,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4354,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4354,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4355,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4355,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4358,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4358,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[436,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[436,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[436,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[436,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[436,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[436,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[436,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[436,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[436,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4360,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4360,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4361,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4361,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4361,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4362,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4362,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4365,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4365,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4367,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4367,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4368,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4368,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4368,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4369,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4369,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4369,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[437,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[437,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[437,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[437,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[437,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[437,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4372,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4372,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4372,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4374,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4374,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4375,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4375,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4375,97,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4378,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4378,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[438,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[438,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[438,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[438,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[438,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[438,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4383,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4383,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4384,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4384,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4385,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4385,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4385,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4386,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4386,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4388,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4388,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[439,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[439,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[439,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[439,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[439,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[439,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[439,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[439,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[439,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4390,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4390,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4391,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4391,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4392,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4392,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4392,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4395,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4395,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4395,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4396,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4396,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4397,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4397,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4397,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4398,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4398,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4398,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4399,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4399,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4399,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[440,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[440,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[440,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[440,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[440,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[440,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[440,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[440,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[440,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4401,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4401,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4402,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4402,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4402,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4403,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4403,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4403,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4405,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4405,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4405,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4405,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4406,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4406,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4407,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4407,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4408,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4408,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4409,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4409,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[441,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[441,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[441,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[441,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[441,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[441,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[441,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4410,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4410,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4411,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4411,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4415,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4415,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4419,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4419,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[442,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[442,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[442,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[442,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[442,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[442,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[442,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[442,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4420,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4420,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4421,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4421,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4421,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4424,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4424,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4427,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4427,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4429,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4429,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4429,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[443,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[443,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[443,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[443,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[443,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[443,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[443,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4430,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4430,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4432,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4432,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4433,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4433,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4433,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4434,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4434,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4435,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4436,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4436,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4437,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4437,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4438,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4439,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4439,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[444,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[444,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[444,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[444,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[444,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[444,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[444,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[444,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[444,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4440,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4440,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4442,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4442,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4444,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4444,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4445,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4445,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4446,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4446,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4448,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4448,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[445,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[445,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[445,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[445,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[445,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[445,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[445,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[445,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[445,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[445,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4450,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4450,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4452,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4452,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4455,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4456,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4456,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4457,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4457,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4457,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4459,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4459,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4459,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[446,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[446,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[446,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[446,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[446,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[446,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[446,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4462,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4462,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4463,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4463,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4463,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4463,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4464,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4464,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4464,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4465,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4465,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4465,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4465,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4465,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4467,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4467,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4468,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4468,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[447,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[447,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[447,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[447,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[447,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[447,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4471,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4471,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4475,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4475,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4476,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4476,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4479,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4479,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4479,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[448,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[448,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[448,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[448,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[448,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[448,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[448,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[448,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[448,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4480,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4480,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4480,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4481,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4482,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4482,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4485,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4485,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4486,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4486,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4486,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4487,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4487,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4488,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4488,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4489,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4489,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[449,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[449,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[449,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[449,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[449,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[449,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[449,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[449,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4491,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4491,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4492,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4492,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4494,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4494,39,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4494,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4495,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4495,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4496,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4496,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4497,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4497,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4499,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4499,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4499,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[45,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[45,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[450,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[450,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[450,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[450,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[450,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[450,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[450,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4502,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4502,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4506,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4507,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4507,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4507,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4509,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4509,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4509,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[451,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[451,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[451,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[451,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[451,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[451,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[451,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[451,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4515,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4515,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4516,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4516,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4518,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4518,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4519,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4519,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4519,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[452,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[452,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[452,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[452,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[452,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[452,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4522,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4522,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4522,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4522,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4523,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4523,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4523,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4523,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4524,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4524,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4524,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4526,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4526,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4527,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4527,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4527,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4528,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4528,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4528,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4529,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4529,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[453,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[453,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[453,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[453,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[453,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[453,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[453,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[453,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4530,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4530,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4532,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4532,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4533,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4533,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4534,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4536,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4536,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[454,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[454,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[454,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[454,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[454,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[454,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[454,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[454,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[454,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4540,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4540,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4540,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4541,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4541,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4542,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4542,58,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4544,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4544,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4547,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4547,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4548,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4548,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4549,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4549,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4549,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4549,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4549,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[455,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[455,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[455,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[455,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4550,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4550,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4551,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4551,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4552,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4552,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4553,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4553,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4553,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4554,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4554,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4555,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4555,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4558,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4558,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4558,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4559,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4559,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4559,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[456,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[456,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[456,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[456,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[456,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[456,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[456,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[456,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[456,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4560,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4560,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4561,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4561,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4562,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4562,135,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4562,45,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4564,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4564,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4564,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4566,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4566,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4568,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4568,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4569,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4569,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4569,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[457,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[457,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[457,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[457,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4570,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4570,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4571,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4571,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4574,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4574,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4574,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4574,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4577,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4577,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4578,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4578,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4578,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[458,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[458,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[458,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[458,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[458,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[458,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[458,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[458,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4582,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4582,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4583,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4583,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4583,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4584,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4584,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4589,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4589,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[459,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[459,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[459,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[459,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[459,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[459,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[459,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4590,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4590,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4590,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4591,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4591,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4591,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4592,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4592,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4594,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4594,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4599,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4599,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[460,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[460,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[460,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[460,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[460,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[460,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[460,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4600,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4605,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4605,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4605,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4605,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4606,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4606,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4609,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4609,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4609,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4609,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[461,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[461,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[461,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[461,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[461,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[461,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[461,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[461,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[461,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[461,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[461,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[461,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4613,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4613,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4614,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4614,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4614,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4615,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4615,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4616,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4616,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4617,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4617,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4618,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4618,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4619,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4619,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[462,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[462,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[462,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[462,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[462,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4620,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4620,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4622,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4622,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4624,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4624,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4624,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4624,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4625,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4625,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4627,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4627,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4627,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4627,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4627,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4628,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4628,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4628,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4629,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4629,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4629,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4629,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[463,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[463,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[463,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[463,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[463,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4631,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4631,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4631,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4631,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4631,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4632,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4632,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4632,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4636,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4636,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4636,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4637,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4637,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4639,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4639,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4639,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[464,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[464,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[464,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[464,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[464,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[464,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[464,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[464,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4640,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4640,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4642,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4642,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4644,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4644,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4645,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4645,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4645,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4646,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4646,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4648,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4648,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4648,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4649,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4649,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[465,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[465,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[465,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[465,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[465,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[465,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[465,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[465,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[465,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4650,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4650,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4651,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4651,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4652,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4652,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4659,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4659,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[466,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[466,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[466,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[466,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[466,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[466,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[466,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4661,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4661,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4662,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4663,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4663,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4663,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4666,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4666,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4667,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4667,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[467,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[467,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[467,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[467,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[467,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[467,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[467,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[467,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[467,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4670,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4670,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4670,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4670,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4671,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4671,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4672,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4672,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4674,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4674,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4675,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4675,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4676,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4676,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4676,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4677,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4677,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4677,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4677,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4678,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4678,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[468,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[468,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[468,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[468,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[468,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[468,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[468,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[468,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[468,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[468,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4680,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4680,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4682,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4682,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4683,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4683,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4684,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4684,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4684,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4684,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4684,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4687,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4687,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4689,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4689,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4689,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4689,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4689,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4689,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[469,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[469,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[469,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[469,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[469,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[469,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[469,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[469,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[469,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4690,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4690,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4690,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4691,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4691,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4692,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4692,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4692,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4693,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4693,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4694,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4694,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4695,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4695,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4695,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4696,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4696,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4698,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4698,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[470,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[470,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[470,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[470,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[470,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[470,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4701,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4701,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4703,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4703,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4703,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4705,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4705,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4705,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4708,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4708,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[471,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[471,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[471,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[471,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[471,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[471,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[471,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[471,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[471,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4710,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4710,63,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4714,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4714,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4714,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4714,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4714,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4714,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4715,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4715,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4717,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4717,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4718,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4718,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4719,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4719,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4719,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4719,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4719,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4719,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4719,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4719,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[472,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[472,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[472,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[472,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[472,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4720,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4720,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4720,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4720,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4720,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4721,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4721,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4721,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4722,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4722,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4723,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4723,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4723,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4724,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4724,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4724,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4724,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4725,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4725,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4725,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4725,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4727,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4727,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4727,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4728,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4728,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4729,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4729,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4729,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[473,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[473,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[473,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[473,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[473,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[473,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[473,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[473,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[473,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4730,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4730,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4731,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4731,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4731,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4734,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4734,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4735,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4735,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4736,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4736,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4738,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4738,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4739,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4739,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4739,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[474,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[474,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[474,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[474,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[474,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[474,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[474,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4740,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4740,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4741,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4741,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4742,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4742,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4745,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4745,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4745,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4747,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4747,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4748,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4748,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4748,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4749,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4749,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[475,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[475,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[475,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[475,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[475,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[475,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[475,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4752,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4752,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4752,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4753,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4753,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4754,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4754,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4755,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4755,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4756,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4756,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4756,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4758,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4758,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[476,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[476,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[476,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[476,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[476,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[476,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4761,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4761,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4762,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4762,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4763,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4763,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4763,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4765,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4765,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4766,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4766,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4766,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4769,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4769,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4769,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[477,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[477,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[477,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[477,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4774,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4774,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4774,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4774,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4774,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4774,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4774,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4774,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4777,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4777,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4777,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4777,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4777,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4777,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4778,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4778,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4778,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4778,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4778,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4778,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4778,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4778,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4778,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4779,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4779,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4779,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4779,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4779,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4779,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4779,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4779,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4779,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4779,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4779,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4779,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[478,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[478,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[478,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[478,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[478,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[478,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[478,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[478,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4780,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4780,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4780,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4780,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4780,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4780,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4780,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4780,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4780,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4780,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4780,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4781,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4781,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4781,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4781,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4781,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4781,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4781,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4782,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4782,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4782,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4782,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4782,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4782,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4782,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4783,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4783,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4783,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4783,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4783,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4783,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4783,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4783,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4784,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4784,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4784,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4784,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4784,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4784,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4784,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4784,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4784,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4785,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4785,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4785,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4785,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4785,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4785,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4786,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4786,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4786,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4786,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4786,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4786,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4786,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4786,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4786,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4787,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4787,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4787,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4788,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4788,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4788,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4789,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4789,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4789,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4789,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4789,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4789,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4789,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4789,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[479,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[479,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[479,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[479,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[479,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[479,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[479,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[479,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[479,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[479,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[479,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4796,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4796,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[48,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[48,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[480,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[480,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[480,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[480,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[480,33,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[480,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[480,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[480,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[480,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[480,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[481,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[481,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[481,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[481,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[481,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[481,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[481,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[481,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[481,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[481,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[482,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[482,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[482,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[482,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[482,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[482,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[482,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[482,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[482,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[482,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4822,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[483,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[483,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[483,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[483,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[483,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[483,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[483,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[483,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[484,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[484,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[484,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[484,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[484,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[484,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[484,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[484,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[484,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[485,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[485,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[485,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[485,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[485,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[485,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[485,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[485,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[485,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[486,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[486,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[486,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[486,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[486,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[486,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[486,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[486,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[486,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[487,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[487,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[487,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[487,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[487,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[487,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[487,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[487,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[487,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[487,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[487,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[488,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[488,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[488,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[488,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[488,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[488,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[488,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4882,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4882,126,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[489,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[489,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[489,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[489,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[489,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[489,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[489,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[489,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4897,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4897,143,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[490,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[490,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[490,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[490,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[490,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[490,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[491,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[491,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[491,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[491,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[491,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[491,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[491,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[491,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[491,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[491,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[491,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[491,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[492,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[492,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[492,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[492,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[492,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[492,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[492,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[492,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[492,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4928,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[493,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[493,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[493,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[493,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[493,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[493,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[493,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[493,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[494,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[494,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[494,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[494,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[494,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[494,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[494,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[494,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[495,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[495,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[495,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[495,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[495,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[495,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4959,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4959,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[496,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[496,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[496,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[496,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[496,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[4968,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[497,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[497,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[497,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[497,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[497,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[497,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[497,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[497,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[498,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[498,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[498,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[498,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[498,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[498,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[499,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[499,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[499,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[499,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[499,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[499,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[499,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[499,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[499,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[50,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[50,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[50,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[500,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[500,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[500,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[500,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[500,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[500,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[500,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5005,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5005,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[501,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[501,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[501,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[501,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5011,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5011,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[502,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[502,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[502,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[502,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[502,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5022,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5022,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5029,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5029,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[503,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[503,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[503,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[503,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[503,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[503,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[503,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[503,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[503,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[503,39,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[503,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[504,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[504,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[504,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[504,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[504,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[504,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[504,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[504,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[504,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[504,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5043,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5045,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[505,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[505,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[505,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[505,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[505,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[505,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[505,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[505,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[505,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5050,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5050,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[506,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[506,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[506,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[506,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[506,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[506,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[506,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[506,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[507,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[507,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[507,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[507,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[507,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[507,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[507,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[508,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[508,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[508,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[508,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[508,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[508,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[508,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[508,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[508,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[509,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[509,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[509,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[509,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[509,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[509,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[509,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[509,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[509,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[509,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[51,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[510,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[510,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[510,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[510,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5105,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5105,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[511,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[511,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[511,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[511,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[511,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[511,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[511,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[511,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5112,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5112,188,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[512,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[512,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[512,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[512,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[512,32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[512,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5122,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5122,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[513,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[513,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[513,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[513,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[513,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[513,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[513,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[514,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[514,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[514,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[514,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[514,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[514,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[514,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[514,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[515,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[515,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[515,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[515,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[515,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[515,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[515,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[516,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[516,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[516,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[516,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[516,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[516,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[517,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[517,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[517,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[517,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[517,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[517,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[517,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[517,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[517,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[517,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[517,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[517,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5172,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5172,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[518,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[518,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[518,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[518,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[518,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[518,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[518,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[518,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[518,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5186,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5186,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[519,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[519,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[519,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[519,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[519,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[519,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[519,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[52,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[52,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[520,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[520,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[520,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[520,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[520,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5203,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5209,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[521,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[521,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[521,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[521,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[521,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[521,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[521,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[521,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[521,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[522,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[522,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[522,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[522,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[522,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[522,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[522,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[522,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5220,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5220,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5221,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5221,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[523,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[523,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[523,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[523,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[523,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[523,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[523,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[523,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[524,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[524,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[524,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[524,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[524,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[525,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[525,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[525,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[525,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[525,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[525,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[525,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[525,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[525,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[526,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[526,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[526,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[526,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[526,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[526,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[526,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[526,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[527,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[527,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[527,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[527,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[527,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[527,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[527,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[527,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[527,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[528,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[528,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[528,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[528,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[528,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[528,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[528,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5281,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5281,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[529,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[529,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[529,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[529,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[529,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[529,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[529,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[529,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[53,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[530,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[530,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[530,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[530,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[530,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[530,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[530,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[530,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[530,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[530,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[530,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[531,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[531,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[531,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[531,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[531,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5311,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5311,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5316,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5316,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[532,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[532,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[532,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[532,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[532,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[532,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[532,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[532,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[532,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[532,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[532,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[533,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[533,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[533,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[533,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[533,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[533,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[533,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[533,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[533,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[534,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[534,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[534,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[534,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[534,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[534,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[534,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[534,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[534,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[535,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[535,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[535,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[535,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[535,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[535,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5358,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5358,180,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[536,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[536,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[536,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[536,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[536,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[536,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[536,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[536,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[536,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[537,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[537,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[537,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[537,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[537,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[537,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[537,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[537,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[538,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[538,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[538,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[538,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[538,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[538,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[538,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[538,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[538,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[539,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[539,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[539,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[539,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[539,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[539,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[539,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[539,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5390,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[54,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[540,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[540,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[540,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[540,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[540,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[540,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[540,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[541,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[541,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[541,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[541,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[541,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[541,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[541,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[541,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5414,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5414,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5417,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5417,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[542,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[542,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[542,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[542,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[542,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[542,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[542,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[542,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[542,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5422,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5422,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[543,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[543,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[543,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[543,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[543,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[543,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[543,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[543,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[543,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[544,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[544,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[544,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[544,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[544,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[544,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[544,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[544,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[544,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[544,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5447,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5447,73,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[545,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[545,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[545,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[545,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[545,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5456,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5456,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5458,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5458,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[546,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[546,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[546,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[546,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[546,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[546,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5468,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5468,131,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5468,142,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[547,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[547,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[547,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[547,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[547,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[547,31,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[547,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[547,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[548,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[548,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[548,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[548,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[548,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[548,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[548,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[549,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[549,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[549,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[549,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[549,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[549,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[549,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[549,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[549,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[549,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[549,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[550,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[550,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[550,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[550,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[550,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[550,32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[550,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5501,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5501,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[551,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[551,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[551,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[551,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[551,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[551,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[551,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[551,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[551,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[552,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[552,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[552,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[552,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[552,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[552,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[552,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[552,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[552,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[553,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[553,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[553,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[553,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[553,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[553,38,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[553,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[553,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5535,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5535,394,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[554,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[554,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[554,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[554,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[554,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[554,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[554,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[554,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[554,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[554,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[554,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5544,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5544,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[555,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[555,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[555,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[555,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[555,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[555,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[556,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[556,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[556,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[556,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[556,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[556,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[556,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[556,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[556,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[557,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[557,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[557,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[557,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[557,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[557,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[557,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[557,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5572,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5572,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[558,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[558,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[558,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[558,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[558,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[558,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[558,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[559,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[559,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[559,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[559,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[559,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[559,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[559,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[559,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[559,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[56,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[560,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[560,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[560,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[560,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[560,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[560,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[561,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[561,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[561,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[561,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[561,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[561,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[561,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[561,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[562,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[562,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[562,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[562,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[562,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[562,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[562,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5620,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5620,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[563,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[563,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[563,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[563,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[563,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[563,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[563,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[563,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[563,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5634,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5634,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5635,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5635,121,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[564,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[564,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[564,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[564,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[564,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[564,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5646,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5646,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[565,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[565,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[565,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[565,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[565,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[565,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[565,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5657,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5657,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5659,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5659,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[566,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[566,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[566,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[566,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[566,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[566,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[566,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[566,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[566,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[567,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[567,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[567,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[567,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[567,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[567,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[567,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[567,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[567,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[568,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[568,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[568,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[568,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[568,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[568,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[568,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[568,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[568,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[568,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5685,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5685,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[569,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[569,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[569,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[569,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[569,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5697,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[57,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[570,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[570,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[570,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[570,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[570,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[570,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[571,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[571,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[571,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[571,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[571,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[571,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[571,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[571,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[571,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[572,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[572,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[572,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[572,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[572,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[572,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[572,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5725,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[573,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[573,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[573,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[573,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[573,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[573,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[573,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5736,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[574,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[574,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[574,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[574,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[574,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[574,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[575,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[575,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[575,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[575,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[575,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[575,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[575,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[575,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[575,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[575,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[576,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[576,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[576,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[576,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[576,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[576,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[576,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[577,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[577,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[577,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[577,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[577,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[577,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[577,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[577,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[577,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5772,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5772,97,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5775,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5775,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[578,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[578,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[578,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[578,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[578,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[578,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[578,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[578,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[578,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[578,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5781,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[579,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[579,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[579,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[579,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5794,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5794,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[580,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[580,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[580,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[580,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[580,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[580,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[580,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[580,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[580,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[580,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[580,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[580,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[580,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[580,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[581,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[581,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[581,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[581,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[581,33,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[581,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[581,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[581,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5810,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5810,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[582,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[582,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[582,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[582,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[582,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[582,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[582,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[582,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[582,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[583,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[583,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[583,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[583,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[583,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[583,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[584,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[584,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[584,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[584,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[584,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[584,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[584,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5847,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[585,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[585,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[585,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[585,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[585,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[585,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[585,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[585,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[586,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[586,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[586,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[586,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[586,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[586,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[586,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[586,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[586,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[587,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[587,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[587,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[587,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[587,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[587,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5871,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5871,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[588,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[588,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[588,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[588,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[588,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[588,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[588,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[588,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[588,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[588,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[588,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[589,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[589,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[589,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[589,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[589,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[589,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[589,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[589,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5893,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5893,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[59,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[590,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[590,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[590,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[590,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[590,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[590,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[590,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[590,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[590,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[590,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[590,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[591,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[591,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[591,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[591,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[591,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[591,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[591,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[591,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[591,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[591,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[591,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[592,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[592,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[592,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[592,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[592,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[592,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[593,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[593,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[593,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[593,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[593,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[593,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[593,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[593,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[594,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[594,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[594,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[594,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[594,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[594,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[594,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[594,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[594,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[594,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5946,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5946,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[595,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[595,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[595,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[595,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[595,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[595,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[595,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[595,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[595,33,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[595,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[595,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[595,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[596,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[596,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[596,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[596,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[597,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[597,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[597,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[597,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[597,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[597,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[597,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[597,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[597,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[597,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5970,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5970,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5970,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[5972,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[598,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[598,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[598,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[598,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[598,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[598,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[598,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[598,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[598,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[599,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[599,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[599,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[599,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[599,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[599,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[599,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[599,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[599,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[599,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[599,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[599,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[599,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6,100,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6,123,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6,256,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6,256000,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6,32000,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6,8,9,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6,99,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[60,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[60,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[600,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[600,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[600,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[600,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[600,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[600,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[600,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[600,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[600,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[600,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6002,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6002,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6006,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6006,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[601,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[601,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[601,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[601,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[601,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[601,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[602,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[602,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[602,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[602,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[602,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[602,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[602,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[602,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[603,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[603,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[603,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[603,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[603,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[603,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[603,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[603,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[603,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[603,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[604,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[604,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[604,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[604,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[604,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[604,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[604,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[604,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[604,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[605,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[605,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[605,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[605,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[605,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[605,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6054,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6054,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[606,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[606,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[606,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[606,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[606,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[606,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[606,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[606,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[606,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[606,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[606,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6068,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6068,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[607,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[607,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[607,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[607,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[607,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[607,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6072,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6072,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[608,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[608,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[608,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[608,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[608,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[608,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[608,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[608,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[609,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[609,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[609,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[609,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[609,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[609,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[609,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[609,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[609,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[609,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[609,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[61,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[610,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[610,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[610,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[610,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[610,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[610,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[610,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[610,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[611,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[611,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[611,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[611,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[611,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[611,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[611,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[611,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[611,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[611,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[611,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[611,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[611,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[611,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[612,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[612,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[612,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[612,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[612,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[612,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[612,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[612,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[612,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[612,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[612,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[613,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[613,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[613,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[613,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[613,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[613,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[613,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[614,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[614,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[614,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[614,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[614,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[614,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[614,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[614,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6145,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6145,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[615,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[615,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[615,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[615,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[615,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[615,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[615,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[615,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[615,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[616,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[616,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[616,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[616,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[616,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[616,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[616,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[616,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[616,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[616,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[617,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[617,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[617,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[617,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[617,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[617,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6178,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6178,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[618,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[618,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[618,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[618,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[618,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[618,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[618,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[618,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[618,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[618,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[618,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6189,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6189,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[619,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[619,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[619,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[619,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[619,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[619,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[619,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[619,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6198,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6198,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[62,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[620,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[620,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[620,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[620,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[620,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[620,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[620,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[620,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[620,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[621,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[621,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[621,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[621,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[621,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[621,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[621,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[621,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[621,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[621,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[622,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[622,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[622,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[622,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[622,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[622,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[623,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[623,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[623,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[623,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[623,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[623,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[623,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[623,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6235,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6235,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[624,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[624,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[624,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[624,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[624,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[624,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[624,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[624,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[624,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[624,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[625,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[625,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[625,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[625,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[625,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[625,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[625,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[625,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[626,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[626,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[626,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[626,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[626,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[626,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[627,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[627,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[627,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[627,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[627,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[627,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[628,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[628,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[628,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[628,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[628,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[628,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[628,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[628,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[628,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6288,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6288,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[629,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[629,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[629,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[629,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[629,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[629,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[629,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[629,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[629,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[63,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[630,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[630,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[630,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[630,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[630,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[630,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[630,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[630,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[630,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[631,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[631,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[631,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[631,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[631,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[631,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[631,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[631,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[631,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[631,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[631,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6310,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[632,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[632,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[632,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[632,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[632,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[632,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[633,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[633,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[633,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[633,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[633,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[633,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[633,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[633,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[633,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[634,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[634,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[634,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[634,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[634,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[634,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6340,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6340,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6346,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6346,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[635,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[635,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[635,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[635,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[635,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[635,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[635,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[635,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6359,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[636,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[636,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[636,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[636,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[636,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[636,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[636,33,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[636,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[636,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[637,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[637,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[637,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[637,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[637,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[637,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[637,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[638,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[638,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[638,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[638,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[638,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[638,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[638,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[639,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[639,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[639,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[639,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[639,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[639,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[639,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[639,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[64,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[64,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[640,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[640,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[640,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[640,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[640,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[640,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[640,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[640,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6407,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6407,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[641,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[641,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[641,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[641,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[641,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[641,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[641,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[641,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[641,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[641,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[642,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[642,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[642,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[642,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6422,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6424,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6424,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[643,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[643,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[643,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[643,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[643,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[643,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[643,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6432,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6432,139,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6433,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6433,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[644,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[644,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[644,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[644,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[644,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[644,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[644,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[644,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[645,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[645,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[645,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[645,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[645,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[645,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[645,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[645,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[645,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6457,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6457,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[646,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[646,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[646,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[646,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[646,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[646,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[646,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[646,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[647,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[647,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[647,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[647,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[647,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[647,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[647,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6479,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6479,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[648,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[648,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[648,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[648,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[648,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[648,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[648,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[648,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[648,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[648,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[648,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[648,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6484,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[649,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[649,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[649,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[649,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[649,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[649,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[65,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[650,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[650,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[650,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[650,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[650,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[650,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[650,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[650,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[650,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[650,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[650,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[650,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[651,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[651,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[651,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[651,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[651,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[651,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[651,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[651,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[651,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[651,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[652,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[652,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[652,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[652,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[652,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[652,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[652,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[652,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[653,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[653,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[653,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[653,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[653,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[653,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[653,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[654,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[654,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[654,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[654,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[654,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[654,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[654,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6542,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[655,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[655,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[655,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[655,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[655,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[655,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[656,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[656,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[656,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[656,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[656,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[656,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[656,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[656,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[656,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6569,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6569,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[657,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[657,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[657,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[657,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[657,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[657,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[657,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[657,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[658,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[658,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[658,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[658,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[658,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[658,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[658,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[658,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[658,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[658,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[658,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[658,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[659,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[659,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[659,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[659,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[659,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[659,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6593,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6593,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[66,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[66,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[660,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[660,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[660,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[660,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[660,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[660,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[660,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[660,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[660,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[660,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[660,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[660,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[661,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[661,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[661,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[661,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[661,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[661,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[661,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[661,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[661,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[661,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[661,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[661,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[661,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6617,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[662,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[662,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[662,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[662,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[662,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[662,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[662,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[662,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[662,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[663,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[663,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[663,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[663,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[663,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[663,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[663,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[664,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[664,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[664,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[664,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[664,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[664,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[664,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[665,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[665,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[665,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[665,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[665,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[665,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[665,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[666,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[666,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[666,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[666,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[666,38,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[666,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[666,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[666,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[666,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6666,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6666,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[667,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[667,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[667,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[667,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[667,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[667,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[667,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[667,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[667,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[667,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6678,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6678,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[668,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[668,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[668,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[668,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[668,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[668,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[668,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[668,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[668,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[668,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[668,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6688,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6688,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6689,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6689,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[669,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[669,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[669,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[669,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[669,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[669,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[669,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[669,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[669,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[67,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[67,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[670,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[670,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[670,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[670,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[670,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6709,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6709,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[671,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[671,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[671,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[671,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[671,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[671,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[671,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[671,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6712,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[672,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[672,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[672,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[672,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[672,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[672,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[672,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[673,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[673,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[673,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[673,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[673,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[673,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[673,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[673,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[673,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[673,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[674,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[674,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[674,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[674,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[674,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[674,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[674,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[675,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[675,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[675,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[675,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[675,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[675,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[675,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[675,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[675,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6759,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6759,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[676,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[676,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[676,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[676,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[676,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[676,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6760,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6760,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[677,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[677,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[677,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[677,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[677,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[677,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[677,35,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[677,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[677,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[677,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[677,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6779,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[678,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[678,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[678,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[678,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[678,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[678,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[678,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[678,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[678,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[679,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[679,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[679,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[679,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[679,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[679,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[679,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[679,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[679,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[68,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[680,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[680,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[680,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[680,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[680,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[680,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[681,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[681,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[681,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[681,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[681,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[681,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[682,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[682,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[682,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[682,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[682,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[683,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[683,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[683,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[683,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[683,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[683,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[683,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[683,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[683,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[684,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[684,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[684,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[684,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[684,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[684,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6842,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6842,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[685,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[685,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[685,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[685,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[685,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[685,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[685,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[685,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6850,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6850,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[686,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[686,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[686,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[686,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[686,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[686,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[686,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[686,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[686,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[686,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[687,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[687,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[687,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[687,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[687,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[687,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[687,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[687,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[687,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[687,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[687,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[688,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[688,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[688,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[688,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[688,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[688,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[688,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[688,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[688,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[689,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[689,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[689,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[689,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[689,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[689,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[689,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[69,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[69,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[69,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[690,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[690,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[690,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[690,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[690,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[690,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[690,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[690,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6905,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6908,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6908,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6909,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[691,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[691,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[691,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[691,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[691,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[691,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[691,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[692,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[692,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[692,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[692,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[692,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[692,40,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[692,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[692,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[692,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[693,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[693,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[693,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[693,31,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[693,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6936,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6936,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6938,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6938,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[694,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[694,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[694,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[694,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[694,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[694,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[694,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[694,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6942,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6942,136,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[695,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[695,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[695,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[695,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[695,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[695,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[696,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[696,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[696,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[696,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[696,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[696,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[696,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[696,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[696,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[696,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6961,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[6961,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[697,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[697,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[697,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[697,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[697,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[697,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[697,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[697,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[698,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[698,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[698,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[698,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[698,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[698,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[698,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[698,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[699,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[699,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[699,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[699,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[699,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[699,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[699,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[699,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[70,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[700,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[700,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[700,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[700,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[700,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[700,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[700,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[700,42,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[700,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7007,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7007,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[701,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[701,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[701,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[701,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[701,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[701,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[701,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[701,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[701,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[702,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[702,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[702,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[702,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[702,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[702,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[702,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[702,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[702,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[703,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[703,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[703,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[703,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[703,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[703,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7030,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[704,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[704,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[704,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[704,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[704,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[704,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[704,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7046,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7046,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[705,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[705,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[705,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[705,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[705,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[705,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[706,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[706,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[706,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[706,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[706,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[707,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[707,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[707,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[707,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[707,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[707,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[707,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7074,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7074,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[708,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[708,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[708,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[708,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[708,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[708,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[708,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[709,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[709,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[709,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[709,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[709,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[709,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7094,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7094,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[71,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[71,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[710,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[710,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[710,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[710,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[710,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[710,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[710,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[710,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[711,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[711,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[711,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[711,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[711,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[711,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[711,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[711,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[711,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[712,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[712,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[712,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[712,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[712,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[712,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[712,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[713,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[713,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[713,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[713,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[713,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[713,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[713,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[713,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[713,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[713,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[713,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[714,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[714,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[714,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[714,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[714,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[714,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[714,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7142,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7142,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[715,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[715,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[715,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[715,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[715,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[715,35,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[715,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[715,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[715,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[715,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[716,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[716,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[716,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[716,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[716,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[716,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[716,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[716,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[716,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[716,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[717,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[717,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[717,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[717,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[717,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[717,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[717,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7173,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7173,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[718,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[718,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[718,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[718,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[718,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[718,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[718,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[718,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[718,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[719,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[719,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[719,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[719,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[719,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[719,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[719,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[72,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[72,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[720,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[720,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[720,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[720,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[720,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7206,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7206,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7207,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7207,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[721,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[721,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[721,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[721,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[721,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[721,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[721,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[721,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[721,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[722,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[722,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[722,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[722,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[723,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[723,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[723,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[723,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[723,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[723,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[724,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[724,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[724,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[724,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[724,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[725,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[725,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[725,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[725,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[725,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[725,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[725,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[726,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[726,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[726,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[726,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[726,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[726,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[726,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[726,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[726,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[726,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[726,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[727,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[727,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[727,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[727,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[727,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[727,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[727,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[727,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[727,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[728,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[728,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[728,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[728,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[728,37,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[728,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[728,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[729,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[729,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[729,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[729,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[729,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[729,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[729,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[729,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7298,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7298,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[73,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[73,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[730,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[730,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[730,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[730,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[730,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[730,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[730,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[730,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[730,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[730,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7308,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7308,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[731,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[731,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[731,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[731,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[731,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[731,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[731,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[731,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[731,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[732,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[732,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[732,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[732,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[732,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[732,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[732,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[732,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[732,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[733,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[733,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[733,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[733,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[733,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[733,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[733,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[734,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[734,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[734,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[734,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[734,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[734,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[734,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[734,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[734,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[734,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[734,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7349,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7349,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[735,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[735,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[735,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[735,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[735,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[735,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[735,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[735,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[735,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[736,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[736,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[736,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[736,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[736,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[736,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[736,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[736,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[737,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[737,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[737,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[737,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[737,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[737,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[737,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[738,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[738,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[738,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[738,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[739,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[739,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[739,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[739,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[739,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[739,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[739,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[739,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[739,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[74,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[740,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[740,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[740,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[740,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[740,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[740,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[740,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[741,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[741,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[741,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[741,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[741,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[741,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[741,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[741,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[741,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[742,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[742,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[742,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[742,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[742,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[742,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[742,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[742,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[742,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7420,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7420,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[743,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[743,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[743,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[743,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[743,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[743,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[743,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[743,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[744,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[744,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[744,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[744,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[744,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[744,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[744,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[744,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[744,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7441,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7441,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7449,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[745,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[745,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[745,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[745,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[745,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[745,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[745,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[745,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[745,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7454,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7454,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7455,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7455,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[746,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[746,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[746,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[746,40,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[746,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[746,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[746,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[747,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[747,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[747,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[747,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[747,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[748,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[748,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[748,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[748,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[748,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[748,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[748,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[748,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[749,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[749,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[749,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[749,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[749,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[749,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[749,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[749,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[749,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[749,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[75,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[75,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[750,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[750,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[750,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[750,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[750,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[750,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[750,31,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[750,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[750,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[751,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[751,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[751,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[751,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[751,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[751,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[751,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[751,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[751,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[752,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[752,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[752,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[752,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[752,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[752,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[752,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[753,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[753,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[753,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[753,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[753,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[754,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[754,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[754,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[754,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[754,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[754,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[754,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[754,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[755,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[755,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[755,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[755,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[755,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[755,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[756,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[756,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[756,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[756,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[756,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[756,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[756,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[757,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[757,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[757,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[757,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[757,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[757,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[757,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[758,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[758,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[758,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[758,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[758,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[758,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[758,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[758,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[758,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[758,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[759,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[759,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[759,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[759,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[759,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[759,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[759,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[759,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[759,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[759,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[76,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[76,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[760,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[760,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[760,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[760,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[760,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[760,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[760,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[760,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[761,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[761,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[761,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[761,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[761,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[761,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7610,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7610,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[762,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[762,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[762,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[762,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[762,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[762,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[762,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[762,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[763,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[763,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[763,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[763,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[763,35,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[763,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[763,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[763,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[764,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[764,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[764,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[764,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[764,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[764,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[764,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[764,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[764,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[765,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[765,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[765,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[765,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[765,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[765,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[765,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[765,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[765,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7654,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7654,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[766,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[766,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[766,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[766,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[766,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[766,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[766,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[766,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[766,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7662,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[767,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[767,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[767,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[767,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[767,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[767,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[767,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[767,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[768,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[768,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[768,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[768,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[768,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[768,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[768,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[768,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[769,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[769,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[769,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[769,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[769,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[769,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[769,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[769,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[769,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[769,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7695,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7695,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[77,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[77,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[770,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[770,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[770,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[770,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[770,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[770,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[770,33,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[770,34,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[770,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[771,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[771,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[771,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[771,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[771,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[771,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[771,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[771,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[771,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[771,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[772,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[772,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[772,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[772,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[772,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[772,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[772,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[772,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[773,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[773,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[773,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[773,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[773,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[773,34,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[773,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[773,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[773,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[773,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[774,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[774,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[774,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[774,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[774,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[774,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[774,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[775,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[775,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[775,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[775,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[775,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[775,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[775,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[775,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[775,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[776,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[776,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[776,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[776,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[776,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[776,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[776,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[776,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[776,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[777,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[777,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[777,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[777,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[777,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[777,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[777,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[777,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[778,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[778,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[778,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[778,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[778,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[778,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[778,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[778,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[778,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7781,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7781,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[779,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[779,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[779,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[779,40,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[779,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[78,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[78,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[780,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[780,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[780,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[780,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[780,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[780,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[781,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[781,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[781,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[781,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[781,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[781,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[782,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[782,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[782,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[782,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[782,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[782,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[782,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[782,34,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[782,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[782,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[782,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[782,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[783,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[783,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[783,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[783,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[783,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[783,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[783,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[784,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[784,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[784,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[784,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[784,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[784,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[784,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[784,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7842,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7842,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7846,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[785,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[785,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[785,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[785,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[785,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[785,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[785,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[786,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[786,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[786,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[786,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[786,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[786,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[786,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[786,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[786,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7865,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7865,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[787,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[787,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[787,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[787,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[787,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[787,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[787,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[787,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[787,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[787,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[788,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[788,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[788,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[788,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[788,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[788,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[788,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[789,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[789,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[789,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[789,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[79,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[790,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[790,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[790,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[790,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[791,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[791,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[791,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[791,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[791,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[791,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[791,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[791,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[792,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[792,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[792,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[792,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[792,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[792,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[792,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[792,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[792,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[792,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[792,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[792,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[793,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[793,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[793,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[793,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[793,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[794,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[794,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[794,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[794,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[794,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[795,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[795,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[795,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[795,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[796,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[796,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[796,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[796,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[796,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[796,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[796,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[796,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[796,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7968,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[797,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[797,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[797,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[797,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[797,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[797,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[797,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[797,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[797,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[797,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[797,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[798,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[798,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[798,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[798,35,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[798,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[798,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7984,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7984,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[799,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[799,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[799,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[799,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[799,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[799,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[799,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7993,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[7993,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8,32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[80,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[80,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[80,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[800,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[800,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[800,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[800,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[800,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[800,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[800,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[800,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[800,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[801,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[801,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[801,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[801,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[801,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[801,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[802,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[802,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[802,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[802,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[802,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[802,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[802,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[802,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[802,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[803,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[803,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[803,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[803,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[803,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[803,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[803,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[803,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[803,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[803,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[804,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[804,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[804,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[804,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[804,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[804,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[804,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[804,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[804,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[804,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[804,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[805,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[805,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[805,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[805,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[805,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[805,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[805,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[805,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[805,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[805,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[805,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[806,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[806,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[806,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[806,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[806,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[806,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[806,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[806,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[807,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[807,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[807,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[807,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[807,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[807,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[807,34,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[807,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[807,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[807,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8075,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8075,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[808,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[808,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[808,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[808,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[808,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[808,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[808,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[808,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[808,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[809,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[809,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[809,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[809,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[809,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[809,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[809,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[809,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[809,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[809,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[81,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[81,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[810,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[810,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[810,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[810,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[810,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[810,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8100,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8100,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[811,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[811,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[811,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[811,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[811,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[811,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[811,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[811,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[811,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[811,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[811,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[812,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[812,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[812,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[812,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[812,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[812,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8122,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8122,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[813,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[813,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[813,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[813,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[813,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[813,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[813,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[813,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[814,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[814,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[814,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[814,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[814,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[814,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[814,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[814,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[815,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[815,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[815,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[815,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[815,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[815,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[816,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[816,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[816,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[816,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[816,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[816,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[816,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8160,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8165,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8165,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[817,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[817,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[817,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[817,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[817,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[817,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[817,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[817,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[818,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[818,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[818,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[818,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[818,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[818,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[818,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[819,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[819,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[819,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[819,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[819,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[819,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[819,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[82,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[82,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[820,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[820,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[820,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[820,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[820,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[820,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[820,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[820,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[820,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[821,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[821,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[821,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[821,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[821,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[821,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[821,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[822,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[822,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[822,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[822,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[822,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[822,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[822,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[822,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[823,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[823,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[823,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[823,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[823,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[823,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[823,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[823,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[824,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[824,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[824,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[824,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[824,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[824,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[824,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[824,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[825,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[825,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[825,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[825,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[825,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[826,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[826,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[826,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[826,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[826,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[827,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[827,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[827,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[827,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[827,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[827,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[828,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[828,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[828,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[828,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[828,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[828,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8280,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[829,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[829,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[829,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[829,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[829,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[829,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[829,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8295,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8295,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[83,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[830,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[830,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[830,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[830,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[830,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[830,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[830,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[830,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[830,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[830,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[830,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[831,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[831,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[831,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[831,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[831,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[831,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[831,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[832,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[832,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[832,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[832,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[833,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[833,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[833,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[833,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[833,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[833,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[833,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[833,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[833,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8333,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[834,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[834,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[834,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[834,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[834,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[834,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[834,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[834,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[834,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[834,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[835,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[835,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[835,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[835,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[835,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[835,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[835,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[835,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[835,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8355,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8355,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[836,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[836,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[836,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[836,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[836,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[836,32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[836,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[837,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[837,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[837,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[837,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[837,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[837,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[837,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[837,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[837,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[838,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[838,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[838,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[838,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[838,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[838,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[838,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[838,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[838,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[838,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8381,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8381,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[839,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[839,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[839,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[839,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[839,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[839,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[839,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[839,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[839,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[839,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[84,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[840,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[840,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[840,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[840,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[840,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[840,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[840,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[841,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[841,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[841,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[841,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[841,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[842,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[842,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[842,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[842,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[842,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[842,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[842,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[842,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[843,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[843,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[843,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[843,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[843,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[844,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[844,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[844,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[844,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[844,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[844,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[844,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[844,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8442,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8442,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[845,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[845,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[845,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[845,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[846,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[846,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[846,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[846,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[846,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[846,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[846,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[846,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[846,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[846,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8460,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[847,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[847,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[847,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[847,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[847,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[847,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[847,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[847,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8475,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8475,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[848,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[848,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[848,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[848,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[848,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[849,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[849,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[849,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[849,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[849,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[849,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[849,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[85,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[850,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[850,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[850,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[850,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[850,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[850,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[850,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[850,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[850,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[851,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[851,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[851,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[851,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[851,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[851,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[851,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[851,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[851,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[851,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[851,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[852,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[852,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[852,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[852,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[852,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[852,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[852,54,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[852,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[853,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[853,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[853,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[853,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[853,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[853,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[854,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[854,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[854,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[854,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[854,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[854,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[854,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[854,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[855,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[855,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[855,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[855,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[855,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[855,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[856,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[856,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[856,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[856,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[856,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[856,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[856,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[856,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8568,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[857,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[857,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[857,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[857,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[857,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[857,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[857,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[857,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[857,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[857,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[858,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[858,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[858,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[858,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[858,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[858,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[858,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8589,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[859,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[859,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[859,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[859,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[859,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8597,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8597,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[86,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[86,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[860,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[860,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[860,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[860,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[860,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[860,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[860,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[861,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[861,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[861,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[861,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[861,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[861,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[862,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[862,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[862,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[862,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[862,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[862,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[862,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[862,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[863,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[863,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[863,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[863,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[863,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[863,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[863,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[863,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[864,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[864,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[864,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[864,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[864,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[864,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[864,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[865,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[865,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[865,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[865,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[865,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[866,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[866,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[866,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[866,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[866,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[866,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[866,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[867,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[867,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[867,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[867,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[867,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[867,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[867,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8679,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[868,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[868,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[868,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[868,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[868,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[868,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[868,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[868,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[868,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[868,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[868,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[868,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[869,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[869,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[869,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[869,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[869,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[869,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[869,31,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[869,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[87,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[870,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[870,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[870,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[870,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[870,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[870,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[870,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[871,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[871,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[871,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[871,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[871,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8717,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8717,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[872,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[872,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[872,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[872,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[872,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[872,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[873,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[873,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[873,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[873,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[873,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[873,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[873,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[874,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[874,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[874,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[874,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[874,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[874,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[874,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[875,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[875,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[875,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[875,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[875,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[875,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[875,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8758,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8758,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[876,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[876,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[876,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[876,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[876,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[876,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[876,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[876,35,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[877,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[877,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[877,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[877,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[877,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[877,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[877,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[877,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[877,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[877,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[877,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[877,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8771,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[878,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[878,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[878,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[878,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[878,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[878,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[878,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[878,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[879,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[879,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[879,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[879,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[879,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[879,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[88,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[880,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[880,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[880,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[880,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[880,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[880,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[880,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[880,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[880,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[880,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[881,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[881,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[881,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[881,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[881,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[881,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[881,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[881,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8816,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8816,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[882,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[882,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[882,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[882,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[882,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[883,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[883,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[883,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[883,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[883,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[883,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[883,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[883,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[883,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[883,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[883,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[884,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[884,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[884,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[884,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[884,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[884,31,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[884,32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[884,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[884,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[884,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[884,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8846,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[885,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[885,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[885,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[885,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[885,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[885,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[885,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[885,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[885,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[886,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[886,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[886,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[886,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[886,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[886,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[886,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[887,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[887,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[887,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[887,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[887,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[887,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[887,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[887,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[888,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[888,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[888,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[888,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[888,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[888,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[888,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[888,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[888,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[888,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[888,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[889,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[889,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[889,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[889,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[889,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[89,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[89,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[890,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[890,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[890,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[890,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[890,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[890,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[891,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[891,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[891,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[891,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[891,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[891,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[8910,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[892,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[892,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[892,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[892,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[892,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[892,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[892,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[892,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[892,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[893,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[893,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[893,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[893,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[893,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[893,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[893,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[894,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[894,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[894,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[894,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[894,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[894,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[894,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[895,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[895,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[895,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[895,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[895,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[895,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[895,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[896,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[896,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[896,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[896,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[896,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[896,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[896,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[896,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[896,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[896,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[896,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[896,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[896,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[896,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[897,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[897,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[897,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[897,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[897,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[897,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[897,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[898,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[898,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[898,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[898,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[898,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[898,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[898,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[898,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[898,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[899,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[899,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[899,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[899,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[899,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[899,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[899,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[90,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[90,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[900,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[900,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[900,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[900,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[900,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[900,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[901,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[901,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[901,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[901,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[901,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[901,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[901,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[902,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[902,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[902,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[902,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[902,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[902,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[902,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[902,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[902,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9021,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[903,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[903,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[903,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[903,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[903,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[903,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[903,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[904,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[904,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[904,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[904,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[904,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[904,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[904,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[905,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[905,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[905,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[905,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[905,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[905,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[905,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[906,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[906,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[906,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[906,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[906,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[906,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[906,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[906,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[906,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[907,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[907,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[907,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[907,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[907,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[907,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[907,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[908,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[908,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[908,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[908,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[908,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[909,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[909,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[909,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[909,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[909,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[909,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[909,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[91,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[91,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[910,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[910,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[910,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[910,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[910,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[910,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[910,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[910,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[910,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[910,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[910,39,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[910,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[910,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[910,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[911,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[911,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[911,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[911,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[911,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[911,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[912,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[912,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[912,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[912,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[912,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[912,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[912,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[912,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[912,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[912,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[913,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[913,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[913,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[913,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[913,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[913,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[913,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[914,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[914,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[914,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[914,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[914,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[914,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[914,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[914,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[915,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[915,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[915,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[915,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[915,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[915,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[916,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[916,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[916,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[916,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[916,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[916,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9168,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9168,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[917,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[917,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[917,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[917,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[917,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[917,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[917,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[918,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[918,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[918,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[918,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[918,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[918,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[919,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[919,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[919,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[919,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[92,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[92,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[920,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[920,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[920,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[920,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[920,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[920,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[920,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[920,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[920,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[920,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9203,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9203,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[921,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[921,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[921,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[921,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[921,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[922,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[922,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[922,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[922,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[922,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[923,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[923,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[923,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[923,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[923,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[923,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[924,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[924,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[924,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[924,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[924,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[924,32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[924,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[924,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[924,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[925,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[925,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[925,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[925,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[925,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[925,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[926,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[926,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[926,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[926,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[926,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[926,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9263,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9263,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[927,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[927,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[927,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[927,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[927,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[927,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[927,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[927,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[928,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[928,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[928,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[928,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[928,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[929,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[929,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[929,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[929,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[929,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[929,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[929,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[93,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[930,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[930,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[930,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[930,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[930,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[930,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[930,27,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[930,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[930,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[931,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[931,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[931,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[931,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[931,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[931,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[931,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[932,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[932,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[932,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[932,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[932,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[932,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9322,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9322,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[933,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[933,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[933,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[933,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[933,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[933,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[933,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[933,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[933,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[933,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[933,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[934,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[934,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[934,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[934,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[934,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[934,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[934,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[934,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[935,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[935,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[935,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[935,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[935,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[935,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[935,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[935,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[935,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[936,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[936,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[936,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[936,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[936,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[936,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[936,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[936,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[936,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[937,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[937,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[937,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[937,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[937,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[937,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[937,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[937,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[937,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[937,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[937,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[938,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[938,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[938,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[938,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[938,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[938,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[938,30,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[938,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[938,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[938,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[938,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[939,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[939,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[939,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[939,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[939,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[94,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[94,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[940,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[940,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[940,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[940,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[940,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[940,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[941,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[941,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[941,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[941,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[941,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[941,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[941,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[941,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[941,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[941,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[941,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[941,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[941,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[942,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[942,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[942,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[942,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[942,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[942,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[942,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[943,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[943,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[943,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[943,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[943,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9437,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9437,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[944,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[944,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[944,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[944,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[944,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[944,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[944,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[945,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[945,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[945,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[945,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[945,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[945,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[945,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[945,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[945,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9451,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9451,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[946,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[946,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[946,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[946,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[946,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[947,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[947,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[947,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[947,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[947,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[947,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[947,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[947,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[947,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[948,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[948,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[948,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[948,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[948,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[948,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[948,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9485,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[949,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[949,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[949,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[949,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[949,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[95,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[95,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[950,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[950,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[950,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[950,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[950,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[951,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[951,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[951,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[951,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[951,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[951,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[951,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[951,32,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[951,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[951,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[951,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[952,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[952,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[952,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[952,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[952,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[952,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[953,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[953,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[953,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[953,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[953,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[953,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[953,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[953,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[953,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[953,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[954,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[954,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[954,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[954,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[954,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[954,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[955,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[955,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[955,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[955,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[955,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[955,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[955,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[955,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[956,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[956,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[956,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[956,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[956,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[956,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[956,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[956,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[957,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[957,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[957,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[957,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[957,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[957,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[957,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[957,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[957,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[957,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[957,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[958,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[958,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[958,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[958,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[958,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[958,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[958,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[958,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[959,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[959,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[959,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[959,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[959,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[959,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[959,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[959,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[96,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[96,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[960,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[960,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[960,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[960,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[960,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[960,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[961,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[961,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[961,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[961,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[961,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[961,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[961,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[961,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[962,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[962,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[962,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[962,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[962,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[962,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[963,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[963,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[963,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[963,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[963,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[963,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[963,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[963,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[963,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[964,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[964,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[964,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[964,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[964,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[964,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[964,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[964,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[964,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[965,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[965,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[965,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[965,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[965,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[965,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[965,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[965,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[965,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[966,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[966,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[966,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[966,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[966,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[967,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[967,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[967,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[967,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[967,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[967,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[967,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[967,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[968,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[968,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[968,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[968,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[968,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[968,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[968,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[968,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[968,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[969,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[969,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[969,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[969,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[969,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[969,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[969,48,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[969,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[969,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[97,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[970,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[970,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[970,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[970,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[970,26,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[970,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[970,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[970,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[971,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[971,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[971,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[971,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[971,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[972,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[972,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[972,15,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[972,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[972,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[972,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[972,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[972,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[972,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[973,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[973,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[973,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[973,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[973,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[973,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[974,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[974,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[974,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[974,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[974,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9749,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9749,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[975,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[975,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[975,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[975,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[975,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[975,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[976,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[976,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[976,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[976,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[976,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[976,29,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[976,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[976,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[977,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[977,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[977,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[977,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[977,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[977,36,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[977,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[978,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[978,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[978,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[978,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[978,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[978,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[978,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[979,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[979,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[979,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[979,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[979,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[979,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[98,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[980,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[980,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[980,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[980,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[980,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[980,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[980,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[981,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[981,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[981,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[981,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[981,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[981,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[981,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[982,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[982,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[982,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[982,21,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[982,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[982,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[982,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[982,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[982,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[983,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[983,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[983,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[983,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[983,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[983,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[983,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[983,24,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[983,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[984,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[984,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[984,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[984,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[984,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[984,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[984,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[984,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[985,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[985,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[985,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[985,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[985,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[985,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[985,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[985,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[986,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[986,18,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[986,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[986,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[986,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[986,45,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[986,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[986,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[987,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[987,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[987,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[987,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[987,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[988,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[988,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[988,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[988,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[988,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[988,40,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[988,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[988,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[989,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[989,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[989,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[989,25,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[989,28,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[989,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[989,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[99,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[99,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[99,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[990,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[990,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[990,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[990,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[990,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[990,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[990,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[990,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[990,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[991,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[991,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[991,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[991,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[991,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[991,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[991,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[991,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[991,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9911,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[992,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[992,16,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[992,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[992,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[992,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[992,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[992,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[992,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[993,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[993,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[993,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[993,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[993,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[993,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[994,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[994,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[994,22,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[994,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[994,4,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[994,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[994,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[995,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[995,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[995,17,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[995,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[995,23,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[995,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[995,7,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[996,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[996,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[996,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[9969,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[997,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[997,11,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[997,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[997,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[997,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[997,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[997,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[997,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[997,9,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[998,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[998,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[998,19,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[998,2,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[998,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[999,1,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[999,10,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[999,12,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[999,13,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[999,14,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[999,20,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[999,3,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[999,5,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[999,6,], )
paddle.Tensor.reshape(Tensor([0],"float32"), list[999,8,], )
paddle.Tensor.reshape(Tensor([0],"float32"), tuple(1,-1,), )
paddle.Tensor.reshape(Tensor([0],"float32"), tuple(-1,1,), )
paddle.Tensor.reshape(Tensor([0],"float32"), tuple(1,1,-1,), )
paddle.Tensor.reshape(Tensor([0],"float32"), tuple(-1,1,1,), )
paddle.Tensor.reshape(Tensor([0],"float32"), tuple(-1,1,1,1,), )
paddle.Tensor.reshape(Tensor([0],"float32"), tuple(-1,1,2,), )
paddle.Tensor.reshape(Tensor([0],"float32"), tuple(1,1,4,), )
paddle.Tensor.reshape(Tensor([0],"float32"), tuple(1,128,1,1,), )
paddle.Tensor.reshape(Tensor([0],"float32"), tuple(1,2,3,), )
paddle.Tensor.reshape(Tensor([0],"float32"), tuple(1,256,1,1,), )
paddle.Tensor.reshape(Tensor([0],"float32"), tuple(1,3,1,1,), )
paddle.Tensor.reshape(Tensor([0],"float32"), tuple(1,512,), )
paddle.Tensor.reshape(Tensor([0],"float32"), tuple(1,512,1,1,), )
paddle.Tensor.reshape(Tensor([0],"float64"), list[1,1,1,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[1,1,1,1,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[1,1,1,-1,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[1,1,1,1,-1,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[1,-1,1,1,1,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[1,1,1,4,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[1,1,3,1,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[1,10,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[1,2,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[1,2,1,1,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[1,2,3,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[1,3,2,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[1,4,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[1,5,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[10,1,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[12,12,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[12,20,2,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[16,18,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[18,18,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[18,9,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[2,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[2,1,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[2,2,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[2,24,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[2,3,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[2,3,2,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[2,3,4,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[2,3,4,5,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[2,6,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[2,8,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[24,24,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[3,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[3,1,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[3,1,2,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[3,2,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[3,3,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[3,4,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[3,4,5,6,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[32,32,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[36,36,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[4,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[4,1,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[4,4,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[4,8,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[5,1,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[5,5,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[5,6,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[5,8,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[6,4,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[6,6,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[7,7,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[72,72,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[8,18,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[8,4,], )
paddle.Tensor.reshape(Tensor([0],"float64"), list[9,18,], )
paddle.Tensor.reshape(Tensor([0],"float64"), tuple(-1,), )
paddle.Tensor.reshape(Tensor([0],"float64"), tuple(-1,1,1,), )
paddle.Tensor.reshape(Tensor([0],"float64"), tuple(1,100,), )
paddle.Tensor.reshape(Tensor([0],"float64"), tuple(1,17,), )
paddle.Tensor.reshape(Tensor([0],"float64"), tuple(1,4,), )
paddle.Tensor.reshape(Tensor([0],"float64"), tuple(-1,4,), )
paddle.Tensor.reshape(Tensor([0],"float64"), tuple(1,40,), )
paddle.Tensor.reshape(Tensor([0],"float64"), tuple(-1,50,), )
paddle.Tensor.reshape(Tensor([0],"float64"), tuple(4,-1,), )
paddle.Tensor.reshape(Tensor([0],"int16"), list[11,17,10,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[-1,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,1,32,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,10285,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,188,140,-1,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,21504,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,24276,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,27216,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,30324,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,33600,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,3598,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,36858,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,37044,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,38402,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,40656,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,4165,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,44436,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,4789,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,48384,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,52500,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,5440,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,56784,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,61236,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,6150,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,6400,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,65856,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,6885,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,70644,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,75600,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,7681,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,8400,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,8500,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,8580,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[1,9382,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[11,17,10,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[13,1,1,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,10164,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,11109,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,12096,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,2100,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,2125,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,2541,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,3024,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,3060,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,3549,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,4116,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,4725,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,5376,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,6069,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,6804,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,7581,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,8400,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[16,9261,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,10164,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,10285,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,11109,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,12096,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,2100,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,2541,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,3024,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,3549,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,3598,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,4116,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,4165,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,4725,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,4789,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,5376,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,5440,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,6069,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,6150,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,6804,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,6885,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,7581,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,7681,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,8400,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,8500,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,9261,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[2,9382,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,10164,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,11109,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,12096,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,2100,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,2541,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,2577,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,3024,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,3060,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,3549,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,3598,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,4116,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,4165,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,4725,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,4789,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,5376,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,6069,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,6804,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,7581,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,8400,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[4,9261,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[64,1360,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[64,1726,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[64,2125,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[64,2577,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[64,3060,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,10164,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,10285,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,11109,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,12096,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,2100,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,2541,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,3024,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,3549,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,4116,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,4725,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,5376,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,6069,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,6804,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,6885,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,7581,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,7681,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,8400,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,8500,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,9261,], )
paddle.Tensor.reshape(Tensor([0],"int32"), list[8,9382,], )
paddle.Tensor.reshape(Tensor([0],"int32"), shape=list[-1,], )
paddle.Tensor.reshape(Tensor([0],"int32"), tuple(-1,), )
paddle.Tensor.reshape(Tensor([0],"int32"), tuple(1,3,), )
paddle.Tensor.reshape(Tensor([0],"int32"), tuple(1,5,), )
paddle.Tensor.reshape(Tensor([0],"int64"), list[-1,], name="Categorical_probs", )
paddle.Tensor.reshape(Tensor([0],"int64"), list[-1,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,10,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,100,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,101,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,102,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,103,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,104,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,105,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,106,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,107,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,108,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,109,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,11,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,110,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,111,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,112,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,113,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,114,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,115,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,116,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,117,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,118,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,119,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,12,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,120,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,121,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,122,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,123,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,124,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,125,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,126,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,127,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,128,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,129,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,13,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,130,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,131,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,132,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,133,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,134,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,135,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,136,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,137,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,138,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,139,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,14,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,140,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,141,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,142,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,143,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,144,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,145,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,146,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,147,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,148,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,149,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,15,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,150,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,151,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,152,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,153,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,154,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,155,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,156,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,157,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,158,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,159,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,16,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,160,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,161,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,162,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,163,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,164,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,165,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,166,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,167,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,168,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,169,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,17,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,170,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,171,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,172,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,173,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,174,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,175,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,176,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,177,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,178,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,179,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,18,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,180,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,181,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,182,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,183,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,184,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,185,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,186,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,187,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,188,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,189,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,19,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,190,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,191,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,192,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,193,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,194,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,195,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,196,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,197,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,198,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,199,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,2,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,20,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,200,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,201,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,202,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,203,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,204,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,205,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,206,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,207,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,208,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,209,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,21,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,210,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,211,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,212,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,213,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,214,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,215,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,216,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,217,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,218,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,219,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,22,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,220,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,221,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,222,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,223,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,224,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,225,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,226,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,227,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,228,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,229,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,23,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,230,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,231,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,232,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,233,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,234,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,235,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,236,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,237,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,238,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,239,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,24,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,240,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,241,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,242,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,243,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,244,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,245,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,246,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,247,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,248,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,249,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,25,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,250,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,251,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,252,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,253,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,254,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,255,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,256,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,257,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,258,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,259,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,26,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,260,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,261,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,262,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,263,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,264,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,265,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,266,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,267,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,268,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,269,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,27,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,270,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,271,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,272,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,273,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,274,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,275,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,276,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,277,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,278,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,279,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,28,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,280,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,281,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,282,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,283,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,284,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,285,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,286,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,287,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,288,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,289,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,29,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,290,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,291,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,292,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,293,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,298,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,3,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,30,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,302,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,307,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,31,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,32,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,33,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,336,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,339,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,34,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,35,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,355,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,36,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,369,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,37,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,38,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,39,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,4,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,40,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,41,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,42,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,43,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,44,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,45,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,457,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,46,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,47,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,477,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,48,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,49,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,498,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,5,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,50,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,51,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,52,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,53,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,54,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,55,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,56,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,57,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,58,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,59,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,6,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,60,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,61,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,62,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,63,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,64,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,65,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,66,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,67,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,68,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,69,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,7,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,70,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,71,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,72,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,73,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,74,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,75,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,76,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,77,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,78,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,79,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,8,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,80,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,81,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,82,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,83,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,84,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,85,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,86,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,87,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,88,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,89,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,9,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,90,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,91,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,92,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,93,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,94,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,95,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,96,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,97,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,98,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,1,99,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,10,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,100,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,101,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,102,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,103,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,104,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,105,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,106,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,107,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,108,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,109,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,11,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,110,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,111,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,112,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,113,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,114,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,115,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,116,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,117,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,118,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,119,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,12,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,120,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,121,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,122,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,123,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,124,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,125,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,126,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,127,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,128,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,129,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,13,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,130,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,131,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,132,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,133,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,134,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,135,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,136,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,137,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,138,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,139,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,14,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,140,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,141,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,142,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,143,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,144,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,145,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,146,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,147,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,148,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,149,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,15,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,150,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,151,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,152,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,153,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,154,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,155,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,156,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,157,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,158,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,159,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,16,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,160,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,161,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,162,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,163,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,164,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,165,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,166,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,167,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,168,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,169,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,17,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,170,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,171,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,172,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,173,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,174,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,175,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,176,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,177,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,178,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,179,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,18,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,180,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,181,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,182,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,183,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,184,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,185,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,186,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,187,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,188,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,189,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,19,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,190,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,191,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,192,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,193,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,194,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,195,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,196,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,197,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,198,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,199,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,2,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,20,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,200,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,201,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,202,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,203,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,204,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,205,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,206,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,207,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,208,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,209,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,21,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,210,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,211,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,212,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,213,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,214,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,215,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,216,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,217,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,218,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,219,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,22,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,220,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,221,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,222,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,223,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,224,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,225,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,226,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,227,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,228,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,229,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,23,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,230,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,231,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,232,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,233,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,234,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,235,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,236,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,237,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,238,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,239,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,24,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,240,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,241,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,242,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,243,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,244,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,245,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,246,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,247,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,248,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,249,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,25,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,250,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,251,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,252,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,253,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,254,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,255,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,256,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,257,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,258,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,259,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,26,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,260,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,261,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,262,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,263,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,264,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,265,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,266,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,267,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,268,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,269,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,27,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,270,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,271,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,272,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,273,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,274,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,275,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,276,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,277,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,278,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,279,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,28,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,280,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,281,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,282,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,283,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,284,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,285,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,286,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,287,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,288,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,289,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,29,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,290,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,291,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,292,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,293,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,298,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,3,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,30,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,302,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,307,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,31,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,32,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,33,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,336,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,339,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,34,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,35,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,355,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,36,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,369,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,37,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,38,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,39,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,4,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,40,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,41,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,42,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,43,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,44,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,45,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,457,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,46,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,47,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,477,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,48,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,49,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,498,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,5,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,50,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,51,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,52,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,53,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,54,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,55,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,56,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,57,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,58,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,59,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,6,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,60,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,61,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,62,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,63,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,64,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,65,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,66,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,67,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,68,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,69,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,7,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,70,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,71,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,72,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,73,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,74,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,75,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,76,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,77,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,78,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,79,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,8,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,80,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,81,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,82,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,83,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,84,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,85,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,86,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,87,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,88,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,89,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,9,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,90,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,91,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,92,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,93,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,94,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,95,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,96,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,97,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,98,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1,1,99,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[10,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1024,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[104,-1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[11,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[128,-1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[13,8,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[132,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[1536,-1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[154,-1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[16,-1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[165,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[17,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[186,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[20,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[206,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[209,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[220,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[256,-1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[286,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[3,4,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[3,4,5,6,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[32,-1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[4,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[40,-1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[435,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[5,5,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[5,6,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[512,-1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[6,4,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[64,-1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[640,-1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[7,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[7,7,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[77,-1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[8,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), list[8,-1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), shape=list[1,-1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), shape=list[1,1,-1,1,], )
paddle.Tensor.reshape(Tensor([0],"int64"), shape=list[13,2,64,], )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(1,-1,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(1,3,1,1,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(2,100,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(2,3,4,5,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(3,10,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(3,2,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(3,5,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(3,9,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(4,1,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(4,1,1024,1024,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(4,1,512,1024,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(4,10,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(4,15,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(4,3,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(4,4,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(4,5,), )
paddle.Tensor.reshape(Tensor([0],"int64"), tuple(512,512,), )
paddle.Tensor.reshape(Tensor([0],"int8"), list[2,3,4,5,], )
paddle.Tensor.reshape(Tensor([0],"uint8"), list[132,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 1, 1],"float16"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 1, 1],"float32"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 1, 8, 7, 7, 1],"float32"), list[-1,392,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 1, 8, 7, 7, 768],"float16"), list[-1,392,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 1, 8, 7, 7, 768],"float32"), list[-1,392,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 1],"float32"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 1],"float32"), list[1,1,1,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 1],"float32"), list[8,1,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 1],"float64"), list[1,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 10],"float16"), list[1,1,1,10,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 10],"float32"), list[1,1,1,10,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 100],"float16"), list[1,1,1,100,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 101],"float16"), list[1,1,1,101,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 102],"float16"), list[1,1,1,102,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 103],"float16"), list[1,1,1,103,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 11],"float16"), list[1,1,1,11,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 11],"float32"), list[1,1,1,11,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 12, 12, 1],"float32"), list[-1,12,12,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 12],"float16"), list[1,1,1,12,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 12],"float32"), list[1,1,1,12,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 13],"float16"), list[1,1,1,13,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 13],"float32"), list[1,1,1,13,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 14],"float16"), list[1,1,1,14,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 14],"float32"), list[1,1,1,14,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 15],"float16"), list[1,1,1,15,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 16],"float16"), list[1,1,1,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 17],"float16"), list[1,1,1,17,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 18],"float16"), list[1,1,1,18,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 18],"float32"), list[1,1,1,18,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 19],"float16"), list[1,1,1,19,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 19],"float32"), list[1,1,1,19,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 2, 8, 7, 7, 1],"float32"), list[-1,392,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 2],"float32"), list[1,-1,1,1,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 2],"float32"), list[1,1,1,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 2],"float32"), list[8,1,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 20],"float16"), list[1,1,1,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 20],"float32"), list[1,1,1,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 2048],"float16"), list[1,1,2048,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 21],"float16"), list[1,1,1,21,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 21],"float32"), list[1,1,1,21,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 22],"float16"), list[1,1,1,22,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 22],"float32"), list[1,1,1,22,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 23],"float16"), list[1,1,1,23,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 23],"float32"), list[1,1,1,23,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 23],"float32"), list[4,1,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 24],"float16"), list[1,1,1,24,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 24],"float32"), list[1,1,1,24,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 24],"float32"), list[4,1,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 25],"float16"), list[1,1,1,25,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 25],"float32"), list[1,1,1,25,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 26],"float16"), list[1,1,1,26,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 26],"float32"), list[1,1,1,26,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 27],"float16"), list[1,1,1,27,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 27],"float32"), list[1,1,1,27,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 28],"float16"), list[1,1,1,28,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 28],"float32"), list[1,1,1,28,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 29],"float16"), list[1,1,1,29,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 29],"float32"), list[1,1,1,29,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 3],"float32"), list[1,1,1,3,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 3],"float32"), list[8,1,3,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 30],"float16"), list[1,1,1,30,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 30],"float32"), list[1,1,1,30,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 31],"float16"), list[1,1,1,31,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 31],"float32"), list[1,1,1,31,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 32],"float16"), list[1,1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 32],"float32"), list[1,1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 32],"float32"), list[1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 32],"float32"), list[1,15872,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 32],"float32"), list[1,16384,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 32],"float32"), list[1,20,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 32],"float32"), list[1,65536,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 33],"float16"), list[1,1,1,33,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 33],"float32"), list[1,1,1,33,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 34],"float16"), list[1,1,1,34,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 34],"float32"), list[1,1,1,34,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 35],"float16"), list[1,1,1,35,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 35],"float32"), list[1,1,1,35,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 36],"float16"), list[1,1,1,36,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 36],"float32"), list[1,1,1,36,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 37],"float16"), list[1,1,1,37,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 38],"float16"), list[1,1,1,38,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 39],"float16"), list[1,1,1,39,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 4],"float32"), list[8,1,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 40],"float16"), list[1,1,1,40,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 41],"float16"), list[1,1,1,41,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 42],"float16"), list[1,1,1,42,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 43],"float16"), list[1,1,1,43,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 44],"float16"), list[1,1,1,44,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 45],"float16"), list[1,1,1,45,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 46],"float16"), list[1,1,1,46,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 47],"float16"), list[1,1,1,47,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 48],"float16"), list[1,1,1,48,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 49],"float16"), list[1,1,1,49,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 5],"float16"), list[1,1,1,5,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 5],"float64"), list[1,25,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 5],"float64"), list[1,5,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 5],"float64"), list[25,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 5],"float64"), list[5,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 5],"float64"), list[5,5,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 50],"float16"), list[1,1,1,50,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 51],"float16"), list[1,1,1,51,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 52],"float16"), list[1,1,1,52,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 53],"float16"), list[1,1,1,53,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 54],"float16"), list[1,1,1,54,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 55],"float16"), list[1,1,1,55,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 56],"float16"), list[1,1,1,56,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 57],"float16"), list[1,1,1,57,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 58],"float16"), list[1,1,1,58,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 58],"float32"), list[8,1,58,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 59],"float16"), list[1,1,1,59,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 6],"float16"), list[1,1,1,6,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 6],"float32"), list[1,1,1,6,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 60],"float16"), list[1,1,1,60,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 61],"float16"), list[1,1,1,61,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 62],"float16"), list[1,1,1,62,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 63],"float16"), list[1,1,1,63,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 64],"float16"), list[1,1,1,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 64],"float16"), list[1,2048,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 64],"float32"), list[1,15872,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 64],"float32"), list[1,16384,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 65],"float16"), list[1,1,1,65,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 66],"float16"), list[1,1,1,66,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 67],"float16"), list[1,1,1,67,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 68],"float16"), list[1,1,1,68,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 69],"float16"), list[1,1,1,69,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 7, 7, 1],"float16"), list[-1,7,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 7, 7, 1],"float32"), list[-1,7,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 7],"float16"), list[1,1,1,7,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 7],"float32"), list[1,1,1,7,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 70],"float16"), list[1,1,1,70,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 71],"float16"), list[1,1,1,71,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 72],"float16"), list[1,1,1,72,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 73],"float16"), list[1,1,1,73,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 74],"float16"), list[1,1,1,74,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 75],"float16"), list[1,1,1,75,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 76],"float16"), list[1,1,1,76,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 77],"float16"), list[1,1,1,77,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 78],"float16"), list[1,1,1,78,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 79],"float16"), list[1,1,1,79,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 8],"float16"), list[1,1,1,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 8],"float32"), list[1,1,1,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 80],"float16"), list[1,1,1,80,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 81],"float16"), list[1,1,1,81,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 82],"float16"), list[1,1,1,82,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 83],"float16"), list[1,1,1,83,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 84],"float16"), list[1,1,1,84,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 85],"float16"), list[1,1,1,85,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 86],"float16"), list[1,1,1,86,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 87],"float16"), list[1,1,1,87,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 88],"float16"), list[1,1,1,88,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 89],"float16"), list[1,1,1,89,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 9],"float16"), list[1,1,1,9,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 9],"float32"), list[1,1,1,9,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 90],"float16"), list[1,1,1,90,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 91],"float16"), list[1,1,1,91,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 92],"float16"), list[1,1,1,92,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 93],"float16"), list[1,1,1,93,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 94],"float16"), list[1,1,1,94,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 95],"float16"), list[1,1,1,95,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 96],"float16"), list[1,1,1,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 97],"float16"), list[1,1,1,97,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 98],"float16"), list[1,1,1,98,], )
paddle.Tensor.reshape(Tensor([1, 0, 1, 99],"float16"), list[1,1,1,99,], )
paddle.Tensor.reshape(Tensor([1, 0, 1],"float16"), list[-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1],"float32"), list[-1,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1],"float32"), list[8,1,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1],"float32"), tuple(1,), )
paddle.Tensor.reshape(Tensor([1, 0, 1],"float64"), list[1,1,1,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1],"float64"), list[1,1,5,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1],"float64"), list[1,5,1,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 10, 11],"float32"), list[1,-1,11,], )
paddle.Tensor.reshape(Tensor([1, 0, 10, 32],"float32"), list[-1,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 10, 64],"float32"), list[60,-1,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 10, 8, 8, 7, 7, 96],"float32"), list[-1,392,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 1024, 1024],"float16"), list[1,1,1024,1024,], )
paddle.Tensor.reshape(Tensor([1, 0, 1024],"float32"), list[0,0,32,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 1024],"float32"), list[1,1,16,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1024],"float32"), list[1,-1,2,8,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 1024],"float32"), list[1,1024,32,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 1024],"float32"), list[1,1280,32,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 1024],"float32"), list[1,1500,16,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1024],"float32"), list[1,160,32,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 1024],"float32"), list[1,320,32,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 1024],"float32"), list[1,640,32,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 1024],"float32"), tuple(1,257,16,-1,), )
paddle.Tensor.reshape(Tensor([1, 0, 108],"float32"), tuple(1,256,12,9,), )
paddle.Tensor.reshape(Tensor([1, 0, 11, 11],"float32"), list[1,-1,11,], )
paddle.Tensor.reshape(Tensor([1, 0, 11, 11],"float32"), list[1,1,11,11,], )
paddle.Tensor.reshape(Tensor([1, 0, 11, 32],"float32"), list[-1,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 11, 4, 4],"float32"), list[8,1,11,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 11],"float32"), list[-1,11,], )
paddle.Tensor.reshape(Tensor([1, 0, 1100, 5, 4],"float32"), list[8,1,1100,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 114],"float32"), shape=tuple(1,1,1,114,), )
paddle.Tensor.reshape(Tensor([1, 0, 115],"float32"), shape=tuple(1,1,1,115,), )
paddle.Tensor.reshape(Tensor([1, 0, 1156],"float32"), list[1,1024,34,34,], )
paddle.Tensor.reshape(Tensor([1, 0, 117],"float32"), tuple(1,256,9,13,), )
paddle.Tensor.reshape(Tensor([1, 0, 12, 1],"float32"), list[1,1,12,1,12,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 12, 1],"float32"), tuple(-1,144,), )
paddle.Tensor.reshape(Tensor([1, 0, 12, 12, 12, 1],"float32"), list[-1,12,12,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 12, 12, 12, 192],"float32"), list[-1,12,12,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 12, 12, 12, 192],"float32"), list[-1,192,144,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 12, 144, 144],"float32"), list[-1,12,144,144,], )
paddle.Tensor.reshape(Tensor([1, 0, 12, 2, 12, 1536],"float32"), list[-1,24,24,1536,], )
paddle.Tensor.reshape(Tensor([1, 0, 12, 3, 12, 768],"float32"), list[-1,48,36,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 12, 392, 392],"float16"), list[-1,12,392,392,], )
paddle.Tensor.reshape(Tensor([1, 0, 12, 392, 392],"float32"), list[-1,12,392,392,], )
paddle.Tensor.reshape(Tensor([1, 0, 12, 49, 49],"float32"), list[-1,12,49,49,], )
paddle.Tensor.reshape(Tensor([1, 0, 12, 6, 12, 384],"float32"), list[-1,96,72,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 120, 96],"float32"), list[-1,19200,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 1200],"float32"), tuple(1,256,40,30,), )
paddle.Tensor.reshape(Tensor([1, 0, 126, 1],"float32"), list[-1,23,7,18,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 126, 96],"float32"), list[-1,23,7,18,7,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 127],"float32"), shape=tuple(1,1,1,127,), )
paddle.Tensor.reshape(Tensor([1, 0, 128, 1, 1],"float32"), tuple(3,128,1,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 128, 128],"float32"), tuple(-1,128,128,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 128, 128],"float32"), tuple(1,256,128,128,), )
paddle.Tensor.reshape(Tensor([1, 0, 128, 128],"float32"), tuple(1,3,128,128,), )
paddle.Tensor.reshape(Tensor([1, 0, 128, 128],"float32"), tuple(4,256,128,128,), )
paddle.Tensor.reshape(Tensor([1, 0, 128, 128],"float32"), tuple(4,3,128,128,), )
paddle.Tensor.reshape(Tensor([1, 0, 128, 128],"float32"), tuple(8,256,128,128,), )
paddle.Tensor.reshape(Tensor([1, 0, 128, 128],"float32"), tuple(8,3,128,128,), )
paddle.Tensor.reshape(Tensor([1, 0, 128, 3, 3],"float32"), tuple(128,128,3,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 128, 3, 3],"float32"), tuple(256,128,3,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 128],"bfloat16"), shape=list[0,0,8,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 128],"float16"), shape=list[0,0,8,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 128],"float32"), list[1,-1,2,1,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 128],"float32"), list[1,-1,2,2,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 128],"float32"), list[1,11,8,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 128],"float32"), list[1,300,8,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 128],"float32"), list[1,3968,2,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 128],"float32"), list[1,4096,2,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 128],"float32"), list[1,62,64,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 128],"float32"), list[1,6380,8,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 128],"float32"), list[1,64,64,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 128],"float32"), list[1,8550,8,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 128],"float32"), list[1,9,8,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 128],"float32"), tuple(1,4096,1,128,), )
paddle.Tensor.reshape(Tensor([1, 0, 1280],"float32"), list[1,1,20,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1280],"float32"), list[1,1500,20,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 129, 129],"float32"), tuple(-1,129,129,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 129, 129],"float32"), tuple(1,256,129,129,), )
paddle.Tensor.reshape(Tensor([1, 0, 129, 129],"float32"), tuple(4,256,129,129,), )
paddle.Tensor.reshape(Tensor([1, 0, 129, 129],"float32"), tuple(8,256,129,129,), )
paddle.Tensor.reshape(Tensor([1, 0, 1296],"float32"), list[1,1024,36,36,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 1],"float16"), list[1,2,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 1],"float32"), list[1,2,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 14, 1],"float32"), list[1,2,8,2,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 14, 384],"float16"), list[1,16,14,14,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 14, 384],"float16"), list[1,2,8,2,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 14, 384],"float32"), list[1,16,14,14,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 14, 384],"float32"), list[1,2,8,2,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 15, 384],"float16"), list[1,16,14,15,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 15, 384],"float32"), list[1,16,14,15,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 16, 384],"float16"), list[1,16,14,16,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 16, 384],"float32"), list[1,16,14,16,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 17, 384],"float16"), list[1,16,14,17,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 17, 384],"float32"), list[1,16,14,17,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 18, 384],"float16"), list[1,16,14,18,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 18, 384],"float32"), list[1,16,14,18,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 19, 384],"float16"), list[1,16,14,19,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 19, 384],"float32"), list[1,16,14,19,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 21, 1],"float32"), list[1,2,8,2,7,3,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 21, 384],"float16"), list[1,2,8,2,7,3,7,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 21, 384],"float32"), list[1,2,8,2,7,3,7,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 7, 1],"float32"), list[1,2,8,2,7,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 7, 768],"float16"), list[1,2,8,2,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 14, 7, 768],"float32"), list[1,2,8,2,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 140, 1, 2, 7],"float32"), list[-1,7,], )
paddle.Tensor.reshape(Tensor([1, 0, 140, 3, 2, 7],"float32"), list[1,-1,7,], )
paddle.Tensor.reshape(Tensor([1, 0, 140, 6, 7],"float32"), list[-1,7,], )
paddle.Tensor.reshape(Tensor([1, 0, 144, 1],"float32"), list[-1,16,12,12,12,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 144, 192],"float32"), list[-1,16,12,12,12,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 144, 192],"float32"), list[-1,27648,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 1444],"float32"), list[1,1024,38,38,], )
paddle.Tensor.reshape(Tensor([1, 0, 147],"float32"), shape=tuple(1,1,1,147,), )
paddle.Tensor.reshape(Tensor([1, 0, 15, 14, 384],"float16"), list[1,16,15,14,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 15, 14, 384],"float32"), list[1,16,15,14,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 15, 15],"float32"), tuple(1,32,-1,), )
paddle.Tensor.reshape(Tensor([1, 0, 15, 1536],"float32"), list[-1,300,1536,], )
paddle.Tensor.reshape(Tensor([1, 0, 15, 16],"float32"), list[1,128,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 15, 16],"float32"), list[1,160,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 15, 16],"float32"), list[1,32,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 15, 16],"float32"), list[1,320,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 15, 16],"float32"), list[1,64,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 15, 4],"float32"), list[-1,225,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 15, 768],"float32"), list[-1,300,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 152],"float32"), shape=tuple(1,1,1,152,), )
paddle.Tensor.reshape(Tensor([1, 0, 1536],"float32"), list[-1,24,18,1536,], )
paddle.Tensor.reshape(Tensor([1, 0, 1536],"float32"), tuple(-1,24,18,1536,), )
paddle.Tensor.reshape(Tensor([1, 0, 15872],"float32"), list[0,0,124,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 15872],"float32"), list[1,128,124,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 15872],"float32"), list[1,256,124,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 15872],"float32"), list[1,32,124,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 15872],"float32"), list[1,64,124,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 16, 1],"float32"), list[1,4,4,4,4,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 16, 14, 384],"float16"), list[1,16,16,14,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 16, 14, 384],"float32"), list[1,16,16,14,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 16, 16],"float32"), list[1,128,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 16, 16],"float32"), list[1,160,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 16, 16],"float32"), list[1,32,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 16, 16],"float32"), list[1,320,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 16, 16],"float32"), list[1,64,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 16, 16],"float32"), tuple(-1,16,16,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 16, 16],"float32"), tuple(1,3,16,16,), )
paddle.Tensor.reshape(Tensor([1, 0, 16, 16],"float32"), tuple(1,512,16,16,), )
paddle.Tensor.reshape(Tensor([1, 0, 16, 16],"float32"), tuple(4,3,16,16,), )
paddle.Tensor.reshape(Tensor([1, 0, 16, 16],"float32"), tuple(4,512,16,16,), )
paddle.Tensor.reshape(Tensor([1, 0, 16, 16],"float32"), tuple(8,3,16,16,), )
paddle.Tensor.reshape(Tensor([1, 0, 16, 16],"float32"), tuple(8,512,16,16,), )
paddle.Tensor.reshape(Tensor([1, 0, 16, 32],"float32"), list[1,11,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 16, 4],"float32"), list[-1,256,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 16, 64],"float32"), tuple(1,257,-1,), )
paddle.Tensor.reshape(Tensor([1, 0, 16],"float32"), list[0,0,2,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 16],"float32"), shape=list[0,0,2,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 160, 160],"float32"), list[1,-1,25600,], )
paddle.Tensor.reshape(Tensor([1, 0, 160],"float32"), list[1,1024,5,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 160],"float32"), list[1,1100,8,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 160],"float32"), list[1,18,8,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 160],"float32"), list[1,21,8,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 160],"float32"), list[1,22,8,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 160],"float32"), list[1,31,32,160,], )
paddle.Tensor.reshape(Tensor([1, 0, 160],"float32"), list[1,32,32,160,], )
paddle.Tensor.reshape(Tensor([1, 0, 160],"float32"), list[1,36828,8,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 160],"float32"), list[1,38367,8,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 160],"float32"), list[1,4096,5,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 160],"float32"), list[1,64,64,160,], )
paddle.Tensor.reshape(Tensor([1, 0, 160],"float32"), list[1,9,8,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 160],"float32"), list[1,992,5,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 1600],"float32"), list[1,1024,40,40,], )
paddle.Tensor.reshape(Tensor([1, 0, 1620],"float32"), tuple(1,256,45,36,), )
paddle.Tensor.reshape(Tensor([1, 0, 16384],"float32"), list[0,0,128,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 16384],"float32"), list[1,128,128,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 16384],"float32"), list[1,256,128,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 16384],"float32"), list[1,32,128,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 16384],"float32"), list[1,64,128,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 168, 1],"float32"), list[-1,32,7,24,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 17, 17],"float32"), list[1,1,17,17,], )
paddle.Tensor.reshape(Tensor([1, 0, 17, 17],"float32"), tuple(-1,17,17,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 17, 17],"float32"), tuple(1,512,17,17,), )
paddle.Tensor.reshape(Tensor([1, 0, 17, 17],"float32"), tuple(4,512,17,17,), )
paddle.Tensor.reshape(Tensor([1, 0, 17, 17],"float32"), tuple(8,512,17,17,), )
paddle.Tensor.reshape(Tensor([1, 0, 17, 4],"float32"), list[-1,289,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 170, 1],"float32"), list[1,10,5,34,5,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 1728],"float32"), tuple(1,256,48,36,), )
paddle.Tensor.reshape(Tensor([1, 0, 1764],"float32"), list[1,1024,42,42,], )
paddle.Tensor.reshape(Tensor([1, 0, 18, 14, 384],"float16"), list[1,16,18,14,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 18, 14, 384],"float32"), list[1,16,18,14,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 18, 1536],"float32"), list[-1,432,1536,], )
paddle.Tensor.reshape(Tensor([1, 0, 18, 3072],"float32"), list[-1,432,3072,], )
paddle.Tensor.reshape(Tensor([1, 0, 18, 4],"float32"), list[-1,324,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 18, 5, 4],"float32"), list[8,1,18,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 18, 7, 7, 96],"float32"), list[-1,7,7,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 1800],"float32"), tuple(1,256,36,50,), )
paddle.Tensor.reshape(Tensor([1, 0, 192],"float32"), list[-1,16,16,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 192],"float32"), list[-1,192,144,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 192],"float32"), list[1,400,8,3,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 192],"float32"), list[1,492,8,3,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 192],"float32"), list[1,496,8,3,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 192],"float32"), list[1,500,8,3,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 192],"float32"), list[-1,80,60,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 192],"float32"), tuple(-1,192,144,192,), )
paddle.Tensor.reshape(Tensor([1, 0, 192],"float32"), tuple(-1,80,60,192,), )
paddle.Tensor.reshape(Tensor([1, 0, 19200],"float32"), list[-1,96,160,120,], )
paddle.Tensor.reshape(Tensor([1, 0, 1936],"float32"), list[1,1024,44,44,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 1],"float32"), tuple(1,-1,1,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2, 12, 12, 1536],"float32"), list[-1,12,12,1536,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 16],"float32"), list[1,20,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 2, 8, 7, 7, 384],"float16"), list[-1,392,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 2, 8, 7, 7, 384],"float32"), list[-1,392,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 2, 8],"float32"), list[1,1,4,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 2, 8],"float32"), list[1,2,4,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 2, 8],"float32"), list[1,3,4,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 2],"float32"), list[1,-1,1,2,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 2],"float32"), list[1,-1,2,1,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 2],"float32"), list[-1,2,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 2],"float32"), tuple(-1,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2, 2],"float32"), tuple(2,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2, 32],"float32"), list[1,16384,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 32],"float32"), list[1,3968,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 32],"float32"), list[1,4,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 32],"float32"), list[1,4096,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 4, 16],"float16"), list[1,1024,8,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 4, 16],"float32"), list[1,8,8,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 4, 4, 1],"float32"), list[-1,4,4,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 4],"float32"), list[1,-1,2,2,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 4],"float32"), list[1,12,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 4],"float32"), list[1,2,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 4],"float32"), list[1,4,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 4],"float32"), list[1,6,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 4],"float32"), list[1,8,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 4],"float32"), list[8,2,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 64],"float16"), list[1,-1,2,32,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 64],"float32"), list[1,3968,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 64],"float32"), list[1,4096,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 64],"float32"), list[60,-1,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 8],"float32"), list[1,20,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 2, 8],"float32"), list[1,58,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), list[-1,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), list[1,2,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), list[2,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), list[8,1,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,-1,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,1,2,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,2,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,28,28,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,280,350,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,298,364,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,32,26,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,34,34,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,352,407,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,368,416,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,391,436,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,4,4,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,400,300,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,430,340,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,434,346,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,466,386,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,477,401,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,64,64,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,76,76,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,8,8,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 2],"float32"), tuple(1,90,90,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 20, 20],"float32"), list[1,1,20,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 20, 20],"float32"), list[-1,20,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 20, 20],"float32"), list[4,20,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 20, 22],"float32"), list[1,1,20,22,], )
paddle.Tensor.reshape(Tensor([1, 0, 20, 22],"float32"), list[4,20,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 20, 4],"float32"), list[-1,400,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 20, 8],"float32"), list[-1,20,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 20, 8],"float32"), list[4,20,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 20],"float32"), list[4,1,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 20],"int64"), list[-1,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 20],"int64"), shape=tuple(-1,20,), )
paddle.Tensor.reshape(Tensor([1, 0, 20],"int64"), tuple(-1,20,), )
paddle.Tensor.reshape(Tensor([1, 0, 2048],"float16"), list[1,1,1,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 2048],"float32"), shape=tuple(1,1,1,2048,), )
paddle.Tensor.reshape(Tensor([1, 0, 21, 1],"float32"), list[-1,3,7,3,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 21, 1],"float32"), list[-1,4,7,3,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 21, 14, 1],"float32"), list[1,2,8,3,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 21, 14, 384],"float16"), list[1,2,8,3,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 21, 14, 384],"float32"), list[1,2,8,3,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 21, 5, 4],"float32"), list[8,1,21,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 21, 768],"float32"), list[-1,3,7,3,7,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 2116],"float32"), list[1,1024,46,46,], )
paddle.Tensor.reshape(Tensor([1, 0, 2116],"float32"), list[-1,256,46,46,], )
paddle.Tensor.reshape(Tensor([1, 0, 216, 1, 2, 7],"float32"), list[1,248,216,-1,7,], )
paddle.Tensor.reshape(Tensor([1, 0, 216, 2, 7],"float32"), list[-1,7,], )
paddle.Tensor.reshape(Tensor([1, 0, 22, 4],"float32"), list[-1,484,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 22, 5, 4],"float32"), list[8,1,22,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 23, 4],"float32"), list[-1,529,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 2304],"float32"), list[1,1024,48,48,], )
paddle.Tensor.reshape(Tensor([1, 0, 2304],"float32"), list[-1,256,48,48,], )
paddle.Tensor.reshape(Tensor([1, 0, 24, 1],"float32"), list[1,2,12,2,12,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 24, 1],"float32"), list[-1,2,12,2,12,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 24, 144, 144],"float32"), list[-1,24,144,144,], )
paddle.Tensor.reshape(Tensor([1, 0, 24, 1536],"float32"), list[-1,2,12,2,12,1536,], )
paddle.Tensor.reshape(Tensor([1, 0, 24, 392, 392],"float16"), list[-1,24,392,392,], )
paddle.Tensor.reshape(Tensor([1, 0, 24, 392, 392],"float32"), list[-1,24,392,392,], )
paddle.Tensor.reshape(Tensor([1, 0, 24, 4],"float32"), list[-1,576,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 24, 49, 49],"float32"), list[-1,24,49,49,], )
paddle.Tensor.reshape(Tensor([1, 0, 25, 1],"float32"), list[1,2,5,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 2500],"float32"), list[1,1024,50,50,], )
paddle.Tensor.reshape(Tensor([1, 0, 256, 1, 1],"float32"), tuple(3,256,1,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 256, 2],"float32"), tuple(1,65536,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 256, 256],"float32"), tuple(1,128,256,256,), )
paddle.Tensor.reshape(Tensor([1, 0, 256, 256],"float32"), tuple(1,3,256,256,), )
paddle.Tensor.reshape(Tensor([1, 0, 256, 256],"float32"), tuple(4,128,256,256,), )
paddle.Tensor.reshape(Tensor([1, 0, 256, 256],"float32"), tuple(4,3,256,256,), )
paddle.Tensor.reshape(Tensor([1, 0, 256, 256],"float32"), tuple(8,128,256,256,), )
paddle.Tensor.reshape(Tensor([1, 0, 256, 256],"float32"), tuple(8,3,256,256,), )
paddle.Tensor.reshape(Tensor([1, 0, 256, 3, 3],"float32"), tuple(128,256,3,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 256, 3, 3],"float32"), tuple(256,256,3,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 256, 3, 3],"float32"), tuple(512,256,3,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 256, 32, 2],"float32"), list[1,16,256,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 256, 64],"float32"), list[1,16,256,-1,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float16"), list[0,0,2,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[0,0,16,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,-1,2,2,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,10164,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,1024,16,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,1024,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,11,8,4,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,11109,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,12096,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,16,16,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,2048,16,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,256,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,300,8,4,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,32,32,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,36828,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,38367,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,6380,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,6380,8,4,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,6804,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,8400,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,8550,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,8550,8,4,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 256],"float32"), list[1,9,8,4,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 25600],"float32"), list[-1,25600,], )
paddle.Tensor.reshape(Tensor([1, 0, 257, 257],"float32"), tuple(1,128,257,257,), )
paddle.Tensor.reshape(Tensor([1, 0, 257, 257],"float32"), tuple(-1,257,257,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 257, 257],"float32"), tuple(4,128,257,257,), )
paddle.Tensor.reshape(Tensor([1, 0, 257, 257],"float32"), tuple(8,128,257,257,), )
paddle.Tensor.reshape(Tensor([1, 0, 26, 3],"float32"), tuple(1,832,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 2704],"float32"), list[1,1024,52,52,], )
paddle.Tensor.reshape(Tensor([1, 0, 27648],"float32"), list[-1,192,192,144,], )
paddle.Tensor.reshape(Tensor([1, 0, 27648],"float32"), tuple(1,256,192,144,), )
paddle.Tensor.reshape(Tensor([1, 0, 28, 1],"float16"), list[1,4,7,4,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 1],"float32"), list[1,4,7,4,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 28, 1],"float32"), list[1,2,8,4,7,4,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 28, 192],"float16"), list[1,16,28,28,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 28, 192],"float16"), list[1,2,8,4,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 28, 192],"float32"), list[1,16,28,28,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 28, 192],"float32"), list[1,2,8,4,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 29, 192],"float16"), list[1,16,28,29,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 29, 192],"float32"), list[1,16,28,29,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 3],"float32"), tuple(1,784,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 28, 30, 192],"float16"), list[1,16,28,30,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 30, 192],"float32"), list[1,16,28,30,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 32, 192],"float16"), list[1,16,28,32,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 32, 192],"float32"), list[1,16,28,32,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 33, 192],"float16"), list[1,16,28,33,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 33, 192],"float32"), list[1,16,28,33,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 34, 192],"float16"), list[1,16,28,34,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 34, 192],"float32"), list[1,16,28,34,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 35, 1],"float32"), list[1,2,8,4,7,5,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 35, 192],"float16"), list[1,2,8,4,7,5,7,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 35, 192],"float32"), list[1,2,8,4,7,5,7,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 36, 192],"float16"), list[1,16,28,36,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 36, 192],"float32"), list[1,16,28,36,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 38, 192],"float16"), list[1,16,28,38,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 38, 192],"float32"), list[1,16,28,38,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 42, 1],"float32"), list[1,2,8,4,7,6,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 42, 192],"float16"), list[1,2,8,4,7,6,7,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28, 42, 192],"float32"), list[1,2,8,4,7,6,7,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 28800],"float32"), tuple(1,256,144,200,), )
paddle.Tensor.reshape(Tensor([1, 0, 29, 28, 192],"float16"), list[1,16,29,28,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 29, 28, 192],"float32"), list[1,16,29,28,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 2916],"float32"), list[1,1024,54,54,], )
paddle.Tensor.reshape(Tensor([1, 0, 3, 12, 12, 768],"float32"), list[-1,12,12,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 3, 3],"float32"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 3, 392, 392],"float16"), list[-1,3,392,392,], )
paddle.Tensor.reshape(Tensor([1, 0, 3, 392, 392],"float32"), list[-1,3,392,392,], )
paddle.Tensor.reshape(Tensor([1, 0, 3, 4],"float32"), list[8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 3, 49, 49],"float32"), list[-1,3,49,49,], )
paddle.Tensor.reshape(Tensor([1, 0, 3, 7, 7, 768],"float32"), list[-1,7,7,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 3],"float32"), list[20,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 3],"float32"), list[8,1,3,], )
paddle.Tensor.reshape(Tensor([1, 0, 3],"float32"), tuple(1,2,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 3],"float32"), tuple(1,3,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 3],"float64"), tuple(1,2,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 3],"float64"), tuple(1,3,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 3],"float64"), tuple(3,1,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 30, 28, 192],"float16"), list[1,16,30,28,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 30, 28, 192],"float32"), list[1,16,30,28,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 30, 384],"float32"), list[-1,1200,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 30, 4],"float32"), list[-1,900,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 30, 768],"float32"), list[-1,1200,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 300, 3],"float32"), tuple(1,120000,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 300, 4, 4],"float32"), list[8,1,300,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 300],"float32"), tuple(1,256,20,15,), )
paddle.Tensor.reshape(Tensor([1, 0, 30976],"float32"), list[1,300,176,176,], )
paddle.Tensor.reshape(Tensor([1, 0, 30976],"float32"), list[1,400,176,176,], )
paddle.Tensor.reshape(Tensor([1, 0, 31, 28, 192],"float16"), list[1,16,31,28,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 31, 28, 192],"float32"), list[1,16,31,28,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 3136],"float32"), list[1,1024,56,56,], )
paddle.Tensor.reshape(Tensor([1, 0, 32, 1],"float32"), list[1,8,4,8,4,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 32, 1],"float32"), tuple(1,128,32,), )
paddle.Tensor.reshape(Tensor([1, 0, 32, 128],"bfloat16"), list[1,1024,4096,], )
paddle.Tensor.reshape(Tensor([1, 0, 32, 128],"float32"), list[1,4096,4096,], )
paddle.Tensor.reshape(Tensor([1, 0, 32, 2],"float16"), list[1,-1,1,32,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 32, 28, 192],"float16"), list[1,16,32,28,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 32, 28, 192],"float32"), list[1,16,32,28,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 32, 32],"float32"), tuple(1,3,32,32,), )
paddle.Tensor.reshape(Tensor([1, 0, 32, 32],"float32"), tuple(-1,32,32,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 32, 32],"float32"), tuple(1,512,32,32,), )
paddle.Tensor.reshape(Tensor([1, 0, 32, 32],"float32"), tuple(4,3,32,32,), )
paddle.Tensor.reshape(Tensor([1, 0, 32, 32],"float32"), tuple(4,512,32,32,), )
paddle.Tensor.reshape(Tensor([1, 0, 32, 32],"float32"), tuple(8,3,32,32,), )
paddle.Tensor.reshape(Tensor([1, 0, 32, 32],"float32"), tuple(8,512,32,32,), )
paddle.Tensor.reshape(Tensor([1, 0, 32, 4],"float32"), list[-1,1024,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"bfloat16"), shape=list[0,0,2,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float16"), shape=list[0,0,2,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), list[0,0,4,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), list[1,1,4,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), list[1,124,128,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), list[1,128,128,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), list[1,14,4,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), list[1,15872,1,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), list[1,16384,1,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), list[1,2,2,2,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), list[1,20,2,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), list[1,20,4,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), list[1,256,256,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), list[-1,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), list[1,65536,1,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), list[2,2,1,2,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), shape=list[0,0,1,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), shape=list[0,0,4,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), shape=list[1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 32],"float32"), shape=list[1,-1,4,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 320],"float32"), list[1,-1,2,5,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 320],"float32"), list[1,1024,5,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 320],"float32"), list[1,1100,8,5,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 320],"float32"), list[1,18,8,5,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 320],"float32"), list[1,21,8,5,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 320],"float32"), list[1,22,8,5,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 320],"float32"), list[1,31,32,320,], )
paddle.Tensor.reshape(Tensor([1, 0, 320],"float32"), list[1,32,32,320,], )
paddle.Tensor.reshape(Tensor([1, 0, 320],"float32"), list[1,36828,8,5,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 320],"float32"), list[1,38367,8,5,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 320],"float32"), list[1,9,8,5,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 320],"float32"), list[1,992,5,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 324],"float32"), list[-1,512,18,18,], )
paddle.Tensor.reshape(Tensor([1, 0, 33, 33],"float32"), tuple(-1,33,33,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 33, 33],"float32"), tuple(1,512,33,33,), )
paddle.Tensor.reshape(Tensor([1, 0, 33, 33],"float32"), tuple(4,512,33,33,), )
paddle.Tensor.reshape(Tensor([1, 0, 33, 33],"float32"), tuple(8,512,33,33,), )
paddle.Tensor.reshape(Tensor([1, 0, 3364],"float32"), list[1,1024,58,58,], )
paddle.Tensor.reshape(Tensor([1, 0, 33856],"float32"), list[1,300,184,184,], )
paddle.Tensor.reshape(Tensor([1, 0, 33856],"float32"), list[1,400,184,184,], )
paddle.Tensor.reshape(Tensor([1, 0, 34, 3],"float32"), tuple(1,1156,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 34, 4],"float32"), list[-1,1156,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 34, 5, 5, 1],"float32"), list[-1,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 340, 3],"float32"), tuple(1,146200,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 346, 3],"float32"), tuple(1,150164,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 35, 1],"float32"), list[-1,6,7,5,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 35, 28, 1],"float32"), list[1,2,8,5,7,4,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 35, 28, 192],"float16"), list[1,16,35,28,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 35, 28, 192],"float16"), list[1,2,8,5,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 35, 28, 192],"float32"), list[1,16,35,28,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 35, 28, 192],"float32"), list[1,2,8,5,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 35, 384],"float32"), list[-1,6,7,5,7,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 350, 3],"float32"), tuple(1,98000,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 36, 1],"float32"), list[-1,4,12,3,12,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 36, 1536],"float32"), list[-1,1728,1536,], )
paddle.Tensor.reshape(Tensor([1, 0, 36, 4],"float32"), list[-1,1296,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 36, 768],"float32"), list[-1,1728,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 36, 768],"float32"), list[-1,4,12,3,12,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 36],"float32"), list[1,20,6,6,], )
paddle.Tensor.reshape(Tensor([1, 0, 3600],"float32"), list[1,1024,60,60,], )
paddle.Tensor.reshape(Tensor([1, 0, 364, 3],"float32"), tuple(1,108472,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 36828, 5, 4],"float32"), list[8,1,36828,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 36864],"float32"), list[1,300,192,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 36864],"float32"), list[1,400,192,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 38367, 5, 4],"float32"), list[8,1,38367,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 384],"float32"), list[0,0,8,48,], )
paddle.Tensor.reshape(Tensor([1, 0, 384],"float32"), list[1,1,6,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 384],"float32"), list[1,1500,6,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 384],"float32"), list[-1,40,30,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 384],"float32"), list[-1,96,72,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 384],"float32"), tuple(-1,40,30,384,), )
paddle.Tensor.reshape(Tensor([1, 0, 384],"float32"), tuple(-1,96,72,384,), )
paddle.Tensor.reshape(Tensor([1, 0, 386, 3],"float32"), tuple(1,179876,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 3968],"float32"), list[0,0,62,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 3968],"float32"), list[1,128,62,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 3968],"float32"), list[1,256,62,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 3968],"float32"), list[1,512,62,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 3968],"float32"), list[1,64,62,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 1, 8],"float32"), list[1,1,-1,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 1],"float32"), list[1,20,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 1],"float32"), list[8,4,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 128],"float16"), list[1,2,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 128],"float16"), list[1,8,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 128],"float16"), list[2048,1,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 2],"float32"), list[-1,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 2],"float32"), list[1,6380,1,4,1,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 2],"float32"), list[1,8550,1,4,1,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 2],"float32"), list[8,4,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 3],"float32"), list[8,4,3,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 3],"float32"), tuple(1,16,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 4, 4, 4, 1],"float32"), list[-1,4,4,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 4, 8, 7, 7, 192],"float16"), list[-1,392,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 4, 8, 7, 7, 192],"float32"), list[-1,392,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 4],"float16"), list[1,1,4,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 4],"float32"), list[1,-1,4,2,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 4],"float32"), tuple(1,3,4,4,), )
paddle.Tensor.reshape(Tensor([1, 0, 4, 4],"float32"), tuple(-1,4,4,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 4, 4],"float32"), tuple(1,512,4,4,), )
paddle.Tensor.reshape(Tensor([1, 0, 4, 4],"float32"), tuple(4,3,4,4,), )
paddle.Tensor.reshape(Tensor([1, 0, 4, 4],"float32"), tuple(4,512,4,4,), )
paddle.Tensor.reshape(Tensor([1, 0, 4, 4],"float32"), tuple(8,3,4,4,), )
paddle.Tensor.reshape(Tensor([1, 0, 4, 4],"float32"), tuple(8,512,4,4,), )
paddle.Tensor.reshape(Tensor([1, 0, 4, 64, 16],"float32"), list[1,8,64,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 64],"float16"), list[1,-1,4,32,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 8],"float32"), list[1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 8],"float32"), list[1,1,4,1,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 8],"float32"), list[1,14,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 8],"float32"), list[1,20,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 8],"float32"), list[1,20,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 8],"float32"), list[1,4,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 4, 8],"float32"), shape=list[1,-1,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 4],"float32"), list[0,0,1,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 4],"float32"), list[1,20,4,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 4],"float32"), list[-1,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 4],"float32"), tuple(-1,4,), )
paddle.Tensor.reshape(Tensor([1, 0, 4],"float32"), tuple(11,4,), )
paddle.Tensor.reshape(Tensor([1, 0, 4],"float32"), tuple(18,4,), )
paddle.Tensor.reshape(Tensor([1, 0, 4],"float32"), tuple(21,4,), )
paddle.Tensor.reshape(Tensor([1, 0, 4],"float32"), tuple(22,4,), )
paddle.Tensor.reshape(Tensor([1, 0, 4],"float32"), tuple(9,4,), )
paddle.Tensor.reshape(Tensor([1, 0, 40, 4],"float32"), list[-1,1600,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 400, 3, 4],"float32"), list[8,1,400,12,], )
paddle.Tensor.reshape(Tensor([1, 0, 400],"float32"), list[-1,512,20,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 401, 3],"float32"), tuple(1,191277,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 407, 3],"float32"), tuple(1,143264,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 4096, 4096],"float32"), list[1,1,4096,4096,], )
paddle.Tensor.reshape(Tensor([1, 0, 4096],"bfloat16"), list[1,1024,32,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 4096],"float32"), list[0,0,64,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 4096],"float32"), list[1,128,64,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 4096],"float32"), list[1,160,64,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 4096],"float32"), list[1,256,64,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 4096],"float32"), list[1,512,64,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 4096],"float32"), list[1,64,64,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 4096],"float32"), list[1,640,64,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 4096],"float32"), shape=list[0,0,32,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 414],"float32"), tuple(1,256,23,18,), )
paddle.Tensor.reshape(Tensor([1, 0, 416, 3],"float32"), tuple(1,153088,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 42, 1],"float32"), list[-1,8,7,6,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 432],"float32"), tuple(1,256,24,18,), )
paddle.Tensor.reshape(Tensor([1, 0, 436, 3],"float32"), tuple(1,170476,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 44, 4],"float32"), list[-1,1936,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 45, 1],"float32"), list[1,3,5,9,5,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 450],"float32"), tuple(1,256,18,25,), )
paddle.Tensor.reshape(Tensor([1, 0, 46, 4],"float32"), list[-1,2116,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 48, 1],"float32"), list[1,4,12,4,12,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 48, 144, 144],"float32"), list[-1,48,144,144,], )
paddle.Tensor.reshape(Tensor([1, 0, 48, 4],"float32"), list[-1,2304,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 48],"float32"), list[1,58,2,3,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 4800],"float32"), tuple(1,256,80,60,), )
paddle.Tensor.reshape(Tensor([1, 0, 484],"float32"), list[-1,512,22,22,], )
paddle.Tensor.reshape(Tensor([1, 0, 492, 3, 4],"float32"), list[8,1,492,12,], )
paddle.Tensor.reshape(Tensor([1, 0, 496, 3, 4],"float32"), list[8,1,496,12,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 1],"float64"), list[1,5,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 1],"float64"), list[5,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 2],"float32"), list[1,36828,1,5,1,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 2],"float32"), list[1,38367,1,5,1,2,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 2],"float32"), tuple(1,1,-1,2,), )
paddle.Tensor.reshape(Tensor([1, 0, 5, 32],"float32"), list[1,1024,160,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 32],"float32"), list[1,4096,160,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 32],"float32"), list[1,992,160,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 5, 5, 1],"float32"), list[-1,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 5],"float16"), list[1,1,5,5,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 5],"float32"), list[1,1,5,5,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 5],"float32"), list[125,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 5],"float64"), list[1,125,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 5],"float64"), list[1,25,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 5],"float64"), list[125,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 5],"float64"), list[25,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 5],"float64"), list[25,5,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 5],"float64"), list[5,25,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 5],"float64"), list[5,5,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 64],"float32"), list[1,1024,320,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 64],"float32"), list[1,992,320,], )
paddle.Tensor.reshape(Tensor([1, 0, 5, 7, 7, 384],"float32"), list[-1,7,7,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 5],"float32"), list[-1,5,], )
paddle.Tensor.reshape(Tensor([1, 0, 5],"float32"), list[4,5,], )
paddle.Tensor.reshape(Tensor([1, 0, 5],"float64"), list[1,1,1,5,], )
paddle.Tensor.reshape(Tensor([1, 0, 5],"float64"), list[1,1,5,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 5],"float64"), list[1,1,5,5,], )
paddle.Tensor.reshape(Tensor([1, 0, 5],"float64"), list[1,5,1,5,], )
paddle.Tensor.reshape(Tensor([1, 0, 5],"float64"), list[1,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 500, 3, 4],"float32"), list[8,1,500,12,], )
paddle.Tensor.reshape(Tensor([1, 0, 50176],"float32"), list[-1,96,16,56,56,], )
paddle.Tensor.reshape(Tensor([1, 0, 51072],"float32"), list[-1,96,16,57,56,], )
paddle.Tensor.reshape(Tensor([1, 0, 512, 1, 1],"float32"), tuple(3,512,1,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 512, 3, 3],"float32"), tuple(256,512,3,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 512, 3, 3],"float32"), tuple(512,512,3,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 512],"float16"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 512],"float32"), list[0,0,8,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 512],"float32"), list[1,-1,2,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 512],"float32"), list[1,1,8,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 512],"float32"), list[1,1500,8,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 512],"float32"), list[1,16,16,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 512],"float32"), list[1,256,8,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 512],"float32"), shape=list[0,0,16,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 51968],"float32"), list[-1,96,16,56,58,], )
paddle.Tensor.reshape(Tensor([1, 0, 52864],"float32"), list[-1,96,16,56,59,], )
paddle.Tensor.reshape(Tensor([1, 0, 52864],"float32"), list[-1,96,16,59,56,], )
paddle.Tensor.reshape(Tensor([1, 0, 529],"float32"), list[-1,256,23,23,], )
paddle.Tensor.reshape(Tensor([1, 0, 529],"float32"), list[-1,384,23,23,], )
paddle.Tensor.reshape(Tensor([1, 0, 53760],"float32"), list[-1,96,16,56,60,], )
paddle.Tensor.reshape(Tensor([1, 0, 53760],"float32"), list[-1,96,16,60,56,], )
paddle.Tensor.reshape(Tensor([1, 0, 54656],"float32"), list[-1,96,16,61,56,], )
paddle.Tensor.reshape(Tensor([1, 0, 55552],"float32"), list[-1,96,16,62,56,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 1],"float16"), list[1,8,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 1],"float32"), list[1,8,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 56, 1],"float32"), list[1,2,8,8,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 56, 96],"float32"), list[1,16,56,56,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 56, 96],"float32"), list[1,2,8,8,7,8,7,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 58, 96],"float32"), list[1,16,56,58,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 59, 96],"float32"), list[1,16,56,59,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 60, 96],"float32"), list[1,16,56,60,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 63, 1],"float32"), list[1,2,8,8,7,9,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 63, 96],"float32"), list[1,2,8,8,7,9,7,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 64, 96],"float32"), list[1,16,56,64,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 65, 96],"float32"), list[1,16,56,65,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 67, 96],"float32"), list[1,16,56,67,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 68, 96],"float32"), list[1,16,56,68,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 70, 1],"float32"), list[1,2,8,8,7,10,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 70, 96],"float32"), list[1,2,8,8,7,10,7,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 71, 96],"float32"), list[1,16,56,71,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 75, 96],"float32"), list[1,16,56,75,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 77, 1],"float32"), list[1,2,8,8,7,11,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 56, 77, 96],"float32"), list[1,2,8,8,7,11,7,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 57, 56, 96],"float32"), list[1,16,57,56,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 57344],"float32"), list[-1,96,16,56,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 57344],"float32"), list[-1,96,16,64,56,], )
paddle.Tensor.reshape(Tensor([1, 0, 58, 58],"float32"), list[1,1,58,58,], )
paddle.Tensor.reshape(Tensor([1, 0, 58, 58],"float32"), list[2,58,58,], )
paddle.Tensor.reshape(Tensor([1, 0, 58, 58],"float32"), list[8,58,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 58, 8],"float32"), list[2,58,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 58240],"float32"), list[-1,96,16,56,65,], )
paddle.Tensor.reshape(Tensor([1, 0, 59, 56, 96],"float32"), list[1,16,59,56,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 6, 12, 12, 384],"float32"), list[-1,12,12,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 6, 144, 144],"float32"), list[-1,6,144,144,], )
paddle.Tensor.reshape(Tensor([1, 0, 6, 392, 392],"float16"), list[-1,6,392,392,], )
paddle.Tensor.reshape(Tensor([1, 0, 6, 392, 392],"float32"), list[-1,6,392,392,], )
paddle.Tensor.reshape(Tensor([1, 0, 6, 49, 49],"float32"), list[-1,6,49,49,], )
paddle.Tensor.reshape(Tensor([1, 0, 6, 6, 3],"float32"), tuple(-1,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 6, 6],"float32"), list[0,0,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 60, 192],"float32"), list[-1,4800,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 60, 384],"float32"), list[-1,4800,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 60, 4],"float32"), list[-1,3600,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 60, 56, 96],"float32"), list[1,16,60,56,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 60032],"float32"), list[-1,96,16,56,67,], )
paddle.Tensor.reshape(Tensor([1, 0, 60928],"float32"), list[-1,96,16,56,68,], )
paddle.Tensor.reshape(Tensor([1, 0, 61, 56, 96],"float32"), list[1,16,61,56,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 62, 56, 96],"float32"), list[1,16,62,56,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 62720],"float32"), list[-1,96,16,70,56,], )
paddle.Tensor.reshape(Tensor([1, 0, 63, 1],"float32"), list[-1,12,7,9,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 63, 192],"float32"), list[-1,12,7,9,7,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 63, 56, 1],"float32"), list[1,2,8,9,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 63, 56, 96],"float32"), list[1,2,8,9,7,8,7,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 63616],"float32"), list[-1,96,16,56,71,], )
paddle.Tensor.reshape(Tensor([1, 0, 6380, 4, 4],"float32"), list[8,1,6380,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 64, 16],"float32"), list[1,2,1,64,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 64, 3],"float32"), tuple(1,4096,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 64, 4],"float32"), list[-1,4096,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 64, 56, 96],"float32"), list[1,16,64,56,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 64, 64],"float32"), tuple(1,3,64,64,), )
paddle.Tensor.reshape(Tensor([1, 0, 64, 64],"float32"), tuple(1,512,64,64,), )
paddle.Tensor.reshape(Tensor([1, 0, 64, 64],"float32"), tuple(-1,64,64,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 64, 64],"float32"), tuple(4,3,64,64,), )
paddle.Tensor.reshape(Tensor([1, 0, 64, 64],"float32"), tuple(4,512,64,64,), )
paddle.Tensor.reshape(Tensor([1, 0, 64, 64],"float32"), tuple(8,3,64,64,), )
paddle.Tensor.reshape(Tensor([1, 0, 64, 64],"float32"), tuple(8,512,64,64,), )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float16"), list[1,2048,1,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float16"), list[31,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float16"), shape=list[0,0,1,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float16"), shape=list[0,0,8,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), list[1,-1,2,1,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), list[1,1,8,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), list[1,124,128,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), list[1,128,128,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), list[1,15872,1,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), list[1,16384,1,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), list[1,16384,2,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), list[1,2,2,1,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), list[1,3968,2,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), list[1,4096,2,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), list[1,58,8,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), list[1,62,64,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), list[1,64,64,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), list[2,2,1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), shape=list[0,0,8,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 64],"float32"), tuple(1,4096,1,64,), )
paddle.Tensor.reshape(Tensor([1, 0, 640],"float32"), list[1,-1,2,5,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 6408],"float32"), tuple(1,256,89,72,), )
paddle.Tensor.reshape(Tensor([1, 0, 65, 65],"float32"), tuple(1,512,65,65,), )
paddle.Tensor.reshape(Tensor([1, 0, 65, 65],"float32"), tuple(-1,65,65,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 65, 65],"float32"), tuple(4,512,65,65,), )
paddle.Tensor.reshape(Tensor([1, 0, 65, 65],"float32"), tuple(8,512,65,65,), )
paddle.Tensor.reshape(Tensor([1, 0, 65024],"float32"), list[-1,65024,], )
paddle.Tensor.reshape(Tensor([1, 0, 65536],"float32"), list[0,0,256,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 65536],"float32"), list[1,128,256,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 65536],"float32"), list[1,32,256,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 67200],"float32"), list[-1,96,16,56,75,], )
paddle.Tensor.reshape(Tensor([1, 0, 68, 4],"float32"), list[-1,4624,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 6912],"float32"), tuple(1,256,96,72,), )
paddle.Tensor.reshape(Tensor([1, 0, 7, 1],"float16"), list[1,1,7,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 1],"float16"), tuple(-1,49,), )
paddle.Tensor.reshape(Tensor([1, 0, 7, 1],"float32"), list[1,1,7,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 1],"float32"), tuple(-1,49,), )
paddle.Tensor.reshape(Tensor([1, 0, 7, 10, 768],"float16"), list[1,16,7,10,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 10, 768],"float32"), list[1,16,7,10,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 14, 1],"float32"), list[1,2,8,1,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 14, 768],"float16"), list[1,2,8,1,7,2,7,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 14, 768],"float32"), list[1,2,8,1,7,2,7,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 18, 7, 96],"float32"), list[-1,161,126,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 3, 7, 768],"float32"), list[-1,21,21,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 5, 7, 384],"float32"), list[-1,42,35,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 7, 1],"float32"), list[1,2,8,1,7,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 7, 768],"float16"), list[1,16,7,7,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 7, 768],"float16"), list[1,2,8,1,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 7, 768],"float32"), list[1,16,7,7,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 7, 768],"float32"), list[1,2,8,1,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 8, 768],"float16"), list[1,16,7,8,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 8, 768],"float32"), list[1,16,7,8,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 9, 7, 192],"float32"), list[-1,84,63,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 9, 768],"float16"), list[1,16,7,9,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 7, 9, 768],"float32"), list[1,16,7,9,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 70, 56, 1],"float32"), list[1,2,8,10,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 70, 56, 96],"float32"), list[1,16,70,56,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 70, 56, 96],"float32"), list[1,2,8,10,7,8,7,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 72, 1],"float32"), list[-1,8,12,6,12,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 72, 384],"float32"), list[-1,6912,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 72, 384],"float32"), list[-1,8,12,6,12,384,], )
paddle.Tensor.reshape(Tensor([1, 0, 72, 4],"float32"), list[-1,5184,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 72, 768],"float32"), list[-1,6912,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 7200],"float32"), tuple(1,256,72,100,), )
paddle.Tensor.reshape(Tensor([1, 0, 76, 3],"float32"), tuple(1,5776,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float16"), shape=list[0,0,8,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,1,12,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,109,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,113,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[-1,14,14,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,145,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,1500,12,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,157,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,169,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[-1,20,15,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,217,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,229,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,241,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,261,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,385,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[-1,48,36,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,61,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,65,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,69,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,73,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,85,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), list[1,97,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), shape=list[0,0,8,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), tuple(-1,20,15,768,), )
paddle.Tensor.reshape(Tensor([1, 0, 768],"float32"), tuple(-1,48,36,768,), )
paddle.Tensor.reshape(Tensor([1, 0, 8, 1, 7, 1, 7, 768],"float16"), list[1,16,7,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 1, 7, 1, 7, 768],"float32"), list[1,16,7,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 1, 7, 2, 7, 768],"float16"), list[1,16,7,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 1, 7, 2, 7, 768],"float32"), list[1,16,7,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 1],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 1],"float32"), list[1,2,4,2,4,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 10, 7, 8, 7, 96],"float16"), list[1,16,70,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 10, 7, 8, 7, 96],"float32"), list[1,16,70,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 10, 8, 7, 7, 96],"float32"), list[-1,392,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 12],"float32"), list[1,400,8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 12],"float32"), list[1,492,8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 12],"float32"), list[1,496,8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 12],"float32"), list[1,500,8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 16],"bfloat16"), list[1,1024,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 16],"float16"), list[1,1024,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 16],"float16"), list[1,2048,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 16],"float32"), list[1,11,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 16],"float32"), list[1,300,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 16],"float32"), list[1,6380,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 16],"float32"), list[1,8,128,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 16],"float32"), list[1,8550,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 16],"float32"), list[1,9,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 2, 7, 1, 7, 768],"float16"), list[1,16,14,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 2, 7, 1, 7, 768],"float32"), list[1,16,14,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 2, 7, 2, 7, 384],"float16"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 2, 7, 2, 7, 384],"float32"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 2, 7, 3, 7, 384],"float16"), list[1,16,14,21,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 2, 7, 3, 7, 384],"float32"), list[1,16,14,21,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 20],"float32"), list[1,1100,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 20],"float32"), list[1,18,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 20],"float32"), list[1,21,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 20],"float32"), list[1,22,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 20],"float32"), list[1,36828,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 20],"float32"), list[1,38367,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 20],"float32"), list[1,9,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 20],"float32"), list[4,8,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 3, 7, 2, 7, 384],"float16"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 3, 7, 2, 7, 384],"float32"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 3],"float32"), tuple(1,64,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,1024,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,109,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,113,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,145,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,157,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,169,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,217,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,229,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,241,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,256,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,261,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,385,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,61,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,65,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,69,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,73,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,85,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 32],"float32"), list[1,97,256,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 4, 7, 4, 7, 192],"float16"), list[1,16,28,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 4, 7, 4, 7, 192],"float32"), list[1,16,28,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 4, 7, 5, 7, 192],"float16"), list[1,16,28,35,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 4, 7, 5, 7, 192],"float32"), list[1,16,28,35,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 4, 7, 6, 7, 192],"float16"), list[1,16,28,42,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 4, 7, 6, 7, 192],"float32"), list[1,16,28,42,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 4],"float32"), list[1,-1,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 4],"float32"), tuple(-1,4,), )
paddle.Tensor.reshape(Tensor([1, 0, 8, 5, 7, 4, 7, 192],"float16"), list[1,16,35,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 5, 7, 4, 7, 192],"float32"), list[1,16,35,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 58],"float32"), list[2,8,58,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,1,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,10,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,100,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,101,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,102,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,103,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,104,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,105,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,106,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,107,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,108,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,109,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,11,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,110,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,111,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,112,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,113,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,114,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,115,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,116,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,117,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,118,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,119,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,12,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,120,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,121,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,122,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,123,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,124,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,125,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,126,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,127,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,128,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,129,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,13,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,130,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,131,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,132,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,133,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,134,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,135,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,136,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,137,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,138,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,139,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,14,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,140,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,141,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,142,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,143,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,144,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,145,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,146,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,147,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,148,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,149,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,15,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,150,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,151,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,152,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,153,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,154,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,155,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,156,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,157,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,158,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,159,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,16,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,160,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,161,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,162,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,163,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,164,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,165,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,166,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,167,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,168,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,169,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,17,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,170,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,171,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,172,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,173,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,174,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,175,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,176,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,177,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,178,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,179,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,18,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,180,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,181,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,182,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,183,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,184,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,185,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,186,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,187,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,188,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,189,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,19,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,190,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,191,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,192,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,193,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,194,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,195,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,196,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,197,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,198,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,199,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,2,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,20,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,200,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,201,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,202,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,203,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,204,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,205,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,206,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,207,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,208,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,209,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,21,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,210,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,211,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,212,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,213,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,214,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,215,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,216,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,217,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,218,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,219,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,22,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,220,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,221,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,222,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,223,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,224,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,225,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,226,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,227,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,228,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,229,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,23,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,230,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,231,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,232,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,233,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,234,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,235,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,236,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,237,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,238,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,239,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,24,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,240,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,241,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,242,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,243,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,244,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,245,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,246,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,247,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,248,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,249,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,25,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,250,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,256,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,26,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,27,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,28,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,29,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,3,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,30,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,31,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,32,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,33,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,34,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,35,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,36,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,37,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,38,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,39,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,4,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,40,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,41,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,42,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,43,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,44,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,45,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,46,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,47,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,48,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,49,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,5,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,50,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,51,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,52,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,53,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,54,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,55,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,56,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,57,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,58,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,59,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,6,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,60,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,61,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,62,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,63,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,64,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,65,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,66,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,67,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,68,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,69,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,7,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,70,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,71,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,72,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,73,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,74,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,75,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,76,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,77,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,78,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,79,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,8,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,80,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,81,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,82,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,83,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,84,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,85,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,86,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,87,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,88,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,89,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,9,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,90,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,91,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,92,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,93,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,94,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,95,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,96,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,97,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,98,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 64],"float32"), list[1,99,512,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 7, 768],"float16"), list[1,16,8,7,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 7, 768],"float32"), list[1,16,8,7,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8, 7, 10, 7, 96],"float16"), list[1,16,56,70,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8, 7, 10, 7, 96],"float32"), list[1,16,56,70,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8, 7, 11, 7, 96],"float16"), list[1,16,56,77,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8, 7, 11, 7, 96],"float32"), list[1,16,56,77,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8, 7, 8, 7, 96],"float16"), list[1,16,56,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8, 7, 8, 7, 96],"float32"), list[1,16,56,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8, 7, 9, 7, 96],"float16"), list[1,16,56,63,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8, 7, 9, 7, 96],"float32"), list[1,16,56,63,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8],"float16"), list[1,1,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8],"float16"), list[1,4,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8],"float32"), list[1,1,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8],"float32"), list[1,1,8,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8],"float32"), list[1,17,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8],"float32"), list[1,58,64,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8],"float32"), tuple(1,3,8,8,), )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8],"float32"), tuple(1,512,8,8,), )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8],"float32"), tuple(-1,8,8,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8],"float32"), tuple(4,3,8,8,), )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8],"float32"), tuple(4,512,8,8,), )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8],"float32"), tuple(8,3,8,8,), )
paddle.Tensor.reshape(Tensor([1, 0, 8, 8],"float32"), tuple(8,512,8,8,), )
paddle.Tensor.reshape(Tensor([1, 0, 8, 9, 7, 8, 7, 96],"float16"), list[1,16,63,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 9, 7, 8, 7, 96],"float32"), list[1,16,63,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 96],"bfloat16"), list[1,1024,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 96],"float16"), list[1,1,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 96],"float16"), list[1,2048,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 96],"float16"), list[1,5,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 96],"float32"), list[1,1,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 8, 96],"float32"), list[1,5,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 8],"float32"), list[0,0,2,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 80, 4],"float32"), list[-1,6400,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 80],"float32"), tuple(1,256,10,8,), )
paddle.Tensor.reshape(Tensor([1, 0, 84, 1],"float32"), list[-1,16,7,12,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 85, 1],"float32"), list[1,5,5,17,5,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 8550, 4, 4],"float32"), list[8,1,8550,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 88, 4],"float32"), list[-1,7744,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 9, 1],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 9, 4, 4],"float32"), list[8,1,9,16,], )
paddle.Tensor.reshape(Tensor([1, 0, 9, 4],"float32"), list[1,-1,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 9, 4],"float32"), tuple(-1,4,), )
paddle.Tensor.reshape(Tensor([1, 0, 9, 5, 4],"float32"), list[8,1,9,20,], )
paddle.Tensor.reshape(Tensor([1, 0, 9, 7, 7, 192],"float32"), list[-1,7,7,192,], )
paddle.Tensor.reshape(Tensor([1, 0, 9, 7, 768],"float16"), list[1,16,9,7,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 9, 7, 768],"float32"), list[1,16,9,7,768,], )
paddle.Tensor.reshape(Tensor([1, 0, 9, 9],"float32"), tuple(1,512,9,9,), )
paddle.Tensor.reshape(Tensor([1, 0, 9, 9],"float32"), tuple(-1,9,9,1,), )
paddle.Tensor.reshape(Tensor([1, 0, 9, 9],"float32"), tuple(4,512,9,9,), )
paddle.Tensor.reshape(Tensor([1, 0, 9, 9],"float32"), tuple(8,512,9,9,), )
paddle.Tensor.reshape(Tensor([1, 0, 90, 3],"float32"), tuple(1,8100,3,), )
paddle.Tensor.reshape(Tensor([1, 0, 91],"float32"), list[1,21504,1,91,], )
paddle.Tensor.reshape(Tensor([1, 0, 92, 4],"float32"), list[-1,8464,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 96, 1],"float32"), list[1,8,12,8,12,1,], )
paddle.Tensor.reshape(Tensor([1, 0, 96, 4],"float32"), list[-1,9216,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 96],"float32"), list[1,1,4,-1,], )
paddle.Tensor.reshape(Tensor([1, 0, 96],"float32"), list[1,1,8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 0, 96],"float32"), list[-1,160,120,96,], )
paddle.Tensor.reshape(Tensor([1, 0, 96],"float32"), list[1,20,4,3,8,], )
paddle.Tensor.reshape(Tensor([1, 0, 96],"float32"), list[1,400,8,12,], )
paddle.Tensor.reshape(Tensor([1, 0, 96],"float32"), list[1,492,8,12,], )
paddle.Tensor.reshape(Tensor([1, 0, 96],"float32"), list[1,496,8,12,], )
paddle.Tensor.reshape(Tensor([1, 0, 96],"float32"), list[1,500,8,12,], )
paddle.Tensor.reshape(Tensor([1, 0, 992],"float32"), list[0,0,31,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 992],"float32"), list[1,1280,31,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 992],"float32"), list[1,160,31,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 992],"float32"), list[1,320,31,32,], )
paddle.Tensor.reshape(Tensor([1, 0, 992],"float32"), list[1,640,31,32,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,10,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,100,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,101,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,102,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,103,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,104,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,105,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,106,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,107,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,108,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,109,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,11,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,110,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,111,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,112,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,113,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,114,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,115,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,116,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,117,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,118,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,119,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,12,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,120,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,121,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,122,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,123,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,124,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,125,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,126,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,127,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,128,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,129,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,13,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,130,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,131,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,132,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,133,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,134,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,135,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,136,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,137,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,138,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,139,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,14,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,140,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,141,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,142,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,143,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,144,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,145,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,146,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,147,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,148,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,149,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,15,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,150,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,151,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,152,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,153,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,154,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,155,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,156,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,157,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,158,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,159,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,16,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,160,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,161,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,162,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,163,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,164,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,165,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,166,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,167,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,168,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,169,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,17,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,170,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,171,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,172,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,173,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,174,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,175,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,176,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,177,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,178,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,179,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,18,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,180,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,181,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,182,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,183,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,184,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,185,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,186,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,187,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,188,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,189,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,19,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,190,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,191,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,192,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,193,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,194,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,195,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,196,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,197,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,198,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,199,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,2,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,20,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,200,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,201,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,202,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,203,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,204,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,205,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,206,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,207,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,208,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,209,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,21,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,210,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,211,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,212,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,213,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,214,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,215,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,216,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,217,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,218,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,219,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,22,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,220,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,221,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,222,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,223,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,224,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,225,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,226,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,227,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,228,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,229,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,23,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,230,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,231,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,232,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,233,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,234,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,235,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,236,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,237,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,238,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,239,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,24,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,240,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,241,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,242,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,243,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,244,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,245,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,246,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,247,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,248,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,249,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,25,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,250,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,26,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,261,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,27,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,28,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,29,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,3,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,30,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,31,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,33,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,34,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,35,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,36,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,37,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,38,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,385,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,39,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,4,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,40,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,41,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,42,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,43,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,44,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,45,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,46,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,47,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,48,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,49,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,5,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,50,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,51,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,52,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,53,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,54,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,55,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,56,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,57,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,58,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,59,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,6,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,60,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,61,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,62,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,63,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,64,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,65,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,66,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,67,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,68,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,69,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,7,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,70,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,71,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,72,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,73,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,74,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,75,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,76,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,77,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,78,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,79,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,8,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,80,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,81,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,82,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,83,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,84,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,85,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,86,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,87,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,88,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,89,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,9,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,90,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,91,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,92,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,93,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,94,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,95,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,96,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,97,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,98,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,1,99,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,10,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,100,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,101,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,102,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,103,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,104,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,105,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,106,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,107,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,108,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,109,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,11,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,110,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,111,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,112,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,113,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,114,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,115,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,116,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,117,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,118,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,119,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,12,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,120,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,121,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,122,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,123,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,124,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,125,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,126,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,127,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,128,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,129,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,13,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,130,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,131,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,132,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,133,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,134,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,135,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,136,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,137,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,138,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,139,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,14,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,140,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,141,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,142,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,143,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,144,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,145,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,146,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,147,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,148,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,149,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,15,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,150,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,151,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,152,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,153,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,154,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,155,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,156,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,157,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,158,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,159,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,16,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,160,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,161,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,162,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,163,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,164,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,165,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,166,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,167,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,168,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,169,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,17,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,170,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,171,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,172,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,173,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,174,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,175,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,176,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,177,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,178,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,179,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,18,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,180,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,181,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,182,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,183,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,184,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,185,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,186,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,187,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,188,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,189,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,19,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,190,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,191,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,192,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,193,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,194,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,195,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,196,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,197,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,198,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,199,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,2,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,20,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,200,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,201,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,202,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,203,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,204,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,205,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,206,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,207,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,208,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,209,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,21,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,210,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,211,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,212,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,213,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,214,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,215,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,216,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,217,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,218,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,219,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,22,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,220,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,221,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,222,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,223,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,224,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,225,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,226,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,227,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,228,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,229,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,23,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,230,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,231,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,232,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,233,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,234,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,235,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,236,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,237,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,238,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,239,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,24,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,240,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,241,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,242,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,243,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,244,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,245,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,246,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,247,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,248,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,249,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,25,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,250,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,26,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,27,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,28,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,29,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,3,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,30,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,31,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,32,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,33,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,34,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,35,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,36,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,37,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,38,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,39,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,4,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,40,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,41,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,42,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,43,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,44,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,45,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,46,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,47,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,48,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,49,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,5,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,50,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,51,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,52,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,53,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,54,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,55,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,56,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,57,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,58,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,59,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,6,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,60,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,61,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,62,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,63,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,64,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,65,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,66,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,67,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,68,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,69,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,70,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,71,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,72,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,73,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,74,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,75,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,76,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,77,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,78,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,79,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,8,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,80,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,81,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,82,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,83,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,84,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,85,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,86,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,87,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,88,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,89,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,9,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,90,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,91,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,92,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,93,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,94,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,95,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,96,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,97,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,98,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"bool"), list[1,1,99,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[-1,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,1,-1,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,1,1,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,1,1,-1,3,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,1,1,2,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,-1,10285,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,-1,3598,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,-1,36858,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,-1,38402,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,-1,4165,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,-1,5440,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,-1,6150,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,-1,6400,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,-1,6885,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,-1,8500,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[1,-1,8580,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[-1,8,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), list[3,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(), )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(1,), )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(1,-1,), )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(-1,1,), )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(1,1,128,1,1,), )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(1,1,256,1,1,), )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(1,1,512,1,1,), )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(1,128,1,1,1,), )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(1,256,1,1,1,), )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(1,512,1,1,1,), )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(11,), )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(18,), )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(21,), )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(22,), )
paddle.Tensor.reshape(Tensor([1, 0],"float32"), tuple(9,), )
paddle.Tensor.reshape(Tensor([1, 0],"float64"), list[], )
paddle.Tensor.reshape(Tensor([1, 0],"float64"), list[1,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"float64"), list[1,1,1,1,5,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"float64"), list[1,1,1,5,], )
paddle.Tensor.reshape(Tensor([1, 0],"float64"), list[1,1,5,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"float64"), list[1,1,5,5,], )
paddle.Tensor.reshape(Tensor([1, 0],"float64"), list[1,5,], )
paddle.Tensor.reshape(Tensor([1, 0],"float64"), tuple(-1,), )
paddle.Tensor.reshape(Tensor([1, 0],"float64"), tuple(1,-1,), )
paddle.Tensor.reshape(Tensor([1, 0],"float64"), tuple(1,1,100,), )
paddle.Tensor.reshape(Tensor([1, 0],"float64"), tuple(1,1,17,), )
paddle.Tensor.reshape(Tensor([1, 0],"float64"), tuple(1,1,4,), )
paddle.Tensor.reshape(Tensor([1, 0],"float64"), tuple(1,1,40,), )
paddle.Tensor.reshape(Tensor([1, 0],"int32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1, 0],"int32"), tuple(11,), )
paddle.Tensor.reshape(Tensor([1, 0],"int32"), tuple(18,), )
paddle.Tensor.reshape(Tensor([1, 0],"int32"), tuple(21,), )
paddle.Tensor.reshape(Tensor([1, 0],"int32"), tuple(22,), )
paddle.Tensor.reshape(Tensor([1, 0],"int32"), tuple(9,), )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), list[-1,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), list[-1,1024,], )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), list[-1,2048,], )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), list[-1,58,], )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), list[209,1,], )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), shape=list[-1,7,], )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), shape=tuple(-1,1,), )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), tuple(-1,1,), )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), tuple(-1,10,), )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), tuple(-1,1024,), )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), tuple(-1,11,), )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), tuple(-1,20,), )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), tuple(-1,22,), )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), tuple(-1,3,), )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), tuple(-1,7,), )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), tuple(-1,8,), )
paddle.Tensor.reshape(Tensor([1, 0],"int64"), tuple(-1,9,), )
paddle.Tensor.reshape(Tensor([1, 1, 0, 1, 8],"float32"), list[1,1,-1,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 1],"float32"), list[1,1,1,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 1],"float64"), list[1,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 1],"float64"), list[1,5,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 1],"float64"), list[5,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 10],"float16"), list[1,1,1,10,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 10],"float32"), list[1,1,1,10,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 100],"float16"), list[1,1,1,100,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 101],"float16"), list[1,1,1,101,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 102],"float16"), list[1,1,1,102,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 1024],"float16"), list[1,1,1024,1024,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 103],"float16"), list[1,1,1,103,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 11],"float16"), list[1,1,1,11,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 11],"float32"), list[1,1,1,11,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 11],"float32"), list[1,1,11,11,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 12, 12, 1],"float32"), list[-1,12,12,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 12],"float16"), list[1,1,1,12,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 12],"float32"), list[1,1,1,12,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 13],"float16"), list[1,1,1,13,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 13],"float32"), list[1,1,1,13,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 14],"float16"), list[1,1,1,14,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 14],"float32"), list[1,1,1,14,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 15],"float16"), list[1,1,1,15,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 16],"float16"), list[1,1,1,16,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 160],"float32"), list[1,-1,25600,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 17],"float16"), list[1,1,1,17,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 17],"float32"), list[1,1,17,17,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 18],"float16"), list[1,1,1,18,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 18],"float32"), list[1,1,1,18,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 19],"float16"), list[1,1,1,19,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 19],"float32"), list[1,1,1,19,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 2, 8],"float32"), list[1,1,4,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 2],"float32"), list[1,1,1,2,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 2],"float32"), list[1,-1,1,2,2,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 2],"float32"), tuple(2,2,), )
paddle.Tensor.reshape(Tensor([1, 1, 0, 20],"float16"), list[1,1,1,20,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 20],"float32"), list[1,1,1,20,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 20],"float32"), list[1,1,20,20,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 2048],"float16"), list[1,1,2048,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 21],"float16"), list[1,1,1,21,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 21],"float32"), list[1,1,1,21,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 22],"float16"), list[1,1,1,22,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 22],"float32"), list[1,1,1,22,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 22],"float32"), list[1,1,20,22,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 23],"float16"), list[1,1,1,23,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 23],"float32"), list[1,1,1,23,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 24],"float16"), list[1,1,1,24,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 24],"float32"), list[1,1,1,24,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 25],"float16"), list[1,1,1,25,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 25],"float32"), list[1,1,1,25,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 26],"float16"), list[1,1,1,26,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 26],"float32"), list[1,1,1,26,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 27],"float16"), list[1,1,1,27,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 27],"float32"), list[1,1,1,27,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 28],"float16"), list[1,1,1,28,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 28],"float32"), list[1,1,1,28,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 29],"float16"), list[1,1,1,29,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 29],"float32"), list[1,1,1,29,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 3],"float32"), list[1,1,1,3,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 30],"float16"), list[1,1,1,30,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 30],"float32"), list[1,1,1,30,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 31],"float16"), list[1,1,1,31,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 31],"float32"), list[1,1,1,31,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 32],"float16"), list[1,1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 32],"float32"), list[1,1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 32],"float32"), list[1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 33],"float16"), list[1,1,1,33,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 33],"float32"), list[1,1,1,33,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 34],"float16"), list[1,1,1,34,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 34],"float32"), list[1,1,1,34,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 35],"float16"), list[1,1,1,35,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 35],"float32"), list[1,1,1,35,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 36],"float16"), list[1,1,1,36,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 36],"float32"), list[1,1,1,36,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 37],"float16"), list[1,1,1,37,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 38],"float16"), list[1,1,1,38,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 39],"float16"), list[1,1,1,39,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 4],"float16"), list[1,1,4,4,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 4],"float32"), list[1,-1,2,2,2,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 4],"float32"), list[1,-1,4,2,2,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 40],"float16"), list[1,1,1,40,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 4096],"float32"), list[1,1,4096,4096,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 41],"float16"), list[1,1,1,41,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 42],"float16"), list[1,1,1,42,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 43],"float16"), list[1,1,1,43,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 44],"float16"), list[1,1,1,44,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 45],"float16"), list[1,1,1,45,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 46],"float16"), list[1,1,1,46,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 47],"float16"), list[1,1,1,47,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 48],"float16"), list[1,1,1,48,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 49],"float16"), list[1,1,1,49,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 5],"float16"), list[1,1,1,5,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 5],"float16"), list[1,1,5,5,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 5],"float32"), list[1,1,5,5,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 5],"float64"), list[1,25,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 5],"float64"), list[1,5,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 5],"float64"), list[25,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 5],"float64"), list[5,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 5],"float64"), list[5,5,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 50],"float16"), list[1,1,1,50,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 51],"float16"), list[1,1,1,51,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 52],"float16"), list[1,1,1,52,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 53],"float16"), list[1,1,1,53,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 54],"float16"), list[1,1,1,54,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 55],"float16"), list[1,1,1,55,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 56],"float16"), list[1,1,1,56,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 57],"float16"), list[1,1,1,57,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 58],"float16"), list[1,1,1,58,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 58],"float32"), list[1,1,58,58,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 59],"float16"), list[1,1,1,59,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 6],"float16"), list[1,1,1,6,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 6],"float32"), list[1,1,1,6,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 60],"float16"), list[1,1,1,60,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 61],"float16"), list[1,1,1,61,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 62],"float16"), list[1,1,1,62,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 63],"float16"), list[1,1,1,63,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 64],"float16"), list[1,1,1,64,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 64],"float32"), list[1,1,512,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 65],"float16"), list[1,1,1,65,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 66],"float16"), list[1,1,1,66,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 67],"float16"), list[1,1,1,67,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 68],"float16"), list[1,1,1,68,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 69],"float16"), list[1,1,1,69,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 7, 7, 1],"float16"), list[-1,7,7,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 7, 7, 1],"float32"), list[-1,7,7,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 7],"float16"), list[1,1,1,7,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 7],"float32"), list[1,1,1,7,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 70],"float16"), list[1,1,1,70,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 71],"float16"), list[1,1,1,71,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 72],"float16"), list[1,1,1,72,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 73],"float16"), list[1,1,1,73,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 74],"float16"), list[1,1,1,74,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 75],"float16"), list[1,1,1,75,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 76],"float16"), list[1,1,1,76,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 77],"float16"), list[1,1,1,77,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 78],"float16"), list[1,1,1,78,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 79],"float16"), list[1,1,1,79,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 8],"float16"), list[1,1,1,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 8],"float16"), list[1,1,64,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 8],"float32"), list[1,1,1,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 8],"float32"), list[1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 8],"float32"), list[1,1,4,1,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 8],"float32"), list[1,1,64,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 8],"float32"), list[1,1,8,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 8],"float32"), list[1,4,-1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 8],"float32"), shape=list[1,-1,32,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 80],"float16"), list[1,1,1,80,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 81],"float16"), list[1,1,1,81,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 82],"float16"), list[1,1,1,82,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 83],"float16"), list[1,1,1,83,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 84],"float16"), list[1,1,1,84,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 85],"float16"), list[1,1,1,85,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 86],"float16"), list[1,1,1,86,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 87],"float16"), list[1,1,1,87,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 88],"float16"), list[1,1,1,88,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 89],"float16"), list[1,1,1,89,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 9],"float16"), list[1,1,1,9,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 9],"float32"), list[1,1,1,9,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 90],"float16"), list[1,1,1,90,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 91],"float16"), list[1,1,1,91,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 92],"float16"), list[1,1,1,92,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 93],"float16"), list[1,1,1,93,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 94],"float16"), list[1,1,1,94,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 95],"float16"), list[1,1,1,95,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 96],"float16"), list[1,1,1,96,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 96],"float16"), list[1,1,768,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 96],"float32"), list[1,1,768,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 97],"float16"), list[1,1,1,97,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 98],"float16"), list[1,1,1,98,], )
paddle.Tensor.reshape(Tensor([1, 1, 0, 99],"float16"), list[1,1,1,99,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float16"), list[1,1,1,-1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float16"), shape=list[0,0,8,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float16"), shape=list[0,0,8,96,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), list[0,0,2,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), list[0,0,4,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), list[1,1,12,-1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), list[1,1,16,-1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), list[1,1,20,-1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), list[1,1,4,-1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), list[1,1,4,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), list[1,1,6,-1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), list[1,1,8,-1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), list[1,1,8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), list[1,1,8,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), list[-1,25600,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), list[-1,4,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), shape=list[0,0,1,32,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), shape=list[0,0,2,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), shape=list[0,0,4,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), shape=list[0,0,8,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), shape=list[0,0,8,96,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), shape=list[1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), shape=list[1,-1,4,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), shape=tuple(1,1,1,114,), )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), shape=tuple(1,1,1,115,), )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), shape=tuple(1,1,1,127,), )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), shape=tuple(1,1,1,147,), )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), shape=tuple(1,1,1,152,), )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), shape=tuple(1,1,1,2048,), )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float32"), tuple(1,), )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float64"), list[1,1,1,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float64"), list[1,1,1,5,], )
paddle.Tensor.reshape(Tensor([1, 1, 0],"float64"), list[1,1,5,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0, 12, 1],"float32"), list[-1,12,12,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0, 7, 1],"float16"), list[-1,7,7,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0, 7, 1],"float32"), list[-1,7,7,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,10,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,100,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,101,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,102,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,103,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,11,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,12,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,13,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,14,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,15,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,16,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,17,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,18,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,19,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,20,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,21,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,22,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,23,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,24,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,25,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,26,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,27,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,28,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,29,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,30,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,31,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,33,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,34,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,35,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,36,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,37,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,38,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,39,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,40,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,41,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,42,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,43,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,44,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,45,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,46,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,47,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,48,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,49,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,5,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,50,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,51,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,52,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,53,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,54,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,55,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,56,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,57,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,58,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,59,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,6,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,60,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,61,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,62,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,63,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,64,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,65,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,66,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,67,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,68,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,69,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,7,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,70,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,71,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,72,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,73,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,74,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,75,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,76,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,77,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,78,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,79,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,80,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,81,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,82,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,83,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,84,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,85,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,86,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,87,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,88,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,89,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,9,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,90,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,91,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,92,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,93,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,94,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,95,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,96,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,97,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,98,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,1,99,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float16"), list[1,1,2048,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,10,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,11,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,12,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,13,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,14,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,18,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,19,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,2,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,20,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,21,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,22,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,23,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,24,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,25,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,26,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,27,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,28,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,29,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,3,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,30,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,31,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,33,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,34,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,35,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,36,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,6,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,7,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,1,9,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float32"), list[1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float64"), list[1,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float64"), list[1,5,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 0],"float64"), list[5,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 12, 0, 1],"float32"), list[-1,12,12,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 12, 12, 0],"float32"), list[-1,12,12,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 7, 0, 1],"float16"), list[-1,7,7,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 7, 0, 1],"float32"), list[-1,7,7,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 7, 7, 0],"float16"), list[-1,7,7,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 1, 7, 7, 0],"float32"), list[-1,7,7,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 1024, 0],"float16"), list[1,1,1024,1024,], )
paddle.Tensor.reshape(Tensor([1, 1, 11, 0],"float32"), list[1,1,11,11,], )
paddle.Tensor.reshape(Tensor([1, 1, 160, 0],"float32"), list[1,-1,25600,], )
paddle.Tensor.reshape(Tensor([1, 1, 17, 0],"float32"), list[1,1,17,17,], )
paddle.Tensor.reshape(Tensor([1, 1, 2, 0, 8],"float32"), list[1,1,4,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 2, 0],"float32"), list[1,-1,1,2,2,], )
paddle.Tensor.reshape(Tensor([1, 1, 2, 0],"float32"), list[1,-1,2,2,2,], )
paddle.Tensor.reshape(Tensor([1, 1, 2, 0],"float32"), tuple(2,2,), )
paddle.Tensor.reshape(Tensor([1, 1, 2, 2, 0],"float32"), list[1,1,4,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 20, 0],"float32"), list[1,1,20,20,], )
paddle.Tensor.reshape(Tensor([1, 1, 20, 0],"float32"), list[1,1,20,22,], )
paddle.Tensor.reshape(Tensor([1, 1, 4, 0, 8],"float32"), list[1,1,-1,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 4, 0],"float16"), list[1,1,4,4,], )
paddle.Tensor.reshape(Tensor([1, 1, 4, 0],"float32"), list[1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 1, 4, 0],"float32"), list[1,1,4,1,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 4, 0],"float32"), list[1,-1,4,2,2,], )
paddle.Tensor.reshape(Tensor([1, 1, 4, 0],"float32"), list[1,4,-1,], )
paddle.Tensor.reshape(Tensor([1, 1, 4, 0],"float32"), shape=list[1,-1,32,], )
paddle.Tensor.reshape(Tensor([1, 1, 4, 1, 0],"float32"), list[1,1,-1,8,], )
paddle.Tensor.reshape(Tensor([1, 1, 4096, 0],"float32"), list[1,1,4096,4096,], )
paddle.Tensor.reshape(Tensor([1, 1, 5, 0],"float16"), list[1,1,5,5,], )
paddle.Tensor.reshape(Tensor([1, 1, 5, 0],"float32"), list[1,1,5,5,], )
paddle.Tensor.reshape(Tensor([1, 1, 5, 0],"float64"), list[1,25,], )
paddle.Tensor.reshape(Tensor([1, 1, 5, 0],"float64"), list[1,5,], )
paddle.Tensor.reshape(Tensor([1, 1, 5, 0],"float64"), list[25,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 5, 0],"float64"), list[5,1,], )
paddle.Tensor.reshape(Tensor([1, 1, 5, 0],"float64"), list[5,5,], )
paddle.Tensor.reshape(Tensor([1, 1, 58, 0],"float32"), list[1,1,58,58,], )
paddle.Tensor.reshape(Tensor([1, 1, 8, 0],"float16"), list[1,1,64,], )
paddle.Tensor.reshape(Tensor([1, 1, 8, 0],"float16"), list[1,1,768,], )
paddle.Tensor.reshape(Tensor([1, 1, 8, 0],"float32"), list[1,1,512,], )
paddle.Tensor.reshape(Tensor([1, 1, 8, 0],"float32"), list[1,1,64,], )
paddle.Tensor.reshape(Tensor([1, 1, 8, 0],"float32"), list[1,1,768,], )
paddle.Tensor.reshape(Tensor([1, 1, 8, 0],"float32"), list[1,1,8,8,], )
paddle.Tensor.reshape(Tensor([1, 10, 0, 1],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1, 10, 0, 1],"float32"), list[1,2,5,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 10, 0, 11],"float32"), list[1,-1,11,], )
paddle.Tensor.reshape(Tensor([1, 10, 0, 32],"float32"), list[-1,8,], )
paddle.Tensor.reshape(Tensor([1, 10, 0, 4],"float32"), list[1,-1,4,], )
paddle.Tensor.reshape(Tensor([1, 10, 0, 4],"float32"), tuple(-1,4,), )
paddle.Tensor.reshape(Tensor([1, 10, 0, 5, 5, 1],"float32"), list[-1,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 10, 0, 64],"float32"), list[1,10,512,], )
paddle.Tensor.reshape(Tensor([1, 10, 0, 8],"float32"), shape=list[1,-1,32,], )
paddle.Tensor.reshape(Tensor([1, 10, 0],"float32"), list[-1,4,], )
paddle.Tensor.reshape(Tensor([1, 10, 0],"float32"), shape=list[1,-1,4,8,], )
paddle.Tensor.reshape(Tensor([1, 10, 10, 0],"float32"), list[1,-1,11,], )
paddle.Tensor.reshape(Tensor([1, 10, 10, 0],"float32"), list[-1,8,], )
paddle.Tensor.reshape(Tensor([1, 10, 25, 0],"float32"), list[1,2,5,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 10, 34, 0, 5, 1],"float32"), list[-1,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 10, 34, 5, 0, 1],"float32"), list[-1,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 10, 34, 5, 5, 0],"float32"), list[-1,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 10, 4, 0],"float32"), shape=list[1,-1,32,], )
paddle.Tensor.reshape(Tensor([1, 10, 8, 0],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1, 10, 8, 0],"float32"), list[1,-1,4,], )
paddle.Tensor.reshape(Tensor([1, 10, 8, 0],"float32"), list[1,10,512,], )
paddle.Tensor.reshape(Tensor([1, 10, 8, 0],"float32"), tuple(-1,4,), )
paddle.Tensor.reshape(Tensor([1, 100, 0, 64],"float32"), list[1,100,512,], )
paddle.Tensor.reshape(Tensor([1, 100, 8, 0],"float32"), list[1,100,512,], )
paddle.Tensor.reshape(Tensor([1, 101, 0, 64],"float32"), list[1,101,512,], )
paddle.Tensor.reshape(Tensor([1, 101, 8, 0],"float32"), list[1,101,512,], )
paddle.Tensor.reshape(Tensor([1, 10164, 0],"float32"), list[1,10164,8,32,], )
paddle.Tensor.reshape(Tensor([1, 102, 0, 64],"float32"), list[1,102,512,], )
paddle.Tensor.reshape(Tensor([1, 102, 8, 0],"float32"), list[1,102,512,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0, 128],"bfloat16"), list[1,1024,4096,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0, 128],"float32"), tuple(4,256,128,128,), )
paddle.Tensor.reshape(Tensor([1, 1024, 0, 129],"float32"), tuple(4,256,129,129,), )
paddle.Tensor.reshape(Tensor([1, 1024, 0, 16],"bfloat16"), list[1,1024,128,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0, 16],"float16"), list[1,1024,128,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0, 256],"float32"), tuple(8,128,256,256,), )
paddle.Tensor.reshape(Tensor([1, 1024, 0, 257],"float32"), tuple(8,128,257,257,), )
paddle.Tensor.reshape(Tensor([1, 1024, 0, 32],"float32"), list[1,1024,160,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0, 32],"float32"), list[1,1024,256,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0, 4, 16],"float16"), list[1,1024,8,16,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0, 64],"float32"), list[1,1024,320,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0, 96],"bfloat16"), list[1,1024,768,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"bfloat16"), list[1,1024,32,128,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"bfloat16"), shape=list[0,0,2,16,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"bfloat16"), shape=list[0,0,8,16,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float16"), list[-1,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float16"), shape=list[0,0,2,16,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float16"), shape=list[0,0,8,16,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,-1,2,1,32,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,-1,2,2,32,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,-1,2,5,32,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,-1,2,8,32,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,16,16,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,32,32,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,34,34,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,36,36,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,38,38,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,40,40,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,42,42,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,44,44,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,46,46,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,48,48,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,5,32,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,5,64,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,50,50,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,52,52,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,54,54,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,56,56,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,58,58,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,60,60,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,1024,8,32,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,32,32,160,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,32,32,256,], )
paddle.Tensor.reshape(Tensor([1, 1024, 0],"float32"), list[1,32,32,320,], )
paddle.Tensor.reshape(Tensor([1, 1024, 128, 0],"float32"), tuple(4,256,128,128,), )
paddle.Tensor.reshape(Tensor([1, 1024, 129, 0],"float32"), tuple(4,256,129,129,), )
paddle.Tensor.reshape(Tensor([1, 1024, 2, 0, 16],"float16"), list[1,1024,8,16,], )
paddle.Tensor.reshape(Tensor([1, 1024, 2, 4, 0],"float16"), list[1,1024,8,16,], )
paddle.Tensor.reshape(Tensor([1, 1024, 256, 0],"float32"), tuple(8,128,256,256,), )
paddle.Tensor.reshape(Tensor([1, 1024, 257, 0],"float32"), tuple(8,128,257,257,), )
paddle.Tensor.reshape(Tensor([1, 1024, 32, 0],"bfloat16"), list[1,1024,4096,], )
paddle.Tensor.reshape(Tensor([1, 1024, 5, 0],"float32"), list[1,1024,160,], )
paddle.Tensor.reshape(Tensor([1, 1024, 5, 0],"float32"), list[1,1024,320,], )
paddle.Tensor.reshape(Tensor([1, 1024, 8, 0],"bfloat16"), list[1,1024,128,], )
paddle.Tensor.reshape(Tensor([1, 1024, 8, 0],"bfloat16"), list[1,1024,768,], )
paddle.Tensor.reshape(Tensor([1, 1024, 8, 0],"float16"), list[1,1024,128,], )
paddle.Tensor.reshape(Tensor([1, 1024, 8, 0],"float32"), list[1,1024,256,], )
paddle.Tensor.reshape(Tensor([1, 10285, 0],"float32"), list[-1,1,], )
paddle.Tensor.reshape(Tensor([1, 10285, 0],"float32"), list[-1,11,], )
paddle.Tensor.reshape(Tensor([1, 10285, 0],"float32"), list[-1,2,], )
paddle.Tensor.reshape(Tensor([1, 10285, 0],"float32"), list[-1,32,], )
paddle.Tensor.reshape(Tensor([1, 103, 0, 64],"float32"), list[1,103,512,], )
paddle.Tensor.reshape(Tensor([1, 103, 8, 0],"float32"), list[1,103,512,], )
paddle.Tensor.reshape(Tensor([1, 104, 0, 64],"float32"), list[1,104,512,], )
paddle.Tensor.reshape(Tensor([1, 104, 8, 0],"float32"), list[1,104,512,], )
paddle.Tensor.reshape(Tensor([1, 105, 0, 64],"float32"), list[1,105,512,], )
paddle.Tensor.reshape(Tensor([1, 105, 8, 0],"float32"), list[1,105,512,], )
paddle.Tensor.reshape(Tensor([1, 106, 0, 64],"float32"), list[1,106,512,], )
paddle.Tensor.reshape(Tensor([1, 106, 8, 0],"float32"), list[1,106,512,], )
paddle.Tensor.reshape(Tensor([1, 107, 0, 64],"float32"), list[1,107,512,], )
paddle.Tensor.reshape(Tensor([1, 107, 8, 0],"float32"), list[1,107,512,], )
paddle.Tensor.reshape(Tensor([1, 108, 0, 49, 49],"float32"), list[-1,6,49,49,], )
paddle.Tensor.reshape(Tensor([1, 108, 0, 64],"float32"), list[1,108,512,], )
paddle.Tensor.reshape(Tensor([1, 108, 6, 0, 49],"float32"), list[-1,6,49,49,], )
paddle.Tensor.reshape(Tensor([1, 108, 6, 49, 0],"float32"), list[-1,6,49,49,], )
paddle.Tensor.reshape(Tensor([1, 108, 8, 0],"float32"), list[1,108,512,], )
paddle.Tensor.reshape(Tensor([1, 108472, 0],"float32"), tuple(1,298,364,2,), )
paddle.Tensor.reshape(Tensor([1, 109, 0, 32],"float32"), list[1,109,256,], )
paddle.Tensor.reshape(Tensor([1, 109, 0, 64],"float32"), list[1,109,512,], )
paddle.Tensor.reshape(Tensor([1, 109, 0],"float32"), list[1,109,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 109, 8, 0],"float32"), list[1,109,256,], )
paddle.Tensor.reshape(Tensor([1, 109, 8, 0],"float32"), list[1,109,512,], )
paddle.Tensor.reshape(Tensor([1, 11, 0, 11],"float32"), list[1,-1,11,], )
paddle.Tensor.reshape(Tensor([1, 11, 0, 16],"float32"), list[1,11,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 11, 0, 32],"float32"), list[1,11,512,], )
paddle.Tensor.reshape(Tensor([1, 11, 0, 32],"float32"), list[-1,8,], )
paddle.Tensor.reshape(Tensor([1, 11, 0, 64],"float32"), list[1,11,512,], )
paddle.Tensor.reshape(Tensor([1, 11, 0],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 11, 0],"float32"), list[1,11,8,16,], )
paddle.Tensor.reshape(Tensor([1, 11, 0],"float32"), list[1,11,8,4,4,2,], )
paddle.Tensor.reshape(Tensor([1, 11, 0],"float32"), shape=list[0,0,16,32,], )
paddle.Tensor.reshape(Tensor([1, 11, 0],"float32"), tuple(-1,4,), )
paddle.Tensor.reshape(Tensor([1, 11, 0],"float32"), tuple(11,4,), )
paddle.Tensor.reshape(Tensor([1, 11, 11, 0],"float32"), list[1,-1,11,], )
paddle.Tensor.reshape(Tensor([1, 11, 11, 0],"float32"), list[-1,8,], )
paddle.Tensor.reshape(Tensor([1, 11, 16, 0],"float32"), list[1,11,512,], )
paddle.Tensor.reshape(Tensor([1, 11, 8, 0],"float32"), list[1,11,512,], )
paddle.Tensor.reshape(Tensor([1, 11, 8, 0],"float32"), list[1,11,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 110, 0, 64],"float32"), list[1,110,512,], )
paddle.Tensor.reshape(Tensor([1, 110, 8, 0],"float32"), list[1,110,512,], )
paddle.Tensor.reshape(Tensor([1, 1100, 0, 20],"float32"), list[1,1100,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 1100, 0],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 1100, 0],"float32"), list[1,1100,8,20,], )
paddle.Tensor.reshape(Tensor([1, 1100, 0],"float32"), list[1,1100,8,5,4,2,], )
paddle.Tensor.reshape(Tensor([1, 1100, 8, 0],"float32"), list[1,1100,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 111, 0, 64],"float32"), list[1,111,512,], )
paddle.Tensor.reshape(Tensor([1, 111, 8, 0],"float32"), list[1,111,512,], )
paddle.Tensor.reshape(Tensor([1, 11109, 0],"float32"), list[1,11109,8,32,], )
paddle.Tensor.reshape(Tensor([1, 112, 0, 1],"float32"), list[-1,16,7,12,7,1,], )
paddle.Tensor.reshape(Tensor([1, 112, 0, 64],"float32"), list[1,112,512,], )
paddle.Tensor.reshape(Tensor([1, 112, 8, 0],"float32"), list[1,112,512,], )
paddle.Tensor.reshape(Tensor([1, 112, 84, 0],"float32"), list[-1,16,7,12,7,1,], )
paddle.Tensor.reshape(Tensor([1, 113, 0, 32],"float32"), list[1,113,256,], )
paddle.Tensor.reshape(Tensor([1, 113, 0, 64],"float32"), list[1,113,512,], )
paddle.Tensor.reshape(Tensor([1, 113, 0],"float32"), list[1,113,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 113, 8, 0],"float32"), list[1,113,256,], )
paddle.Tensor.reshape(Tensor([1, 113, 8, 0],"float32"), list[1,113,512,], )
paddle.Tensor.reshape(Tensor([1, 114, 0, 64],"float32"), list[1,114,512,], )
paddle.Tensor.reshape(Tensor([1, 114, 8, 0],"float32"), list[1,114,512,], )
paddle.Tensor.reshape(Tensor([1, 115, 0, 64],"float32"), list[1,115,512,], )
paddle.Tensor.reshape(Tensor([1, 115, 8, 0],"float32"), list[1,115,512,], )
paddle.Tensor.reshape(Tensor([1, 1156, 0],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 1156, 0],"float32"), tuple(1,34,34,2,), )
paddle.Tensor.reshape(Tensor([1, 116, 0, 64],"float32"), list[1,116,512,], )
paddle.Tensor.reshape(Tensor([1, 116, 8, 0],"float32"), list[1,116,512,], )
paddle.Tensor.reshape(Tensor([1, 117, 0, 64],"float32"), list[1,117,512,], )
paddle.Tensor.reshape(Tensor([1, 117, 8, 0],"float32"), list[1,117,512,], )
paddle.Tensor.reshape(Tensor([1, 118, 0, 64],"float32"), list[1,118,512,], )
paddle.Tensor.reshape(Tensor([1, 118, 8, 0],"float32"), list[1,118,512,], )
paddle.Tensor.reshape(Tensor([1, 119, 0, 64],"float32"), list[1,119,512,], )
paddle.Tensor.reshape(Tensor([1, 119, 8, 0],"float32"), list[1,119,512,], )
paddle.Tensor.reshape(Tensor([1, 12, 0, 1],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1, 12, 0, 1],"float32"), list[1,1,12,1,12,1,], )
paddle.Tensor.reshape(Tensor([1, 12, 0, 1],"float32"), tuple(-1,144,), )
paddle.Tensor.reshape(Tensor([1, 12, 0, 128],"float32"), tuple(4,3,128,128,), )
paddle.Tensor.reshape(Tensor([1, 12, 0, 144, 144],"float32"), list[-1,24,144,144,], )
paddle.Tensor.reshape(Tensor([1, 12, 0, 16],"float32"), tuple(4,3,16,16,), )
paddle.Tensor.reshape(Tensor([1, 12, 0, 256],"float32"), tuple(4,3,256,256,), )
paddle.Tensor.reshape(Tensor([1, 12, 0, 32],"float32"), tuple(4,3,32,32,), )
paddle.Tensor.reshape(Tensor([1, 12, 0, 392, 392],"float16"), list[-1,12,392,392,], )
paddle.Tensor.reshape(Tensor([1, 12, 0, 392, 392],"float32"), list[-1,12,392,392,], )
paddle.Tensor.reshape(Tensor([1, 12, 0, 4],"float32"), list[1,-1,4,], )
paddle.Tensor.reshape(Tensor([1, 12, 0, 4],"float32"), tuple(-1,4,), )
paddle.Tensor.reshape(Tensor([1, 12, 0, 4],"float32"), tuple(4,3,4,4,), )
paddle.Tensor.reshape(Tensor([1, 12, 0, 64],"float32"), list[1,12,512,], )
paddle.Tensor.reshape(Tensor([1, 12, 0, 64],"float32"), tuple(4,3,64,64,), )
paddle.Tensor.reshape(Tensor([1, 12, 0, 7, 7, 192],"float32"), list[-1,7,7,192,], )
paddle.Tensor.reshape(Tensor([1, 12, 0, 8],"float32"), tuple(4,3,8,8,), )
paddle.Tensor.reshape(Tensor([1, 12, 0, 9, 7, 192],"float32"), list[-1,84,63,192,], )
paddle.Tensor.reshape(Tensor([1, 12, 12, 0, 392],"float16"), list[-1,12,392,392,], )
paddle.Tensor.reshape(Tensor([1, 12, 12, 0, 392],"float32"), list[-1,12,392,392,], )
paddle.Tensor.reshape(Tensor([1, 12, 12, 0],"float32"), list[1,1,12,1,12,1,], )
paddle.Tensor.reshape(Tensor([1, 12, 12, 0],"float32"), tuple(-1,144,), )
paddle.Tensor.reshape(Tensor([1, 12, 12, 392, 0],"float16"), list[-1,12,392,392,], )
paddle.Tensor.reshape(Tensor([1, 12, 12, 392, 0],"float32"), list[-1,12,392,392,], )
paddle.Tensor.reshape(Tensor([1, 12, 128, 0],"float32"), tuple(4,3,128,128,), )
paddle.Tensor.reshape(Tensor([1, 12, 16, 0],"float32"), tuple(4,3,16,16,), )
paddle.Tensor.reshape(Tensor([1, 12, 24, 0, 144],"float32"), list[-1,24,144,144,], )
paddle.Tensor.reshape(Tensor([1, 12, 24, 144, 0],"float32"), list[-1,24,144,144,], )
paddle.Tensor.reshape(Tensor([1, 12, 256, 0],"float32"), tuple(4,3,256,256,), )
paddle.Tensor.reshape(Tensor([1, 12, 32, 0],"float32"), tuple(4,3,32,32,), )
paddle.Tensor.reshape(Tensor([1, 12, 4, 0],"float32"), tuple(4,3,4,4,), )
paddle.Tensor.reshape(Tensor([1, 12, 64, 0],"float32"), tuple(4,3,64,64,), )
paddle.Tensor.reshape(Tensor([1, 12, 7, 0, 7, 192],"float32"), list[-1,84,63,192,], )
paddle.Tensor.reshape(Tensor([1, 12, 7, 9, 0, 192],"float32"), list[-1,84,63,192,], )
paddle.Tensor.reshape(Tensor([1, 12, 7, 9, 7, 0],"float32"), list[-1,84,63,192,], )
paddle.Tensor.reshape(Tensor([1, 12, 8, 0],"float32"), list[1,12,512,], )
paddle.Tensor.reshape(Tensor([1, 12, 8, 0],"float32"), tuple(4,3,8,8,), )
paddle.Tensor.reshape(Tensor([1, 12, 9, 0, 7, 192],"float32"), list[-1,7,7,192,], )
paddle.Tensor.reshape(Tensor([1, 12, 9, 0],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1, 12, 9, 0],"float32"), list[1,-1,4,], )
paddle.Tensor.reshape(Tensor([1, 12, 9, 0],"float32"), tuple(-1,4,), )
paddle.Tensor.reshape(Tensor([1, 12, 9, 7, 0, 192],"float32"), list[-1,7,7,192,], )
paddle.Tensor.reshape(Tensor([1, 12, 9, 7, 7, 0],"float32"), list[-1,7,7,192,], )
paddle.Tensor.reshape(Tensor([1, 120, 0, 64],"float32"), list[1,120,512,], )
paddle.Tensor.reshape(Tensor([1, 120, 8, 0],"float32"), list[1,120,512,], )
paddle.Tensor.reshape(Tensor([1, 1200, 0],"float32"), list[-1,40,30,384,], )
paddle.Tensor.reshape(Tensor([1, 1200, 0],"float32"), tuple(-1,40,30,384,), )
paddle.Tensor.reshape(Tensor([1, 120000, 0],"float32"), tuple(1,400,300,2,), )
paddle.Tensor.reshape(Tensor([1, 12096, 0],"float32"), list[1,12096,8,32,], )
paddle.Tensor.reshape(Tensor([1, 121, 0, 64],"float32"), list[1,121,512,], )
paddle.Tensor.reshape(Tensor([1, 121, 8, 0],"float32"), list[1,121,512,], )
paddle.Tensor.reshape(Tensor([1, 122, 0, 64],"float32"), list[1,122,512,], )
paddle.Tensor.reshape(Tensor([1, 122, 8, 0],"float32"), list[1,122,512,], )
paddle.Tensor.reshape(Tensor([1, 123, 0, 64],"float32"), list[1,123,512,], )
paddle.Tensor.reshape(Tensor([1, 123, 8, 0],"float32"), list[1,123,512,], )
paddle.Tensor.reshape(Tensor([1, 124, 0, 64],"float32"), list[1,124,512,], )
paddle.Tensor.reshape(Tensor([1, 124, 8, 0],"float32"), list[1,124,512,], )
paddle.Tensor.reshape(Tensor([1, 125, 0, 64],"float32"), list[1,125,512,], )
paddle.Tensor.reshape(Tensor([1, 125, 8, 0],"float32"), list[1,125,512,], )
paddle.Tensor.reshape(Tensor([1, 126, 0, 64],"float32"), list[1,126,512,], )
paddle.Tensor.reshape(Tensor([1, 126, 8, 0],"float32"), list[1,126,512,], )
paddle.Tensor.reshape(Tensor([1, 127, 0, 64],"float32"), list[1,127,512,], )
paddle.Tensor.reshape(Tensor([1, 127, 8, 0],"float32"), list[1,127,512,], )
paddle.Tensor.reshape(Tensor([1, 128, 0, 1],"float32"), tuple(1,128,32,), )
paddle.Tensor.reshape(Tensor([1, 128, 0, 16],"float32"), list[1,128,-1,], )
paddle.Tensor.reshape(Tensor([1, 128, 0, 256],"float32"), tuple(1,128,256,256,), )
paddle.Tensor.reshape(Tensor([1, 128, 0, 257],"float32"), tuple(1,128,257,257,), )
paddle.Tensor.reshape(Tensor([1, 128, 0, 257],"float32"), tuple(-1,257,257,1,), )
paddle.Tensor.reshape(Tensor([1, 128, 0, 3, 3],"float32"), tuple(128,128,3,3,), )
paddle.Tensor.reshape(Tensor([1, 128, 0, 3, 3],"float32"), tuple(128,256,3,3,), )
paddle.Tensor.reshape(Tensor([1, 128, 0, 392, 392],"float16"), list[-1,3,392,392,], )
paddle.Tensor.reshape(Tensor([1, 128, 0, 392, 392],"float32"), list[-1,3,392,392,], )
paddle.Tensor.reshape(Tensor([1, 128, 0, 64],"float32"), list[1,128,512,], )
paddle.Tensor.reshape(Tensor([1, 128, 0],"float32"), list[1,128,124,128,], )
paddle.Tensor.reshape(Tensor([1, 128, 0],"float32"), list[1,128,128,128,], )
paddle.Tensor.reshape(Tensor([1, 128, 0],"float32"), list[1,128,256,256,], )
paddle.Tensor.reshape(Tensor([1, 128, 0],"float32"), list[1,128,62,64,], )
paddle.Tensor.reshape(Tensor([1, 128, 0],"float32"), list[1,128,64,64,], )
paddle.Tensor.reshape(Tensor([1, 128, 128, 0, 3],"float32"), tuple(128,128,3,3,), )
paddle.Tensor.reshape(Tensor([1, 128, 128, 3, 0],"float32"), tuple(128,128,3,3,), )
paddle.Tensor.reshape(Tensor([1, 128, 15, 0],"float32"), list[1,128,-1,], )
paddle.Tensor.reshape(Tensor([1, 128, 16, 0],"float32"), list[1,128,-1,], )
paddle.Tensor.reshape(Tensor([1, 128, 256, 0, 3],"float32"), tuple(128,256,3,3,), )
paddle.Tensor.reshape(Tensor([1, 128, 256, 0],"float32"), tuple(1,128,256,256,), )
paddle.Tensor.reshape(Tensor([1, 128, 256, 3, 0],"float32"), tuple(128,256,3,3,), )
paddle.Tensor.reshape(Tensor([1, 128, 257, 0],"float32"), tuple(1,128,257,257,), )
paddle.Tensor.reshape(Tensor([1, 128, 257, 0],"float32"), tuple(-1,257,257,1,), )
paddle.Tensor.reshape(Tensor([1, 128, 3, 0, 392],"float16"), list[-1,3,392,392,], )
paddle.Tensor.reshape(Tensor([1, 128, 3, 0, 392],"float32"), list[-1,3,392,392,], )
paddle.Tensor.reshape(Tensor([1, 128, 3, 392, 0],"float16"), list[-1,3,392,392,], )
paddle.Tensor.reshape(Tensor([1, 128, 3, 392, 0],"float32"), list[-1,3,392,392,], )
paddle.Tensor.reshape(Tensor([1, 128, 32, 0],"float32"), tuple(1,128,32,), )
paddle.Tensor.reshape(Tensor([1, 128, 8, 0],"float32"), list[1,128,512,], )
paddle.Tensor.reshape(Tensor([1, 1280, 0],"float32"), list[1,1280,31,32,], )
paddle.Tensor.reshape(Tensor([1, 1280, 0],"float32"), list[1,1280,32,32,], )
paddle.Tensor.reshape(Tensor([1, 129, 0, 64],"float32"), list[1,129,512,], )
paddle.Tensor.reshape(Tensor([1, 129, 8, 0],"float32"), list[1,129,512,], )
paddle.Tensor.reshape(Tensor([1, 13, 0, 64],"float32"), list[1,13,512,], )
paddle.Tensor.reshape(Tensor([1, 13, 8, 0],"float32"), list[1,13,512,], )
paddle.Tensor.reshape(Tensor([1, 130, 0, 64],"float32"), list[1,130,512,], )
paddle.Tensor.reshape(Tensor([1, 130, 8, 0],"float32"), list[1,130,512,], )
paddle.Tensor.reshape(Tensor([1, 131, 0, 64],"float32"), list[1,131,512,], )
paddle.Tensor.reshape(Tensor([1, 131, 8, 0],"float32"), list[1,131,512,], )
paddle.Tensor.reshape(Tensor([1, 132, 0, 64],"float32"), list[1,132,512,], )
paddle.Tensor.reshape(Tensor([1, 132, 8, 0],"float32"), list[1,132,512,], )
paddle.Tensor.reshape(Tensor([1, 133, 0, 64],"float32"), list[1,133,512,], )
paddle.Tensor.reshape(Tensor([1, 133, 8, 0],"float32"), list[1,133,512,], )
paddle.Tensor.reshape(Tensor([1, 134, 0, 64],"float32"), list[1,134,512,], )
paddle.Tensor.reshape(Tensor([1, 134, 8, 0],"float32"), list[1,134,512,], )
paddle.Tensor.reshape(Tensor([1, 135, 0, 64],"float32"), list[1,135,512,], )
paddle.Tensor.reshape(Tensor([1, 135, 8, 0],"float32"), list[1,135,512,], )
paddle.Tensor.reshape(Tensor([1, 136, 0, 64],"float32"), list[1,136,512,], )
paddle.Tensor.reshape(Tensor([1, 136, 8, 0],"float32"), list[1,136,512,], )
paddle.Tensor.reshape(Tensor([1, 137, 0, 64],"float32"), list[1,137,512,], )
paddle.Tensor.reshape(Tensor([1, 137, 8, 0],"float32"), list[1,137,512,], )
paddle.Tensor.reshape(Tensor([1, 138, 0, 64],"float32"), list[1,138,512,], )
paddle.Tensor.reshape(Tensor([1, 138, 8, 0],"float32"), list[1,138,512,], )
paddle.Tensor.reshape(Tensor([1, 139, 0, 64],"float32"), list[1,139,512,], )
paddle.Tensor.reshape(Tensor([1, 139, 8, 0],"float32"), list[1,139,512,], )
paddle.Tensor.reshape(Tensor([1, 14, 0, 1],"float16"), list[1,2,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 14, 0, 1],"float32"), list[1,2,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 14, 0, 64],"float32"), list[1,14,512,], )
paddle.Tensor.reshape(Tensor([1, 14, 0, 8],"float32"), list[1,14,32,], )
paddle.Tensor.reshape(Tensor([1, 14, 0],"float32"), list[1,14,4,8,], )
paddle.Tensor.reshape(Tensor([1, 14, 14, 0],"float16"), list[1,2,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 14, 14, 0],"float32"), list[1,2,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 14, 4, 0],"float32"), list[1,14,32,], )
paddle.Tensor.reshape(Tensor([1, 14, 8, 0],"float32"), list[1,14,512,], )
paddle.Tensor.reshape(Tensor([1, 140, 0, 64],"float32"), list[1,140,512,], )
paddle.Tensor.reshape(Tensor([1, 140, 8, 0],"float32"), list[1,140,512,], )
paddle.Tensor.reshape(Tensor([1, 141, 0, 64],"float32"), list[1,141,512,], )
paddle.Tensor.reshape(Tensor([1, 141, 8, 0],"float32"), list[1,141,512,], )
paddle.Tensor.reshape(Tensor([1, 142, 0, 64],"float32"), list[1,142,512,], )
paddle.Tensor.reshape(Tensor([1, 142, 8, 0],"float32"), list[1,142,512,], )
paddle.Tensor.reshape(Tensor([1, 143, 0, 64],"float32"), list[1,143,512,], )
paddle.Tensor.reshape(Tensor([1, 143, 8, 0],"float32"), list[1,143,512,], )
paddle.Tensor.reshape(Tensor([1, 143264, 0],"float32"), tuple(1,352,407,2,), )
paddle.Tensor.reshape(Tensor([1, 144, 0, 64],"float32"), list[1,144,512,], )
paddle.Tensor.reshape(Tensor([1, 144, 8, 0],"float32"), list[1,144,512,], )
paddle.Tensor.reshape(Tensor([1, 145, 0, 32],"float32"), list[1,145,256,], )
paddle.Tensor.reshape(Tensor([1, 145, 0, 64],"float32"), list[1,145,512,], )
paddle.Tensor.reshape(Tensor([1, 145, 0],"float32"), list[1,145,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 145, 8, 0],"float32"), list[1,145,256,], )
paddle.Tensor.reshape(Tensor([1, 145, 8, 0],"float32"), list[1,145,512,], )
paddle.Tensor.reshape(Tensor([1, 146, 0, 64],"float32"), list[1,146,512,], )
paddle.Tensor.reshape(Tensor([1, 146, 8, 0],"float32"), list[1,146,512,], )
paddle.Tensor.reshape(Tensor([1, 146200, 0],"float32"), tuple(1,430,340,2,), )
paddle.Tensor.reshape(Tensor([1, 147, 0, 64],"float32"), list[1,147,512,], )
paddle.Tensor.reshape(Tensor([1, 147, 8, 0],"float32"), list[1,147,512,], )
paddle.Tensor.reshape(Tensor([1, 148, 0, 64],"float32"), list[1,148,512,], )
paddle.Tensor.reshape(Tensor([1, 148, 8, 0],"float32"), list[1,148,512,], )
paddle.Tensor.reshape(Tensor([1, 149, 0, 64],"float32"), list[1,149,512,], )
paddle.Tensor.reshape(Tensor([1, 149, 8, 0],"float32"), list[1,149,512,], )
paddle.Tensor.reshape(Tensor([1, 15, 0, 1],"float32"), list[1,3,5,9,5,1,], )
paddle.Tensor.reshape(Tensor([1, 15, 0, 4],"float32"), list[-1,225,4,], )
paddle.Tensor.reshape(Tensor([1, 15, 0, 64],"float32"), list[1,15,512,], )
paddle.Tensor.reshape(Tensor([1, 15, 15, 0],"float32"), list[-1,225,4,], )
paddle.Tensor.reshape(Tensor([1, 15, 45, 0],"float32"), list[1,3,5,9,5,1,], )
paddle.Tensor.reshape(Tensor([1, 15, 8, 0],"float32"), list[1,15,512,], )
paddle.Tensor.reshape(Tensor([1, 150, 0, 64],"float32"), list[1,150,512,], )
paddle.Tensor.reshape(Tensor([1, 150, 8, 0],"float32"), list[1,150,512,], )
paddle.Tensor.reshape(Tensor([1, 1500, 0],"float32"), list[1,1500,12,-1,], )
paddle.Tensor.reshape(Tensor([1, 1500, 0],"float32"), list[1,1500,16,-1,], )
paddle.Tensor.reshape(Tensor([1, 1500, 0],"float32"), list[1,1500,20,-1,], )
paddle.Tensor.reshape(Tensor([1, 1500, 0],"float32"), list[1,1500,6,-1,], )
paddle.Tensor.reshape(Tensor([1, 1500, 0],"float32"), list[1,1500,8,-1,], )
paddle.Tensor.reshape(Tensor([1, 150164, 0],"float32"), tuple(1,434,346,2,), )
paddle.Tensor.reshape(Tensor([1, 151, 0, 64],"float32"), list[1,151,512,], )
paddle.Tensor.reshape(Tensor([1, 151, 8, 0],"float32"), list[1,151,512,], )
paddle.Tensor.reshape(Tensor([1, 152, 0, 64],"float32"), list[1,152,512,], )
paddle.Tensor.reshape(Tensor([1, 152, 8, 0],"float32"), list[1,152,512,], )
paddle.Tensor.reshape(Tensor([1, 153, 0, 64],"float32"), list[1,153,512,], )
paddle.Tensor.reshape(Tensor([1, 153, 8, 0],"float32"), list[1,153,512,], )
paddle.Tensor.reshape(Tensor([1, 153088, 0],"float32"), tuple(1,368,416,2,), )
paddle.Tensor.reshape(Tensor([1, 154, 0, 64],"float32"), list[1,154,512,], )
paddle.Tensor.reshape(Tensor([1, 154, 8, 0],"float32"), list[1,154,512,], )
paddle.Tensor.reshape(Tensor([1, 155, 0, 64],"float32"), list[1,155,512,], )
paddle.Tensor.reshape(Tensor([1, 155, 8, 0],"float32"), list[1,155,512,], )
paddle.Tensor.reshape(Tensor([1, 156, 0, 64],"float32"), list[1,156,512,], )
paddle.Tensor.reshape(Tensor([1, 156, 8, 0],"float32"), list[1,156,512,], )
paddle.Tensor.reshape(Tensor([1, 157, 0, 32],"float32"), list[1,157,256,], )
paddle.Tensor.reshape(Tensor([1, 157, 0, 64],"float32"), list[1,157,512,], )
paddle.Tensor.reshape(Tensor([1, 157, 0],"float32"), list[1,157,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 157, 8, 0],"float32"), list[1,157,256,], )
paddle.Tensor.reshape(Tensor([1, 157, 8, 0],"float32"), list[1,157,512,], )
paddle.Tensor.reshape(Tensor([1, 158, 0, 64],"float32"), list[1,158,512,], )
paddle.Tensor.reshape(Tensor([1, 158, 8, 0],"float32"), list[1,158,512,], )
paddle.Tensor.reshape(Tensor([1, 15872, 0, 32],"float32"), list[1,15872,32,], )
paddle.Tensor.reshape(Tensor([1, 15872, 0, 64],"float32"), list[1,15872,64,], )
paddle.Tensor.reshape(Tensor([1, 15872, 0],"float32"), list[1,124,128,32,], )
paddle.Tensor.reshape(Tensor([1, 15872, 0],"float32"), list[1,124,128,64,], )
paddle.Tensor.reshape(Tensor([1, 15872, 0],"float32"), list[1,15872,1,32,], )
paddle.Tensor.reshape(Tensor([1, 15872, 0],"float32"), list[1,15872,1,64,], )
paddle.Tensor.reshape(Tensor([1, 15872, 1, 0],"float32"), list[1,15872,32,], )
paddle.Tensor.reshape(Tensor([1, 15872, 1, 0],"float32"), list[1,15872,64,], )
paddle.Tensor.reshape(Tensor([1, 159, 0, 64],"float32"), list[1,159,512,], )
paddle.Tensor.reshape(Tensor([1, 159, 8, 0],"float32"), list[1,159,512,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 1],"float32"), list[1,4,4,4,4,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 10, 768],"float16"), list[1,16,7,10,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 10, 768],"float32"), list[1,16,7,10,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 12, 12, 1],"float32"), list[-1,12,12,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 12, 12, 192],"float32"), list[-1,12,12,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 12, 12, 192],"float32"), list[-1,192,144,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 1],"float32"), list[1,2,8,1,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 1],"float32"), list[1,2,8,2,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 1],"float32"), list[1,2,8,3,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 384],"float16"), list[1,16,14,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 384],"float16"), list[1,16,15,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 384],"float16"), list[1,16,16,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 384],"float16"), list[1,16,18,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 384],"float16"), list[1,2,8,2,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 384],"float16"), list[1,2,8,3,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 384],"float32"), list[1,16,14,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 384],"float32"), list[1,16,15,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 384],"float32"), list[1,16,16,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 384],"float32"), list[1,16,18,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 384],"float32"), list[1,2,8,2,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 384],"float32"), list[1,2,8,3,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 768],"float16"), list[1,2,8,1,7,2,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 14, 768],"float32"), list[1,2,8,1,7,2,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 15, 384],"float16"), list[1,16,14,15,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 15, 384],"float32"), list[1,16,14,15,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 16, 384],"float16"), list[1,16,14,16,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 16, 384],"float32"), list[1,16,14,16,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 17, 384],"float16"), list[1,16,14,17,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 17, 384],"float32"), list[1,16,14,17,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 18, 384],"float16"), list[1,16,14,18,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 18, 384],"float32"), list[1,16,14,18,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 19, 384],"float16"), list[1,16,14,19,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 19, 384],"float32"), list[1,16,14,19,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 21, 1],"float32"), list[1,2,8,2,7,3,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 21, 384],"float16"), list[1,2,8,2,7,3,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 21, 384],"float32"), list[1,2,8,2,7,3,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 1],"float32"), list[1,2,8,4,7,4,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 1],"float32"), list[1,2,8,5,7,4,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float16"), list[1,16,28,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float16"), list[1,16,29,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float16"), list[1,16,30,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float16"), list[1,16,31,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float16"), list[1,16,32,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float16"), list[1,16,35,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float16"), list[1,2,8,4,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float16"), list[1,2,8,5,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float32"), list[1,16,28,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float32"), list[1,16,29,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float32"), list[1,16,30,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float32"), list[1,16,31,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float32"), list[1,16,32,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float32"), list[1,16,35,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float32"), list[1,2,8,4,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 28, 192],"float32"), list[1,2,8,5,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 29, 192],"float16"), list[1,16,28,29,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 29, 192],"float32"), list[1,16,28,29,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 30, 192],"float16"), list[1,16,28,30,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 30, 192],"float32"), list[1,16,28,30,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 32, 192],"float16"), list[1,16,28,32,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 32, 192],"float32"), list[1,16,28,32,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 32, 2],"float32"), list[1,16,256,-1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 33, 192],"float16"), list[1,16,28,33,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 33, 192],"float32"), list[1,16,28,33,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 34, 192],"float16"), list[1,16,28,34,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 34, 192],"float32"), list[1,16,28,34,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 35, 1],"float32"), list[1,2,8,4,7,5,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 35, 192],"float16"), list[1,2,8,4,7,5,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 35, 192],"float32"), list[1,2,8,4,7,5,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 36, 192],"float16"), list[1,16,28,36,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 36, 192],"float32"), list[1,16,28,36,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 38, 192],"float16"), list[1,16,28,38,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 38, 192],"float32"), list[1,16,28,38,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 4],"float32"), list[-1,256,4,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 42, 1],"float32"), list[1,2,8,4,7,6,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 42, 192],"float16"), list[1,2,8,4,7,6,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 42, 192],"float32"), list[1,2,8,4,7,6,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 56, 1],"float32"), list[1,2,8,10,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 56, 1],"float32"), list[1,2,8,8,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 56, 1],"float32"), list[1,2,8,9,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 56, 96],"float32"), list[1,16,56,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 56, 96],"float32"), list[1,16,57,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 56, 96],"float32"), list[1,16,59,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 56, 96],"float32"), list[1,16,60,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 56, 96],"float32"), list[1,16,61,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 56, 96],"float32"), list[1,16,62,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 56, 96],"float32"), list[1,16,64,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 56, 96],"float32"), list[1,16,70,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 56, 96],"float32"), list[1,2,8,10,7,8,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 56, 96],"float32"), list[1,2,8,8,7,8,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 56, 96],"float32"), list[1,2,8,9,7,8,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 58, 96],"float32"), list[1,16,56,58,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 59, 96],"float32"), list[1,16,56,59,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 60, 96],"float32"), list[1,16,56,60,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 63, 1],"float32"), list[1,2,8,8,7,9,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 63, 96],"float32"), list[1,2,8,8,7,9,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 64, 96],"float32"), list[1,16,56,64,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 64],"float32"), list[1,16,256,-1,2,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 64],"float32"), list[1,16,512,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 65, 96],"float32"), list[1,16,56,65,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 67, 96],"float32"), list[1,16,56,67,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 68, 96],"float32"), list[1,16,56,68,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 7, 1],"float32"), list[1,2,8,1,7,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 7, 1],"float32"), list[1,2,8,2,7,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 7, 768],"float16"), list[1,16,7,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 7, 768],"float16"), list[1,16,8,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 7, 768],"float16"), list[1,16,9,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 7, 768],"float16"), list[1,2,8,1,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 7, 768],"float16"), list[1,2,8,2,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 7, 768],"float32"), list[1,16,7,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 7, 768],"float32"), list[1,16,8,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 7, 768],"float32"), list[1,16,9,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 7, 768],"float32"), list[1,2,8,1,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 7, 768],"float32"), list[1,2,8,2,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 70, 1],"float32"), list[1,2,8,8,7,10,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 70, 96],"float32"), list[1,2,8,8,7,10,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 71, 96],"float32"), list[1,16,56,71,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 75, 96],"float32"), list[1,16,56,75,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 77, 1],"float32"), list[1,2,8,8,7,11,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 77, 96],"float32"), list[1,2,8,8,7,11,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 8, 768],"float16"), list[1,16,7,8,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 8, 768],"float32"), list[1,16,7,8,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 9, 768],"float16"), list[1,16,7,9,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0, 9, 768],"float32"), list[1,16,7,9,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 0],"float32"), tuple(1,4,4,2,), )
paddle.Tensor.reshape(Tensor([1, 16, 12, 0, 12, 1],"float32"), list[-1,12,12,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 12, 0, 12, 192],"float32"), list[-1,12,12,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 12, 0, 12, 192],"float32"), list[-1,192,144,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 12, 12, 0, 1],"float32"), list[-1,12,12,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 12, 12, 0, 192],"float32"), list[-1,12,12,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 12, 12, 0, 192],"float32"), list[-1,192,144,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 12, 12, 12, 0],"float32"), list[-1,12,12,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 12, 12, 12, 0],"float32"), list[-1,12,12,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 12, 12, 12, 0],"float32"), list[-1,192,144,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 1],"float32"), list[1,2,8,2,7,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 1],"float32"), list[1,2,8,2,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 1],"float32"), list[1,2,8,2,7,3,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float16"), list[1,16,14,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float16"), list[1,16,14,15,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float16"), list[1,16,14,16,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float16"), list[1,16,14,17,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float16"), list[1,16,14,18,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float16"), list[1,16,14,19,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float16"), list[1,2,8,2,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float16"), list[1,2,8,2,7,3,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float32"), list[1,16,14,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float32"), list[1,16,14,15,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float32"), list[1,16,14,16,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float32"), list[1,16,14,17,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float32"), list[1,16,14,18,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float32"), list[1,16,14,19,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float32"), list[1,2,8,2,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 384],"float32"), list[1,2,8,2,7,3,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 768],"float16"), list[1,2,8,2,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 0, 768],"float32"), list[1,2,8,2,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 14, 0],"float16"), list[1,16,14,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 14, 0],"float16"), list[1,2,8,2,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 14, 0],"float32"), list[1,16,14,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 14, 0],"float32"), list[1,2,8,2,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 14, 0],"float32"), list[1,2,8,2,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 15, 0],"float16"), list[1,16,14,15,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 15, 0],"float32"), list[1,16,14,15,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 16, 0],"float16"), list[1,16,14,16,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 16, 0],"float32"), list[1,16,14,16,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 17, 0],"float16"), list[1,16,14,17,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 17, 0],"float32"), list[1,16,14,17,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 18, 0],"float16"), list[1,16,14,18,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 18, 0],"float32"), list[1,16,14,18,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 19, 0],"float16"), list[1,16,14,19,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 19, 0],"float32"), list[1,16,14,19,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 21, 0],"float16"), list[1,2,8,2,7,3,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 21, 0],"float32"), list[1,2,8,2,7,3,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 21, 0],"float32"), list[1,2,8,2,7,3,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 7, 0],"float16"), list[1,2,8,2,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 7, 0],"float32"), list[1,2,8,2,7,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 14, 7, 0],"float32"), list[1,2,8,2,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 15, 0, 384],"float16"), list[1,16,15,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 15, 0, 384],"float32"), list[1,16,15,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 15, 14, 0],"float16"), list[1,16,15,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 15, 14, 0],"float32"), list[1,16,15,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 16, 0, 384],"float16"), list[1,16,16,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 16, 0, 384],"float32"), list[1,16,16,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 16, 0],"float32"), list[-1,256,4,], )
paddle.Tensor.reshape(Tensor([1, 16, 16, 0],"float32"), list[1,4,4,4,4,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 16, 14, 0],"float16"), list[1,16,16,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 16, 14, 0],"float32"), list[1,16,16,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 18, 0, 384],"float16"), list[1,16,18,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 18, 0, 384],"float32"), list[1,16,18,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 18, 14, 0],"float16"), list[1,16,18,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 18, 14, 0],"float32"), list[1,16,18,14,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 21, 0, 1],"float32"), list[1,2,8,3,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 21, 0, 384],"float16"), list[1,2,8,3,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 21, 0, 384],"float32"), list[1,2,8,3,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 21, 14, 0],"float16"), list[1,2,8,3,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 21, 14, 0],"float32"), list[1,2,8,3,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 21, 14, 0],"float32"), list[1,2,8,3,7,2,7,384,], )
paddle.Tensor.reshape(Tensor([1, 16, 256, 0, 2],"float32"), list[1,16,256,-1,], )
paddle.Tensor.reshape(Tensor([1, 16, 256, 0],"float32"), list[1,16,256,-1,2,], )
paddle.Tensor.reshape(Tensor([1, 16, 256, 32, 0],"float32"), list[1,16,256,-1,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 1],"float32"), list[1,2,8,4,7,4,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 1],"float32"), list[1,2,8,4,7,5,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 1],"float32"), list[1,2,8,4,7,6,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float16"), list[1,16,28,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float16"), list[1,16,28,29,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float16"), list[1,16,28,30,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float16"), list[1,16,28,32,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float16"), list[1,16,28,33,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float16"), list[1,16,28,34,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float16"), list[1,16,28,36,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float16"), list[1,16,28,38,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float16"), list[1,2,8,4,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float16"), list[1,2,8,4,7,5,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float16"), list[1,2,8,4,7,6,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float32"), list[1,16,28,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float32"), list[1,16,28,29,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float32"), list[1,16,28,30,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float32"), list[1,16,28,32,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float32"), list[1,16,28,33,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float32"), list[1,16,28,34,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float32"), list[1,16,28,36,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float32"), list[1,16,28,38,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float32"), list[1,2,8,4,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float32"), list[1,2,8,4,7,5,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 0, 192],"float32"), list[1,2,8,4,7,6,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 28, 0],"float16"), list[1,16,28,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 28, 0],"float16"), list[1,2,8,4,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 28, 0],"float32"), list[1,16,28,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 28, 0],"float32"), list[1,2,8,4,7,4,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 28, 0],"float32"), list[1,2,8,4,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 29, 0],"float16"), list[1,16,28,29,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 29, 0],"float32"), list[1,16,28,29,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 30, 0],"float16"), list[1,16,28,30,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 30, 0],"float32"), list[1,16,28,30,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 32, 0],"float16"), list[1,16,28,32,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 32, 0],"float32"), list[1,16,28,32,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 33, 0],"float16"), list[1,16,28,33,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 33, 0],"float32"), list[1,16,28,33,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 34, 0],"float16"), list[1,16,28,34,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 34, 0],"float32"), list[1,16,28,34,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 35, 0],"float16"), list[1,2,8,4,7,5,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 35, 0],"float32"), list[1,2,8,4,7,5,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 35, 0],"float32"), list[1,2,8,4,7,5,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 36, 0],"float16"), list[1,16,28,36,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 36, 0],"float32"), list[1,16,28,36,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 38, 0],"float16"), list[1,16,28,38,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 38, 0],"float32"), list[1,16,28,38,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 42, 0],"float16"), list[1,2,8,4,7,6,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 42, 0],"float32"), list[1,2,8,4,7,6,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 42, 0],"float32"), list[1,2,8,4,7,6,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 29, 0, 192],"float16"), list[1,16,29,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 29, 0, 192],"float32"), list[1,16,29,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 29, 28, 0],"float16"), list[1,16,29,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 29, 28, 0],"float32"), list[1,16,29,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 30, 0, 192],"float16"), list[1,16,30,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 30, 0, 192],"float32"), list[1,16,30,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 30, 28, 0],"float16"), list[1,16,30,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 30, 28, 0],"float32"), list[1,16,30,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 31, 0, 192],"float16"), list[1,16,31,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 31, 0, 192],"float32"), list[1,16,31,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 31, 28, 0],"float16"), list[1,16,31,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 31, 28, 0],"float32"), list[1,16,31,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 32, 0, 192],"float16"), list[1,16,32,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 32, 0, 192],"float32"), list[1,16,32,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 32, 28, 0],"float16"), list[1,16,32,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 32, 28, 0],"float32"), list[1,16,32,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 35, 0, 1],"float32"), list[1,2,8,5,7,4,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 35, 0, 192],"float16"), list[1,16,35,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 35, 0, 192],"float16"), list[1,2,8,5,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 35, 0, 192],"float32"), list[1,16,35,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 35, 0, 192],"float32"), list[1,2,8,5,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 35, 28, 0],"float16"), list[1,16,35,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 35, 28, 0],"float16"), list[1,2,8,5,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 35, 28, 0],"float32"), list[1,16,35,28,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 35, 28, 0],"float32"), list[1,2,8,5,7,4,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 35, 28, 0],"float32"), list[1,2,8,5,7,4,7,192,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 1],"float32"), list[1,2,8,8,7,10,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 1],"float32"), list[1,2,8,8,7,11,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 1],"float32"), list[1,2,8,8,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 1],"float32"), list[1,2,8,8,7,9,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 96],"float32"), list[1,16,56,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 96],"float32"), list[1,16,56,58,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 96],"float32"), list[1,16,56,59,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 96],"float32"), list[1,16,56,60,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 96],"float32"), list[1,16,56,64,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 96],"float32"), list[1,16,56,65,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 96],"float32"), list[1,16,56,67,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 96],"float32"), list[1,16,56,68,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 96],"float32"), list[1,16,56,71,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 96],"float32"), list[1,16,56,75,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 96],"float32"), list[1,2,8,8,7,10,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 96],"float32"), list[1,2,8,8,7,11,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 96],"float32"), list[1,2,8,8,7,8,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 0, 96],"float32"), list[1,2,8,8,7,9,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 56, 0],"float32"), list[1,16,56,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 56, 0],"float32"), list[1,2,8,8,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 56, 0],"float32"), list[1,2,8,8,7,8,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 58, 0],"float32"), list[1,16,56,58,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 59, 0],"float32"), list[1,16,56,59,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 60, 0],"float32"), list[1,16,56,60,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 63, 0],"float32"), list[1,2,8,8,7,9,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 63, 0],"float32"), list[1,2,8,8,7,9,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 64, 0],"float32"), list[1,16,56,64,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 65, 0],"float32"), list[1,16,56,65,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 67, 0],"float32"), list[1,16,56,67,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 68, 0],"float32"), list[1,16,56,68,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 70, 0],"float32"), list[1,2,8,8,7,10,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 70, 0],"float32"), list[1,2,8,8,7,10,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 71, 0],"float32"), list[1,16,56,71,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 75, 0],"float32"), list[1,16,56,75,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 77, 0],"float32"), list[1,2,8,8,7,11,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 56, 77, 0],"float32"), list[1,2,8,8,7,11,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 57, 0, 96],"float32"), list[1,16,57,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 57, 56, 0],"float32"), list[1,16,57,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 59, 0, 96],"float32"), list[1,16,59,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 59, 56, 0],"float32"), list[1,16,59,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 60, 0, 96],"float32"), list[1,16,60,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 60, 56, 0],"float32"), list[1,16,60,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 61, 0, 96],"float32"), list[1,16,61,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 61, 56, 0],"float32"), list[1,16,61,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 62, 0, 96],"float32"), list[1,16,62,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 62, 56, 0],"float32"), list[1,16,62,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 63, 0, 1],"float32"), list[1,2,8,9,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 63, 0, 96],"float32"), list[1,2,8,9,7,8,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 63, 56, 0],"float32"), list[1,2,8,9,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 63, 56, 0],"float32"), list[1,2,8,9,7,8,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 64, 0, 96],"float32"), list[1,16,64,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 64, 56, 0],"float32"), list[1,16,64,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 0, 1],"float32"), list[1,2,8,1,7,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 0, 1],"float32"), list[1,2,8,1,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 0, 768],"float16"), list[1,16,7,10,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 0, 768],"float16"), list[1,16,7,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 0, 768],"float16"), list[1,16,7,8,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 0, 768],"float16"), list[1,16,7,9,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 0, 768],"float16"), list[1,2,8,1,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 0, 768],"float16"), list[1,2,8,1,7,2,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 0, 768],"float32"), list[1,16,7,10,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 0, 768],"float32"), list[1,16,7,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 0, 768],"float32"), list[1,16,7,8,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 0, 768],"float32"), list[1,16,7,9,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 0, 768],"float32"), list[1,2,8,1,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 0, 768],"float32"), list[1,2,8,1,7,2,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 10, 0],"float16"), list[1,16,7,10,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 10, 0],"float32"), list[1,16,7,10,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 14, 0],"float16"), list[1,2,8,1,7,2,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 14, 0],"float32"), list[1,2,8,1,7,2,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 14, 0],"float32"), list[1,2,8,1,7,2,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 7, 0],"float16"), list[1,16,7,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 7, 0],"float16"), list[1,2,8,1,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 7, 0],"float32"), list[1,16,7,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 7, 0],"float32"), list[1,2,8,1,7,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 7, 0],"float32"), list[1,2,8,1,7,1,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 8, 0],"float16"), list[1,16,7,8,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 8, 0],"float32"), list[1,16,7,8,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 9, 0],"float16"), list[1,16,7,9,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 7, 9, 0],"float32"), list[1,16,7,9,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 70, 0, 1],"float32"), list[1,2,8,10,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 70, 0, 96],"float32"), list[1,16,70,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 70, 0, 96],"float32"), list[1,2,8,10,7,8,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 70, 56, 0],"float32"), list[1,16,70,56,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 70, 56, 0],"float32"), list[1,2,8,10,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 16, 70, 56, 0],"float32"), list[1,2,8,10,7,8,7,96,], )
paddle.Tensor.reshape(Tensor([1, 16, 8, 0, 768],"float16"), list[1,16,8,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 8, 0, 768],"float32"), list[1,16,8,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 8, 0],"float32"), list[1,16,512,], )
paddle.Tensor.reshape(Tensor([1, 16, 8, 7, 0],"float16"), list[1,16,8,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 8, 7, 0],"float32"), list[1,16,8,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 9, 0, 768],"float16"), list[1,16,9,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 9, 0, 768],"float32"), list[1,16,9,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 9, 7, 0],"float16"), list[1,16,9,7,768,], )
paddle.Tensor.reshape(Tensor([1, 16, 9, 7, 0],"float32"), list[1,16,9,7,768,], )
paddle.Tensor.reshape(Tensor([1, 160, 0, 16],"float32"), list[1,160,-1,], )
paddle.Tensor.reshape(Tensor([1, 160, 0, 64],"float32"), list[1,160,512,], )
paddle.Tensor.reshape(Tensor([1, 160, 0, 96],"float32"), list[-1,19200,96,], )
paddle.Tensor.reshape(Tensor([1, 160, 0],"float32"), list[1,160,31,32,], )
paddle.Tensor.reshape(Tensor([1, 160, 0],"float32"), list[1,160,32,32,], )
paddle.Tensor.reshape(Tensor([1, 160, 0],"float32"), list[1,160,64,64,], )
paddle.Tensor.reshape(Tensor([1, 160, 120, 0],"float32"), list[-1,19200,96,], )
paddle.Tensor.reshape(Tensor([1, 160, 15, 0],"float32"), list[1,160,-1,], )
paddle.Tensor.reshape(Tensor([1, 160, 16, 0],"float32"), list[1,160,-1,], )
paddle.Tensor.reshape(Tensor([1, 160, 8, 0],"float32"), list[1,160,512,], )
paddle.Tensor.reshape(Tensor([1, 161, 0, 1],"float32"), list[-1,23,7,18,7,1,], )
paddle.Tensor.reshape(Tensor([1, 161, 0, 64],"float32"), list[1,161,512,], )
paddle.Tensor.reshape(Tensor([1, 161, 0, 96],"float32"), list[-1,23,7,18,7,96,], )
paddle.Tensor.reshape(Tensor([1, 161, 126, 0],"float32"), list[-1,23,7,18,7,1,], )
paddle.Tensor.reshape(Tensor([1, 161, 126, 0],"float32"), list[-1,23,7,18,7,96,], )
paddle.Tensor.reshape(Tensor([1, 161, 8, 0],"float32"), list[1,161,512,], )
paddle.Tensor.reshape(Tensor([1, 162, 0, 64],"float32"), list[1,162,512,], )
paddle.Tensor.reshape(Tensor([1, 162, 8, 0],"float32"), list[1,162,512,], )
paddle.Tensor.reshape(Tensor([1, 163, 0, 64],"float32"), list[1,163,512,], )
paddle.Tensor.reshape(Tensor([1, 163, 8, 0],"float32"), list[1,163,512,], )
paddle.Tensor.reshape(Tensor([1, 16384, 0, 32],"float32"), list[1,16384,32,], )
paddle.Tensor.reshape(Tensor([1, 16384, 0, 32],"float32"), list[1,16384,64,], )
paddle.Tensor.reshape(Tensor([1, 16384, 0, 64],"float32"), list[1,16384,64,], )
paddle.Tensor.reshape(Tensor([1, 16384, 0],"float32"), list[1,128,128,32,], )
paddle.Tensor.reshape(Tensor([1, 16384, 0],"float32"), list[1,128,128,64,], )
paddle.Tensor.reshape(Tensor([1, 16384, 0],"float32"), list[1,16384,1,32,], )
paddle.Tensor.reshape(Tensor([1, 16384, 0],"float32"), list[1,16384,1,64,], )
paddle.Tensor.reshape(Tensor([1, 16384, 0],"float32"), list[1,16384,2,32,], )
paddle.Tensor.reshape(Tensor([1, 16384, 1, 0],"float32"), list[1,16384,32,], )
paddle.Tensor.reshape(Tensor([1, 16384, 1, 0],"float32"), list[1,16384,64,], )
paddle.Tensor.reshape(Tensor([1, 16384, 2, 0],"float32"), list[1,16384,64,], )
paddle.Tensor.reshape(Tensor([1, 164, 0, 64],"float32"), list[1,164,512,], )
paddle.Tensor.reshape(Tensor([1, 164, 8, 0],"float32"), list[1,164,512,], )
paddle.Tensor.reshape(Tensor([1, 165, 0, 64],"float32"), list[1,165,512,], )
paddle.Tensor.reshape(Tensor([1, 165, 8, 0],"float32"), list[1,165,512,], )
paddle.Tensor.reshape(Tensor([1, 166, 0, 64],"float32"), list[1,166,512,], )
paddle.Tensor.reshape(Tensor([1, 166, 8, 0],"float32"), list[1,166,512,], )
paddle.Tensor.reshape(Tensor([1, 167, 0, 64],"float32"), list[1,167,512,], )
paddle.Tensor.reshape(Tensor([1, 167, 8, 0],"float32"), list[1,167,512,], )
paddle.Tensor.reshape(Tensor([1, 168, 0, 64],"float32"), list[1,168,512,], )
paddle.Tensor.reshape(Tensor([1, 168, 8, 0],"float32"), list[1,168,512,], )
paddle.Tensor.reshape(Tensor([1, 169, 0, 32],"float32"), list[1,169,256,], )
paddle.Tensor.reshape(Tensor([1, 169, 0, 64],"float32"), list[1,169,512,], )
paddle.Tensor.reshape(Tensor([1, 169, 0],"float32"), list[1,169,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 169, 8, 0],"float32"), list[1,169,256,], )
paddle.Tensor.reshape(Tensor([1, 169, 8, 0],"float32"), list[1,169,512,], )
paddle.Tensor.reshape(Tensor([1, 17, 0, 4],"float32"), list[-1,289,4,], )
paddle.Tensor.reshape(Tensor([1, 17, 0, 64],"float32"), list[1,17,512,], )
paddle.Tensor.reshape(Tensor([1, 17, 0, 8],"float32"), list[1,17,64,], )
paddle.Tensor.reshape(Tensor([1, 17, 17, 0],"float32"), list[-1,289,4,], )
paddle.Tensor.reshape(Tensor([1, 17, 8, 0],"float32"), list[1,17,512,], )
paddle.Tensor.reshape(Tensor([1, 17, 8, 0],"float32"), list[1,17,64,], )
paddle.Tensor.reshape(Tensor([1, 170, 0, 64],"float32"), list[1,170,512,], )
paddle.Tensor.reshape(Tensor([1, 170, 8, 0],"float32"), list[1,170,512,], )
paddle.Tensor.reshape(Tensor([1, 170476, 0],"float32"), tuple(1,391,436,2,), )
paddle.Tensor.reshape(Tensor([1, 171, 0, 64],"float32"), list[1,171,512,], )
paddle.Tensor.reshape(Tensor([1, 171, 8, 0],"float32"), list[1,171,512,], )
paddle.Tensor.reshape(Tensor([1, 172, 0, 64],"float32"), list[1,172,512,], )
paddle.Tensor.reshape(Tensor([1, 172, 8, 0],"float32"), list[1,172,512,], )
paddle.Tensor.reshape(Tensor([1, 1728, 0],"float32"), list[-1,48,36,768,], )
paddle.Tensor.reshape(Tensor([1, 1728, 0],"float32"), tuple(-1,48,36,768,), )
paddle.Tensor.reshape(Tensor([1, 173, 0, 64],"float32"), list[1,173,512,], )
paddle.Tensor.reshape(Tensor([1, 173, 8, 0],"float32"), list[1,173,512,], )
paddle.Tensor.reshape(Tensor([1, 174, 0, 64],"float32"), list[1,174,512,], )
paddle.Tensor.reshape(Tensor([1, 174, 8, 0],"float32"), list[1,174,512,], )
paddle.Tensor.reshape(Tensor([1, 175, 0, 64],"float32"), list[1,175,512,], )
paddle.Tensor.reshape(Tensor([1, 175, 8, 0],"float32"), list[1,175,512,], )
paddle.Tensor.reshape(Tensor([1, 176, 0, 64],"float32"), list[1,176,512,], )
paddle.Tensor.reshape(Tensor([1, 176, 8, 0],"float32"), list[1,176,512,], )
paddle.Tensor.reshape(Tensor([1, 177, 0, 64],"float32"), list[1,177,512,], )
paddle.Tensor.reshape(Tensor([1, 177, 8, 0],"float32"), list[1,177,512,], )
paddle.Tensor.reshape(Tensor([1, 178, 0, 64],"float32"), list[1,178,512,], )
paddle.Tensor.reshape(Tensor([1, 178, 8, 0],"float32"), list[1,178,512,], )
paddle.Tensor.reshape(Tensor([1, 179, 0, 64],"float32"), list[1,179,512,], )
paddle.Tensor.reshape(Tensor([1, 179, 8, 0],"float32"), list[1,179,512,], )
paddle.Tensor.reshape(Tensor([1, 179876, 0],"float32"), tuple(1,466,386,2,), )
paddle.Tensor.reshape(Tensor([1, 18, 0, 20],"float32"), list[1,18,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 18, 0, 4],"float32"), list[-1,324,4,], )
paddle.Tensor.reshape(Tensor([1, 18, 0, 64],"float32"), list[1,18,512,], )
paddle.Tensor.reshape(Tensor([1, 18, 0],"float32"), list[1,18,8,20,], )
paddle.Tensor.reshape(Tensor([1, 18, 0],"float32"), list[1,18,8,5,4,2,], )
paddle.Tensor.reshape(Tensor([1, 18, 0],"float32"), tuple(-1,4,), )
paddle.Tensor.reshape(Tensor([1, 18, 0],"float32"), tuple(18,4,), )
paddle.Tensor.reshape(Tensor([1, 18, 18, 0],"float32"), list[-1,324,4,], )
paddle.Tensor.reshape(Tensor([1, 18, 8, 0],"float32"), list[1,18,512,], )
paddle.Tensor.reshape(Tensor([1, 18, 8, 0],"float32"), list[1,18,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 180, 0, 64],"float32"), list[1,180,512,], )
paddle.Tensor.reshape(Tensor([1, 180, 8, 0],"float32"), list[1,180,512,], )
paddle.Tensor.reshape(Tensor([1, 181, 0, 64],"float32"), list[1,181,512,], )
paddle.Tensor.reshape(Tensor([1, 181, 8, 0],"float32"), list[1,181,512,], )
paddle.Tensor.reshape(Tensor([1, 182, 0, 64],"float32"), list[1,182,512,], )
paddle.Tensor.reshape(Tensor([1, 182, 8, 0],"float32"), list[1,182,512,], )
paddle.Tensor.reshape(Tensor([1, 183, 0, 64],"float32"), list[1,183,512,], )
paddle.Tensor.reshape(Tensor([1, 183, 8, 0],"float32"), list[1,183,512,], )
paddle.Tensor.reshape(Tensor([1, 184, 0, 64],"float32"), list[1,184,512,], )
paddle.Tensor.reshape(Tensor([1, 184, 8, 0],"float32"), list[1,184,512,], )
paddle.Tensor.reshape(Tensor([1, 185, 0, 64],"float32"), list[1,185,512,], )
paddle.Tensor.reshape(Tensor([1, 185, 8, 0],"float32"), list[1,185,512,], )
paddle.Tensor.reshape(Tensor([1, 186, 0, 64],"float32"), list[1,186,512,], )
paddle.Tensor.reshape(Tensor([1, 186, 8, 0],"float32"), list[1,186,512,], )
paddle.Tensor.reshape(Tensor([1, 187, 0, 64],"float32"), list[1,187,512,], )
paddle.Tensor.reshape(Tensor([1, 187, 8, 0],"float32"), list[1,187,512,], )
paddle.Tensor.reshape(Tensor([1, 188, 0, 1, 2, 7],"float32"), list[-1,7,], )
paddle.Tensor.reshape(Tensor([1, 188, 0, 3, 2, 7],"float32"), list[1,-1,7,], )
paddle.Tensor.reshape(Tensor([1, 188, 0, 6, 7],"float32"), list[-1,7,], )
paddle.Tensor.reshape(Tensor([1, 188, 0, 64],"float32"), list[1,188,512,], )
paddle.Tensor.reshape(Tensor([1, 188, 140, 0, 2, 7],"float32"), list[1,-1,7,], )
paddle.Tensor.reshape(Tensor([1, 188, 140, 0, 2, 7],"float32"), list[-1,7,], )
paddle.Tensor.reshape(Tensor([1, 188, 140, 0, 7],"float32"), list[-1,7,], )
paddle.Tensor.reshape(Tensor([1, 188, 140, 1, 0, 7],"float32"), list[-1,7,], )
paddle.Tensor.reshape(Tensor([1, 188, 140, 1, 2, 0],"float32"), list[-1,7,], )
paddle.Tensor.reshape(Tensor([1, 188, 140, 3, 0, 7],"float32"), list[1,-1,7,], )
paddle.Tensor.reshape(Tensor([1, 188, 140, 3, 2, 0],"float32"), list[1,-1,7,], )
paddle.Tensor.reshape(Tensor([1, 188, 140, 6, 0],"float32"), list[-1,7,], )
paddle.Tensor.reshape(Tensor([1, 188, 8, 0],"float32"), list[1,188,512,], )
paddle.Tensor.reshape(Tensor([1, 189, 0, 64],"float32"), list[1,189,512,], )
paddle.Tensor.reshape(Tensor([1, 189, 8, 0],"float32"), list[1,189,512,], )
paddle.Tensor.reshape(Tensor([1, 19, 0, 64],"float32"), list[1,19,512,], )
paddle.Tensor.reshape(Tensor([1, 19, 8, 0],"float32"), list[1,19,512,], )
paddle.Tensor.reshape(Tensor([1, 190, 0, 64],"float32"), list[1,190,512,], )
paddle.Tensor.reshape(Tensor([1, 190, 8, 0],"float32"), list[1,190,512,], )
paddle.Tensor.reshape(Tensor([1, 191, 0, 64],"float32"), list[1,191,512,], )
paddle.Tensor.reshape(Tensor([1, 191, 8, 0],"float32"), list[1,191,512,], )
paddle.Tensor.reshape(Tensor([1, 191277, 0],"float32"), tuple(1,477,401,2,), )
paddle.Tensor.reshape(Tensor([1, 192, 0, 1],"float32"), list[-1,16,12,12,12,1,], )
paddle.Tensor.reshape(Tensor([1, 192, 0, 144, 144],"float32"), list[-1,6,144,144,], )
paddle.Tensor.reshape(Tensor([1, 192, 0, 192],"float32"), list[-1,16,12,12,12,192,], )
paddle.Tensor.reshape(Tensor([1, 192, 0, 192],"float32"), list[-1,27648,192,], )
paddle.Tensor.reshape(Tensor([1, 192, 0, 64],"float32"), list[1,192,512,], )
paddle.Tensor.reshape(Tensor([1, 192, 0],"float32"), list[-1,192,192,144,], )
paddle.Tensor.reshape(Tensor([1, 192, 144, 0],"float32"), list[-1,16,12,12,12,1,], )
paddle.Tensor.reshape(Tensor([1, 192, 144, 0],"float32"), list[-1,16,12,12,12,192,], )
paddle.Tensor.reshape(Tensor([1, 192, 144, 0],"float32"), list[-1,27648,192,], )
paddle.Tensor.reshape(Tensor([1, 192, 6, 0, 144],"float32"), list[-1,6,144,144,], )
paddle.Tensor.reshape(Tensor([1, 192, 6, 144, 0],"float32"), list[-1,6,144,144,], )
paddle.Tensor.reshape(Tensor([1, 192, 8, 0],"float32"), list[1,192,512,], )
paddle.Tensor.reshape(Tensor([1, 19200, 0],"float32"), list[-1,160,120,96,], )
paddle.Tensor.reshape(Tensor([1, 193, 0, 64],"float32"), list[1,193,512,], )
paddle.Tensor.reshape(Tensor([1, 193, 8, 0],"float32"), list[1,193,512,], )
paddle.Tensor.reshape(Tensor([1, 194, 0, 64],"float32"), list[1,194,512,], )
paddle.Tensor.reshape(Tensor([1, 194, 8, 0],"float32"), list[1,194,512,], )
paddle.Tensor.reshape(Tensor([1, 195, 0, 64],"float32"), list[1,195,512,], )
paddle.Tensor.reshape(Tensor([1, 195, 8, 0],"float32"), list[1,195,512,], )
paddle.Tensor.reshape(Tensor([1, 196, 0, 64],"float32"), list[1,196,512,], )
paddle.Tensor.reshape(Tensor([1, 196, 0],"float32"), list[-1,14,14,768,], )
paddle.Tensor.reshape(Tensor([1, 196, 8, 0],"float32"), list[1,196,512,], )
paddle.Tensor.reshape(Tensor([1, 197, 0, 64],"float32"), list[1,197,512,], )
paddle.Tensor.reshape(Tensor([1, 197, 8, 0],"float32"), list[1,197,512,], )
paddle.Tensor.reshape(Tensor([1, 198, 0, 64],"float32"), list[1,198,512,], )
paddle.Tensor.reshape(Tensor([1, 198, 8, 0],"float32"), list[1,198,512,], )
paddle.Tensor.reshape(Tensor([1, 199, 0, 64],"float32"), list[1,199,512,], )
paddle.Tensor.reshape(Tensor([1, 199, 8, 0],"float32"), list[1,199,512,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 1, 7, 1, 7, 768],"float16"), list[1,16,7,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 1, 7, 1, 7, 768],"float32"), list[1,16,7,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 1, 7, 2, 7, 768],"float16"), list[1,16,7,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 1, 7, 2, 7, 768],"float32"), list[1,16,7,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 1, 8, 7, 7, 1],"float32"), list[-1,392,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 1, 8, 7, 7, 768],"float16"), list[-1,392,768,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 1, 8, 7, 7, 768],"float32"), list[-1,392,768,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 10, 7, 8, 7, 96],"float16"), list[1,16,70,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 10, 7, 8, 7, 96],"float32"), list[1,16,70,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 10, 8, 7, 7, 96],"float32"), list[-1,392,96,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 12, 12, 1536],"float32"), list[-1,12,12,1536,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 128],"float16"), list[1,2,512,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 128],"float16"), list[1,8,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 16],"float32"), list[1,2,1,64,16,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2, 12, 1536],"float32"), list[-1,24,24,1536,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2, 7, 1, 7, 768],"float16"), list[1,16,14,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2, 7, 1, 7, 768],"float32"), list[1,16,14,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2, 7, 2, 7, 384],"float16"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2, 7, 2, 7, 384],"float32"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2, 7, 3, 7, 384],"float16"), list[1,16,14,21,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2, 7, 3, 7, 384],"float32"), list[1,16,14,21,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2, 8, 7, 7, 1],"float32"), list[-1,392,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2, 8, 7, 7, 384],"float16"), list[-1,392,384,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2, 8, 7, 7, 384],"float32"), list[-1,392,384,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2, 8],"float32"), list[1,2,4,8,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2],"float16"), list[1,-1,1,32,2,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2],"float32"), list[1,-1,1,1,2,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2],"float32"), list[1,-1,2,1,2,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 2],"float32"), tuple(-1,2,), )
paddle.Tensor.reshape(Tensor([1, 2, 0, 3, 7, 2, 7, 384],"float16"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 3, 7, 2, 7, 384],"float32"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 3],"float32"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 32],"float32"), list[1,4,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 392, 392],"float16"), list[-1,24,392,392,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 392, 392],"float32"), list[-1,24,392,392,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 4, 4, 1],"float32"), list[-1,4,4,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 4, 7, 4, 7, 192],"float16"), list[1,16,28,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 4, 7, 4, 7, 192],"float32"), list[1,16,28,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 4, 7, 5, 7, 192],"float16"), list[1,16,28,35,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 4, 7, 5, 7, 192],"float32"), list[1,16,28,35,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 4, 7, 6, 7, 192],"float16"), list[1,16,28,42,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 4, 7, 6, 7, 192],"float32"), list[1,16,28,42,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 4, 8, 7, 7, 192],"float16"), list[-1,392,192,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 4, 8, 7, 7, 192],"float32"), list[-1,392,192,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 4],"float32"), list[1,2,8,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 5, 5, 1],"float32"), list[-1,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 5, 7, 4, 7, 192],"float16"), list[1,16,35,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 5, 7, 4, 7, 192],"float32"), list[1,16,35,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 58],"float32"), list[2,58,58,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 58],"float32"), list[2,8,58,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 64, 16],"float32"), list[1,8,64,16,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 64],"float16"), list[1,-1,2,32,2,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 64],"float16"), list[1,-1,4,32,2,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 64],"float32"), list[1,2,512,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 8, 7, 10, 7, 96],"float16"), list[1,16,56,70,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 8, 7, 10, 7, 96],"float32"), list[1,16,56,70,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 8, 7, 11, 7, 96],"float16"), list[1,16,56,77,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 8, 7, 11, 7, 96],"float32"), list[1,16,56,77,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 8, 7, 8, 7, 96],"float16"), list[1,16,56,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 8, 7, 8, 7, 96],"float32"), list[1,16,56,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 8, 7, 9, 7, 96],"float16"), list[1,16,56,63,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 8, 7, 9, 7, 96],"float32"), list[1,16,56,63,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 8, 8, 7, 7, 96],"float32"), list[-1,392,96,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 8],"float32"), list[2,58,8,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 9, 7, 8, 7, 96],"float16"), list[1,16,63,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0, 9, 7, 8, 7, 96],"float32"), list[1,16,63,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float16"), list[0,0,2,128,], )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float16"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float32"), list[0,0,1,4,], )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float32"), list[0,0,2,4,], )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float32"), list[1,2,2,], )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float32"), list[1,2,2,1,32,], )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float32"), list[1,2,2,2,8,], )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float32"), list[2,2,], )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float32"), list[2,2,1,1,32,], )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float32"), list[2,2,1,2,8,], )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float32"), tuple(1,1,2,2,), )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float32"), tuple(1,2,2,), )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float32"), tuple(1,2,3,), )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float32"), tuple(1,3,2,), )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float64"), tuple(1,2,3,), )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float64"), tuple(1,3,2,), )
paddle.Tensor.reshape(Tensor([1, 2, 0],"float64"), tuple(3,1,2,), )
paddle.Tensor.reshape(Tensor([1, 2, 1, 0, 8, 7, 7, 1],"float32"), list[-1,392,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 0, 8, 7, 7, 768],"float16"), list[-1,392,768,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 0, 8, 7, 7, 768],"float32"), list[-1,392,768,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 0],"float32"), list[1,-1,1,1,2,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 1, 0, 7, 7, 1],"float32"), list[-1,392,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 1, 0, 7, 7, 768],"float16"), list[-1,392,768,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 1, 0, 7, 7, 768],"float32"), list[-1,392,768,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 1, 8, 0, 7, 1],"float32"), list[-1,392,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 1, 8, 0, 7, 768],"float16"), list[-1,392,768,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 1, 8, 0, 7, 768],"float32"), list[-1,392,768,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 1, 8, 7, 0, 1],"float32"), list[-1,392,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 1, 8, 7, 0, 768],"float16"), list[-1,392,768,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 1, 8, 7, 0, 768],"float32"), list[-1,392,768,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 1, 8, 7, 7, 0],"float16"), list[-1,392,768,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 1, 8, 7, 7, 0],"float32"), list[-1,392,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 1, 8, 7, 7, 0],"float32"), list[-1,392,768,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 2, 0, 7, 7, 1],"float32"), list[-1,392,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 2, 8, 0, 7, 1],"float32"), list[-1,392,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 2, 8, 7, 0, 1],"float32"), list[-1,392,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 1, 2, 8, 7, 7, 0],"float32"), list[-1,392,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 10, 0, 8, 7, 7, 96],"float32"), list[-1,392,96,], )
paddle.Tensor.reshape(Tensor([1, 2, 10, 8, 0, 7, 7, 96],"float32"), list[-1,392,96,], )
paddle.Tensor.reshape(Tensor([1, 2, 10, 8, 8, 0, 7, 96],"float32"), list[-1,392,96,], )
paddle.Tensor.reshape(Tensor([1, 2, 10, 8, 8, 7, 0, 96],"float32"), list[-1,392,96,], )
paddle.Tensor.reshape(Tensor([1, 2, 10, 8, 8, 7, 7, 0],"float32"), list[-1,392,96,], )
paddle.Tensor.reshape(Tensor([1, 2, 12, 0, 12, 1536],"float32"), list[-1,24,24,1536,], )
paddle.Tensor.reshape(Tensor([1, 2, 12, 2, 0, 1536],"float32"), list[-1,24,24,1536,], )
paddle.Tensor.reshape(Tensor([1, 2, 12, 2, 12, 0],"float32"), list[-1,24,24,1536,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 0, 12, 1536],"float32"), list[-1,12,12,1536,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 0, 4, 1],"float32"), list[-1,4,4,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 0, 8, 7, 7, 384],"float16"), list[-1,392,384,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 0, 8, 7, 7, 384],"float32"), list[-1,392,384,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 0, 8],"float32"), list[1,2,4,8,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 0],"float16"), list[1,-1,2,32,2,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 0],"float32"), list[1,-1,2,1,2,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 0],"float32"), list[1,2,8,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 0],"float32"), list[1,4,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 0],"float32"), tuple(-1,2,), )
paddle.Tensor.reshape(Tensor([1, 2, 2, 12, 0, 1536],"float32"), list[-1,12,12,1536,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 12, 12, 0],"float32"), list[-1,12,12,1536,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 2, 0, 7, 7, 384],"float16"), list[-1,392,384,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 2, 0, 7, 7, 384],"float32"), list[-1,392,384,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 2, 0],"float32"), list[1,2,4,8,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 2, 8, 0, 7, 384],"float16"), list[-1,392,384,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 2, 8, 0, 7, 384],"float32"), list[-1,392,384,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 2, 8, 7, 0, 384],"float16"), list[-1,392,384,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 2, 8, 7, 0, 384],"float32"), list[-1,392,384,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 2, 8, 7, 7, 0],"float16"), list[-1,392,384,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 2, 8, 7, 7, 0],"float32"), list[-1,392,384,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 4, 0, 1],"float32"), list[-1,4,4,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 2, 4, 4, 0],"float32"), list[-1,4,4,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 24, 0, 392],"float16"), list[-1,24,392,392,], )
paddle.Tensor.reshape(Tensor([1, 2, 24, 0, 392],"float32"), list[-1,24,392,392,], )
paddle.Tensor.reshape(Tensor([1, 2, 24, 392, 0],"float16"), list[-1,24,392,392,], )
paddle.Tensor.reshape(Tensor([1, 2, 24, 392, 0],"float32"), list[-1,24,392,392,], )
paddle.Tensor.reshape(Tensor([1, 2, 3, 0],"float32"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 32, 0],"float16"), list[1,-1,1,32,2,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 0, 16],"float32"), list[1,8,64,16,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 0, 8, 7, 7, 192],"float16"), list[-1,392,192,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 0, 8, 7, 7, 192],"float32"), list[-1,392,192,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 0],"float16"), list[1,-1,4,32,2,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 0],"float16"), list[1,2,512,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 0],"float16"), list[1,8,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 4, 0, 7, 7, 192],"float16"), list[-1,392,192,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 4, 0, 7, 7, 192],"float32"), list[-1,392,192,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 4, 8, 0, 7, 192],"float16"), list[-1,392,192,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 4, 8, 0, 7, 192],"float32"), list[-1,392,192,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 4, 8, 7, 0, 192],"float16"), list[-1,392,192,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 4, 8, 7, 0, 192],"float32"), list[-1,392,192,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 4, 8, 7, 7, 0],"float16"), list[-1,392,192,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 4, 8, 7, 7, 0],"float32"), list[-1,392,192,], )
paddle.Tensor.reshape(Tensor([1, 2, 4, 64, 0],"float32"), list[1,8,64,16,], )
paddle.Tensor.reshape(Tensor([1, 2, 5, 0, 5, 1],"float32"), list[-1,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 5, 5, 0, 1],"float32"), list[-1,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 5, 5, 5, 0],"float32"), list[-1,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 2, 58, 0],"float32"), list[2,58,58,], )
paddle.Tensor.reshape(Tensor([1, 2, 58, 0],"float32"), list[2,58,8,], )
paddle.Tensor.reshape(Tensor([1, 2, 64, 0],"float32"), list[1,2,1,64,16,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 1, 7, 768],"float16"), list[1,16,14,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 1, 7, 768],"float16"), list[1,16,7,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 1, 7, 768],"float32"), list[1,16,14,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 1, 7, 768],"float32"), list[1,16,7,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 10, 7, 96],"float16"), list[1,16,56,70,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 10, 7, 96],"float32"), list[1,16,56,70,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 11, 7, 96],"float16"), list[1,16,56,77,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 11, 7, 96],"float32"), list[1,16,56,77,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 2, 7, 384],"float16"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 2, 7, 384],"float16"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 2, 7, 384],"float32"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 2, 7, 384],"float32"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 2, 7, 768],"float16"), list[1,16,7,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 2, 7, 768],"float32"), list[1,16,7,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 3, 7, 384],"float16"), list[1,16,14,21,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 3, 7, 384],"float32"), list[1,16,14,21,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 4, 7, 192],"float16"), list[1,16,28,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 4, 7, 192],"float16"), list[1,16,35,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 4, 7, 192],"float32"), list[1,16,28,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 4, 7, 192],"float32"), list[1,16,35,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 5, 7, 192],"float16"), list[1,16,28,35,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 5, 7, 192],"float32"), list[1,16,28,35,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 6, 7, 192],"float16"), list[1,16,28,42,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 6, 7, 192],"float32"), list[1,16,28,42,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 8, 7, 96],"float16"), list[1,16,56,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 8, 7, 96],"float16"), list[1,16,63,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 8, 7, 96],"float16"), list[1,16,70,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 8, 7, 96],"float32"), list[1,16,56,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 8, 7, 96],"float32"), list[1,16,63,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 8, 7, 96],"float32"), list[1,16,70,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 9, 7, 96],"float16"), list[1,16,56,63,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 7, 9, 7, 96],"float32"), list[1,16,56,63,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0, 8, 7, 7, 96],"float32"), list[-1,392,96,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0],"float32"), list[1,2,512,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 0],"float32"), list[2,8,58,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 0, 1, 7, 768],"float16"), list[1,16,7,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 0, 1, 7, 768],"float32"), list[1,16,7,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 0, 2, 7, 768],"float16"), list[1,16,7,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 0, 2, 7, 768],"float32"), list[1,16,7,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 7, 0, 7, 768],"float16"), list[1,16,7,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 7, 0, 7, 768],"float16"), list[1,16,7,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 7, 0, 7, 768],"float32"), list[1,16,7,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 7, 0, 7, 768],"float32"), list[1,16,7,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 7, 1, 0, 768],"float16"), list[1,16,7,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 7, 1, 0, 768],"float32"), list[1,16,7,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 7, 1, 7, 0],"float16"), list[1,16,7,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 7, 1, 7, 0],"float32"), list[1,16,7,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 7, 2, 0, 768],"float16"), list[1,16,7,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 7, 2, 0, 768],"float32"), list[1,16,7,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 7, 2, 7, 0],"float16"), list[1,16,7,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 1, 7, 2, 7, 0],"float32"), list[1,16,7,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 10, 0, 7, 7, 96],"float32"), list[-1,392,96,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 10, 0, 8, 7, 96],"float16"), list[1,16,70,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 10, 0, 8, 7, 96],"float32"), list[1,16,70,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 10, 7, 0, 7, 96],"float16"), list[1,16,70,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 10, 7, 0, 7, 96],"float32"), list[1,16,70,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 10, 7, 8, 0, 96],"float16"), list[1,16,70,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 10, 7, 8, 0, 96],"float32"), list[1,16,70,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 10, 7, 8, 7, 0],"float16"), list[1,16,70,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 10, 7, 8, 7, 0],"float32"), list[1,16,70,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 10, 8, 0, 7, 96],"float32"), list[-1,392,96,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 10, 8, 7, 0, 96],"float32"), list[-1,392,96,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 10, 8, 7, 7, 0],"float32"), list[-1,392,96,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 0, 1, 7, 768],"float16"), list[1,16,14,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 0, 1, 7, 768],"float32"), list[1,16,14,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 0, 2, 7, 384],"float16"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 0, 2, 7, 384],"float32"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 0, 3, 7, 384],"float16"), list[1,16,14,21,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 0, 3, 7, 384],"float32"), list[1,16,14,21,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 0, 7, 384],"float16"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 0, 7, 384],"float16"), list[1,16,14,21,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 0, 7, 384],"float32"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 0, 7, 384],"float32"), list[1,16,14,21,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 0, 7, 768],"float16"), list[1,16,14,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 0, 7, 768],"float32"), list[1,16,14,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 1, 0, 768],"float16"), list[1,16,14,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 1, 0, 768],"float32"), list[1,16,14,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 1, 7, 0],"float16"), list[1,16,14,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 1, 7, 0],"float32"), list[1,16,14,7,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 2, 0, 384],"float16"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 2, 0, 384],"float32"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 2, 7, 0],"float16"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 2, 7, 0],"float32"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 3, 0, 384],"float16"), list[1,16,14,21,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 3, 0, 384],"float32"), list[1,16,14,21,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 3, 7, 0],"float16"), list[1,16,14,21,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 3, 7, 0],"float32"), list[1,16,14,21,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 3, 0, 2, 7, 384],"float16"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 3, 0, 2, 7, 384],"float32"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 3, 7, 0, 7, 384],"float16"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 3, 7, 0, 7, 384],"float32"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 3, 7, 2, 0, 384],"float16"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 3, 7, 2, 0, 384],"float32"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 3, 7, 2, 7, 0],"float16"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 3, 7, 2, 7, 0],"float32"), list[1,16,21,14,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 0, 4, 7, 192],"float16"), list[1,16,28,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 0, 4, 7, 192],"float32"), list[1,16,28,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 0, 5, 7, 192],"float16"), list[1,16,28,35,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 0, 5, 7, 192],"float32"), list[1,16,28,35,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 0, 6, 7, 192],"float16"), list[1,16,28,42,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 0, 6, 7, 192],"float32"), list[1,16,28,42,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 0, 7, 192],"float16"), list[1,16,28,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 0, 7, 192],"float16"), list[1,16,28,35,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 0, 7, 192],"float16"), list[1,16,28,42,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 0, 7, 192],"float32"), list[1,16,28,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 0, 7, 192],"float32"), list[1,16,28,35,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 0, 7, 192],"float32"), list[1,16,28,42,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 4, 0, 192],"float16"), list[1,16,28,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 4, 0, 192],"float32"), list[1,16,28,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 4, 7, 0],"float16"), list[1,16,28,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 4, 7, 0],"float32"), list[1,16,28,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 5, 0, 192],"float16"), list[1,16,28,35,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 5, 0, 192],"float32"), list[1,16,28,35,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 5, 7, 0],"float16"), list[1,16,28,35,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 5, 7, 0],"float32"), list[1,16,28,35,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 6, 0, 192],"float16"), list[1,16,28,42,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 6, 0, 192],"float32"), list[1,16,28,42,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 6, 7, 0],"float16"), list[1,16,28,42,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 4, 7, 6, 7, 0],"float32"), list[1,16,28,42,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 5, 0, 4, 7, 192],"float16"), list[1,16,35,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 5, 0, 4, 7, 192],"float32"), list[1,16,35,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 5, 7, 0, 7, 192],"float16"), list[1,16,35,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 5, 7, 0, 7, 192],"float32"), list[1,16,35,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 5, 7, 4, 0, 192],"float16"), list[1,16,35,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 5, 7, 4, 0, 192],"float32"), list[1,16,35,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 5, 7, 4, 7, 0],"float16"), list[1,16,35,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 5, 7, 4, 7, 0],"float32"), list[1,16,35,28,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 0, 10, 7, 96],"float16"), list[1,16,56,70,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 0, 10, 7, 96],"float32"), list[1,16,56,70,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 0, 11, 7, 96],"float16"), list[1,16,56,77,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 0, 11, 7, 96],"float32"), list[1,16,56,77,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 0, 8, 7, 96],"float16"), list[1,16,56,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 0, 8, 7, 96],"float32"), list[1,16,56,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 0, 9, 7, 96],"float16"), list[1,16,56,63,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 0, 9, 7, 96],"float32"), list[1,16,56,63,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 0, 7, 96],"float16"), list[1,16,56,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 0, 7, 96],"float16"), list[1,16,56,63,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 0, 7, 96],"float16"), list[1,16,56,70,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 0, 7, 96],"float16"), list[1,16,56,77,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 0, 7, 96],"float32"), list[1,16,56,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 0, 7, 96],"float32"), list[1,16,56,63,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 0, 7, 96],"float32"), list[1,16,56,70,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 0, 7, 96],"float32"), list[1,16,56,77,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 10, 0, 96],"float16"), list[1,16,56,70,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 10, 0, 96],"float32"), list[1,16,56,70,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 10, 7, 0],"float16"), list[1,16,56,70,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 10, 7, 0],"float32"), list[1,16,56,70,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 11, 0, 96],"float16"), list[1,16,56,77,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 11, 0, 96],"float32"), list[1,16,56,77,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 11, 7, 0],"float16"), list[1,16,56,77,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 11, 7, 0],"float32"), list[1,16,56,77,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 8, 0, 96],"float16"), list[1,16,56,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 8, 0, 96],"float32"), list[1,16,56,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 8, 7, 0],"float16"), list[1,16,56,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 8, 7, 0],"float32"), list[1,16,56,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 9, 0, 96],"float16"), list[1,16,56,63,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 9, 0, 96],"float32"), list[1,16,56,63,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 9, 7, 0],"float16"), list[1,16,56,63,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 8, 7, 9, 7, 0],"float32"), list[1,16,56,63,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 9, 0, 8, 7, 96],"float16"), list[1,16,63,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 9, 0, 8, 7, 96],"float32"), list[1,16,63,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 9, 7, 0, 7, 96],"float16"), list[1,16,63,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 9, 7, 0, 7, 96],"float32"), list[1,16,63,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 9, 7, 8, 0, 96],"float16"), list[1,16,63,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 9, 7, 8, 0, 96],"float32"), list[1,16,63,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 9, 7, 8, 7, 0],"float16"), list[1,16,63,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 9, 7, 8, 7, 0],"float32"), list[1,16,63,56,-1,], )
paddle.Tensor.reshape(Tensor([1, 20, 0, 1],"float32"), list[1,20,4,], )
paddle.Tensor.reshape(Tensor([1, 20, 0, 1536],"float32"), list[-1,300,1536,], )
paddle.Tensor.reshape(Tensor([1, 20, 0, 16],"float32"), list[1,20,-1,], )
paddle.Tensor.reshape(Tensor([1, 20, 0, 32],"float32"), list[1,20,32,], )
paddle.Tensor.reshape(Tensor([1, 20, 0, 4],"float32"), list[-1,400,4,], )
paddle.Tensor.reshape(Tensor([1, 20, 0, 6],"float32"), list[0,0,-1,], )
paddle.Tensor.reshape(Tensor([1, 20, 0, 64],"float32"), list[1,20,512,], )
paddle.Tensor.reshape(Tensor([1, 20, 0, 768],"float32"), list[-1,300,768,], )
paddle.Tensor.reshape(Tensor([1, 20, 0, 8],"float32"), list[1,20,-1,], )
paddle.Tensor.reshape(Tensor([1, 20, 0, 8],"float32"), list[1,20,16,], )
paddle.Tensor.reshape(Tensor([1, 20, 0, 8],"float32"), list[1,20,32,], )
paddle.Tensor.reshape(Tensor([1, 20, 0],"float32"), list[1,20,2,16,], )
paddle.Tensor.reshape(Tensor([1, 20, 0],"float32"), list[1,20,4,1,], )
paddle.Tensor.reshape(Tensor([1, 20, 0],"float32"), list[1,20,4,-1,], )
paddle.Tensor.reshape(Tensor([1, 20, 0],"float32"), list[1,20,4,3,8,], )
paddle.Tensor.reshape(Tensor([1, 20, 0],"float32"), list[1,20,6,6,], )
paddle.Tensor.reshape(Tensor([1, 20, 0],"float32"), list[20,-1,], )
paddle.Tensor.reshape(Tensor([1, 20, 0],"float32"), shape=list[0,0,1,32,], )
paddle.Tensor.reshape(Tensor([1, 20, 0],"float32"), shape=list[0,0,2,8,], )
paddle.Tensor.reshape(Tensor([1, 20, 1, 0],"float32"), list[1,20,32,], )
paddle.Tensor.reshape(Tensor([1, 20, 15, 0],"float32"), list[-1,300,1536,], )
paddle.Tensor.reshape(Tensor([1, 20, 15, 0],"float32"), list[-1,300,768,], )
paddle.Tensor.reshape(Tensor([1, 20, 2, 0],"float32"), list[1,20,-1,], )
paddle.Tensor.reshape(Tensor([1, 20, 2, 0],"float32"), list[1,20,16,], )
paddle.Tensor.reshape(Tensor([1, 20, 20, 0],"float32"), list[-1,400,4,], )
paddle.Tensor.reshape(Tensor([1, 20, 4, 0],"float32"), list[1,20,-1,], )
paddle.Tensor.reshape(Tensor([1, 20, 4, 0],"float32"), list[1,20,32,], )
paddle.Tensor.reshape(Tensor([1, 20, 4, 0],"float32"), list[1,20,4,], )
paddle.Tensor.reshape(Tensor([1, 20, 6, 0],"float32"), list[0,0,-1,], )
paddle.Tensor.reshape(Tensor([1, 20, 8, 0],"float32"), list[1,20,512,], )
paddle.Tensor.reshape(Tensor([1, 200, 0, 64],"float32"), list[1,200,512,], )
paddle.Tensor.reshape(Tensor([1, 200, 8, 0],"float32"), list[1,200,512,], )
paddle.Tensor.reshape(Tensor([1, 201, 0, 64],"float32"), list[1,201,512,], )
paddle.Tensor.reshape(Tensor([1, 201, 8, 0],"float32"), list[1,201,512,], )
paddle.Tensor.reshape(Tensor([1, 202, 0, 64],"float32"), list[1,202,512,], )
paddle.Tensor.reshape(Tensor([1, 202, 8, 0],"float32"), list[1,202,512,], )
paddle.Tensor.reshape(Tensor([1, 203, 0, 64],"float32"), list[1,203,512,], )
paddle.Tensor.reshape(Tensor([1, 203, 8, 0],"float32"), list[1,203,512,], )
paddle.Tensor.reshape(Tensor([1, 204, 0, 64],"float32"), list[1,204,512,], )
paddle.Tensor.reshape(Tensor([1, 204, 8, 0],"float32"), list[1,204,512,], )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 128],"float16"), list[2048,1,-1,], )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 128],"float32"), tuple(8,256,128,128,), )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 129],"float32"), tuple(8,256,129,129,), )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 16],"float16"), list[1,2048,128,], )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 16],"float32"), tuple(4,512,16,16,), )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 17],"float32"), tuple(4,512,17,17,), )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 32],"float32"), tuple(4,512,32,32,), )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 33],"float32"), tuple(4,512,33,33,), )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 4],"float32"), tuple(4,512,4,4,), )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 64],"float16"), list[1,2048,64,], )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 64],"float32"), tuple(4,512,64,64,), )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 65],"float32"), tuple(4,512,65,65,), )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 8],"float32"), tuple(4,512,8,8,), )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 9],"float32"), tuple(4,512,9,9,), )
paddle.Tensor.reshape(Tensor([1, 2048, 0, 96],"float16"), list[1,2048,768,], )
paddle.Tensor.reshape(Tensor([1, 2048, 0],"float16"), list[1,2048,1,64,], )
paddle.Tensor.reshape(Tensor([1, 2048, 0],"float16"), shape=list[0,0,1,64,], )
paddle.Tensor.reshape(Tensor([1, 2048, 0],"float32"), list[1,2048,16,16,], )
paddle.Tensor.reshape(Tensor([1, 2048, 1, 0],"float16"), list[1,2048,64,], )
paddle.Tensor.reshape(Tensor([1, 2048, 128, 0],"float32"), tuple(8,256,128,128,), )
paddle.Tensor.reshape(Tensor([1, 2048, 129, 0],"float32"), tuple(8,256,129,129,), )
paddle.Tensor.reshape(Tensor([1, 2048, 16, 0],"float32"), tuple(4,512,16,16,), )
paddle.Tensor.reshape(Tensor([1, 2048, 17, 0],"float32"), tuple(4,512,17,17,), )
paddle.Tensor.reshape(Tensor([1, 2048, 32, 0],"float32"), tuple(4,512,32,32,), )
paddle.Tensor.reshape(Tensor([1, 2048, 33, 0],"float32"), tuple(4,512,33,33,), )
paddle.Tensor.reshape(Tensor([1, 2048, 4, 0],"float16"), list[2048,1,-1,], )
paddle.Tensor.reshape(Tensor([1, 2048, 4, 0],"float32"), tuple(4,512,4,4,), )
paddle.Tensor.reshape(Tensor([1, 2048, 64, 0],"float32"), tuple(4,512,64,64,), )
paddle.Tensor.reshape(Tensor([1, 2048, 65, 0],"float32"), tuple(4,512,65,65,), )
paddle.Tensor.reshape(Tensor([1, 2048, 8, 0],"float16"), list[1,2048,128,], )
paddle.Tensor.reshape(Tensor([1, 2048, 8, 0],"float16"), list[1,2048,768,], )
paddle.Tensor.reshape(Tensor([1, 2048, 8, 0],"float32"), tuple(4,512,8,8,), )
paddle.Tensor.reshape(Tensor([1, 2048, 9, 0],"float32"), tuple(4,512,9,9,), )
paddle.Tensor.reshape(Tensor([1, 205, 0, 64],"float32"), list[1,205,512,], )
paddle.Tensor.reshape(Tensor([1, 205, 8, 0],"float32"), list[1,205,512,], )
paddle.Tensor.reshape(Tensor([1, 206, 0, 64],"float32"), list[1,206,512,], )
paddle.Tensor.reshape(Tensor([1, 206, 8, 0],"float32"), list[1,206,512,], )
paddle.Tensor.reshape(Tensor([1, 207, 0, 64],"float32"), list[1,207,512,], )
paddle.Tensor.reshape(Tensor([1, 207, 8, 0],"float32"), list[1,207,512,], )
paddle.Tensor.reshape(Tensor([1, 208, 0, 64],"float32"), list[1,208,512,], )
paddle.Tensor.reshape(Tensor([1, 208, 8, 0],"float32"), list[1,208,512,], )
paddle.Tensor.reshape(Tensor([1, 209, 0, 64],"float32"), list[1,209,512,], )
paddle.Tensor.reshape(Tensor([1, 209, 8, 0],"float32"), list[1,209,512,], )
paddle.Tensor.reshape(Tensor([1, 21, 0, 1],"float32"), list[-1,3,7,3,7,1,], )
paddle.Tensor.reshape(Tensor([1, 21, 0, 20],"float32"), list[1,21,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 21, 0, 64],"float32"), list[1,21,512,], )
paddle.Tensor.reshape(Tensor([1, 21, 0, 768],"float32"), list[-1,3,7,3,7,768,], )
paddle.Tensor.reshape(Tensor([1, 21, 0],"float32"), list[1,21,8,20,], )
paddle.Tensor.reshape(Tensor([1, 21, 0],"float32"), list[1,21,8,5,4,2,], )
paddle.Tensor.reshape(Tensor([1, 21, 0],"float32"), tuple(21,4,), )
paddle.Tensor.reshape(Tensor([1, 21, 21, 0],"float32"), list[-1,3,7,3,7,1,], )
paddle.Tensor.reshape(Tensor([1, 21, 21, 0],"float32"), list[-1,3,7,3,7,768,], )
paddle.Tensor.reshape(Tensor([1, 21, 8, 0],"float32"), list[1,21,512,], )
paddle.Tensor.reshape(Tensor([1, 21, 8, 0],"float32"), list[1,21,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 210, 0, 64],"float32"), list[1,210,512,], )
paddle.Tensor.reshape(Tensor([1, 210, 8, 0],"float32"), list[1,210,512,], )
paddle.Tensor.reshape(Tensor([1, 211, 0, 64],"float32"), list[1,211,512,], )
paddle.Tensor.reshape(Tensor([1, 211, 8, 0],"float32"), list[1,211,512,], )
paddle.Tensor.reshape(Tensor([1, 212, 0, 64],"float32"), list[1,212,512,], )
paddle.Tensor.reshape(Tensor([1, 212, 8, 0],"float32"), list[1,212,512,], )
paddle.Tensor.reshape(Tensor([1, 213, 0, 64],"float32"), list[1,213,512,], )
paddle.Tensor.reshape(Tensor([1, 213, 8, 0],"float32"), list[1,213,512,], )
paddle.Tensor.reshape(Tensor([1, 214, 0, 64],"float32"), list[1,214,512,], )
paddle.Tensor.reshape(Tensor([1, 214, 8, 0],"float32"), list[1,214,512,], )
paddle.Tensor.reshape(Tensor([1, 215, 0, 64],"float32"), list[1,215,512,], )
paddle.Tensor.reshape(Tensor([1, 215, 8, 0],"float32"), list[1,215,512,], )
paddle.Tensor.reshape(Tensor([1, 21504, 0],"float32"), list[1,21504,1,91,], )
paddle.Tensor.reshape(Tensor([1, 216, 0, 64],"float32"), list[1,216,512,], )
paddle.Tensor.reshape(Tensor([1, 216, 8, 0],"float32"), list[1,216,512,], )
paddle.Tensor.reshape(Tensor([1, 217, 0, 32],"float32"), list[1,217,256,], )
paddle.Tensor.reshape(Tensor([1, 217, 0, 64],"float32"), list[1,217,512,], )
paddle.Tensor.reshape(Tensor([1, 217, 0],"float32"), list[1,217,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 217, 8, 0],"float32"), list[1,217,256,], )
paddle.Tensor.reshape(Tensor([1, 217, 8, 0],"float32"), list[1,217,512,], )
paddle.Tensor.reshape(Tensor([1, 218, 0, 64],"float32"), list[1,218,512,], )
paddle.Tensor.reshape(Tensor([1, 218, 8, 0],"float32"), list[1,218,512,], )
paddle.Tensor.reshape(Tensor([1, 219, 0, 64],"float32"), list[1,219,512,], )
paddle.Tensor.reshape(Tensor([1, 219, 8, 0],"float32"), list[1,219,512,], )
paddle.Tensor.reshape(Tensor([1, 22, 0, 20],"float32"), list[1,22,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 22, 0, 4],"float32"), list[-1,484,4,], )
paddle.Tensor.reshape(Tensor([1, 22, 0, 64],"float32"), list[1,22,512,], )
paddle.Tensor.reshape(Tensor([1, 22, 0],"float32"), list[1,22,8,20,], )
paddle.Tensor.reshape(Tensor([1, 22, 0],"float32"), list[1,22,8,5,4,2,], )
paddle.Tensor.reshape(Tensor([1, 22, 0],"float32"), tuple(22,4,), )
paddle.Tensor.reshape(Tensor([1, 22, 22, 0],"float32"), list[-1,484,4,], )
paddle.Tensor.reshape(Tensor([1, 22, 8, 0],"float32"), list[1,22,512,], )
paddle.Tensor.reshape(Tensor([1, 22, 8, 0],"float32"), list[1,22,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 220, 0, 64],"float32"), list[1,220,512,], )
paddle.Tensor.reshape(Tensor([1, 220, 8, 0],"float32"), list[1,220,512,], )
paddle.Tensor.reshape(Tensor([1, 221, 0, 64],"float32"), list[1,221,512,], )
paddle.Tensor.reshape(Tensor([1, 221, 8, 0],"float32"), list[1,221,512,], )
paddle.Tensor.reshape(Tensor([1, 222, 0, 64],"float32"), list[1,222,512,], )
paddle.Tensor.reshape(Tensor([1, 222, 8, 0],"float32"), list[1,222,512,], )
paddle.Tensor.reshape(Tensor([1, 223, 0, 64],"float32"), list[1,223,512,], )
paddle.Tensor.reshape(Tensor([1, 223, 8, 0],"float32"), list[1,223,512,], )
paddle.Tensor.reshape(Tensor([1, 224, 0, 1],"float32"), list[-1,32,7,24,7,1,], )
paddle.Tensor.reshape(Tensor([1, 224, 0, 64],"float32"), list[1,224,512,], )
paddle.Tensor.reshape(Tensor([1, 224, 168, 0],"float32"), list[-1,32,7,24,7,1,], )
paddle.Tensor.reshape(Tensor([1, 224, 8, 0],"float32"), list[1,224,512,], )
paddle.Tensor.reshape(Tensor([1, 225, 0, 64],"float32"), list[1,225,512,], )
paddle.Tensor.reshape(Tensor([1, 225, 8, 0],"float32"), list[1,225,512,], )
paddle.Tensor.reshape(Tensor([1, 226, 0, 64],"float32"), list[1,226,512,], )
paddle.Tensor.reshape(Tensor([1, 226, 8, 0],"float32"), list[1,226,512,], )
paddle.Tensor.reshape(Tensor([1, 227, 0, 64],"float32"), list[1,227,512,], )
paddle.Tensor.reshape(Tensor([1, 227, 8, 0],"float32"), list[1,227,512,], )
paddle.Tensor.reshape(Tensor([1, 228, 0, 64],"float32"), list[1,228,512,], )
paddle.Tensor.reshape(Tensor([1, 228, 8, 0],"float32"), list[1,228,512,], )
paddle.Tensor.reshape(Tensor([1, 229, 0, 32],"float32"), list[1,229,256,], )
paddle.Tensor.reshape(Tensor([1, 229, 0, 64],"float32"), list[1,229,512,], )
paddle.Tensor.reshape(Tensor([1, 229, 0],"float32"), list[1,229,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 229, 8, 0],"float32"), list[1,229,256,], )
paddle.Tensor.reshape(Tensor([1, 229, 8, 0],"float32"), list[1,229,512,], )
paddle.Tensor.reshape(Tensor([1, 23, 0, 18, 7, 96],"float32"), list[-1,161,126,96,], )
paddle.Tensor.reshape(Tensor([1, 23, 0, 4],"float32"), list[-1,529,4,], )
paddle.Tensor.reshape(Tensor([1, 23, 0, 64],"float32"), list[1,23,512,], )
paddle.Tensor.reshape(Tensor([1, 23, 0, 7, 7, 96],"float32"), list[-1,7,7,96,], )
paddle.Tensor.reshape(Tensor([1, 23, 18, 0, 7, 96],"float32"), list[-1,7,7,96,], )
paddle.Tensor.reshape(Tensor([1, 23, 18, 7, 0, 96],"float32"), list[-1,7,7,96,], )
paddle.Tensor.reshape(Tensor([1, 23, 18, 7, 7, 0],"float32"), list[-1,7,7,96,], )
paddle.Tensor.reshape(Tensor([1, 23, 23, 0],"float32"), list[-1,529,4,], )
paddle.Tensor.reshape(Tensor([1, 23, 7, 0, 7, 96],"float32"), list[-1,161,126,96,], )
paddle.Tensor.reshape(Tensor([1, 23, 7, 18, 0, 96],"float32"), list[-1,161,126,96,], )
paddle.Tensor.reshape(Tensor([1, 23, 7, 18, 7, 0],"float32"), list[-1,161,126,96,], )
paddle.Tensor.reshape(Tensor([1, 23, 8, 0],"float32"), list[1,23,512,], )
paddle.Tensor.reshape(Tensor([1, 230, 0, 64],"float32"), list[1,230,512,], )
paddle.Tensor.reshape(Tensor([1, 230, 8, 0],"float32"), list[1,230,512,], )
paddle.Tensor.reshape(Tensor([1, 231, 0, 64],"float32"), list[1,231,512,], )
paddle.Tensor.reshape(Tensor([1, 231, 8, 0],"float32"), list[1,231,512,], )
paddle.Tensor.reshape(Tensor([1, 232, 0, 64],"float32"), list[1,232,512,], )
paddle.Tensor.reshape(Tensor([1, 232, 8, 0],"float32"), list[1,232,512,], )
paddle.Tensor.reshape(Tensor([1, 233, 0, 64],"float32"), list[1,233,512,], )
paddle.Tensor.reshape(Tensor([1, 233, 8, 0],"float32"), list[1,233,512,], )
paddle.Tensor.reshape(Tensor([1, 234, 0, 64],"float32"), list[1,234,512,], )
paddle.Tensor.reshape(Tensor([1, 234, 8, 0],"float32"), list[1,234,512,], )
paddle.Tensor.reshape(Tensor([1, 235, 0, 64],"float32"), list[1,235,512,], )
paddle.Tensor.reshape(Tensor([1, 235, 8, 0],"float32"), list[1,235,512,], )
paddle.Tensor.reshape(Tensor([1, 236, 0, 64],"float32"), list[1,236,512,], )
paddle.Tensor.reshape(Tensor([1, 236, 8, 0],"float32"), list[1,236,512,], )
paddle.Tensor.reshape(Tensor([1, 237, 0, 64],"float32"), list[1,237,512,], )
paddle.Tensor.reshape(Tensor([1, 237, 8, 0],"float32"), list[1,237,512,], )
paddle.Tensor.reshape(Tensor([1, 238, 0, 64],"float32"), list[1,238,512,], )
paddle.Tensor.reshape(Tensor([1, 238, 8, 0],"float32"), list[1,238,512,], )
paddle.Tensor.reshape(Tensor([1, 239, 0, 64],"float32"), list[1,239,512,], )
paddle.Tensor.reshape(Tensor([1, 239, 8, 0],"float32"), list[1,239,512,], )
paddle.Tensor.reshape(Tensor([1, 24, 0, 1],"float32"), list[1,2,12,2,12,1,], )
paddle.Tensor.reshape(Tensor([1, 24, 0, 1],"float32"), list[-1,2,12,2,12,1,], )
paddle.Tensor.reshape(Tensor([1, 24, 0, 128],"float32"), tuple(8,3,128,128,), )
paddle.Tensor.reshape(Tensor([1, 24, 0, 1536],"float32"), list[-1,2,12,2,12,1536,], )
paddle.Tensor.reshape(Tensor([1, 24, 0, 1536],"float32"), list[-1,432,1536,], )
paddle.Tensor.reshape(Tensor([1, 24, 0, 16],"float32"), tuple(8,3,16,16,), )
paddle.Tensor.reshape(Tensor([1, 24, 0, 256],"float32"), tuple(8,3,256,256,), )
paddle.Tensor.reshape(Tensor([1, 24, 0, 3072],"float32"), list[-1,432,3072,], )
paddle.Tensor.reshape(Tensor([1, 24, 0, 32],"float32"), tuple(8,3,32,32,), )
paddle.Tensor.reshape(Tensor([1, 24, 0, 4],"float32"), list[-1,576,4,], )
paddle.Tensor.reshape(Tensor([1, 24, 0, 4],"float32"), tuple(8,3,4,4,), )
paddle.Tensor.reshape(Tensor([1, 24, 0, 64],"float32"), list[1,24,512,], )
paddle.Tensor.reshape(Tensor([1, 24, 0, 64],"float32"), tuple(8,3,64,64,), )
paddle.Tensor.reshape(Tensor([1, 24, 0, 8],"float32"), tuple(8,3,8,8,), )
paddle.Tensor.reshape(Tensor([1, 24, 128, 0],"float32"), tuple(8,3,128,128,), )
paddle.Tensor.reshape(Tensor([1, 24, 16, 0],"float32"), tuple(8,3,16,16,), )
paddle.Tensor.reshape(Tensor([1, 24, 18, 0],"float32"), list[-1,432,1536,], )
paddle.Tensor.reshape(Tensor([1, 24, 18, 0],"float32"), list[-1,432,3072,], )
paddle.Tensor.reshape(Tensor([1, 24, 24, 0],"float32"), list[1,2,12,2,12,1,], )
paddle.Tensor.reshape(Tensor([1, 24, 24, 0],"float32"), list[-1,2,12,2,12,1,], )
paddle.Tensor.reshape(Tensor([1, 24, 24, 0],"float32"), list[-1,2,12,2,12,1536,], )
paddle.Tensor.reshape(Tensor([1, 24, 24, 0],"float32"), list[-1,576,4,], )
paddle.Tensor.reshape(Tensor([1, 24, 256, 0],"float32"), tuple(8,3,256,256,), )
paddle.Tensor.reshape(Tensor([1, 24, 32, 0],"float32"), tuple(8,3,32,32,), )
paddle.Tensor.reshape(Tensor([1, 24, 4, 0],"float32"), tuple(8,3,4,4,), )
paddle.Tensor.reshape(Tensor([1, 24, 64, 0],"float32"), tuple(8,3,64,64,), )
paddle.Tensor.reshape(Tensor([1, 24, 8, 0],"float32"), list[1,24,512,], )
paddle.Tensor.reshape(Tensor([1, 24, 8, 0],"float32"), tuple(8,3,8,8,), )
paddle.Tensor.reshape(Tensor([1, 240, 0, 64],"float32"), list[1,240,512,], )
paddle.Tensor.reshape(Tensor([1, 240, 0],"float32"), list[1,-1,2,1,32,], )
paddle.Tensor.reshape(Tensor([1, 240, 0],"float32"), list[1,-1,2,1,64,], )
paddle.Tensor.reshape(Tensor([1, 240, 0],"float32"), list[1,-1,2,2,32,], )
paddle.Tensor.reshape(Tensor([1, 240, 0],"float32"), list[1,-1,2,2,64,], )
paddle.Tensor.reshape(Tensor([1, 240, 0],"float32"), list[1,-1,2,5,32,], )
paddle.Tensor.reshape(Tensor([1, 240, 0],"float32"), list[1,-1,2,5,64,], )
paddle.Tensor.reshape(Tensor([1, 240, 8, 0],"float32"), list[1,240,512,], )
paddle.Tensor.reshape(Tensor([1, 241, 0, 32],"float32"), list[1,241,256,], )
paddle.Tensor.reshape(Tensor([1, 241, 0, 64],"float32"), list[1,241,512,], )
paddle.Tensor.reshape(Tensor([1, 241, 0],"float32"), list[1,241,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 241, 8, 0],"float32"), list[1,241,256,], )
paddle.Tensor.reshape(Tensor([1, 241, 8, 0],"float32"), list[1,241,512,], )
paddle.Tensor.reshape(Tensor([1, 242, 0, 64],"float32"), list[1,242,512,], )
paddle.Tensor.reshape(Tensor([1, 242, 8, 0],"float32"), list[1,242,512,], )
paddle.Tensor.reshape(Tensor([1, 243, 0, 64],"float32"), list[1,243,512,], )
paddle.Tensor.reshape(Tensor([1, 243, 8, 0],"float32"), list[1,243,512,], )
paddle.Tensor.reshape(Tensor([1, 244, 0, 64],"float32"), list[1,244,512,], )
paddle.Tensor.reshape(Tensor([1, 244, 8, 0],"float32"), list[1,244,512,], )
paddle.Tensor.reshape(Tensor([1, 245, 0, 64],"float32"), list[1,245,512,], )
paddle.Tensor.reshape(Tensor([1, 245, 8, 0],"float32"), list[1,245,512,], )
paddle.Tensor.reshape(Tensor([1, 246, 0, 64],"float32"), list[1,246,512,], )
paddle.Tensor.reshape(Tensor([1, 246, 8, 0],"float32"), list[1,246,512,], )
paddle.Tensor.reshape(Tensor([1, 247, 0, 64],"float32"), list[1,247,512,], )
paddle.Tensor.reshape(Tensor([1, 247, 8, 0],"float32"), list[1,247,512,], )
paddle.Tensor.reshape(Tensor([1, 248, 0, 1, 2, 7],"float32"), list[1,248,216,-1,7,], )
paddle.Tensor.reshape(Tensor([1, 248, 0, 2, 7],"float32"), list[-1,7,], )
paddle.Tensor.reshape(Tensor([1, 248, 0, 64],"float32"), list[1,248,512,], )
paddle.Tensor.reshape(Tensor([1, 248, 216, 0, 2, 7],"float32"), list[1,248,216,-1,7,], )
paddle.Tensor.reshape(Tensor([1, 248, 216, 0, 7],"float32"), list[-1,7,], )
paddle.Tensor.reshape(Tensor([1, 248, 216, 1, 0, 7],"float32"), list[1,248,216,-1,7,], )
paddle.Tensor.reshape(Tensor([1, 248, 216, 1, 2, 0],"float32"), list[1,248,216,-1,7,], )
paddle.Tensor.reshape(Tensor([1, 248, 216, 2, 0],"float32"), list[-1,7,], )
paddle.Tensor.reshape(Tensor([1, 248, 8, 0],"float32"), list[1,248,512,], )
paddle.Tensor.reshape(Tensor([1, 249, 0, 64],"float32"), list[1,249,512,], )
paddle.Tensor.reshape(Tensor([1, 249, 8, 0],"float32"), list[1,249,512,], )
paddle.Tensor.reshape(Tensor([1, 25, 0, 1],"float32"), list[1,5,5,17,5,1,], )
paddle.Tensor.reshape(Tensor([1, 25, 0, 2],"float32"), list[-1,2,2,], )
paddle.Tensor.reshape(Tensor([1, 25, 0, 2],"float32"), list[-1,4,2,], )
paddle.Tensor.reshape(Tensor([1, 25, 0, 64],"float32"), list[1,25,512,], )
paddle.Tensor.reshape(Tensor([1, 25, 0],"float32"), list[-1,5,], )
paddle.Tensor.reshape(Tensor([1, 25, 2, 0],"float32"), list[-1,2,2,], )
paddle.Tensor.reshape(Tensor([1, 25, 4, 0],"float32"), list[-1,4,2,], )
paddle.Tensor.reshape(Tensor([1, 25, 8, 0],"float32"), list[1,25,512,], )
paddle.Tensor.reshape(Tensor([1, 25, 85, 0],"float32"), list[1,5,5,17,5,1,], )
paddle.Tensor.reshape(Tensor([1, 250, 0, 64],"float32"), list[1,250,512,], )
paddle.Tensor.reshape(Tensor([1, 250, 8, 0],"float32"), list[1,250,512,], )
paddle.Tensor.reshape(Tensor([1, 256, 0, 128],"float32"), tuple(1,256,128,128,), )
paddle.Tensor.reshape(Tensor([1, 256, 0, 129],"float32"), tuple(-1,129,129,1,), )
paddle.Tensor.reshape(Tensor([1, 256, 0, 129],"float32"), tuple(1,256,129,129,), )
paddle.Tensor.reshape(Tensor([1, 256, 0, 2],"float32"), tuple(1,65536,2,), )
paddle.Tensor.reshape(Tensor([1, 256, 0, 3, 3],"float32"), tuple(256,128,3,3,), )
paddle.Tensor.reshape(Tensor([1, 256, 0, 3, 3],"float32"), tuple(256,256,3,3,), )
paddle.Tensor.reshape(Tensor([1, 256, 0, 3, 3],"float32"), tuple(256,512,3,3,), )
paddle.Tensor.reshape(Tensor([1, 256, 0, 32],"float32"), list[1,256,256,], )
paddle.Tensor.reshape(Tensor([1, 256, 0, 64],"float32"), list[1,256,512,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[0,0,124,128,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[0,0,128,128,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[0,0,16,16,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[0,0,256,256,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[0,0,31,32,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[0,0,32,32,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[0,0,62,64,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[0,0,64,64,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[1,-1,2,1,64,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[1,-1,2,2,64,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[1,-1,2,5,64,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[1,-1,2,8,32,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[1,-1,2,8,64,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[-1,16,16,192,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[1,16,16,256,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[1,16,16,512,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[1,256,124,128,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[1,256,128,128,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[-1,256,23,23,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[-1,256,46,46,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[-1,256,48,48,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[1,256,62,64,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[1,256,64,64,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[1,256,8,32,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), list[1,256,8,64,], )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,10,8,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,12,9,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,144,200,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,18,25,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,192,144,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,20,15,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,23,18,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,24,18,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,36,50,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,40,30,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,45,36,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,48,36,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,72,100,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,80,60,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,89,72,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,9,13,), )
paddle.Tensor.reshape(Tensor([1, 256, 0],"float32"), tuple(1,256,96,72,), )
paddle.Tensor.reshape(Tensor([1, 256, 128, 0, 3],"float32"), tuple(256,128,3,3,), )
paddle.Tensor.reshape(Tensor([1, 256, 128, 0],"float32"), tuple(1,256,128,128,), )
paddle.Tensor.reshape(Tensor([1, 256, 128, 3, 0],"float32"), tuple(256,128,3,3,), )
paddle.Tensor.reshape(Tensor([1, 256, 129, 0],"float32"), tuple(-1,129,129,1,), )
paddle.Tensor.reshape(Tensor([1, 256, 129, 0],"float32"), tuple(1,256,129,129,), )
paddle.Tensor.reshape(Tensor([1, 256, 256, 0, 3],"float32"), tuple(256,256,3,3,), )
paddle.Tensor.reshape(Tensor([1, 256, 256, 0],"float32"), tuple(1,65536,2,), )
paddle.Tensor.reshape(Tensor([1, 256, 256, 3, 0],"float32"), tuple(256,256,3,3,), )
paddle.Tensor.reshape(Tensor([1, 256, 512, 0, 3],"float32"), tuple(256,512,3,3,), )
paddle.Tensor.reshape(Tensor([1, 256, 512, 3, 0],"float32"), tuple(256,512,3,3,), )
paddle.Tensor.reshape(Tensor([1, 256, 8, 0],"float32"), list[1,256,256,], )
paddle.Tensor.reshape(Tensor([1, 256, 8, 0],"float32"), list[1,256,512,], )
paddle.Tensor.reshape(Tensor([1, 257, 0, 64],"float32"), tuple(1,257,-1,), )
paddle.Tensor.reshape(Tensor([1, 257, 0],"float32"), tuple(1,257,16,-1,), )
paddle.Tensor.reshape(Tensor([1, 257, 16, 0],"float32"), tuple(1,257,-1,), )
paddle.Tensor.reshape(Tensor([1, 26, 0, 64],"float32"), list[1,26,512,], )
paddle.Tensor.reshape(Tensor([1, 26, 8, 0],"float32"), list[1,26,512,], )
paddle.Tensor.reshape(Tensor([1, 261, 0, 32],"float32"), list[1,261,256,], )
paddle.Tensor.reshape(Tensor([1, 261, 0],"float32"), list[1,261,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 261, 8, 0],"float32"), list[1,261,256,], )
paddle.Tensor.reshape(Tensor([1, 27, 0, 64],"float32"), list[1,27,512,], )
paddle.Tensor.reshape(Tensor([1, 27, 8, 0],"float32"), list[1,27,512,], )
paddle.Tensor.reshape(Tensor([1, 27648, 0],"float32"), list[-1,192,144,192,], )
paddle.Tensor.reshape(Tensor([1, 27648, 0],"float32"), tuple(-1,192,144,192,), )
paddle.Tensor.reshape(Tensor([1, 28, 0, 1],"float16"), list[1,4,7,4,7,1,], )
paddle.Tensor.reshape(Tensor([1, 28, 0, 1],"float32"), list[-1,4,7,3,7,1,], )
paddle.Tensor.reshape(Tensor([1, 28, 0, 1],"float32"), list[1,4,7,4,7,1,], )
paddle.Tensor.reshape(Tensor([1, 28, 0, 3],"float32"), tuple(1,784,3,), )
paddle.Tensor.reshape(Tensor([1, 28, 0, 64],"float32"), list[1,28,512,], )
paddle.Tensor.reshape(Tensor([1, 28, 21, 0],"float32"), list[-1,4,7,3,7,1,], )
paddle.Tensor.reshape(Tensor([1, 28, 28, 0],"float16"), list[1,4,7,4,7,1,], )
paddle.Tensor.reshape(Tensor([1, 28, 28, 0],"float32"), list[1,4,7,4,7,1,], )
paddle.Tensor.reshape(Tensor([1, 28, 28, 0],"float32"), tuple(1,784,3,), )
paddle.Tensor.reshape(Tensor([1, 28, 8, 0],"float32"), list[1,28,512,], )
paddle.Tensor.reshape(Tensor([1, 280, 0, 3],"float32"), tuple(1,98000,3,), )
paddle.Tensor.reshape(Tensor([1, 280, 350, 0],"float32"), tuple(1,98000,3,), )
paddle.Tensor.reshape(Tensor([1, 29, 0, 64],"float32"), list[1,29,512,], )
paddle.Tensor.reshape(Tensor([1, 29, 8, 0],"float32"), list[1,29,512,], )
paddle.Tensor.reshape(Tensor([1, 298, 0, 3],"float32"), tuple(1,108472,3,), )
paddle.Tensor.reshape(Tensor([1, 298, 364, 0],"float32"), tuple(1,108472,3,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 1, 1],"float32"), tuple(3,128,1,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 1, 1],"float32"), tuple(3,256,1,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 1, 1],"float32"), tuple(3,512,1,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 128],"float32"), tuple(-1,128,128,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 128],"float32"), tuple(1,3,128,128,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 16],"float32"), tuple(-1,16,16,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 16],"float32"), tuple(1,3,16,16,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 2, 8],"float32"), list[1,3,4,8,], )
paddle.Tensor.reshape(Tensor([1, 3, 0, 256],"float32"), tuple(1,3,256,256,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 3, 7, 768],"float32"), list[-1,21,21,768,], )
paddle.Tensor.reshape(Tensor([1, 3, 0, 32],"float32"), tuple(1,3,32,32,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 32],"float32"), tuple(-1,32,32,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 4],"float32"), tuple(1,3,4,4,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 4],"float32"), tuple(-1,4,4,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 64],"float32"), list[1,3,512,], )
paddle.Tensor.reshape(Tensor([1, 3, 0, 64],"float32"), tuple(1,3,64,64,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 64],"float32"), tuple(-1,64,64,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 7, 7, 768],"float32"), list[-1,7,7,768,], )
paddle.Tensor.reshape(Tensor([1, 3, 0, 8],"float32"), tuple(1,3,8,8,), )
paddle.Tensor.reshape(Tensor([1, 3, 0, 8],"float32"), tuple(-1,8,8,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 128, 0, 1],"float32"), tuple(3,128,1,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 128, 0],"float32"), tuple(-1,128,128,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 128, 0],"float32"), tuple(1,3,128,128,), )
paddle.Tensor.reshape(Tensor([1, 3, 128, 1, 0],"float32"), tuple(3,128,1,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 16, 0],"float32"), tuple(-1,16,16,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 16, 0],"float32"), tuple(1,3,16,16,), )
paddle.Tensor.reshape(Tensor([1, 3, 2, 0, 8],"float32"), list[1,3,4,8,], )
paddle.Tensor.reshape(Tensor([1, 3, 2, 2, 0],"float32"), list[1,3,4,8,], )
paddle.Tensor.reshape(Tensor([1, 3, 256, 0, 1],"float32"), tuple(3,256,1,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 256, 0],"float32"), tuple(1,3,256,256,), )
paddle.Tensor.reshape(Tensor([1, 3, 256, 1, 0],"float32"), tuple(3,256,1,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 3, 0, 7, 768],"float32"), list[-1,7,7,768,], )
paddle.Tensor.reshape(Tensor([1, 3, 3, 7, 0, 768],"float32"), list[-1,7,7,768,], )
paddle.Tensor.reshape(Tensor([1, 3, 3, 7, 7, 0],"float32"), list[-1,7,7,768,], )
paddle.Tensor.reshape(Tensor([1, 3, 32, 0],"float32"), tuple(1,3,32,32,), )
paddle.Tensor.reshape(Tensor([1, 3, 32, 0],"float32"), tuple(-1,32,32,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 4, 0],"float32"), tuple(1,3,4,4,), )
paddle.Tensor.reshape(Tensor([1, 3, 4, 0],"float32"), tuple(-1,4,4,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 512, 0, 1],"float32"), tuple(3,512,1,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 512, 1, 0],"float32"), tuple(3,512,1,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 64, 0],"float32"), tuple(1,3,64,64,), )
paddle.Tensor.reshape(Tensor([1, 3, 64, 0],"float32"), tuple(-1,64,64,1,), )
paddle.Tensor.reshape(Tensor([1, 3, 7, 0, 7, 768],"float32"), list[-1,21,21,768,], )
paddle.Tensor.reshape(Tensor([1, 3, 7, 3, 0, 768],"float32"), list[-1,21,21,768,], )
paddle.Tensor.reshape(Tensor([1, 3, 7, 3, 7, 0],"float32"), list[-1,21,21,768,], )
paddle.Tensor.reshape(Tensor([1, 3, 8, 0],"float32"), list[1,3,512,], )
paddle.Tensor.reshape(Tensor([1, 3, 8, 0],"float32"), tuple(1,3,8,8,), )
paddle.Tensor.reshape(Tensor([1, 3, 8, 0],"float32"), tuple(-1,8,8,1,), )
paddle.Tensor.reshape(Tensor([1, 30, 0, 4],"float32"), list[-1,900,4,], )
paddle.Tensor.reshape(Tensor([1, 30, 0, 49, 49],"float32"), list[-1,12,49,49,], )
paddle.Tensor.reshape(Tensor([1, 30, 0, 64],"float32"), list[1,30,512,], )
paddle.Tensor.reshape(Tensor([1, 30, 12, 0, 49],"float32"), list[-1,12,49,49,], )
paddle.Tensor.reshape(Tensor([1, 30, 12, 49, 0],"float32"), list[-1,12,49,49,], )
paddle.Tensor.reshape(Tensor([1, 30, 30, 0],"float32"), list[-1,900,4,], )
paddle.Tensor.reshape(Tensor([1, 30, 8, 0],"float32"), list[1,30,512,], )
paddle.Tensor.reshape(Tensor([1, 300, 0, 16],"float32"), list[1,300,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 300, 0],"float32"), list[-1,20,15,768,], )
paddle.Tensor.reshape(Tensor([1, 300, 0],"float32"), list[1,300,176,176,], )
paddle.Tensor.reshape(Tensor([1, 300, 0],"float32"), list[1,300,184,184,], )
paddle.Tensor.reshape(Tensor([1, 300, 0],"float32"), list[1,300,192,192,], )
paddle.Tensor.reshape(Tensor([1, 300, 0],"float32"), list[1,300,8,16,], )
paddle.Tensor.reshape(Tensor([1, 300, 0],"float32"), list[1,300,8,4,4,2,], )
paddle.Tensor.reshape(Tensor([1, 300, 0],"float32"), tuple(-1,20,15,768,), )
paddle.Tensor.reshape(Tensor([1, 300, 8, 0],"float32"), list[1,300,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 31, 0, 64],"float32"), list[1,31,512,], )
paddle.Tensor.reshape(Tensor([1, 31, 0],"float16"), list[31,64,], )
paddle.Tensor.reshape(Tensor([1, 31, 8, 0],"float32"), list[1,31,512,], )
paddle.Tensor.reshape(Tensor([1, 32, 0, 1],"float32"), list[1,8,4,8,4,1,], )
paddle.Tensor.reshape(Tensor([1, 32, 0, 15],"float32"), tuple(1,32,-1,), )
paddle.Tensor.reshape(Tensor([1, 32, 0, 16],"float32"), list[1,32,-1,], )
paddle.Tensor.reshape(Tensor([1, 32, 0, 3],"float32"), tuple(1,832,3,), )
paddle.Tensor.reshape(Tensor([1, 32, 0, 392, 392],"float16"), list[-1,6,392,392,], )
paddle.Tensor.reshape(Tensor([1, 32, 0, 392, 392],"float32"), list[-1,6,392,392,], )
paddle.Tensor.reshape(Tensor([1, 32, 0, 4],"float32"), list[-1,1024,4,], )
paddle.Tensor.reshape(Tensor([1, 32, 0, 64],"float32"), list[1,32,512,], )
paddle.Tensor.reshape(Tensor([1, 32, 0],"float32"), list[1,32,124,128,], )
paddle.Tensor.reshape(Tensor([1, 32, 0],"float32"), list[1,32,128,128,], )
paddle.Tensor.reshape(Tensor([1, 32, 0],"float32"), list[1,32,256,256,], )
paddle.Tensor.reshape(Tensor([1, 32, 15, 0],"float32"), list[1,32,-1,], )
paddle.Tensor.reshape(Tensor([1, 32, 15, 0],"float32"), tuple(1,32,-1,), )
paddle.Tensor.reshape(Tensor([1, 32, 16, 0],"float32"), list[1,32,-1,], )
paddle.Tensor.reshape(Tensor([1, 32, 26, 0],"float32"), tuple(1,832,3,), )
paddle.Tensor.reshape(Tensor([1, 32, 32, 0],"float32"), list[-1,1024,4,], )
paddle.Tensor.reshape(Tensor([1, 32, 32, 0],"float32"), list[1,8,4,8,4,1,], )
paddle.Tensor.reshape(Tensor([1, 32, 6, 0, 392],"float16"), list[-1,6,392,392,], )
paddle.Tensor.reshape(Tensor([1, 32, 6, 0, 392],"float32"), list[-1,6,392,392,], )
paddle.Tensor.reshape(Tensor([1, 32, 6, 392, 0],"float16"), list[-1,6,392,392,], )
paddle.Tensor.reshape(Tensor([1, 32, 6, 392, 0],"float32"), list[-1,6,392,392,], )
paddle.Tensor.reshape(Tensor([1, 32, 8, 0],"float32"), list[1,32,512,], )
paddle.Tensor.reshape(Tensor([1, 320, 0, 16],"float32"), list[1,320,-1,], )
paddle.Tensor.reshape(Tensor([1, 320, 0],"float32"), list[1,320,31,32,], )
paddle.Tensor.reshape(Tensor([1, 320, 0],"float32"), list[1,320,32,32,], )
paddle.Tensor.reshape(Tensor([1, 320, 15, 0],"float32"), list[1,320,-1,], )
paddle.Tensor.reshape(Tensor([1, 320, 16, 0],"float32"), list[1,320,-1,], )
paddle.Tensor.reshape(Tensor([1, 324, 0],"float32"), list[0,0,8,64,], )
paddle.Tensor.reshape(Tensor([1, 33, 0, 64],"float32"), list[1,33,512,], )
paddle.Tensor.reshape(Tensor([1, 33, 8, 0],"float32"), list[1,33,512,], )
paddle.Tensor.reshape(Tensor([1, 34, 0, 3],"float32"), tuple(1,1156,3,), )
paddle.Tensor.reshape(Tensor([1, 34, 0, 4],"float32"), list[-1,1156,4,], )
paddle.Tensor.reshape(Tensor([1, 34, 0, 64],"float32"), list[1,34,512,], )
paddle.Tensor.reshape(Tensor([1, 34, 34, 0],"float32"), list[-1,1156,4,], )
paddle.Tensor.reshape(Tensor([1, 34, 34, 0],"float32"), tuple(1,1156,3,), )
paddle.Tensor.reshape(Tensor([1, 34, 8, 0],"float32"), list[1,34,512,], )
paddle.Tensor.reshape(Tensor([1, 35, 0, 64],"float32"), list[1,35,512,], )
paddle.Tensor.reshape(Tensor([1, 35, 8, 0],"float32"), list[1,35,512,], )
paddle.Tensor.reshape(Tensor([1, 352, 0, 3],"float32"), tuple(1,143264,3,), )
paddle.Tensor.reshape(Tensor([1, 352, 407, 0],"float32"), tuple(1,143264,3,), )
paddle.Tensor.reshape(Tensor([1, 3598, 0],"float32"), list[-1,1,], )
paddle.Tensor.reshape(Tensor([1, 3598, 0],"float32"), list[-1,11,], )
paddle.Tensor.reshape(Tensor([1, 3598, 0],"float32"), list[-1,2,], )
paddle.Tensor.reshape(Tensor([1, 3598, 0],"float32"), list[-1,32,], )
paddle.Tensor.reshape(Tensor([1, 36, 0, 4],"float32"), list[-1,1296,4,], )
paddle.Tensor.reshape(Tensor([1, 36, 0, 64],"float32"), list[1,36,512,], )
paddle.Tensor.reshape(Tensor([1, 36, 36, 0],"float32"), list[-1,1296,4,], )
paddle.Tensor.reshape(Tensor([1, 36, 8, 0],"float32"), list[1,36,512,], )
paddle.Tensor.reshape(Tensor([1, 368, 0, 3],"float32"), tuple(1,153088,3,), )
paddle.Tensor.reshape(Tensor([1, 368, 416, 0],"float32"), tuple(1,153088,3,), )
paddle.Tensor.reshape(Tensor([1, 36828, 0, 2],"float32"), list[1,36828,1,5,1,2,], )
paddle.Tensor.reshape(Tensor([1, 36828, 0, 20],"float32"), list[1,36828,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 36828, 0],"float32"), list[1,36828,8,20,], )
paddle.Tensor.reshape(Tensor([1, 36828, 0],"float32"), list[1,36828,8,32,], )
paddle.Tensor.reshape(Tensor([1, 36828, 0],"float32"), list[1,36828,8,5,4,2,], )
paddle.Tensor.reshape(Tensor([1, 36828, 5, 0],"float32"), list[1,36828,1,5,1,2,], )
paddle.Tensor.reshape(Tensor([1, 36828, 8, 0],"float32"), list[1,36828,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 37, 0, 64],"float32"), list[1,37,512,], )
paddle.Tensor.reshape(Tensor([1, 37, 8, 0],"float32"), list[1,37,512,], )
paddle.Tensor.reshape(Tensor([1, 38, 0, 64],"float32"), list[1,38,512,], )
paddle.Tensor.reshape(Tensor([1, 38, 8, 0],"float32"), list[1,38,512,], )
paddle.Tensor.reshape(Tensor([1, 38367, 0, 2],"float32"), list[1,38367,1,5,1,2,], )
paddle.Tensor.reshape(Tensor([1, 38367, 0, 20],"float32"), list[1,38367,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 38367, 0],"float32"), list[1,38367,8,20,], )
paddle.Tensor.reshape(Tensor([1, 38367, 0],"float32"), list[1,38367,8,32,], )
paddle.Tensor.reshape(Tensor([1, 38367, 0],"float32"), list[1,38367,8,5,4,2,], )
paddle.Tensor.reshape(Tensor([1, 38367, 5, 0],"float32"), list[1,38367,1,5,1,2,], )
paddle.Tensor.reshape(Tensor([1, 38367, 8, 0],"float32"), list[1,38367,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 384, 0],"float32"), list[-1,384,23,23,], )
paddle.Tensor.reshape(Tensor([1, 385, 0, 32],"float32"), list[1,385,256,], )
paddle.Tensor.reshape(Tensor([1, 385, 0],"float32"), list[1,385,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 385, 8, 0],"float32"), list[1,385,256,], )
paddle.Tensor.reshape(Tensor([1, 39, 0, 64],"float32"), list[1,39,512,], )
paddle.Tensor.reshape(Tensor([1, 39, 8, 0],"float32"), list[1,39,512,], )
paddle.Tensor.reshape(Tensor([1, 391, 0, 3],"float32"), tuple(1,170476,3,), )
paddle.Tensor.reshape(Tensor([1, 391, 436, 0],"float32"), tuple(1,170476,3,), )
paddle.Tensor.reshape(Tensor([1, 3968, 0, 32],"float32"), list[1,3968,64,], )
paddle.Tensor.reshape(Tensor([1, 3968, 0, 64],"float32"), list[1,3968,128,], )
paddle.Tensor.reshape(Tensor([1, 3968, 0],"float32"), list[1,3968,2,32,], )
paddle.Tensor.reshape(Tensor([1, 3968, 0],"float32"), list[1,3968,2,64,], )
paddle.Tensor.reshape(Tensor([1, 3968, 0],"float32"), list[1,62,64,128,], )
paddle.Tensor.reshape(Tensor([1, 3968, 0],"float32"), list[1,62,64,64,], )
paddle.Tensor.reshape(Tensor([1, 3968, 2, 0],"float32"), list[1,3968,128,], )
paddle.Tensor.reshape(Tensor([1, 3968, 2, 0],"float32"), list[1,3968,64,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 12, 12, 768],"float32"), list[-1,12,12,768,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 144, 144],"float32"), list[-1,48,144,144,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 2],"float32"), list[1,-1,1,1,2,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 2],"float32"), list[1,-1,2,1,2,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 20],"float32"), list[-1,20,20,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 20],"float32"), list[4,20,20,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 20],"float32"), list[4,8,20,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 22],"float32"), list[4,20,-1,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 23],"float32"), list[4,1,-1,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 24],"float32"), list[4,1,-1,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 3, 12, 768],"float32"), list[-1,48,36,768,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 3],"float32"), tuple(1,16,3,), )
paddle.Tensor.reshape(Tensor([1, 4, 0, 4, 4, 1],"float32"), list[-1,4,4,1,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 4],"float32"), list[1,4,8,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 4],"float32"), list[1,8,-1,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 64],"float32"), list[1,4,512,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 8],"float16"), list[1,4,64,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 8],"float32"), list[-1,20,8,], )
paddle.Tensor.reshape(Tensor([1, 4, 0, 8],"float32"), list[4,20,8,], )
paddle.Tensor.reshape(Tensor([1, 4, 0],"float32"), list[0,0,1,4,], )
paddle.Tensor.reshape(Tensor([1, 4, 0],"float32"), list[0,0,2,4,], )
paddle.Tensor.reshape(Tensor([1, 4, 0],"float32"), list[4,1,20,], )
paddle.Tensor.reshape(Tensor([1, 4, 0],"float32"), list[4,5,], )
paddle.Tensor.reshape(Tensor([1, 4, 0],"float32"), tuple(1,-1,2,), )
paddle.Tensor.reshape(Tensor([1, 4, 0],"int64"), list[-1,20,], )
paddle.Tensor.reshape(Tensor([1, 4, 1, 0],"float32"), list[1,-1,1,1,2,], )
paddle.Tensor.reshape(Tensor([1, 4, 1, 0],"float32"), list[4,1,-1,], )
paddle.Tensor.reshape(Tensor([1, 4, 12, 0, 12, 768],"float32"), list[-1,48,36,768,], )
paddle.Tensor.reshape(Tensor([1, 4, 12, 3, 0, 768],"float32"), list[-1,48,36,768,], )
paddle.Tensor.reshape(Tensor([1, 4, 12, 3, 12, 0],"float32"), list[-1,48,36,768,], )
paddle.Tensor.reshape(Tensor([1, 4, 2, 0],"float32"), list[1,-1,2,1,2,], )
paddle.Tensor.reshape(Tensor([1, 4, 2, 0],"float32"), list[1,4,8,], )
paddle.Tensor.reshape(Tensor([1, 4, 2, 0],"float32"), list[1,8,-1,], )
paddle.Tensor.reshape(Tensor([1, 4, 20, 0],"float32"), list[-1,20,20,], )
paddle.Tensor.reshape(Tensor([1, 4, 20, 0],"float32"), list[-1,20,8,], )
paddle.Tensor.reshape(Tensor([1, 4, 20, 0],"float32"), list[4,20,-1,], )
paddle.Tensor.reshape(Tensor([1, 4, 20, 0],"float32"), list[4,20,20,], )
paddle.Tensor.reshape(Tensor([1, 4, 20, 0],"float32"), list[4,20,8,], )
paddle.Tensor.reshape(Tensor([1, 4, 3, 0, 12, 768],"float32"), list[-1,12,12,768,], )
paddle.Tensor.reshape(Tensor([1, 4, 3, 12, 0, 768],"float32"), list[-1,12,12,768,], )
paddle.Tensor.reshape(Tensor([1, 4, 3, 12, 12, 0],"float32"), list[-1,12,12,768,], )
paddle.Tensor.reshape(Tensor([1, 4, 4, 0, 4, 1],"float32"), list[-1,4,4,1,], )
paddle.Tensor.reshape(Tensor([1, 4, 4, 0],"float32"), tuple(1,16,3,), )
paddle.Tensor.reshape(Tensor([1, 4, 4, 4, 0, 1],"float32"), list[-1,4,4,1,], )
paddle.Tensor.reshape(Tensor([1, 4, 4, 4, 4, 0],"float32"), list[-1,4,4,1,], )
paddle.Tensor.reshape(Tensor([1, 4, 48, 0, 144],"float32"), list[-1,48,144,144,], )
paddle.Tensor.reshape(Tensor([1, 4, 48, 144, 0],"float32"), list[-1,48,144,144,], )
paddle.Tensor.reshape(Tensor([1, 4, 8, 0],"float16"), list[1,4,64,], )
paddle.Tensor.reshape(Tensor([1, 4, 8, 0],"float32"), list[1,4,512,], )
paddle.Tensor.reshape(Tensor([1, 4, 8, 0],"float32"), list[4,8,20,], )
paddle.Tensor.reshape(Tensor([1, 40, 0, 384],"float32"), list[-1,1200,384,], )
paddle.Tensor.reshape(Tensor([1, 40, 0, 4],"float32"), list[-1,1600,4,], )
paddle.Tensor.reshape(Tensor([1, 40, 0, 64],"float32"), list[1,40,512,], )
paddle.Tensor.reshape(Tensor([1, 40, 0, 768],"float32"), list[-1,1200,768,], )
paddle.Tensor.reshape(Tensor([1, 40, 30, 0],"float32"), list[-1,1200,384,], )
paddle.Tensor.reshape(Tensor([1, 40, 30, 0],"float32"), list[-1,1200,768,], )
paddle.Tensor.reshape(Tensor([1, 40, 40, 0],"float32"), list[-1,1600,4,], )
paddle.Tensor.reshape(Tensor([1, 40, 8, 0],"float32"), list[1,40,512,], )
paddle.Tensor.reshape(Tensor([1, 400, 0, 12],"float32"), list[1,400,8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 400, 0, 3],"float32"), tuple(1,120000,3,), )
paddle.Tensor.reshape(Tensor([1, 400, 0],"float32"), list[0,0,8,64,], )
paddle.Tensor.reshape(Tensor([1, 400, 0],"float32"), list[1,400,176,176,], )
paddle.Tensor.reshape(Tensor([1, 400, 0],"float32"), list[1,400,184,184,], )
paddle.Tensor.reshape(Tensor([1, 400, 0],"float32"), list[1,400,192,192,], )
paddle.Tensor.reshape(Tensor([1, 400, 0],"float32"), list[1,400,8,12,], )
paddle.Tensor.reshape(Tensor([1, 400, 0],"float32"), list[1,400,8,3,4,2,], )
paddle.Tensor.reshape(Tensor([1, 400, 300, 0],"float32"), tuple(1,120000,3,), )
paddle.Tensor.reshape(Tensor([1, 400, 8, 0],"float32"), list[1,400,8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 4096, 0, 128],"float32"), list[1,4096,4096,], )
paddle.Tensor.reshape(Tensor([1, 4096, 0, 16],"float32"), tuple(8,512,16,16,), )
paddle.Tensor.reshape(Tensor([1, 4096, 0, 17],"float32"), tuple(8,512,17,17,), )
paddle.Tensor.reshape(Tensor([1, 4096, 0, 32],"float32"), list[1,4096,160,], )
paddle.Tensor.reshape(Tensor([1, 4096, 0, 32],"float32"), list[1,4096,64,], )
paddle.Tensor.reshape(Tensor([1, 4096, 0, 32],"float32"), tuple(8,512,32,32,), )
paddle.Tensor.reshape(Tensor([1, 4096, 0, 33],"float32"), tuple(8,512,33,33,), )
paddle.Tensor.reshape(Tensor([1, 4096, 0, 4],"float32"), tuple(8,512,4,4,), )
paddle.Tensor.reshape(Tensor([1, 4096, 0, 64],"float32"), list[1,4096,128,], )
paddle.Tensor.reshape(Tensor([1, 4096, 0, 64],"float32"), tuple(8,512,64,64,), )
paddle.Tensor.reshape(Tensor([1, 4096, 0, 65],"float32"), tuple(8,512,65,65,), )
paddle.Tensor.reshape(Tensor([1, 4096, 0, 8],"float32"), tuple(8,512,8,8,), )
paddle.Tensor.reshape(Tensor([1, 4096, 0, 9],"float32"), tuple(8,512,9,9,), )
paddle.Tensor.reshape(Tensor([1, 4096, 0],"float32"), list[1,4096,2,32,], )
paddle.Tensor.reshape(Tensor([1, 4096, 0],"float32"), list[1,4096,2,64,], )
paddle.Tensor.reshape(Tensor([1, 4096, 0],"float32"), list[1,4096,5,32,], )
paddle.Tensor.reshape(Tensor([1, 4096, 0],"float32"), list[1,64,64,128,], )
paddle.Tensor.reshape(Tensor([1, 4096, 0],"float32"), list[1,64,64,160,], )
paddle.Tensor.reshape(Tensor([1, 4096, 0],"float32"), list[1,64,64,64,], )
paddle.Tensor.reshape(Tensor([1, 4096, 0],"float32"), shape=list[0,0,32,128,], )
paddle.Tensor.reshape(Tensor([1, 4096, 0],"float32"), tuple(1,4096,1,128,), )
paddle.Tensor.reshape(Tensor([1, 4096, 0],"float32"), tuple(1,4096,1,64,), )
paddle.Tensor.reshape(Tensor([1, 4096, 0],"float32"), tuple(1,64,64,2,), )
paddle.Tensor.reshape(Tensor([1, 4096, 16, 0],"float32"), tuple(8,512,16,16,), )
paddle.Tensor.reshape(Tensor([1, 4096, 17, 0],"float32"), tuple(8,512,17,17,), )
paddle.Tensor.reshape(Tensor([1, 4096, 2, 0],"float32"), list[1,4096,128,], )
paddle.Tensor.reshape(Tensor([1, 4096, 2, 0],"float32"), list[1,4096,64,], )
paddle.Tensor.reshape(Tensor([1, 4096, 32, 0],"float32"), list[1,4096,4096,], )
paddle.Tensor.reshape(Tensor([1, 4096, 32, 0],"float32"), tuple(8,512,32,32,), )
paddle.Tensor.reshape(Tensor([1, 4096, 33, 0],"float32"), tuple(8,512,33,33,), )
paddle.Tensor.reshape(Tensor([1, 4096, 4, 0],"float32"), tuple(8,512,4,4,), )
paddle.Tensor.reshape(Tensor([1, 4096, 5, 0],"float32"), list[1,4096,160,], )
paddle.Tensor.reshape(Tensor([1, 4096, 64, 0],"float32"), tuple(8,512,64,64,), )
paddle.Tensor.reshape(Tensor([1, 4096, 65, 0],"float32"), tuple(8,512,65,65,), )
paddle.Tensor.reshape(Tensor([1, 4096, 8, 0],"float32"), tuple(8,512,8,8,), )
paddle.Tensor.reshape(Tensor([1, 4096, 9, 0],"float32"), tuple(8,512,9,9,), )
paddle.Tensor.reshape(Tensor([1, 41, 0, 64],"float32"), list[1,41,512,], )
paddle.Tensor.reshape(Tensor([1, 41, 8, 0],"float32"), list[1,41,512,], )
paddle.Tensor.reshape(Tensor([1, 414, 0, 49, 49],"float32"), list[-1,3,49,49,], )
paddle.Tensor.reshape(Tensor([1, 414, 3, 0, 49],"float32"), list[-1,3,49,49,], )
paddle.Tensor.reshape(Tensor([1, 414, 3, 49, 0],"float32"), list[-1,3,49,49,], )
paddle.Tensor.reshape(Tensor([1, 42, 0, 1],"float32"), list[-1,6,7,5,7,1,], )
paddle.Tensor.reshape(Tensor([1, 42, 0, 384],"float32"), list[-1,6,7,5,7,384,], )
paddle.Tensor.reshape(Tensor([1, 42, 0, 64],"float32"), list[1,42,512,], )
paddle.Tensor.reshape(Tensor([1, 42, 35, 0],"float32"), list[-1,6,7,5,7,1,], )
paddle.Tensor.reshape(Tensor([1, 42, 35, 0],"float32"), list[-1,6,7,5,7,384,], )
paddle.Tensor.reshape(Tensor([1, 42, 8, 0],"float32"), list[1,42,512,], )
paddle.Tensor.reshape(Tensor([1, 43, 0, 64],"float32"), list[1,43,512,], )
paddle.Tensor.reshape(Tensor([1, 43, 8, 0],"float32"), list[1,43,512,], )
paddle.Tensor.reshape(Tensor([1, 430, 0, 3],"float32"), tuple(1,146200,3,), )
paddle.Tensor.reshape(Tensor([1, 430, 340, 0],"float32"), tuple(1,146200,3,), )
paddle.Tensor.reshape(Tensor([1, 432, 0],"float32"), list[-1,24,18,1536,], )
paddle.Tensor.reshape(Tensor([1, 432, 0],"float32"), tuple(-1,24,18,1536,), )
paddle.Tensor.reshape(Tensor([1, 434, 0, 3],"float32"), tuple(1,150164,3,), )
paddle.Tensor.reshape(Tensor([1, 434, 346, 0],"float32"), tuple(1,150164,3,), )
paddle.Tensor.reshape(Tensor([1, 44, 0, 4],"float32"), list[-1,1936,4,], )
paddle.Tensor.reshape(Tensor([1, 44, 0, 64],"float32"), list[1,44,512,], )
paddle.Tensor.reshape(Tensor([1, 44, 44, 0],"float32"), list[-1,1936,4,], )
paddle.Tensor.reshape(Tensor([1, 44, 8, 0],"float32"), list[1,44,512,], )
paddle.Tensor.reshape(Tensor([1, 45, 0, 64],"float32"), list[1,45,512,], )
paddle.Tensor.reshape(Tensor([1, 45, 8, 0],"float32"), list[1,45,512,], )
paddle.Tensor.reshape(Tensor([1, 46, 0, 4],"float32"), list[-1,2116,4,], )
paddle.Tensor.reshape(Tensor([1, 46, 0, 64],"float32"), list[1,46,512,], )
paddle.Tensor.reshape(Tensor([1, 46, 46, 0],"float32"), list[-1,2116,4,], )
paddle.Tensor.reshape(Tensor([1, 46, 8, 0],"float32"), list[1,46,512,], )
paddle.Tensor.reshape(Tensor([1, 466, 0, 3],"float32"), tuple(1,179876,3,), )
paddle.Tensor.reshape(Tensor([1, 466, 386, 0],"float32"), tuple(1,179876,3,), )
paddle.Tensor.reshape(Tensor([1, 47, 0, 64],"float32"), list[1,47,512,], )
paddle.Tensor.reshape(Tensor([1, 47, 8, 0],"float32"), list[1,47,512,], )
paddle.Tensor.reshape(Tensor([1, 477, 0, 3],"float32"), tuple(1,191277,3,), )
paddle.Tensor.reshape(Tensor([1, 477, 401, 0],"float32"), tuple(1,191277,3,), )
paddle.Tensor.reshape(Tensor([1, 48, 0, 1],"float32"), list[-1,4,12,3,12,1,], )
paddle.Tensor.reshape(Tensor([1, 48, 0, 1],"float32"), list[1,4,12,4,12,1,], )
paddle.Tensor.reshape(Tensor([1, 48, 0, 144, 144],"float32"), list[-1,12,144,144,], )
paddle.Tensor.reshape(Tensor([1, 48, 0, 1536],"float32"), list[-1,1728,1536,], )
paddle.Tensor.reshape(Tensor([1, 48, 0, 4],"float32"), list[-1,2304,4,], )
paddle.Tensor.reshape(Tensor([1, 48, 0, 64],"float32"), list[1,48,512,], )
paddle.Tensor.reshape(Tensor([1, 48, 0, 768],"float32"), list[-1,1728,768,], )
paddle.Tensor.reshape(Tensor([1, 48, 0, 768],"float32"), list[-1,4,12,3,12,768,], )
paddle.Tensor.reshape(Tensor([1, 48, 12, 0, 144],"float32"), list[-1,12,144,144,], )
paddle.Tensor.reshape(Tensor([1, 48, 12, 144, 0],"float32"), list[-1,12,144,144,], )
paddle.Tensor.reshape(Tensor([1, 48, 36, 0],"float32"), list[-1,1728,1536,], )
paddle.Tensor.reshape(Tensor([1, 48, 36, 0],"float32"), list[-1,1728,768,], )
paddle.Tensor.reshape(Tensor([1, 48, 36, 0],"float32"), list[-1,4,12,3,12,1,], )
paddle.Tensor.reshape(Tensor([1, 48, 36, 0],"float32"), list[-1,4,12,3,12,768,], )
paddle.Tensor.reshape(Tensor([1, 48, 48, 0],"float32"), list[-1,2304,4,], )
paddle.Tensor.reshape(Tensor([1, 48, 48, 0],"float32"), list[1,4,12,4,12,1,], )
paddle.Tensor.reshape(Tensor([1, 48, 8, 0],"float32"), list[1,48,512,], )
paddle.Tensor.reshape(Tensor([1, 4800, 0],"float32"), list[-1,80,60,192,], )
paddle.Tensor.reshape(Tensor([1, 4800, 0],"float32"), tuple(-1,80,60,192,), )
paddle.Tensor.reshape(Tensor([1, 49, 0, 64],"float32"), list[1,49,512,], )
paddle.Tensor.reshape(Tensor([1, 49, 8, 0],"float32"), list[1,49,512,], )
paddle.Tensor.reshape(Tensor([1, 492, 0, 12],"float32"), list[1,492,8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 492, 0],"float32"), list[1,492,8,12,], )
paddle.Tensor.reshape(Tensor([1, 492, 0],"float32"), list[1,492,8,3,4,2,], )
paddle.Tensor.reshape(Tensor([1, 492, 8, 0],"float32"), list[1,492,8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 496, 0, 12],"float32"), list[1,496,8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 496, 0],"float32"), list[1,496,8,12,], )
paddle.Tensor.reshape(Tensor([1, 496, 0],"float32"), list[1,496,8,3,4,2,], )
paddle.Tensor.reshape(Tensor([1, 496, 8, 0],"float32"), list[1,496,8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 5, 0, 2],"float32"), tuple(1,1,-1,2,), )
paddle.Tensor.reshape(Tensor([1, 5, 0, 5],"float32"), list[125,1,], )
paddle.Tensor.reshape(Tensor([1, 5, 0, 5],"float64"), list[1,125,], )
paddle.Tensor.reshape(Tensor([1, 5, 0, 5],"float64"), list[1,25,], )
paddle.Tensor.reshape(Tensor([1, 5, 0, 5],"float64"), list[125,1,], )
paddle.Tensor.reshape(Tensor([1, 5, 0, 5],"float64"), list[25,1,], )
paddle.Tensor.reshape(Tensor([1, 5, 0, 5],"float64"), list[25,5,], )
paddle.Tensor.reshape(Tensor([1, 5, 0, 5],"float64"), list[5,25,], )
paddle.Tensor.reshape(Tensor([1, 5, 0, 5],"float64"), list[5,5,], )
paddle.Tensor.reshape(Tensor([1, 5, 0, 64],"float32"), list[1,5,512,], )
paddle.Tensor.reshape(Tensor([1, 5, 0, 96],"float16"), list[1,5,768,], )
paddle.Tensor.reshape(Tensor([1, 5, 0, 96],"float32"), list[1,5,768,], )
paddle.Tensor.reshape(Tensor([1, 5, 0],"float64"), list[1,1,5,1,], )
paddle.Tensor.reshape(Tensor([1, 5, 0],"float64"), list[1,1,5,5,], )
paddle.Tensor.reshape(Tensor([1, 5, 0],"float64"), list[1,5,1,1,], )
paddle.Tensor.reshape(Tensor([1, 5, 0],"float64"), list[1,5,1,5,], )
paddle.Tensor.reshape(Tensor([1, 5, 0],"float64"), list[1,5,5,1,], )
paddle.Tensor.reshape(Tensor([1, 5, 0],"int64"), shape=tuple(-1,20,), )
paddle.Tensor.reshape(Tensor([1, 5, 0],"int64"), tuple(-1,20,), )
paddle.Tensor.reshape(Tensor([1, 5, 1, 0],"float64"), list[1,25,], )
paddle.Tensor.reshape(Tensor([1, 5, 1, 0],"float64"), list[25,1,], )
paddle.Tensor.reshape(Tensor([1, 5, 1, 0],"float64"), list[5,5,], )
paddle.Tensor.reshape(Tensor([1, 5, 5, 0],"float32"), list[125,1,], )
paddle.Tensor.reshape(Tensor([1, 5, 5, 0],"float32"), tuple(1,1,-1,2,), )
paddle.Tensor.reshape(Tensor([1, 5, 5, 0],"float64"), list[1,125,], )
paddle.Tensor.reshape(Tensor([1, 5, 5, 0],"float64"), list[125,1,], )
paddle.Tensor.reshape(Tensor([1, 5, 5, 0],"float64"), list[25,5,], )
paddle.Tensor.reshape(Tensor([1, 5, 5, 0],"float64"), list[5,25,], )
paddle.Tensor.reshape(Tensor([1, 5, 8, 0],"float16"), list[1,5,768,], )
paddle.Tensor.reshape(Tensor([1, 5, 8, 0],"float32"), list[1,5,512,], )
paddle.Tensor.reshape(Tensor([1, 5, 8, 0],"float32"), list[1,5,768,], )
paddle.Tensor.reshape(Tensor([1, 50, 0, 1],"float32"), list[1,10,5,34,5,1,], )
paddle.Tensor.reshape(Tensor([1, 50, 0, 64],"float32"), list[1,50,512,], )
paddle.Tensor.reshape(Tensor([1, 50, 170, 0],"float32"), list[1,10,5,34,5,1,], )
paddle.Tensor.reshape(Tensor([1, 50, 8, 0],"float32"), list[1,50,512,], )
paddle.Tensor.reshape(Tensor([1, 500, 0, 12],"float32"), list[1,500,8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 500, 0],"float32"), list[1,500,8,12,], )
paddle.Tensor.reshape(Tensor([1, 500, 0],"float32"), list[1,500,8,3,4,2,], )
paddle.Tensor.reshape(Tensor([1, 500, 8, 0],"float32"), list[1,500,8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 51, 0, 64],"float32"), list[1,51,512,], )
paddle.Tensor.reshape(Tensor([1, 51, 8, 0],"float32"), list[1,51,512,], )
paddle.Tensor.reshape(Tensor([1, 512, 0, 1],"float32"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([1, 512, 0, 16],"float32"), tuple(1,512,16,16,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 17],"float32"), tuple(-1,17,17,1,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 17],"float32"), tuple(1,512,17,17,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 256],"float32"), tuple(4,128,256,256,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 257],"float32"), tuple(4,128,257,257,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 3, 3],"float32"), tuple(512,256,3,3,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 3, 3],"float32"), tuple(512,512,3,3,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 32],"float32"), tuple(1,512,32,32,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 33],"float32"), tuple(-1,33,33,1,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 33],"float32"), tuple(1,512,33,33,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 4],"float32"), tuple(1,512,4,4,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 64],"float32"), tuple(1,512,64,64,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 65],"float32"), tuple(1,512,65,65,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 65],"float32"), tuple(-1,65,65,1,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 8],"float32"), tuple(1,512,8,8,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 9],"float32"), tuple(1,512,9,9,), )
paddle.Tensor.reshape(Tensor([1, 512, 0, 9],"float32"), tuple(-1,9,9,1,), )
paddle.Tensor.reshape(Tensor([1, 512, 0],"float32"), list[-1,512,18,18,], )
paddle.Tensor.reshape(Tensor([1, 512, 0],"float32"), list[-1,512,20,20,], )
paddle.Tensor.reshape(Tensor([1, 512, 0],"float32"), list[-1,512,22,22,], )
paddle.Tensor.reshape(Tensor([1, 512, 0],"float32"), list[1,512,62,64,], )
paddle.Tensor.reshape(Tensor([1, 512, 0],"float32"), list[1,512,64,64,], )
paddle.Tensor.reshape(Tensor([1, 512, 1, 0],"float32"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([1, 512, 16, 0],"float32"), tuple(1,512,16,16,), )
paddle.Tensor.reshape(Tensor([1, 512, 17, 0],"float32"), tuple(-1,17,17,1,), )
paddle.Tensor.reshape(Tensor([1, 512, 17, 0],"float32"), tuple(1,512,17,17,), )
paddle.Tensor.reshape(Tensor([1, 512, 256, 0, 3],"float32"), tuple(512,256,3,3,), )
paddle.Tensor.reshape(Tensor([1, 512, 256, 0],"float32"), tuple(4,128,256,256,), )
paddle.Tensor.reshape(Tensor([1, 512, 256, 3, 0],"float32"), tuple(512,256,3,3,), )
paddle.Tensor.reshape(Tensor([1, 512, 257, 0],"float32"), tuple(4,128,257,257,), )
paddle.Tensor.reshape(Tensor([1, 512, 32, 0],"float32"), tuple(1,512,32,32,), )
paddle.Tensor.reshape(Tensor([1, 512, 33, 0],"float32"), tuple(-1,33,33,1,), )
paddle.Tensor.reshape(Tensor([1, 512, 33, 0],"float32"), tuple(1,512,33,33,), )
paddle.Tensor.reshape(Tensor([1, 512, 4, 0],"float32"), tuple(1,512,4,4,), )
paddle.Tensor.reshape(Tensor([1, 512, 512, 0, 3],"float32"), tuple(512,512,3,3,), )
paddle.Tensor.reshape(Tensor([1, 512, 512, 3, 0],"float32"), tuple(512,512,3,3,), )
paddle.Tensor.reshape(Tensor([1, 512, 64, 0],"float32"), tuple(1,512,64,64,), )
paddle.Tensor.reshape(Tensor([1, 512, 65, 0],"float32"), tuple(1,512,65,65,), )
paddle.Tensor.reshape(Tensor([1, 512, 65, 0],"float32"), tuple(-1,65,65,1,), )
paddle.Tensor.reshape(Tensor([1, 512, 8, 0],"float32"), tuple(1,512,8,8,), )
paddle.Tensor.reshape(Tensor([1, 512, 9, 0],"float32"), tuple(1,512,9,9,), )
paddle.Tensor.reshape(Tensor([1, 512, 9, 0],"float32"), tuple(-1,9,9,1,), )
paddle.Tensor.reshape(Tensor([1, 52, 0, 64],"float32"), list[1,52,512,], )
paddle.Tensor.reshape(Tensor([1, 52, 8, 0],"float32"), list[1,52,512,], )
paddle.Tensor.reshape(Tensor([1, 529, 0],"float32"), list[0,0,8,48,], )
paddle.Tensor.reshape(Tensor([1, 53, 0, 64],"float32"), list[1,53,512,], )
paddle.Tensor.reshape(Tensor([1, 53, 8, 0],"float32"), list[1,53,512,], )
paddle.Tensor.reshape(Tensor([1, 54, 0, 64],"float32"), list[1,54,512,], )
paddle.Tensor.reshape(Tensor([1, 54, 8, 0],"float32"), list[1,54,512,], )
paddle.Tensor.reshape(Tensor([1, 55, 0, 64],"float32"), list[1,55,512,], )
paddle.Tensor.reshape(Tensor([1, 55, 8, 0],"float32"), list[1,55,512,], )
paddle.Tensor.reshape(Tensor([1, 56, 0, 1],"float16"), list[1,8,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 56, 0, 1],"float32"), list[-1,8,7,6,7,1,], )
paddle.Tensor.reshape(Tensor([1, 56, 0, 1],"float32"), list[1,8,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 56, 0, 64],"float32"), list[1,56,512,], )
paddle.Tensor.reshape(Tensor([1, 56, 42, 0],"float32"), list[-1,8,7,6,7,1,], )
paddle.Tensor.reshape(Tensor([1, 56, 56, 0],"float16"), list[1,8,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 56, 56, 0],"float32"), list[1,8,7,8,7,1,], )
paddle.Tensor.reshape(Tensor([1, 56, 8, 0],"float32"), list[1,56,512,], )
paddle.Tensor.reshape(Tensor([1, 57, 0, 64],"float32"), list[1,57,512,], )
paddle.Tensor.reshape(Tensor([1, 57, 8, 0],"float32"), list[1,57,512,], )
paddle.Tensor.reshape(Tensor([1, 5776, 0],"float32"), tuple(1,76,76,2,), )
paddle.Tensor.reshape(Tensor([1, 58, 0, 64],"float32"), list[1,58,512,], )
paddle.Tensor.reshape(Tensor([1, 58, 0, 8],"float32"), list[1,58,16,], )
paddle.Tensor.reshape(Tensor([1, 58, 0, 8],"float32"), list[1,58,64,], )
paddle.Tensor.reshape(Tensor([1, 58, 0],"float32"), list[1,58,2,3,8,], )
paddle.Tensor.reshape(Tensor([1, 58, 0],"float32"), list[1,58,8,8,], )
paddle.Tensor.reshape(Tensor([1, 58, 0],"float32"), list[-1,65024,], )
paddle.Tensor.reshape(Tensor([1, 58, 2, 0],"float32"), list[1,58,16,], )
paddle.Tensor.reshape(Tensor([1, 58, 8, 0],"float32"), list[1,58,512,], )
paddle.Tensor.reshape(Tensor([1, 58, 8, 0],"float32"), list[1,58,64,], )
paddle.Tensor.reshape(Tensor([1, 59, 0, 64],"float32"), list[1,59,512,], )
paddle.Tensor.reshape(Tensor([1, 59, 8, 0],"float32"), list[1,59,512,], )
paddle.Tensor.reshape(Tensor([1, 6, 0, 4],"float32"), list[1,12,-1,], )
paddle.Tensor.reshape(Tensor([1, 6, 0, 4],"float32"), list[1,6,8,], )
paddle.Tensor.reshape(Tensor([1, 6, 0, 5, 7, 384],"float32"), list[-1,42,35,384,], )
paddle.Tensor.reshape(Tensor([1, 6, 0, 6, 3],"float32"), tuple(-1,3,), )
paddle.Tensor.reshape(Tensor([1, 6, 0, 64],"float32"), list[1,6,512,], )
paddle.Tensor.reshape(Tensor([1, 6, 0, 7, 7, 384],"float32"), list[-1,7,7,384,], )
paddle.Tensor.reshape(Tensor([1, 6, 2, 0],"float32"), list[1,12,-1,], )
paddle.Tensor.reshape(Tensor([1, 6, 2, 0],"float32"), list[1,6,8,], )
paddle.Tensor.reshape(Tensor([1, 6, 5, 0, 7, 384],"float32"), list[-1,7,7,384,], )
paddle.Tensor.reshape(Tensor([1, 6, 5, 7, 0, 384],"float32"), list[-1,7,7,384,], )
paddle.Tensor.reshape(Tensor([1, 6, 5, 7, 7, 0],"float32"), list[-1,7,7,384,], )
paddle.Tensor.reshape(Tensor([1, 6, 6, 0, 3],"float32"), tuple(-1,3,), )
paddle.Tensor.reshape(Tensor([1, 6, 6, 6, 0],"float32"), tuple(-1,3,), )
paddle.Tensor.reshape(Tensor([1, 6, 7, 0, 7, 384],"float32"), list[-1,42,35,384,], )
paddle.Tensor.reshape(Tensor([1, 6, 7, 5, 0, 384],"float32"), list[-1,42,35,384,], )
paddle.Tensor.reshape(Tensor([1, 6, 7, 5, 7, 0],"float32"), list[-1,42,35,384,], )
paddle.Tensor.reshape(Tensor([1, 6, 8, 0],"float32"), list[1,6,512,], )
paddle.Tensor.reshape(Tensor([1, 60, 0, 4],"float32"), list[-1,3600,4,], )
paddle.Tensor.reshape(Tensor([1, 60, 0, 64],"float32"), list[1,60,512,], )
paddle.Tensor.reshape(Tensor([1, 60, 0, 64],"float32"), list[60,-1,64,], )
paddle.Tensor.reshape(Tensor([1, 60, 10, 0],"float32"), list[60,-1,64,], )
paddle.Tensor.reshape(Tensor([1, 60, 2, 0],"float32"), list[60,-1,64,], )
paddle.Tensor.reshape(Tensor([1, 60, 60, 0],"float32"), list[-1,3600,4,], )
paddle.Tensor.reshape(Tensor([1, 60, 8, 0],"float32"), list[1,60,512,], )
paddle.Tensor.reshape(Tensor([1, 61, 0, 32],"float32"), list[1,61,256,], )
paddle.Tensor.reshape(Tensor([1, 61, 0, 64],"float32"), list[1,61,512,], )
paddle.Tensor.reshape(Tensor([1, 61, 0],"float32"), list[1,61,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 61, 8, 0],"float32"), list[1,61,256,], )
paddle.Tensor.reshape(Tensor([1, 61, 8, 0],"float32"), list[1,61,512,], )
paddle.Tensor.reshape(Tensor([1, 62, 0, 64],"float32"), list[1,62,512,], )
paddle.Tensor.reshape(Tensor([1, 62, 8, 0],"float32"), list[1,62,512,], )
paddle.Tensor.reshape(Tensor([1, 63, 0, 64],"float32"), list[1,63,512,], )
paddle.Tensor.reshape(Tensor([1, 63, 8, 0],"float32"), list[1,63,512,], )
paddle.Tensor.reshape(Tensor([1, 6380, 0, 16],"float32"), list[1,6380,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 6380, 0, 2],"float32"), list[1,6380,1,4,1,2,], )
paddle.Tensor.reshape(Tensor([1, 6380, 0],"float32"), list[1,6380,8,16,], )
paddle.Tensor.reshape(Tensor([1, 6380, 0],"float32"), list[1,6380,8,32,], )
paddle.Tensor.reshape(Tensor([1, 6380, 0],"float32"), list[1,6380,8,4,4,2,], )
paddle.Tensor.reshape(Tensor([1, 6380, 4, 0],"float32"), list[1,6380,1,4,1,2,], )
paddle.Tensor.reshape(Tensor([1, 6380, 8, 0],"float32"), list[1,6380,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 64, 0, 16],"float32"), list[1,64,-1,], )
paddle.Tensor.reshape(Tensor([1, 64, 0, 3],"float32"), tuple(1,4096,3,), )
paddle.Tensor.reshape(Tensor([1, 64, 0, 4],"float32"), list[-1,4096,4,], )
paddle.Tensor.reshape(Tensor([1, 64, 0, 64],"float32"), list[1,64,512,], )
paddle.Tensor.reshape(Tensor([1, 64, 0],"float32"), list[1,64,124,128,], )
paddle.Tensor.reshape(Tensor([1, 64, 0],"float32"), list[1,64,128,128,], )
paddle.Tensor.reshape(Tensor([1, 64, 0],"float32"), list[1,64,62,64,], )
paddle.Tensor.reshape(Tensor([1, 64, 0],"float32"), list[1,64,64,64,], )
paddle.Tensor.reshape(Tensor([1, 64, 0],"float32"), tuple(1,8,8,2,), )
paddle.Tensor.reshape(Tensor([1, 64, 15, 0],"float32"), list[1,64,-1,], )
paddle.Tensor.reshape(Tensor([1, 64, 16, 0],"float32"), list[1,64,-1,], )
paddle.Tensor.reshape(Tensor([1, 64, 64, 0],"float32"), list[-1,4096,4,], )
paddle.Tensor.reshape(Tensor([1, 64, 64, 0],"float32"), tuple(1,4096,3,), )
paddle.Tensor.reshape(Tensor([1, 64, 8, 0],"float32"), list[1,64,512,], )
paddle.Tensor.reshape(Tensor([1, 640, 0],"float32"), list[1,640,31,32,], )
paddle.Tensor.reshape(Tensor([1, 640, 0],"float32"), list[1,640,32,32,], )
paddle.Tensor.reshape(Tensor([1, 640, 0],"float32"), list[1,640,64,64,], )
paddle.Tensor.reshape(Tensor([1, 65, 0, 32],"float32"), list[1,65,256,], )
paddle.Tensor.reshape(Tensor([1, 65, 0, 64],"float32"), list[1,65,512,], )
paddle.Tensor.reshape(Tensor([1, 65, 0],"float32"), list[1,65,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 65, 8, 0],"float32"), list[1,65,256,], )
paddle.Tensor.reshape(Tensor([1, 65, 8, 0],"float32"), list[1,65,512,], )
paddle.Tensor.reshape(Tensor([1, 65536, 0, 1],"float32"), tuple(1,-1,1,2,), )
paddle.Tensor.reshape(Tensor([1, 65536, 0, 32],"float32"), list[1,65536,32,], )
paddle.Tensor.reshape(Tensor([1, 65536, 0],"float32"), list[1,256,256,32,], )
paddle.Tensor.reshape(Tensor([1, 65536, 0],"float32"), list[1,65536,1,32,], )
paddle.Tensor.reshape(Tensor([1, 65536, 1, 0],"float32"), list[1,65536,32,], )
paddle.Tensor.reshape(Tensor([1, 65536, 2, 0],"float32"), tuple(1,-1,1,2,), )
paddle.Tensor.reshape(Tensor([1, 66, 0, 64],"float32"), list[1,66,512,], )
paddle.Tensor.reshape(Tensor([1, 66, 8, 0],"float32"), list[1,66,512,], )
paddle.Tensor.reshape(Tensor([1, 67, 0, 64],"float32"), list[1,67,512,], )
paddle.Tensor.reshape(Tensor([1, 67, 8, 0],"float32"), list[1,67,512,], )
paddle.Tensor.reshape(Tensor([1, 68, 0, 4],"float32"), list[-1,4624,4,], )
paddle.Tensor.reshape(Tensor([1, 68, 0, 64],"float32"), list[1,68,512,], )
paddle.Tensor.reshape(Tensor([1, 68, 68, 0],"float32"), list[-1,4624,4,], )
paddle.Tensor.reshape(Tensor([1, 68, 8, 0],"float32"), list[1,68,512,], )
paddle.Tensor.reshape(Tensor([1, 6804, 0],"float32"), list[1,6804,8,32,], )
paddle.Tensor.reshape(Tensor([1, 69, 0, 32],"float32"), list[1,69,256,], )
paddle.Tensor.reshape(Tensor([1, 69, 0, 64],"float32"), list[1,69,512,], )
paddle.Tensor.reshape(Tensor([1, 69, 0],"float32"), list[1,69,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 69, 8, 0],"float32"), list[1,69,256,], )
paddle.Tensor.reshape(Tensor([1, 69, 8, 0],"float32"), list[1,69,512,], )
paddle.Tensor.reshape(Tensor([1, 6912, 0],"float32"), list[-1,96,72,384,], )
paddle.Tensor.reshape(Tensor([1, 6912, 0],"float32"), tuple(-1,96,72,384,), )
paddle.Tensor.reshape(Tensor([1, 7, 0, 1],"float16"), list[1,1,7,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 7, 0, 1],"float16"), tuple(-1,49,), )
paddle.Tensor.reshape(Tensor([1, 7, 0, 1],"float32"), list[1,1,7,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 7, 0, 1],"float32"), tuple(-1,49,), )
paddle.Tensor.reshape(Tensor([1, 7, 0, 64],"float32"), list[1,7,512,], )
paddle.Tensor.reshape(Tensor([1, 7, 7, 0],"float16"), list[1,1,7,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 7, 7, 0],"float16"), tuple(-1,49,), )
paddle.Tensor.reshape(Tensor([1, 7, 7, 0],"float32"), list[1,1,7,1,7,1,], )
paddle.Tensor.reshape(Tensor([1, 7, 7, 0],"float32"), tuple(-1,49,), )
paddle.Tensor.reshape(Tensor([1, 7, 8, 0],"float32"), list[1,7,512,], )
paddle.Tensor.reshape(Tensor([1, 70, 0, 64],"float32"), list[1,70,512,], )
paddle.Tensor.reshape(Tensor([1, 70, 8, 0],"float32"), list[1,70,512,], )
paddle.Tensor.reshape(Tensor([1, 71, 0, 64],"float32"), list[1,71,512,], )
paddle.Tensor.reshape(Tensor([1, 71, 8, 0],"float32"), list[1,71,512,], )
paddle.Tensor.reshape(Tensor([1, 72, 0, 4],"float32"), list[-1,5184,4,], )
paddle.Tensor.reshape(Tensor([1, 72, 0, 64],"float32"), list[1,72,512,], )
paddle.Tensor.reshape(Tensor([1, 72, 72, 0],"float32"), list[-1,5184,4,], )
paddle.Tensor.reshape(Tensor([1, 72, 8, 0],"float32"), list[1,72,512,], )
paddle.Tensor.reshape(Tensor([1, 73, 0, 32],"float32"), list[1,73,256,], )
paddle.Tensor.reshape(Tensor([1, 73, 0, 64],"float32"), list[1,73,512,], )
paddle.Tensor.reshape(Tensor([1, 73, 0],"float32"), list[1,73,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 73, 8, 0],"float32"), list[1,73,256,], )
paddle.Tensor.reshape(Tensor([1, 73, 8, 0],"float32"), list[1,73,512,], )
paddle.Tensor.reshape(Tensor([1, 74, 0, 64],"float32"), list[1,74,512,], )
paddle.Tensor.reshape(Tensor([1, 74, 8, 0],"float32"), list[1,74,512,], )
paddle.Tensor.reshape(Tensor([1, 75, 0, 64],"float32"), list[1,75,512,], )
paddle.Tensor.reshape(Tensor([1, 75, 8, 0],"float32"), list[1,75,512,], )
paddle.Tensor.reshape(Tensor([1, 76, 0, 3],"float32"), tuple(1,5776,3,), )
paddle.Tensor.reshape(Tensor([1, 76, 0, 64],"float32"), list[1,76,512,], )
paddle.Tensor.reshape(Tensor([1, 76, 76, 0],"float32"), tuple(1,5776,3,), )
paddle.Tensor.reshape(Tensor([1, 76, 8, 0],"float32"), list[1,76,512,], )
paddle.Tensor.reshape(Tensor([1, 768, 0, 1, 1],"float16"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([1, 768, 0, 1, 1],"float32"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([1, 768, 0],"float32"), list[0,0,124,128,], )
paddle.Tensor.reshape(Tensor([1, 768, 0],"float32"), list[0,0,128,128,], )
paddle.Tensor.reshape(Tensor([1, 768, 0],"float32"), list[0,0,16,16,], )
paddle.Tensor.reshape(Tensor([1, 768, 0],"float32"), list[0,0,31,32,], )
paddle.Tensor.reshape(Tensor([1, 768, 0],"float32"), list[0,0,32,32,], )
paddle.Tensor.reshape(Tensor([1, 768, 0],"float32"), list[0,0,62,64,], )
paddle.Tensor.reshape(Tensor([1, 768, 0],"float32"), list[0,0,64,64,], )
paddle.Tensor.reshape(Tensor([1, 768, 1, 0, 1],"float16"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([1, 768, 1, 0, 1],"float32"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([1, 768, 1, 1, 0],"float16"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([1, 768, 1, 1, 0],"float32"), list[1,-1,], )
paddle.Tensor.reshape(Tensor([1, 77, 0, 64],"float32"), list[1,77,512,], )
paddle.Tensor.reshape(Tensor([1, 77, 8, 0],"float32"), list[1,77,512,], )
paddle.Tensor.reshape(Tensor([1, 78, 0, 64],"float32"), list[1,78,512,], )
paddle.Tensor.reshape(Tensor([1, 78, 8, 0],"float32"), list[1,78,512,], )
paddle.Tensor.reshape(Tensor([1, 784, 0],"float32"), tuple(1,28,28,2,), )
paddle.Tensor.reshape(Tensor([1, 79, 0, 64],"float32"), list[1,79,512,], )
paddle.Tensor.reshape(Tensor([1, 79, 8, 0],"float32"), list[1,79,512,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 1],"float32"), list[1,2,4,2,4,1,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 1],"float32"), list[8,1,1,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 1],"float32"), list[8,4,1,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 12, 12, 384],"float32"), list[-1,12,12,384,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 16],"float32"), list[1,8,128,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 2],"float32"), list[8,1,2,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 2],"float32"), list[8,4,2,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 3, 4],"float32"), list[8,1,400,12,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 3, 4],"float32"), list[8,1,492,12,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 3, 4],"float32"), list[8,1,496,12,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 3, 4],"float32"), list[8,1,500,12,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 3],"float32"), list[8,1,3,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 3],"float32"), list[8,4,3,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 3],"float32"), tuple(1,64,3,), )
paddle.Tensor.reshape(Tensor([1, 8, 0, 4, 16],"float32"), list[1,8,8,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 4, 4],"float32"), list[8,1,11,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 4, 4],"float32"), list[8,1,300,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 4, 4],"float32"), list[8,1,6380,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 4, 4],"float32"), list[8,1,8550,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 4, 4],"float32"), list[8,1,9,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 4],"float32"), list[8,1,4,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 4],"float32"), list[8,2,4,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 4],"float32"), list[8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 5, 4],"float32"), list[8,1,1100,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 5, 4],"float32"), list[8,1,18,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 5, 4],"float32"), list[8,1,21,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 5, 4],"float32"), list[8,1,22,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 5, 4],"float32"), list[8,1,36828,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 5, 4],"float32"), list[8,1,38367,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 5, 4],"float32"), list[8,1,9,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 58],"float32"), list[8,1,58,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 58],"float32"), list[8,58,-1,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 6, 12, 384],"float32"), list[-1,96,72,384,], )
paddle.Tensor.reshape(Tensor([1, 8, 0, 64],"float32"), list[1,8,512,], )
paddle.Tensor.reshape(Tensor([1, 8, 0],"float32"), list[8,1,1,], )
paddle.Tensor.reshape(Tensor([1, 8, 0],"float32"), list[8,1,2,], )
paddle.Tensor.reshape(Tensor([1, 8, 0],"float32"), list[8,1,3,], )
paddle.Tensor.reshape(Tensor([1, 8, 1, 0],"float32"), list[8,1,1,], )
paddle.Tensor.reshape(Tensor([1, 8, 1, 0],"float32"), list[8,1,2,], )
paddle.Tensor.reshape(Tensor([1, 8, 1, 0],"float32"), list[8,1,3,], )
paddle.Tensor.reshape(Tensor([1, 8, 1, 0],"float32"), list[8,1,4,], )
paddle.Tensor.reshape(Tensor([1, 8, 1, 0],"float32"), list[8,1,58,], )
paddle.Tensor.reshape(Tensor([1, 8, 11, 0, 4],"float32"), list[8,1,11,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 11, 4, 0],"float32"), list[8,1,11,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 1100, 0, 4],"float32"), list[8,1,1100,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 1100, 5, 0],"float32"), list[8,1,1100,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 12, 0, 12, 384],"float32"), list[-1,96,72,384,], )
paddle.Tensor.reshape(Tensor([1, 8, 12, 6, 0, 384],"float32"), list[-1,96,72,384,], )
paddle.Tensor.reshape(Tensor([1, 8, 12, 6, 12, 0],"float32"), list[-1,96,72,384,], )
paddle.Tensor.reshape(Tensor([1, 8, 18, 0, 4],"float32"), list[8,1,18,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 18, 5, 0],"float32"), list[8,1,18,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 2, 0, 16],"float32"), list[1,8,8,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 2, 0],"float32"), list[8,2,4,], )
paddle.Tensor.reshape(Tensor([1, 8, 2, 4, 0],"float32"), list[1,8,8,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 21, 0, 4],"float32"), list[8,1,21,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 21, 5, 0],"float32"), list[8,1,21,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 22, 0, 4],"float32"), list[8,1,22,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 22, 5, 0],"float32"), list[8,1,22,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 3, 0],"float32"), list[8,3,4,], )
paddle.Tensor.reshape(Tensor([1, 8, 300, 0, 4],"float32"), list[8,1,300,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 300, 4, 0],"float32"), list[8,1,300,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 36828, 0, 4],"float32"), list[8,1,36828,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 36828, 5, 0],"float32"), list[8,1,36828,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 38367, 0, 4],"float32"), list[8,1,38367,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 38367, 5, 0],"float32"), list[8,1,38367,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 4, 0],"float32"), list[8,4,1,], )
paddle.Tensor.reshape(Tensor([1, 8, 4, 0],"float32"), list[8,4,2,], )
paddle.Tensor.reshape(Tensor([1, 8, 4, 0],"float32"), list[8,4,3,], )
paddle.Tensor.reshape(Tensor([1, 8, 400, 0, 4],"float32"), list[8,1,400,12,], )
paddle.Tensor.reshape(Tensor([1, 8, 400, 3, 0],"float32"), list[8,1,400,12,], )
paddle.Tensor.reshape(Tensor([1, 8, 492, 0, 4],"float32"), list[8,1,492,12,], )
paddle.Tensor.reshape(Tensor([1, 8, 492, 3, 0],"float32"), list[8,1,492,12,], )
paddle.Tensor.reshape(Tensor([1, 8, 496, 0, 4],"float32"), list[8,1,496,12,], )
paddle.Tensor.reshape(Tensor([1, 8, 496, 3, 0],"float32"), list[8,1,496,12,], )
paddle.Tensor.reshape(Tensor([1, 8, 500, 0, 4],"float32"), list[8,1,500,12,], )
paddle.Tensor.reshape(Tensor([1, 8, 500, 3, 0],"float32"), list[8,1,500,12,], )
paddle.Tensor.reshape(Tensor([1, 8, 58, 0],"float32"), list[8,58,-1,], )
paddle.Tensor.reshape(Tensor([1, 8, 6, 0, 12, 384],"float32"), list[-1,12,12,384,], )
paddle.Tensor.reshape(Tensor([1, 8, 6, 12, 0, 384],"float32"), list[-1,12,12,384,], )
paddle.Tensor.reshape(Tensor([1, 8, 6, 12, 12, 0],"float32"), list[-1,12,12,384,], )
paddle.Tensor.reshape(Tensor([1, 8, 6380, 0, 4],"float32"), list[8,1,6380,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 6380, 4, 0],"float32"), list[8,1,6380,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 8, 0],"float32"), list[1,2,4,2,4,1,], )
paddle.Tensor.reshape(Tensor([1, 8, 8, 0],"float32"), list[1,8,128,], )
paddle.Tensor.reshape(Tensor([1, 8, 8, 0],"float32"), list[1,8,512,], )
paddle.Tensor.reshape(Tensor([1, 8, 8, 0],"float32"), tuple(1,64,3,), )
paddle.Tensor.reshape(Tensor([1, 8, 8550, 0, 4],"float32"), list[8,1,8550,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 8550, 4, 0],"float32"), list[8,1,8550,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 9, 0, 4],"float32"), list[8,1,9,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 9, 0, 4],"float32"), list[8,1,9,20,], )
paddle.Tensor.reshape(Tensor([1, 8, 9, 4, 0],"float32"), list[8,1,9,16,], )
paddle.Tensor.reshape(Tensor([1, 8, 9, 5, 0],"float32"), list[8,1,9,20,], )
paddle.Tensor.reshape(Tensor([1, 80, 0, 192],"float32"), list[-1,4800,192,], )
paddle.Tensor.reshape(Tensor([1, 80, 0, 384],"float32"), list[-1,4800,384,], )
paddle.Tensor.reshape(Tensor([1, 80, 0, 4],"float32"), list[-1,6400,4,], )
paddle.Tensor.reshape(Tensor([1, 80, 0, 64],"float32"), list[1,80,512,], )
paddle.Tensor.reshape(Tensor([1, 80, 60, 0],"float32"), list[-1,4800,192,], )
paddle.Tensor.reshape(Tensor([1, 80, 60, 0],"float32"), list[-1,4800,384,], )
paddle.Tensor.reshape(Tensor([1, 80, 8, 0],"float32"), list[1,80,512,], )
paddle.Tensor.reshape(Tensor([1, 80, 80, 0],"float32"), list[-1,6400,4,], )
paddle.Tensor.reshape(Tensor([1, 81, 0, 64],"float32"), list[1,81,512,], )
paddle.Tensor.reshape(Tensor([1, 81, 8, 0],"float32"), list[1,81,512,], )
paddle.Tensor.reshape(Tensor([1, 8100, 0],"float32"), tuple(1,90,90,2,), )
paddle.Tensor.reshape(Tensor([1, 82, 0, 64],"float32"), list[1,82,512,], )
paddle.Tensor.reshape(Tensor([1, 82, 8, 0],"float32"), list[1,82,512,], )
paddle.Tensor.reshape(Tensor([1, 83, 0, 64],"float32"), list[1,83,512,], )
paddle.Tensor.reshape(Tensor([1, 83, 8, 0],"float32"), list[1,83,512,], )
paddle.Tensor.reshape(Tensor([1, 832, 0],"float32"), tuple(1,32,26,2,), )
paddle.Tensor.reshape(Tensor([1, 84, 0, 1],"float32"), list[-1,12,7,9,7,1,], )
paddle.Tensor.reshape(Tensor([1, 84, 0, 192],"float32"), list[-1,12,7,9,7,192,], )
paddle.Tensor.reshape(Tensor([1, 84, 0, 64],"float32"), list[1,84,512,], )
paddle.Tensor.reshape(Tensor([1, 84, 63, 0],"float32"), list[-1,12,7,9,7,1,], )
paddle.Tensor.reshape(Tensor([1, 84, 63, 0],"float32"), list[-1,12,7,9,7,192,], )
paddle.Tensor.reshape(Tensor([1, 84, 8, 0],"float32"), list[1,84,512,], )
paddle.Tensor.reshape(Tensor([1, 8400, 0],"float32"), list[1,8400,8,32,], )
paddle.Tensor.reshape(Tensor([1, 85, 0, 32],"float32"), list[1,85,256,], )
paddle.Tensor.reshape(Tensor([1, 85, 0, 64],"float32"), list[1,85,512,], )
paddle.Tensor.reshape(Tensor([1, 85, 0],"float32"), list[1,85,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 85, 8, 0],"float32"), list[1,85,256,], )
paddle.Tensor.reshape(Tensor([1, 85, 8, 0],"float32"), list[1,85,512,], )
paddle.Tensor.reshape(Tensor([1, 8550, 0, 16],"float32"), list[1,8550,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 8550, 0, 2],"float32"), list[1,8550,1,4,1,2,], )
paddle.Tensor.reshape(Tensor([1, 8550, 0],"float32"), list[1,8550,8,16,], )
paddle.Tensor.reshape(Tensor([1, 8550, 0],"float32"), list[1,8550,8,32,], )
paddle.Tensor.reshape(Tensor([1, 8550, 0],"float32"), list[1,8550,8,4,4,2,], )
paddle.Tensor.reshape(Tensor([1, 8550, 4, 0],"float32"), list[1,8550,1,4,1,2,], )
paddle.Tensor.reshape(Tensor([1, 8550, 8, 0],"float32"), list[1,8550,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 86, 0, 64],"float32"), list[1,86,512,], )
paddle.Tensor.reshape(Tensor([1, 86, 8, 0],"float32"), list[1,86,512,], )
paddle.Tensor.reshape(Tensor([1, 87, 0, 64],"float32"), list[1,87,512,], )
paddle.Tensor.reshape(Tensor([1, 87, 8, 0],"float32"), list[1,87,512,], )
paddle.Tensor.reshape(Tensor([1, 88, 0, 4],"float32"), list[-1,7744,4,], )
paddle.Tensor.reshape(Tensor([1, 88, 0, 64],"float32"), list[1,88,512,], )
paddle.Tensor.reshape(Tensor([1, 88, 8, 0],"float32"), list[1,88,512,], )
paddle.Tensor.reshape(Tensor([1, 88, 88, 0],"float32"), list[-1,7744,4,], )
paddle.Tensor.reshape(Tensor([1, 89, 0, 64],"float32"), list[1,89,512,], )
paddle.Tensor.reshape(Tensor([1, 89, 8, 0],"float32"), list[1,89,512,], )
paddle.Tensor.reshape(Tensor([1, 9, 0, 16],"float32"), list[1,9,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 9, 0, 20],"float32"), list[1,9,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 9, 0, 49, 49],"float32"), list[-1,24,49,49,], )
paddle.Tensor.reshape(Tensor([1, 9, 0, 64],"float32"), list[1,9,512,], )
paddle.Tensor.reshape(Tensor([1, 9, 0],"float32"), list[1,9,8,16,], )
paddle.Tensor.reshape(Tensor([1, 9, 0],"float32"), list[1,9,8,20,], )
paddle.Tensor.reshape(Tensor([1, 9, 0],"float32"), list[1,9,8,4,4,2,], )
paddle.Tensor.reshape(Tensor([1, 9, 0],"float32"), list[1,9,8,5,4,2,], )
paddle.Tensor.reshape(Tensor([1, 9, 0],"float32"), tuple(9,4,), )
paddle.Tensor.reshape(Tensor([1, 9, 24, 0, 49],"float32"), list[-1,24,49,49,], )
paddle.Tensor.reshape(Tensor([1, 9, 24, 49, 0],"float32"), list[-1,24,49,49,], )
paddle.Tensor.reshape(Tensor([1, 9, 8, 0],"float32"), list[1,9,512,], )
paddle.Tensor.reshape(Tensor([1, 9, 8, 0],"float32"), list[1,9,8,4,4,], )
paddle.Tensor.reshape(Tensor([1, 9, 8, 0],"float32"), list[1,9,8,5,4,], )
paddle.Tensor.reshape(Tensor([1, 90, 0, 3],"float32"), tuple(1,8100,3,), )
paddle.Tensor.reshape(Tensor([1, 90, 0, 64],"float32"), list[1,90,512,], )
paddle.Tensor.reshape(Tensor([1, 90, 8, 0],"float32"), list[1,90,512,], )
paddle.Tensor.reshape(Tensor([1, 90, 90, 0],"float32"), tuple(1,8100,3,), )
paddle.Tensor.reshape(Tensor([1, 91, 0, 64],"float32"), list[1,91,512,], )
paddle.Tensor.reshape(Tensor([1, 91, 8, 0],"float32"), list[1,91,512,], )
paddle.Tensor.reshape(Tensor([1, 92, 0, 4],"float32"), list[-1,8464,4,], )
paddle.Tensor.reshape(Tensor([1, 92, 0, 64],"float32"), list[1,92,512,], )
paddle.Tensor.reshape(Tensor([1, 92, 8, 0],"float32"), list[1,92,512,], )
paddle.Tensor.reshape(Tensor([1, 92, 92, 0],"float32"), list[-1,8464,4,], )
paddle.Tensor.reshape(Tensor([1, 93, 0, 64],"float32"), list[1,93,512,], )
paddle.Tensor.reshape(Tensor([1, 93, 8, 0],"float32"), list[1,93,512,], )
paddle.Tensor.reshape(Tensor([1, 94, 0, 64],"float32"), list[1,94,512,], )
paddle.Tensor.reshape(Tensor([1, 94, 8, 0],"float32"), list[1,94,512,], )
paddle.Tensor.reshape(Tensor([1, 95, 0, 64],"float32"), list[1,95,512,], )
paddle.Tensor.reshape(Tensor([1, 95, 8, 0],"float32"), list[1,95,512,], )
paddle.Tensor.reshape(Tensor([1, 96, 0, 1],"float32"), list[-1,8,12,6,12,1,], )
paddle.Tensor.reshape(Tensor([1, 96, 0, 1],"float32"), list[1,8,12,8,12,1,], )
paddle.Tensor.reshape(Tensor([1, 96, 0, 384],"float32"), list[-1,6912,384,], )
paddle.Tensor.reshape(Tensor([1, 96, 0, 384],"float32"), list[-1,8,12,6,12,384,], )
paddle.Tensor.reshape(Tensor([1, 96, 0, 4],"float32"), list[-1,9216,4,], )
paddle.Tensor.reshape(Tensor([1, 96, 0, 64],"float32"), list[1,96,512,], )
paddle.Tensor.reshape(Tensor([1, 96, 0, 768],"float32"), list[-1,6912,768,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,56,56,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,56,58,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,56,59,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,56,60,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,56,64,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,56,65,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,56,67,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,56,68,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,56,71,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,56,75,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,57,56,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,59,56,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,60,56,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,61,56,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,62,56,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,64,56,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,16,70,56,], )
paddle.Tensor.reshape(Tensor([1, 96, 0],"float32"), list[-1,96,160,120,], )
paddle.Tensor.reshape(Tensor([1, 96, 72, 0],"float32"), list[-1,6912,384,], )
paddle.Tensor.reshape(Tensor([1, 96, 72, 0],"float32"), list[-1,6912,768,], )
paddle.Tensor.reshape(Tensor([1, 96, 72, 0],"float32"), list[-1,8,12,6,12,1,], )
paddle.Tensor.reshape(Tensor([1, 96, 72, 0],"float32"), list[-1,8,12,6,12,384,], )
paddle.Tensor.reshape(Tensor([1, 96, 8, 0],"float32"), list[1,96,512,], )
paddle.Tensor.reshape(Tensor([1, 96, 96, 0],"float32"), list[1,8,12,8,12,1,], )
paddle.Tensor.reshape(Tensor([1, 96, 96, 0],"float32"), list[-1,9216,4,], )
paddle.Tensor.reshape(Tensor([1, 97, 0, 32],"float32"), list[1,97,256,], )
paddle.Tensor.reshape(Tensor([1, 97, 0, 64],"float32"), list[1,97,512,], )
paddle.Tensor.reshape(Tensor([1, 97, 0],"float32"), list[1,97,3,8,32,], )
paddle.Tensor.reshape(Tensor([1, 97, 8, 0],"float32"), list[1,97,256,], )
paddle.Tensor.reshape(Tensor([1, 97, 8, 0],"float32"), list[1,97,512,], )
paddle.Tensor.reshape(Tensor([1, 98, 0, 64],"float32"), list[1,98,512,], )
paddle.Tensor.reshape(Tensor([1, 98, 8, 0],"float32"), list[1,98,512,], )
paddle.Tensor.reshape(Tensor([1, 98000, 0],"float32"), tuple(1,280,350,2,), )
paddle.Tensor.reshape(Tensor([1, 99, 0, 64],"float32"), list[1,99,512,], )
paddle.Tensor.reshape(Tensor([1, 99, 8, 0],"float32"), list[1,99,512,], )
paddle.Tensor.reshape(Tensor([1, 992, 0, 32],"float32"), list[1,992,160,], )
paddle.Tensor.reshape(Tensor([1, 992, 0, 64],"float32"), list[1,992,320,], )
paddle.Tensor.reshape(Tensor([1, 992, 0],"float32"), list[1,31,32,160,], )
paddle.Tensor.reshape(Tensor([1, 992, 0],"float32"), list[1,31,32,320,], )
paddle.Tensor.reshape(Tensor([1, 992, 0],"float32"), list[1,992,5,32,], )
paddle.Tensor.reshape(Tensor([1, 992, 0],"float32"), list[1,992,5,64,], )
paddle.Tensor.reshape(Tensor([1, 992, 5, 0],"float32"), list[1,992,160,], )
paddle.Tensor.reshape(Tensor([1, 992, 5, 0],"float32"), list[1,992,320,], )
paddle.Tensor.reshape(Tensor([10, 0, 1, 2, 4],"float32"), list[10,2,2,4,], )
paddle.Tensor.reshape(Tensor([10, 0, 1, 2],"float32"), list[10,-1,1,1,2,], )
paddle.Tensor.reshape(Tensor([10, 0, 120, 120],"float16"), list[10,1,14400,], )
paddle.Tensor.reshape(Tensor([10, 0, 120, 120],"float16"), list[10,256,120,120,], )
paddle.Tensor.reshape(Tensor([10, 0, 120, 120],"float16"), list[10,256,14400,], )
paddle.Tensor.reshape(Tensor([10, 0, 120, 120],"float32"), list[10,1,14400,], )
paddle.Tensor.reshape(Tensor([10, 0, 120, 120],"float32"), list[10,256,120,120,], )
paddle.Tensor.reshape(Tensor([10, 0, 120, 120],"float32"), list[10,256,14400,], )
paddle.Tensor.reshape(Tensor([10, 0, 192],"float32"), list[10,2,8,24,], )
paddle.Tensor.reshape(Tensor([10, 0, 2, 2],"float32"), list[10,-1,2,1,2,], )
paddle.Tensor.reshape(Tensor([10, 0, 2, 4],"float32"), list[10,2,8,], )
paddle.Tensor.reshape(Tensor([10, 0, 2, 4],"float32"), list[10,4,-1,], )
paddle.Tensor.reshape(Tensor([10, 0, 2],"float32"), tuple(1,1,10,10,2,), )
paddle.Tensor.reshape(Tensor([10, 0, 256, 1],"float16"), list[10,256,1,1,], )
paddle.Tensor.reshape(Tensor([10, 0, 256, 1],"float32"), list[10,256,1,1,], )
paddle.Tensor.reshape(Tensor([10, 0, 43],"float32"), list[-1,43,], )
paddle.Tensor.reshape(Tensor([10, 0, 5, 1],"float32"), list[-1,25,], )
paddle.Tensor.reshape(Tensor([10, 0, 512, 1],"float16"), list[10,512,1,1,], )
paddle.Tensor.reshape(Tensor([10, 0, 512, 1],"float32"), list[10,512,1,1,], )
paddle.Tensor.reshape(Tensor([10, 0, 512],"float16"), list[10,0,8,64,], )
paddle.Tensor.reshape(Tensor([10, 0, 512],"float32"), list[10,0,8,64,], )
paddle.Tensor.reshape(Tensor([10, 0, 60, 60],"float16"), list[10,1,3600,], )
paddle.Tensor.reshape(Tensor([10, 0, 60, 60],"float16"), list[10,512,3600,], )
paddle.Tensor.reshape(Tensor([10, 0, 60, 60],"float16"), list[10,512,60,60,], )
paddle.Tensor.reshape(Tensor([10, 0, 60, 60],"float32"), list[10,1,3600,], )
paddle.Tensor.reshape(Tensor([10, 0, 60, 60],"float32"), list[10,512,3600,], )
paddle.Tensor.reshape(Tensor([10, 0, 60, 60],"float32"), list[10,512,60,60,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,105,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,129,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,13,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,137,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,17,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,21,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,25,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,29,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,33,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,37,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,41,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,49,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,57,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,65,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,73,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,81,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,89,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,9,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 768],"float32"), list[10,97,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,105,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,129,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,13,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,137,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,17,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,21,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,25,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,29,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,33,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,37,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,41,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,49,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,57,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,65,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,73,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,81,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,89,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,9,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 32],"float32"), list[10,97,256,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float16"), list[10,0,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,0,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,1,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,10,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,100,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,101,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,102,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,103,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,104,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,105,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,106,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,107,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,108,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,109,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,11,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,110,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,111,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,112,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,113,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,114,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,115,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,116,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,117,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,118,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,119,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,12,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,120,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,121,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,122,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,123,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,124,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,125,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,126,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,127,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,128,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,129,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,13,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,130,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,131,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,132,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,133,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,134,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,135,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,136,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,137,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,138,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,139,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,14,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,140,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,141,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,142,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,143,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,144,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,145,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,146,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,147,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,148,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,149,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,15,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,150,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,151,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,152,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,153,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,154,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,155,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,156,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,157,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,158,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,159,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,16,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,160,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,161,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,162,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,163,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,164,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,165,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,166,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,167,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,168,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,169,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,17,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,170,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,171,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,172,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,173,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,174,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,175,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,176,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,177,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,178,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,179,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,18,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,180,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,181,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,182,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,183,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,184,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,185,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,19,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,2,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,20,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,21,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,22,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,23,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,24,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,25,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,26,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,27,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,28,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,29,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,3,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,30,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,31,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,32,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,33,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,34,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,35,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,36,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,37,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,38,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,39,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,4,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,40,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,41,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,42,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,43,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,44,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,45,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,46,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,47,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,48,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,49,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,5,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,50,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,51,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,52,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,53,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,54,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,55,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,56,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,57,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,58,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,59,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,6,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,60,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,61,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,62,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,63,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,64,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,65,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,66,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,67,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,68,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,69,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,7,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,70,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,71,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,72,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,73,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,74,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,75,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,76,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,77,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,78,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,79,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,8,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,80,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,81,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,82,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,83,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,84,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,85,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,86,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,87,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,88,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,89,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,9,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,90,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,91,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,92,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,93,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,94,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,95,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,96,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,97,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,98,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 64],"float32"), list[10,99,512,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 8],"float32"), list[10,16,-1,], )
paddle.Tensor.reshape(Tensor([10, 0, 8, 8],"float32"), list[10,2,64,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,10,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,100,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,101,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,102,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,103,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,104,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,105,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,106,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,107,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,108,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,109,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,11,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,110,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,111,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,112,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,113,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,114,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,115,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,116,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,117,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,118,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,119,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,12,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,120,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,121,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,122,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,123,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,124,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,125,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,126,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,127,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,128,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,129,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,13,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,130,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,131,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,132,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,133,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,134,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,135,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,136,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,137,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,138,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,139,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,14,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,140,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,141,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,142,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,143,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,144,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,145,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,146,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,147,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,148,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,149,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,15,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,150,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,151,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,152,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,153,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,154,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,155,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,156,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,157,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,158,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,159,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,16,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,160,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,161,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,162,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,163,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,164,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,165,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,166,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,167,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,168,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,169,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,17,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,170,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,171,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,172,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,173,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,174,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,175,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,176,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,177,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,178,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,179,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,18,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,180,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,181,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,182,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,183,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,184,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,185,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,19,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,2,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,20,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,21,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,22,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,23,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,24,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,25,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,26,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,27,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,28,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,29,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,3,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,30,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,31,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,32,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,33,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,34,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,35,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,36,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,37,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,38,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,39,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,4,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,40,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,41,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,42,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,43,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,44,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,45,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,46,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,47,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,48,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,49,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,5,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,50,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,51,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,52,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,53,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,54,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,55,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,56,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,57,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,58,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,59,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,6,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,60,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,61,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,62,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,63,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,64,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,65,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,66,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,67,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,68,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,69,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,7,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,70,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,71,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,72,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,73,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,74,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,75,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,76,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,77,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,78,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,79,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,8,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,80,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,81,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,82,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,83,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,84,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,85,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,86,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,87,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,88,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,89,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,9,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,90,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,91,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,92,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,93,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,94,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,95,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,96,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,97,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,98,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,1,99,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,10,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,100,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,101,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,102,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,103,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,104,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,105,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,106,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,107,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,108,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,109,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,11,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,110,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,111,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,112,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,113,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,114,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,115,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,116,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,117,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,118,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,119,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,12,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,120,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,121,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,122,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,123,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,124,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,125,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,126,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,127,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,128,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,129,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,13,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,130,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,131,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,132,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,133,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,134,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,135,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,136,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,137,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,138,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,139,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,14,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,140,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,141,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,142,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,143,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,144,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,145,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,146,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,147,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,148,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,149,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,15,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,150,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,151,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,152,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,153,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,154,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,155,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,156,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,157,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,158,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,159,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,16,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,160,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,161,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,162,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,163,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,164,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,165,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,166,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,167,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,168,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,169,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,17,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,170,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,171,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,172,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,173,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,174,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,175,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,176,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,177,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,178,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,179,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,18,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,180,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,181,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,182,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,183,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,184,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,185,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,19,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,2,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,20,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,21,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,22,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,23,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,24,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,25,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,26,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,27,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,28,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,29,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,3,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,30,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,31,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,32,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,33,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,34,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,35,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,36,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,37,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,38,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,39,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,4,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,40,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,41,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,42,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,43,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,44,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,45,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,46,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,47,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,48,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,49,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,5,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,50,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,51,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,52,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,53,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,54,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,55,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,56,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,57,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,58,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,59,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,6,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,60,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,61,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,62,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,63,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,64,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,65,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,66,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,67,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,68,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,69,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,7,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,70,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,71,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,72,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,73,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,74,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,75,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,76,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,77,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,78,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,79,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,8,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,80,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,81,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,82,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,83,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,84,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,85,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,86,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,87,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,88,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,89,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,9,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,90,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,91,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,92,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,93,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,94,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,95,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,96,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,97,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,98,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"bool"), list[10,1,99,1,], )
paddle.Tensor.reshape(Tensor([10, 0],"float16"), list[-1,17,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[1,-1,6885,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[1,10,-1,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[-1,12,10,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[-1,8,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[2,-1,10285,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[2,-1,3598,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[2,-1,4789,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[2,-1,5440,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[2,-1,6885,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[2,-1,7681,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[2,-1,8500,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[2,-1,9382,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[2,5,-1,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[2,5,64,], )
paddle.Tensor.reshape(Tensor([10, 0],"float32"), list[20,10,], )
paddle.Tensor.reshape(Tensor([10, 0],"float64"), list[-1,4,], )
paddle.Tensor.reshape(Tensor([10, 1, 0, 1],"float16"), list[10,256,1,1,], )
paddle.Tensor.reshape(Tensor([10, 1, 0, 1],"float16"), list[10,512,1,1,], )
paddle.Tensor.reshape(Tensor([10, 1, 0, 1],"float32"), list[10,256,1,1,], )
paddle.Tensor.reshape(Tensor([10, 1, 0, 1],"float32"), list[10,512,1,1,], )
paddle.Tensor.reshape(Tensor([10, 1, 0, 120],"float16"), list[10,1,14400,], )
paddle.Tensor.reshape(Tensor([10, 1, 0, 120],"float32"), list[10,1,14400,], )
paddle.Tensor.reshape(Tensor([10, 1, 0, 2],"float32"), list[10,-1,1,1,2,], )
paddle.Tensor.reshape(Tensor([10, 1, 0, 60],"float16"), list[10,1,3600,], )
paddle.Tensor.reshape(Tensor([10, 1, 0, 60],"float32"), list[10,1,3600,], )
paddle.Tensor.reshape(Tensor([10, 1, 0, 64],"float32"), list[10,1,512,], )
paddle.Tensor.reshape(Tensor([10, 1, 1, 0],"float32"), list[10,-1,1,1,2,], )
paddle.Tensor.reshape(Tensor([10, 1, 120, 0],"float16"), list[10,1,14400,], )
paddle.Tensor.reshape(Tensor([10, 1, 120, 0],"float32"), list[10,1,14400,], )
paddle.Tensor.reshape(Tensor([10, 1, 256, 0],"float16"), list[10,256,1,1,], )
paddle.Tensor.reshape(Tensor([10, 1, 256, 0],"float32"), list[10,256,1,1,], )
paddle.Tensor.reshape(Tensor([10, 1, 512, 0],"float16"), list[10,512,1,1,], )
paddle.Tensor.reshape(Tensor([10, 1, 512, 0],"float32"), list[10,512,1,1,], )
paddle.Tensor.reshape(Tensor([10, 1, 60, 0],"float16"), list[10,1,3600,], )
paddle.Tensor.reshape(Tensor([10, 1, 60, 0],"float32"), list[10,1,3600,], )
paddle.Tensor.reshape(Tensor([10, 1, 8, 0],"float32"), list[10,1,512,], )
paddle.Tensor.reshape(Tensor([10, 10, 0, 64],"float32"), list[10,10,512,], )
paddle.Tensor.reshape(Tensor([10, 10, 0],"float32"), tuple(1,1,10,10,2,), )
paddle.Tensor.reshape(Tensor([10, 10, 8, 0],"float32"), list[10,10,512,], )
paddle.Tensor.reshape(Tensor([10, 100, 0, 64],"float32"), list[10,100,512,], )
paddle.Tensor.reshape(Tensor([10, 100, 8, 0],"float32"), list[10,100,512,], )
paddle.Tensor.reshape(Tensor([10, 101, 0, 64],"float32"), list[10,101,512,], )
paddle.Tensor.reshape(Tensor([10, 101, 8, 0],"float32"), list[10,101,512,], )
paddle.Tensor.reshape(Tensor([10, 102, 0, 64],"float32"), list[10,102,512,], )
paddle.Tensor.reshape(Tensor([10, 102, 8, 0],"float32"), list[10,102,512,], )
paddle.Tensor.reshape(Tensor([10, 103, 0, 64],"float32"), list[10,103,512,], )
paddle.Tensor.reshape(Tensor([10, 103, 8, 0],"float32"), list[10,103,512,], )
paddle.Tensor.reshape(Tensor([10, 104, 0, 64],"float32"), list[10,104,512,], )
paddle.Tensor.reshape(Tensor([10, 104, 8, 0],"float32"), list[10,104,512,], )
paddle.Tensor.reshape(Tensor([10, 105, 0, 32],"float32"), list[10,105,256,], )
paddle.Tensor.reshape(Tensor([10, 105, 0, 64],"float32"), list[10,105,512,], )
paddle.Tensor.reshape(Tensor([10, 105, 0],"float32"), list[10,105,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 105, 8, 0],"float32"), list[10,105,256,], )
paddle.Tensor.reshape(Tensor([10, 105, 8, 0],"float32"), list[10,105,512,], )
paddle.Tensor.reshape(Tensor([10, 106, 0, 64],"float32"), list[10,106,512,], )
paddle.Tensor.reshape(Tensor([10, 106, 8, 0],"float32"), list[10,106,512,], )
paddle.Tensor.reshape(Tensor([10, 107, 0, 64],"float32"), list[10,107,512,], )
paddle.Tensor.reshape(Tensor([10, 107, 8, 0],"float32"), list[10,107,512,], )
paddle.Tensor.reshape(Tensor([10, 108, 0, 64],"float32"), list[10,108,512,], )
paddle.Tensor.reshape(Tensor([10, 108, 8, 0],"float32"), list[10,108,512,], )
paddle.Tensor.reshape(Tensor([10, 109, 0, 64],"float32"), list[10,109,512,], )
paddle.Tensor.reshape(Tensor([10, 109, 8, 0],"float32"), list[10,109,512,], )
paddle.Tensor.reshape(Tensor([10, 11, 0, 64],"float32"), list[10,11,512,], )
paddle.Tensor.reshape(Tensor([10, 11, 8, 0],"float32"), list[10,11,512,], )
paddle.Tensor.reshape(Tensor([10, 110, 0, 64],"float32"), list[10,110,512,], )
paddle.Tensor.reshape(Tensor([10, 110, 8, 0],"float32"), list[10,110,512,], )
paddle.Tensor.reshape(Tensor([10, 111, 0, 64],"float32"), list[10,111,512,], )
paddle.Tensor.reshape(Tensor([10, 111, 8, 0],"float32"), list[10,111,512,], )
paddle.Tensor.reshape(Tensor([10, 112, 0, 64],"float32"), list[10,112,512,], )
paddle.Tensor.reshape(Tensor([10, 112, 8, 0],"float32"), list[10,112,512,], )
paddle.Tensor.reshape(Tensor([10, 113, 0, 64],"float32"), list[10,113,512,], )
paddle.Tensor.reshape(Tensor([10, 113, 8, 0],"float32"), list[10,113,512,], )
paddle.Tensor.reshape(Tensor([10, 114, 0, 64],"float32"), list[10,114,512,], )
paddle.Tensor.reshape(Tensor([10, 114, 8, 0],"float32"), list[10,114,512,], )
paddle.Tensor.reshape(Tensor([10, 115, 0, 64],"float32"), list[10,115,512,], )
paddle.Tensor.reshape(Tensor([10, 115, 8, 0],"float32"), list[10,115,512,], )
paddle.Tensor.reshape(Tensor([10, 116, 0, 64],"float32"), list[10,116,512,], )
paddle.Tensor.reshape(Tensor([10, 116, 8, 0],"float32"), list[10,116,512,], )
paddle.Tensor.reshape(Tensor([10, 117, 0, 64],"float32"), list[10,117,512,], )
paddle.Tensor.reshape(Tensor([10, 117, 8, 0],"float32"), list[10,117,512,], )
paddle.Tensor.reshape(Tensor([10, 118, 0, 64],"float32"), list[10,118,512,], )
paddle.Tensor.reshape(Tensor([10, 118, 8, 0],"float32"), list[10,118,512,], )
paddle.Tensor.reshape(Tensor([10, 119, 0, 64],"float32"), list[10,119,512,], )
paddle.Tensor.reshape(Tensor([10, 119, 8, 0],"float32"), list[10,119,512,], )
paddle.Tensor.reshape(Tensor([10, 12, 0, 64],"float32"), list[10,12,512,], )
paddle.Tensor.reshape(Tensor([10, 12, 8, 0],"float32"), list[10,12,512,], )
paddle.Tensor.reshape(Tensor([10, 120, 0, 64],"float32"), list[10,120,512,], )
paddle.Tensor.reshape(Tensor([10, 120, 8, 0],"float32"), list[10,120,512,], )
paddle.Tensor.reshape(Tensor([10, 121, 0, 64],"float32"), list[10,121,512,], )
paddle.Tensor.reshape(Tensor([10, 121, 8, 0],"float32"), list[10,121,512,], )
paddle.Tensor.reshape(Tensor([10, 122, 0, 64],"float32"), list[10,122,512,], )
paddle.Tensor.reshape(Tensor([10, 122, 8, 0],"float32"), list[10,122,512,], )
paddle.Tensor.reshape(Tensor([10, 123, 0, 64],"float32"), list[10,123,512,], )
paddle.Tensor.reshape(Tensor([10, 123, 8, 0],"float32"), list[10,123,512,], )
paddle.Tensor.reshape(Tensor([10, 124, 0, 64],"float32"), list[10,124,512,], )
paddle.Tensor.reshape(Tensor([10, 124, 8, 0],"float32"), list[10,124,512,], )
paddle.Tensor.reshape(Tensor([10, 125, 0, 64],"float32"), list[10,125,512,], )
paddle.Tensor.reshape(Tensor([10, 125, 8, 0],"float32"), list[10,125,512,], )
paddle.Tensor.reshape(Tensor([10, 126, 0, 64],"float32"), list[10,126,512,], )
paddle.Tensor.reshape(Tensor([10, 126, 8, 0],"float32"), list[10,126,512,], )
paddle.Tensor.reshape(Tensor([10, 127, 0, 64],"float32"), list[10,127,512,], )
paddle.Tensor.reshape(Tensor([10, 127, 8, 0],"float32"), list[10,127,512,], )
paddle.Tensor.reshape(Tensor([10, 128, 0, 64],"float32"), list[10,128,512,], )
paddle.Tensor.reshape(Tensor([10, 128, 8, 0],"float32"), list[10,128,512,], )
paddle.Tensor.reshape(Tensor([10, 129, 0, 32],"float32"), list[10,129,256,], )
paddle.Tensor.reshape(Tensor([10, 129, 0, 64],"float32"), list[10,129,512,], )
paddle.Tensor.reshape(Tensor([10, 129, 0],"float32"), list[10,129,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 129, 8, 0],"float32"), list[10,129,256,], )
paddle.Tensor.reshape(Tensor([10, 129, 8, 0],"float32"), list[10,129,512,], )
paddle.Tensor.reshape(Tensor([10, 13, 0, 32],"float32"), list[10,13,256,], )
paddle.Tensor.reshape(Tensor([10, 13, 0, 64],"float32"), list[10,13,512,], )
paddle.Tensor.reshape(Tensor([10, 13, 0],"float32"), list[10,13,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 13, 8, 0],"float32"), list[10,13,256,], )
paddle.Tensor.reshape(Tensor([10, 13, 8, 0],"float32"), list[10,13,512,], )
paddle.Tensor.reshape(Tensor([10, 130, 0, 64],"float32"), list[10,130,512,], )
paddle.Tensor.reshape(Tensor([10, 130, 8, 0],"float32"), list[10,130,512,], )
paddle.Tensor.reshape(Tensor([10, 131, 0, 64],"float32"), list[10,131,512,], )
paddle.Tensor.reshape(Tensor([10, 131, 8, 0],"float32"), list[10,131,512,], )
paddle.Tensor.reshape(Tensor([10, 132, 0, 64],"float32"), list[10,132,512,], )
paddle.Tensor.reshape(Tensor([10, 132, 8, 0],"float32"), list[10,132,512,], )
paddle.Tensor.reshape(Tensor([10, 133, 0, 64],"float32"), list[10,133,512,], )
paddle.Tensor.reshape(Tensor([10, 133, 8, 0],"float32"), list[10,133,512,], )
paddle.Tensor.reshape(Tensor([10, 134, 0, 64],"float32"), list[10,134,512,], )
paddle.Tensor.reshape(Tensor([10, 134, 8, 0],"float32"), list[10,134,512,], )
paddle.Tensor.reshape(Tensor([10, 135, 0, 64],"float32"), list[10,135,512,], )
paddle.Tensor.reshape(Tensor([10, 135, 8, 0],"float32"), list[10,135,512,], )
paddle.Tensor.reshape(Tensor([10, 136, 0, 64],"float32"), list[10,136,512,], )
paddle.Tensor.reshape(Tensor([10, 136, 8, 0],"float32"), list[10,136,512,], )
paddle.Tensor.reshape(Tensor([10, 137, 0, 32],"float32"), list[10,137,256,], )
paddle.Tensor.reshape(Tensor([10, 137, 0, 64],"float32"), list[10,137,512,], )
paddle.Tensor.reshape(Tensor([10, 137, 0],"float32"), list[10,137,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 137, 8, 0],"float32"), list[10,137,256,], )
paddle.Tensor.reshape(Tensor([10, 137, 8, 0],"float32"), list[10,137,512,], )
paddle.Tensor.reshape(Tensor([10, 138, 0, 64],"float32"), list[10,138,512,], )
paddle.Tensor.reshape(Tensor([10, 138, 8, 0],"float32"), list[10,138,512,], )
paddle.Tensor.reshape(Tensor([10, 139, 0, 64],"float32"), list[10,139,512,], )
paddle.Tensor.reshape(Tensor([10, 139, 8, 0],"float32"), list[10,139,512,], )
paddle.Tensor.reshape(Tensor([10, 14, 0, 64],"float32"), list[10,14,512,], )
paddle.Tensor.reshape(Tensor([10, 14, 8, 0],"float32"), list[10,14,512,], )
paddle.Tensor.reshape(Tensor([10, 140, 0, 64],"float32"), list[10,140,512,], )
paddle.Tensor.reshape(Tensor([10, 140, 8, 0],"float32"), list[10,140,512,], )
paddle.Tensor.reshape(Tensor([10, 141, 0, 64],"float32"), list[10,141,512,], )
paddle.Tensor.reshape(Tensor([10, 141, 8, 0],"float32"), list[10,141,512,], )
paddle.Tensor.reshape(Tensor([10, 142, 0, 64],"float32"), list[10,142,512,], )
paddle.Tensor.reshape(Tensor([10, 142, 8, 0],"float32"), list[10,142,512,], )
paddle.Tensor.reshape(Tensor([10, 143, 0, 64],"float32"), list[10,143,512,], )
paddle.Tensor.reshape(Tensor([10, 143, 8, 0],"float32"), list[10,143,512,], )
paddle.Tensor.reshape(Tensor([10, 144, 0, 64],"float32"), list[10,144,512,], )
paddle.Tensor.reshape(Tensor([10, 144, 8, 0],"float32"), list[10,144,512,], )
paddle.Tensor.reshape(Tensor([10, 145, 0, 64],"float32"), list[10,145,512,], )
paddle.Tensor.reshape(Tensor([10, 145, 8, 0],"float32"), list[10,145,512,], )
paddle.Tensor.reshape(Tensor([10, 146, 0, 64],"float32"), list[10,146,512,], )
paddle.Tensor.reshape(Tensor([10, 146, 8, 0],"float32"), list[10,146,512,], )
paddle.Tensor.reshape(Tensor([10, 147, 0, 64],"float32"), list[10,147,512,], )
paddle.Tensor.reshape(Tensor([10, 147, 8, 0],"float32"), list[10,147,512,], )
paddle.Tensor.reshape(Tensor([10, 148, 0, 64],"float32"), list[10,148,512,], )
paddle.Tensor.reshape(Tensor([10, 148, 8, 0],"float32"), list[10,148,512,], )
paddle.Tensor.reshape(Tensor([10, 149, 0, 64],"float32"), list[10,149,512,], )
paddle.Tensor.reshape(Tensor([10, 149, 8, 0],"float32"), list[10,149,512,], )
paddle.Tensor.reshape(Tensor([10, 15, 0, 64],"float32"), list[10,15,512,], )
paddle.Tensor.reshape(Tensor([10, 15, 8, 0],"float32"), list[10,15,512,], )
paddle.Tensor.reshape(Tensor([10, 150, 0, 64],"float32"), list[10,150,512,], )
paddle.Tensor.reshape(Tensor([10, 150, 8, 0],"float32"), list[10,150,512,], )
paddle.Tensor.reshape(Tensor([10, 151, 0, 64],"float32"), list[10,151,512,], )
paddle.Tensor.reshape(Tensor([10, 151, 8, 0],"float32"), list[10,151,512,], )
paddle.Tensor.reshape(Tensor([10, 152, 0, 64],"float32"), list[10,152,512,], )
paddle.Tensor.reshape(Tensor([10, 152, 8, 0],"float32"), list[10,152,512,], )
paddle.Tensor.reshape(Tensor([10, 153, 0, 64],"float32"), list[10,153,512,], )
paddle.Tensor.reshape(Tensor([10, 153, 8, 0],"float32"), list[10,153,512,], )
paddle.Tensor.reshape(Tensor([10, 154, 0, 64],"float32"), list[10,154,512,], )
paddle.Tensor.reshape(Tensor([10, 154, 8, 0],"float32"), list[10,154,512,], )
paddle.Tensor.reshape(Tensor([10, 155, 0, 64],"float32"), list[10,155,512,], )
paddle.Tensor.reshape(Tensor([10, 155, 8, 0],"float32"), list[10,155,512,], )
paddle.Tensor.reshape(Tensor([10, 156, 0, 64],"float32"), list[10,156,512,], )
paddle.Tensor.reshape(Tensor([10, 156, 8, 0],"float32"), list[10,156,512,], )
paddle.Tensor.reshape(Tensor([10, 157, 0, 64],"float32"), list[10,157,512,], )
paddle.Tensor.reshape(Tensor([10, 157, 8, 0],"float32"), list[10,157,512,], )
paddle.Tensor.reshape(Tensor([10, 158, 0, 64],"float32"), list[10,158,512,], )
paddle.Tensor.reshape(Tensor([10, 158, 8, 0],"float32"), list[10,158,512,], )
paddle.Tensor.reshape(Tensor([10, 159, 0, 64],"float32"), list[10,159,512,], )
paddle.Tensor.reshape(Tensor([10, 159, 8, 0],"float32"), list[10,159,512,], )
paddle.Tensor.reshape(Tensor([10, 16, 0, 64],"float32"), list[10,16,512,], )
paddle.Tensor.reshape(Tensor([10, 16, 8, 0],"float32"), list[10,16,512,], )
paddle.Tensor.reshape(Tensor([10, 160, 0, 64],"float32"), list[10,160,512,], )
paddle.Tensor.reshape(Tensor([10, 160, 8, 0],"float32"), list[10,160,512,], )
paddle.Tensor.reshape(Tensor([10, 161, 0, 64],"float32"), list[10,161,512,], )
paddle.Tensor.reshape(Tensor([10, 161, 8, 0],"float32"), list[10,161,512,], )
paddle.Tensor.reshape(Tensor([10, 162, 0, 64],"float32"), list[10,162,512,], )
paddle.Tensor.reshape(Tensor([10, 162, 8, 0],"float32"), list[10,162,512,], )
paddle.Tensor.reshape(Tensor([10, 163, 0, 64],"float32"), list[10,163,512,], )
paddle.Tensor.reshape(Tensor([10, 163, 8, 0],"float32"), list[10,163,512,], )
paddle.Tensor.reshape(Tensor([10, 164, 0, 64],"float32"), list[10,164,512,], )
paddle.Tensor.reshape(Tensor([10, 164, 8, 0],"float32"), list[10,164,512,], )
paddle.Tensor.reshape(Tensor([10, 165, 0, 64],"float32"), list[10,165,512,], )
paddle.Tensor.reshape(Tensor([10, 165, 8, 0],"float32"), list[10,165,512,], )
paddle.Tensor.reshape(Tensor([10, 166, 0, 64],"float32"), list[10,166,512,], )
paddle.Tensor.reshape(Tensor([10, 166, 8, 0],"float32"), list[10,166,512,], )
paddle.Tensor.reshape(Tensor([10, 167, 0, 64],"float32"), list[10,167,512,], )
paddle.Tensor.reshape(Tensor([10, 167, 8, 0],"float32"), list[10,167,512,], )
paddle.Tensor.reshape(Tensor([10, 168, 0, 64],"float32"), list[10,168,512,], )
paddle.Tensor.reshape(Tensor([10, 168, 8, 0],"float32"), list[10,168,512,], )
paddle.Tensor.reshape(Tensor([10, 169, 0, 64],"float32"), list[10,169,512,], )
paddle.Tensor.reshape(Tensor([10, 169, 8, 0],"float32"), list[10,169,512,], )
paddle.Tensor.reshape(Tensor([10, 17, 0, 32],"float32"), list[10,17,256,], )
paddle.Tensor.reshape(Tensor([10, 17, 0, 64],"float32"), list[10,17,512,], )
paddle.Tensor.reshape(Tensor([10, 17, 0],"float32"), list[10,17,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 17, 8, 0],"float32"), list[10,17,256,], )
paddle.Tensor.reshape(Tensor([10, 17, 8, 0],"float32"), list[10,17,512,], )
paddle.Tensor.reshape(Tensor([10, 170, 0, 64],"float32"), list[10,170,512,], )
paddle.Tensor.reshape(Tensor([10, 170, 8, 0],"float32"), list[10,170,512,], )
paddle.Tensor.reshape(Tensor([10, 171, 0, 64],"float32"), list[10,171,512,], )
paddle.Tensor.reshape(Tensor([10, 171, 8, 0],"float32"), list[10,171,512,], )
paddle.Tensor.reshape(Tensor([10, 172, 0, 64],"float32"), list[10,172,512,], )
paddle.Tensor.reshape(Tensor([10, 172, 8, 0],"float32"), list[10,172,512,], )
paddle.Tensor.reshape(Tensor([10, 173, 0, 64],"float32"), list[10,173,512,], )
paddle.Tensor.reshape(Tensor([10, 173, 8, 0],"float32"), list[10,173,512,], )
paddle.Tensor.reshape(Tensor([10, 174, 0, 64],"float32"), list[10,174,512,], )
paddle.Tensor.reshape(Tensor([10, 174, 8, 0],"float32"), list[10,174,512,], )
paddle.Tensor.reshape(Tensor([10, 175, 0, 64],"float32"), list[10,175,512,], )
paddle.Tensor.reshape(Tensor([10, 175, 8, 0],"float32"), list[10,175,512,], )
paddle.Tensor.reshape(Tensor([10, 176, 0, 64],"float32"), list[10,176,512,], )
paddle.Tensor.reshape(Tensor([10, 176, 8, 0],"float32"), list[10,176,512,], )
paddle.Tensor.reshape(Tensor([10, 177, 0, 64],"float32"), list[10,177,512,], )
paddle.Tensor.reshape(Tensor([10, 177, 8, 0],"float32"), list[10,177,512,], )
paddle.Tensor.reshape(Tensor([10, 178, 0, 64],"float32"), list[10,178,512,], )
paddle.Tensor.reshape(Tensor([10, 178, 8, 0],"float32"), list[10,178,512,], )
paddle.Tensor.reshape(Tensor([10, 179, 0, 64],"float32"), list[10,179,512,], )
paddle.Tensor.reshape(Tensor([10, 179, 8, 0],"float32"), list[10,179,512,], )
paddle.Tensor.reshape(Tensor([10, 18, 0, 64],"float32"), list[10,18,512,], )
paddle.Tensor.reshape(Tensor([10, 18, 8, 0],"float32"), list[10,18,512,], )
paddle.Tensor.reshape(Tensor([10, 180, 0, 64],"float32"), list[10,180,512,], )
paddle.Tensor.reshape(Tensor([10, 180, 8, 0],"float32"), list[10,180,512,], )
paddle.Tensor.reshape(Tensor([10, 181, 0, 64],"float32"), list[10,181,512,], )
paddle.Tensor.reshape(Tensor([10, 181, 8, 0],"float32"), list[10,181,512,], )
paddle.Tensor.reshape(Tensor([10, 182, 0, 64],"float32"), list[10,182,512,], )
paddle.Tensor.reshape(Tensor([10, 182, 8, 0],"float32"), list[10,182,512,], )
paddle.Tensor.reshape(Tensor([10, 183, 0, 64],"float32"), list[10,183,512,], )
paddle.Tensor.reshape(Tensor([10, 183, 8, 0],"float32"), list[10,183,512,], )
paddle.Tensor.reshape(Tensor([10, 184, 0, 64],"float32"), list[10,184,512,], )
paddle.Tensor.reshape(Tensor([10, 184, 8, 0],"float32"), list[10,184,512,], )
paddle.Tensor.reshape(Tensor([10, 185, 0, 64],"float32"), list[10,185,512,], )
paddle.Tensor.reshape(Tensor([10, 185, 8, 0],"float32"), list[10,185,512,], )
paddle.Tensor.reshape(Tensor([10, 19, 0, 64],"float32"), list[10,19,512,], )
paddle.Tensor.reshape(Tensor([10, 19, 8, 0],"float32"), list[10,19,512,], )
paddle.Tensor.reshape(Tensor([10, 2, 0, 2, 4],"float32"), list[10,2,2,4,], )
paddle.Tensor.reshape(Tensor([10, 2, 0, 2],"float32"), list[10,-1,1,1,2,], )
paddle.Tensor.reshape(Tensor([10, 2, 0, 2],"float32"), list[10,-1,2,1,2,], )
paddle.Tensor.reshape(Tensor([10, 2, 0, 4],"float32"), list[10,2,8,], )
paddle.Tensor.reshape(Tensor([10, 2, 0, 4],"float32"), list[10,4,-1,], )
paddle.Tensor.reshape(Tensor([10, 2, 0, 64],"float32"), list[10,2,512,], )
paddle.Tensor.reshape(Tensor([10, 2, 0, 8],"float32"), list[10,16,-1,], )
paddle.Tensor.reshape(Tensor([10, 2, 0, 8],"float32"), list[10,2,64,], )
paddle.Tensor.reshape(Tensor([10, 2, 0],"float32"), list[10,2,8,24,], )
paddle.Tensor.reshape(Tensor([10, 2, 1, 0, 4],"float32"), list[10,2,2,4,], )
paddle.Tensor.reshape(Tensor([10, 2, 1, 0],"float32"), list[10,-1,1,1,2,], )
paddle.Tensor.reshape(Tensor([10, 2, 1, 2, 0],"float32"), list[10,2,2,4,], )
paddle.Tensor.reshape(Tensor([10, 2, 2, 0],"float32"), list[10,-1,2,1,2,], )
paddle.Tensor.reshape(Tensor([10, 2, 2, 0],"float32"), list[10,2,8,], )
paddle.Tensor.reshape(Tensor([10, 2, 2, 0],"float32"), list[10,4,-1,], )
paddle.Tensor.reshape(Tensor([10, 2, 8, 0],"float32"), list[10,16,-1,], )
paddle.Tensor.reshape(Tensor([10, 2, 8, 0],"float32"), list[10,2,512,], )
paddle.Tensor.reshape(Tensor([10, 2, 8, 0],"float32"), list[10,2,64,], )
paddle.Tensor.reshape(Tensor([10, 20, 0, 64],"float32"), list[10,20,512,], )
paddle.Tensor.reshape(Tensor([10, 20, 8, 0],"float32"), list[10,20,512,], )
paddle.Tensor.reshape(Tensor([10, 21, 0, 32],"float32"), list[10,21,256,], )
paddle.Tensor.reshape(Tensor([10, 21, 0, 64],"float32"), list[10,21,512,], )
paddle.Tensor.reshape(Tensor([10, 21, 0],"float32"), list[10,21,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 21, 8, 0],"float32"), list[10,21,256,], )
paddle.Tensor.reshape(Tensor([10, 21, 8, 0],"float32"), list[10,21,512,], )
paddle.Tensor.reshape(Tensor([10, 22, 0, 64],"float32"), list[10,22,512,], )
paddle.Tensor.reshape(Tensor([10, 22, 8, 0],"float32"), list[10,22,512,], )
paddle.Tensor.reshape(Tensor([10, 23, 0, 64],"float32"), list[10,23,512,], )
paddle.Tensor.reshape(Tensor([10, 23, 8, 0],"float32"), list[10,23,512,], )
paddle.Tensor.reshape(Tensor([10, 24, 0, 64],"float32"), list[10,24,512,], )
paddle.Tensor.reshape(Tensor([10, 24, 8, 0],"float32"), list[10,24,512,], )
paddle.Tensor.reshape(Tensor([10, 25, 0, 32],"float32"), list[10,25,256,], )
paddle.Tensor.reshape(Tensor([10, 25, 0, 64],"float32"), list[10,25,512,], )
paddle.Tensor.reshape(Tensor([10, 25, 0],"float32"), list[10,25,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 25, 8, 0],"float32"), list[10,25,256,], )
paddle.Tensor.reshape(Tensor([10, 25, 8, 0],"float32"), list[10,25,512,], )
paddle.Tensor.reshape(Tensor([10, 256, 0, 120],"float16"), list[10,256,120,120,], )
paddle.Tensor.reshape(Tensor([10, 256, 0, 120],"float16"), list[10,256,14400,], )
paddle.Tensor.reshape(Tensor([10, 256, 0, 120],"float32"), list[10,256,120,120,], )
paddle.Tensor.reshape(Tensor([10, 256, 0, 120],"float32"), list[10,256,14400,], )
paddle.Tensor.reshape(Tensor([10, 256, 120, 0],"float16"), list[10,256,120,120,], )
paddle.Tensor.reshape(Tensor([10, 256, 120, 0],"float16"), list[10,256,14400,], )
paddle.Tensor.reshape(Tensor([10, 256, 120, 0],"float32"), list[10,256,120,120,], )
paddle.Tensor.reshape(Tensor([10, 256, 120, 0],"float32"), list[10,256,14400,], )
paddle.Tensor.reshape(Tensor([10, 26, 0, 64],"float32"), list[10,26,512,], )
paddle.Tensor.reshape(Tensor([10, 26, 8, 0],"float32"), list[10,26,512,], )
paddle.Tensor.reshape(Tensor([10, 27, 0, 64],"float32"), list[10,27,512,], )
paddle.Tensor.reshape(Tensor([10, 27, 8, 0],"float32"), list[10,27,512,], )
paddle.Tensor.reshape(Tensor([10, 28, 0, 64],"float32"), list[10,28,512,], )
paddle.Tensor.reshape(Tensor([10, 28, 8, 0],"float32"), list[10,28,512,], )
paddle.Tensor.reshape(Tensor([10, 29, 0, 32],"float32"), list[10,29,256,], )
paddle.Tensor.reshape(Tensor([10, 29, 0, 64],"float32"), list[10,29,512,], )
paddle.Tensor.reshape(Tensor([10, 29, 0],"float32"), list[10,29,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 29, 8, 0],"float32"), list[10,29,256,], )
paddle.Tensor.reshape(Tensor([10, 29, 8, 0],"float32"), list[10,29,512,], )
paddle.Tensor.reshape(Tensor([10, 3, 0, 64],"float32"), list[10,3,512,], )
paddle.Tensor.reshape(Tensor([10, 3, 8, 0],"float32"), list[10,3,512,], )
paddle.Tensor.reshape(Tensor([10, 30, 0, 64],"float32"), list[10,30,512,], )
paddle.Tensor.reshape(Tensor([10, 30, 8, 0],"float32"), list[10,30,512,], )
paddle.Tensor.reshape(Tensor([10, 31, 0, 64],"float32"), list[10,31,512,], )
paddle.Tensor.reshape(Tensor([10, 31, 8, 0],"float32"), list[10,31,512,], )
paddle.Tensor.reshape(Tensor([10, 32, 0, 64],"float32"), list[10,32,512,], )
paddle.Tensor.reshape(Tensor([10, 32, 8, 0],"float32"), list[10,32,512,], )
paddle.Tensor.reshape(Tensor([10, 33, 0, 32],"float32"), list[10,33,256,], )
paddle.Tensor.reshape(Tensor([10, 33, 0, 64],"float32"), list[10,33,512,], )
paddle.Tensor.reshape(Tensor([10, 33, 0],"float32"), list[10,33,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 33, 8, 0],"float32"), list[10,33,256,], )
paddle.Tensor.reshape(Tensor([10, 33, 8, 0],"float32"), list[10,33,512,], )
paddle.Tensor.reshape(Tensor([10, 34, 0, 64],"float32"), list[10,34,512,], )
paddle.Tensor.reshape(Tensor([10, 34, 8, 0],"float32"), list[10,34,512,], )
paddle.Tensor.reshape(Tensor([10, 35, 0, 64],"float32"), list[10,35,512,], )
paddle.Tensor.reshape(Tensor([10, 35, 8, 0],"float32"), list[10,35,512,], )
paddle.Tensor.reshape(Tensor([10, 36, 0, 64],"float32"), list[10,36,512,], )
paddle.Tensor.reshape(Tensor([10, 36, 8, 0],"float32"), list[10,36,512,], )
paddle.Tensor.reshape(Tensor([10, 3600, 0],"float16"), list[10,0,8,64,], )
paddle.Tensor.reshape(Tensor([10, 3600, 0],"float32"), list[10,0,8,64,], )
paddle.Tensor.reshape(Tensor([10, 37, 0, 32],"float32"), list[10,37,256,], )
paddle.Tensor.reshape(Tensor([10, 37, 0, 64],"float32"), list[10,37,512,], )
paddle.Tensor.reshape(Tensor([10, 37, 0],"float32"), list[10,37,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 37, 8, 0],"float32"), list[10,37,256,], )
paddle.Tensor.reshape(Tensor([10, 37, 8, 0],"float32"), list[10,37,512,], )
paddle.Tensor.reshape(Tensor([10, 38, 0, 64],"float32"), list[10,38,512,], )
paddle.Tensor.reshape(Tensor([10, 38, 8, 0],"float32"), list[10,38,512,], )
paddle.Tensor.reshape(Tensor([10, 39, 0, 64],"float32"), list[10,39,512,], )
paddle.Tensor.reshape(Tensor([10, 39, 8, 0],"float32"), list[10,39,512,], )
paddle.Tensor.reshape(Tensor([10, 4, 0, 64],"float32"), list[10,4,512,], )
paddle.Tensor.reshape(Tensor([10, 4, 8, 0],"float32"), list[10,4,512,], )
paddle.Tensor.reshape(Tensor([10, 40, 0, 64],"float32"), list[10,40,512,], )
paddle.Tensor.reshape(Tensor([10, 40, 8, 0],"float32"), list[10,40,512,], )
paddle.Tensor.reshape(Tensor([10, 41, 0, 32],"float32"), list[10,41,256,], )
paddle.Tensor.reshape(Tensor([10, 41, 0, 64],"float32"), list[10,41,512,], )
paddle.Tensor.reshape(Tensor([10, 41, 0],"float32"), list[10,41,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 41, 8, 0],"float32"), list[10,41,256,], )
paddle.Tensor.reshape(Tensor([10, 41, 8, 0],"float32"), list[10,41,512,], )
paddle.Tensor.reshape(Tensor([10, 42, 0, 64],"float32"), list[10,42,512,], )
paddle.Tensor.reshape(Tensor([10, 42, 8, 0],"float32"), list[10,42,512,], )
paddle.Tensor.reshape(Tensor([10, 43, 0, 64],"float32"), list[10,43,512,], )
paddle.Tensor.reshape(Tensor([10, 43, 8, 0],"float32"), list[10,43,512,], )
paddle.Tensor.reshape(Tensor([10, 44, 0, 64],"float32"), list[10,44,512,], )
paddle.Tensor.reshape(Tensor([10, 44, 8, 0],"float32"), list[10,44,512,], )
paddle.Tensor.reshape(Tensor([10, 45, 0, 64],"float32"), list[10,45,512,], )
paddle.Tensor.reshape(Tensor([10, 45, 8, 0],"float32"), list[10,45,512,], )
paddle.Tensor.reshape(Tensor([10, 46, 0, 64],"float32"), list[10,46,512,], )
paddle.Tensor.reshape(Tensor([10, 46, 8, 0],"float32"), list[10,46,512,], )
paddle.Tensor.reshape(Tensor([10, 47, 0, 64],"float32"), list[10,47,512,], )
paddle.Tensor.reshape(Tensor([10, 47, 8, 0],"float32"), list[10,47,512,], )
paddle.Tensor.reshape(Tensor([10, 48, 0, 64],"float32"), list[10,48,512,], )
paddle.Tensor.reshape(Tensor([10, 48, 8, 0],"float32"), list[10,48,512,], )
paddle.Tensor.reshape(Tensor([10, 49, 0, 32],"float32"), list[10,49,256,], )
paddle.Tensor.reshape(Tensor([10, 49, 0, 64],"float32"), list[10,49,512,], )
paddle.Tensor.reshape(Tensor([10, 49, 0],"float32"), list[10,49,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 49, 8, 0],"float32"), list[10,49,256,], )
paddle.Tensor.reshape(Tensor([10, 49, 8, 0],"float32"), list[10,49,512,], )
paddle.Tensor.reshape(Tensor([10, 499, 0, 64],"float16"), list[10,0,512,], )
paddle.Tensor.reshape(Tensor([10, 499, 0, 64],"float32"), list[10,0,512,], )
paddle.Tensor.reshape(Tensor([10, 499, 0],"float32"), list[-1,43,], )
paddle.Tensor.reshape(Tensor([10, 499, 8, 0],"float16"), list[10,0,512,], )
paddle.Tensor.reshape(Tensor([10, 499, 8, 0],"float32"), list[10,0,512,], )
paddle.Tensor.reshape(Tensor([10, 5, 0, 1],"float32"), list[-1,25,], )
paddle.Tensor.reshape(Tensor([10, 5, 0, 64],"float32"), list[10,5,512,], )
paddle.Tensor.reshape(Tensor([10, 5, 5, 0],"float32"), list[-1,25,], )
paddle.Tensor.reshape(Tensor([10, 5, 8, 0],"float32"), list[10,5,512,], )
paddle.Tensor.reshape(Tensor([10, 50, 0, 64],"float32"), list[10,50,512,], )
paddle.Tensor.reshape(Tensor([10, 50, 8, 0],"float32"), list[10,50,512,], )
paddle.Tensor.reshape(Tensor([10, 51, 0, 64],"float32"), list[10,51,512,], )
paddle.Tensor.reshape(Tensor([10, 51, 8, 0],"float32"), list[10,51,512,], )
paddle.Tensor.reshape(Tensor([10, 512, 0, 60],"float16"), list[10,512,3600,], )
paddle.Tensor.reshape(Tensor([10, 512, 0, 60],"float16"), list[10,512,60,60,], )
paddle.Tensor.reshape(Tensor([10, 512, 0, 60],"float32"), list[10,512,3600,], )
paddle.Tensor.reshape(Tensor([10, 512, 0, 60],"float32"), list[10,512,60,60,], )
paddle.Tensor.reshape(Tensor([10, 512, 60, 0],"float16"), list[10,512,3600,], )
paddle.Tensor.reshape(Tensor([10, 512, 60, 0],"float16"), list[10,512,60,60,], )
paddle.Tensor.reshape(Tensor([10, 512, 60, 0],"float32"), list[10,512,3600,], )
paddle.Tensor.reshape(Tensor([10, 512, 60, 0],"float32"), list[10,512,60,60,], )
paddle.Tensor.reshape(Tensor([10, 52, 0, 64],"float32"), list[10,52,512,], )
paddle.Tensor.reshape(Tensor([10, 52, 8, 0],"float32"), list[10,52,512,], )
paddle.Tensor.reshape(Tensor([10, 53, 0, 64],"float32"), list[10,53,512,], )
paddle.Tensor.reshape(Tensor([10, 53, 8, 0],"float32"), list[10,53,512,], )
paddle.Tensor.reshape(Tensor([10, 54, 0, 64],"float32"), list[10,54,512,], )
paddle.Tensor.reshape(Tensor([10, 54, 8, 0],"float32"), list[10,54,512,], )
paddle.Tensor.reshape(Tensor([10, 55, 0, 64],"float32"), list[10,55,512,], )
paddle.Tensor.reshape(Tensor([10, 55, 8, 0],"float32"), list[10,55,512,], )
paddle.Tensor.reshape(Tensor([10, 56, 0, 64],"float32"), list[10,56,512,], )
paddle.Tensor.reshape(Tensor([10, 56, 8, 0],"float32"), list[10,56,512,], )
paddle.Tensor.reshape(Tensor([10, 57, 0, 32],"float32"), list[10,57,256,], )
paddle.Tensor.reshape(Tensor([10, 57, 0, 64],"float32"), list[10,57,512,], )
paddle.Tensor.reshape(Tensor([10, 57, 0],"float32"), list[10,57,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 57, 8, 0],"float32"), list[10,57,256,], )
paddle.Tensor.reshape(Tensor([10, 57, 8, 0],"float32"), list[10,57,512,], )
paddle.Tensor.reshape(Tensor([10, 58, 0, 64],"float32"), list[10,58,512,], )
paddle.Tensor.reshape(Tensor([10, 58, 8, 0],"float32"), list[10,58,512,], )
paddle.Tensor.reshape(Tensor([10, 59, 0, 64],"float32"), list[10,59,512,], )
paddle.Tensor.reshape(Tensor([10, 59, 8, 0],"float32"), list[10,59,512,], )
paddle.Tensor.reshape(Tensor([10, 6, 0, 64],"float32"), list[10,6,512,], )
paddle.Tensor.reshape(Tensor([10, 6, 8, 0],"float32"), list[10,6,512,], )
paddle.Tensor.reshape(Tensor([10, 60, 0, 64],"float32"), list[10,60,512,], )
paddle.Tensor.reshape(Tensor([10, 60, 8, 0],"float32"), list[10,60,512,], )
paddle.Tensor.reshape(Tensor([10, 61, 0, 64],"float32"), list[10,61,512,], )
paddle.Tensor.reshape(Tensor([10, 61, 8, 0],"float32"), list[10,61,512,], )
paddle.Tensor.reshape(Tensor([10, 62, 0, 64],"float32"), list[10,62,512,], )
paddle.Tensor.reshape(Tensor([10, 62, 8, 0],"float32"), list[10,62,512,], )
paddle.Tensor.reshape(Tensor([10, 63, 0, 64],"float32"), list[10,63,512,], )
paddle.Tensor.reshape(Tensor([10, 63, 8, 0],"float32"), list[10,63,512,], )
paddle.Tensor.reshape(Tensor([10, 64, 0, 64],"float32"), list[10,64,512,], )
paddle.Tensor.reshape(Tensor([10, 64, 8, 0],"float32"), list[10,64,512,], )
paddle.Tensor.reshape(Tensor([10, 65, 0, 32],"float32"), list[10,65,256,], )
paddle.Tensor.reshape(Tensor([10, 65, 0, 64],"float32"), list[10,65,512,], )
paddle.Tensor.reshape(Tensor([10, 65, 0],"float32"), list[10,65,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 65, 8, 0],"float32"), list[10,65,256,], )
paddle.Tensor.reshape(Tensor([10, 65, 8, 0],"float32"), list[10,65,512,], )
paddle.Tensor.reshape(Tensor([10, 66, 0, 64],"float32"), list[10,66,512,], )
paddle.Tensor.reshape(Tensor([10, 66, 8, 0],"float32"), list[10,66,512,], )
paddle.Tensor.reshape(Tensor([10, 67, 0, 64],"float32"), list[10,67,512,], )
paddle.Tensor.reshape(Tensor([10, 67, 8, 0],"float32"), list[10,67,512,], )
paddle.Tensor.reshape(Tensor([10, 68, 0, 64],"float32"), list[10,68,512,], )
paddle.Tensor.reshape(Tensor([10, 68, 8, 0],"float32"), list[10,68,512,], )
paddle.Tensor.reshape(Tensor([10, 69, 0, 64],"float32"), list[10,69,512,], )
paddle.Tensor.reshape(Tensor([10, 69, 8, 0],"float32"), list[10,69,512,], )
paddle.Tensor.reshape(Tensor([10, 7, 0, 64],"float32"), list[10,7,512,], )
paddle.Tensor.reshape(Tensor([10, 7, 8, 0],"float32"), list[10,7,512,], )
paddle.Tensor.reshape(Tensor([10, 70, 0, 64],"float32"), list[10,70,512,], )
paddle.Tensor.reshape(Tensor([10, 70, 8, 0],"float32"), list[10,70,512,], )
paddle.Tensor.reshape(Tensor([10, 71, 0, 64],"float32"), list[10,71,512,], )
paddle.Tensor.reshape(Tensor([10, 71, 8, 0],"float32"), list[10,71,512,], )
paddle.Tensor.reshape(Tensor([10, 72, 0, 64],"float32"), list[10,72,512,], )
paddle.Tensor.reshape(Tensor([10, 72, 8, 0],"float32"), list[10,72,512,], )
paddle.Tensor.reshape(Tensor([10, 73, 0, 32],"float32"), list[10,73,256,], )
paddle.Tensor.reshape(Tensor([10, 73, 0, 64],"float32"), list[10,73,512,], )
paddle.Tensor.reshape(Tensor([10, 73, 0],"float32"), list[10,73,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 73, 8, 0],"float32"), list[10,73,256,], )
paddle.Tensor.reshape(Tensor([10, 73, 8, 0],"float32"), list[10,73,512,], )
paddle.Tensor.reshape(Tensor([10, 74, 0, 64],"float32"), list[10,74,512,], )
paddle.Tensor.reshape(Tensor([10, 74, 8, 0],"float32"), list[10,74,512,], )
paddle.Tensor.reshape(Tensor([10, 75, 0, 64],"float32"), list[10,75,512,], )
paddle.Tensor.reshape(Tensor([10, 75, 8, 0],"float32"), list[10,75,512,], )
paddle.Tensor.reshape(Tensor([10, 76, 0, 64],"float32"), list[10,76,512,], )
paddle.Tensor.reshape(Tensor([10, 76, 8, 0],"float32"), list[10,76,512,], )
paddle.Tensor.reshape(Tensor([10, 77, 0, 64],"float32"), list[10,77,512,], )
paddle.Tensor.reshape(Tensor([10, 77, 8, 0],"float32"), list[10,77,512,], )
paddle.Tensor.reshape(Tensor([10, 78, 0, 64],"float32"), list[10,78,512,], )
paddle.Tensor.reshape(Tensor([10, 78, 8, 0],"float32"), list[10,78,512,], )
paddle.Tensor.reshape(Tensor([10, 79, 0, 64],"float32"), list[10,79,512,], )
paddle.Tensor.reshape(Tensor([10, 79, 8, 0],"float32"), list[10,79,512,], )
paddle.Tensor.reshape(Tensor([10, 8, 0, 64],"float32"), list[10,8,512,], )
paddle.Tensor.reshape(Tensor([10, 8, 8, 0],"float32"), list[10,8,512,], )
paddle.Tensor.reshape(Tensor([10, 80, 0, 64],"float32"), list[10,80,512,], )
paddle.Tensor.reshape(Tensor([10, 80, 8, 0],"float32"), list[10,80,512,], )
paddle.Tensor.reshape(Tensor([10, 81, 0, 32],"float32"), list[10,81,256,], )
paddle.Tensor.reshape(Tensor([10, 81, 0, 64],"float32"), list[10,81,512,], )
paddle.Tensor.reshape(Tensor([10, 81, 0],"float32"), list[10,81,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 81, 8, 0],"float32"), list[10,81,256,], )
paddle.Tensor.reshape(Tensor([10, 81, 8, 0],"float32"), list[10,81,512,], )
paddle.Tensor.reshape(Tensor([10, 82, 0, 64],"float32"), list[10,82,512,], )
paddle.Tensor.reshape(Tensor([10, 82, 8, 0],"float32"), list[10,82,512,], )
paddle.Tensor.reshape(Tensor([10, 83, 0, 64],"float32"), list[10,83,512,], )
paddle.Tensor.reshape(Tensor([10, 83, 8, 0],"float32"), list[10,83,512,], )
paddle.Tensor.reshape(Tensor([10, 84, 0, 64],"float32"), list[10,84,512,], )
paddle.Tensor.reshape(Tensor([10, 84, 8, 0],"float32"), list[10,84,512,], )
paddle.Tensor.reshape(Tensor([10, 85, 0, 64],"float32"), list[10,85,512,], )
paddle.Tensor.reshape(Tensor([10, 85, 8, 0],"float32"), list[10,85,512,], )
paddle.Tensor.reshape(Tensor([10, 86, 0, 64],"float32"), list[10,86,512,], )
paddle.Tensor.reshape(Tensor([10, 86, 8, 0],"float32"), list[10,86,512,], )
paddle.Tensor.reshape(Tensor([10, 87, 0, 64],"float32"), list[10,87,512,], )
paddle.Tensor.reshape(Tensor([10, 87, 8, 0],"float32"), list[10,87,512,], )
paddle.Tensor.reshape(Tensor([10, 88, 0, 64],"float32"), list[10,88,512,], )
paddle.Tensor.reshape(Tensor([10, 88, 8, 0],"float32"), list[10,88,512,], )
paddle.Tensor.reshape(Tensor([10, 89, 0, 32],"float32"), list[10,89,256,], )
paddle.Tensor.reshape(Tensor([10, 89, 0, 64],"float32"), list[10,89,512,], )
paddle.Tensor.reshape(Tensor([10, 89, 0],"float32"), list[10,89,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 89, 8, 0],"float32"), list[10,89,256,], )
paddle.Tensor.reshape(Tensor([10, 89, 8, 0],"float32"), list[10,89,512,], )
paddle.Tensor.reshape(Tensor([10, 9, 0, 32],"float32"), list[10,9,256,], )
paddle.Tensor.reshape(Tensor([10, 9, 0, 64],"float32"), list[10,9,512,], )
paddle.Tensor.reshape(Tensor([10, 9, 0],"float32"), list[10,9,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 9, 8, 0],"float32"), list[10,9,256,], )
paddle.Tensor.reshape(Tensor([10, 9, 8, 0],"float32"), list[10,9,512,], )
paddle.Tensor.reshape(Tensor([10, 90, 0, 64],"float32"), list[10,90,512,], )
paddle.Tensor.reshape(Tensor([10, 90, 8, 0],"float32"), list[10,90,512,], )
paddle.Tensor.reshape(Tensor([10, 91, 0, 64],"float32"), list[10,91,512,], )
paddle.Tensor.reshape(Tensor([10, 91, 8, 0],"float32"), list[10,91,512,], )
paddle.Tensor.reshape(Tensor([10, 92, 0, 64],"float32"), list[10,92,512,], )
paddle.Tensor.reshape(Tensor([10, 92, 8, 0],"float32"), list[10,92,512,], )
paddle.Tensor.reshape(Tensor([10, 93, 0, 64],"float32"), list[10,93,512,], )
paddle.Tensor.reshape(Tensor([10, 93, 8, 0],"float32"), list[10,93,512,], )
paddle.Tensor.reshape(Tensor([10, 94, 0, 64],"float32"), list[10,94,512,], )
paddle.Tensor.reshape(Tensor([10, 94, 8, 0],"float32"), list[10,94,512,], )
paddle.Tensor.reshape(Tensor([10, 95, 0, 64],"float32"), list[10,95,512,], )
paddle.Tensor.reshape(Tensor([10, 95, 8, 0],"float32"), list[10,95,512,], )
paddle.Tensor.reshape(Tensor([10, 96, 0, 64],"float32"), list[10,96,512,], )
paddle.Tensor.reshape(Tensor([10, 96, 8, 0],"float32"), list[10,96,512,], )
paddle.Tensor.reshape(Tensor([10, 97, 0, 32],"float32"), list[10,97,256,], )
paddle.Tensor.reshape(Tensor([10, 97, 0, 64],"float32"), list[10,97,512,], )
paddle.Tensor.reshape(Tensor([10, 97, 0],"float32"), list[10,97,3,8,32,], )
paddle.Tensor.reshape(Tensor([10, 97, 8, 0],"float32"), list[10,97,256,], )
paddle.Tensor.reshape(Tensor([10, 97, 8, 0],"float32"), list[10,97,512,], )
paddle.Tensor.reshape(Tensor([10, 98, 0, 64],"float32"), list[10,98,512,], )
paddle.Tensor.reshape(Tensor([10, 98, 8, 0],"float32"), list[10,98,512,], )
paddle.Tensor.reshape(Tensor([10, 99, 0, 64],"float32"), list[10,99,512,], )
paddle.Tensor.reshape(Tensor([10, 99, 8, 0],"float32"), list[10,99,512,], )
paddle.Tensor.reshape(Tensor([100, 0, 2, 2, 128],"float16"), list[100,2,4,128,], )
paddle.Tensor.reshape(Tensor([100, 0, 4, 128],"float16"), list[100,8,-1,], )
paddle.Tensor.reshape(Tensor([100, 0, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([100, 0],"float16"), list[-1,17,], )
paddle.Tensor.reshape(Tensor([100, 0],"float32"), list[1,100,1,], )
paddle.Tensor.reshape(Tensor([100, 0],"float32"), list[1,100,-1,], )
paddle.Tensor.reshape(Tensor([100, 0],"float32"), list[1,100,4,], )
paddle.Tensor.reshape(Tensor([100, 0],"float32"), list[100,1,2,], )
paddle.Tensor.reshape(Tensor([100, 0],"float32"), list[4,-1,6069,], )
paddle.Tensor.reshape(Tensor([100, 0],"float32"), list[4,-1,9261,], )
paddle.Tensor.reshape(Tensor([100, 0],"float32"), list[4,25,-1,], )
paddle.Tensor.reshape(Tensor([100, 0],"int64"), list[1,100,], )
paddle.Tensor.reshape(Tensor([100, 1, 0],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([100, 2, 0, 128],"float16"), list[100,8,-1,], )
paddle.Tensor.reshape(Tensor([100, 2, 0, 2, 128],"float16"), list[100,2,4,128,], )
paddle.Tensor.reshape(Tensor([100, 2, 0],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([100, 2, 2, 0, 128],"float16"), list[100,2,4,128,], )
paddle.Tensor.reshape(Tensor([100, 2, 2, 2, 0],"float16"), list[100,2,4,128,], )
paddle.Tensor.reshape(Tensor([100, 2, 4, 0],"float16"), list[100,8,-1,], )
paddle.Tensor.reshape(Tensor([1000, 0],"float32"), list[1000,1,2,], )
paddle.Tensor.reshape(Tensor([1001, 0],"float32"), list[1001,1,2,], )
paddle.Tensor.reshape(Tensor([1002, 0],"float32"), list[1002,1,2,], )
paddle.Tensor.reshape(Tensor([1003, 0],"float32"), list[1003,1,2,], )
paddle.Tensor.reshape(Tensor([100352, 0],"float32"), list[32,-1,4,], )
paddle.Tensor.reshape(Tensor([1004, 0],"float32"), list[1004,1,2,], )
paddle.Tensor.reshape(Tensor([1005, 0],"float32"), list[1005,1,2,], )
paddle.Tensor.reshape(Tensor([1006, 0],"float32"), list[1006,1,2,], )
paddle.Tensor.reshape(Tensor([1007, 0],"float32"), list[1007,1,2,], )
paddle.Tensor.reshape(Tensor([1008, 0, 7],"float32"), list[126,8,7,7,], )
paddle.Tensor.reshape(Tensor([1008, 0],"float32"), list[1008,1,2,], )
paddle.Tensor.reshape(Tensor([1008, 7, 0],"float32"), list[126,8,7,7,], )
paddle.Tensor.reshape(Tensor([1009, 0],"float32"), list[1009,1,2,], )
paddle.Tensor.reshape(Tensor([101, 0, 2, 2, 128],"float16"), list[101,2,4,128,], )
paddle.Tensor.reshape(Tensor([101, 0, 4, 128],"float16"), list[101,8,-1,], )
paddle.Tensor.reshape(Tensor([101, 0],"float32"), list[101,1,2,], )
paddle.Tensor.reshape(Tensor([101, 2, 0, 128],"float16"), list[101,8,-1,], )
paddle.Tensor.reshape(Tensor([101, 2, 0, 2, 128],"float16"), list[101,2,4,128,], )
paddle.Tensor.reshape(Tensor([101, 2, 2, 0, 128],"float16"), list[101,2,4,128,], )
paddle.Tensor.reshape(Tensor([101, 2, 2, 2, 0],"float16"), list[101,2,4,128,], )
paddle.Tensor.reshape(Tensor([101, 2, 4, 0],"float16"), list[101,8,-1,], )
paddle.Tensor.reshape(Tensor([1010, 0],"float32"), list[1010,1,2,], )
paddle.Tensor.reshape(Tensor([1011, 0],"float32"), list[1011,1,2,], )
paddle.Tensor.reshape(Tensor([1012, 0],"float32"), list[1012,1,2,], )
paddle.Tensor.reshape(Tensor([10121, 0],"float32"), list[10121,1,2,], )
paddle.Tensor.reshape(Tensor([1013, 0],"float32"), list[1013,1,2,], )
paddle.Tensor.reshape(Tensor([1014, 0],"float32"), list[1014,1,2,], )
paddle.Tensor.reshape(Tensor([1015, 0],"float32"), list[1015,1,2,], )
paddle.Tensor.reshape(Tensor([1016, 0],"float32"), list[1016,1,2,], )
paddle.Tensor.reshape(Tensor([10164, 0],"float32"), list[4,2541,4,], )
paddle.Tensor.reshape(Tensor([1017, 0],"float32"), list[1017,1,2,], )
paddle.Tensor.reshape(Tensor([1018, 0],"float32"), list[1018,1,2,], )
paddle.Tensor.reshape(Tensor([1019, 0],"float32"), list[1019,1,2,], )
paddle.Tensor.reshape(Tensor([102, 0, 2, 2, 128],"float16"), list[102,2,4,128,], )
paddle.Tensor.reshape(Tensor([102, 0, 4, 128],"float16"), list[102,8,-1,], )
paddle.Tensor.reshape(Tensor([102, 0],"float32"), list[102,1,2,], )
paddle.Tensor.reshape(Tensor([102, 2, 0, 128],"float16"), list[102,8,-1,], )
paddle.Tensor.reshape(Tensor([102, 2, 0, 2, 128],"float16"), list[102,2,4,128,], )
paddle.Tensor.reshape(Tensor([102, 2, 2, 0, 128],"float16"), list[102,2,4,128,], )
paddle.Tensor.reshape(Tensor([102, 2, 2, 2, 0],"float16"), list[102,2,4,128,], )
paddle.Tensor.reshape(Tensor([102, 2, 4, 0],"float16"), list[102,8,-1,], )
paddle.Tensor.reshape(Tensor([1020, 0],"float32"), list[1020,1,2,], )
paddle.Tensor.reshape(Tensor([1021, 0],"float32"), list[1021,1,2,], )
paddle.Tensor.reshape(Tensor([1022, 0],"float32"), list[1022,1,2,], )
paddle.Tensor.reshape(Tensor([1023, 0],"float32"), list[1023,1,2,], )
paddle.Tensor.reshape(Tensor([1024, 0, 1, 1],"float32"), list[1,1024,-1,], )
paddle.Tensor.reshape(Tensor([1024, 0, 12, 256],"float32"), list[-1,144,256,], )
paddle.Tensor.reshape(Tensor([1024, 0, 12, 256],"float32"), list[-1,4,4,12,12,256,], )
paddle.Tensor.reshape(Tensor([1024, 0, 128, 1],"float32"), tuple(-1,256,128,128,), )
paddle.Tensor.reshape(Tensor([1024, 0, 128, 128],"float32"), tuple(-1,1,128,128,), )
paddle.Tensor.reshape(Tensor([1024, 0, 128],"float32"), list[-1,7,7,128,], )
paddle.Tensor.reshape(Tensor([1024, 0, 129, 1, 1, 1],"float32"), tuple(-1,1,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 0, 129, 1, 129, 1],"float32"), tuple(-1,1,129,129,), )
paddle.Tensor.reshape(Tensor([1024, 0, 129, 1],"float32"), tuple(-1,129,1,129,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 0, 131, 131],"float32"), list[-1,1,131,131,], )
paddle.Tensor.reshape(Tensor([1024, 0, 144, 144],"float32"), list[64,16,8,144,144,], )
paddle.Tensor.reshape(Tensor([1024, 0, 192],"float32"), list[-1,7,7,192,], )
paddle.Tensor.reshape(Tensor([1024, 0, 255, 1],"float32"), tuple(-1,128,255,255,), )
paddle.Tensor.reshape(Tensor([1024, 0, 255, 255],"float32"), tuple(-1,1,255,255,), )
paddle.Tensor.reshape(Tensor([1024, 0, 256, 1, 1, 1],"float32"), tuple(-1,1,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 0, 256, 1, 256, 1],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([1024, 0, 256, 1],"float32"), tuple(-1,128,256,256,), )
paddle.Tensor.reshape(Tensor([1024, 0, 256, 1],"float32"), tuple(-1,256,1,256,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 0, 256, 256],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([1024, 0, 256],"float32"), list[-1,12,12,256,], )
paddle.Tensor.reshape(Tensor([1024, 0, 256],"float32"), list[-1,7,7,256,], )
paddle.Tensor.reshape(Tensor([1024, 0, 257, 1, 257, 1],"float32"), tuple(-1,1,257,257,), )
paddle.Tensor.reshape(Tensor([1024, 0, 257, 1],"float32"), tuple(-1,128,257,257,), )
paddle.Tensor.reshape(Tensor([1024, 0, 257, 1],"float32"), tuple(-1,257,1,257,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 0, 257, 257],"float32"), tuple(-1,1,257,257,), )
paddle.Tensor.reshape(Tensor([1024, 0, 258, 258],"float32"), list[-1,1,258,258,], )
paddle.Tensor.reshape(Tensor([1024, 0, 259, 259],"float32"), list[-1,1,259,259,], )
paddle.Tensor.reshape(Tensor([1024, 0, 260, 260],"float32"), list[-1,1,260,260,], )
paddle.Tensor.reshape(Tensor([1024, 0, 3, 3],"float32"), tuple(4,256,512,3,3,), )
paddle.Tensor.reshape(Tensor([1024, 0, 3, 3],"float32"), tuple(8,128,256,3,3,), )
paddle.Tensor.reshape(Tensor([1024, 0, 384],"float32"), list[1024,49,3,4,32,], )
paddle.Tensor.reshape(Tensor([1024, 0, 4, 32],"float32"), list[1024,49,128,], )
paddle.Tensor.reshape(Tensor([1024, 0, 49, 49],"float32"), list[16,64,4,49,49,], )
paddle.Tensor.reshape(Tensor([1024, 0, 49, 49],"float32"), list[64,16,6,49,49,], )
paddle.Tensor.reshape(Tensor([1024, 0, 49, 49],"float32"), list[64,16,8,49,49,], )
paddle.Tensor.reshape(Tensor([1024, 0, 576],"float32"), list[1024,49,3,6,32,], )
paddle.Tensor.reshape(Tensor([1024, 0, 6, 32],"float32"), list[1024,49,192,], )
paddle.Tensor.reshape(Tensor([1024, 0, 7, 128],"float32"), list[-1,49,128,], )
paddle.Tensor.reshape(Tensor([1024, 0, 7, 128],"float32"), list[-1,8,8,7,7,128,], )
paddle.Tensor.reshape(Tensor([1024, 0, 7, 192],"float32"), list[-1,4,4,7,7,192,], )
paddle.Tensor.reshape(Tensor([1024, 0, 7, 192],"float32"), list[-1,49,192,], )
paddle.Tensor.reshape(Tensor([1024, 0, 7, 256],"float32"), list[-1,4,4,7,7,256,], )
paddle.Tensor.reshape(Tensor([1024, 0, 7, 256],"float32"), list[-1,49,256,], )
paddle.Tensor.reshape(Tensor([1024, 0, 768],"float32"), list[1024,144,3,8,32,], )
paddle.Tensor.reshape(Tensor([1024, 0, 768],"float32"), list[1024,49,3,8,32,], )
paddle.Tensor.reshape(Tensor([1024, 0, 8, 32],"float32"), list[1024,144,256,], )
paddle.Tensor.reshape(Tensor([1024, 0, 8, 32],"float32"), list[1024,49,256,], )
paddle.Tensor.reshape(Tensor([1024, 0],"float16"), list[64,16,4,], )
paddle.Tensor.reshape(Tensor([1024, 0],"float32"), list[1,1024,4,], )
paddle.Tensor.reshape(Tensor([1024, 0],"float32"), list[1024,1,2,], )
paddle.Tensor.reshape(Tensor([1024, 0],"float32"), list[64,-1,2125,], )
paddle.Tensor.reshape(Tensor([1024, 0],"float32"), list[64,-1,2577,], )
paddle.Tensor.reshape(Tensor([1024, 0],"float32"), list[64,-1,4,], )
paddle.Tensor.reshape(Tensor([1024, 0],"float32"), list[64,16,-1,], )
paddle.Tensor.reshape(Tensor([1024, 0],"float32"), list[64,16,4,], )
paddle.Tensor.reshape(Tensor([1024, 0],"int64"), list[1024,-1,], )
paddle.Tensor.reshape(Tensor([1024, 1, 0, 1, 129, 1],"float32"), tuple(-1,1,129,129,), )
paddle.Tensor.reshape(Tensor([1024, 1, 0, 1, 256, 1],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([1024, 1, 0, 1, 257, 1],"float32"), tuple(-1,1,257,257,), )
paddle.Tensor.reshape(Tensor([1024, 1, 0, 128],"float32"), tuple(-1,1,128,128,), )
paddle.Tensor.reshape(Tensor([1024, 1, 0, 131],"float32"), list[-1,1,131,131,], )
paddle.Tensor.reshape(Tensor([1024, 1, 0, 255],"float32"), tuple(-1,1,255,255,), )
paddle.Tensor.reshape(Tensor([1024, 1, 0, 256],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([1024, 1, 0, 257],"float32"), tuple(-1,1,257,257,), )
paddle.Tensor.reshape(Tensor([1024, 1, 0, 258],"float32"), list[-1,1,258,258,], )
paddle.Tensor.reshape(Tensor([1024, 1, 0, 259],"float32"), list[-1,1,259,259,], )
paddle.Tensor.reshape(Tensor([1024, 1, 0, 260],"float32"), list[-1,1,260,260,], )
paddle.Tensor.reshape(Tensor([1024, 1, 128, 0],"float32"), tuple(-1,1,128,128,), )
paddle.Tensor.reshape(Tensor([1024, 1, 129, 0, 129, 1],"float32"), tuple(-1,1,129,129,), )
paddle.Tensor.reshape(Tensor([1024, 1, 129, 1, 0, 1],"float32"), tuple(-1,1,129,129,), )
paddle.Tensor.reshape(Tensor([1024, 1, 129, 1, 129, 0],"float32"), tuple(-1,1,129,129,), )
paddle.Tensor.reshape(Tensor([1024, 1, 131, 0],"float32"), list[-1,1,131,131,], )
paddle.Tensor.reshape(Tensor([1024, 1, 255, 0],"float32"), tuple(-1,1,255,255,), )
paddle.Tensor.reshape(Tensor([1024, 1, 256, 0, 256, 1],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([1024, 1, 256, 0],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([1024, 1, 256, 1, 0, 1],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([1024, 1, 256, 1, 256, 0],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([1024, 1, 257, 0, 257, 1],"float32"), tuple(-1,1,257,257,), )
paddle.Tensor.reshape(Tensor([1024, 1, 257, 0],"float32"), tuple(-1,1,257,257,), )
paddle.Tensor.reshape(Tensor([1024, 1, 257, 1, 0, 1],"float32"), tuple(-1,1,257,257,), )
paddle.Tensor.reshape(Tensor([1024, 1, 257, 1, 257, 0],"float32"), tuple(-1,1,257,257,), )
paddle.Tensor.reshape(Tensor([1024, 1, 258, 0],"float32"), list[-1,1,258,258,], )
paddle.Tensor.reshape(Tensor([1024, 1, 259, 0],"float32"), list[-1,1,259,259,], )
paddle.Tensor.reshape(Tensor([1024, 1, 260, 0],"float32"), list[-1,1,260,260,], )
paddle.Tensor.reshape(Tensor([1024, 12, 0, 256],"float32"), list[-1,144,256,], )
paddle.Tensor.reshape(Tensor([1024, 12, 0, 256],"float32"), list[-1,4,4,12,12,256,], )
paddle.Tensor.reshape(Tensor([1024, 12, 12, 0],"float32"), list[-1,144,256,], )
paddle.Tensor.reshape(Tensor([1024, 12, 12, 0],"float32"), list[-1,4,4,12,12,256,], )
paddle.Tensor.reshape(Tensor([1024, 128, 0, 1],"float32"), tuple(-1,256,128,128,), )
paddle.Tensor.reshape(Tensor([1024, 128, 128, 0],"float32"), tuple(-1,256,128,128,), )
paddle.Tensor.reshape(Tensor([1024, 129, 0, 1, 1, 1],"float32"), tuple(-1,1,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 129, 0, 1],"float32"), tuple(-1,129,1,129,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 129, 129, 0, 1, 1],"float32"), tuple(-1,1,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 129, 129, 0],"float32"), tuple(-1,129,1,129,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 129, 129, 1, 0, 1],"float32"), tuple(-1,1,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 129, 129, 1, 1, 0],"float32"), tuple(-1,1,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 144, 0, 32],"float32"), list[1024,144,256,], )
paddle.Tensor.reshape(Tensor([1024, 144, 0],"float32"), list[-1,12,12,256,], )
paddle.Tensor.reshape(Tensor([1024, 144, 0],"float32"), list[1024,144,3,8,32,], )
paddle.Tensor.reshape(Tensor([1024, 144, 8, 0],"float32"), list[1024,144,256,], )
paddle.Tensor.reshape(Tensor([1024, 255, 0, 1],"float32"), tuple(-1,128,255,255,), )
paddle.Tensor.reshape(Tensor([1024, 255, 255, 0],"float32"), tuple(-1,128,255,255,), )
paddle.Tensor.reshape(Tensor([1024, 256, 0, 1, 1, 1],"float32"), tuple(-1,1,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 256, 0, 1],"float32"), list[1,1024,-1,], )
paddle.Tensor.reshape(Tensor([1024, 256, 0, 1],"float32"), tuple(-1,128,256,256,), )
paddle.Tensor.reshape(Tensor([1024, 256, 0, 1],"float32"), tuple(-1,256,1,256,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 256, 0, 3],"float32"), tuple(8,128,256,3,3,), )
paddle.Tensor.reshape(Tensor([1024, 256, 1, 0],"float32"), list[1,1024,-1,], )
paddle.Tensor.reshape(Tensor([1024, 256, 256, 0, 1, 1],"float32"), tuple(-1,1,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 256, 256, 0],"float32"), tuple(-1,128,256,256,), )
paddle.Tensor.reshape(Tensor([1024, 256, 256, 0],"float32"), tuple(-1,256,1,256,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 256, 256, 1, 0, 1],"float32"), tuple(-1,1,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 256, 256, 1, 1, 0],"float32"), tuple(-1,1,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 256, 3, 0],"float32"), tuple(8,128,256,3,3,), )
paddle.Tensor.reshape(Tensor([1024, 257, 0, 1],"float32"), tuple(-1,128,257,257,), )
paddle.Tensor.reshape(Tensor([1024, 257, 0, 1],"float32"), tuple(-1,257,1,257,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 257, 257, 0],"float32"), tuple(-1,128,257,257,), )
paddle.Tensor.reshape(Tensor([1024, 257, 257, 0],"float32"), tuple(-1,257,1,257,1,1,), )
paddle.Tensor.reshape(Tensor([1024, 4, 0, 49],"float32"), list[16,64,4,49,49,], )
paddle.Tensor.reshape(Tensor([1024, 4, 49, 0],"float32"), list[16,64,4,49,49,], )
paddle.Tensor.reshape(Tensor([1024, 49, 0, 32],"float32"), list[1024,49,128,], )
paddle.Tensor.reshape(Tensor([1024, 49, 0, 32],"float32"), list[1024,49,192,], )
paddle.Tensor.reshape(Tensor([1024, 49, 0, 32],"float32"), list[1024,49,256,], )
paddle.Tensor.reshape(Tensor([1024, 49, 0],"float32"), list[-1,7,7,128,], )
paddle.Tensor.reshape(Tensor([1024, 49, 0],"float32"), list[-1,7,7,192,], )
paddle.Tensor.reshape(Tensor([1024, 49, 0],"float32"), list[-1,7,7,256,], )
paddle.Tensor.reshape(Tensor([1024, 49, 0],"float32"), list[1024,49,3,4,32,], )
paddle.Tensor.reshape(Tensor([1024, 49, 0],"float32"), list[1024,49,3,6,32,], )
paddle.Tensor.reshape(Tensor([1024, 49, 0],"float32"), list[1024,49,3,8,32,], )
paddle.Tensor.reshape(Tensor([1024, 49, 4, 0],"float32"), list[1024,49,128,], )
paddle.Tensor.reshape(Tensor([1024, 49, 6, 0],"float32"), list[1024,49,192,], )
paddle.Tensor.reshape(Tensor([1024, 49, 8, 0],"float32"), list[1024,49,256,], )
paddle.Tensor.reshape(Tensor([1024, 512, 0, 1],"float32"), list[1,1024,-1,], )
paddle.Tensor.reshape(Tensor([1024, 512, 0, 3],"float32"), tuple(4,256,512,3,3,), )
paddle.Tensor.reshape(Tensor([1024, 512, 1, 0],"float32"), list[1,1024,-1,], )
paddle.Tensor.reshape(Tensor([1024, 512, 3, 0],"float32"), tuple(4,256,512,3,3,), )
paddle.Tensor.reshape(Tensor([1024, 6, 0, 49],"float32"), list[64,16,6,49,49,], )
paddle.Tensor.reshape(Tensor([1024, 6, 49, 0],"float32"), list[64,16,6,49,49,], )
paddle.Tensor.reshape(Tensor([1024, 7, 0, 128],"float32"), list[-1,49,128,], )
paddle.Tensor.reshape(Tensor([1024, 7, 0, 128],"float32"), list[-1,8,8,7,7,128,], )
paddle.Tensor.reshape(Tensor([1024, 7, 0, 192],"float32"), list[-1,4,4,7,7,192,], )
paddle.Tensor.reshape(Tensor([1024, 7, 0, 192],"float32"), list[-1,49,192,], )
paddle.Tensor.reshape(Tensor([1024, 7, 0, 256],"float32"), list[-1,4,4,7,7,256,], )
paddle.Tensor.reshape(Tensor([1024, 7, 0, 256],"float32"), list[-1,49,256,], )
paddle.Tensor.reshape(Tensor([1024, 7, 7, 0],"float32"), list[-1,4,4,7,7,192,], )
paddle.Tensor.reshape(Tensor([1024, 7, 7, 0],"float32"), list[-1,4,4,7,7,256,], )
paddle.Tensor.reshape(Tensor([1024, 7, 7, 0],"float32"), list[-1,49,128,], )
paddle.Tensor.reshape(Tensor([1024, 7, 7, 0],"float32"), list[-1,49,192,], )
paddle.Tensor.reshape(Tensor([1024, 7, 7, 0],"float32"), list[-1,49,256,], )
paddle.Tensor.reshape(Tensor([1024, 7, 7, 0],"float32"), list[-1,8,8,7,7,128,], )
paddle.Tensor.reshape(Tensor([1024, 8, 0, 144],"float32"), list[64,16,8,144,144,], )
paddle.Tensor.reshape(Tensor([1024, 8, 0, 49],"float32"), list[64,16,8,49,49,], )
paddle.Tensor.reshape(Tensor([1024, 8, 144, 0],"float32"), list[64,16,8,144,144,], )
paddle.Tensor.reshape(Tensor([1024, 8, 49, 0],"float32"), list[64,16,8,49,49,], )
paddle.Tensor.reshape(Tensor([102400, 0],"float16"), list[64,1600,4,], )
paddle.Tensor.reshape(Tensor([102400, 0],"float32"), list[4,-1,4,], )
paddle.Tensor.reshape(Tensor([102400, 0],"float32"), list[64,-1,4,], )
paddle.Tensor.reshape(Tensor([102400, 0],"float32"), list[64,1600,4,], )
paddle.Tensor.reshape(Tensor([1025, 0],"float32"), list[1025,1,2,], )
paddle.Tensor.reshape(Tensor([1026, 0],"float32"), list[1026,1,2,], )
paddle.Tensor.reshape(Tensor([1027, 0],"float32"), list[1027,1,2,], )
paddle.Tensor.reshape(Tensor([1028, 0],"float32"), list[1028,1,2,], )
paddle.Tensor.reshape(Tensor([10285, 0],"float32"), list[1,10285,4,], )
paddle.Tensor.reshape(Tensor([1029, 0],"float32"), list[1029,1,2,], )
paddle.Tensor.reshape(Tensor([103, 0, 2, 2, 128],"float16"), list[103,2,4,128,], )
paddle.Tensor.reshape(Tensor([103, 0, 4, 128],"float16"), list[103,8,-1,], )
paddle.Tensor.reshape(Tensor([103, 0],"float32"), list[103,1,2,], )
paddle.Tensor.reshape(Tensor([103, 2, 0, 128],"float16"), list[103,8,-1,], )
paddle.Tensor.reshape(Tensor([103, 2, 0, 2, 128],"float16"), list[103,2,4,128,], )
paddle.Tensor.reshape(Tensor([103, 2, 2, 0, 128],"float16"), list[103,2,4,128,], )
paddle.Tensor.reshape(Tensor([103, 2, 2, 2, 0],"float16"), list[103,2,4,128,], )
paddle.Tensor.reshape(Tensor([103, 2, 4, 0],"float16"), list[103,8,-1,], )
paddle.Tensor.reshape(Tensor([1030, 0],"float32"), list[1030,1,2,], )
paddle.Tensor.reshape(Tensor([10307, 0],"float32"), list[10307,1,2,], )
paddle.Tensor.reshape(Tensor([10308, 0],"float32"), list[4,2577,4,], )
paddle.Tensor.reshape(Tensor([1031, 0],"float32"), list[1031,1,2,], )
paddle.Tensor.reshape(Tensor([1032, 0],"float32"), list[1032,1,2,], )
paddle.Tensor.reshape(Tensor([1033, 0],"float32"), list[1033,1,2,], )
paddle.Tensor.reshape(Tensor([1034, 0],"float32"), list[1034,1,2,], )
paddle.Tensor.reshape(Tensor([1035, 0],"float32"), list[1035,1,2,], )
paddle.Tensor.reshape(Tensor([1036, 0],"float32"), list[1036,1,2,], )
paddle.Tensor.reshape(Tensor([10368, 0],"float32"), list[2,-1,4,], )
paddle.Tensor.reshape(Tensor([10368, 0],"float32"), list[2,5184,4,], )
paddle.Tensor.reshape(Tensor([10368, 0],"float32"), list[24,-1,4,], )
paddle.Tensor.reshape(Tensor([10368, 0],"float32"), list[8,1296,4,], )
paddle.Tensor.reshape(Tensor([1037, 0],"float32"), list[1037,1,2,], )
paddle.Tensor.reshape(Tensor([1038, 0],"float32"), list[1038,1,2,], )
paddle.Tensor.reshape(Tensor([1039, 0],"float32"), list[1039,1,2,], )
paddle.Tensor.reshape(Tensor([104, 0, 1, 1],"float32"), list[104,128,], )
paddle.Tensor.reshape(Tensor([104, 0, 2, 2, 128],"float16"), list[104,2,4,128,], )
paddle.Tensor.reshape(Tensor([104, 0, 4, 128],"float16"), list[104,8,-1,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[104,1,2,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[4,-1,2541,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[4,-1,3024,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[4,-1,4725,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[4,-1,9261,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[4,26,-1,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,10164,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,11109,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,12096,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,2100,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,2541,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,3024,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,3549,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,4116,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,4725,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,5376,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,6069,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,6804,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,7581,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,8400,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,-1,9261,], )
paddle.Tensor.reshape(Tensor([104, 0],"float32"), list[8,13,-1,], )
paddle.Tensor.reshape(Tensor([104, 128, 0, 1],"float32"), list[104,128,], )
paddle.Tensor.reshape(Tensor([104, 128, 1, 0],"float32"), list[104,128,], )
paddle.Tensor.reshape(Tensor([104, 2, 0, 128],"float16"), list[104,8,-1,], )
paddle.Tensor.reshape(Tensor([104, 2, 0, 2, 128],"float16"), list[104,2,4,128,], )
paddle.Tensor.reshape(Tensor([104, 2, 2, 0, 128],"float16"), list[104,2,4,128,], )
paddle.Tensor.reshape(Tensor([104, 2, 2, 2, 0],"float16"), list[104,2,4,128,], )
paddle.Tensor.reshape(Tensor([104, 2, 4, 0],"float16"), list[104,8,-1,], )
paddle.Tensor.reshape(Tensor([1040, 0],"float32"), list[1040,1,2,], )
paddle.Tensor.reshape(Tensor([1041, 0],"float32"), list[1041,1,2,], )
paddle.Tensor.reshape(Tensor([1042, 0],"float32"), list[1042,1,2,], )
paddle.Tensor.reshape(Tensor([1043, 0],"float32"), list[1043,1,2,], )
paddle.Tensor.reshape(Tensor([1044, 0],"float32"), list[1044,1,2,], )
paddle.Tensor.reshape(Tensor([1045, 0],"float32"), list[1045,1,2,], )
paddle.Tensor.reshape(Tensor([1046, 0],"float32"), list[1046,1,2,], )
paddle.Tensor.reshape(Tensor([1047, 0],"float32"), list[1047,1,2,], )
paddle.Tensor.reshape(Tensor([1048, 0],"float32"), list[1048,1,2,], )
paddle.Tensor.reshape(Tensor([1048576, 0, 1, 1],"float32"), tuple(-1,16,16,1,1,1,), )
paddle.Tensor.reshape(Tensor([1048576, 1, 0, 1],"float32"), tuple(-1,16,16,1,1,1,), )
paddle.Tensor.reshape(Tensor([1048576, 1, 1, 0],"float32"), tuple(-1,16,16,1,1,1,), )
paddle.Tensor.reshape(Tensor([1049, 0],"float32"), list[1049,1,2,], )
paddle.Tensor.reshape(Tensor([105, 0],"float32"), list[105,1,2,], )
paddle.Tensor.reshape(Tensor([1050, 0],"float32"), list[1050,1,2,], )
paddle.Tensor.reshape(Tensor([1051, 0],"float32"), list[1051,1,2,], )
paddle.Tensor.reshape(Tensor([1052, 0],"float32"), list[1052,1,2,], )
paddle.Tensor.reshape(Tensor([1053, 0],"float32"), list[1053,1,2,], )
paddle.Tensor.reshape(Tensor([1054, 0],"float32"), list[1054,1,2,], )
paddle.Tensor.reshape(Tensor([1055, 0],"float32"), list[1055,1,2,], )
paddle.Tensor.reshape(Tensor([1056, 0],"float32"), list[1056,1,2,], )
paddle.Tensor.reshape(Tensor([1057, 0],"float32"), list[1057,1,2,], )
paddle.Tensor.reshape(Tensor([1058, 0],"float32"), list[1058,1,2,], )
paddle.Tensor.reshape(Tensor([1059, 0],"float32"), list[1059,1,2,], )
paddle.Tensor.reshape(Tensor([106, 0],"float32"), list[106,1,2,], )
paddle.Tensor.reshape(Tensor([1060, 0],"float32"), list[1060,1,2,], )
paddle.Tensor.reshape(Tensor([1061, 0],"float32"), list[1061,1,2,], )
paddle.Tensor.reshape(Tensor([1062, 0],"float32"), list[1062,1,2,], )
paddle.Tensor.reshape(Tensor([1063, 0],"float32"), list[1063,1,2,], )
paddle.Tensor.reshape(Tensor([1064, 0],"float32"), list[1064,1,2,], )
paddle.Tensor.reshape(Tensor([1065, 0],"float32"), list[1065,1,2,], )
paddle.Tensor.reshape(Tensor([1066, 0],"float32"), list[1066,1,2,], )
paddle.Tensor.reshape(Tensor([1067, 0],"float32"), list[1067,1,2,], )
paddle.Tensor.reshape(Tensor([1068, 0],"float32"), list[1068,1,2,], )
paddle.Tensor.reshape(Tensor([1069, 0],"float32"), list[1069,1,2,], )
paddle.Tensor.reshape(Tensor([107, 0],"float32"), list[107,1,2,], )
paddle.Tensor.reshape(Tensor([1070, 0],"float32"), list[1070,1,2,], )
paddle.Tensor.reshape(Tensor([10709, 0],"float32"), list[10709,1,2,], )
paddle.Tensor.reshape(Tensor([1071, 0],"float32"), list[1071,1,2,], )
paddle.Tensor.reshape(Tensor([1072, 0],"float32"), list[1072,1,2,], )
paddle.Tensor.reshape(Tensor([1073, 0],"float32"), list[1073,1,2,], )
paddle.Tensor.reshape(Tensor([1074, 0],"float32"), list[1074,1,2,], )
paddle.Tensor.reshape(Tensor([1075, 0],"float32"), list[1075,1,2,], )
paddle.Tensor.reshape(Tensor([10752, 0],"float32"), list[2,5376,4,], )
paddle.Tensor.reshape(Tensor([1076, 0],"float32"), list[1076,1,2,], )
paddle.Tensor.reshape(Tensor([1077, 0],"float32"), list[1077,1,2,], )
paddle.Tensor.reshape(Tensor([1078, 0],"float32"), list[1078,1,2,], )
paddle.Tensor.reshape(Tensor([1079, 0],"float32"), list[1079,1,2,], )
paddle.Tensor.reshape(Tensor([108, 0, 192],"float32"), list[108,7,7,192,], )
paddle.Tensor.reshape(Tensor([108, 0, 49, 49],"float32"), list[-1,108,6,49,49,], )
paddle.Tensor.reshape(Tensor([108, 0, 576],"float32"), list[-1,49,3,6,32,], )
paddle.Tensor.reshape(Tensor([108, 0, 6, 32],"float32"), list[-1,49,192,], )
paddle.Tensor.reshape(Tensor([108, 0, 7, 1],"float32"), list[-1,49,], )
paddle.Tensor.reshape(Tensor([108, 0, 7, 192],"float32"), list[-1,12,9,7,7,192,], )
paddle.Tensor.reshape(Tensor([108, 0, 7, 192],"float32"), list[108,49,192,], )
paddle.Tensor.reshape(Tensor([108, 0],"float32"), list[108,1,2,], )
paddle.Tensor.reshape(Tensor([108, 0],"float32"), list[4,27,-1,], )
paddle.Tensor.reshape(Tensor([108, 0],"float32"), tuple(-1,4,), )
paddle.Tensor.reshape(Tensor([108, 49, 0, 32],"float32"), list[-1,49,192,], )
paddle.Tensor.reshape(Tensor([108, 49, 0],"float32"), list[-1,49,3,6,32,], )
paddle.Tensor.reshape(Tensor([108, 49, 0],"float32"), list[108,7,7,192,], )
paddle.Tensor.reshape(Tensor([108, 49, 6, 0],"float32"), list[-1,49,192,], )
paddle.Tensor.reshape(Tensor([108, 6, 0, 49],"float32"), list[-1,108,6,49,49,], )
paddle.Tensor.reshape(Tensor([108, 6, 49, 0],"float32"), list[-1,108,6,49,49,], )
paddle.Tensor.reshape(Tensor([108, 7, 0, 1],"float32"), list[-1,49,], )
paddle.Tensor.reshape(Tensor([108, 7, 0, 192],"float32"), list[-1,12,9,7,7,192,], )
paddle.Tensor.reshape(Tensor([108, 7, 0, 192],"float32"), list[108,49,192,], )
paddle.Tensor.reshape(Tensor([108, 7, 7, 0],"float32"), list[-1,12,9,7,7,192,], )
paddle.Tensor.reshape(Tensor([108, 7, 7, 0],"float32"), list[-1,49,], )
paddle.Tensor.reshape(Tensor([108, 7, 7, 0],"float32"), list[108,49,192,], )
paddle.Tensor.reshape(Tensor([1080, 0],"float32"), list[1080,1,2,], )
paddle.Tensor.reshape(Tensor([10800, 0],"float32"), list[48,-1,4,], )
paddle.Tensor.reshape(Tensor([1081, 0],"float32"), list[1081,1,2,], )
paddle.Tensor.reshape(Tensor([10816, 0],"float32"), list[4,2704,4,], )
paddle.Tensor.reshape(Tensor([1082, 0],"float32"), list[1082,1,2,], )
paddle.Tensor.reshape(Tensor([1083, 0],"float32"), list[1083,1,2,], )
paddle.Tensor.reshape(Tensor([1084, 0],"float32"), list[1084,1,2,], )
paddle.Tensor.reshape(Tensor([1085, 0],"float32"), list[1085,1,2,], )
paddle.Tensor.reshape(Tensor([1086, 0],"float32"), list[1086,1,2,], )
paddle.Tensor.reshape(Tensor([1087, 0],"float32"), list[1087,1,2,], )
paddle.Tensor.reshape(Tensor([1088, 0],"float32"), list[1088,1,2,], )
paddle.Tensor.reshape(Tensor([1088, 0],"float32"), list[4,272,-1,], )
paddle.Tensor.reshape(Tensor([1088, 0],"float32"), list[64,-1,1360,], )
paddle.Tensor.reshape(Tensor([1088, 0],"float32"), list[64,-1,1726,], )
paddle.Tensor.reshape(Tensor([1088, 0],"float32"), list[64,-1,2125,], )
paddle.Tensor.reshape(Tensor([1088, 0],"float32"), list[64,-1,2577,], )
paddle.Tensor.reshape(Tensor([1088, 0],"float32"), list[64,-1,3060,], )
paddle.Tensor.reshape(Tensor([1088, 0],"float32"), list[64,17,-1,], )
paddle.Tensor.reshape(Tensor([10880, 0],"float32"), list[2,5440,4,], )
paddle.Tensor.reshape(Tensor([108864, 0],"float32"), list[16,6804,4,], )
paddle.Tensor.reshape(Tensor([1089, 0],"float32"), list[1089,1,2,], )
paddle.Tensor.reshape(Tensor([10890, 0],"float32"), list[90,-1,4,], )
paddle.Tensor.reshape(Tensor([109, 0],"float32"), list[109,1,2,], )
paddle.Tensor.reshape(Tensor([1090, 0],"float32"), list[1090,1,2,], )
paddle.Tensor.reshape(Tensor([1091, 0],"float32"), list[1091,1,2,], )
paddle.Tensor.reshape(Tensor([1092, 0],"float32"), list[1092,1,2,], )
paddle.Tensor.reshape(Tensor([10920192, 0],"float16"), list[-1,64,1,], )
paddle.Tensor.reshape(Tensor([1093, 0],"float32"), list[1093,1,2,], )
paddle.Tensor.reshape(Tensor([1094, 0],"float32"), list[1094,1,2,], )
paddle.Tensor.reshape(Tensor([1095, 0],"float32"), list[1095,1,2,], )
paddle.Tensor.reshape(Tensor([1096, 0],"float32"), list[1096,1,2,], )
paddle.Tensor.reshape(Tensor([1097, 0],"float32"), list[1097,1,2,], )
paddle.Tensor.reshape(Tensor([1098, 0],"float32"), list[1098,1,2,], )
paddle.Tensor.reshape(Tensor([1099, 0],"float32"), list[1099,1,2,], )
paddle.Tensor.reshape(Tensor([11, 0, 2],"float32"), tuple(1,1,11,11,2,), )
paddle.Tensor.reshape(Tensor([11, 0],"float32"), list[1,-1,4789,], )
paddle.Tensor.reshape(Tensor([11, 0],"float32"), list[1,11,-1,], )
paddle.Tensor.reshape(Tensor([11, 11, 0],"float32"), tuple(1,1,11,11,2,), )
paddle.Tensor.reshape(Tensor([110, 0],"float32"), list[110,1,2,], )
paddle.Tensor.reshape(Tensor([1100, 0],"float32"), list[1100,1,2,], )
paddle.Tensor.reshape(Tensor([1101, 0],"float32"), list[1101,1,2,], )
paddle.Tensor.reshape(Tensor([1102, 0],"float32"), list[1102,1,2,], )
paddle.Tensor.reshape(Tensor([1103, 0],"float32"), list[1103,1,2,], )
paddle.Tensor.reshape(Tensor([1104, 0],"float32"), list[1104,1,2,], )
paddle.Tensor.reshape(Tensor([110464, 0],"float32"), list[64,1726,4,], )
paddle.Tensor.reshape(Tensor([1105, 0],"float32"), list[1105,1,2,], )
paddle.Tensor.reshape(Tensor([110592, 0],"float32"), list[48,-1,4,], )
paddle.Tensor.reshape(Tensor([1106, 0],"float32"), list[1106,1,2,], )
paddle.Tensor.reshape(Tensor([1107, 0],"float32"), list[1107,1,2,], )
paddle.Tensor.reshape(Tensor([1108, 0],"float32"), list[1108,1,2,], )
paddle.Tensor.reshape(Tensor([1109, 0],"float32"), list[1109,1,2,], )
paddle.Tensor.reshape(Tensor([111, 0],"float32"), list[111,1,2,], )
paddle.Tensor.reshape(Tensor([1110, 0],"float32"), list[1110,1,2,], )
paddle.Tensor.reshape(Tensor([1111, 0],"float32"), list[1111,1,2,], )
paddle.Tensor.reshape(Tensor([1112, 0],"float32"), list[1112,1,2,], )
paddle.Tensor.reshape(Tensor([1113, 0],"float32"), list[1113,1,2,], )
paddle.Tensor.reshape(Tensor([1114, 0],"float32"), list[1114,1,2,], )
paddle.Tensor.reshape(Tensor([1115, 0],"float32"), list[1115,1,2,], )
paddle.Tensor.reshape(Tensor([1116, 0],"float32"), list[1116,1,2,], )
paddle.Tensor.reshape(Tensor([1117, 0],"float32"), list[1117,1,2,], )
paddle.Tensor.reshape(Tensor([1118, 0],"float32"), list[1118,1,2,], )
paddle.Tensor.reshape(Tensor([1119, 0],"float32"), list[1119,1,2,], )
paddle.Tensor.reshape(Tensor([112, 0, 12, 64],"float16"), tuple(-1,197,768,), )
paddle.Tensor.reshape(Tensor([112, 0, 12, 64],"float32"), tuple(-1,197,768,), )
paddle.Tensor.reshape(Tensor([112, 0, 12, 768],"float32"), list[-1,144,768,], )
paddle.Tensor.reshape(Tensor([112, 0, 12, 768],"float32"), list[-1,2,2,12,12,768,], )
paddle.Tensor.reshape(Tensor([112, 0, 144, 144],"float32"), list[28,4,24,144,144,], )
paddle.Tensor.reshape(Tensor([112, 0, 2304],"float16"), tuple(-1,197,3,12,64,), )
paddle.Tensor.reshape(Tensor([112, 0, 2304],"float32"), list[112,144,3,24,32,], )
paddle.Tensor.reshape(Tensor([112, 0, 2304],"float32"), tuple(-1,197,3,12,64,), )
paddle.Tensor.reshape(Tensor([112, 0, 24, 32],"float32"), list[112,144,768,], )
paddle.Tensor.reshape(Tensor([112, 0, 768],"float16"), list[-1,8,14,14,768,], )
paddle.Tensor.reshape(Tensor([112, 0, 768],"float16"), list[-1,8,196,768,], )
paddle.Tensor.reshape(Tensor([112, 0, 768],"float32"), list[-1,12,12,768,], )
paddle.Tensor.reshape(Tensor([112, 0, 768],"float32"), list[-1,8,14,14,768,], )
paddle.Tensor.reshape(Tensor([112, 0, 768],"float32"), list[-1,8,196,768,], )
paddle.Tensor.reshape(Tensor([112, 0],"float16"), list[-1,8,768,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[-1,8,768,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[112,1,2,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[16,-1,12096,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[16,-1,2541,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[16,-1,4725,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[16,-1,6804,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[16,7,-1,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[4,-1,3549,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[4,-1,4116,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[4,-1,5376,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[4,-1,6804,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[4,28,-1,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,10164,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,11109,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,12096,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,2100,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,2541,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,3024,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,3549,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,4116,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,4725,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,5376,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,6069,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,6804,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,7581,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,8400,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,-1,9261,], )
paddle.Tensor.reshape(Tensor([112, 0],"float32"), list[8,14,-1,], )
paddle.Tensor.reshape(Tensor([112, 12, 0, 768],"float32"), list[-1,144,768,], )
paddle.Tensor.reshape(Tensor([112, 12, 0, 768],"float32"), list[-1,2,2,12,12,768,], )
paddle.Tensor.reshape(Tensor([112, 12, 12, 0],"float32"), list[-1,144,768,], )
paddle.Tensor.reshape(Tensor([112, 12, 12, 0],"float32"), list[-1,2,2,12,12,768,], )
paddle.Tensor.reshape(Tensor([112, 144, 0, 32],"float32"), list[112,144,768,], )
paddle.Tensor.reshape(Tensor([112, 144, 0],"float32"), list[-1,12,12,768,], )
paddle.Tensor.reshape(Tensor([112, 144, 0],"float32"), list[112,144,3,24,32,], )
paddle.Tensor.reshape(Tensor([112, 144, 24, 0],"float32"), list[112,144,768,], )
paddle.Tensor.reshape(Tensor([112, 196, 0],"float16"), list[-1,8,14,14,768,], )
paddle.Tensor.reshape(Tensor([112, 196, 0],"float16"), list[-1,8,196,768,], )
paddle.Tensor.reshape(Tensor([112, 196, 0],"float32"), list[-1,8,14,14,768,], )
paddle.Tensor.reshape(Tensor([112, 196, 0],"float32"), list[-1,8,196,768,], )
paddle.Tensor.reshape(Tensor([112, 197, 0, 64],"float16"), tuple(-1,197,768,), )
paddle.Tensor.reshape(Tensor([112, 197, 0, 64],"float32"), tuple(-1,197,768,), )
paddle.Tensor.reshape(Tensor([112, 197, 0],"float16"), tuple(-1,197,3,12,64,), )
paddle.Tensor.reshape(Tensor([112, 197, 0],"float32"), tuple(-1,197,3,12,64,), )
paddle.Tensor.reshape(Tensor([112, 197, 12, 0],"float16"), tuple(-1,197,768,), )
paddle.Tensor.reshape(Tensor([112, 197, 12, 0],"float32"), tuple(-1,197,768,), )
paddle.Tensor.reshape(Tensor([112, 24, 0, 144],"float32"), list[28,4,24,144,144,], )
paddle.Tensor.reshape(Tensor([112, 24, 144, 0],"float32"), list[28,4,24,144,144,], )
paddle.Tensor.reshape(Tensor([1120, 0],"float32"), list[1120,1,2,], )
paddle.Tensor.reshape(Tensor([1121, 0],"float32"), list[1121,1,2,], )
paddle.Tensor.reshape(Tensor([1122, 0],"float32"), list[1122,1,2,], )
paddle.Tensor.reshape(Tensor([1123, 0],"float32"), list[1123,1,2,], )
paddle.Tensor.reshape(Tensor([1124, 0],"float32"), list[1124,1,2,], )
paddle.Tensor.reshape(Tensor([1125, 0],"float32"), list[1125,1,2,], )
paddle.Tensor.reshape(Tensor([1126, 0],"float32"), list[1126,1,2,], )
paddle.Tensor.reshape(Tensor([1127, 0],"float32"), list[1127,1,2,], )
paddle.Tensor.reshape(Tensor([1128, 0],"float32"), list[1128,1,2,], )
paddle.Tensor.reshape(Tensor([1129, 0],"float32"), list[1129,1,2,], )
paddle.Tensor.reshape(Tensor([113, 0],"float32"), list[113,1,2,], )
paddle.Tensor.reshape(Tensor([1130, 0],"float32"), list[1130,1,2,], )
paddle.Tensor.reshape(Tensor([1131, 0],"float32"), list[1131,1,2,], )
paddle.Tensor.reshape(Tensor([1132, 0],"float32"), list[1132,1,2,], )
paddle.Tensor.reshape(Tensor([1133, 0],"float32"), list[1133,1,2,], )
paddle.Tensor.reshape(Tensor([1134, 0],"float32"), list[1134,1,2,], )
paddle.Tensor.reshape(Tensor([1135, 0],"float32"), list[1135,1,2,], )
paddle.Tensor.reshape(Tensor([1136, 0],"float32"), list[1136,1,2,], )
paddle.Tensor.reshape(Tensor([1137, 0],"float32"), list[1137,1,2,], )
paddle.Tensor.reshape(Tensor([1138, 0],"float32"), list[1138,1,2,], )
paddle.Tensor.reshape(Tensor([1139, 0],"float32"), list[1139,1,2,], )
paddle.Tensor.reshape(Tensor([114, 0, 1, 64],"float16"), list[114,4,-1,], )
paddle.Tensor.reshape(Tensor([114, 0, 1, 64],"float16"), list[114,4,64,], )
paddle.Tensor.reshape(Tensor([114, 0, 192],"float16"), list[114,4,1,192,], )
paddle.Tensor.reshape(Tensor([114, 0],"float32"), list[114,1,2,], )
paddle.Tensor.reshape(Tensor([114, 4, 0, 64],"float16"), list[114,4,-1,], )
paddle.Tensor.reshape(Tensor([114, 4, 0, 64],"float16"), list[114,4,64,], )
paddle.Tensor.reshape(Tensor([114, 4, 0],"float16"), list[114,4,1,192,], )
paddle.Tensor.reshape(Tensor([114, 4, 1, 0],"float16"), list[114,4,-1,], )
paddle.Tensor.reshape(Tensor([114, 4, 1, 0],"float16"), list[114,4,64,], )
paddle.Tensor.reshape(Tensor([1140, 0],"float32"), list[1140,1,2,], )
paddle.Tensor.reshape(Tensor([11400, 0],"float32"), list[24,-1,4,], )
paddle.Tensor.reshape(Tensor([1141, 0],"float32"), list[1141,1,2,], )
paddle.Tensor.reshape(Tensor([1142, 0],"float32"), list[1142,1,2,], )
paddle.Tensor.reshape(Tensor([1143, 0],"float32"), list[1143,1,2,], )
paddle.Tensor.reshape(Tensor([1144, 0],"float32"), list[1144,1,2,], )
paddle.Tensor.reshape(Tensor([1145, 0],"float32"), list[1145,1,2,], )
paddle.Tensor.reshape(Tensor([1146, 0],"float32"), list[1146,1,2,], )
paddle.Tensor.reshape(Tensor([1147, 0],"float32"), list[1147,1,2,], )
paddle.Tensor.reshape(Tensor([1148, 0],"float32"), list[1148,1,2,], )
paddle.Tensor.reshape(Tensor([1149, 0],"float32"), list[1149,1,2,], )
paddle.Tensor.reshape(Tensor([115, 0],"float32"), list[115,1,2,], )
paddle.Tensor.reshape(Tensor([1150, 0],"float32"), list[1150,1,2,], )
paddle.Tensor.reshape(Tensor([1151, 0],"float32"), list[1151,1,2,], )
paddle.Tensor.reshape(Tensor([1152, 0],"float32"), list[1152,1,2,], )
paddle.Tensor.reshape(Tensor([1152, 0],"float32"), list[32,-1,4,], )
paddle.Tensor.reshape(Tensor([1152, 0],"float32"), list[64,-1,1360,], )
paddle.Tensor.reshape(Tensor([1152, 0],"float32"), list[64,-1,1726,], )
paddle.Tensor.reshape(Tensor([1152, 0],"float32"), list[64,-1,3060,], )
paddle.Tensor.reshape(Tensor([1152, 0],"float32"), list[64,18,-1,], )
paddle.Tensor.reshape(Tensor([1153, 0],"float32"), list[1153,1,2,], )
paddle.Tensor.reshape(Tensor([1154, 0],"float32"), list[1154,1,2,], )
paddle.Tensor.reshape(Tensor([1155, 0],"float32"), list[1155,1,2,], )
paddle.Tensor.reshape(Tensor([11552, 0],"float32"), list[2,-1,4,], )
paddle.Tensor.reshape(Tensor([11552, 0],"float32"), list[2,5776,4,], )
paddle.Tensor.reshape(Tensor([11552, 0],"float32"), list[8,1444,4,], )
paddle.Tensor.reshape(Tensor([1156, 0],"float32"), list[1,1156,4,], )
paddle.Tensor.reshape(Tensor([1156, 0],"float32"), list[1156,1,2,], )
paddle.Tensor.reshape(Tensor([1156, 0],"float32"), list[4,-1,4,], )
paddle.Tensor.reshape(Tensor([1157, 0],"float32"), list[1157,1,2,], )
paddle.Tensor.reshape(Tensor([1158, 0],"float32"), list[1158,1,2,], )
paddle.Tensor.reshape(Tensor([11585, 0],"float32"), list[11585,1,2,], )
paddle.Tensor.reshape(Tensor([1159, 0],"float32"), list[1159,1,2,], )
paddle.Tensor.reshape(Tensor([116, 0],"float32"), list[116,1,2,], )
paddle.Tensor.reshape(Tensor([116, 0],"float32"), list[4,-1,12096,], )
paddle.Tensor.reshape(Tensor([116, 0],"float32"), list[4,-1,3549,], )
paddle.Tensor.reshape(Tensor([116, 0],"float32"), list[4,29,-1,], )
paddle.Tensor.reshape(Tensor([1160, 0],"float32"), list[1160,1,2,], )
paddle.Tensor.reshape(Tensor([1161, 0],"float32"), list[1161,1,2,], )
paddle.Tensor.reshape(Tensor([1162, 0],"float32"), list[1162,1,2,], )
paddle.Tensor.reshape(Tensor([1163, 0],"float32"), list[1163,1,2,], )
paddle.Tensor.reshape(Tensor([1164, 0],"float32"), list[1164,1,2,], )
paddle.Tensor.reshape(Tensor([1165, 0],"float32"), list[1165,1,2,], )
paddle.Tensor.reshape(Tensor([1166, 0],"float32"), list[1166,1,2,], )
paddle.Tensor.reshape(Tensor([1167, 0],"float32"), list[1167,1,2,], )
paddle.Tensor.reshape(Tensor([1168, 0],"float32"), list[1168,1,2,], )
paddle.Tensor.reshape(Tensor([1169, 0],"float32"), list[1169,1,2,], )
paddle.Tensor.reshape(Tensor([117, 0],"float32"), list[117,1,2,], )
paddle.Tensor.reshape(Tensor([117, 0],"float32"), tuple(-1,4,), )
paddle.Tensor.reshape(Tensor([1170, 0],"float32"), list[1170,1,2,], )
paddle.Tensor.reshape(Tensor([1171, 0],"float32"), list[1171,1,2,], )
paddle.Tensor.reshape(Tensor([1172, 0],"float32"), list[1172,1,2,], )
paddle.Tensor.reshape(Tensor([1173, 0],"float32"), list[1173,1,2,], )
paddle.Tensor.reshape(Tensor([1174, 0],"float32"), list[1174,1,2,], )
paddle.Tensor.reshape(Tensor([1175, 0],"float32"), list[1175,1,2,], )
paddle.Tensor.reshape(Tensor([1176, 0],"float32"), list[1176,1,2,], )
paddle.Tensor.reshape(Tensor([1177, 0],"float32"), list[1177,1,2,], )
paddle.Tensor.reshape(Tensor([1178, 0],"float32"), list[1178,1,2,], )
paddle.Tensor.reshape(Tensor([1179, 0],"float32"), list[1179,1,2,], )
paddle.Tensor.reshape(Tensor([118, 0],"float32"), list[118,1,2,], )
paddle.Tensor.reshape(Tensor([1180, 0],"float32"), list[1180,1,2,], )
paddle.Tensor.reshape(Tensor([1181, 0],"float32"), list[1181,1,2,], )
paddle.Tensor.reshape(Tensor([1182, 0],"float32"), list[1182,1,2,], )
paddle.Tensor.reshape(Tensor([1183, 0],"float32"), list[1183,1,2,], )
paddle.Tensor.reshape(Tensor([1183744, 0, 1, 1],"float32"), tuple(-1,17,17,1,1,1,), )
paddle.Tensor.reshape(Tensor([1183744, 1, 0, 1],"float32"), tuple(-1,17,17,1,1,1,), )
paddle.Tensor.reshape(Tensor([1183744, 1, 1, 0],"float32"), tuple(-1,17,17,1,1,1,), )
paddle.Tensor.reshape(Tensor([1184, 0],"float32"), list[1184,1,2,], )
paddle.Tensor.reshape(Tensor([1185, 0],"float32"), list[1185,1,2,], )
paddle.Tensor.reshape(Tensor([1186, 0],"float32"), list[1186,1,2,], )
paddle.Tensor.reshape(Tensor([1187, 0],"float32"), list[1187,1,2,], )
paddle.Tensor.reshape(Tensor([1188, 0],"float32"), list[1188,1,2,], )
paddle.Tensor.reshape(Tensor([1189, 0],"float32"), list[1189,1,2,], )
paddle.Tensor.reshape(Tensor([119, 0],"float32"), list[119,1,2,], )
paddle.Tensor.reshape(Tensor([1190, 0],"float32"), list[1190,1,2,], )
paddle.Tensor.reshape(Tensor([1191, 0],"float32"), list[1191,1,2,], )
paddle.Tensor.reshape(Tensor([1192, 0],"float32"), list[1192,1,2,], )
paddle.Tensor.reshape(Tensor([1193, 0],"float32"), list[1193,1,2,], )
paddle.Tensor.reshape(Tensor([1194, 0],"float32"), list[1194,1,2,], )
paddle.Tensor.reshape(Tensor([1195, 0],"float32"), list[1195,1,2,], )
paddle.Tensor.reshape(Tensor([1196, 0],"float32"), list[1196,1,2,], )
paddle.Tensor.reshape(Tensor([1197, 0],"float32"), list[1197,1,2,], )
paddle.Tensor.reshape(Tensor([1198, 0],"float32"), list[1198,1,2,], )
paddle.Tensor.reshape(Tensor([1199, 0],"float32"), list[1199,1,2,], )
paddle.Tensor.reshape(Tensor([12, 0, 1, 4, 4, 256],"float32"), list[-1,4,4,256,], )
paddle.Tensor.reshape(Tensor([12, 0, 1, 4, 4],"float32"), list[12,256,1,-1,], )
paddle.Tensor.reshape(Tensor([12, 0, 1, 7, 7, 1024],"float32"), list[-1,7,7,1024,], )
paddle.Tensor.reshape(Tensor([12, 0, 10, 10, 1],"float32"), tuple(12,-1,), )
paddle.Tensor.reshape(Tensor([12, 0, 10, 10, 4],"float32"), tuple(12,-1,4,), )
paddle.Tensor.reshape(Tensor([12, 0, 10, 10],"float32"), tuple(12,3,-1,10,10,), )
paddle.Tensor.reshape(Tensor([12, 0, 1024],"float32"), list[-1,7,7,1024,], )
paddle.Tensor.reshape(Tensor([12, 0, 1024],"float32"), list[12,7,7,1024,], )
paddle.Tensor.reshape(Tensor([12, 0, 11, 11],"float32"), list[-1,1,11,11,], )
paddle.Tensor.reshape(Tensor([12, 0, 1152],"float16"), list[12,392,3,12,32,], )
paddle.Tensor.reshape(Tensor([12, 0, 1152],"float32"), list[12,392,3,12,32,], )
paddle.Tensor.reshape(Tensor([12, 0, 12, 1],"float32"), list[-1,144,], )
paddle.Tensor.reshape(Tensor([12, 0, 12, 32],"float16"), list[12,392,384,], )
paddle.Tensor.reshape(Tensor([12, 0, 12, 32],"float32"), list[12,392,384,], )
paddle.Tensor.reshape(Tensor([12, 0, 12, 768],"float32"), list[-1,4,3,12,12,768,], )
paddle.Tensor.reshape(Tensor([12, 0, 12, 768],"float32"), list[12,144,768,], )
paddle.Tensor.reshape(Tensor([12, 0, 128, 1],"float32"), tuple(-1,128,1,128,1,1,), )
paddle.Tensor.reshape(Tensor([12, 0, 128, 1],"float32"), tuple(-1,3,128,128,), )
paddle.Tensor.reshape(Tensor([12, 0, 128, 128],"float32"), tuple(-1,1,128,128,), )
paddle.Tensor.reshape(Tensor([12, 0, 128, 2, 128, 2],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([12, 0, 128],"float32"), list[12,56,56,128,], )
paddle.Tensor.reshape(Tensor([12, 0, 128],"float32"), list[12,8,8,128,], )
paddle.Tensor.reshape(Tensor([12, 0, 131, 131],"float32"), list[-1,1,131,131,], )
paddle.Tensor.reshape(Tensor([12, 0, 14, 1024],"float32"), list[12,-1,1024,], )
paddle.Tensor.reshape(Tensor([12, 0, 14, 512],"float32"), list[12,196,512,], )
paddle.Tensor.reshape(Tensor([12, 0, 14, 512],"float32"), list[12,2,7,2,7,512,], )
paddle.Tensor.reshape(Tensor([12, 0, 144, 144],"float32"), list[-1,12,24,144,144,], )
paddle.Tensor.reshape(Tensor([12, 0, 15, 15],"float32"), tuple(12,32,-1,), )
paddle.Tensor.reshape(Tensor([12, 0, 16, 1],"float32"), tuple(-1,16,1,16,1,1,), )
paddle.Tensor.reshape(Tensor([12, 0, 16, 1],"float32"), tuple(-1,3,16,16,), )
paddle.Tensor.reshape(Tensor([12, 0, 16, 128],"float32"), list[12,-1,128,], )
paddle.Tensor.reshape(Tensor([12, 0, 16, 16],"float32"), tuple(-1,1,16,16,), )
paddle.Tensor.reshape(Tensor([12, 0, 16, 2, 16, 2],"float32"), tuple(-1,1,32,32,), )
paddle.Tensor.reshape(Tensor([12, 0, 16, 49, 49],"float32"), list[48,16,49,49,], )
paddle.Tensor.reshape(Tensor([12, 0, 16, 64],"float32"), list[12,1,64,64,], )
paddle.Tensor.reshape(Tensor([12, 0, 16, 64],"float32"), list[12,256,64,], )
paddle.Tensor.reshape(Tensor([12, 0, 16, 64],"float32"), list[12,4,4,4,4,64,], )
paddle.Tensor.reshape(Tensor([12, 0, 16],"float32"), list[12,256,4,4,], )
paddle.Tensor.reshape(Tensor([12, 0, 16],"float32"), shape=list[0,0,4,4,], )
paddle.Tensor.reshape(Tensor([12, 0, 19, 19],"float32"), list[-1,1,19,19,], )
paddle.Tensor.reshape(Tensor([12, 0, 2, 128],"float32"), list[12,16,256,], )
paddle.Tensor.reshape(Tensor([12, 0, 2, 16, 16],"float32"), list[-1,2,16,16,], )
paddle.Tensor.reshape(Tensor([12, 0, 2, 4, 4, 128],"float32"), list[-1,4,4,128,], )
paddle.Tensor.reshape(Tensor([12, 0, 2, 7, 7, 512],"float32"), list[-1,7,7,512,], )
paddle.Tensor.reshape(Tensor([12, 0, 2],"float32"), tuple(1,1,12,12,2,), )
paddle.Tensor.reshape(Tensor([12, 0, 20, 20, 1],"float32"), tuple(12,-1,), )
paddle.Tensor.reshape(Tensor([12, 0, 20, 20, 4],"float32"), tuple(12,-1,4,), )
paddle.Tensor.reshape(Tensor([12, 0, 20, 20],"float32"), tuple(12,3,-1,20,20,), )
paddle.Tensor.reshape(Tensor([12, 0, 225],"float32"), list[12,32,15,15,], )
paddle.Tensor.reshape(Tensor([12, 0, 226, 226],"float32"), list[48,226,226,], )
paddle.Tensor.reshape(Tensor([12, 0, 226, 8],"float32"), tuple(48,-1,8,), )
paddle.Tensor.reshape(Tensor([12, 0, 2304],"float32"), list[-1,144,3,24,32,], )
paddle.Tensor.reshape(Tensor([12, 0, 24, 24],"float32"), list[12,1,24,24,], )
paddle.Tensor.reshape(Tensor([12, 0, 24, 32],"float32"), list[-1,144,768,], )
paddle.Tensor.reshape(Tensor([12, 0, 256, 1],"float32"), tuple(-1,3,256,256,), )
paddle.Tensor.reshape(Tensor([12, 0, 256, 16],"float32"), list[12,4,64,16,], )
paddle.Tensor.reshape(Tensor([12, 0, 256, 256],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([12, 0, 256],"float32"), list[-1,4,4,256,], )
paddle.Tensor.reshape(Tensor([12, 0, 256],"float32"), list[12,16,2,128,], )
paddle.Tensor.reshape(Tensor([12, 0, 256],"float32"), list[12,28,28,256,], )
paddle.Tensor.reshape(Tensor([12, 0, 256],"float32"), list[12,4,4,256,], )
paddle.Tensor.reshape(Tensor([12, 0, 259, 259],"float32"), list[-1,1,259,259,], )
paddle.Tensor.reshape(Tensor([12, 0, 28, 256],"float32"), list[12,4,7,4,7,256,], )
paddle.Tensor.reshape(Tensor([12, 0, 28, 256],"float32"), list[12,784,256,], )
paddle.Tensor.reshape(Tensor([12, 0, 28, 512],"float32"), list[12,-1,512,], )
paddle.Tensor.reshape(Tensor([12, 0, 3072],"float32"), list[12,49,3,32,32,], )
paddle.Tensor.reshape(Tensor([12, 0, 32, 1],"float32"), tuple(-1,3,32,32,), )
paddle.Tensor.reshape(Tensor([12, 0, 32, 1],"float32"), tuple(-1,32,1,32,1,1,), )
paddle.Tensor.reshape(Tensor([12, 0, 32, 2, 32, 2],"float32"), tuple(-1,1,64,64,), )
paddle.Tensor.reshape(Tensor([12, 0, 32, 32],"float32"), list[12,1024,32,], )
paddle.Tensor.reshape(Tensor([12, 0, 32, 32],"float32"), list[12,49,1024,], )
paddle.Tensor.reshape(Tensor([12, 0, 32, 32],"float32"), list[12,8,4,8,4,32,], )
paddle.Tensor.reshape(Tensor([12, 0, 32, 32],"float32"), tuple(-1,1,32,32,), )
paddle.Tensor.reshape(Tensor([12, 0, 32, 49, 49],"float32"), list[12,32,49,49,], )
paddle.Tensor.reshape(Tensor([12, 0, 32],"float32"), list[12,-1,4,8,], )
paddle.Tensor.reshape(Tensor([12, 0, 32],"float32"), list[12,10,4,8,], )
paddle.Tensor.reshape(Tensor([12, 0, 32],"float32"), list[12,2,4,8,], )
paddle.Tensor.reshape(Tensor([12, 0, 32],"float32"), list[12,226,4,8,], )
paddle.Tensor.reshape(Tensor([12, 0, 32],"float32"), list[12,32,32,32,], )
paddle.Tensor.reshape(Tensor([12, 0, 32],"float32"), list[12,4,4,8,], )
paddle.Tensor.reshape(Tensor([12, 0, 32],"float32"), list[12,7,4,8,], )
paddle.Tensor.reshape(Tensor([12, 0, 32],"float32"), shape=list[12,-1,4,8,], )
paddle.Tensor.reshape(Tensor([12, 0, 35, 35],"float32"), list[-1,1,35,35,], )
paddle.Tensor.reshape(Tensor([12, 0, 384],"float16"), list[-1,8,7,7,384,], )
paddle.Tensor.reshape(Tensor([12, 0, 384],"float32"), list[-1,8,7,7,384,], )
paddle.Tensor.reshape(Tensor([12, 0, 392, 392],"float16"), list[1,12,12,392,392,], )
paddle.Tensor.reshape(Tensor([12, 0, 392, 392],"float32"), list[1,12,12,392,392,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 1, 4, 256],"float32"), list[12,4,4,-1,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 1],"float32"), tuple(-1,4,1,4,1,1,), )
paddle.Tensor.reshape(Tensor([12, 0, 4, 2, 4, 128],"float32"), list[12,8,8,-1,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 2, 4, 2],"float32"), tuple(-1,1,8,8,), )
paddle.Tensor.reshape(Tensor([12, 0, 4, 256],"float32"), list[-1,16,256,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 256],"float32"), list[12,1,1,4,4,-1,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 256],"float32"), list[12,1,4,1,4,256,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 256],"float32"), list[12,16,256,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 4, 4, 64],"float32"), list[-1,4,4,64,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 4, 4, 64],"float32"), list[12,16,16,-1,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 4],"float32"), list[12,24,16,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 4],"float32"), list[12,256,4,1,4,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 49, 49],"float32"), list[768,4,49,49,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 512],"float32"), list[12,-1,512,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 7, 7, 256],"float32"), list[-1,7,7,256,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 8, 4, 32],"float32"), list[12,32,32,-1,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 8],"float32"), list[12,10,32,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 8],"float32"), list[12,2,32,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 8],"float32"), list[12,226,32,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 8],"float32"), list[12,4,32,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 8],"float32"), list[12,7,32,], )
paddle.Tensor.reshape(Tensor([12, 0, 4, 8],"float32"), shape=list[12,-1,32,], )
paddle.Tensor.reshape(Tensor([12, 0, 4],"float32"), tuple(6,2,1,4,), )
paddle.Tensor.reshape(Tensor([12, 0, 4],"float32"), tuple(6,2,5,4,), )
paddle.Tensor.reshape(Tensor([12, 0, 40, 40],"float32"), tuple(12,3,-1,40,40,), )
paddle.Tensor.reshape(Tensor([12, 0, 49, 49],"float32"), list[12,1,32,49,49,], )
paddle.Tensor.reshape(Tensor([12, 0, 5],"float32"), tuple(6,2,5,5,), )
paddle.Tensor.reshape(Tensor([12, 0, 512],"float32"), list[12,14,14,512,], )
paddle.Tensor.reshape(Tensor([12, 0, 56, 128],"float32"), list[12,3136,128,], )
paddle.Tensor.reshape(Tensor([12, 0, 56, 128],"float32"), list[12,8,7,8,7,128,], )
paddle.Tensor.reshape(Tensor([12, 0, 6],"float32"), tuple(6,2,1,6,), )
paddle.Tensor.reshape(Tensor([12, 0, 64, 1],"float32"), tuple(-1,3,64,64,), )
paddle.Tensor.reshape(Tensor([12, 0, 64, 1],"float32"), tuple(-1,64,1,64,1,1,), )
paddle.Tensor.reshape(Tensor([12, 0, 64, 2, 64, 2],"float32"), tuple(-1,1,128,128,), )
paddle.Tensor.reshape(Tensor([12, 0, 64, 64],"float32"), tuple(-1,1,64,64,), )
paddle.Tensor.reshape(Tensor([12, 0, 64],"float32"), list[12,16,16,64,], )
paddle.Tensor.reshape(Tensor([12, 0, 67, 67],"float32"), list[-1,1,67,67,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 1, 7, 1024],"float32"), list[-1,7,7,1024,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 1],"float32"), list[-1,49,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 1024],"float32"), list[-1,1,1,7,7,1024,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 1024],"float32"), list[-1,49,1024,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 1024],"float32"), list[12,1,7,1,7,1024,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 1024],"float32"), list[12,49,1024,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 2, 7, 512],"float32"), list[-1,14,14,512,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 2048],"float32"), list[12,-1,2048,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 4, 7, 256],"float32"), list[-1,28,28,256,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 7, 384],"float16"), list[1,2,2,3,8,7,7,-1,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 7, 384],"float16"), list[1,2,3,2,8,7,7,-1,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 7, 384],"float32"), list[1,2,2,3,8,7,7,-1,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 7, 384],"float32"), list[1,2,3,2,8,7,7,-1,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 7],"float32"), list[48,7,7,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 8, 7, 128],"float32"), list[-1,56,56,128,], )
paddle.Tensor.reshape(Tensor([12, 0, 7, 8],"float32"), tuple(48,-1,8,), )
paddle.Tensor.reshape(Tensor([12, 0, 7],"float32"), tuple(6,2,1,7,), )
paddle.Tensor.reshape(Tensor([12, 0, 768],"float32"), list[12,12,12,768,], )
paddle.Tensor.reshape(Tensor([12, 0, 8, 1],"float32"), tuple(-1,3,8,8,), )
paddle.Tensor.reshape(Tensor([12, 0, 8, 1],"float32"), tuple(-1,8,1,8,1,1,), )
paddle.Tensor.reshape(Tensor([12, 0, 8, 128],"float32"), list[12,2,4,2,4,128,], )
paddle.Tensor.reshape(Tensor([12, 0, 8, 128],"float32"), list[12,64,128,], )
paddle.Tensor.reshape(Tensor([12, 0, 8, 2, 8, 2],"float32"), tuple(-1,1,16,16,), )
paddle.Tensor.reshape(Tensor([12, 0, 8, 256],"float32"), list[12,-1,256,], )
paddle.Tensor.reshape(Tensor([12, 0, 8, 4, 4, 32],"float32"), list[-1,4,4,32,], )
paddle.Tensor.reshape(Tensor([12, 0, 8, 49, 49],"float32"), list[192,8,49,49,], )
paddle.Tensor.reshape(Tensor([12, 0, 8, 7, 7, 128],"float32"), list[-1,7,7,128,], )
paddle.Tensor.reshape(Tensor([12, 0, 8, 8],"float32"), tuple(-1,1,8,8,), )
paddle.Tensor.reshape(Tensor([12, 0, 96],"float32"), list[12,226,3,4,8,], )
paddle.Tensor.reshape(Tensor([12, 0, 99],"float32"), list[-1,99,], )
paddle.Tensor.reshape(Tensor([12, 0, 99],"float32"), shape=list[-1,99,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[1,-1,10285,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[1,-1,3598,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[1,-1,4165,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[1,-1,9382,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[1,12,-1,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[12,-1,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[2,-1,10285,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[2,-1,4165,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[2,-1,5440,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[2,-1,6885,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[2,-1,8500,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[2,-1,9382,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[2,6,-1,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[3,4,4,5,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[4,-1,12096,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[4,-1,2577,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[4,-1,3598,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[4,-1,4165,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[4,-1,4789,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[4,-1,6804,], )
paddle.Tensor.reshape(Tensor([12, 0],"float32"), list[4,3,-1,], )
paddle.Tensor.reshape(Tensor([12, 0],"float64"), list[3,4,4,5,], )
paddle.Tensor.reshape(Tensor([12, 0],"int32"), list[-1,7,], )
paddle.Tensor.reshape(Tensor([12, 1, 0, 1, 4, 256],"float32"), list[12,4,4,-1,], )
paddle.Tensor.reshape(Tensor([12, 1, 0, 1, 7, 1024],"float32"), list[-1,7,7,1024,], )
paddle.Tensor.reshape(Tensor([12, 1, 0, 11],"float32"), list[-1,1,11,11,], )
paddle.Tensor.reshape(Tensor([12, 1, 0, 128],"float32"), tuple(-1,1,128,128,), )
paddle.Tensor.reshape(Tensor([12, 1, 0, 131],"float32"), list[-1,1,131,131,], )
paddle.Tensor.reshape(Tensor([12, 1, 0, 16],"float32"), list[12,4,64,16,], )
paddle.Tensor.reshape(Tensor([12, 1, 0, 16],"float32"), tuple(-1,1,16,16,), )
paddle.Tensor.reshape(Tensor([12, 1, 0, 19],"float32"), list[-1,1,19,19,], )
paddle.Tensor.reshape(Tensor([12, 1, 0, 2, 128, 2],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([12, 1, 0, 2, 16, 2],"float32"), tuple(-1,1,32,32,), )
paddle.Tensor.reshape(Tensor([12, 1, 0, 2, 32, 2],"float32"), tuple(-1,1,64,64,), )
paddle.Tensor.reshape(Tensor([12, 1, 0, 2, 4, 2],"float32"), tuple(-1,1,8,8,), )
paddle.Tensor.reshape(Tensor([12, 1, 0, 2, 64, 2],"float32"), tuple(-1,1,128,128,), )
paddle.Tensor.reshape(Tensor([12, 1, 0, 2, 8, 2],"float32"), tuple(-1,1,16,16,), )
paddle.Tensor.reshape(Tensor([12, 1, 0, 24],"float32"), list[12,1,24,24,], )
paddle.Tensor.reshape(Tensor([12, 1, 0, 256],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([12, 1, 0, 259],"float32"), list[-1,1,259,259,], )
paddle.Tensor.reshape(Tensor([12, 1, 0, 32],"float32"), tuple(-1,1,32,32,), )
paddle.Tensor.reshape(Tensor([12, 1, 0, 35],"float32"), list[-1,1,35,35,], )
paddle.Tensor.reshape(Tensor([12, 1, 0, 4, 4, 256],"float32"), list[-1,4,4,256,], )
paddle.Tensor.reshape(Tensor([12, 1, 0, 49, 49],"float32"), list[12,32,49,49,], )
paddle.Tensor.reshape(Tensor([12, 1, 0, 64],"float32"), tuple(-1,1,64,64,), )
paddle.Tensor.reshape(Tensor([12, 1, 0, 67],"float32"), list[-1,1,67,67,], )
paddle.Tensor.reshape(Tensor([12, 1, 0, 7, 7, 1024],"float32"), list[-1,7,7,1024,], )
paddle.Tensor.reshape(Tensor([12, 1, 0, 8],"float32"), tuple(-1,1,8,8,), )
paddle.Tensor.reshape(Tensor([12, 1, 0],"float32"), list[-1,99,], )
paddle.Tensor.reshape(Tensor([12, 1, 0],"float32"), tuple(6,2,1,4,), )
paddle.Tensor.reshape(Tensor([12, 1, 0],"float32"), tuple(6,2,1,6,), )
paddle.Tensor.reshape(Tensor([12, 1, 0],"float32"), tuple(6,2,1,7,), )
paddle.Tensor.reshape(Tensor([12, 1, 1, 0, 4, 256],"float32"), list[-1,4,4,256,], )
paddle.Tensor.reshape(Tensor([12, 1, 1, 0, 7, 1024],"float32"), list[-1,7,7,1024,], )
paddle.Tensor.reshape(Tensor([12, 1, 1, 4, 0, 256],"float32"), list[-1,4,4,256,], )
paddle.Tensor.reshape(Tensor([12, 1, 1, 4, 4, 0],"float32"), list[-1,4,4,256,], )
paddle.Tensor.reshape(Tensor([12, 1, 1, 7, 0, 1024],"float32"), list[-1,7,7,1024,], )
paddle.Tensor.reshape(Tensor([12, 1, 1, 7, 7, 0],"float32"), list[-1,7,7,1024,], )
paddle.Tensor.reshape(Tensor([12, 1, 11, 0],"float32"), list[-1,1,11,11,], )
paddle.Tensor.reshape(Tensor([12, 1, 128, 0, 128, 2],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([12, 1, 128, 0],"float32"), tuple(-1,1,128,128,), )
paddle.Tensor.reshape(Tensor([12, 1, 128, 2, 0, 2],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([12, 1, 128, 2, 128, 0],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([12, 1, 131, 0],"float32"), list[-1,1,131,131,], )
paddle.Tensor.reshape(Tensor([12, 1, 16, 0, 16, 2],"float32"), tuple(-1,1,32,32,), )
paddle.Tensor.reshape(Tensor([12, 1, 16, 0],"float32"), tuple(-1,1,16,16,), )
paddle.Tensor.reshape(Tensor([12, 1, 16, 2, 0, 2],"float32"), tuple(-1,1,32,32,), )
paddle.Tensor.reshape(Tensor([12, 1, 16, 2, 16, 0],"float32"), tuple(-1,1,32,32,), )
paddle.Tensor.reshape(Tensor([12, 1, 19, 0],"float32"), list[-1,1,19,19,], )
paddle.Tensor.reshape(Tensor([12, 1, 24, 0],"float32"), list[12,1,24,24,], )
paddle.Tensor.reshape(Tensor([12, 1, 256, 0],"float32"), list[12,4,64,16,], )
paddle.Tensor.reshape(Tensor([12, 1, 256, 0],"float32"), tuple(-1,1,256,256,), )
paddle.Tensor.reshape(Tensor([12, 1, 259, 0],"float32"), list[-1,1,259,259,], )
paddle.Tensor.reshape(Tensor([12, 1, 32, 0, 32, 2],"float32"), tuple(-1,1,64,64,), )
paddle.Tensor.reshape(Tensor([12, 1, 32, 0, 49],"float32"), list[12,32,49,49,], )
paddle.Tensor.reshape(Tensor([12, 1, 32, 0],"float32"), tuple(-1,1,32,32,), )
paddle.Tensor.reshape(Tensor([12, 1, 32, 2, 0, 2],"float32"), tuple(-1,1,64,64,), )
paddle.Tensor.reshape(Tensor([12, 1, 32, 2, 32, 0],"float32"), tuple(-1,1,64,64,), )
paddle.Tensor.reshape(Tensor([12, 1, 32, 49, 0],"float32"), list[12,32,49,49,], )
paddle.Tensor.reshape(Tensor([12, 1, 35, 0],"float32"), list[-1,1,35,35,], )
paddle.Tensor.reshape(Tensor([12, 1, 4, 0, 4, 2],"float32"), tuple(-1,1,8,8,), )
paddle.Tensor.reshape(Tensor([12, 1, 4, 0, 4, 256],"float32"), list[12,4,4,-1,], )
paddle.Tensor.reshape(Tensor([12, 1, 4, 1, 0, 256],"float32"), list[12,4,4,-1,], )
paddle.Tensor.reshape(Tensor([12, 1, 4, 1, 4, 0],"float32"), list[12,4,4,-1,], )
paddle.Tensor.reshape(Tensor([12, 1, 4, 2, 0, 2],"float32"), tuple(-1,1,8,8,), )
paddle.Tensor.reshape(Tensor([12, 1, 4, 2, 4, 0],"float32"), tuple(-1,1,8,8,), )
paddle.Tensor.reshape(Tensor([12, 1, 64, 0, 64, 2],"float32"), tuple(-1,1,128,128,), )
paddle.Tensor.reshape(Tensor([12, 1, 64, 0],"float32"), tuple(-1,1,64,64,), )
paddle.Tensor.reshape(Tensor([12, 1, 64, 2, 0, 2],"float32"), tuple(-1,1,128,128,), )
paddle.Tensor.reshape(Tensor([12, 1, 64, 2, 64, 0],"float32"), tuple(-1,1,128,128,), )
paddle.Tensor.reshape(Tensor([12, 1, 67, 0],"float32"), list[-1,1,67,67,], )
paddle.Tensor.reshape(Tensor([12, 1, 7, 0, 7, 1024],"float32"), list[-1,7,7,1024,], )
paddle.Tensor.reshape(Tensor([12, 1, 7, 1, 0, 1024],"float32"), list[-1,7,7,1024,], )
paddle.Tensor.reshape(Tensor([12, 1, 7, 1, 7, 0],"float32"), list[-1,7,7,1024,], )
paddle.Tensor.reshape(Tensor([12, 1, 8, 0, 8, 2],"float32"), tuple(-1,1,16,16,), )
paddle.Tensor.reshape(Tensor([12, 1, 8, 0],"float32"), tuple(-1,1,8,8,), )
paddle.Tensor.reshape(Tensor([12, 1, 8, 2, 0, 2],"float32"), tuple(-1,1,16,16,), )
paddle.Tensor.reshape(Tensor([12, 1, 8, 2, 8, 0],"float32"), tuple(-1,1,16,16,), )
paddle.Tensor.reshape(Tensor([12, 10, 0, 8],"float32"), list[12,10,32,], )
paddle.Tensor.reshape(Tensor([12, 10, 0],"float32"), list[12,10,4,8,], )
paddle.Tensor.reshape(Tensor([12, 10, 4, 0],"float32"), list[12,10,32,], )
paddle.Tensor.reshape(Tensor([12, 1024, 0],"float32"), list[12,32,32,32,], )
paddle.Tensor.reshape(Tensor([12, 12, 0, 1],"float32"), list[-1,144,], )
paddle.Tensor.reshape(Tensor([12, 12, 0, 392],"float16"), list[1,12,12,392,392,], )
paddle.Tensor.reshape(Tensor([12, 12, 0, 392],"float32"), list[1,12,12,392,392,], )
paddle.Tensor.reshape(Tensor([12, 12, 0, 768],"float32"), list[-1,4,3,12,12,768,], )
paddle.Tensor.reshape(Tensor([12, 12, 0, 768],"float32"), list[12,144,768,], )
paddle.Tensor.reshape(Tensor([12, 12, 0],"float32"), tuple(1,1,12,12,2,), )
paddle.Tensor.reshape(Tensor([12, 12, 12, 0],"float32"), list[-1,144,], )
paddle.Tensor.reshape(Tensor([12, 12, 12, 0],"float32"), list[-1,4,3,12,12,768,], )
paddle.Tensor.reshape(Tensor([12, 12, 12, 0],"float32"), list[12,144,768,], )
paddle.Tensor.reshape(Tensor([12, 12, 392, 0],"float16"), list[1,12,12,392,392,], )
paddle.Tensor.reshape(Tensor([12, 12, 392, 0],"float32"), list[1,12,12,392,392,], )
paddle.Tensor.reshape(Tensor([12, 128, 0, 1],"float32"), tuple(-1,128,1,128,1,1,), )
paddle.Tensor.reshape(Tensor([12, 128, 0, 1],"float32"), tuple(-1,3,128,128,), )
paddle.Tensor.reshape(Tensor([12, 128, 128, 0],"float32"), tuple(-1,128,1,128,1,1,), )
paddle.Tensor.reshape(Tensor([12, 128, 128, 0],"float32"), tuple(-1,3,128,128,), )
paddle.Tensor.reshape(Tensor([12, 14, 0, 1024],"float32"), list[12,-1,1024,], )
paddle.Tensor.reshape(Tensor([12, 14, 0, 512],"float32"), list[12,196,512,], )
paddle.Tensor.reshape(Tensor([12, 14, 0, 512],"float32"), list[12,2,7,2,7,512,], )
paddle.Tensor.reshape(Tensor([12, 14, 14, 0],"float32"), list[12,-1,1024,], )
paddle.Tensor.reshape(Tensor([12, 14, 14, 0],"float32"), list[12,196,512,], )
paddle.Tensor.reshape(Tensor([12, 14, 14, 0],"float32"), list[12,2,7,2,7,512,], )
paddle.Tensor.reshape(Tensor([12, 144, 0, 32],"float32"), list[-1,144,768,], )
paddle.Tensor.reshape(Tensor([12, 144, 0],"float32"), list[-1,144,3,24,32,], )
paddle.Tensor.reshape(Tensor([12, 144, 0],"float32"), list[12,12,12,768,], )
paddle.Tensor.reshape(Tensor([12, 144, 24, 0],"float32"), list[-1,144,768,], )
paddle.Tensor.reshape(Tensor([12, 16, 0, 1],"float32"), tuple(-1,16,1,16,1,1,), )
paddle.Tensor.reshape(Tensor([12, 16, 0, 1],"float32"), tuple(-1,3,16,16,), )
paddle.Tensor.reshape(Tensor([12, 16, 0, 128],"float32"), list[12,-1,128,], )
paddle.Tensor.reshape(Tensor([12, 16, 0, 128],"float32"), list[12,16,256,], )
paddle.Tensor.reshape(Tensor([12, 16, 0, 16, 16],"float32"), list[-1,2,16,16,], )
paddle.Tensor.reshape(Tensor([12, 16, 0, 49, 49],"float32"), list[192,8,49,49,], )
paddle.Tensor.reshape(Tensor([12, 16, 0, 64],"float32"), list[12,256,64,], )
paddle.Tensor.reshape(Tensor([12, 16, 0, 64],"float32"), list[12,4,4,4,4,64,], )
paddle.Tensor.reshape(Tensor([12, 16, 0],"float32"), list[-1,4,4,256,], )
paddle.Tensor.reshape(Tensor([12, 16, 0],"float32"), list[12,16,2,128,], )
paddle.Tensor.reshape(Tensor([12, 16, 0],"float32"), list[12,4,4,256,], )
paddle.Tensor.reshape(Tensor([12, 16, 16, 0],"float32"), list[12,-1,128,], )
paddle.Tensor.reshape(Tensor([12, 16, 16, 0],"float32"), list[12,256,64,], )
paddle.Tensor.reshape(Tensor([12, 16, 16, 0],"float32"), list[12,4,4,4,4,64,], )
paddle.Tensor.reshape(Tensor([12, 16, 16, 0],"float32"), tuple(-1,16,1,16,1,1,), )
paddle.Tensor.reshape(Tensor([12, 16, 16, 0],"float32"), tuple(-1,3,16,16,), )
paddle.Tensor.reshape(Tensor([12, 16, 2, 0, 16],"float32"), list[-1,2,16,16,], )
paddle.Tensor.reshape(Tensor([12, 16, 2, 0],"float32"), list[12,16,256,], )
paddle.Tensor.reshape(Tensor([12, 16, 2, 16, 0],"float32"), list[-1,2,16,16,], )
paddle.Tensor.reshape(Tensor([12, 16, 8, 0, 49],"float32"), list[192,8,49,49,], )
paddle.Tensor.reshape(Tensor([12, 16, 8, 49, 0],"float32"), list[192,8,49,49,], )
paddle.Tensor.reshape(Tensor([12, 17, 0, 8],"float32"), shape=list[12,-1,32,], )
paddle.Tensor.reshape(Tensor([12, 17, 0],"float32"), shape=list[12,-1,4,8,], )
paddle.Tensor.reshape(Tensor([12, 17, 4, 0],"float32"), shape=list[12,-1,32,], )
paddle.Tensor.reshape(Tensor([12, 196, 0],"float32"), list[12,14,14,512,], )
paddle.Tensor.reshape(Tensor([12, 2, 0, 2, 4, 128],"float32"), list[12,8,8,-1,], )
paddle.Tensor.reshape(Tensor([12, 2, 0, 2, 7, 512],"float32"), list[-1,14,14,512,], )
paddle.Tensor.reshape(Tensor([12, 2, 0, 4, 4, 128],"float32"), list[-1,4,4,128,], )
paddle.Tensor.reshape(Tensor([12, 2, 0, 7, 7, 512],"float32"), list[-1,7,7,512,], )
paddle.Tensor.reshape(Tensor([12, 2, 0, 8],"float32"), list[12,2,32,], )
paddle.Tensor.reshape(Tensor([12, 2, 0],"float32"), list[12,2,4,8,], )
paddle.Tensor.reshape(Tensor([12, 2, 2, 0, 4, 128],"float32"), list[-1,4,4,128,], )
paddle.Tensor.reshape(Tensor([12, 2, 2, 0, 7, 512],"float32"), list[-1,7,7,512,], )
paddle.Tensor.reshape(Tensor([12, 2, 2, 4, 0, 128],"float32"), list[-1,4,4,128,], )
paddle.Tensor.reshape(Tensor([12, 2, 2, 4, 4, 0],"float32"), list[-1,4,4,128,], )
paddle.Tensor.reshape(Tensor([12, 2, 2, 7, 0, 512],"float32"), list[-1,7,7,512,], )
paddle.Tensor.reshape(Tensor([12, 2, 2, 7, 7, 0],"float32"), list[-1,7,7,512,], )
paddle.Tensor.reshape(Tensor([12, 2, 4, 0, 4, 128],"float32"), list[12,8,8,-1,], )
paddle.Tensor.reshape(Tensor([12, 2, 4, 0],"float32"), list[12,2,32,], )
paddle.Tensor.reshape(Tensor([12, 2, 4, 2, 0, 128],"float32"), list[12,8,8,-1,], )
paddle.Tensor.reshape(Tensor([12, 2, 4, 2, 4, 0],"float32"), list[12,8,8,-1,], )
paddle.Tensor.reshape(Tensor([12, 2, 7, 0, 7, 512],"float32"), list[-1,14,14,512,], )
paddle.Tensor.reshape(Tensor([12, 2, 7, 2, 0, 512],"float32"), list[-1,14,14,512,], )
paddle.Tensor.reshape(Tensor([12, 2, 7, 2, 7, 0],"float32"), list[-1,14,14,512,], )
paddle.Tensor.reshape(Tensor([12, 226, 0, 8],"float32"), list[12,226,32,], )
paddle.Tensor.reshape(Tensor([12, 226, 0],"float32"), list[12,-1,4,8,], )
paddle.Tensor.reshape(Tensor([12, 226, 0],"float32"), list[12,226,3,4,8,], )
paddle.Tensor.reshape(Tensor([12, 226, 0],"float32"), list[12,226,4,8,], )
paddle.Tensor.reshape(Tensor([12, 226, 4, 0],"float32"), list[12,226,32,], )
paddle.Tensor.reshape(Tensor([12, 24, 0, 144],"float32"), list[-1,12,24,144,144,], )
paddle.Tensor.reshape(Tensor([12, 24, 0, 4],"float32"), list[12,24,16,], )
paddle.Tensor.reshape(Tensor([12, 24, 0],"float32"), shape=list[0,0,4,4,], )
paddle.nanmedian(Tensor([0, 100],"float32"), axis=1, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=0, keepdim=False, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=0, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=-1, keepdim=False, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=-1, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=2, keepdim=False, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=-2, keepdim=False, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=-2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=list[0,-1,], keepdim=False, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=list[0,-1,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=list[0,1,3,], keepdim=False, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=list[0,1,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=list[0,2,1,3,], keepdim=False, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=list[0,2,1,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=list[0,3,], keepdim=False, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=list[0,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=None, keepdim=False, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=None, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=tuple(1,2,), keepdim=False, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=tuple(1,2,), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=tuple(1,2,3,), keepdim=False, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), axis=tuple(1,2,3,), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), keepdim=False, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), keepdim=True, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float32"), keepdim=True, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float64"), keepdim=False, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float64"), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float64"), keepdim=True, )
paddle.nanmedian(Tensor([0, 3, 4, 5],"float64"), keepdim=True, mode="min", )
paddle.nanmedian(Tensor([0, 3],"float64"), axis=1, keepdim=False, )
paddle.nanmedian(Tensor([0, 3],"float64"), axis=1, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0, 5],"float32"), axis=None, )
paddle.nanmedian(Tensor([0, 5],"float32"), keepdim=True, )
paddle.nanmedian(Tensor([0, 5],"float64"), axis=1, )
paddle.nanmedian(Tensor([0, 5],"float64"), axis=1, mode="min", )
paddle.nanmedian(Tensor([0, 5],"float64"), keepdim=True, )
paddle.nanmedian(Tensor([0, 5],"float64"), keepdim=True, mode="min", )
paddle.nanmedian(Tensor([0],"float32"), axis=0, )
paddle.nanmedian(Tensor([0],"float32"), keepdim=False, )
paddle.nanmedian(Tensor([0],"float32"), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0],"float32"), keepdim=True, )
paddle.nanmedian(Tensor([0],"float32"), keepdim=True, mode="min", )
paddle.nanmedian(Tensor([0],"float64"), keepdim=False, )
paddle.nanmedian(Tensor([0],"float64"), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([0],"float64"), keepdim=True, )
paddle.nanmedian(Tensor([0],"float64"), keepdim=True, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=0, keepdim=False, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=0, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=-1, keepdim=False, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=-1, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=2, keepdim=False, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=-2, keepdim=False, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=-2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=list[0,-1,], keepdim=False, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=list[0,-1,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=list[0,1,3,], keepdim=False, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=list[0,1,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=list[0,2,1,3,], keepdim=False, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=list[0,2,1,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=list[0,3,], keepdim=False, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=list[0,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=None, keepdim=False, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=None, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=tuple(1,2,), keepdim=False, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=tuple(1,2,), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=tuple(1,2,3,), keepdim=False, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), axis=tuple(1,2,3,), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), keepdim=False, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), keepdim=True, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float32"), keepdim=True, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float64"), keepdim=False, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float64"), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float64"), keepdim=True, )
paddle.nanmedian(Tensor([2, 0, 4, 5],"float64"), keepdim=True, mode="min", )
paddle.nanmedian(Tensor([2, 0],"float32"), axis=1, mode="min", )
paddle.nanmedian(Tensor([2, 0],"float64"), axis=1, keepdim=False, )
paddle.nanmedian(Tensor([2, 0],"float64"), axis=1, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=0, keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=0, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=-1, keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=-1, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=2, keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=-2, keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=-2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=list[0,-1,], keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=list[0,-1,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=list[0,1,3,], keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=list[0,1,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=list[0,2,1,3,], keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=list[0,2,1,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=list[0,3,], keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=list[0,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=None, keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=None, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=tuple(1,2,), keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=tuple(1,2,), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=tuple(1,2,3,), keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), axis=tuple(1,2,3,), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), keepdim=True, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float32"), keepdim=True, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float64"), keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float64"), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float64"), keepdim=True, )
paddle.nanmedian(Tensor([2, 3, 0, 5],"float64"), keepdim=True, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=0, keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=0, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=-1, keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=-1, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=2, keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=-2, keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=-2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=list[0,-1,], keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=list[0,-1,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=list[0,1,3,], keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=list[0,1,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=list[0,2,1,3,], keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=list[0,2,1,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=list[0,3,], keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=list[0,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=None, keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=None, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=tuple(1,2,), keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=tuple(1,2,), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=tuple(1,2,3,), keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), axis=tuple(1,2,3,), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), keepdim=True, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float32"), keepdim=True, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float64"), keepdim=False, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float64"), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float64"), keepdim=True, )
paddle.nanmedian(Tensor([2, 3, 4, 0],"float64"), keepdim=True, mode="min", )
paddle.nanmedian(Tensor([3, 0],"float32"), axis=None, )
paddle.nanmedian(Tensor([3, 0],"float32"), keepdim=True, )
paddle.nanmedian(Tensor([4, 0],"float64"), axis=1, )
paddle.nanmedian(Tensor([4, 0],"float64"), axis=1, mode="min", )
paddle.nanmedian(Tensor([4, 0],"float64"), keepdim=True, )
paddle.nanmedian(Tensor([4, 0],"float64"), keepdim=True, mode="min", )
paddle.nanquantile(Tensor([0, 3],"float32"), list[0.3,0.7,], 1, )
paddle.nanquantile(Tensor([0, 7, 6],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.nanquantile(Tensor([0, 7, 6],"float64"), q=0.75, axis=list[0,2,], )
paddle.nanquantile(Tensor([0],"float32"), list[0.55,0.7,], 0, )
paddle.nanquantile(Tensor([2, 0],"float32"), list[0.3,0.7,], 1, )
paddle.nanquantile(Tensor([4, 0, 6],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.nanquantile(Tensor([4, 0, 6],"float64"), q=0.75, axis=list[0,2,], )
paddle.nanquantile(Tensor([4, 7, 0],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.nanquantile(Tensor([4, 7, 0],"float64"), q=0.75, axis=list[0,2,], )
paddle.negative(Tensor([0, 3, 4, 5],"float16"), )
paddle.negative(Tensor([0, 3, 4, 5],"float32"), )
paddle.negative(Tensor([2, 0, 4, 5],"float16"), )
paddle.negative(Tensor([2, 0, 4, 5],"float32"), )
paddle.negative(Tensor([2, 3, 0, 5],"float16"), )
paddle.negative(Tensor([2, 3, 0, 5],"float32"), )
paddle.negative(Tensor([2, 3, 4, 0],"float16"), )
paddle.negative(Tensor([2, 3, 4, 0],"float32"), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 1024, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 1024, 18, 18],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 1024, 4, 80],"float16"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 1024, 4, 80],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 128, 28, 28],"float16"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 128, 28, 28],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 128, 32, 32],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 128, 32, 32],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 128, 32, 32],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 128, 32, 32],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 160, 10, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 160, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 160, 16, 32],"float16"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 160, 16, 32],"float16"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 160, 16, 32],"float32"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 160, 16, 32],"float32"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 2048, 62, 64],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 2048, 7, 7],"float16"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 2048, 7, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 256, 2, 25],"float16"), output_size=list[1,25,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 256, 2, 25],"float32"), output_size=list[1,25,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 256, 56, 56],"float32"), output_size=list[7,7,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 3, 4, 4],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 3, 4, 4],"float64"), output_size=list[1,1,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 3, 4, 4],"float64"), output_size=list[1,4,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 3, 4, 4],"float64"), output_size=list[2,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 3, 4, 4],"float64"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 3, 7, 7],"float32"), list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 3, 7, 7],"float32"), output_size=5, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 3, 7, 7],"float32"), output_size=list[2,5,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 3, 7, 7],"float32"), output_size=list[3,3,], data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 3, 7, 7],"float32"), output_size=list[None,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 4, 4, 3],"float64"), output_size=3, data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 4, 4, 3],"float64"), output_size=list[3,3,], data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 4, 4, 3],"float64"), output_size=tuple(3,3,), data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 512, 128, 128],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 512, 128, 128],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 512, 128, 128],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 512, 2, 2],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 512, 7, 7],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([0, 7, 7, 2048],"float16"), output_size=1, data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 10, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 128, 128],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 128, 128],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 128, 128],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 16, 32],"float32"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 16, 32],"float32"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 18, 18],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 2, 2],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 32, 32],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 32, 32],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 32, 32],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 32, 32],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 0, 62, 64],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 0, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 0, 18],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 14, 0],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 18, 0],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 0, 32],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 0, 32],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 0, 32],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 0, 32],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 32, 0],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 32, 0],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 32, 0],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 32, 0],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 0, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 0, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 0, 32],"float32"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 0, 32],"float32"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 10, 0],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 11, 0],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 16, 0],"float32"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 16, 0],"float32"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 0, 64],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 62, 0],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 0, 128],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 0, 128],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 0, 128],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 0, 2],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 128, 0],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 128, 0],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 128, 0],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 2, 0],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1024, 0, 7, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1024, 2048, 0, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1024, 2048, 7, 0],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 0, 28, 28],"float16"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 0, 28, 28],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 0, 4, 80],"float16"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 0, 4, 80],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 1024, 0, 80],"float16"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 1024, 0, 80],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 1024, 4, 0],"float16"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 1024, 4, 0],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 128, 0, 28],"float16"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 128, 0, 28],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 128, 28, 0],"float16"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 128, 28, 0],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([13, 0, 56, 56],"float32"), output_size=list[7,7,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([13, 256, 0, 56],"float32"), output_size=list[7,7,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([13, 256, 56, 0],"float32"), output_size=list[7,7,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1914, 0, 7, 7],"float16"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1914, 2048, 0, 7],"float16"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1914, 2048, 7, 0],"float16"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 0, 4, 3],"float64"), output_size=3, data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 0, 4, 3],"float64"), output_size=list[3,3,], data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 0, 4, 3],"float64"), output_size=tuple(3,3,), data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 0, 4, 4],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 0, 4, 4],"float64"), output_size=list[1,1,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 0, 4, 4],"float64"), output_size=list[1,4,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 0, 4, 4],"float64"), output_size=list[2,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 0, 4, 4],"float64"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 0, 7, 7],"float32"), list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 0, 7, 7],"float32"), output_size=5, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 0, 7, 7],"float32"), output_size=list[2,5,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 0, 7, 7],"float32"), output_size=list[3,3,], data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 0, 7, 7],"float32"), output_size=list[None,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 0, 7, 7],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 0, 4],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 0, 4],"float64"), output_size=list[1,1,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 0, 4],"float64"), output_size=list[1,4,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 0, 4],"float64"), output_size=list[2,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 0, 4],"float64"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 0, 7],"float32"), list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 0, 7],"float32"), output_size=5, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 0, 7],"float32"), output_size=list[2,5,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 0, 7],"float32"), output_size=list[3,3,], data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 0, 7],"float32"), output_size=list[None,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 0],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 0],"float64"), output_size=list[1,1,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 0],"float64"), output_size=list[1,4,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 0],"float64"), output_size=list[2,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 0],"float64"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 0],"float32"), list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 0],"float32"), output_size=5, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 0],"float32"), output_size=list[2,5,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 0],"float32"), output_size=list[3,3,], data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 0],"float32"), output_size=list[None,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 4, 0, 3],"float64"), output_size=3, data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 4, 0, 3],"float64"), output_size=list[3,3,], data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 4, 0, 3],"float64"), output_size=tuple(3,3,), data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 4, 4, 0],"float64"), output_size=3, data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 4, 4, 0],"float64"), output_size=list[3,3,], data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 4, 4, 0],"float64"), output_size=tuple(3,3,), data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 0, 7],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 7, 0],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([256, 0, 7, 2048],"float16"), output_size=1, data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([256, 7, 0, 2048],"float16"), output_size=1, data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([256, 7, 7, 0],"float16"), output_size=1, data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 0, 16, 32],"float16"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 0, 16, 32],"float16"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 160, 0, 32],"float16"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 160, 0, 32],"float16"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 160, 16, 0],"float16"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 160, 16, 0],"float16"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([512, 0, 2, 25],"float16"), output_size=list[1,25,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([512, 0, 2, 25],"float32"), output_size=list[1,25,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([512, 256, 0, 25],"float16"), output_size=list[1,25,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([512, 256, 0, 25],"float32"), output_size=list[1,25,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([512, 256, 2, 0],"float16"), output_size=list[1,25,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([512, 256, 2, 0],"float32"), output_size=list[1,25,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([0, 3, 4, 4],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([0, 3, 4, 4],"float64"), output_size=list[1,1,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([0, 3, 4, 4],"float64"), output_size=list[1,4,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([0, 3, 4, 4],"float64"), output_size=list[2,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([0, 3, 4, 4],"float64"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([0, 3, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([0, 3, 7, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([0, 3, 7, 7],"float32"), output_size=list[3,3,], data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([0, 3, 7, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([0, 4, 4, 3],"float64"), output_size=3, data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([0, 4, 4, 3],"float64"), output_size=list[3,3,], data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([0, 4, 4, 3],"float64"), output_size=tuple(3,3,), data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 0, 4, 3],"float64"), output_size=3, data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 0, 4, 3],"float64"), output_size=list[3,3,], data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 0, 4, 3],"float64"), output_size=tuple(3,3,), data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 0, 4, 4],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 0, 4, 4],"float64"), output_size=list[1,1,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 0, 4, 4],"float64"), output_size=list[1,4,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 0, 4, 4],"float64"), output_size=list[2,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 0, 4, 4],"float64"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 0, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 0, 7, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 0, 7, 7],"float32"), output_size=list[3,3,], data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 0, 7, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 0, 4],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 0, 4],"float64"), output_size=list[1,1,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 0, 4],"float64"), output_size=list[1,4,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 0, 4],"float64"), output_size=list[2,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 0, 4],"float64"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 0, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 0, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 0, 7],"float32"), output_size=list[3,3,], data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 0, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 4, 0],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 4, 0],"float64"), output_size=list[1,1,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 4, 0],"float64"), output_size=list[1,4,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 4, 0],"float64"), output_size=list[2,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 4, 0],"float64"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 7, 0],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 7, 0],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 7, 0],"float32"), output_size=list[3,3,], data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 7, 0],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 4, 0, 3],"float64"), output_size=3, data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 4, 0, 3],"float64"), output_size=list[3,3,], data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 4, 0, 3],"float64"), output_size=tuple(3,3,), data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 4, 4, 0],"float64"), output_size=3, data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 4, 4, 0],"float64"), output_size=list[3,3,], data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 4, 4, 0],"float64"), output_size=tuple(3,3,), data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 3, 5, 7, 7],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 3, 5, 7, 7],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 3, 5, 7, 7],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 3, 8, 32, 32],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 3, 8, 32, 32],"float64"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 3, 8, 32, 32],"float64"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 3, 8, 32, 32],"float64"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 3, 8, 32, 32],"float64"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 3, 8, 32, 32],"float64"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 3, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 3, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 768, 16, 7, 10],"float16"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([0, 768, 16, 7, 10],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 0, 16, 7, 10],"float16"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 0, 16, 7, 10],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 0, 7, 10],"float16"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 0, 7, 10],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 0, 10],"float16"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 0, 10],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 7, 0],"float16"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 7, 0],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 0, 5, 7, 7],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 0, 5, 7, 7],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 0, 5, 7, 7],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 0, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 0, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 0, 5, 7, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 0, 8, 32, 32],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 0, 8, 32, 32],"float64"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 0, 8, 32, 32],"float64"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 0, 8, 32, 32],"float64"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 0, 8, 32, 32],"float64"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 0, 8, 32, 32],"float64"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 0, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 0, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 0, 32, 32],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 0, 32, 32],"float64"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 0, 32, 32],"float64"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 0, 32, 32],"float64"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 0, 32, 32],"float64"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 0, 32, 32],"float64"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 0, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 0, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 0, 7, 7],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 0, 7, 7],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 0, 7, 7],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 0, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 0, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 0, 7, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 0, 7],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 0, 7],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 0, 7],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 0, 7],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 0, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 0, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 0],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 0],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 0],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 0],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 0],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 0],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 0, 32],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 0, 32],"float64"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 0, 32],"float64"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 0, 32],"float64"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 0, 32],"float64"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 0, 32],"float64"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 0, 32],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 0, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 0],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 0],"float64"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 0],"float64"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 0],"float64"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 0],"float64"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 0],"float64"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 0],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 0],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([0, 3, 5, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([0, 3, 5, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([0, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([0, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([0, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([0, 3, 8, 32, 32],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([0, 3, 8, 32, 32],"float64"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([0, 3, 8, 32, 32],"float64"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([0, 3, 8, 32, 32],"float64"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([0, 3, 8, 32, 32],"float64"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([0, 3, 8, 32, 32],"float64"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([0, 3, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([0, 3, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([0, 3, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 0, 5, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 0, 5, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 0, 5, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 0, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 0, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 0, 8, 32, 32],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 0, 8, 32, 32],"float64"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 0, 8, 32, 32],"float64"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 0, 8, 32, 32],"float64"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 0, 8, 32, 32],"float64"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 0, 8, 32, 32],"float64"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 0, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 0, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 0, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 0, 32, 32],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 0, 32, 32],"float64"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 0, 32, 32],"float64"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 0, 32, 32],"float64"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 0, 32, 32],"float64"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 0, 32, 32],"float64"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 0, 32, 32],"float64"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 0, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 0, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 0, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 0, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 0, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 0, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 0, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 0, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 0, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 0, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 0, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 0, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 0],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 0],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 0],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 0],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 0],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 0, 32],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 0, 32],"float64"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 0, 32],"float64"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 0, 32],"float64"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 0, 32],"float64"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 0, 32],"float64"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 0, 32],"float64"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 0, 32],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 0, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 0],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 0],"float64"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 0],"float64"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 0],"float64"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 0],"float64"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 0],"float64"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 0],"float64"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 0],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 0],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.avg_pool1d(Tensor([0, 1, 120],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([0, 3, 32],"float32"), 2, None, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([0, 3, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool1d(Tensor([0, 3, 32],"float32"), kernel_size=2, stride=2, padding=list[0,], )
paddle.nn.functional.avg_pool1d(Tensor([0, 3, 8],"float32"), 2, 2, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([0, 3, 8],"float64"), 1, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([0, 3, 8],"float64"), 2, 1, 0, True, True, None, )
paddle.nn.functional.avg_pool1d(Tensor([0, 3, 8],"float64"), 2, 1, 1, False, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([0, 3, 8],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([0, 3, 8],"float64"), 3, 4, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([13, 0, 120],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([13, 1, 0],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([16, 0, 120],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([16, 1, 0],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 0, 32],"float32"), 2, None, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 0, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool1d(Tensor([2, 0, 32],"float32"), kernel_size=2, stride=2, padding=list[0,], )
paddle.nn.functional.avg_pool1d(Tensor([2, 0, 8],"float32"), 2, 2, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 0, 8],"float64"), 1, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 0, 8],"float64"), 2, 1, 0, True, True, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 0, 8],"float64"), 2, 1, 1, False, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 0, 8],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 0, 8],"float64"), 3, 4, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 0],"float32"), 2, 2, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 0],"float32"), 2, None, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 0],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 0],"float32"), kernel_size=2, stride=2, padding=list[0,], )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 0],"float64"), 1, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 0],"float64"), 2, 1, 0, True, True, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 0],"float64"), 2, 1, 1, False, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 0],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 0],"float64"), 3, 4, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(x=Tensor([0, 3, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.nn.functional.avg_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=2, stride=1, padding=1, exclusive=False, )
paddle.nn.functional.avg_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 0, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=2, stride=1, padding=1, exclusive=False, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 3, 0],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=2, stride=1, padding=1, exclusive=False, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([0, 1, 4, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([0, 1, 40, 44],"float32"), kernel_size=tuple(1,5,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([0, 1, 44, 40],"float32"), kernel_size=tuple(5,1,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([0, 1, 7, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([0, 1024, 14, 14],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 1024, 17, 17],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 1024, 17, 17],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 1024, 4, 4],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 1024, 40, 54],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 1024, 40, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 1024, 8, 8],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 104, 28, 28],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 104, 28, 28],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 128, 20, 20],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 128, 64, 64],"float16"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 128, 64, 64],"float32"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 128, 8, 50],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 128, 8, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 1280, 5, 5],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 1536, 7, 7],"float16"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 1536, 7, 7],"float32"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 192, 25, 25],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 2, 4, 4],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 256, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 256, 56, 56],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 3, 16, 16],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([0, 3, 32, 32],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([0, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([0, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], divisor_override=4, )
paddle.nn.functional.avg_pool2d(Tensor([0, 3, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", )
paddle.nn.functional.avg_pool2d(Tensor([0, 3, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 3, 32, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=True, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 384, 4, 80],"float32"), list[4,2,], )
paddle.nn.functional.avg_pool2d(Tensor([0, 4, 3, 3],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 512, 13, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 512, 3, 80],"float16"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 512, 3, 80],"float32"), kernel_size=list[2,2,], stride=list[2,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 512, 3, 80],"float32"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([0, 528, 13, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 0, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 0, 20, 20],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 0, 3, 3],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 0, 4, 4],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 0, 40, 54],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 0, 40, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 0, 54],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 0, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 40, 0],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 128, 0, 20],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 128, 20, 0],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 2, 0, 4],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 2, 4, 0],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 256, 0, 10],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 256, 10, 0],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 4, 0, 3],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 4, 3, 0],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([13, 0, 4, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([13, 0, 7, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([13, 1, 0, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([13, 1, 4, 0],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([13, 1, 7, 0],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([16, 0, 4, 4],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 0, 8, 8],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 1024, 0, 4],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 1024, 0, 8],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 1024, 4, 0],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 1024, 8, 0],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 13, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 25, 25],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], divisor_override=4, )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 32, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 32, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=True, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 0, 5, 5],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1280, 0, 5],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1280, 5, 0],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 192, 0, 25],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 192, 25, 0],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 0, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 0, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], divisor_override=4, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 0, 32],"float32"), kernel_size=2, stride=None, padding="SAME", )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 0, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 0, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 0, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 0, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 0, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 0, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 0, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=True, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 0, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 0, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 0],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 0],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], divisor_override=4, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 0],"float32"), kernel_size=2, stride=None, padding="SAME", )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 0],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 0],"float64"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 0],"float64"), kernel_size=list[3,3,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 0],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 0],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 0],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 0],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=True, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 0],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 0],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 512, 0, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 512, 13, 0],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 528, 0, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 528, 13, 0],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 0, 8, 50],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 0, 8, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 128, 0, 50],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 128, 0, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 128, 8, 0],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 128, 8, 0],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([3, 0, 40, 44],"float32"), kernel_size=tuple(1,5,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([3, 0, 44, 40],"float32"), kernel_size=tuple(5,1,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([3, 1, 0, 40],"float32"), kernel_size=tuple(5,1,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([3, 1, 0, 44],"float32"), kernel_size=tuple(1,5,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([3, 1, 40, 0],"float32"), kernel_size=tuple(1,5,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([3, 1, 44, 0],"float32"), kernel_size=tuple(5,1,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([32, 0, 14, 14],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 0, 56, 56],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 1024, 0, 14],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 1024, 14, 0],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 256, 0, 56],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 256, 56, 0],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 0, 4, 80],"float32"), list[4,2,], )
paddle.nn.functional.avg_pool2d(Tensor([4, 384, 0, 80],"float32"), list[4,2,], )
paddle.nn.functional.avg_pool2d(Tensor([4, 384, 4, 0],"float32"), list[4,2,], )
paddle.nn.functional.avg_pool2d(Tensor([56, 0, 16, 16],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 0, 32, 32],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 0, 16],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 0, 32],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 16, 0],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 32, 0],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([64, 0, 17, 17],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 0, 17, 17],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 0, 28, 28],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 0, 28, 28],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 0, 3, 80],"float16"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 0, 3, 80],"float32"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 0, 64, 64],"float16"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 0, 64, 64],"float32"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 0, 7, 7],"float16"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 0, 7, 7],"float32"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 0, 17],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 0, 17],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 17, 0],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 17, 0],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 104, 0, 28],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 104, 0, 28],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 104, 28, 0],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 104, 28, 0],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 0, 64],"float16"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 0, 64],"float32"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 64, 0],"float16"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 64, 0],"float32"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1536, 0, 7],"float16"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1536, 0, 7],"float32"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1536, 7, 0],"float16"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1536, 7, 0],"float32"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 512, 0, 80],"float16"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 512, 0, 80],"float32"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 512, 3, 0],"float16"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 512, 3, 0],"float32"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8, 0, 3, 80],"float32"), kernel_size=list[2,2,], stride=list[2,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8, 512, 0, 80],"float32"), kernel_size=list[2,2,], stride=list[2,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8, 512, 3, 0],"float32"), kernel_size=list[2,2,], stride=list[2,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(x=Tensor([0, 3, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([0, 3, 32, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([0, 3, 32, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.avg_pool2d(x=Tensor([0, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([0, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([0, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,], ceil_mode=True, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([0, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([0, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([0, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 0, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 0, 32, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 0, 32, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 0, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 0, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 0, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,], ceil_mode=True, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 0, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 0, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 0, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 0, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 0, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 0, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 0, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 0, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 0, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,], ceil_mode=True, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 0, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 0, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 0, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 32, 0],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 32, 0],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 32, 0],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 0],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 0],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 0],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,], ceil_mode=True, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 0],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 0],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 0],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), )
paddle.nn.functional.avg_pool3d(Tensor([0, 1, 3, 1600, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([0, 1, 40, 40, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([0, 1, 7, 3, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([0, 1, 7, 40, 40],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([0, 8, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 32, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 0, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 0, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 0, 32],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 0, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 0, 32],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 0],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 0],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 0],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 0],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 0],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 0, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 0],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 8, 0, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 8, 8, 0, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 8, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([3, 0, 3, 1600, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 0, 40, 40, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 0, 7, 3, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 0, 7, 40, 40],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 0, 1600, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 0, 3, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 0, 40, 40],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 0, 40, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 3, 0, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 3, 1600, 0],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 40, 0, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 40, 40, 0],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 0, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 0, 40],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 3, 0],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 40, 0],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 2048, 4, 7, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 256, 32, 7, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([0, 8, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 0, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 0, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 0, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 0, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 0, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 0, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 0, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 0],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 8, 0, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 8, 8, 0, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 8, 8, 8, 0],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 0, 32, 7, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 0, 4, 7, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 2048, 0, 7, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 2048, 4, 0, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 2048, 4, 7, 0],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 256, 0, 7, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 256, 32, 0, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 256, 32, 7, 0],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.batch_norm(Tensor([0, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([0, 1024, 256],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([0, 1024, 512],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([0, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([0, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([0, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([0, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([0, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([0, 16, 16, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([0, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([0, 3, 4, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([0, 3, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([0, 3, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([0, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([0, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([0, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([0, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([0, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([0, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([0, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([0, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([0, 40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([0, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([0, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([0, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([0, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([0, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([0, 8, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1, 0, 256],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 0, 512],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 1024, 0],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 1024, 256],"float32"), Tensor([0],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 1024, 256],"float32"), Tensor([1024],"float32"), Tensor([0],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 1024, 512],"float32"), Tensor([0],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 1024, 512],"float32"), Tensor([1024],"float32"), Tensor([0],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([16, 0, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 0, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 0, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 0, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 0, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 0, 16, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 0, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 0, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 0, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 0, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 0, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 0, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 0],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 0],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float16"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float16"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 0, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 0, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 0, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 0, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 0, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 0, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 0, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 0, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 0, 4, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 0, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 0, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 0, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 0, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 0],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 0],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 3],"float32"), Tensor([0],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 3],"float32"), Tensor([0],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([0],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([0],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([0],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([0],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([0],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([0],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 0, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 0, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 0, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 0],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 0],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([0],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([0],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([4],"float64"), Tensor([0],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([4],"float64"), Tensor([0],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([0],"float64"), Tensor([4],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([0],"float64"), Tensor([4],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([0],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([0],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 0, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 0, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 0, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 0, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 0, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 0, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([0],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 0, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 0, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 0, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 0, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 0],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 0, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 0, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 0, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 0, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 0],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 0],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 0],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 0],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([0],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([0],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([0],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([0],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([0],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([0],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([0],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([0],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([0],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([0],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([0],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([0],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([0],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([0],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([0],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([0],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40],"float32"), Tensor([0],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40],"float32"), Tensor([40],"float32"), Tensor([0],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([0],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([0],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 0, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 0, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 0, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 0, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 0, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 0, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 0, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 0, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 0, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 0],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 256],"float32"), Tensor([0],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 256],"float32"), Tensor([256],"float32"), Tensor([0],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([0],"float32"), Tensor([256],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([0],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 0, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 0, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 0, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 0, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 0, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 0, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 0, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 0, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 0],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 0],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 0],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([0],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([0],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([0],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([0],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([0],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([0],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([0],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([0],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([0],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([0],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([0],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([0],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([0],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 0],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 32],"float32"), Tensor([0],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 32],"float32"), Tensor([8],"float32"), Tensor([0],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([0],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([0],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 0, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 0, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 0, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 0, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 0, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 0, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 0, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 0, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 0, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 0, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 0, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 0, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 0, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 0, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 0, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 0, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 0, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 0, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 0, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 0, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 0, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 0, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 0, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 0, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 0, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 0, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 0, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 0, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 0],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 0],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 0],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 0],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([0],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([0],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([0],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([0],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([0],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([0],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([0],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([0],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([0],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([0],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([0],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([0],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([0],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([0],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([0],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([0],"float64"), Tensor([8],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([0],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([0],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(x=Tensor([0, 1, 2, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([0, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([0, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([0, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([0, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([0, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([0, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([0, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([0, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 0, 2, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 0, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 0, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 0, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 0, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 0, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 0, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 0, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 0, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 0, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 0, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 0, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 0, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 0, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 0, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 0],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 0],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 0],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 0],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 0],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 0],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 0],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 0],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 0],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float32"), running_mean=Tensor([0],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([0],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([0],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([0],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([0],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([0],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([0],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([0],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([0],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([0],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([0],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([0],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([0],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([0],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([0],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([0],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([0],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([0],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([0],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([0],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([0],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([0],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([0],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([0],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([0],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([0],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([0],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([0],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([0],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([0],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([0],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([0],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([0],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([0],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([0],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([0],"float64"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.bilinear(Tensor([0, 1],"float32"), Tensor([3, 2],"float32"), Tensor([4, 1, 2],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([0, 3],"float32"), Tensor([1, 3],"float32"), Tensor([6, 3, 3],"float32"), Tensor([1, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 0],"float32"), Tensor([1, 3],"float32"), Tensor([6, 3, 3],"float32"), Tensor([1, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 3],"float32"), Tensor([0, 3],"float32"), Tensor([6, 3, 3],"float32"), Tensor([1, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 3],"float32"), Tensor([1, 0],"float32"), Tensor([6, 3, 3],"float32"), Tensor([1, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 3],"float32"), Tensor([1, 3],"float32"), Tensor([0, 3, 3],"float32"), Tensor([1, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 3],"float32"), Tensor([1, 3],"float32"), Tensor([6, 0, 3],"float32"), Tensor([1, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 3],"float32"), Tensor([1, 3],"float32"), Tensor([6, 3, 0],"float32"), Tensor([1, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 3],"float32"), Tensor([1, 3],"float32"), Tensor([6, 3, 3],"float32"), Tensor([0, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 3],"float32"), Tensor([1, 3],"float32"), Tensor([6, 3, 3],"float32"), Tensor([1, 0],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 0],"float32"), Tensor([3, 2],"float32"), Tensor([4, 1, 2],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([0, 2],"float32"), Tensor([4, 1, 2],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([3, 0],"float32"), Tensor([4, 1, 2],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([3, 2],"float32"), Tensor([0, 1, 2],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([3, 2],"float32"), Tensor([4, 0, 2],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([3, 2],"float32"), Tensor([4, 1, 0],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([3, 2],"float32"), Tensor([4, 1, 2],"float32"), Tensor([0, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([3, 2],"float32"), Tensor([4, 1, 2],"float32"), Tensor([1, 0],"float32"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([0, 1],"float32"), label=Tensor([0, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([0, 1],"float32"), label=Tensor([2, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([0, 19],"float32"), label=Tensor([0, 19],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([0, 19],"float32"), label=Tensor([64, 19],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([0, 26],"float32"), label=Tensor([0, 26],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([0, 26],"float32"), label=Tensor([64, 26],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([0],"float32"), label=Tensor([0],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([0],"float32"), label=Tensor([1024],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([0],"float32"), label=Tensor([2048],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([1024],"float32"), label=Tensor([0],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([2, 0],"float32"), label=Tensor([2, 0],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([2, 0],"float32"), label=Tensor([2, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([2, 1],"float32"), label=Tensor([0, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([2, 1],"float32"), label=Tensor([2, 0],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([2048],"float32"), label=Tensor([0],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([64, 0],"float32"), label=Tensor([64, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([64, 0],"float32"), label=Tensor([64, 19],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([64, 0],"float32"), label=Tensor([64, 26],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([64, 19],"float32"), label=Tensor([0, 19],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([64, 19],"float32"), label=Tensor([64, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([64, 26],"float32"), label=Tensor([0, 26],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([64, 26],"float32"), label=Tensor([64, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 1, 2],"float64"), label=Tensor([0, 1, 2],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 1, 2],"float64"), label=Tensor([1, 1, 2],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 1, 30, 30],"float32"), Tensor([0, 1, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 1, 30, 30],"float32"), Tensor([1, 1, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 1],"float32"), Tensor([0, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 1],"float32"), Tensor([459, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 10],"float32"), Tensor([0, 10],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 10],"float32"), Tensor([1, 10],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 100, 2],"float32"), Tensor([0, 100, 2],"float32"), weight=Tensor([0, 100, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 100, 2],"float32"), Tensor([1, 100, 2],"float32"), weight=Tensor([1, 100, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 1000],"float32"), Tensor([0, 1000],"float32"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 1000],"float32"), Tensor([0, 1000],"float32"), weight=Tensor([0, 1000],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 1000],"float32"), Tensor([300, 1000],"float32"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 1000],"float32"), Tensor([300, 1000],"float32"), weight=None, reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 12544],"float32"), Tensor([0, 12544],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 12544],"float32"), Tensor([1, 12544],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 12544],"float32"), Tensor([100, 12544],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 160, 160],"float32"), Tensor([0, 160, 160],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 160, 160],"float32"), Tensor([13, 160, 160],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 192, 11],"float32"), Tensor([0, 192, 11],"float32"), weight=Tensor([0, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 192, 11],"float32"), Tensor([1, 192, 11],"float32"), weight=Tensor([1, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 200, 80],"float32"), Tensor([0, 200, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 200, 80],"float32"), Tensor([2, 200, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 28, 28],"float32"), Tensor([0, 28, 28],"float32"), weight=Tensor([0, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 28, 28],"float32"), Tensor([1, 28, 28],"float32"), weight=Tensor([1, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 28, 28],"float32"), Tensor([10, 28, 28],"float32"), weight=Tensor([10, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 10, 10, 1],"float32"), Tensor([0, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 10, 10, 80],"float32"), Tensor([0, 3, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 10, 10, 80],"float32"), Tensor([12, 3, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), weight=Tensor([0, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), weight=Tensor([0, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), weight=Tensor([0, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3],"float32"), Tensor([0, 3],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 3],"float32"), Tensor([13, 3],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 30],"float64"), Tensor([0, 30],"float64"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 30],"float64"), Tensor([0, 30],"float64"), None, "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 30],"float64"), Tensor([0, 30],"float64"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 30],"float64"), Tensor([0, 30],"float64"), weight=None, reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 30],"float64"), Tensor([0, 30],"float64"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 30],"float64"), Tensor([0, 30],"float64"), weight=None, reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 30],"float64"), Tensor([20, 30],"float64"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 30],"float64"), Tensor([20, 30],"float64"), None, "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 30],"float64"), Tensor([20, 30],"float64"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 30],"float64"), Tensor([20, 30],"float64"), weight=None, reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 30],"float64"), Tensor([20, 30],"float64"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0, 30],"float64"), Tensor([20, 30],"float64"), weight=None, reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0],"float32"), Tensor([0],"float32"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0],"float32"), Tensor([0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0],"float32"), Tensor([110484],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0],"float32"), Tensor([122760],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([0],"float32"), Tensor([9],"float32"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 0, 11],"float32"), Tensor([1, 0, 11],"float32"), weight=Tensor([1, 0, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 0, 11],"float32"), Tensor([1, 192, 11],"float32"), weight=Tensor([1, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 0, 2],"float32"), Tensor([1, 0, 2],"float32"), weight=Tensor([1, 0, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 0, 2],"float32"), Tensor([1, 100, 2],"float32"), weight=Tensor([1, 100, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 0, 2],"float64"), label=Tensor([1, 0, 2],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 0, 2],"float64"), label=Tensor([1, 1, 2],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 0, 28],"float32"), Tensor([1, 0, 28],"float32"), weight=Tensor([1, 0, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 0, 28],"float32"), Tensor([1, 28, 28],"float32"), weight=Tensor([1, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 0, 30, 30],"float32"), Tensor([1, 0, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 0, 30, 30],"float32"), Tensor([1, 1, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 0],"float32"), Tensor([1, 0],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 0],"float32"), Tensor([1, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 0],"float32"), Tensor([1, 10],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 0],"float32"), Tensor([1, 12544],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 0, 30],"float32"), Tensor([1, 1, 0, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 0, 30],"float32"), Tensor([1, 1, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 0],"float64"), label=Tensor([1, 1, 0],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 0],"float64"), label=Tensor([1, 1, 2],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 2],"float64"), label=Tensor([0, 1, 2],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 2],"float64"), label=Tensor([1, 0, 2],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 2],"float64"), label=Tensor([1, 1, 0],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 30, 0],"float32"), Tensor([1, 1, 30, 0],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 30, 0],"float32"), Tensor([1, 1, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 30, 30],"float32"), Tensor([0, 1, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 30, 30],"float32"), Tensor([1, 0, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 30, 30],"float32"), Tensor([1, 1, 0, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 30, 30],"float32"), Tensor([1, 1, 30, 0],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 10],"float32"), Tensor([0, 10],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 10],"float32"), Tensor([1, 0],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 100, 0],"float32"), Tensor([1, 100, 0],"float32"), weight=Tensor([1, 100, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 100, 0],"float32"), Tensor([1, 100, 2],"float32"), weight=Tensor([1, 100, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 100, 2],"float32"), Tensor([0, 100, 2],"float32"), weight=Tensor([1, 100, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 100, 2],"float32"), Tensor([1, 0, 2],"float32"), weight=Tensor([1, 100, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 100, 2],"float32"), Tensor([1, 100, 0],"float32"), weight=Tensor([1, 100, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 100, 2],"float32"), Tensor([1, 100, 2],"float32"), weight=Tensor([0, 100, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 100, 2],"float32"), Tensor([1, 100, 2],"float32"), weight=Tensor([1, 0, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 100, 2],"float32"), Tensor([1, 100, 2],"float32"), weight=Tensor([1, 100, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 12544],"float32"), Tensor([0, 12544],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 12544],"float32"), Tensor([1, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 0],"float32"), Tensor([1, 192, 0],"float32"), weight=Tensor([1, 192, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 0],"float32"), Tensor([1, 192, 11],"float32"), weight=Tensor([1, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 11],"float32"), Tensor([0, 192, 11],"float32"), weight=Tensor([1, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 11],"float32"), Tensor([1, 0, 11],"float32"), weight=Tensor([1, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 11],"float32"), Tensor([1, 192, 0],"float32"), weight=Tensor([1, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 11],"float32"), Tensor([1, 192, 11],"float32"), weight=Tensor([0, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 11],"float32"), Tensor([1, 192, 11],"float32"), weight=Tensor([1, 0, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 11],"float32"), Tensor([1, 192, 11],"float32"), weight=Tensor([1, 192, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 0],"float32"), Tensor([1, 28, 0],"float32"), weight=Tensor([1, 1, 0],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 0],"float32"), Tensor([1, 28, 28],"float32"), weight=Tensor([1, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 28],"float32"), Tensor([0, 28, 28],"float32"), weight=Tensor([1, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 28],"float32"), Tensor([1, 0, 28],"float32"), weight=Tensor([1, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 28],"float32"), Tensor([1, 28, 0],"float32"), weight=Tensor([1, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 28],"float32"), Tensor([1, 28, 28],"float32"), weight=Tensor([0, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 28],"float32"), Tensor([1, 28, 28],"float32"), weight=Tensor([1, 0, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 28],"float32"), Tensor([1, 28, 28],"float32"), weight=Tensor([1, 1, 0],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 0, 28],"float32"), Tensor([10, 0, 28],"float32"), weight=Tensor([10, 0, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 0, 28],"float32"), Tensor([10, 28, 28],"float32"), weight=Tensor([10, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 0],"float32"), Tensor([10, 28, 0],"float32"), weight=Tensor([10, 1, 0],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 0],"float32"), Tensor([10, 28, 28],"float32"), weight=Tensor([10, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 28],"float32"), Tensor([0, 28, 28],"float32"), weight=Tensor([10, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 28],"float32"), Tensor([10, 0, 28],"float32"), weight=Tensor([10, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 28],"float32"), Tensor([10, 28, 0],"float32"), weight=Tensor([10, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 28],"float32"), Tensor([10, 28, 28],"float32"), weight=Tensor([0, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 28],"float32"), Tensor([10, 28, 28],"float32"), weight=Tensor([10, 0, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 28],"float32"), Tensor([10, 28, 28],"float32"), weight=Tensor([10, 1, 0],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([100, 0],"float32"), Tensor([100, 12544],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([100, 12544],"float32"), Tensor([0, 12544],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([100, 12544],"float32"), Tensor([100, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([110484],"float32"), Tensor([0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 0, 10, 10, 1],"float32"), Tensor([12, 0, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 0, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 0, 10, 10, 80],"float32"), Tensor([12, 0, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 0, 10, 10, 80],"float32"), Tensor([12, 3, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 0, 10, 1],"float32"), Tensor([12, 3, 0, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 0, 10, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 0, 10, 80],"float32"), Tensor([12, 3, 0, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 0, 10, 80],"float32"), Tensor([12, 3, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 0, 1],"float32"), Tensor([12, 3, 10, 0, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 0, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 0, 80],"float32"), Tensor([12, 3, 10, 0, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 0, 80],"float32"), Tensor([12, 3, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 0],"float32"), Tensor([12, 3, 10, 10, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 0],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 0],"float32"), Tensor([12, 3, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([0, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 0, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 0, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 0, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 80],"float32"), Tensor([0, 3, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 80],"float32"), Tensor([12, 0, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 80],"float32"), Tensor([12, 3, 0, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 80],"float32"), Tensor([12, 3, 10, 0, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 80],"float32"), Tensor([12, 3, 10, 10, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([122760],"float32"), Tensor([0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 0, 160],"float32"), Tensor([13, 0, 160],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 0, 160],"float32"), Tensor([13, 160, 160],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 0],"float32"), Tensor([13, 0],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 0],"float32"), Tensor([13, 3],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 160, 0],"float32"), Tensor([13, 160, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 160, 0],"float32"), Tensor([13, 160, 160],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 160, 160],"float32"), Tensor([0, 160, 160],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 160, 160],"float32"), Tensor([13, 0, 160],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 160, 160],"float32"), Tensor([13, 160, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 3],"float32"), Tensor([0, 3],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 3],"float32"), Tensor([13, 0],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), weight=Tensor([2, 0, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), weight=Tensor([2, 0, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), weight=Tensor([2, 0, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 80],"float32"), Tensor([2, 0, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 0, 80],"float32"), Tensor([2, 200, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 200, 0],"float32"), Tensor([2, 200, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 200, 0],"float32"), Tensor([2, 200, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 200, 80],"float32"), Tensor([0, 200, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 200, 80],"float32"), Tensor([2, 0, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 200, 80],"float32"), Tensor([2, 200, 0],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), weight=Tensor([2, 3, 0, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), weight=Tensor([2, 3, 0, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), weight=Tensor([2, 3, 0, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 0],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 0],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 0],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 0],"float64"), weight=Tensor([2, 3, 4, 0],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 0],"float64"), weight=Tensor([2, 3, 4, 0],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 0],"float64"), weight=Tensor([2, 3, 4, 0],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 0],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 0],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 0],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 0],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([0, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 0, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 0, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 0],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 0],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 0],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 0],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([0, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 0, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 0],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([0, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([0, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([0, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([0, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 0, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 0, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 0, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 0, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 0, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 0, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 0, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 0, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 0],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 0],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 0],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 0],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([0, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 0, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 0],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 0],"float64"), Tensor([20, 0],"float64"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 0],"float64"), Tensor([20, 0],"float64"), None, "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 0],"float64"), Tensor([20, 0],"float64"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 0],"float64"), Tensor([20, 0],"float64"), weight=None, reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 0],"float64"), Tensor([20, 0],"float64"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 0],"float64"), Tensor([20, 0],"float64"), weight=None, reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 0],"float64"), Tensor([20, 30],"float64"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 0],"float64"), Tensor([20, 30],"float64"), None, "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 0],"float64"), Tensor([20, 30],"float64"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 0],"float64"), Tensor([20, 30],"float64"), weight=None, reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 0],"float64"), Tensor([20, 30],"float64"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 0],"float64"), Tensor([20, 30],"float64"), weight=None, reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([0, 30],"float64"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([0, 30],"float64"), None, "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([0, 30],"float64"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([0, 30],"float64"), weight=None, reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([0, 30],"float64"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([0, 30],"float64"), weight=None, reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([20, 0],"float64"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([20, 0],"float64"), None, "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([20, 0],"float64"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([20, 0],"float64"), weight=None, reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([20, 0],"float64"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([20, 0],"float64"), weight=None, reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 0],"float32"), Tensor([300, 0],"float32"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 0],"float32"), Tensor([300, 0],"float32"), weight=Tensor([300, 0],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 0],"float32"), Tensor([300, 1000],"float32"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 0],"float32"), Tensor([300, 1000],"float32"), weight=None, reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 0],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 0],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([0, 1000],"float32"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([0, 1000],"float32"), weight=None, reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([0, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([0, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 0],"float32"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 0],"float32"), weight=None, reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 0],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 0],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 1000],"float32"), weight=None, reduction="none", pos_weight=Tensor([0],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([0, 1000],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([0, 1000],"float32"), reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 0],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 0],"float32"), reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=Tensor([0],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([459, 0],"float32"), Tensor([459, 0],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([459, 0],"float32"), Tensor([459, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([459, 1],"float32"), Tensor([0, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([459, 1],"float32"), Tensor([459, 0],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([9],"float32"), Tensor([0],"float32"), None, "sum", None, None, )
paddle.nn.functional.channel_shuffle(Tensor([0, 4, 4, 9],"float64"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([0, 4, 4, 9],"float64"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([0, 9, 4, 4],"float64"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([0, 9, 4, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 0, 4, 4],"float64"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([2, 0, 4, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 0, 4, 9],"float64"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([2, 0, 4, 9],"float64"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 0, 9],"float64"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 0, 9],"float64"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 4, 0],"float64"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 4, 0],"float64"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 0, 4],"float64"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 0, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 4, 0],"float64"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 4, 0],"float64"), 3, "NCHW", None, )
paddle.nn.functional.class_center_sample(Tensor([0],"int32"), 10, 8, )
paddle.nn.functional.class_center_sample(Tensor([0],"int32"), 20, 6, )
paddle.nn.functional.class_center_sample(Tensor([0],"int32"), 20, 8, )
paddle.nn.functional.class_center_sample(Tensor([0],"int32"), num_classes=10, num_samples=6, group=None, )
paddle.nn.functional.class_center_sample(Tensor([0],"int64"), 20, 6, )
paddle.nn.functional.class_center_sample(Tensor([0],"int64"), num_classes=10, num_samples=6, group=None, )
paddle.nn.functional.conv1d(Tensor([0, 1, 1024],"float32"), Tensor([0, 1, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 1, 1024],"float32"), Tensor([32, 1, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 1024, 3000],"float32"), Tensor([1024, 1024, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 1280, 3000],"float32"), Tensor([1280, 1280, 3],"float32"), bias=Tensor([1280],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 16, 3],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([0, 16, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([0, 16, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([0, 20, 2048],"float32"), Tensor([0, 20, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 20, 2048],"float32"), Tensor([256, 20, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 20, 7],"float32"), Tensor([512, 20, 7],"float32"), bias=Tensor([512],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 24, 14],"float32"), Tensor([24, 12, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 256, 100],"float16"), Tensor([256, 64, 3],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 256, 100],"float32"), Tensor([256, 64, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 256, 2048],"float32"), Tensor([0, 256, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 256, 2048],"float32"), Tensor([20, 256, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 3, 4],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 3, 4],"float64"), Tensor([6, 1, 3],"float64"), bias=Tensor([6],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 3, 5],"float32"), Tensor([4, 3, 3],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 32, 255],"float32"), Tensor([0, 32, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 32, 255],"float32"), Tensor([32, 32, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 32, 7],"float32"), Tensor([32, 16, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 32, 7],"float32"), Tensor([64, 8, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 4, 3],"float32"), Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([0, 4, 3],"float64"), Tensor([2, 3, 3],"float64"), bias=Tensor([2],"float64"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([0, 6, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 6, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 6, 16],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 64, 10],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 64, 1007],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=128, stride=list[1,], dilation=list[128,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=16, stride=list[1,], dilation=list[16,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=2, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=256, stride=list[1,], dilation=list[256,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=32, stride=list[1,], dilation=list[32,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=4, stride=list[1,], dilation=list[4,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=512, stride=list[1,], dilation=list[512,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=64, stride=list[1,], dilation=list[64,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=8, stride=list[1,], dilation=list[8,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 64, 7],"float32"), Tensor([32, 64, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 7, 32],"float32"), Tensor([0, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([0, 7, 32],"float32"), Tensor([0, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([0, 7, 32],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([0, 7, 32],"float32"), Tensor([32, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([0, 80, 25500],"float32"), Tensor([0, 80, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 80, 25500],"float32"), Tensor([128, 80, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 80, 89],"float32"), Tensor([0, 80, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([0, 80, 89],"float32"), Tensor([80, 80, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 3000],"float32"), Tensor([1024, 1024, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 3000],"float32"), Tensor([1280, 1280, 3],"float32"), bias=Tensor([1280],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 5],"float32"), Tensor([4, 3, 3],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 0, 7],"float32"), Tensor([512, 20, 7],"float32"), bias=Tensor([512],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1024, 0],"float32"), Tensor([1024, 1024, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1024, 3000],"float32"), Tensor([0, 1024, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1024, 3000],"float32"), Tensor([1024, 0, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1024, 3000],"float32"), Tensor([1024, 1024, 0],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1024, 3000],"float32"), Tensor([1024, 1024, 3],"float32"), bias=Tensor([0],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 0],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 0],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 0],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 0],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 0],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 0],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 0],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 0],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 0],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([0, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([0, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([0, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([0, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([0, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([0, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([0, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([0, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([0, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 0, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 0, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 0, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 0, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 0, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 0, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 0, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 0, 7],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 0, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 0],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 0],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 0],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 0],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 0],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 0],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 0],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 0],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 0],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([0],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([0],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([0],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([0],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([0],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([0],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([0],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([0],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([0],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1280, 0],"float32"), Tensor([1280, 1280, 3],"float32"), bias=Tensor([1280],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1280, 3000],"float32"), Tensor([0, 1280, 3],"float32"), bias=Tensor([1280],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1280, 3000],"float32"), Tensor([1280, 0, 3],"float32"), bias=Tensor([1280],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1280, 3000],"float32"), Tensor([1280, 1280, 0],"float32"), bias=Tensor([1280],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1280, 3000],"float32"), Tensor([1280, 1280, 3],"float32"), bias=Tensor([0],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 20, 0],"float32"), Tensor([512, 20, 7],"float32"), bias=Tensor([512],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 20, 7],"float32"), Tensor([0, 20, 7],"float32"), bias=Tensor([512],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 20, 7],"float32"), Tensor([512, 0, 7],"float32"), bias=Tensor([512],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 20, 7],"float32"), Tensor([512, 20, 0],"float32"), bias=Tensor([512],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 20, 7],"float32"), Tensor([512, 20, 7],"float32"), bias=Tensor([0],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 0],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 0],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 0],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 0],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 0],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 0],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 0],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 0],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([0, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([0, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([0, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([0, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([0, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([0, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([0, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([0, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 0, 11],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 0, 11],"float32"), bias=Tensor([256],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 0, 11],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 0, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 0, 3],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 0, 3],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 0, 7],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 0, 7],"float32"), bias=Tensor([256],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 0],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 0],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 0],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 0],"float32"), bias=Tensor([256],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 0],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 0],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 0],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 0],"float32"), bias=Tensor([256],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([0],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([0],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([0],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([0],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([0],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([0],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([0],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([0],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 3, 0],"float32"), Tensor([4, 3, 3],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 3, 5],"float32"), Tensor([0, 3, 3],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 3, 5],"float32"), Tensor([4, 0, 3],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 3, 5],"float32"), Tensor([4, 3, 0],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 3, 5],"float32"), Tensor([4, 3, 3],"float32"), bias=Tensor([0],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 0, 10],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 0, 1007],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 0, 1024],"float32"), Tensor([32, 0, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 0, 1024],"float32"), Tensor([32, 1, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 0, 14],"float32"), Tensor([24, 12, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 0, 2048],"float32"), Tensor([20, 0, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 0, 2048],"float32"), Tensor([20, 256, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 0, 2048],"float32"), Tensor([256, 0, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 0, 2048],"float32"), Tensor([256, 20, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 0, 255],"float32"), Tensor([32, 0, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 0, 255],"float32"), Tensor([32, 32, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 0, 32],"float32"), Tensor([16, 0, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 0, 32],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 0, 32],"float32"), Tensor([32, 0, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 0, 32],"float32"), Tensor([32, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 0, 7],"float32"), Tensor([32, 16, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 0, 7],"float32"), Tensor([32, 64, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 0, 7],"float32"), Tensor([64, 8, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 1, 0],"float32"), Tensor([32, 1, 0],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 1, 0],"float32"), Tensor([32, 1, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 1, 1024],"float32"), Tensor([0, 1, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 1, 1024],"float32"), Tensor([32, 0, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 1, 1024],"float32"), Tensor([32, 1, 0],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 20, 0],"float32"), Tensor([256, 20, 0],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 20, 0],"float32"), Tensor([256, 20, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 20, 2048],"float32"), Tensor([0, 20, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 20, 2048],"float32"), Tensor([256, 0, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 20, 2048],"float32"), Tensor([256, 20, 0],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 24, 0],"float32"), Tensor([24, 12, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 24, 14],"float32"), Tensor([0, 12, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 24, 14],"float32"), Tensor([24, 0, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 24, 14],"float32"), Tensor([24, 12, 0],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 24, 14],"float32"), Tensor([24, 12, 16],"float32"), bias=Tensor([0],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 256, 0],"float32"), Tensor([20, 256, 0],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 256, 0],"float32"), Tensor([20, 256, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 256, 2048],"float32"), Tensor([0, 256, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 256, 2048],"float32"), Tensor([20, 0, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 256, 2048],"float32"), Tensor([20, 256, 0],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 0],"float32"), Tensor([32, 16, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 0],"float32"), Tensor([32, 32, 0],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 0],"float32"), Tensor([32, 32, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 0],"float32"), Tensor([64, 8, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 255],"float32"), Tensor([0, 32, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 255],"float32"), Tensor([32, 0, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 255],"float32"), Tensor([32, 32, 0],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([0, 16, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([0, 8, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([32, 0, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([32, 16, 0],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([32, 16, 1],"float32"), bias=Tensor([0],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([64, 0, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([64, 8, 0],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([64, 8, 1],"float32"), bias=Tensor([0],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 0],"float32"), Tensor([32, 64, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 0],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 10],"float32"), Tensor([0, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 10],"float32"), Tensor([64, 0, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 10],"float32"), Tensor([64, 1, 0],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 10],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([0],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 1007],"float32"), Tensor([0, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 1007],"float32"), Tensor([64, 0, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 1007],"float32"), Tensor([64, 1, 0],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 1007],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([0],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 7],"float32"), Tensor([0, 64, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 7],"float32"), Tensor([32, 0, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 7],"float32"), Tensor([32, 64, 0],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 7],"float32"), Tensor([32, 64, 1],"float32"), bias=Tensor([0],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 7, 0],"float32"), Tensor([16, 32, 0],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 0],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 0],"float32"), Tensor([32, 1, 0],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 0],"float32"), Tensor([32, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 32],"float32"), Tensor([0, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 32],"float32"), Tensor([0, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 32],"float32"), Tensor([16, 0, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 32],"float32"), Tensor([16, 32, 0],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 32],"float32"), Tensor([32, 0, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 32],"float32"), Tensor([32, 1, 0],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([16, 0, 25500],"float32"), Tensor([128, 0, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 0, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=128, stride=list[1,], dilation=list[128,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 0, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=16, stride=list[1,], dilation=list[16,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 0, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=2, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 0, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=256, stride=list[1,], dilation=list[256,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 0, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=32, stride=list[1,], dilation=list[32,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 0, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=4, stride=list[1,], dilation=list[4,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 0, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=512, stride=list[1,], dilation=list[512,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 0, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=64, stride=list[1,], dilation=list[64,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 0, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=8, stride=list[1,], dilation=list[8,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 0, 25500],"float32"), Tensor([128, 80, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 0, 89],"float32"), Tensor([80, 0, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 0, 89],"float32"), Tensor([80, 80, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 0],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=128, stride=list[1,], dilation=list[128,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 0],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=16, stride=list[1,], dilation=list[16,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 0],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=2, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 0],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=256, stride=list[1,], dilation=list[256,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 0],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=32, stride=list[1,], dilation=list[32,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 0],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=4, stride=list[1,], dilation=list[4,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 0],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=512, stride=list[1,], dilation=list[512,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 0],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=64, stride=list[1,], dilation=list[64,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 0],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=8, stride=list[1,], dilation=list[8,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([0, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=128, stride=list[1,], dilation=list[128,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([0, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=16, stride=list[1,], dilation=list[16,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([0, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=2, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([0, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=256, stride=list[1,], dilation=list[256,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([0, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=32, stride=list[1,], dilation=list[32,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([0, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=4, stride=list[1,], dilation=list[4,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([0, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=512, stride=list[1,], dilation=list[512,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([0, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=64, stride=list[1,], dilation=list[64,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([0, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=8, stride=list[1,], dilation=list[8,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 0, 3],"float32"), bias=Tensor([128],"float32"), padding=128, stride=list[1,], dilation=list[128,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 0, 3],"float32"), bias=Tensor([128],"float32"), padding=16, stride=list[1,], dilation=list[16,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 0, 3],"float32"), bias=Tensor([128],"float32"), padding=2, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 0, 3],"float32"), bias=Tensor([128],"float32"), padding=256, stride=list[1,], dilation=list[256,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 0, 3],"float32"), bias=Tensor([128],"float32"), padding=32, stride=list[1,], dilation=list[32,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 0, 3],"float32"), bias=Tensor([128],"float32"), padding=4, stride=list[1,], dilation=list[4,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 0, 3],"float32"), bias=Tensor([128],"float32"), padding=512, stride=list[1,], dilation=list[512,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 0, 3],"float32"), bias=Tensor([128],"float32"), padding=64, stride=list[1,], dilation=list[64,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 0, 3],"float32"), bias=Tensor([128],"float32"), padding=8, stride=list[1,], dilation=list[8,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 0],"float32"), bias=Tensor([128],"float32"), padding=128, stride=list[1,], dilation=list[128,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 0],"float32"), bias=Tensor([128],"float32"), padding=16, stride=list[1,], dilation=list[16,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 0],"float32"), bias=Tensor([128],"float32"), padding=2, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 0],"float32"), bias=Tensor([128],"float32"), padding=256, stride=list[1,], dilation=list[256,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 0],"float32"), bias=Tensor([128],"float32"), padding=32, stride=list[1,], dilation=list[32,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 0],"float32"), bias=Tensor([128],"float32"), padding=4, stride=list[1,], dilation=list[4,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 0],"float32"), bias=Tensor([128],"float32"), padding=512, stride=list[1,], dilation=list[512,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 0],"float32"), bias=Tensor([128],"float32"), padding=64, stride=list[1,], dilation=list[64,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 0],"float32"), bias=Tensor([128],"float32"), padding=8, stride=list[1,], dilation=list[8,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([0],"float32"), padding=128, stride=list[1,], dilation=list[128,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([0],"float32"), padding=16, stride=list[1,], dilation=list[16,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([0],"float32"), padding=2, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([0],"float32"), padding=256, stride=list[1,], dilation=list[256,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([0],"float32"), padding=32, stride=list[1,], dilation=list[32,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([0],"float32"), padding=4, stride=list[1,], dilation=list[4,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([0],"float32"), padding=512, stride=list[1,], dilation=list[512,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([0],"float32"), padding=64, stride=list[1,], dilation=list[64,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([0],"float32"), padding=8, stride=list[1,], dilation=list[8,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 0],"float32"), Tensor([128, 80, 0],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 0],"float32"), Tensor([128, 80, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 0],"float32"), Tensor([80, 80, 0],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 0],"float32"), Tensor([80, 80, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 25500],"float32"), Tensor([0, 80, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 25500],"float32"), Tensor([128, 0, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 25500],"float32"), Tensor([128, 80, 0],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 89],"float32"), Tensor([0, 80, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 89],"float32"), Tensor([80, 0, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 89],"float32"), Tensor([80, 80, 0],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 0, 3],"float32"), Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 0, 3],"float64"), Tensor([2, 3, 3],"float64"), bias=Tensor([2],"float64"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 0, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 0, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 0, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 0, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 0, 4],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 0, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 0, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 0, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 0, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 0, 4],"float64"), Tensor([6, 1, 3],"float64"), bias=Tensor([6],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 0],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 0],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 0],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 0],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 0],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 0],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 0],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 0],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 0],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 0],"float64"), Tensor([6, 1, 3],"float64"), bias=Tensor([6],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([0, 1, 3],"float32"), bias=Tensor([6],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([0, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([0, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([0, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([0, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 0, 3],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 0, 3],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 0, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 0, 3],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 0],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 0],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 0],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 0],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([0],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([0],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([0],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([0],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([6, 0, 3],"float32"), bias=Tensor([6],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([6, 1, 0],"float32"), bias=Tensor([6],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([0],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([0, 1, 3],"float64"), bias=Tensor([6],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([0, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([0, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([0, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([0, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 0, 3],"float64"), bias=Tensor([1],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 0, 3],"float64"), bias=Tensor([1],"float64"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 0, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 0, 3],"float64"), bias=Tensor([1],"float64"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 0],"float64"), bias=Tensor([1],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 0],"float64"), bias=Tensor([1],"float64"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 0],"float64"), bias=Tensor([1],"float64"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 0],"float64"), bias=Tensor([1],"float64"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([0],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([0],"float64"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([0],"float64"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([0],"float64"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([6, 0, 3],"float64"), bias=Tensor([6],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([6, 1, 0],"float64"), bias=Tensor([6],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([6, 1, 3],"float64"), bias=Tensor([0],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 4, 0],"float32"), Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 0],"float64"), Tensor([2, 3, 3],"float64"), bias=Tensor([2],"float64"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 3],"float32"), Tensor([0, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 3],"float32"), Tensor([2, 0, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 3],"float32"), Tensor([2, 3, 0],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 3],"float32"), Tensor([2, 3, 3],"float32"), bias=Tensor([0],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 3],"float64"), Tensor([0, 3, 3],"float64"), bias=Tensor([2],"float64"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 3],"float64"), Tensor([2, 0, 3],"float64"), bias=Tensor([2],"float64"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 3],"float64"), Tensor([2, 3, 0],"float64"), bias=Tensor([2],"float64"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 3],"float64"), Tensor([2, 3, 3],"float64"), bias=Tensor([0],"float64"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 0, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 0, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 0, 16],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 0, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 0, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 0, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 0, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 0, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 0, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 0, 3],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 0, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 0, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 0],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 0],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 0],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 3],"float32"), Tensor([0, 1, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 3],"float32"), Tensor([6, 0, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 3],"float32"), Tensor([6, 1, 0],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 3],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([0],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([0, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([0, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 0, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 0, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 6, 0],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 6, 0],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([0],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([0],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 6, 0],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 0],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 0],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 0],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 0],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 0],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 0],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 0],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 0],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([0, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([0, 6, 3],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([0, 6, 3],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([0, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([0, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([0, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([0, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([0, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([0, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 0, 3],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 0, 3],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 6, 0],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 6, 0],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([0],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([0],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 0, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 0, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 0, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 0, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 0, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 0, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 0, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 3, 0],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([0],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 0],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 0],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 0],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 0],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 0],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 0],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([0],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([0],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([0],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([0],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([0],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([0],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([52, 0, 32],"float32"), Tensor([16, 0, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 0, 32],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 0, 32],"float32"), Tensor([32, 0, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 0, 32],"float32"), Tensor([32, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 0],"float32"), Tensor([16, 32, 0],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 0],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 0],"float32"), Tensor([32, 1, 0],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 0],"float32"), Tensor([32, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 32],"float32"), Tensor([0, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 32],"float32"), Tensor([0, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 32],"float32"), Tensor([16, 0, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 32],"float32"), Tensor([16, 32, 0],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 32],"float32"), Tensor([32, 0, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 32],"float32"), Tensor([32, 1, 0],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([8, 0, 100],"float16"), Tensor([256, 64, 3],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 0, 100],"float32"), Tensor([256, 64, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 0],"float16"), Tensor([256, 64, 3],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 0],"float32"), Tensor([256, 64, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float16"), Tensor([0, 64, 3],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float16"), Tensor([256, 0, 3],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float16"), Tensor([256, 64, 0],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float16"), Tensor([256, 64, 3],"float16"), bias=Tensor([0],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float32"), Tensor([0, 64, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float32"), Tensor([256, 0, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float32"), Tensor([256, 64, 0],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float32"), Tensor([256, 64, 3],"float32"), bias=Tensor([0],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(x=Tensor([0, 3, 4],"float32"), weight=Tensor([1, 3, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([0, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([0, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([0, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([0, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([0, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([0, 3, 4],"float32"), weight=Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([0, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([0, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([0, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([0, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([0, 3, 4],"float64"), weight=Tensor([6, 1, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([0, 4, 3],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([0, 4, 3],"float64"), weight=Tensor([2, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 0, 3],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 0, 3],"float64"), weight=Tensor([2, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 0, 4],"float32"), weight=Tensor([1, 3, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 0, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 0, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 0, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 0, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 0, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 0, 4],"float32"), weight=Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 0, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 0, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 0, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 0, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 0, 4],"float64"), weight=Tensor([6, 1, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 0],"float32"), weight=Tensor([1, 3, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 0],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 0],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 0],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 0],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 0],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 0],"float32"), weight=Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 0],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 0],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 0],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 0],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 0],"float64"), weight=Tensor([6, 1, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([0, 1, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([0, 3, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([0, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([0, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([0, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([0, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([0, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 0, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 0],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 0],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 0],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 0],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 0],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 2],"float32"), bias=Tensor([0],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([6, 0, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([6, 1, 0],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([6, 1, 3],"float32"), bias=Tensor([0],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([0, 1, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([0, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([0, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([0, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([0, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 0],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 0],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 0],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 0],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([0],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([0],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([0],"float64"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([0],"float64"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([6, 0, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([6, 1, 0],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([6, 1, 3],"float64"), bias=Tensor([0],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 0],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 0],"float64"), weight=Tensor([2, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 3],"float32"), weight=Tensor([0, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 3],"float32"), weight=Tensor([2, 0, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 3],"float32"), weight=Tensor([2, 3, 0],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 3],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 3],"float64"), weight=Tensor([0, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 3],"float64"), weight=Tensor([2, 0, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 3],"float64"), weight=Tensor([2, 3, 0],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 3],"float64"), weight=Tensor([2, 3, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 128, 112],"float32"), Tensor([128, 64, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 2, 3],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 2, 3],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 2, 3],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 2, 3],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 256, 28],"float32"), Tensor([256, 128, 8],"float32"), bias=Tensor([128],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 3, 16],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([6],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 3, 2],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([2],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 3, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 3, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 3, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 3, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 3, 2],"float64"), Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 6, 16],"float32"), Tensor([6, 4, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 6, 16],"float32"), Tensor([6, 8, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([0, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 0, 112],"float32"), Tensor([128, 64, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 0, 28],"float32"), Tensor([256, 128, 8],"float32"), bias=Tensor([128],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 128, 0],"float32"), Tensor([128, 64, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 128, 112],"float32"), Tensor([0, 64, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 128, 112],"float32"), Tensor([128, 0, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 128, 112],"float32"), Tensor([128, 64, 0],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 128, 112],"float32"), Tensor([128, 64, 8],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 256, 0],"float32"), Tensor([256, 128, 8],"float32"), bias=Tensor([128],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 256, 28],"float32"), Tensor([0, 128, 8],"float32"), bias=Tensor([128],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 256, 28],"float32"), Tensor([256, 0, 8],"float32"), bias=Tensor([128],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 256, 28],"float32"), Tensor([256, 128, 0],"float32"), bias=Tensor([128],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 256, 28],"float32"), Tensor([256, 128, 8],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 0, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 0, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 0, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 0, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 0, 2],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([2],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 0, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 0, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 0, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 0, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 0, 2],"float64"), Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 0, 3],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 0, 3],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 0, 3],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 0, 3],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 0],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 0],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 0],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 0],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([0, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([0, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([3, 0, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([3, 0, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([3, 1, 0],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([3, 1, 0],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([0, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([0, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([3, 0, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([3, 0, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([3, 1, 0],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([3, 1, 0],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 0],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 0],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 0],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 0],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 0],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([2],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 0],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 0],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 0],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 0],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 0],"float64"), Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([0, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([0, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([0, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([0, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([0, 2, 3],"float32"), bias=Tensor([2],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 0, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 0, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 0, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 0, 3],"float32"), bias=Tensor([2],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 0, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 0],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 0],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 0],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 0],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 2, 0],"float32"), bias=Tensor([2],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([0, 1, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([0, 1, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([0, 1, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([0, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([0, 2, 3],"float64"), bias=Tensor([2],"float64"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 0, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 0, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 0, 3],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 0, 3],"float64"), bias=Tensor([2],"float64"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 0, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 1, 0],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 1, 0],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 1, 0],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 1, 0],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 2, 0],"float64"), bias=Tensor([2],"float64"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 2, 3],"float64"), bias=Tensor([0],"float64"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 0, 16],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([6],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 0, 16],"float32"), Tensor([6, 4, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 0, 16],"float32"), Tensor([6, 8, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 0, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 0, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 0, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 0, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 0, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 0, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 0, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 0, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 0],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 0],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 0],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([0, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([0, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([0, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 0, 3],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 0, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 0, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 8, 0],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 8, 0],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 8, 0],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([0],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 3, 0],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([6],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 3, 16],"float32"), Tensor([0, 2, 3],"float32"), bias=Tensor([6],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 3, 16],"float32"), Tensor([3, 0, 3],"float32"), bias=Tensor([6],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 3, 16],"float32"), Tensor([3, 2, 0],"float32"), bias=Tensor([6],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 3, 16],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 0],"float32"), Tensor([6, 4, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 0],"float32"), Tensor([6, 8, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 0],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 0],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 0],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 0],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 0],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([0, 4, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([0, 8, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([0, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([0, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([0, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([0, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([0, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 0, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 0, 3],"float32"), bias=Tensor([8],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 0, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 0, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 0, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 0, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 0, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 4, 0],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 4, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 0],"float32"), bias=Tensor([8],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 0],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 0],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 0],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 0],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 0],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 1],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([0],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([0],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 2, 3],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 2, 3],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=3, dilation=1, data_format="NLC", output_padding=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 2, 3],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 2, 3],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], groups=3, dilation=1, data_format="NLC", output_padding=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 2, 3],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 2, 3],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), stride=2, padding=list[1,], output_padding=1, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float32"), weight=Tensor([3, 2, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], output_padding=0, groups=1, dilation=2, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 2],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 5],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding="SaME", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 5],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding="vALiD", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 8],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[4,4,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 3, 8],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[list[0,0,],list[0,0,],list[3,4,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([0, 8, 3],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[list[0,0,],list[3,4,],list[0,0,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float32"), weight=Tensor([3, 2, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], output_padding=0, groups=1, dilation=2, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 2],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 3],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 3],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=3, dilation=1, data_format="NLC", output_padding=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 3],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 3],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], groups=3, dilation=1, data_format="NLC", output_padding=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 3],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 3],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), stride=2, padding=list[1,], output_padding=1, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 3],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[list[0,0,],list[3,4,],list[0,0,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 5],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding="SaME", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 5],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding="vALiD", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 8],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[4,4,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 0, 8],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[list[0,0,],list[0,0,],list[3,4,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 0],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 0],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=3, dilation=1, data_format="NLC", output_padding=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 0],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 0],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], groups=3, dilation=1, data_format="NLC", output_padding=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 0],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 0],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), stride=2, padding=list[1,], output_padding=1, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float32"), weight=Tensor([0, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float32"), weight=Tensor([0, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=3, dilation=1, data_format="NLC", output_padding=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float32"), weight=Tensor([3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float32"), weight=Tensor([3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=3, dilation=1, data_format="NLC", output_padding=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float32"), weight=Tensor([3, 1, 0],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float32"), weight=Tensor([3, 1, 0],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=3, dilation=1, data_format="NLC", output_padding=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([0],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([0],"float32"), stride=2, padding=list[1,], groups=3, dilation=1, data_format="NLC", output_padding=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([0, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([0, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], groups=3, dilation=1, data_format="NLC", output_padding=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([0, 1, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([0, 1, 3],"float64"), bias=Tensor([3],"float64"), stride=2, padding=list[1,], output_padding=1, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], groups=3, dilation=1, data_format="NLC", output_padding=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([3],"float64"), stride=2, padding=list[1,], output_padding=1, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([3, 1, 0],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([3, 1, 0],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], groups=3, dilation=1, data_format="NLC", output_padding=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([3, 1, 0],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([3, 1, 0],"float64"), bias=Tensor([3],"float64"), stride=2, padding=list[1,], output_padding=1, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), stride=2, padding=list[1,], groups=3, dilation=1, data_format="NLC", output_padding=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), stride=2, padding=list[1,], output_padding=1, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float32"), weight=Tensor([3, 2, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], output_padding=0, groups=1, dilation=2, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding="SaME", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding="vALiD", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[4,4,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 0],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[list[0,0,],list[0,0,],list[3,4,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([0, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([0, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([0, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([0, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([0, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([0, 2, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 1, 0],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 1, 0],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 1, 0],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 1, 0],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 1, 0],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([0],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([0],"float32"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([0],"float32"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([0],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([0],"float32"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 2, 0],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 2, 3],"float32"), bias=Tensor([0],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([0, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([0, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([0, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([0, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([0, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], output_padding=0, groups=1, dilation=2, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([0, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([0, 1, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([0, 1, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([0, 2, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([0, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], output_padding=0, groups=1, dilation=2, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 0],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 0],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 0],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 0],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 0],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,], output_padding=0, groups=1, dilation=2, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 0],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 0],"float64"), bias=Tensor([1],"float64"), stride=2, padding=list[1,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 0],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=list[1,], output_padding=0, groups=1, dilation=2, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 1, 3],"float64"), bias=Tensor([0],"float64"), stride=2, padding=list[1,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 2, 0],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 2, 0],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=0, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 5],"float64"), weight=Tensor([0, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding="SaME", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 5],"float64"), weight=Tensor([0, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding="vALiD", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 5],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding="SaME", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 5],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding="vALiD", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 5],"float64"), weight=Tensor([3, 2, 0],"float64"), bias=Tensor([2],"float64"), stride=1, padding="SaME", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 5],"float64"), weight=Tensor([3, 2, 0],"float64"), bias=Tensor([2],"float64"), stride=1, padding="vALiD", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 5],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding="SaME", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 5],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding="vALiD", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 8],"float64"), weight=Tensor([0, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[4,4,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 8],"float64"), weight=Tensor([0, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[list[0,0,],list[0,0,],list[3,4,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 8],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[4,4,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 8],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[list[0,0,],list[0,0,],list[3,4,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 8],"float64"), weight=Tensor([3, 2, 0],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[4,4,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 8],"float64"), weight=Tensor([3, 2, 0],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[list[0,0,],list[0,0,],list[3,4,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 8],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=list[4,4,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 8],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=list[list[0,0,],list[0,0,],list[3,4,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 8, 0],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[list[0,0,],list[3,4,],list[0,0,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 8, 3],"float64"), weight=Tensor([0, 2, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[list[0,0,],list[3,4,],list[0,0,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 8, 3],"float64"), weight=Tensor([3, 0, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[list[0,0,],list[3,4,],list[0,0,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 8, 3],"float64"), weight=Tensor([3, 2, 0],"float64"), bias=Tensor([2],"float64"), stride=1, padding=list[list[0,0,],list[3,4,],list[0,0,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 8, 3],"float64"), weight=Tensor([3, 2, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=list[list[0,0,],list[3,4,],list[0,0,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NLC", )
paddle.nn.functional.conv2d(Tensor([0, 1, 101, 165],"float32"), Tensor([0, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([0, 1, 101, 165],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([0, 1, 101, 261],"float32"), Tensor([0, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([0, 1, 101, 261],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([0, 1, 131, 131],"float32"), Tensor([0, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([0, 1, 131, 131],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([0, 1, 258, 258],"float32"), Tensor([0, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([0, 1, 258, 258],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([0, 1, 28, 28],"float32"), Tensor([0, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 1, 28, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 1, 32, 32],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 1024, 10, 26],"float32"), Tensor([0, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([0, 1024, 10, 26],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([0, 1024, 12, 32],"float32"), Tensor([0, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([0, 1024, 12, 32],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([0, 1024, 128, 128],"float32"), Tensor([0, 256, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([0, 1024, 128, 128],"float32"), Tensor([0, 256, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([0, 1024, 128, 128],"float32"), Tensor([1024, 256, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([0, 1024, 128, 128],"float32"), Tensor([12, 256, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([0, 1024, 256, 256],"float32"), Tensor([0, 128, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([0, 1024, 256, 256],"float32"), Tensor([0, 128, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([0, 1024, 256, 256],"float32"), Tensor([1024, 128, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([0, 1024, 256, 256],"float32"), Tensor([24, 128, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([0, 128, 12, 20],"float32"), Tensor([0, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([0, 128, 12, 20],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([0, 128, 12, 32],"float32"), Tensor([0, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([0, 128, 12, 32],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([0, 128, 255, 255],"float32"), Tensor([0, 128, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([0, 128, 255, 255],"float32"), Tensor([256, 128, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([0, 128, 256, 256],"float32"), Tensor([0, 128, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([0, 128, 256, 256],"float32"), Tensor([0, 128, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([0, 128, 256, 256],"float32"), Tensor([0, 128, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([0, 128, 256, 256],"float32"), Tensor([128, 128, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([0, 128, 256, 256],"float32"), Tensor([128, 128, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([0, 128, 256, 256],"float32"), Tensor([3, 128, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([0, 128, 257, 257],"float32"), Tensor([0, 128, 3, 3],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([0, 128, 257, 257],"float32"), Tensor([256, 128, 3, 3],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([0, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([0, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([0, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([0, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([0, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([0, 16, 2, 2],"float32"), Tensor([0, 16, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 16, 2, 2],"float32"), Tensor([16, 16, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 192, 4, 4],"float32"), Tensor([0, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 192, 4, 4],"float32"), Tensor([0, 192, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 192, 4, 4],"float32"), Tensor([384, 192, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 192, 4, 4],"float32"), Tensor([48, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 192, 4, 4],"float32"), Tensor([96, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 2048, 128, 128],"float32"), Tensor([0, 256, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([0, 2048, 128, 128],"float32"), Tensor([0, 256, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([0, 2048, 128, 128],"float32"), Tensor([2048, 256, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([0, 2048, 128, 128],"float32"), Tensor([24, 256, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([0, 2048, 16, 16],"float32"), Tensor([0, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([0, 2048, 16, 16],"float32"), Tensor([0, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([0, 2048, 16, 16],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([0, 2048, 16, 16],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([0, 24, 8, 8],"float32"), Tensor([0, 24, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 24, 8, 8],"float32"), Tensor([24, 24, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 256, 128, 128],"float32"), Tensor([0, 256, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([0, 256, 128, 128],"float32"), Tensor([0, 256, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([0, 256, 128, 128],"float32"), Tensor([0, 256, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([0, 256, 128, 128],"float32"), Tensor([256, 256, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([0, 256, 128, 128],"float32"), Tensor([256, 256, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([0, 256, 128, 128],"float32"), Tensor([3, 256, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([0, 3, 16, 16],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 3, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 3, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 3, 256, 256],"float32"), Tensor([0, 3, 1, 1],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([0, 3, 256, 256],"float32"), Tensor([128, 3, 1, 1],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([0, 3, 260, 260],"float32"), weight=Tensor([0, 1, 5, 5],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([0, 3, 260, 260],"float32"), weight=Tensor([3, 1, 5, 5],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([0, 3, 268, 268],"float32"), weight=Tensor([0, 1, 13, 13],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([0, 3, 268, 268],"float32"), weight=Tensor([3, 1, 13, 13],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([0, 3, 32, 32],"float32"), Tensor([0, 3, 7, 7],"float32"), None, list[2,2,], 3, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 3, 32, 32],"float32"), Tensor([64, 3, 7, 7],"float32"), None, list[2,2,], 3, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 3, 37, 37],"float32"), Tensor([0, 3, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 3, 37, 37],"float32"), Tensor([64, 3, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 48, 4, 4],"float32"), Tensor([0, 48, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 48, 4, 4],"float32"), Tensor([48, 48, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 6, 16, 16],"float32"), Tensor([0, 1, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 6, 16, 16],"float32"), Tensor([12, 1, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 6, 16, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 6, 16, 16],"float32"), Tensor([8, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 8, 4, 4],"float32"), Tensor([0, 8, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([0, 8, 4, 4],"float32"), Tensor([8, 8, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 0, 10, 26],"float32"), Tensor([256, 0, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 10, 26],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 101, 165],"float32"), Tensor([64, 0, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 101, 165],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 101, 261],"float32"), Tensor([64, 0, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 101, 261],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 12, 20],"float32"), Tensor([128, 0, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 12, 20],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 12, 32],"float32"), Tensor([128, 0, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 12, 32],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 12, 32],"float32"), Tensor([256, 0, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 12, 32],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 128, 128],"float32"), Tensor([1024, 0, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 0, 128, 128],"float32"), Tensor([1024, 256, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 0, 128, 128],"float32"), Tensor([12, 0, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 0, 128, 128],"float32"), Tensor([12, 256, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 0, 128, 128],"float32"), Tensor([2048, 0, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 0, 128, 128],"float32"), Tensor([2048, 256, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 0, 128, 128],"float32"), Tensor([24, 0, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 0, 128, 128],"float32"), Tensor([24, 256, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 0, 128, 128],"float32"), Tensor([256, 0, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 128, 128],"float32"), Tensor([256, 256, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 128, 128],"float32"), Tensor([3, 0, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 128, 128],"float32"), Tensor([3, 256, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 16, 16],"float32"), Tensor([12, 0, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 0, 16, 16],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 0, 16, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 0, 16, 16],"float32"), Tensor([2048, 0, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 0, 16, 16],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 0, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 0, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 0, 256, 256],"float32"), Tensor([1024, 0, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 0, 256, 256],"float32"), Tensor([1024, 128, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 0, 256, 256],"float32"), Tensor([128, 0, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 256, 256],"float32"), Tensor([128, 128, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 256, 256],"float32"), Tensor([24, 0, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 0, 256, 256],"float32"), Tensor([24, 128, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 0, 256, 256],"float32"), Tensor([3, 0, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 256, 256],"float32"), Tensor([3, 128, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 0, 32, 32],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1, 0, 165],"float32"), Tensor([64, 1, 0, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 0, 165],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 0, 261],"float32"), Tensor([64, 1, 0, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 0, 261],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 0, 32],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 0],"float32"), Tensor([64, 1, 7, 0],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 0],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 165],"float32"), Tensor([0, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 165],"float32"), Tensor([64, 0, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 165],"float32"), Tensor([64, 1, 0, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 165],"float32"), Tensor([64, 1, 7, 0],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 261],"float32"), Tensor([0, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 261],"float32"), Tensor([64, 0, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 261],"float32"), Tensor([64, 1, 0, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 261],"float32"), Tensor([64, 1, 7, 0],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 0],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 32],"float32"), Tensor([0, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 32],"float32"), Tensor([6, 0, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 32],"float32"), Tensor([6, 1, 0, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 32],"float32"), Tensor([6, 1, 3, 0],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 32],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([0],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1024, 0, 128],"float32"), Tensor([1024, 256, 0, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 0, 128],"float32"), Tensor([1024, 256, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 0, 128],"float32"), Tensor([12, 256, 0, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 0, 128],"float32"), Tensor([12, 256, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 0, 256],"float32"), Tensor([1024, 128, 0, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 0, 256],"float32"), Tensor([1024, 128, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 0, 256],"float32"), Tensor([24, 128, 0, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 0, 256],"float32"), Tensor([24, 128, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 0, 26],"float32"), Tensor([256, 1024, 0, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 0, 26],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 0, 32],"float32"), Tensor([256, 1024, 0, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 0, 32],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 0],"float32"), Tensor([256, 1024, 1, 0],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 0],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 26],"float32"), Tensor([0, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 26],"float32"), Tensor([256, 0, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 26],"float32"), Tensor([256, 1024, 0, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 26],"float32"), Tensor([256, 1024, 1, 0],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 12, 0],"float32"), Tensor([256, 1024, 1, 0],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 12, 0],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 12, 32],"float32"), Tensor([0, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 12, 32],"float32"), Tensor([256, 0, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 12, 32],"float32"), Tensor([256, 1024, 0, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 12, 32],"float32"), Tensor([256, 1024, 1, 0],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 0],"float32"), Tensor([1024, 256, 3, 0],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 0],"float32"), Tensor([1024, 256, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 0],"float32"), Tensor([12, 256, 1, 0],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 0],"float32"), Tensor([12, 256, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 128],"float32"), Tensor([0, 256, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 128],"float32"), Tensor([0, 256, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 128],"float32"), Tensor([1024, 0, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 128],"float32"), Tensor([1024, 256, 0, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 128],"float32"), Tensor([1024, 256, 3, 0],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 128],"float32"), Tensor([12, 0, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 128],"float32"), Tensor([12, 256, 0, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 128],"float32"), Tensor([12, 256, 1, 0],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 0],"float32"), Tensor([1024, 128, 3, 0],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 0],"float32"), Tensor([1024, 128, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 0],"float32"), Tensor([24, 128, 1, 0],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 0],"float32"), Tensor([24, 128, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([0, 128, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([0, 128, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([1024, 0, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([1024, 128, 0, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([1024, 128, 3, 0],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([24, 0, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([24, 128, 0, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([24, 128, 1, 0],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 128, 0, 20],"float32"), Tensor([128, 128, 0, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 0, 20],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 0, 256],"float32"), Tensor([128, 128, 0, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 0, 256],"float32"), Tensor([128, 128, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 0, 256],"float32"), Tensor([3, 128, 0, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 0, 256],"float32"), Tensor([3, 128, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 0, 32],"float32"), Tensor([128, 128, 0, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 0, 32],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 0],"float32"), Tensor([128, 128, 3, 0],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 0],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 20],"float32"), Tensor([0, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 20],"float32"), Tensor([128, 0, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 20],"float32"), Tensor([128, 128, 0, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 20],"float32"), Tensor([128, 128, 3, 0],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 32],"float32"), Tensor([0, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 32],"float32"), Tensor([128, 0, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 32],"float32"), Tensor([128, 128, 0, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 32],"float32"), Tensor([128, 128, 3, 0],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 0],"float32"), Tensor([128, 128, 3, 0],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 0],"float32"), Tensor([128, 128, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 0],"float32"), Tensor([3, 128, 1, 0],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 0],"float32"), Tensor([3, 128, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 256],"float32"), Tensor([0, 128, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 256],"float32"), Tensor([0, 128, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 256],"float32"), Tensor([128, 0, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 256],"float32"), Tensor([128, 128, 0, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 256],"float32"), Tensor([128, 128, 3, 0],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 256],"float32"), Tensor([3, 0, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 256],"float32"), Tensor([3, 128, 0, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 256],"float32"), Tensor([3, 128, 1, 0],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 0, 128],"float32"), Tensor([2048, 256, 0, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 0, 128],"float32"), Tensor([2048, 256, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 0, 128],"float32"), Tensor([24, 256, 0, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 0, 128],"float32"), Tensor([24, 256, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 0, 16],"float32"), Tensor([12, 512, 0, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 0, 16],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 0, 16],"float32"), Tensor([2048, 512, 0, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 0, 16],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 0],"float32"), Tensor([2048, 256, 3, 0],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 0],"float32"), Tensor([2048, 256, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 0],"float32"), Tensor([24, 256, 1, 0],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 0],"float32"), Tensor([24, 256, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 128],"float32"), Tensor([0, 256, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 128],"float32"), Tensor([0, 256, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 128],"float32"), Tensor([2048, 0, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 128],"float32"), Tensor([2048, 256, 0, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 128],"float32"), Tensor([2048, 256, 3, 0],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 128],"float32"), Tensor([24, 0, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 128],"float32"), Tensor([24, 256, 0, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 128],"float32"), Tensor([24, 256, 1, 0],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 0],"float32"), Tensor([12, 512, 1, 0],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 0],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 0],"float32"), Tensor([2048, 512, 3, 0],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 0],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([0, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([0, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([12, 0, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([12, 512, 0, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([12, 512, 1, 0],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([2048, 0, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([2048, 512, 0, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([2048, 512, 3, 0],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 256, 0, 128],"float32"), Tensor([256, 256, 0, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 0, 128],"float32"), Tensor([256, 256, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 0, 128],"float32"), Tensor([3, 256, 0, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 0, 128],"float32"), Tensor([3, 256, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 0],"float32"), Tensor([256, 256, 3, 0],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 0],"float32"), Tensor([256, 256, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 0],"float32"), Tensor([3, 256, 1, 0],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 0],"float32"), Tensor([3, 256, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 128],"float32"), Tensor([0, 256, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 128],"float32"), Tensor([0, 256, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 128],"float32"), Tensor([256, 0, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 128],"float32"), Tensor([256, 256, 0, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 128],"float32"), Tensor([256, 256, 3, 0],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 128],"float32"), Tensor([3, 0, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 128],"float32"), Tensor([3, 256, 0, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 128],"float32"), Tensor([3, 256, 1, 0],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 3, 0, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 0, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 0],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 0],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([0, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([0, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 0, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 0, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 0, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 0, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 3, 0],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 3, 0],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([0],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([0],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 0, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 0],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([0, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([16, 0, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([16, 6, 0, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([16, 6, 5, 0],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([0],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1024, 0, 131, 131],"float32"), Tensor([1, 0, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 0, 131, 131],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 0, 258, 258],"float32"), Tensor([1, 0, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 0, 258, 258],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 0, 131],"float32"), Tensor([1, 1, 0, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 0, 131],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 0, 258],"float32"), Tensor([1, 1, 0, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 0, 258],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 131, 0],"float32"), Tensor([1, 1, 4, 0],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 131, 0],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 131, 131],"float32"), Tensor([0, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 131, 131],"float32"), Tensor([1, 0, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 131, 131],"float32"), Tensor([1, 1, 0, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 131, 131],"float32"), Tensor([1, 1, 4, 0],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 258, 0],"float32"), Tensor([1, 1, 4, 0],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 258, 0],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 258, 258],"float32"), Tensor([0, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 258, 258],"float32"), Tensor([1, 0, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 258, 258],"float32"), Tensor([1, 1, 0, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 258, 258],"float32"), Tensor([1, 1, 4, 0],"float32"), )
paddle.nn.functional.conv2d(Tensor([16, 0, 260, 260],"float32"), weight=Tensor([3, 0, 5, 5],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 0, 260, 260],"float32"), weight=Tensor([3, 1, 5, 5],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 0, 268, 268],"float32"), weight=Tensor([3, 0, 13, 13],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 0, 268, 268],"float32"), weight=Tensor([3, 1, 13, 13],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 0, 260],"float32"), weight=Tensor([3, 1, 0, 5],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 0, 260],"float32"), weight=Tensor([3, 1, 5, 5],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 0, 268],"float32"), weight=Tensor([3, 1, 0, 13],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 0, 268],"float32"), weight=Tensor([3, 1, 13, 13],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 260, 0],"float32"), weight=Tensor([3, 1, 5, 0],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 260, 0],"float32"), weight=Tensor([3, 1, 5, 5],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 260, 260],"float32"), weight=Tensor([0, 1, 5, 5],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 260, 260],"float32"), weight=Tensor([3, 0, 5, 5],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 260, 260],"float32"), weight=Tensor([3, 1, 0, 5],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 260, 260],"float32"), weight=Tensor([3, 1, 5, 0],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 268, 0],"float32"), weight=Tensor([3, 1, 13, 0],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 268, 0],"float32"), weight=Tensor([3, 1, 13, 13],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 268, 268],"float32"), weight=Tensor([0, 1, 13, 13],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 268, 268],"float32"), weight=Tensor([3, 0, 13, 13],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 268, 268],"float32"), weight=Tensor([3, 1, 0, 13],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 268, 268],"float32"), weight=Tensor([3, 1, 13, 0],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([2, 0, 37, 37],"float32"), Tensor([64, 0, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 0, 37, 37],"float32"), Tensor([64, 3, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 0, 4, 4],"float32"), Tensor([384, 0, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 0, 4, 4],"float32"), Tensor([384, 192, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 0, 4, 4],"float32"), Tensor([48, 0, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 0, 4, 4],"float32"), Tensor([48, 0, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 0, 4, 4],"float32"), Tensor([48, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 0, 4, 4],"float32"), Tensor([48, 48, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 0, 4, 4],"float32"), Tensor([96, 0, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 0, 4, 4],"float32"), Tensor([96, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 0, 8, 8],"float32"), Tensor([24, 0, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 0, 8, 8],"float32"), Tensor([24, 24, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 0, 4],"float32"), Tensor([384, 192, 0, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 0, 4],"float32"), Tensor([384, 192, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 0, 4],"float32"), Tensor([48, 192, 0, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 0, 4],"float32"), Tensor([48, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 0, 4],"float32"), Tensor([96, 192, 0, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 0, 4],"float32"), Tensor([96, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 0],"float32"), Tensor([384, 192, 1, 0],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 0],"float32"), Tensor([384, 192, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 0],"float32"), Tensor([48, 192, 1, 0],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 0],"float32"), Tensor([48, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 0],"float32"), Tensor([96, 192, 1, 0],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 0],"float32"), Tensor([96, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 4],"float32"), Tensor([0, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 4],"float32"), Tensor([0, 192, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 4],"float32"), Tensor([384, 0, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 4],"float32"), Tensor([384, 192, 0, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 4],"float32"), Tensor([384, 192, 1, 0],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 4],"float32"), Tensor([48, 0, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 4],"float32"), Tensor([48, 192, 0, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 4],"float32"), Tensor([48, 192, 1, 0],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 4],"float32"), Tensor([96, 0, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 4],"float32"), Tensor([96, 192, 0, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 192, 4, 4],"float32"), Tensor([96, 192, 1, 0],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 24, 0, 8],"float32"), Tensor([24, 24, 0, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 24, 0, 8],"float32"), Tensor([24, 24, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 24, 8, 0],"float32"), Tensor([24, 24, 3, 0],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 24, 8, 0],"float32"), Tensor([24, 24, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 24, 8, 8],"float32"), Tensor([0, 24, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 24, 8, 8],"float32"), Tensor([24, 0, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 24, 8, 8],"float32"), Tensor([24, 24, 0, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 24, 8, 8],"float32"), Tensor([24, 24, 3, 0],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 3, 0, 37],"float32"), Tensor([64, 3, 0, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 3, 0, 37],"float32"), Tensor([64, 3, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 3, 37, 0],"float32"), Tensor([64, 3, 7, 0],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 3, 37, 0],"float32"), Tensor([64, 3, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 3, 37, 37],"float32"), Tensor([0, 3, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 3, 37, 37],"float32"), Tensor([64, 0, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 3, 37, 37],"float32"), Tensor([64, 3, 0, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 3, 37, 37],"float32"), Tensor([64, 3, 7, 0],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 48, 0, 4],"float32"), Tensor([48, 48, 0, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 48, 0, 4],"float32"), Tensor([48, 48, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 48, 4, 0],"float32"), Tensor([48, 48, 3, 0],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 48, 4, 0],"float32"), Tensor([48, 48, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 48, 4, 4],"float32"), Tensor([0, 48, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 48, 4, 4],"float32"), Tensor([48, 0, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 48, 4, 4],"float32"), Tensor([48, 48, 0, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([2, 48, 4, 4],"float32"), Tensor([48, 48, 3, 0],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 0, 2, 2],"float32"), Tensor([16, 0, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 0, 2, 2],"float32"), Tensor([16, 16, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 0, 32, 32],"float32"), Tensor([64, 0, 7, 7],"float32"), None, list[2,2,], 3, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 0, 32, 32],"float32"), Tensor([64, 3, 7, 7],"float32"), None, list[2,2,], 3, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 0, 4, 4],"float32"), Tensor([8, 0, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 0, 4, 4],"float32"), Tensor([8, 8, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 16, 0, 2],"float32"), Tensor([16, 16, 0, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 16, 0, 2],"float32"), Tensor([16, 16, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 16, 2, 0],"float32"), Tensor([16, 16, 3, 0],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 16, 2, 0],"float32"), Tensor([16, 16, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 16, 2, 2],"float32"), Tensor([0, 16, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 16, 2, 2],"float32"), Tensor([16, 0, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 16, 2, 2],"float32"), Tensor([16, 16, 0, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 16, 2, 2],"float32"), Tensor([16, 16, 3, 0],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 3, 0, 32],"float32"), Tensor([64, 3, 0, 7],"float32"), None, list[2,2,], 3, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 3, 0, 32],"float32"), Tensor([64, 3, 7, 7],"float32"), None, list[2,2,], 3, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 3, 32, 0],"float32"), Tensor([64, 3, 7, 0],"float32"), None, list[2,2,], 3, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 3, 32, 0],"float32"), Tensor([64, 3, 7, 7],"float32"), None, list[2,2,], 3, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 3, 32, 32],"float32"), Tensor([0, 3, 7, 7],"float32"), None, list[2,2,], 3, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 3, 32, 32],"float32"), Tensor([64, 0, 7, 7],"float32"), None, list[2,2,], 3, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 3, 32, 32],"float32"), Tensor([64, 3, 0, 7],"float32"), None, list[2,2,], 3, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 3, 32, 32],"float32"), Tensor([64, 3, 7, 0],"float32"), None, list[2,2,], 3, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 8, 0, 4],"float32"), Tensor([8, 8, 0, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 8, 0, 4],"float32"), Tensor([8, 8, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 8, 4, 0],"float32"), Tensor([8, 8, 3, 0],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 8, 4, 0],"float32"), Tensor([8, 8, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 8, 4, 4],"float32"), Tensor([0, 8, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 8, 4, 4],"float32"), Tensor([8, 0, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 8, 4, 4],"float32"), Tensor([8, 8, 0, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 8, 4, 4],"float32"), Tensor([8, 8, 3, 0],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 0, 16, 16],"float32"), Tensor([12, 0, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 0, 16, 16],"float32"), Tensor([12, 1, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 0, 16, 16],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 0, 16, 16],"float32"), Tensor([8, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 0, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 0, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 0, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 0, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 0, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 0, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 0, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 0, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 0, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 0, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 0],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 0],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 0],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 0],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 0],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([0, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([0, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([0, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([0, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([0, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 0, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 0, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 0, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 0, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 0, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 0, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 0, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 0, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 0, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 0, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 0],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 0],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 0],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 0],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 0],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([0],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([0],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([0],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([0],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([0],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 3, 0, 16],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 3, 16, 0],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 3, 16, 16],"float32"), Tensor([0, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 3, 16, 16],"float32"), Tensor([5, 0, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 3, 16, 16],"float32"), Tensor([5, 3, 0, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 3, 16, 16],"float32"), Tensor([5, 3, 3, 0],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 3, 16, 16],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([0],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 0, 16],"float32"), Tensor([12, 1, 0, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 0, 16],"float32"), Tensor([12, 1, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 0, 16],"float32"), Tensor([8, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 0],"float32"), Tensor([12, 1, 3, 0],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 0],"float32"), Tensor([12, 1, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 0],"float32"), Tensor([8, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([0, 1, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([0, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([12, 0, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([12, 1, 0, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([12, 1, 3, 0],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([8, 0, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([8, 3, 0, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([8, 3, 3, 0],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([8, 3, 3, 3],"float32"), Tensor([0],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 0, 28, 28],"float32"), Tensor([6, 0, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 0, 28, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 0, 28],"float32"), Tensor([6, 1, 0, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 0, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 28, 0],"float32"), Tensor([6, 1, 3, 0],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 28, 0],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 28, 28],"float32"), Tensor([0, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 28, 28],"float32"), Tensor([6, 0, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 28, 28],"float32"), Tensor([6, 1, 0, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 28, 28],"float32"), Tensor([6, 1, 3, 0],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([8, 0, 128, 128],"float32"), Tensor([256, 0, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 0, 128, 128],"float32"), Tensor([256, 256, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 0, 255, 255],"float32"), Tensor([256, 0, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 0, 255, 255],"float32"), Tensor([256, 128, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 0, 256, 256],"float32"), Tensor([128, 0, 1, 1],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 0, 256, 256],"float32"), Tensor([128, 0, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 0, 256, 256],"float32"), Tensor([128, 128, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 0, 256, 256],"float32"), Tensor([128, 3, 1, 1],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 0, 257, 257],"float32"), Tensor([256, 0, 3, 3],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 0, 257, 257],"float32"), Tensor([256, 128, 3, 3],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 0, 255],"float32"), Tensor([256, 128, 0, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 0, 255],"float32"), Tensor([256, 128, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 0, 256],"float32"), Tensor([128, 128, 0, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 0, 256],"float32"), Tensor([128, 128, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 0, 257],"float32"), Tensor([256, 128, 0, 3],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 0, 257],"float32"), Tensor([256, 128, 3, 3],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 255, 0],"float32"), Tensor([256, 128, 1, 0],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 255, 0],"float32"), Tensor([256, 128, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 255, 255],"float32"), Tensor([0, 128, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 255, 255],"float32"), Tensor([256, 0, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 255, 255],"float32"), Tensor([256, 128, 0, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 255, 255],"float32"), Tensor([256, 128, 1, 0],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 256, 0],"float32"), Tensor([128, 128, 3, 0],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 256, 0],"float32"), Tensor([128, 128, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 256, 256],"float32"), Tensor([0, 128, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 256, 256],"float32"), Tensor([128, 0, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 256, 256],"float32"), Tensor([128, 128, 0, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 256, 256],"float32"), Tensor([128, 128, 3, 0],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 257, 0],"float32"), Tensor([256, 128, 3, 0],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 257, 0],"float32"), Tensor([256, 128, 3, 3],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 257, 257],"float32"), Tensor([0, 128, 3, 3],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 257, 257],"float32"), Tensor([256, 0, 3, 3],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 257, 257],"float32"), Tensor([256, 128, 0, 3],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 128, 257, 257],"float32"), Tensor([256, 128, 3, 0],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 256, 0, 128],"float32"), Tensor([256, 256, 0, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 256, 0, 128],"float32"), Tensor([256, 256, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 256, 128, 0],"float32"), Tensor([256, 256, 3, 0],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 256, 128, 0],"float32"), Tensor([256, 256, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 256, 128, 128],"float32"), Tensor([0, 256, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 256, 128, 128],"float32"), Tensor([256, 0, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 256, 128, 128],"float32"), Tensor([256, 256, 0, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 256, 128, 128],"float32"), Tensor([256, 256, 3, 0],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 3, 0, 256],"float32"), Tensor([128, 3, 0, 1],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 3, 0, 256],"float32"), Tensor([128, 3, 1, 1],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 3, 256, 0],"float32"), Tensor([128, 3, 1, 0],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 3, 256, 0],"float32"), Tensor([128, 3, 1, 1],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 3, 256, 256],"float32"), Tensor([0, 3, 1, 1],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 3, 256, 256],"float32"), Tensor([128, 0, 1, 1],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 3, 256, 256],"float32"), Tensor([128, 3, 0, 1],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 3, 256, 256],"float32"), Tensor([128, 3, 1, 0],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float32"), weight=Tensor([1, 3, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([0, 3, 4, 4],"float64"), weight=Tensor([6, 1, 3, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([0, 4, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([0, 4, 4, 3],"float64"), weight=Tensor([2, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 3],"float64"), weight=Tensor([2, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float32"), weight=Tensor([1, 3, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 0, 4, 4],"float64"), weight=Tensor([6, 1, 3, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float32"), weight=Tensor([1, 3, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 0, 4],"float64"), weight=Tensor([6, 1, 3, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float32"), weight=Tensor([1, 3, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 0],"float64"), weight=Tensor([6, 1, 3, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([0, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([0, 3, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([0, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([0, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([0, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([0, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([0, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([0, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([0, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([0, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 0, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 0, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 0, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 0, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 0, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 0, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 0, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 0, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 0, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 0, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 0, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 2, 0],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 2, 2],"float32"), bias=Tensor([0],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 0],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 0],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 0],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 0],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 0],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 0],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 0],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 0],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([6, 0, 3, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([6, 1, 0, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([6, 1, 3, 0],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([0, 1, 3, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([0, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([0, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([0, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([0, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([0, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([0, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([0, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 0, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 0, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 0, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 0, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 0, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 0, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 0, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 0, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 0],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 0],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 0],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 0],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 0],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 0],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 0],"float64"), bias=Tensor([1],"float64"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([0],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([0],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([0],"float64"), stride=list[2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([0],"float64"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([0],"float64"), stride=list[2,1,], padding=1, dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([0],"float64"), stride=list[2,1,], padding=list[1,2,], dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3],"float64"), bias=Tensor([0],"float64"), stride=list[2,1,], padding=tuple(1,2,), dilation=tuple(2,2,), )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([6, 0, 3, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([6, 1, 0, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([6, 1, 3, 0],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 4],"float64"), weight=Tensor([6, 1, 3, 3],"float64"), bias=Tensor([0],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 0, 3],"float32"), weight=Tensor([2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 0, 3],"float64"), weight=Tensor([2, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 4, 0],"float32"), weight=Tensor([2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 4, 0],"float64"), weight=Tensor([2, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 4, 3],"float32"), weight=Tensor([0, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 4, 3],"float32"), weight=Tensor([2, 0, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 4, 3],"float32"), weight=Tensor([2, 3, 0, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 4, 3],"float32"), weight=Tensor([2, 3, 3, 0],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3],"float32"), bias=Tensor([0],"float32"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 4, 3],"float64"), weight=Tensor([0, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 4, 3],"float64"), weight=Tensor([2, 0, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 4, 3],"float64"), weight=Tensor([2, 3, 0, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 4, 3],"float64"), weight=Tensor([2, 3, 3, 0],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 4, 3],"float64"), weight=Tensor([2, 3, 3, 3],"float64"), bias=Tensor([0],"float64"), stride=1, padding=0, data_format="NHWC", )
