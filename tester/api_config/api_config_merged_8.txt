paddle.Tensor.matmul(Tensor([0, 1],"float32"), Tensor([1, 0],"float32"), )
paddle.Tensor.matmul(Tensor([0, 1],"float64"), Tensor([1, 0],"float64"), )
paddle.matmul(Tensor([2, 11008],"int8"), Tensor([64, 11008],"int8"), False, True, )
paddle.matmul(Tensor([2, 64],"int8"), Tensor([192, 64],"int8"), False, True, )
paddle.matmul(Tensor([2, 64],"int8"), Tensor([22016, 64],"int8"), False, True, )
paddle.matmul(Tensor([2, 64],"int8"), Tensor([64, 64],"int8"), False, True, )
paddle.matmul(Tensor([464, 11008],"int8"), Tensor([64, 11008],"int8"), False, True, )
paddle.matmul(Tensor([464, 64],"int8"), Tensor([192, 64],"int8"), False, True, )
paddle.matmul(Tensor([464, 64],"int8"), Tensor([22016, 64],"int8"), False, True, )
paddle.matmul(Tensor([464, 64],"int8"), Tensor([64, 64],"int8"), False, True, )
paddle.Tensor.matmul(Tensor([0, 1],"float32"), Tensor([1, 0],"float32"), )
paddle.Tensor.matmul(Tensor([0, 1],"float64"), Tensor([1, 0],"float64"), )
paddle.matmul(Tensor([2, 11008],"int8"), Tensor([64, 11008],"int8"), False, True, )
paddle.matmul(Tensor([2, 64],"int8"), Tensor([192, 64],"int8"), False, True, )
paddle.matmul(Tensor([2, 64],"int8"), Tensor([22016, 64],"int8"), False, True, )
paddle.matmul(Tensor([2, 64],"int8"), Tensor([64, 64],"int8"), False, True, )
paddle.matmul(Tensor([464, 11008],"int8"), Tensor([64, 11008],"int8"), False, True, )
paddle.matmul(Tensor([464, 64],"int8"), Tensor([192, 64],"int8"), False, True, )
paddle.matmul(Tensor([464, 64],"int8"), Tensor([22016, 64],"int8"), False, True, )
paddle.matmul(Tensor([464, 64],"int8"), Tensor([64, 64],"int8"), False, True, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), Tensor([1],"float32"), output_size=Tensor([2],"int64"), )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 2, 2, 6],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=Tensor([2],"int32"), stride=2, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
